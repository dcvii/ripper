CREATE SCHEMA teva_ingestion;

CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_WEEKLY_SALES_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_identifier_type_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_PDRP_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_QUANTITY_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_title_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_DOD_QTY_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_business_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_bed_fact_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_DDD_CHANGE_LOG_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_spec_fact_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_class_of_trade_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_contact_affiltn_fact_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_fact_state_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DDD_WEEKLY_RETAIL_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_indentifier_cat_type_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_relationship_type_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_provider_affiliation_fact_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_row_id ;
CREATE SEQUENCE teva_ingestion.ext_anda_sales_row_id ;
CREATE SEQUENCE teva_ingestion.ext_ims_pbm_xref_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_financial_fact_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_cot_fact_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_business_detail_fact_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_bed_cluster_type_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_aco_type_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_bed_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_contact_affiltn_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_provider_affiliation_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_clinical_fact_state_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_cot_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_professional_detail_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_clinical_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_clinical_code_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_business_detail_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_professional_spec_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_indentifier_cat_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_affiliation_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_bed_cluster_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_professional_title_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_professional_specialty_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_indentifier_term_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_clinical_fact_national_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_aco_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_identifier_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CMOP_RX_DATA_TEVA_HIST_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_NTIS_src_row_id ;
CREATE SEQUENCE teva_ingestion.TW_ICS_ACCOUNTS_src_row_id ;
CREATE SEQUENCE teva_ingestion.TW_ICS_SALES_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TW_ICS_ACCOUNTS_src_row_id ;
CREATE SEQUENCE teva_ingestion.MS_MTHLY_RX_CNT_src_row_id ;
CREATE SEQUENCE teva_ingestion.TEST_FTP_FILE_CLASS_src_row_id ;
CREATE SEQUENCE teva_ingestion.unique_file_id_seq  CACHE      1 ;
CREATE SEQUENCE teva_ingestion.feed_id_seq  CACHE      1 ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHK_QTY_W_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHK_QTY_M_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHK_CNT_M_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_DOD_SALES_PD_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_SPECIALTY_PHARMACY_LOOKUPS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_I3_TYSABRI_RX_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_SPECIALTY_PHARMACY_CM_LKUP_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_REMS_FACILITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_I3_RX_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_445_CALENDAR_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_ims_sln_xref_kc_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_MM_RAM_TO_STATE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DYNAMIC_SEGMENT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_CALL_PLAN_TC_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AGGREGATED_ACTIVITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TOUCHPOINT_CALL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_EVENT_PRODUCT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_SPEAKER_CONTRACT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_EVENT_HOST_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_TOPIC_PRODUCT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_EVENT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_SPEAKER_TRAINING_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_EVENT_COUNT_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_tw_anda_sales_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TW_BIOLOGICS_HUB_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TW_ICS_ACCOUNT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_I3_BY_STRENGTH_RX_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_MS_DDD_DOLLARS_src_row_id ;
CREATE SEQUENCE teva_ingestion.C_BO_IMS_FLAG_src_row_id ;
CREATE SEQUENCE teva_ingestion.tvcmid_hco_demo_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_GOOGLE_ANALYTICS_360_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_INNOVID_VIEWABILITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DOUBLECLICK_DCM_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_INNOVID_DELIVERY_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_ims_copay_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PROGNOS_CINQAIR_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_CALL_DETAIL_GOALS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_FACT_src_row_id ;
CREATE SEQUENCE teva_ingestion.XX_TERR_ID_CHANGE_V_src_row_id ;
CREATE SEQUENCE teva_ingestion.XX_SALES_MV_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_call_goals_kc_src_row_id ;
CREATE SEQUENCE teva_ingestion.territories_src_row_id ;
CREATE SEQUENCE teva_ingestion.aud_associates_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_REDEMPTIONS_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_diplomat_enrollment_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PSR_REPORT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_MPD_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_TEVA_WK_BRIDGE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZIP_TO_TERR_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_MCK_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_QUANTITY_M_ADHOC_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TB_DS_ACCOUNTS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TB_CB_ACCOUNTS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TB_CB_TRANSACTIONS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_REMS_PHARMACY_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_diplomat_rx_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DDD_WEEKLY_RETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AXTRIA_TERRITORY_HIERARCHY_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_ims_plan_xref_accelerated_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_ims_pbm_xref_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_DRM45_M_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_CONTROL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CMOP_RX_DATA_TEVA_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TEVA_AHM_PARTICIPANT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TEVA_AHM_INTERACTIONS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_WEEKLY_SALES_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_CONTROL_W_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_contact_affiltn_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_business_detail_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_HCOS_ACO_DETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_cot_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_business_detail_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_bed_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_class_of_trade_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_title_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_indentifier_term_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_identifier_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_RH_DC_TRANS_DETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_RH_ZIP_TERR_SCRIPTS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_RH_ZIP_DC_TERR_SCRIPTS_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_ALTERNATE_NAME_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_MARKETING_CHANNEL_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_IMS_FLAG_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_RAW_NPI_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_RAW_DEA_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_PROFESSIONAL_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_RELATIONSHIP_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_SAMPLE_ELIGIBILITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_SOURCE_DETAILS_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_SPECIALTY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_TEVA_PAYER_WRKBK_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IDS_CALL2_SAMPLE_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_REP_ROSTER_VOD__C_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SURVEY_TARGET_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_KEY_MESSAGE_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_CALL_CLICKSTREAM_VOD__C_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_fact_national_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PCS_DDD_RETAIL_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_business_detail_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_detail_fact_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_detail_row_id ;
CREATE SEQUENCE teva_ingestion.ext_omnicare_sales_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_code_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_DOD_SALES_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_affiliation_type_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_F60Q_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_specialty_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_indentifier_term_type_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_identifier_fact_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DDD_MONTHLY_RETAIL_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TOUCHPOINT_CALL_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PCS_DDD_NONRETAIL_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_fact_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_business_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_financial_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_relationship_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_professional_detail_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CMOP_RX_DATA_TEVA_ADD_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_PDRP_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_KEY_MESSAGE_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.MS_MTHLY_RX_QTY_src_row_id ;
CREATE SEQUENCE teva_ingestion.MS_WKLY_RX_QTY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_DDD_CHANGE_LOG_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHK_CNT_W_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_DOD_SALES_MS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PCS_DDD_NONRETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PCS_DDD_RETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CLOZAPINE_UNIT_AP_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_tw_biologics_sales_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DA_PRINT_SPEND_DATA_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DA_BROADCAST_DATA_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PRIME_RX_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_SPEAKER_LICENSE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_BING_ADS_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_tw_biologics_dispense_src_row_id ;
CREATE SEQUENCE teva_ingestion.C_BO_HCE_RAW_DEA_src_row_id ;
CREATE SEQUENCE teva_ingestion.tvcmid_hcp_demo_src_row_id ;
CREATE SEQUENCE teva_ingestion.tvcmid_merges_src_row_id ;
CREATE SEQUENCE teva_ingestion.C_BO_HCP_DETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.tvcmid_xref_src_row_id ;
CREATE SEQUENCE teva_ingestion.c_bo_hce_alt_identifier_src_row_id ;
CREATE SEQUENCE teva_ingestion.C_BO_TEVA_FLAG_src_row_id ;
CREATE SEQUENCE teva_ingestion.c_bo_teva_sample_elig_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DOUBLECLICK_DS_CONVERSIONS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_OPTUMRX_V2_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_OPTUMRX_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_WHOLESALE_867_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_PRODUCT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DX_CLAIMS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CONNECTIVERX_COUPON_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PROGNOS_CINQAIR_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_KNIPPER_SAMPLES_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_REMS_PRESCRIBER_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SUGGESTION_FEEDBACK_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DDD_MONTHLY_RETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_ims_plan_xref_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_CALL_PLAN_TN_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CUSTOMER_FLAGS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_F60Q_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_OCHL_M_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_QUANTITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_CONTROL_M_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_CNT_M_src_row_id ;
CREATE SEQUENCE teva_ingestion.XPD_ADD_ON_DETAILS_src_row_id ;
CREATE SEQUENCE teva_ingestion.XPD_RESTART_DIFF_DETAILS_src_row_id ;
CREATE SEQUENCE teva_ingestion.XPD_DEMOGRAPHICS_src_row_id ;
CREATE SEQUENCE teva_ingestion.XPD_SWITCH_DETAILS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_PATIENT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_PRODUCT_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_REJECT_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_PROVIDER_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_PLAN_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_FACT_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_RELIANCE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_CALL_PLAN_TR_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FACTORY_SALES_852_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_TIERS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_DRUG_CLASS_THRPTC_AREA_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_COPAYS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_HEALTH_PLANS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_PBMS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_FORMULARIES_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_RESTRICTIONS_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_PREDOMINANT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_IMS_BRIDGE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_DRUGS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CC_TITRATION_DOSAGE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZIP_TO_TERR_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_OPTUMRX_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FR61_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TRIALCARD_COUPON_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TR_DDDMD_WEEKLY_UNITS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TR_DDDMD_WEEKLY_DOLLARS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_QTY_W_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_CNT_W_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_DRM45_W_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_relationship_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_aco_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_detail_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_HCOS_ACO_DETAIL_FACT_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_indentifier_cat_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_bed_cluster_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_detail_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_affiliation_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_specialty_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_fact_national_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_fact_state_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_professional_spec_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_business_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_HCOS_ACO_ORG_FACT_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_provider_affiliation_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_relationship_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_HCOS_ACO_PROFESSIONAL_RSTR_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_ims_copay_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_KNIPPER_SAMPLES_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_DEA_ADDRESS_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_HCO_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_COMMUNICATION_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_ALTERNATE_ID_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_ADDRESS_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_HCO_TEVA_FLAG_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_EMAIL_PREFERENCE_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_HCP_TEVA_FLAG_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_HCP_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_ADDRESS_LINK_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_LICENSE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ACTIVITY_LINE_ITEM_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ACTIVITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_DECILES_TVA__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSIGNMENTRULEITEM_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_ADDRESS_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SENT_EMAIL_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_ACCOUNT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SUGGESTION_TAG_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSOCIATION_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_PRODUCT_METRICS_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_GROUP_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_MEDICAL_INQUIRY_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_PRODUCT_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_CALL2_KEY_MESSAGE_VOD_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_REMOTE_MEETING_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_TERRITORY2MODEL_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSIGNMENTRULE_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SURVEY_QUESTION_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_TERRITORY2MODELHISTORY_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_CALL2_SAMPLE_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_TERRITORY2_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_AFFILIATION_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_ACCT_MERGE_HISTORY_VOD_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_CALL2_VOD__HISTORY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_RULETERRITORY2ASSOCIATION_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_CALL2_DETAIL_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_USER_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_ACCOUNTSHARE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_WHOLESALE_867_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_USERTERRITORY2ASSOCIATION_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SYNC_TRACKING_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_TSF_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_vv_approved_document__c_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_MEDICAL_EVENT_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_QUESTION_RESPONSE_VOD_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SUGGESTION_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_relationship_fact_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_bed_type_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_bed_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_business_detail_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_identifier_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_class_of_trade_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_relationship_type_src_row_id ;
CREATE SEQUENCE teva_ingestion.hcos_professional_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_DOD_SALES_src_row_id ;
CREATE SEQUENCE teva_ingestion.MS_WKLY_RX_CNT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_REMS_DISTRIBUTOR_src_row_id ;
CREATE SEQUENCE teva_ingestion.unique_file_id  CACHE      1 ;
CREATE SEQUENCE teva_ingestion.EXT_CAREMARK_RX2_MEDICARE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_DOD_QTY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CAREMARK_RX2_AOB_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_omnicare_sales_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_CALL_PLAN_TW_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_MANUAL_FCRS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_CGD_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DA_DIGITAL_SPEND_DATA_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_EVENT_EXPENSE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_ORGANIZATION_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_EVENT_SPEAKER_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_EVENT_ATTENDEE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AHM_SPEAKER_PROFILE_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_anda_sales_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_tw_hd_smith_sales_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_tw_biologics_referral_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_tw_biologics_missing_info_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TW_ICS_SALES_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_MS_DDD_QUANTITY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DOUBLECLICK_DS_ADS_src_row_id ;
CREATE SEQUENCE teva_ingestion.addresses_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_PLAN_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_FIA_REJECT_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_knipper_samples_shipped_src_row_id ;
CREATE SEQUENCE teva_ingestion.phones_src_row_id ;
CREATE SEQUENCE teva_ingestion.people_src_row_id ;
CREATE SEQUENCE teva_ingestion.XX_SALES_LOA_MV_src_row_id ;
CREATE SEQUENCE teva_ingestion.job_title_defs_src_row_id ;
CREATE SEQUENCE teva_ingestion.associates_src_row_id ;
CREATE SEQUENCE teva_ingestion.people_addresses_src_row_id ;
CREATE SEQUENCE teva_ingestion.people_phones_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_REDEMPTIONS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_RESTRICTIONS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_ACCOUNT_TARGETS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ONC_SALES_QUOTAS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_INTEGRAL_AD_SCIENCE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_CNT_W_ADHOC_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_QTY_W_ADHOC_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_DDD_DOLLARS_M_ADHOC_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TB_DS_TRANSACTIONS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_USERTERRITORY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_TERRITORY_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SUGGESTION_TAG_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SUGGESTION_SRC_row_id ;
CREATE SEQUENCE teva_ingestion.PS_KEY_CONTROLLER_LIST_V01_src_row_id ;
CREATE SEQUENCE teva_ingestion.PS_PROVIDER_OVERRIDE_DEFAULT_V01_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_QTY_M_ADHOC_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_CNT_M_ADHOC_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_ACCESS_MONITOR_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_CALL_PLAN_TP_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_MHJ_QTY_M_src_row_id ;
CREATE SEQUENCE teva_ingestion.ONC_SALES_ADJUSTMENT_LOAD_src_row_id ;
CREATE SEQUENCE teva_ingestion.XPD_CORE_METRICS_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_ddd_xfer_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_FTF_ACCOUNTS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_TEVA_AHM_EXPENSE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_OCHL_W_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IMS_SD809_TRANSACTION_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CONNECTIVERX_COUPON_V2_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_PSKW_GRANIX_COUPON_SAVINGS_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_bed_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_identifier_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_financial_fact_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_hcos_clinical_code_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_RH_COC_TRANS_DETAIL_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_RH_EV_TRANS_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_kc_zip_to_territory_src_row_id ;
CREATE SEQUENCE teva_ingestion.ext_time_off_territory_kc_veev_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_REGULATION_src_row_id ;
CREATE SEQUENCE teva_ingestion.MDM_MERGES_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_TEVA_PAYER_MASTER_DETALS_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_ZS_AFFINITY_MONITOR_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_IDS_CALL2_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_EMAIL_ACTIVITY_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_CALL2_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_USERROLE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_RECORDTYPE_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_SURVEY_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_CALL_GOAL_TVA__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_ASSESSMENT__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_CLM_PRESENTATION_VOD__C_src_row_id ;
CREATE SEQUENCE teva_ingestion.EXT_VV_TERRITORY2TYPE_SRC_row_id ;

CREATE TABLE teva_ingestion.EXT_AHM_EVENT_ATTENDEE_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    EVENT_NUMBER varchar(100),
    EMPLOYEE_ID varchar(100),
    CUSTOMER_ID varchar(100),
    ATTENDEE_ID varchar(100),
    ATTENDEE_LAST_NAME varchar(100),
    ATTENDEE_FIRST_NAME varchar(100),
    ATTENDEE_MIDDLE_NAME varchar(100),
    ATTENDEE_TITLE varchar(100),
    ATTENDEE_SPECIALTY varchar(100),
    ATTENDEE_DEGREE varchar(100),
    ATTENDEE_ADDRESS_LINE_1 varchar(100),
    ATTENDEE_ADDRESS_LINE_2 varchar(100),
    ATTENDEE_ADDRESS_LINE_3 varchar(100),
    ATTENDEE_ADDRESS_LINE_4 varchar(100),
    ATTENDEE_CITY varchar(100),
    ATTENDEE_STATE_PROVINCE varchar(100),
    ATTENDEE_POSTAL_CODE varchar(100),
    ATTENDEE_POSTAL_EXTENDED_CODE varchar(100),
    ATTENDEE_COUNTRY_CODE varchar(100),
    ATTENDEE_PHONE varchar(100),
    ATTENDEE_FAX varchar(100),
    ATTENDEE_EMAIL varchar(100),
    DEA_NUMBER varchar(100),
    IMS_NUMBER varchar(100),
    ME_NUMBER varchar(100),
    NPI_NUMBER varchar(100),
    ATTENDEE_CATEGORY_CODE varchar(100),
    ATTENDED varchar(100),
    MEAL varchar(100),
    NON_HCP_COUNT varchar(100),
    OTHER_HCP_COUNT varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_EVENT_EXPENSE_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    EVENT_NUMBER varchar(100),
    PAYMENT_ID varchar(100),
    EXPENSE_CATEGORY varchar(100),
    AMOUNT varchar(64),
    REMIT_TO_ID varchar(100),
    RECIPIENT_ID varchar(100),
    CHECK_NUMBER varchar(100),
    CHECK_DATE varchar(64),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_EVENT_HOST_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    EVENT_NUMBER varchar(100),
    EMPLOYEE_ID varchar(100),
    TERRITORY varchar(100),
    ORDINAL varchar(100),
    BUDGET_PERCENT varchar(100),
    BUDGET_POOL varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_EVENT_PRODUCT_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    EVENT_NUMBER varchar(100),
    PRODUCT_ID varchar(100),
    PRODUCT_NAME varchar(100),
    TOPIC_ID varchar(100),
    TOPIC_NAME varchar(250),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_EVENT_SPEAKER_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    EVENT_NUMBER varchar(100),
    EVENT_SPEAKER_STATUS varchar(100),
    SPEAKER_ID varchar(100),
    PRODUCT_ID varchar(100),
    TOPIC_ID varchar(100),
    CANCELLATION_REASON varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_ORGANIZATION_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    AHM_ORG_ID varchar(100),
    NAME varchar(100),
    ADDRESS_LINE_1 varchar(100),
    ADDRESS_LINE_2 varchar(100),
    ADDRESS_LINE_3 varchar(100),
    ADDRESS_LINE_4 varchar(100),
    CITY varchar(100),
    STATE_PROVINCE varchar(100),
    POSTAL_CODE varchar(100),
    POSTAL_EXTENDED_CODE varchar(100),
    COUNTRY_CODE varchar(100),
    PHONE varchar(100),
    FAX varchar(100),
    EMAIL varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_SPEAKER_CONTRACT_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    SPEAKER_ID varchar(100),
    CONTRACT_TYPE_CODE varchar(100),
    CONTRACT_TYPE_NAME varchar(100),
    CONTRACT_EFFECTIVE_DATE varchar(100),
    CONTRACT_EXPIRATION_DATE varchar(100),
    CONTRACT_SIGNED_DATE varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_SPEAKER_LICENSE_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    SPEAKER_ID varchar(100),
    STATE_CODE varchar(100),
    STATE_LICENSE_NUMBER varchar(100),
    STATE_LICENSE_EFFECTIVE_DATE varchar(64),
    STATE_LICENSE_EXPIRATION_DATE varchar(64),
    DEBARMENT_INDICATOR varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_SPEAKER_PROFILE_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    SPEAKER_ID varchar(100),
    FIRST_NAME varchar(100),
    LAST_NAME varchar(100),
    MIDDLE_NAME varchar(100),
    TITLE varchar(100),
    ADDRESS_LINE_1 varchar(100),
    ADDRESS_LINE_2 varchar(100),
    ADDRESS_LINE_3 varchar(100),
    ADDRESS_LINE_4 varchar(100),
    CITY varchar(100),
    STATE_PROVINCE varchar(100),
    POSTAL_CODE varchar(100),
    POSTAL_EXTENDED_CODE varchar(100),
    COUNTRY_CODE varchar(100),
    BUSINESS_PHONE varchar(100),
    BUSINESS_PHONE_EXTENSION varchar(100),
    HOME_PHONE varchar(100),
    MOBILE_PHONE varchar(100),
    BUSINESS_FAX varchar(100),
    HOME_FAX varchar(100),
    EMAIL varchar(100),
    SPECIALTY varchar(100),
    PERSONAL_SUFFIX varchar(100),
    DEGREE varchar(100),
    ME_NUMBER varchar(100),
    IMS_NUMBER varchar(100),
    DEA_NUMBER varchar(100),
    NPI_NUMBER varchar(100),
    CLINICAL_AFFILIATION varchar(100),
    CLINICAL_TITLE varchar(100),
    ACADEMIC_AFFILIATION varchar(100),
    OTHER_AFFILIATION varchar(100),
    FEDERAL_EMPLOYEE_INDICATOR varchar(100),
    STATE_EMPLOYEE_INDICATOR varchar(100),
    LOCAL_EMPLOYEE_INDICATOR varchar(100),
    FDA_DEBARMENT_INDICATOR varchar(100),
    OFAC_DEBARMENT_INDICATOR varchar(100),
    OIG_EXCLUSION_INDICATOR varchar(100),
    SPEAKER_BIOGRAPHY varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_SPEAKER_TRAINING_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    SPEAKER_ID varchar(100),
    TOPIC_ID varchar(100),
    EFFECTIVE_DATE varchar(64),
    EXPIRATION_DATE varchar(64),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_TOPIC_PRODUCT_src
(
    SOURCE_SYSTEM_NAME varchar(100),
    TOPIC_ID varchar(100),
    TOPIC_NAME varchar(250),
    PRODUCT_ID varchar(100),
    PRODUCT_NAME varchar(100),
    EFFECTIVE_DATE varchar(64),
    EXPIRATION_DATE varchar(64),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ANDA_SALES_src
(
    TRANSACTION_ID varchar(100),
    INVOICE_DATE varchar(10),
    PRODUCT_BRAND varchar(50),
    PRODUCT_NDC varchar(20),
    PRODUCT_DESC varchar(100),
    INVOICE_QTY varchar(64),
    INVOICE_UNITS varchar(64),
    INVOICE_COST varchar(64),
    INVOICE_PACK_COST varchar(64),
    INVOICE_UNIT_COST varchar(64),
    CONTRACT_PACK_COST varchar(64),
    CONTRACT_PURCHASES varchar(64),
    CONTRACT_NUMBER varchar(100),
    DISPENSING_LOCATION varchar(100),
    DL_ADDRESS_1 varchar(100),
    DL_ADDRESS_2 varchar(100),
    DL_CITY varchar(50),
    DL_STATE varchar(2),
    DL_ZIP varchar(5),
    DL_DEA_NUM varchar(20),
    DEPOT_LOCATION varchar(100),
    DEP_ADDRESS_1 varchar(100),
    DEP_ADDRESS_2 varchar(100),
    DEP_CITY varchar(50),
    DEP_STATE varchar(2),
    DEP_ZIP varchar(5),
    DEP_DEA_NUM varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src
(
    TRANS_TYPE varchar(1),
    ASI_TXN_ID varchar(20),
    ORIG_ASI_TXN_ID varchar(20),
    RX_NUM varchar(20),
    DATE_OF_FILL varchar(10),
    DATE_WRITTEN varchar(10),
    DAY_SUPPLY varchar(64),
    DAW varchar(2),
    NDC varchar(20),
    DRUG_DESC varchar(100),
    NEW_REFILL_CODE varchar(2),
    NUMBER_OF_REFILLS varchar(2),
    OTHER_COVERAGE_CODE varchar(10),
    GROUP_NUM varchar(18),
    MEMBER_ID varchar(20),
    PATIENT_GENDER varchar(1),
    PATIENT_AGE varchar(64),
    DATE_PROCESSED varchar(30),
    NABP varchar(15),
    PHM_NAME varchar(100),
    PHM_ADD1 varchar(100),
    PHM_ADD2 varchar(100),
    PHM_CITY varchar(50),
    PHM_STATE varchar(2),
    PHM_ZIP varchar(10),
    PHARMACY_NPI varchar(10),
    NPI varchar(20),
    DEA varchar(20),
    PHY_NAME varchar(50),
    PHY_FN varchar(50),
    PHY_MI varchar(50),
    PHY_LN varchar(50),
    PHY_SUFFIX varchar(50),
    PHY_PROF_DESG varchar(50),
    SPEC1 varchar(40),
    SPEC2 varchar(40),
    PHY_ADD1 varchar(100),
    PHY_ADD2 varchar(100),
    PHY_CITY varchar(50),
    PHY_STATE varchar(2),
    PHY_ZIP varchar(10),
    SUBMISSION_METHOD varchar(1),
    QUANTITY varchar(64),
    PATIENT_BENEFIT varchar(64),
    PATIENT_COPAY varchar(64),
    PATIENT_OOP varchar(64),
    PHARMACY_TRANSACTION_FEE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_REDEMPTIONS_src
(
    ASI_TXN_ID varchar(20),
    TERRITORY_NUM varchar(200),
    PROGRAM_NUM varchar(5),
    CLAIM_CERT_NUM varchar(12),
    RX_DATE varchar(15),
    NDC_CODE varchar(15),
    QUANTITY varchar(10),
    SUBMITTED_COST varchar(10),
    REBATE_AMOUNT varchar(10),
    MEMBER_CASH_EXPENSE varchar(10),
    PHARMACY_FEE varchar(10),
    TOTAL_AMOUNT_DUE varchar(10),
    DOB varchar(15),
    SEX varchar(1),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PRINCIPAL_PHYS_LAST_NAME varchar(50),
    PRINCIPAL_PHYS_FIRST_NAME varchar(50),
    PRINCIPAL_PHYS_DEA_NUM varchar(20),
    COMPANY_PHYS_LAST_NAME varchar(50),
    COMPANY_PHYS_FIRST_NAME varchar(50),
    COMPANY_PHYS_ADDRESS1 varchar(50),
    COMPANY_PHYS_ADDRESS2 varchar(50),
    COMPANY_PHYS_CITY varchar(50),
    COMPANY_PHYS_STATE varchar(2),
    COMPANY_PHYS_ZIP varchar(15),
    ASI_PHYS_LAST_NAME varchar(50),
    ASI_PHYS_FIRST_NAME varchar(50),
    ASI_PHYS_ADDRESS1 varchar(50),
    ASI_PHYS_ADDRESS2 varchar(50),
    ASI_PHYS_CITY varchar(50),
    ASI_PHYS_STATE varchar(2),
    ASI_PHYS_ZIP varchar(15),
    NPI varchar(64),
    OTHER_COVERAGE_CODE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_REDEMPTIONS_src
(
    ASI_TXN_ID varchar(20),
    TERRITORY_NUM varchar(200),
    PROGRAM_NUM varchar(5),
    CLAIM_CERT_NUM varchar(12),
    RX_DATE varchar(15),
    NDC_CODE varchar(15),
    QUANTITY varchar(10),
    DOB varchar(15),
    SEX varchar(1),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PRINCIPAL_PHYS_LAST_NAME varchar(50),
    PRINCIPAL_PHYS_FIRST_NAME varchar(50),
    PRINCIPAL_PHYS_DEA_NUM varchar(20),
    COMPANY_PHYS_LAST_NAME varchar(50),
    COMPANY_PHYS_FIRST_NAME varchar(50),
    COMPANY_PHYS_ADDRESS1 varchar(50),
    COMPANY_PHYS_ADDRESS2 varchar(50),
    COMPANY_PHYS_CITY varchar(50),
    COMPANY_PHYS_STATE varchar(2),
    COMPANY_PHYS_ZIP varchar(15),
    ASI_PHYS_LAST_NAME varchar(50),
    ASI_PHYS_FIRST_NAME varchar(50),
    ASI_PHYS_ADDRESS1 varchar(50),
    ASI_PHYS_ADDRESS2 varchar(50),
    ASI_PHYS_CITY varchar(50),
    ASI_PHYS_STATE varchar(2),
    ASI_PHYS_ZIP varchar(15),
    NPI varchar(64),
    OTHER_COVERAGE_CODE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    CLM_PRESENTATION_VOD__C varchar(18),
    KEY_MESSAGE_VOD__C varchar(18),
    DISPLAY_ORDER_VOD__C varchar(64),
    SUB_PRESENTATION_VOD__C varchar(18),
    MOBILE_ID_VOD__C varchar(100),
    EXTERNAL_ID_VOD__C varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CLM_PRESENTATION_VOD__C_src
(
    APPROVED_VOD__C varchar(5),
    COPIED_FROM_VOD__C varchar(20),
    COPY_DATE_VOD__C varchar(24),
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    DEFAULT_PRESENTATION_VOD__C varchar(5),
    GROUP_TO_SHARE_TO__C varchar(50),
    HIDDEN_VOD__C varchar(5),
    ID varchar(18),
    ISDELETED varchar(5),
    ISLOCKED varchar(5),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    MAYEDIT varchar(5),
    MOBILE_ID_VOD__C varchar(100),
    NAME varchar(80),
    ORIGINAL_RECORD_ID_VOD__C varchar(20),
    OWNERID varchar(18),
    PARENTID_VOD__C varchar(100),
    PRESENTATION_ID_VOD__C varchar(100),
    PRODUCT_VOD__C varchar(18),
    SYSTEMMODSTAMP varchar(24),
    TRAINING_VOD__C varchar(100),
    TYPE_VOD__C varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CLOZAPINE_UNIT_AP_src
(
    NDC_CODE varchar(20),
    DESCRIPTION varchar(100),
    UNIT_AP varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CMOP_RX_DATA_TEVA_src
(
    MONTH varchar(10),
    CMOP varchar(100),
    VISN varchar(2),
    STATION_NUMBER varchar(10),
    STATION varchar(50),
    VA_PRODUCT varchar(70),
    TOTAL_RXS varchar(64),
    CMOP_RXS varchar(64),
    TOTAL_QTY varchar(64),
    CMOP_QTY varchar(64),
    "30_DAY_RXS" varchar(64),
    ZIP varchar(5),
    ID varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_ACO_DETAIL_src
(
    ACO_DETAIL_ID varchar(64),
    ACO_DETAIL_CODE varchar(15),
    ACO_DETAIL_DESC varchar(100),
    ACO_DETAIL_GROUP_CODE varchar(15),
    ACO_DETAIL_GROUP_DESC varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_ACO_DETAIL_FACT_src
(
    IMS_ORG_ID varchar(11),
    ACO_TYPE_ID varchar(64),
    ACO_DETAIL_ID varchar(64),
    ACO_VAL varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_ACO_ORG_FACT_src
(
    IMS_ORG_ID varchar(11),
    ACO_TYPE_DESC varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_ACO_PROFESSIONAL_RSTR_src
(
    IMS_ORG_ID varchar(11),
    ACO_TYPE_ID varchar(64),
    HCE_ID_PRFSNL varchar(64),
    PROFESSIONAL_ID varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_ACO_TYPE_src
(
    ACO_TYPE_ID varchar(64),
    ACO_TYPE_DESC varchar(50),
    ACO_TYPE_CATG varchar(50),
    ACO_MODEL varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_AFFILIATION_TYPE_src
(
    AFFIL_TYPE_ID varchar(64),
    AFFIL_TYPE_CODE varchar(10),
    AFFIL_TYPE_DESC varchar(100),
    AFFIL_GROUP_CODE varchar(10),
    AFFIL_GROUP_DESC varchar(75),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_BED_CLUSTER_TYPE_src
(
    BED_CLUSTER_ID varchar(64),
    BED_CLUSTER_DESC varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_BED_FACT_src
(
    IMS_ORG_ID varchar(11),
    BED_ID varchar(64),
    LICENSE_BEDS varchar(64),
    CENSUS_BEDS varchar(64),
    STAFFED_BEDS varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_BED_TYPE_src
(
    BED_ID varchar(64),
    BED_CODE varchar(2),
    BED_DESC varchar(25),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_BUSINESS_src
(
    IMS_ORG_ID varchar(11),
    BUSINESS_NAME varchar(80),
    DBA_NAME varchar(80),
    CARE_OF_LOCATION varchar(80),
    ADDRESS_ID varchar(10),
    STF_ID varchar(10),
    PHYSICAL_ADDR_1 varchar(80),
    PHYSICAL_ADDR_2 varchar(80),
    PHYSICAL_CITY varchar(30),
    PHYSICAL_STATE varchar(2),
    PHYSICAL_ZIP varchar(15),
    POSTAL_ADDR_1 varchar(80),
    POSTAL_ADDR_2 varchar(80),
    POSTAL_CITY varchar(30),
    POSTAL_STATE varchar(2),
    POSTAL_ZIP varchar(15),
    PHONE varchar(14),
    FAX varchar(14),
    WEBSITE varchar(100),
    LATITUDE varchar(64),
    LONGITUDE varchar(64),
    OWNER_STATUS varchar(25),
    PROFIT_STATUS varchar(25),
    CMI varchar(64),
    PRIMARY_COT_ID varchar(64),
    COT_CLASSIFICATION_ID varchar(64),
    COT_CLASSIFICATION varchar(50),
    COT_FACILITY_TYPE_ID varchar(64),
    COT_FACILITY_TYPE varchar(50),
    COT_SPECIALTY_ID varchar(64),
    COT_SPECIALTY varchar(50),
    RECORD_TYPE varchar(2),
    BED_CLUSTER_ID varchar(64),
    TTL_LICENSE_BEDS varchar(64),
    TTL_CENSUS_BEDS varchar(64),
    TTL_STAFFED_BEDS varchar(64),
    TEACHING_HOSP char(1),
    COMMHOSP varchar(3),
    ALL_DDD varchar(150),
    ALL_NPI varchar(150),
    HIN varchar(13),
    DEA varchar(9),
    MPN varchar(6),
    MPN_ORDER varchar(1),
    MSA varchar(5),
    FIPS_STATE varchar(2),
    FIPS_COUNTY varchar(3),
    NUM_OF_PROVIDERS varchar(64),
    CORP_PARENT_IMS_ORG_ID varchar(11),
    CORP_PARENT_NAME varchar(80),
    OWNER_SUB_IMS_ORG_ID varchar(11),
    OWNER_SUB_NAME varchar(80),
    GPO_PHARMA_IMS_ORG_ID varchar(11),
    GPO_PHARMA_NAME varchar(80),
    GPO_MEDSURG_IMS_ORG_ID varchar(11),
    GPO_MEDSURG_NAME varchar(80),
    PHARMA_PROV_IMS_ORG_ID varchar(11),
    PHARMA_PROV_NAME varchar(80),
    FORMULARY varchar(20),
    ELECTRONIC_MED_REC varchar(20),
    EPRESCRIBE varchar(20),
    PAYPERFORM varchar(20),
    GENFIRST varchar(20),
    SREP_ACCESS varchar(20),
    DEACTIVATION_REASON varchar(25),
    REFERBACK_IMS_ORG_ID varchar(11),
    STATUS_INDICATOR varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_src
(
    DETAIL_ID varchar(64),
    DETAIL_CODE varchar(10),
    DETAIL_DESC varchar(100),
    DETAIL_GROUP_CODE varchar(10),
    DETAIL_GROUP_CODE_DESC varchar(75),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_FACT_src
(
    IMS_ORG_ID varchar(11),
    DETAIL_ID varchar(64),
    DETAIL_VALUE varchar(100),
    DETAIL_COUNT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_CLASS_OF_TRADE_src
(
    COT_ID varchar(64),
    CLASSIFICATION_ID varchar(64),
    CLASSIFICATION varchar(50),
    FACILITY_TYPE_ID varchar(64),
    FACILITY_TYPE varchar(50),
    SPECIALTY_ID varchar(64),
    SPECIALTY varchar(50),
    RECORD_TYPE varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_CLINICAL_CODE_src
(
    CODE_ID varchar(64),
    CLIN_CODE varchar(5),
    CLIN_CODE_DESC varchar(100),
    CCS_CODE varchar(64),
    CCS_DESC varchar(100),
    MDC_CODE varchar(64),
    MDC_DESC varchar(100),
    CODE_CATEGORY varchar(15),
    SURGICAL_CODE char(1),
    OR_CODE char(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_CLINICAL_FACT_src
(
    IMS_ORG_ID varchar(11),
    CODE_ID varchar(64),
    DATA_YEAR varchar(64),
    INPAT_VOL varchar(64),
    OUTPAT_VOL varchar(64),
    TTL_VOL varchar(64),
    DECILE varchar(64),
    AVG_LOS varchar(64),
    AVG_COS varchar(64),
    CODE_ORDER varchar(1),
    GPO_VIEW varchar(1),
    USE_FOR_AGG varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_CLINICAL_FACT_STATE_src
(
    CODE_ID varchar(64),
    DATA_YEAR varchar(64),
    STATE varchar(2),
    INPAT_VOL varchar(64),
    OUTPAT_VOL varchar(64),
    TTL_VOL varchar(64),
    AVG_LOS varchar(64),
    AVG_COS varchar(64),
    CODE_ORDER varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_CONTACT_AFFILTN_FACT_src
(
    IMS_ORG_ID varchar(11),
    HCE_ID_PRFSNL varchar(64),
    PROFESSIONAL_ID varchar(64),
    TITLE_GROUP_CODE varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_COT_FACT_src
(
    IMS_ORG_ID varchar(11),
    COT_ID varchar(64),
    COT_ORDER varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_FINANCIAL_FACT_src
(
    IMS_ORG_ID varchar(11),
    DATA_YEAR varchar(64),
    INPAT_REV varchar(64),
    OUTPAT_REV varchar(64),
    TTL_PAT_REV varchar(64),
    NET_PAT_REV varchar(64),
    OP_EXP varchar(64),
    OTH_EXP varchar(64),
    TTL_EXP varchar(64),
    SUPPLY_COST varchar(64),
    DRUG_COST varchar(64),
    TTL_SALARIES varchar(64),
    NET_INC_PAT varchar(64),
    NET_INC varchar(64),
    COST_PER_BED varchar(64),
    TTL_ASSETS varchar(64),
    FTE_EMP varchar(64),
    CURR_ASSETS varchar(64),
    CURR_LIAB varchar(64),
    FIX_ASSETS varchar(64),
    FRINGE_BENEFITS varchar(64),
    FUND_BAL varchar(64),
    GOV_APPR varchar(64),
    H_IN_REV varchar(64),
    L_T_LIAB varchar(64),
    NON_PAT_REV varchar(64),
    OTH_ASSETS varchar(64),
    OTH_INCOME varchar(64),
    H_OUT_REV varchar(64),
    TOT_LIAB varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_IDENTIFIER_FACT_src
(
    IMS_ORG_ID varchar(11),
    HCE_ID_PRFSNL varchar(64),
    PROFESSIONAL_ID varchar(64),
    IDENTIFIER_ID varchar(64),
    IDENTIFIER varchar(25),
    IDENTIFIER_ORDER varchar(1),
    IDENTIFIER_CATEGORY varchar(25),
    IDENTIFIER_STATE varchar(2),
    SRC_STRT_DT varchar(20),
    SRC_TRMTN_DT varchar(20),
    SRC_TRMTN_CD varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_IDENTIFIER_TYPE_src
(
    IDENTIFIER_ID varchar(64),
    IDENTIFIER_CODE varchar(10),
    IDENTIFIER_DESC varchar(75),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_INDENTIFIER_CAT_TYPE_src
(
    IDENTIFIER_ID varchar(64),
    IDENTIFIER_CATEGORY varchar(25),
    IDENTIFIER_CATEGORY_DESC varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_INDENTIFIER_TERM_TYPE_src
(
    IDENTIFIER_ID varchar(64),
    SRC_TRMTN_CD varchar(15),
    SRC_TRMTN_DESC varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_PROFESSIONAL_src
(
    HCE_ID_PRFSNL varchar(64),
    PROFESSIONAL_ID varchar(64),
    FIRST_NAME varchar(40),
    MIDDLE_NAME varchar(40),
    LAST_NAME varchar(80),
    GEN_SUFFIX varchar(15),
    DESIGNATION varchar(20),
    GENDER varchar(1),
    ROLE char(1),
    PRIMARY_SPEC varchar(50),
    SECONDARY_SPEC varchar(50),
    TERTIARY_SPEC varchar(50),
    PRIMARY_PROF_CODE varchar(5),
    PRIMARY_PROF_DESC varchar(50),
    IMS_ID varchar(7),
    UPIN varchar(6),
    ME varchar(10),
    ALL_DEA varchar(100),
    NPI varchar(10),
    STATUS_DESC varchar(40),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_PROFESSIONAL_DETAIL_src
(
    DETAIL_ID varchar(64),
    DETAIL_CODE varchar(10),
    DETAIL_DESC varchar(100),
    DETAIL_GROUP_CODE varchar(10),
    DETAIL_GROUP_DESC varchar(75),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_PROFESSIONAL_TITLE_src
(
    TITLE_GROUP_CODE varchar(10),
    TITLE_GROUP_DESC varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_RELATIONSHIP_FACT_src
(
    IMS_ORG_ID_PARENT varchar(11),
    IMS_ORG_ID_CHILD varchar(11),
    REL_ID varchar(64),
    REL_ORDER varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_HCOS_RELATIONSHIP_TYPE_src
(
    REL_ID varchar(64),
    REL_CODE varchar(10),
    REL_DESC varchar(50),
    REL_GROUP_CODE varchar(10),
    REL_GROUP_DESC varchar(50),
    REL_CATEGORY_CODE varchar(10),
    REL_CATEGORY_DESC varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_I3_RX_src
(
    FULL_NAME varchar(100),
    SPECIALTY varchar(50),
    RANK varchar(64),
    TOTAL varchar(64),
    AUBAGIO varchar(64),
    AVONEX varchar(64),
    BETASERON varchar(64),
    COPAXONE varchar(64),
    EXTAVIA varchar(64),
    GILENYA varchar(64),
    REBIF varchar(64),
    TECFIDERA varchar(64),
    MD_ADDR1 varchar(100),
    MD_ADDR2 varchar(100),
    MD_CITY varchar(50),
    MD_STATE varchar(2),
    MD_ZIP varchar(5),
    PRESCRIBER_NPI varchar(20),
    DNC_FLAG varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C_src
(
    ID varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IDS_CALL2_VOD__C_src
(
    ID varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_PBM_XREF_src
(
    PBM_NAME varchar(100),
    PAYER_PLAN_NUM varchar(10),
    XREF_TO_PAYER_PLAN_NUM varchar(10),
    IPD_ID varchar(10),
    IPD_TYPE varchar(10),
    PLAN_NAME varchar(100),
    PBM_NUM varchar(6),
    IMS_PROCESSOR_NUM varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_PLAN_XREF_src
(
    PAYER_NUM varchar(6),
    PAYER_NAME varchar(100),
    PLAN_NUM varchar(4),
    PAYER_PLAN_NUM varchar(10),
    PLAN_NAME varchar(100),
    MODEL varchar(10),
    CITY varchar(30),
    HQ_STATE varchar(2),
    OPERATING_STATE varchar(2),
    MONTHS_WITH_DATA varchar(4),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_PLAN_XREF_ACCELERATED_src
(
    PAYER_NUM varchar(6),
    PAYER_NAME varchar(100),
    PLAN_NUM varchar(4),
    PAYER_PLAN_NUM varchar(10),
    PLAN_NAME varchar(100),
    MODEL varchar(10),
    CITY varchar(30),
    HQ_STATE varchar(2),
    OPERATING_STATE varchar(2),
    MONTHS_WITH_DATA varchar(4),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_OMNICARE_SALES_src
(
    TRANSACTION_ID varchar(100),
    INVOICE_DATE varchar(10),
    PRODUCT_BRAND varchar(50),
    PRODUCT_NDC varchar(20),
    PRODUCT_DESC varchar(100),
    INVOICE_QTY varchar(64),
    INVOICE_UNITS varchar(64),
    INVOICE_COST varchar(64),
    INVOICE_PACK_COST varchar(64),
    INVOICE_UNIT_COST varchar(64),
    CONTRACT_PACK_COST varchar(64),
    CONTRACT_PURCHASES varchar(64),
    CONTRACT_NUMBER varchar(100),
    DISPENSING_LOCATION varchar(100),
    DL_ADDRESS_1 varchar(100),
    DL_ADDRESS_2 varchar(100),
    DL_CITY varchar(50),
    DL_STATE varchar(2),
    DL_ZIP varchar(10),
    DL_DEA_NUM varchar(20),
    DEPOT_LOCATION varchar(100),
    DEP_ADDRESS_1 varchar(100),
    DEP_ADDRESS_2 varchar(100),
    DEP_CITY varchar(50),
    DEP_STATE varchar(2),
    DEP_ZIP varchar(10),
    DEP_DEA_NUM varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    IMS_OUTLET_CODE varchar(10),
    IMS_FACILITY_NUMBER varchar(11),
    IMS_PRESCRIBER_NUMBER varchar(7),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(120),
    OUTLET_CITY varchar(40),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    FACILITY_PRESCRIBER_NAME varchar(100),
    FACILITY_PRESCRIBER_ADDRESS1 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS2 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS3 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS4 varchar(60),
    FACILITY_PRESCRIBER_CITY varchar(40),
    FACILITY_PRESCRIBER_STATE varchar(2),
    FACILITY_PRESCRIBER_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    IMS_OUTLET_CODE varchar(10),
    IMS_FACILITY_NUMBER varchar(11),
    IMS_PRESCRIBER_NUMBER varchar(7),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(120),
    OUTLET_CITY varchar(40),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    FACILITY_PRESCRIBER_NAME varchar(100),
    FACILITY_PRESCRIBER_ADDRESS1 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS2 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS3 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS4 varchar(60),
    FACILITY_PRESCRIBER_CITY varchar(40),
    FACILITY_PRESCRIBER_STATE varchar(2),
    FACILITY_PRESCRIBER_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    TERRITORY_NUM varchar(8),
    IMS_OUTLET_CODE varchar(10),
    SUBCATEGORY_CODE varchar(10),
    ALT_SEQ_NUM varchar(10),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(9),
    DATA_DATE varchar(64),
    DOL_MTH01 varchar(64),
    DOL_MTH02 varchar(64),
    DOL_MTH03 varchar(64),
    DOL_MTH04 varchar(64),
    DOL_MTH05 varchar(64),
    DOL_MTH06 varchar(64),
    DOL_MTH07 varchar(64),
    DOL_MTH08 varchar(64),
    DOL_MTH09 varchar(64),
    DOL_MTH10 varchar(64),
    DOL_MTH11 varchar(64),
    DOL_MTH12 varchar(64),
    DOL_MTH13 varchar(64),
    DOL_MTH14 varchar(64),
    DOL_MTH15 varchar(64),
    DOL_MTH16 varchar(64),
    DOL_MTH17 varchar(64),
    DOL_MTH18 varchar(64),
    DOL_MTH19 varchar(64),
    DOL_MTH20 varchar(64),
    DOL_MTH21 varchar(64),
    DOL_MTH22 varchar(64),
    DOL_MTH23 varchar(64),
    DOL_MTH24 varchar(64),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(30),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    IMS_OUTLET_CODE varchar(10),
    IMS_FACILITY_NUMBER varchar(11),
    IMS_PRESCRIBER_NUMBER varchar(7),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(120),
    OUTLET_CITY varchar(40),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    FACILITY_PRESCRIBER_NAME varchar(100),
    FACILITY_PRESCRIBER_ADDRESS1 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS2 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS3 varchar(60),
    FACILITY_PRESCRIBER_ADDRESS4 varchar(60),
    FACILITY_PRESCRIBER_CITY varchar(40),
    FACILITY_PRESCRIBER_STATE varchar(2),
    FACILITY_PRESCRIBER_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PCS_DDD_NONRETAIL_src
(
    CLIENT_NUM varchar(2),
    REPORT_NUM varchar(3),
    TERRITORY_NUM varchar(8),
    OUTLET_CODE varchar(8),
    SUBCATEGORY_CODE varchar(2),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(3),
    MTH_YYYYMM varchar(6),
    QTY_MTH01 varchar(64),
    QTY_MTH02 varchar(64),
    QTY_MTH03 varchar(64),
    QTY_MTH04 varchar(64),
    QTY_MTH05 varchar(64),
    QTY_MTH06 varchar(64),
    QTY_MTH07 varchar(64),
    QTY_MTH08 varchar(64),
    QTY_MTH09 varchar(64),
    QTY_MTH10 varchar(64),
    QTY_MTH11 varchar(64),
    QTY_MTH12 varchar(64),
    QTY_MTH13 varchar(64),
    QTY_MTH14 varchar(64),
    QTY_MTH15 varchar(64),
    QTY_MTH16 varchar(64),
    QTY_MTH17 varchar(64),
    QTY_MTH18 varchar(64),
    QTY_MTH19 varchar(64),
    QTY_MTH20 varchar(64),
    QTY_MTH21 varchar(64),
    QTY_MTH22 varchar(64),
    QTY_MTH23 varchar(64),
    QTY_MTH24 varchar(64),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(30),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PCS_DDD_RETAIL_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    TERRITORY_NUM varchar(10),
    OUTLET_ZIP varchar(10),
    SRA3 varchar(10),
    SRA4 varchar(10),
    CATEGORY_CODE varchar(2),
    PRODUCT_GROUP varchar(9),
    MTH_YYYYMM varchar(8),
    QTY_MTH01 varchar(64),
    QTY_MTH02 varchar(64),
    QTY_MTH03 varchar(64),
    QTY_MTH04 varchar(64),
    QTY_MTH05 varchar(64),
    QTY_MTH06 varchar(64),
    QTY_MTH07 varchar(64),
    QTY_MTH08 varchar(64),
    QTY_MTH09 varchar(64),
    QTY_MTH10 varchar(64),
    QTY_MTH11 varchar(64),
    QTY_MTH12 varchar(64),
    QTY_MTH13 varchar(64),
    QTY_MTH14 varchar(64),
    QTY_MTH15 varchar(64),
    QTY_MTH16 varchar(64),
    QTY_MTH17 varchar(64),
    QTY_MTH18 varchar(64),
    QTY_MTH19 varchar(64),
    QTY_MTH20 varchar(64),
    QTY_MTH21 varchar(64),
    QTY_MTH22 varchar(64),
    QTY_MTH23 varchar(64),
    QTY_MTH24 varchar(64),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PRIME_RX_src
(
    PHARMACY_NAME varchar(100),
    MD_LAST_NAME varchar(50),
    MD_FIRST_NAME varchar(50),
    PRESCRIBER_NPI varchar(20),
    MD_ADDR1 varchar(100),
    MD_ADDR2 varchar(100),
    MD_CITY varchar(50),
    MD_STATE varchar(2),
    MD_ZIP varchar(5),
    MD_PHONE varchar(50),
    SHIP_DATE varchar(25),
    NDC_NUMBER varchar(13),
    PRODUCT_NAME varchar(100),
    FILL_NUMBER varchar(64),
    QTY varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_REMS_FACILITY_src
(
    PROGRAM_ID varchar(64),
    PROGRAM_NAME varchar(48),
    CHANNEL_INITIATED varchar(64),
    ENROLLMENT_ID varchar(20),
    HEALTHCARE_FACILITY_TYPE varchar(64),
    SITE_NAME varchar(200),
    ADDRESS_1 varchar(40),
    ADDRESS_2 varchar(40),
    CITY varchar(40),
    STATE varchar(2),
    ZIP_CODE varchar(5),
    FIRST_NAME varchar(36),
    MIDDLE_NAME varchar(36),
    LAST_NAME varchar(40),
    STATUS_DESCRIPTION varchar(60),
    IN_PROGRESS_STEP varchar(40),
    PHONE_NUMBER varchar(10),
    EFFECTIVE_DATE varchar(10),
    EXPIRATION_DATE varchar(10),
    NCPDP varchar(20),
    NPI varchar(20),
    DEA varchar(20),
    OBSOLESCENCE_DATE varchar(10),
    OBSOLESCENCE_REASON varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_REMS_PHARMACY_src
(
    PROGRAM_ID varchar(64),
    PROGRAM_NAME varchar(48),
    CHANNEL varchar(20),
    ENROLLMENT_ID varchar(20),
    PHARMACY_TYPE varchar(20),
    PHARMACY_NAME varchar(200),
    ADDRESS1 varchar(40),
    ADDRESS2 varchar(40),
    CITY varchar(40),
    STATE varchar(2),
    ZIP varchar(5),
    FIRST_NAME varchar(36),
    MIDDLE_NAME varchar(36),
    LAST_NAME varchar(40),
    STATUS varchar(60),
    IN_PROGRESS_STEP varchar(40),
    PHONE varchar(10),
    EFFECTIVE_DATE varchar(10),
    EXPIRATION_DATE varchar(10),
    NCPDP varchar(20),
    NPI varchar(20),
    DEA_NUM varchar(20),
    LICENSE_NUMBER varchar(20),
    OBSOLESCENCE_DATE varchar(10),
    OBSOLESCENCE_REASON varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_REMS_PRESCRIBER_src
(
    PROGRAM_ID varchar(64),
    PROGRAM_NAME varchar(48),
    CHANNEL varchar(20),
    ENROLLMENT_ID varchar(20),
    FIRST_NAME varchar(36),
    MIDDLE_NAME varchar(36),
    LAST_NAME varchar(40),
    CREDENTIAL varchar(40),
    SPECIALTY varchar(64),
    SITE_NAME varchar(200),
    ADDRESS1 varchar(40),
    ADDRESS2 varchar(40),
    CITY varchar(40),
    STATE varchar(2),
    ZIP varchar(5),
    STATUS varchar(60),
    IN_PROGRESS_STEP varchar(40),
    PHONE varchar(10),
    EFFECTIVE_DATE varchar(10),
    EXPIRATION_DATE varchar(10),
    NPI varchar(20),
    DEA_NUM varchar(20),
    OBSOLESCENCE_DATE varchar(10),
    OBSOLESCENCE_REASON varchar(64),
    PPAF_COUNT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_SPECIALTY_PHARMACY_CM_LKUP_src
(
    SOURCE_KEY varchar(50),
    SOURCE_NAME varchar(50),
    FILE_NAME varchar(50),
    ROWID_OBJECT_MATCHED varchar(14),
    RULE_NO varchar(64),
    ROWID_MATCH_RULE char(14),
    AUTOMERGE_IND varchar(64),
    CREATOR varchar(50),
    CREATE_DATE varchar(25),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_SPECIALTY_PHARMACY_LOOKUPS_src
(
    SOURCE_ID varchar(50),
    LAST_NAME varchar(25),
    FIRST_NAME varchar(25),
    NPI varchar(10),
    ADDRESS1 varchar(50),
    ADDRESS2 varchar(50),
    CITY varchar(30),
    STATE varchar(2),
    ZIP varchar(10),
    IMS_ID varchar(7),
    "MATCH" varchar(20),
    HCE_ID varchar(8),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TB_CB_TRANSACTIONS_src
(
    ACCOUNT_ID varchar(100),
    LOCATION_ID varchar(100),
    SHIPMENT_DATE varchar(10),
    NDC_CODE varchar(20),
    PRODUCT_NAME varchar(100),
    CONTRACT_ID varchar(100),
    CHARGEBACK_UNITS varchar(64),
    CHARGEBACK_DOLLARS varchar(64),
    RECEIPT_DATE varchar(10),
    DEBIT_MEMO_NUM varchar(30),
    CREDIT_MEMO_DATE varchar(10),
    CREDIT_MEMO_NUM varchar(30),
    SETTLEMENT_DATE varchar(10),
    CONTRACT_PRICE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TB_DS_ACCOUNTS_src
(
    ACCOUNT_ID varchar(100),
    LOCATION_ID varchar(100),
    ACCOUNT_NAME varchar(100),
    ACCOUNT_CLASS varchar(100),
    ADDRESS_1 varchar(100),
    ADDRESS_2 varchar(100),
    CITY varchar(50),
    STATE varchar(50),
    ZIP varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TB_DS_TRANSACTIONS_src
(
    ACCOUNT_ID varchar(100),
    LOCATION_ID varchar(100),
    SHIPMENT_DATE varchar(10),
    NDC_CODE varchar(20),
    PRODUCT_NAME varchar(100),
    TRANSACTION_TYPE varchar(100),
    DIRECT_SALES_UNITS varchar(64),
    DIRECT_SALES_DOLLARS varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C_src
(
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    DATE_VOD__C varchar(10),
    HOURS_OFF_VOD__C varchar(64),
    HOURS_VOD__C varchar(64),
    ID varchar(18),
    ISDELETED varchar(5),
    ISLOCKED varchar(5),
    LASTACTIVITYDATE varchar(10),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    MAYEDIT varchar(5),
    MOBILE_ID_VOD__C varchar(100),
    NAME varchar(80),
    OWNERID varchar(18),
    REASON_VOD__C varchar(100),
    START_TIME_VOD__C varchar(8),
    STATUS_VOD__C varchar(20),
    SYSTEMMODSTAMP varchar(24),
    TERRITORY_VOD__C varchar(100),
    TIME_VOD__C varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TOUCHPOINT_CALL_src
(
    CALL_ID varchar(64),
    CALL_ATTEMPT_ID varchar(64),
    TOUCHPOINT_ID varchar(64),
    CLIENT_ID varchar(20),
    IMS_ID varchar(10),
    FIRST_NAME varchar(50),
    LAST_NAME varchar(50),
    CALL_TYPE varchar(100),
    CALL_DATE varchar(64),
    STATUS_CODE varchar(10),
    STATUS_DESCRIPTION varchar(100),
    REP_ID varchar(64),
    REP_FIRST_NAME varchar(50),
    REP_LAST_NAME varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_src
(
    CALL_ID varchar(64),
    CALL_ATTEMPT_ID varchar(64),
    PRESENTATION_ID varchar(64),
    PRODUCT varchar(50),
    "POSITION" varchar(64),
    ITEM_TYPE varchar(50),
    ITEM_DESCRIPTION varchar(100),
    QUANTITY varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TW_BIOLOGICS_SALES_src
(
    MRN varchar(20),
    ORDER_NO varchar(20),
    REFERRAL_DATE varchar(20),
    REFERRAL_SOURCE varchar(30),
    REFERRAL_METHOD varchar(30),
    REFERRAL_TYPE varchar(30),
    PATIENT_AUTH varchar(10),
    STATUS varchar(30),
    PLACEMENT_DATE varchar(20),
    BILLING_METHOD varchar(30),
    ICD_9 varchar(10),
    PHY_FIRST_NAME varchar(50),
    PHY_LAST_NAME varchar(50),
    PRACTICE_NAME varchar(100),
    NPI varchar(20),
    TAX_ID varchar(20),
    PHY_NETWORK_STATUS varchar(30),
    PHY_STREET varchar(100),
    PHY_CITY varchar(50),
    PHY_STATE varchar(2),
    PHY_ZIP varchar(10),
    PHY_PHONE varchar(20),
    PHY_FAX varchar(20),
    PAYOR varchar(50),
    PAYOR_TYPE varchar(30),
    PAYOR_PHONE varchar(20),
    PAYOR_CONTACT varchar(100),
    PAYOR_REFERENCE varchar(30),
    BENEFIT_TYPE varchar(30),
    PAYOR_RANK varchar(20),
    EFFECTIVE_DATE varchar(20),
    DEDUCTIBLE varchar(20),
    DEDUCTIBLE_MET varchar(10),
    AMOUNT_MET varchar(20),
    OOP_MAX varchar(20),
    OOP_MET varchar(10),
    LIFETIME_MAX varchar(10),
    ANNUAL_BENEFIT_CAP varchar(10),
    LIMITATIONS_RESTRICTIONS varchar(10),
    ASSIGNMENT_ALLOWED varchar(10),
    CO_INSURANCE varchar(20),
    COPAY varchar(20),
    OFFICE_VISIT_COPAY varchar(20),
    FOLLOW_UP_COVERAGE varchar(30),
    FOLLOW_UP_COPAY varchar(20),
    J7300_COVERAGE_STATUS varchar(30),
    J7300_COVERAGE_TYPE varchar(30),
    "58300_COVERAGE_STATUS" varchar(30),
    "58300_COVERAGE_TYPE" varchar(30),
    PA_REQUIRED varchar(10),
    PA_TYPE varchar(30),
    PA_CONTACT varchar(50),
    PA_PHONE varchar(20),
    PA_FAX varchar(20),
    PA_TAT varchar(20),
    J7300_REIMBURSEMENT varchar(50),
    "58300_INSERTION" varchar(50),
    PBM varchar(30),
    PBM_PHONE varchar(20),
    PREFERRED_PHARMACY varchar(50),
    PHARMACY_PHONE varchar(20),
    PHARMACY_FAX varchar(20),
    SP_COPAY varchar(20),
    SP_NAME varchar(50),
    TRIAGE_DATE varchar(20),
    INVOICE_NUMBER varchar(20),
    SP_SHIP_DATE varchar(30),
    SHIP_TO_NAME varchar(100),
    SHIP_TO_ADDRESS_1 varchar(50),
    SHIP_TO_ADDRESS_2 varchar(50),
    SHIP_TO_CITY varchar(30),
    SHIP_TO_STATE varchar(2),
    SHIP_TO_ZIP varchar(10),
    CALL_DATE_1 varchar(20),
    PT_REACHED_1 varchar(10),
    WHO_WAS_REACHED_1 varchar(50),
    CALL_DATE_2 varchar(20),
    PT_REACHED_2 varchar(10),
    WHO_WAS_REACHED_2 varchar(50),
    CALL_DATE_3 varchar(20),
    PT_REACHED_3 varchar(10),
    WHO_WAS_REACHED_3 varchar(50),
    KEEPING_APPT varchar(10),
    ALTERNATE_METHOD varchar(30),
    ADDITIONAL_QUESTIONS varchar(10),
    TRANSFERRED varchar(10),
    TRANSFER_DESTINATION varchar(50),
    DISCHARGE_REASON varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TW_HD_SMITH_SALES_src
(
    MONTH varchar(20),
    ORDER_DATE varchar(20),
    SHIP_DATE varchar(20),
    ORDER_NUM varchar(20),
    INVOICE_NUM varchar(20),
    ORDER_TYPE varchar(20),
    ORDER_CATEGORY varchar(20),
    RETURN_FLAG varchar(10),
    SHIP_TO_CUSTOMER_NUM varchar(10),
    SHIP_TO_CUSTOMER_NAME varchar(100),
    SHIP_TO_ADDRESS_1 varchar(100),
    SHIP_TO_ADDRESS_2 varchar(100),
    SHIP_TO_CITY varchar(50),
    SHIP_TO_STATE varchar(20),
    SHIP_TO_ZIP varchar(10),
    BILL_TO_CUSTOMER_NUM varchar(10),
    BILL_TO_CUSTOMER_NAME varchar(100),
    BILL_TO_ADDRESS_1 varchar(100),
    BILL_TO_ADDRESS_2 varchar(100),
    BILL_TO_CITY varchar(50),
    BILL_TO_STATE varchar(20),
    BILL_TO_ZIP varchar(10),
    CLASS_OF_TRADE varchar(20),
    CUSTOMER_DEA_NUM varchar(20),
    CUSTOMER_340B_NUM varchar(20),
    HEALTH_INDUSTRY_NUM varchar(20),
    STATE_LICENSE_NUM varchar(20),
    PLANT varchar(100),
    VENDOR varchar(100),
    MATERIAL_NUM varchar(20),
    MATERIAL_DESC varchar(100),
    PACK_SIZE varchar(64),
    NDC varchar(20),
    CONTRACT_NUM varchar(20),
    QUANTITY varchar(64),
    VALUE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.C_BO_TEVA_FLAG_src
(
    ROWID_OBJECT char(14),
    CREATOR varchar(50),
    CREATE_DATE varchar(64),
    UPDATED_BY varchar(50),
    LAST_UPDATE_DATE varchar(64),
    CONSOLIDATION_IND varchar(64),
    DELETED_IND varchar(64),
    DELETED_BY varchar(50),
    DELETED_DATE varchar(64),
    LAST_ROWID_SYSTEM char(14),
    DIRTY_IND varchar(64),
    INTERACTION_ID varchar(64),
    HUB_STATE_IND varchar(64),
    CM_DIRTY_IND varchar(64),
    FLAG_TYPE varchar(10),
    FLAG_VALUE varchar(50),
    EFFECTIVE_DATE varchar(64),
    HCP_DETAIL_ID char(14),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DDD_DOD_QTY_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    filler_01 varchar(128),
    OUTLET_CODE varchar(8),
    SUBCATEGORY_CODE varchar(2),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(3),
    MTH_YYYYMM varchar(6),
    QTY_MTH01 varchar(64),
    QTY_MTH02 varchar(64),
    QTY_MTH03 varchar(64),
    QTY_MTH04 varchar(64),
    QTY_MTH05 varchar(64),
    QTY_MTH06 varchar(64),
    QTY_MTH07 varchar(64),
    QTY_MTH08 varchar(64),
    QTY_MTH09 varchar(64),
    QTY_MTH10 varchar(64),
    QTY_MTH11 varchar(64),
    QTY_MTH12 varchar(64),
    QTY_MTH13 varchar(64),
    QTY_MTH14 varchar(64),
    QTY_MTH15 varchar(64),
    QTY_MTH16 varchar(64),
    QTY_MTH17 varchar(64),
    QTY_MTH18 varchar(64),
    QTY_MTH19 varchar(64),
    QTY_MTH20 varchar(64),
    QTY_MTH21 varchar(64),
    QTY_MTH22 varchar(64),
    QTY_MTH23 varchar(64),
    QTY_MTH24 varchar(64),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(30),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src
(
    TRANS_TYPE varchar(1),
    ASI_TXN_ID varchar(20),
    ORIG_ASI_TXN_ID varchar(20),
    RX_NUM varchar(50),
    RX_DATE varchar(15),
    DATE_WRITTEN varchar(15),
    DAYS_SUPPLY varchar(64),
    NDC_CODE varchar(15),
    DAW varchar(64),
    DRUG_NAME varchar(50),
    DRUG_DESC varchar(50),
    NEW_REFILL varchar(64),
    QUANTITY varchar(64),
    REFILLS varchar(64),
    OTHER_COVERAGE_CODE varchar(64),
    GROUP_NUM varchar(5),
    COUPON_NUM varchar(20),
    SEX varchar(1),
    AGE_AT_REDEMPTION varchar(15),
    PHARMACY_PROCESS_DATE varchar(15),
    PHARMACY_CHAIN_NUM varchar(15),
    NABP varchar(15),
    PHARMACY_CHAIN varchar(50),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS varchar(100),
    PHARMACY_ADDRESS2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PHARMACY_PHONE varchar(25),
    PHARMACY_NPI_NUM varchar(25),
    PRINCIPLE_PHYS_DEA_NUM varchar(20),
    PHYS_NPI varchar(64),
    PHYSICIAN_NAME varchar(100),
    ASI_PHYS_ADDRESS1 varchar(50),
    ASI_PHYS_ADDRESS2 varchar(50),
    ASI_PHYS_CITY varchar(50),
    ASI_PHYS_STATE varchar(2),
    ASI_PHYS_ZIP varchar(15),
    REBATE_AMOUNT varchar(10),
    MEMBER_CASH_EXPENSE varchar(10),
    SUBMITTED_COST varchar(10),
    PHARMACY_FEE varchar(10),
    TOTAL_AMOUNT_DUE varchar(10),
    CALC_AWP varchar(10),
    CREATE_DATE varchar(15),
    OCC_PAYMENT_TYPE varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DDD_MONTHLY_RETAIL_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    sra_1 varchar(255),
    ZIP varchar(5),
    sra_3 varchar(255),
    sra_4 varchar(255),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(9),
    DATA_DATE varchar(64),
    QTY_MTH01 varchar(64),
    QTY_MTH02 varchar(64),
    QTY_MTH03 varchar(64),
    QTY_MTH04 varchar(64),
    QTY_MTH05 varchar(64),
    QTY_MTH06 varchar(64),
    QTY_MTH07 varchar(64),
    QTY_MTH08 varchar(64),
    QTY_MTH09 varchar(64),
    QTY_MTH10 varchar(64),
    QTY_MTH11 varchar(64),
    QTY_MTH12 varchar(64),
    QTY_MTH13 varchar(64),
    QTY_MTH14 varchar(64),
    QTY_MTH15 varchar(64),
    QTY_MTH16 varchar(64),
    QTY_MTH17 varchar(64),
    QTY_MTH18 varchar(64),
    QTY_MTH19 varchar(64),
    QTY_MTH20 varchar(64),
    QTY_MTH21 varchar(64),
    QTY_MTH22 varchar(64),
    QTY_MTH23 varchar(64),
    QTY_MTH24 varchar(64),
    CITY varchar(25),
    STATE varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DDD_WEEKLY_RETAIL_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    ZIP varchar(5),
    sra_2 varchar(255),
    sra_3 varchar(255),
    sra_4 varchar(255),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(9),
    DATA_DATE varchar(64),
    QTY_WK01 varchar(64),
    QTY_WK02 varchar(64),
    QTY_WK03 varchar(64),
    QTY_WK04 varchar(64),
    QTY_WK05 varchar(64),
    QTY_WK06 varchar(64),
    QTY_WK07 varchar(64),
    QTY_WK08 varchar(64),
    QTY_WK09 varchar(64),
    QTY_WK10 varchar(64),
    QTY_WK11 varchar(64),
    QTY_WK12 varchar(64),
    QTY_WK13 varchar(64),
    QTY_WK14 varchar(64),
    QTY_WK15 varchar(64),
    QTY_WK16 varchar(64),
    QTY_WK17 varchar(64),
    QTY_WK18 varchar(64),
    QTY_WK19 varchar(64),
    QTY_WK20 varchar(64),
    QTY_WK21 varchar(64),
    QTY_WK22 varchar(64),
    QTY_WK23 varchar(64),
    QTY_WK24 varchar(64),
    QTY_WK25 varchar(64),
    QTY_WK26 varchar(64),
    QTY_WK27 varchar(64),
    QTY_WK28 varchar(64),
    QTY_WK29 varchar(64),
    QTY_WK30 varchar(64),
    QTY_WK31 varchar(64),
    QTY_WK32 varchar(64),
    QTY_WK33 varchar(64),
    QTY_WK34 varchar(64),
    QTY_WK35 varchar(64),
    QTY_WK36 varchar(64),
    QTY_WK37 varchar(64),
    QTY_WK38 varchar(64),
    QTY_WK39 varchar(64),
    QTY_WK40 varchar(64),
    QTY_WK41 varchar(64),
    QTY_WK42 varchar(64),
    QTY_WK43 varchar(64),
    QTY_WK44 varchar(64),
    QTY_WK45 varchar(64),
    QTY_WK46 varchar(64),
    QTY_WK47 varchar(64),
    QTY_WK48 varchar(64),
    QTY_WK49 varchar(64),
    QTY_WK50 varchar(64),
    QTY_WK51 varchar(64),
    QTY_WK52 varchar(64),
    QTY_WK53 varchar(64),
    QTY_WK54 varchar(64),
    QTY_WK55 varchar(64),
    QTY_WK56 varchar(64),
    QTY_WK57 varchar(64),
    QTY_WK58 varchar(64),
    QTY_WK59 varchar(64),
    QTY_WK60 varchar(64),
    QTY_WK61 varchar(64),
    QTY_WK62 varchar(64),
    QTY_WK63 varchar(64),
    QTY_WK64 varchar(64),
    QTY_WK65 varchar(64),
    QTY_WK66 varchar(64),
    QTY_WK67 varchar(64),
    QTY_WK68 varchar(64),
    QTY_WK69 varchar(64),
    QTY_WK70 varchar(64),
    QTY_WK71 varchar(64),
    QTY_WK72 varchar(64),
    QTY_WK73 varchar(64),
    QTY_WK74 varchar(64),
    QTY_WK75 varchar(64),
    QTY_WK76 varchar(64),
    QTY_WK77 varchar(64),
    QTY_WK78 varchar(64),
    QTY_WK79 varchar(64),
    QTY_WK80 varchar(64),
    QTY_WK81 varchar(64),
    QTY_WK82 varchar(64),
    QTY_WK83 varchar(64),
    QTY_WK84 varchar(64),
    QTY_WK85 varchar(64),
    QTY_WK86 varchar(64),
    QTY_WK87 varchar(64),
    QTY_WK88 varchar(64),
    QTY_WK89 varchar(64),
    QTY_WK90 varchar(64),
    QTY_WK91 varchar(64),
    QTY_WK92 varchar(64),
    QTY_WK93 varchar(64),
    QTY_WK94 varchar(64),
    QTY_WK95 varchar(64),
    QTY_WK96 varchar(64),
    QTY_WK97 varchar(64),
    QTY_WK98 varchar(64),
    QTY_WK99 varchar(64),
    QTY_WK100 varchar(64),
    QTY_WK101 varchar(64),
    QTY_WK102 varchar(64),
    QTY_WK103 varchar(64),
    QTY_WK104 varchar(64),
    QTY_WK105 varchar(64),
    QTY_WK106 varchar(64),
    CITY varchar(25),
    STATE varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_hcos_clinical_fact_national_src
(
    CODE_ID varchar(64),
    DATA_YEAR varchar(64),
    INPAT_VOL varchar(64),
    OUTPAT_VOL varchar(64),
    TTL_VOL varchar(64),
    AVG_LOS varchar(64),
    AVG_COS varchar(64),
    TREND varchar(64),
    CODE_ORDER varchar(4),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_hcos_professional_detail_fact_src
(
    HCE_ID_PRFSNL varchar(64),
    PROFESSIONAL_ID varchar(64),
    DETAIL_ID varchar(64),
    DETAIL_VALUE varchar(400),
    DETAIL_COUNT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_hcos_professional_spec_fact_src
(
    HCE_ID_PRFSNL varchar(64),
    PROFESSIONAL_ID varchar(64),
    SPEC_CODE varchar(20),
    SPEC_RANKING varchar(64),
    SPEC_RANK_DESC varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_hcos_professional_specialty_src
(
    SPEC_CODE varchar(20),
    SPEC_DESC varchar(200),
    SPEC_SUB_GROUP_CODE varchar(64),
    SPEC_SUB_GROUP_DESC varchar(200),
    SPEC_GROUP_CODE varchar(20),
    SPEC_GROUP_DESC varchar(200),
    ALTERNATE_SUB_GROUP_CODE varchar(64),
    ALTERNATE_SUB_GROUP_DESC varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_hcos_provider_affiliation_fact_src
(
    IMS_ORG_ID varchar(44),
    HCE_ID_PRFSNL varchar(64),
    PROFESSIONAL_ID varchar(64),
    AFFIL_TYPE_ID varchar(64),
    DEA varchar(36),
    AFFIL_IND varchar(4),
    AFFIL_RANK varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_F60Q_src
(
    "CLI#" varchar(3),
    SUFFIX varchar(2),
    "TERR#" varchar(8),
    BLANK1 varchar(2),
    "OUTLET#" varchar(8),
    NAME varchar(50),
    ADDRESS varchar(80),
    CITY varchar(40),
    STATE varchar(2),
    RPT_TYPE varchar(2),
    BLANK2 varchar(2),
    STATUS varchar(1),
    BLANK3 varchar(2),
    SUBCAT varchar(5),
    STATE_CODE varchar(2),
    COUNTY_CODE varchar(10),
    REC_TYPE varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_kc_zip_to_territory_src
(
    ZIP varchar(5),
    CITY varchar(50),
    STATE varchar(2),
    TERRITORY_NUM varchar(8),
    TERRITORY_NAME varchar(50),
    AREA_NAME varchar(50),
    REGION_NAME varchar(50),
    SALES_FORCE_ID varchar(5),
    ORGANIZATION_CODE varchar(200),
    INACTIVE_FLAG varchar(64),
    COMMENTS varchar(255),
    MIRROR_FLAG varchar(64),
    MIRROR_TERRITORY_NUM varchar(8),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.c_bo_teva_sample_elig_src
(
    ROWID_OBJECT char(14),
    CREATOR varchar(50),
    CREATE_DATE varchar(64),
    UPDATED_BY varchar(50),
    LAST_UPDATE_DATE varchar(64),
    CONSOLIDATION_IND varchar(64),
    DELETED_IND varchar(64),
    DELETED_BY varchar(50),
    DELETED_DATE varchar(64),
    LAST_ROWID_SYSTEM char(14),
    DIRTY_IND varchar(64),
    INTERACTION_ID varchar(64),
    HUB_STATE_IND varchar(64),
    CM_DIRTY_IND varchar(64),
    TVCMID char(14),
    CERTIFICATION_DESC varchar(100),
    SLN varchar(18),
    SLN_STATE varchar(2),
    SLN_EXPIRATION_DATE varchar(64),
    SLN_STATUS_CODE varchar(5),
    SLN_STATUS_DESC varchar(40),
    TEVA_SAMPLE_ELIG_FLAG varchar(1),
    TEVA_SCHED_IV_ELIG_FLAG varchar(1),
    TEVA_SCHED_V_ELIG_FLAG varchar(1),
    PROFESSION_SHORT_DESC varchar(5),
    TEVA_SPECIALTY_CODE varchar(5),
    CERTIFICATION_CODE varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_MM_RAM_TO_STATE_src
(
    MM_RAM varchar(40),
    STATE varchar(8),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_CGD_src
(
    TRANSACTION_TYPE varchar(1),
    DATE_FILLED varchar(30),
    DATE_WRITTEN varchar(30),
    DAYS_SUPPLY varchar(64),
    PRODUCT_SERVICE_CODE varchar(11),
    DRUG_DESCRIPTION varchar(30),
    NEW_REFILL_INDICATOR varchar(2),
    QUANTITY_DISPENSED varchar(10),
    REFILLS_AUTHORIZED varchar(2),
    PATIENT_PAID_AMOUNT varchar(64),
    PATIENT_PAID_AMOUNT_QUALIFIER varchar(2),
    STATUS varchar(2),
    OTHER_COVERAGE varchar(2),
    GROUP_NUMBER varchar(9),
    MEMBER_NUMBER varchar(12),
    TIME_STAMP varchar(30),
    PHARMACY_NABP varchar(12),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS_LINE_1 varchar(100),
    PHARMACY_ADDRESS_LINE_2 varchar(100),
    PHARMACY_ADDRESS_LINE_3 varchar(100),
    PHARMACY_CITY varchar(40),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(10),
    DOCTOR_DEA varchar(15),
    TOTAL_AMOUNT_AUTHORIZED varchar(10),
    FEE varchar(64),
    PROVIDER_REIMB varchar(10),
    COPAY varchar(10),
    COUPON_AMOUNT varchar(64),
    DOCTOR_CITY varchar(40),
    DOCTOR_STATE varchar(2),
    DOCTOR_ZIP varchar(10),
    CUSTOMER_PHYSICIAN_ID varchar(15),
    DOCTOR_LAST_NAME varchar(30),
    DOCTOR_FIRST_NAME varchar(30),
    DOCTOR_MIDDLE_NAME varchar(30),
    DOCTOR_TITLE_CODE varchar(50),
    DOCTOR_ADDRESS_LINE_1 varchar(100),
    DOCTOR_ADDRESS_LINE_2 varchar(100),
    DOCTOR_ADDRESS_LINE_3 varchar(100),
    DOCTOR_STATE_LICENSE_NUMBER varchar(20),
    SLN_STATE varchar(50),
    SPECIALTY varchar(50),
    PROGRAM_NAME varchar(255),
    BRAND varchar(50),
    PHARMACY_COMPANY varchar(50),
    DOCTOR_NPI varchar(255),
    LINKED_CARDS varchar(1000),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_diplomat_enrollment_src
(
    PATIENT_ID varchar(80),
    RX_RECEIVED_DATE varchar(40),
    INSURANCE_INFORMATION varchar(200),
    MOST_RECENT_CML_TREATMENT varchar(200),
    DATE_OF_DISCONTINUATION varchar(40),
    REASON_FOR_DISCONTINUATION varchar(200),
    PHYSICIAN_LAST_NAME varchar(200),
    PHYSICIAN_FIRST_NAME varchar(200),
    PHYSICIAN_ADDRESS varchar(400),
    PHYSICIAN_CITY varchar(200),
    PHYSICIAN_STATE varchar(8),
    PHYSICIAN_ZIP varchar(40),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_WHOLESALE_867_src
(
    TRADING_PARTNER varchar(50),
    PARTNER_DUNS varchar(15),
    PARTNER_DUNS_4 varchar(15),
    PARTNER_DEA varchar(20),
    PARTNER_HIN varchar(20),
    PARTNER_SELLER_ASSIGNED_ID varchar(50),
    PARTNER_BUYER_ASSIGNED_ID varchar(50),
    CLIENT_NAME varchar(50),
    ADDRESS1 varchar(50),
    ADDRESS2 varchar(50),
    CITY varchar(50),
    STATE varchar(2),
    ZIP varchar(15),
    CLIENT_DUNS varchar(15),
    CLIENT_DEA varchar(20),
    CLIENT_HIN varchar(20),
    CLIENT_SELLER_ASSIGNED_ID varchar(50),
    CLIENT_BUYER_ASSIGNED_ID varchar(50),
    NCPDP varchar(20),
    NDC varchar(20),
    ITEM varchar(50),
    SHIP_DATE varchar(32),
    QUANTITY_PURCHASED varchar(20),
    QUANTITY_RETURNED varchar(20),
    UNIT_PRICE varchar(20),
    GROSS_AMOUNT varchar(20),
    DROP_SHIPMENTS varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_KEY_MESSAGE_VOD__C_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(80),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    lastvieweddate varchar(24),
    lastreferenceddate varchar(24),
    description_vod__c varchar(255),
    product_vod__c varchar(18),
    product_strategy_vod__c varchar(18),
    display_order_vod__c varchar(64),
    active_vod__c varchar(5),
    category_vod__c varchar(255),
    vehicle_vod__c varchar(255),
    clm_id_vod__c varchar(100),
    custom_reaction_vod__c varchar(255),
    slide_version_vod__c varchar(100),
    language_vod__c varchar(255),
    media_file_crc_vod__c varchar(255),
    media_file_name_vod__c varchar(255),
    media_file_size_vod__c varchar(64),
    segment_vod__c varchar(80),
    group_to_share_to__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_PREDOMINANT_src
(
    IMS_PLAN_ID varchar(100),
    IMS_PLAN_NAME varchar(250),
    FF_PLAN_ID varchar(100),
    FF_PLAN_NAME varchar(250),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_SALES_QUOTAS_src
(
    TIME_PERIOD varchar(10),
    SALES_FORCE_ID varchar(5),
    TERRITORY_NUM varchar(8),
    PRODUCT_NAME varchar(20),
    QUOTA_QTY varchar(64),
    QUOTA_DOL varchar(64),
    QUOTA_STRENGTH_UNIT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_EVENT_COUNT_src
(
    SOURCE_SYSTEM_NAME varchar(10),
    EVENT_NUMBER varchar(100),
    ATTENDEE_CATEGORY_CODE varchar(25),
    ATTENDEE_CATEGORY varchar(250),
    CNT varchar(64),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AHM_EVENT_src
(
    SOURCE_SYSTEM_NAME varchar(10),
    EVENT_NUMBER varchar(100),
    PARENT_EVENT_NUMBER varchar(100),
    EVENT_NAME varchar(100),
    EVENT_STATUS_CODE varchar(100),
    EVENT_STATUS_DESCRIPTION varchar(100),
    EVENT_STATUS_CHANGE_DATE varchar(64),
    EVENT_START_DATE varchar(64),
    EVENT_END_DATE varchar(64),
    EVENT_TIME_ZONE varchar(100),
    FUNDING_SOURCE varchar(100),
    EVENT_TYPE varchar(100),
    EVENT_TYPE_DESCRIPTION varchar(100),
    EVENT_FORMAT varchar(100),
    EVENT_LOCATION varchar(100),
    PENDING_MGMNT_APPROVAL_DATE varchar(64),
    EVENT_APPROVAL_DATE varchar(64),
    EVENT_APPROVER_ID varchar(100),
    EVENT_SCHEDULE_DATE varchar(64),
    ATTENDEE_CLOSEOUT_DATE varchar(64),
    FINANCIAL_CLOSEOUT_DATE varchar(64),
    CANCELLATION_DATE varchar(64),
    CANCELLATION_REASON varchar(100),
    CANCELLATION_SOURCE varchar(100),
    EVENT_VENUE_MIN_CNT_REQ_IND varchar(100),
    EVENT_VENUE_MIN_COUNT varchar(100),
    ESTIMATED_ATTENDANCE varchar(100),
    VENUE_ID varchar(100),
    VENUE_FULL_NAME varchar(100),
    VENUE_ADDRESS_LINE_1 varchar(100),
    VENUE_ADDRESS_LINE_2 varchar(100),
    VENUE_ADDRESS_LINE_3 varchar(100),
    VENUE_ADDRESS_LINE_4 varchar(100),
    VENUE_CITY varchar(100),
    VENUE_STATE_PROVINCE varchar(100),
    VENUE_POSTAL_CODE varchar(100),
    VENUE_POSTAL_EXTENDED_CODE varchar(100),
    VENUE_COUNTRY_CODE varchar(100),
    VENUE_CONTACT varchar(100),
    VENUE_PHONE varchar(100),
    VENUE_FAX varchar(100),
    VENUE_EMAIL varchar(100),
    TRADE_SECRET_INDICATOR varchar(100),
    TRADE_SECRET_REASON varchar(100),
    CUSTOM_FIELD_1 varchar(100),
    CUSTOM_FIELD_2 varchar(100),
    CUSTOM_FIELD_3 varchar(100),
    CUSTOM_FIELD_4 varchar(100),
    CUSTOM_FIELD_5 varchar(100),
    REC_STAT_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IDS_CALL2_SAMPLE_VOD__C_src
(
    ID varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src
(
    ID varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TB_CB_ACCOUNTS_src
(
    ACCOUNT_ID varchar(100),
    LOCATION_ID varchar(100),
    DEA_NUMBER varchar(20),
    END_CUSTOMER varchar(100),
    ADDRESS_1 varchar(100),
    ADDRESS_2 varchar(100),
    CITY varchar(50),
    STATE varchar(2),
    ZIP varchar(10),
    CONTRACT_TITLE varchar(100),
    CONTRACT_ID varchar(100),
    WHOLESALER_NAME varchar(100),
    HIN varchar(20),
    CONTRACT_ALIAS varchar(100),
    WHOLESALER_DEA varchar(20),
    CLASS_OF_TRADE varchar(30),
    COT_SOURCE varchar(30),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZIP_TO_TERR_src
(
    zip varchar(10),
    state varchar(2),
    territory_1_id varchar(8),
    territory_name varchar(50),
    area_name varchar(50),
    region_name varchar(50),
    mirror_flag varchar(1),
    territory_2_id varchar(8),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PSR_REPORT_src
(
    prescriber_npi varchar(10),
    prescriber_name varchar(180),
    prescriber_state varchar(10),
    product varchar(100),
    month varchar(10),
    indication varchar(5),
    in_progress varchar(64),
    completed varchar(64),
    cancelled varchar(64),
    psr_count varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_SD809_TRANSACTION_src
(
    patient_yob varchar(64),
    patient_gender varchar(64),
    ims_surrogate_patient_id varchar(20),
    product_ndc varchar(20),
    product_name varchar(100),
    product_strength varchar(50),
    unit_of_measure varchar(50),
    extended_wac_price varchar(64),
    transaction_id varchar(20),
    patient_status_date varchar(64),
    patient_status_ varchar(20),
    patient_sub_status varchar(20),
    specialty_pharmacy_patient_or_case_id varchar(100),
    primary_icd_9 varchar(20),
    primary_icd_10 varchar(20),
    script_reciept_date varchar(64),
    primary_appeal_status varchar(20),
    primary_copay_type varchar(50),
    primary_deductible varchar(50),
    primary_pa_required varchar(10),
    primary_copay_amount varchar(64),
    primary_payer_name varchar(100),
    primary_plan_name varchar(100),
    primary_payer_type varchar(20),
    primary_plan_type varchar(20),
    primary_payer_reject_reason_code varchar(50),
    primary_reimbursement_status varchar(20),
    primary_reimbursement_status_date varchar(64),
    primary_step_therapy_required varchar(20),
    secondary_copay_type varchar(50),
    secondary_deductible varchar(50),
    secondary_pa_required varchar(10),
    secondary_copay_amount varchar(64),
    secondary_payer_name varchar(100),
    secondary_plan_name varchar(100),
    secondary_payer_type varchar(20),
    secondary_plan_type varchar(20),
    secondary_payer_reject_reason_code varchar(50),
    secondary_step_therapy_required varchar(20),
    ncpdp_number varchar(20),
    pharmacy_name varchar(200),
    pharmacy_zip varchar(10),
    prescribing_physician_first_name varchar(100),
    prescribing_physician_last_name varchar(100),
    prescribing_physician_middle_initial varchar(10),
    prescribing_physician_dea_number varchar(50),
    prescribing_physician_me_number varchar(50),
    prescribing_physician_npi_number varchar(50),
    prescribing_physician_address_1 varchar(100),
    prescribing_physician_address_2 varchar(100),
    prescribing_physician_city varchar(50),
    prescribing_physician_state varchar(50),
    prescribing_physician_zip varchar(10),
    number_of_fills_prescribed varchar(64),
    number_of_refills_remaining varchar(64),
    fill_type varchar(20),
    rx_date varchar(64),
    rx_number varchar(50),
    carrier varchar(50),
    date_of_drug_receipt varchar(64),
    initial_ship_date varchar(64),
    quantity_shipped varchar(64),
    out_of_pocket_cost varchar(64),
    shipment_date varchar(64),
    product_lot_number varchar(50),
    program_dispense_type varchar(20),
    days_supply_dispensed varchar(64),
    primary_payer_pa_outcome varchar(50),
    secondary_payer_pa_outcome varchar(50),
    rx_communication_method varchar(50),
    tertiary_icd_10 varchar(20),
    ims_file_id varchar(20),
    ims_transaction_id varchar(20),
    ims_cycle_date varchar(64),
    ims_supplier_id varchar(20),
    ims_supplier_name varchar(100),
    ims_transaction_type_code varchar(20),
    ims_duplicate_transaction varchar(20),
    ims_prescriber_id varchar(10),
    ims_phys_first_name varchar(50),
    ims_phys_last_name varchar(50),
    ims_phys_address varchar(100),
    ims_phys_city varchar(50),
    ims_phys_state varchar(50),
    ims_phys_zip varchar(10),
    ims_phys_specialty varchar(50),
    ims_product_id varchar(50),
    ims_product_description varchar(50),
    ims_outlet_id varchar(20),
    ims_outlet_name varchar(100),
    ims_outlet_address varchar(100),
    ims_outlet_city varchar(50),
    ims_outlet_state varchar(50),
    ims_outlet_zip varchar(10),
    ims_outlet_subcategory varchar(20),
    ims_plan_id varchar(20),
    ims_plan_name varchar(100),
    ims_plan_model varchar(100),
    primary_icd10_grouping varchar(20),
    primary_icd10_grouping_reason_code varchar(20),
    secondary_icd10_grouping varchar(20),
    secondary_icd10_grouping_reason_code varchar(20),
    ims_ndc_flag varchar(20),
    ims_dispensed_date_flag varchar(20),
    ims_dispensed_quantity_flag varchar(20),
    ims_cost_flag varchar(20),
    ims_overall_flag varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_MERGES_src
(
    previous_tvcmid varchar(64),
    current_tvcmid varchar(64),
    merge_cycle varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ACTIVITY_src
(
    ACTIVITY_ID varchar(64),
    FEDERATION_ID varchar(64),
    CONTACT varchar(200),
    SOURCE_NAME varchar(200),
    "DATETIME" varchar(64),
    TRACKBACK_ID varchar(200),
    PREVIOUS_ACTIVITY varchar(200),
    LEVEL_NAME varchar(200),
    ACTIVITY_ROLE_NAME varchar(200),
    TYPE_NAME varchar(200),
    NATIVE_TYPE varchar(200),
    DETAILS varchar(200),
    BASKET_ID varchar(64),
    WEB_URL varchar(5000),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_tw_biologics_missing_info_src
(
    FAX_DATE varchar(10),
    PH_STATE varchar(2),
    PH_CITY varchar(50),
    PHYSICIAN varchar(100),
    PH_NPI varchar(20),
    MRM varchar(100),
    PH_ZIP varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(255),
    createddate varchar(64),
    createdbyid varchar(18),
    lastmodifieddate varchar(64),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(64),
    lastactivitydate varchar(64),
    lastvieweddate varchar(64),
    lastreferenceddate varchar(64),
    assignment_end_date__c varchar(255),
    assignment_start_date__c varchar(255),
    assignment_status__c varchar(255),
    assignment_type__c varchar(255),
    global_employee_id__c varchar(255),
    rms_territory_name__c varchar(255),
    rms_territory_number__c varchar(255),
    employee__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_ACCOUNT_TARGETS_src
(
    TVCMID varchar(64),
    SALES_FORCE_ID varchar(5),
    PRODUCT_NAME varchar(20),
    ACCT_DEMO_ID varchar(64),
    IMS_OUTLET_CODE varchar(10),
    TARGET_TYPE varchar(10),
    TARGET_VALUE varchar(15),
    APPLIES_FROM_DATE varchar(64),
    APPLIES_TO_DATE varchar(64),
    ACTIVE_IND varchar(1),
    SYSTEM_START_DATE varchar(64),
    SYSTEM_END_DATE varchar(64),
    END_REASON varchar(30),
    VEEVA_ACCOUNT_ID varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(255),
    createddate varchar(64),
    createdbyid varchar(18),
    lastmodifieddate varchar(64),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(64),
    lastactivitydate varchar(64),
    lastvieweddate varchar(64),
    lastreferenceddate varchar(64),
    birth_month_day__c varchar(255),
    business_mobile__c varchar(255),
    business_phone__c varchar(255),
    cost_center_name__c varchar(255),
    demotion__c varchar(255),
    ec_creation_date__c varchar(255),
    ec_last_modified_date__c varchar(255),
    ec_territory_id__c varchar(255),
    email_address__c varchar(255),
    employee_status__c varchar(255),
    first_name__c varchar(255),
    full_part_time__c varchar(255),
    global_employee_id__c varchar(255),
    hire_date__c varchar(255),
    home_address_1__c varchar(255),
    home_address_2__c varchar(255),
    home_address_3__c varchar(255),
    home_city_municipality__c varchar(255),
    home_country__c varchar(255),
    home_phone__c varchar(255),
    home_postal_code__c varchar(255),
    home_state_province__c varchar(255),
    job_code__c varchar(255),
    job_grade__c varchar(255),
    loa_end_date__c varchar(255),
    loa_start_date__c varchar(255),
    last_name__c varchar(255),
    local_employee_id__c varchar(255),
    mailing_address_1__c varchar(255),
    mailing_address_2__c varchar(255),
    mailing_address_3__c varchar(255),
    mailing_city__c varchar(255),
    mailing_country__c varchar(255),
    mailing_postal_code__c varchar(255),
    mailing_state__c varchar(255),
    middle_name__c varchar(255),
    name_suffix__c varchar(255),
    oracle_string__c varchar(255),
    payroll_id__c varchar(255),
    position_title__c varchar(255),
    preferred_name__c varchar(255),
    promotion__c varchar(255),
    reg_contract__c varchar(255),
    sample_eligibility_indicator__c varchar(255),
    sample_shippingstorage_address_1__c varchar(255),
    sample_shippingstorage_address_2__c varchar(255),
    sample_shippingstorage_address_3__c varchar(255),
    sample_shippingstorage_address_status__c varchar(255),
    sample_shippingstorage_city__c varchar(255),
    sample_shippingstorage_country__c varchar(255),
    sample_shippingstorage_postal_code__c varchar(255),
    sample_shippingstorage_state__c varchar(255),
    shipping_address_1__c varchar(255),
    shipping_address_2__c varchar(255),
    shipping_address_3__c varchar(255),
    shipping_city__c varchar(255),
    shipping_country__c varchar(255),
    shipping_postal_code__c varchar(255),
    shipping_state__c varchar(255),
    supervisor_global_employee_id__c varchar(255),
    transfer_date__c varchar(255),
    uid__c varchar(255),
    windows_logon_id__c varchar(255),
    teva_id__c varchar(255),
    employee_status_effective_date__c varchar(255),
    separation_date__c varchar(255),
    separation_reason__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PROGNOS_CINQAIR_src
(
    week_end_date varchar(10),
    practice_name varchar(255),
    practice_address_line_1 varchar(255),
    pracitce_address_line_2 varchar(255),
    city varchar(255),
    state varchar(255),
    zip_code varchar(255),
    provider_first_name varchar(255),
    provider_last_name varchar(255),
    npi varchar(255),
    specialty_1 varchar(255),
    specialty_2 varchar(255),
    pts_with_moderate_severe_asthma_and_eosinophils_0_149 varchar(64),
    pts_with_moderate_severe_asthma_and_eosinophils_150_399 varchar(64),
    pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater varchar(64),
    pts_with_ao_asthma_and_eosinophils_0_149 varchar(64),
    pts_with_ao_asthma_and_eosinophils_150_399 varchar(64),
    pts_with_ao_asthma_and_eosinophils_400_or_greater varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_tw_anda_sales_src
(
    YEAR varchar(10),
    SALES_MONTH varchar(20),
    SALES_DATE varchar(64),
    CUSTOMER_NO varchar(64),
    CUSTOMER varchar(100),
    CUSTOMER_ADDRESS_LINE1 varchar(100),
    CUSTOMER_ADDRESS_LINE2 varchar(100),
    CITY varchar(50),
    STATE varchar(2),
    ZIP varchar(10),
    BILL_CUSTOMER_NO varchar(64),
    BILL_ADDRESS_LINE1 varchar(100),
    BILL_ADDRESS_LINE2 varchar(100),
    BILL_CITY varchar(50),
    BILL_STATE varchar(2),
    BILL_ZIP varchar(10),
    CUSTOMER_TYPE_CD varchar(64),
    CUSTOMER_TYPE varchar(50),
    PVP_340B_ID varchar(20),
    TRADE_CLASS varchar(50),
    HEALTH_INDUSTRY_NO varchar(20),
    DEA_REGISTRATION_NO varchar(20),
    DEA_REGISTRATION_EXPIRATION varchar(64),
    STATE_LICENSE varchar(20),
    STATE_LICENSE_EXPIRATION varchar(64),
    ITEM_NO varchar(64),
    NDC varchar(20),
    BRAND varchar(50),
    PACKAGE_SIZE varchar(64),
    VENDOR varchar(50),
    DOCUMENT_NO varchar(64),
    ORDER_NO varchar(64),
    UNITS_NET varchar(64),
    NET_COST varchar(64),
    NET_SALES_AMT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FR61_src
(
    ddd_outlet_number varchar(8),
    subcategory_code varchar(2),
    ddd_outlet_name varchar(25),
    ddd_outlet_address varchar(23),
    city varchar(19),
    state varchar(2),
    activity_date varchar(4),
    dea_number varchar(9),
    blank1 varchar(12),
    blank2 varchar(9),
    outlet_status varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_CNT_M_ADHOC_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_CNT_W_ADHOC_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    nrx_025 varchar(64),
    nrx_026 varchar(64),
    nrx_027 varchar(64),
    nrx_028 varchar(64),
    nrx_029 varchar(64),
    nrx_030 varchar(64),
    nrx_031 varchar(64),
    nrx_032 varchar(64),
    nrx_033 varchar(64),
    nrx_034 varchar(64),
    nrx_035 varchar(64),
    nrx_036 varchar(64),
    nrx_037 varchar(64),
    nrx_038 varchar(64),
    nrx_039 varchar(64),
    nrx_040 varchar(64),
    nrx_041 varchar(64),
    nrx_042 varchar(64),
    nrx_043 varchar(64),
    nrx_044 varchar(64),
    nrx_045 varchar(64),
    nrx_046 varchar(64),
    nrx_047 varchar(64),
    nrx_048 varchar(64),
    nrx_049 varchar(64),
    nrx_050 varchar(64),
    nrx_051 varchar(64),
    nrx_052 varchar(64),
    nrx_053 varchar(64),
    nrx_054 varchar(64),
    nrx_055 varchar(64),
    nrx_056 varchar(64),
    nrx_057 varchar(64),
    nrx_058 varchar(64),
    nrx_059 varchar(64),
    nrx_060 varchar(64),
    nrx_061 varchar(64),
    nrx_062 varchar(64),
    nrx_063 varchar(64),
    nrx_064 varchar(64),
    nrx_065 varchar(64),
    nrx_066 varchar(64),
    nrx_067 varchar(64),
    nrx_068 varchar(64),
    nrx_069 varchar(64),
    nrx_070 varchar(64),
    nrx_071 varchar(64),
    nrx_072 varchar(64),
    nrx_073 varchar(64),
    nrx_074 varchar(64),
    nrx_075 varchar(64),
    nrx_076 varchar(64),
    nrx_077 varchar(64),
    nrx_078 varchar(64),
    nrx_079 varchar(64),
    nrx_080 varchar(64),
    nrx_081 varchar(64),
    nrx_082 varchar(64),
    nrx_083 varchar(64),
    nrx_084 varchar(64),
    nrx_085 varchar(64),
    nrx_086 varchar(64),
    nrx_087 varchar(64),
    nrx_088 varchar(64),
    nrx_089 varchar(64),
    nrx_090 varchar(64),
    nrx_091 varchar(64),
    nrx_092 varchar(64),
    nrx_093 varchar(64),
    nrx_094 varchar(64),
    nrx_095 varchar(64),
    nrx_096 varchar(64),
    nrx_097 varchar(64),
    nrx_098 varchar(64),
    nrx_099 varchar(64),
    nrx_100 varchar(64),
    nrx_101 varchar(64),
    nrx_102 varchar(64),
    nrx_103 varchar(64),
    nrx_104 varchar(64),
    nrx_105 varchar(64),
    nrx_106 varchar(64),
    nrx_107 varchar(64),
    nrx_108 varchar(64),
    nrx_109 varchar(64),
    nrx_110 varchar(64),
    nrx_111 varchar(64),
    nrx_112 varchar(64),
    nrx_113 varchar(64),
    nrx_114 varchar(64),
    nrx_115 varchar(64),
    nrx_116 varchar(64),
    nrx_117 varchar(64),
    nrx_118 varchar(64),
    nrx_119 varchar(64),
    nrx_120 varchar(64),
    nrx_121 varchar(64),
    nrx_122 varchar(64),
    nrx_123 varchar(64),
    nrx_124 varchar(64),
    nrx_125 varchar(64),
    nrx_126 varchar(64),
    nrx_127 varchar(64),
    nrx_128 varchar(64),
    nrx_129 varchar(64),
    nrx_130 varchar(64),
    nrx_131 varchar(64),
    nrx_132 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    trx_025 varchar(64),
    trx_026 varchar(64),
    trx_027 varchar(64),
    trx_028 varchar(64),
    trx_029 varchar(64),
    trx_030 varchar(64),
    trx_031 varchar(64),
    trx_032 varchar(64),
    trx_033 varchar(64),
    trx_034 varchar(64),
    trx_035 varchar(64),
    trx_036 varchar(64),
    trx_037 varchar(64),
    trx_038 varchar(64),
    trx_039 varchar(64),
    trx_040 varchar(64),
    trx_041 varchar(64),
    trx_042 varchar(64),
    trx_043 varchar(64),
    trx_044 varchar(64),
    trx_045 varchar(64),
    trx_046 varchar(64),
    trx_047 varchar(64),
    trx_048 varchar(64),
    trx_049 varchar(64),
    trx_050 varchar(64),
    trx_051 varchar(64),
    trx_052 varchar(64),
    trx_053 varchar(64),
    trx_054 varchar(64),
    trx_055 varchar(64),
    trx_056 varchar(64),
    trx_057 varchar(64),
    trx_058 varchar(64),
    trx_059 varchar(64),
    trx_060 varchar(64),
    trx_061 varchar(64),
    trx_062 varchar(64),
    trx_063 varchar(64),
    trx_064 varchar(64),
    trx_065 varchar(64),
    trx_066 varchar(64),
    trx_067 varchar(64),
    trx_068 varchar(64),
    trx_069 varchar(64),
    trx_070 varchar(64),
    trx_071 varchar(64),
    trx_072 varchar(64),
    trx_073 varchar(64),
    trx_074 varchar(64),
    trx_075 varchar(64),
    trx_076 varchar(64),
    trx_077 varchar(64),
    trx_078 varchar(64),
    trx_079 varchar(64),
    trx_080 varchar(64),
    trx_081 varchar(64),
    trx_082 varchar(64),
    trx_083 varchar(64),
    trx_084 varchar(64),
    trx_085 varchar(64),
    trx_086 varchar(64),
    trx_087 varchar(64),
    trx_088 varchar(64),
    trx_089 varchar(64),
    trx_090 varchar(64),
    trx_091 varchar(64),
    trx_092 varchar(64),
    trx_093 varchar(64),
    trx_094 varchar(64),
    trx_095 varchar(64),
    trx_096 varchar(64),
    trx_097 varchar(64),
    trx_098 varchar(64),
    trx_099 varchar(64),
    trx_100 varchar(64),
    trx_101 varchar(64),
    trx_102 varchar(64),
    trx_103 varchar(64),
    trx_104 varchar(64),
    trx_105 varchar(64),
    trx_106 varchar(64),
    trx_107 varchar(64),
    trx_108 varchar(64),
    trx_109 varchar(64),
    trx_110 varchar(64),
    trx_111 varchar(64),
    trx_112 varchar(64),
    trx_113 varchar(64),
    trx_114 varchar(64),
    trx_115 varchar(64),
    trx_116 varchar(64),
    trx_117 varchar(64),
    trx_118 varchar(64),
    trx_119 varchar(64),
    trx_120 varchar(64),
    trx_121 varchar(64),
    trx_122 varchar(64),
    trx_123 varchar(64),
    trx_124 varchar(64),
    trx_125 varchar(64),
    trx_126 varchar(64),
    trx_127 varchar(64),
    trx_128 varchar(64),
    trx_129 varchar(64),
    trx_130 varchar(64),
    trx_131 varchar(64),
    trx_132 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_QTY_M_ADHOC_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_QTY_W_ADHOC_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    nrx_025 varchar(64),
    nrx_026 varchar(64),
    nrx_027 varchar(64),
    nrx_028 varchar(64),
    nrx_029 varchar(64),
    nrx_030 varchar(64),
    nrx_031 varchar(64),
    nrx_032 varchar(64),
    nrx_033 varchar(64),
    nrx_034 varchar(64),
    nrx_035 varchar(64),
    nrx_036 varchar(64),
    nrx_037 varchar(64),
    nrx_038 varchar(64),
    nrx_039 varchar(64),
    nrx_040 varchar(64),
    nrx_041 varchar(64),
    nrx_042 varchar(64),
    nrx_043 varchar(64),
    nrx_044 varchar(64),
    nrx_045 varchar(64),
    nrx_046 varchar(64),
    nrx_047 varchar(64),
    nrx_048 varchar(64),
    nrx_049 varchar(64),
    nrx_050 varchar(64),
    nrx_051 varchar(64),
    nrx_052 varchar(64),
    nrx_053 varchar(64),
    nrx_054 varchar(64),
    nrx_055 varchar(64),
    nrx_056 varchar(64),
    nrx_057 varchar(64),
    nrx_058 varchar(64),
    nrx_059 varchar(64),
    nrx_060 varchar(64),
    nrx_061 varchar(64),
    nrx_062 varchar(64),
    nrx_063 varchar(64),
    nrx_064 varchar(64),
    nrx_065 varchar(64),
    nrx_066 varchar(64),
    nrx_067 varchar(64),
    nrx_068 varchar(64),
    nrx_069 varchar(64),
    nrx_070 varchar(64),
    nrx_071 varchar(64),
    nrx_072 varchar(64),
    nrx_073 varchar(64),
    nrx_074 varchar(64),
    nrx_075 varchar(64),
    nrx_076 varchar(64),
    nrx_077 varchar(64),
    nrx_078 varchar(64),
    nrx_079 varchar(64),
    nrx_080 varchar(64),
    nrx_081 varchar(64),
    nrx_082 varchar(64),
    nrx_083 varchar(64),
    nrx_084 varchar(64),
    nrx_085 varchar(64),
    nrx_086 varchar(64),
    nrx_087 varchar(64),
    nrx_088 varchar(64),
    nrx_089 varchar(64),
    nrx_090 varchar(64),
    nrx_091 varchar(64),
    nrx_092 varchar(64),
    nrx_093 varchar(64),
    nrx_094 varchar(64),
    nrx_095 varchar(64),
    nrx_096 varchar(64),
    nrx_097 varchar(64),
    nrx_098 varchar(64),
    nrx_099 varchar(64),
    nrx_100 varchar(64),
    nrx_101 varchar(64),
    nrx_102 varchar(64),
    nrx_103 varchar(64),
    nrx_104 varchar(64),
    nrx_105 varchar(64),
    nrx_106 varchar(64),
    nrx_107 varchar(64),
    nrx_108 varchar(64),
    nrx_109 varchar(64),
    nrx_110 varchar(64),
    nrx_111 varchar(64),
    nrx_112 varchar(64),
    nrx_113 varchar(64),
    nrx_114 varchar(64),
    nrx_115 varchar(64),
    nrx_116 varchar(64),
    nrx_117 varchar(64),
    nrx_118 varchar(64),
    nrx_119 varchar(64),
    nrx_120 varchar(64),
    nrx_121 varchar(64),
    nrx_122 varchar(64),
    nrx_123 varchar(64),
    nrx_124 varchar(64),
    nrx_125 varchar(64),
    nrx_126 varchar(64),
    nrx_127 varchar(64),
    nrx_128 varchar(64),
    nrx_129 varchar(64),
    nrx_130 varchar(64),
    nrx_131 varchar(64),
    nrx_132 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    trx_025 varchar(64),
    trx_026 varchar(64),
    trx_027 varchar(64),
    trx_028 varchar(64),
    trx_029 varchar(64),
    trx_030 varchar(64),
    trx_031 varchar(64),
    trx_032 varchar(64),
    trx_033 varchar(64),
    trx_034 varchar(64),
    trx_035 varchar(64),
    trx_036 varchar(64),
    trx_037 varchar(64),
    trx_038 varchar(64),
    trx_039 varchar(64),
    trx_040 varchar(64),
    trx_041 varchar(64),
    trx_042 varchar(64),
    trx_043 varchar(64),
    trx_044 varchar(64),
    trx_045 varchar(64),
    trx_046 varchar(64),
    trx_047 varchar(64),
    trx_048 varchar(64),
    trx_049 varchar(64),
    trx_050 varchar(64),
    trx_051 varchar(64),
    trx_052 varchar(64),
    trx_053 varchar(64),
    trx_054 varchar(64),
    trx_055 varchar(64),
    trx_056 varchar(64),
    trx_057 varchar(64),
    trx_058 varchar(64),
    trx_059 varchar(64),
    trx_060 varchar(64),
    trx_061 varchar(64),
    trx_062 varchar(64),
    trx_063 varchar(64),
    trx_064 varchar(64),
    trx_065 varchar(64),
    trx_066 varchar(64),
    trx_067 varchar(64),
    trx_068 varchar(64),
    trx_069 varchar(64),
    trx_070 varchar(64),
    trx_071 varchar(64),
    trx_072 varchar(64),
    trx_073 varchar(64),
    trx_074 varchar(64),
    trx_075 varchar(64),
    trx_076 varchar(64),
    trx_077 varchar(64),
    trx_078 varchar(64),
    trx_079 varchar(64),
    trx_080 varchar(64),
    trx_081 varchar(64),
    trx_082 varchar(64),
    trx_083 varchar(64),
    trx_084 varchar(64),
    trx_085 varchar(64),
    trx_086 varchar(64),
    trx_087 varchar(64),
    trx_088 varchar(64),
    trx_089 varchar(64),
    trx_090 varchar(64),
    trx_091 varchar(64),
    trx_092 varchar(64),
    trx_093 varchar(64),
    trx_094 varchar(64),
    trx_095 varchar(64),
    trx_096 varchar(64),
    trx_097 varchar(64),
    trx_098 varchar(64),
    trx_099 varchar(64),
    trx_100 varchar(64),
    trx_101 varchar(64),
    trx_102 varchar(64),
    trx_103 varchar(64),
    trx_104 varchar(64),
    trx_105 varchar(64),
    trx_106 varchar(64),
    trx_107 varchar(64),
    trx_108 varchar(64),
    trx_109 varchar(64),
    trx_110 varchar(64),
    trx_111 varchar(64),
    trx_112 varchar(64),
    trx_113 varchar(64),
    trx_114 varchar(64),
    trx_115 varchar(64),
    trx_116 varchar(64),
    trx_117 varchar(64),
    trx_118 varchar(64),
    trx_119 varchar(64),
    trx_120 varchar(64),
    trx_121 varchar(64),
    trx_122 varchar(64),
    trx_123 varchar(64),
    trx_124 varchar(64),
    trx_125 varchar(64),
    trx_126 varchar(64),
    trx_127 varchar(64),
    trx_128 varchar(64),
    trx_129 varchar(64),
    trx_130 varchar(64),
    trx_131 varchar(64),
    trx_132 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PSKW_GRANIX_COUPON_SAVINGS_src
(
    transaction_type varchar(10),
    claim_authorization_number varchar(20),
    original_claim_authorization_number varchar(20),
    rx_num varchar(12),
    date_of_fill varchar(64),
    date_written varchar(64),
    day_supply varchar(64),
    daw varchar(1),
    ndc varchar(19),
    drug_desc varchar(55),
    new_refill_code varchar(2),
    number_of_refills varchar(2),
    other_coverage_code varchar(2),
    group_num varchar(18),
    member_id varchar(20),
    patient_gender varchar(1),
    date_processed varchar(64),
    nabp varchar(15),
    phm_name varchar(100),
    phm_add1 varchar(100),
    phm_add2 varchar(35),
    phm_city varchar(35),
    phm_state varchar(2),
    phm_zip varchar(10),
    npi varchar(10),
    phy_name varchar(35),
    phy_fn varchar(35),
    phy_mi varchar(35),
    phy_ln varchar(35),
    phy_suffix varchar(35),
    phy_prof_desg varchar(20),
    spec1 varchar(40),
    spec2 varchar(40),
    phy_add1 varchar(40),
    phy_add2 varchar(40),
    phy_city varchar(35),
    phy_state varchar(2),
    phy_zip varchar(35),
    submission_method varchar(1),
    quantity varchar(64),
    patient_benefit varchar(64),
    patient_copay_before_benefit_applied varchar(64),
    patient_oop varchar(64),
    pharmacy_transaction_fee varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_HCO_src
(
    TVCMID varchar(14),
    IMS_ORGANIZATION_ID varchar(11),
    DBA_NAME varchar(80),
    BUSINESS_NAME varchar(80),
    CARE_OF_LOCATION varchar(80),
    RECORD_TYPE varchar(2),
    RECORD_TYPE_NAME varchar(50),
    SUB_TYPE varchar(10),
    SUB_TYPE_NAME varchar(50),
    OWNER_STATUS varchar(25),
    PROFIT_STATUS varchar(25),
    CMI varchar(64),
    NO_OF_PROVIDERS varchar(64),
    PRIMARY_COT_ID varchar(64),
    COT_CLASSIFICATION_ID varchar(64),
    COT_CLASSIFICATION varchar(50),
    COT_FACILITY_TYPE_ID varchar(64),
    COT_FACILITY_TYPE varchar(50),
    COT_SPECIALTY_ID varchar(64),
    COT_SPECIALTY varchar(50),
    TTL_LICENSE_BEDS varchar(64),
    TTL_CENSUS_BEDS varchar(64),
    TTL_STAFFED_BEDS varchar(64),
    TEACHING_HOSP varchar(1),
    COMMHOSP varchar(3),
    FORMULARY varchar(2),
    ELECTRONIC_MEDICAL_RECORD varchar(2),
    EPRESCRIBE varchar(2),
    PAYPERFORM varchar(2),
    GENFIRST varchar(2),
    SREP_ACCESS varchar(2),
    PRACTICING_STATUS_CODE_HEALTHCARE_ORGANIZATION varchar(5),
    MPN varchar(6),
    MPN_ORDER varchar(1),
    STATUS_INDICATOR varchar(1),
    STATUS_INDICATOR_NAME varchar(50),
    DEACTIVATION_REASON varchar(25),
    LOGICAL_DELETION_DATE varchar(64),
    HCE_INSERT_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CONNECTIVERX_COUPON_src
(
    redemption_type varchar(7),
    transaction_type varchar(1),
    claim_authorization_number varchar(20),
    original_claim_authorization_number varchar(20),
    date_of_fill varchar(64),
    date_written varchar(64),
    day_supply varchar(64),
    ndc varchar(19),
    daw varchar(64),
    drug_title varchar(55),
    drug_strength_and_form varchar(55),
    new_refill_code varchar(64),
    quantity varchar(64),
    number_of_refills varchar(64),
    other_coverage_code varchar(64),
    group_num varchar(18),
    member_id varchar(20),
    patient_gender varchar(1),
    age varchar(64),
    date_processed varchar(8),
    nabp varchar(15),
    pharmacy_chain varchar(60),
    pharmacy_npi varchar(11),
    rx_num varchar(80),
    pharmacy_name varchar(60),
    pharmacy_address_1 varchar(100),
    pharmacy_address_2 varchar(100),
    pharmacy_city varchar(50),
    pharmacy_state varchar(2),
    pharmacy_zip varchar(10),
    pharmacy_phone varchar(10),
    hcp_npi varchar(15),
    hcp_first_name varchar(35),
    hcp_middle_name varchar(35),
    hcp_last_name varchar(35),
    hcp_suffix varchar(35),
    hcp_designation varchar(20),
    hcp_specialty_1 varchar(50),
    hcp_specialty_2 varchar(50),
    hcp_address_1 varchar(40),
    hcp_address_2 varchar(40),
    hcp_city varchar(35),
    hcp_state varchar(2),
    hcp_zip varchar(10),
    submission_method varchar(1),
    previous_payer_id varchar(15),
    patient_expense varchar(64),
    patient_benefit varchar(64),
    patient_copay varchar(64),
    patient_oop varchar(64),
    pharmacy_fee varchar(64),
    amount_due varchar(64),
    create_date varchar(8),
    occ_payment_type varchar(15),
    calc_awp varchar(10),
    admin_hcp_npi varchar(15),
    admin_hcp_name varchar(100),
    admin_hcp_address varchar(100),
    admin_hcp_address2 varchar(100),
    admin_hcp_city varchar(50),
    admin_hcp_state varchar(2),
    admin_hcp_zip varchar(10),
    claim_type varchar(50),
    administration_flag varchar(50),
    soc_name varchar(60),
    soc_phone varchar(10),
    soc_fax varchar(10),
    soc_address varchar(100),
    soc_city varchar(50),
    soc_state varchar(2),
    soc_zip varchar(10),
    soc_id varchar(50),
    soc_npi varchar(15),
    payer_name varchar(60),
    cpt_code varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_OPTUMRX_V2_src
(
    fill_month varchar(6),
    npi varchar(20),
    full_name varchar(100),
    specialty varchar(50),
    address_1 varchar(100),
    address_2 varchar(100),
    city varchar(50),
    state varchar(2),
    zip varchar(5),
    ndc varchar(20),
    product_name varchar(100),
    trx_count varchar(20),
    trx_quantity varchar(20),
    payer_flag varchar(50),
    briova_flag varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_CALL2_SAMPLE_VOD__C_src
(
    id varchar(18),
    isdeleted varchar(5),
    name varchar(80),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    lastactivitydate varchar(10),
    mayedit varchar(5),
    islocked varchar(5),
    lastvieweddate varchar(24),
    lastreferenceddate varchar(24),
    account_vod__c varchar(18),
    call_date_vod__c varchar(10),
    is_parent_call_vod__c varchar(64),
    quantity_vod__c varchar(64),
    lot_vod__c varchar(80),
    mobile_id_vod__c varchar(100),
    call2_vod__c varchar(18),
    product_vod__c varchar(18),
    distributor_vod__c varchar(255),
    attendee_type_vod__c varchar(255),
    entity_reference_id_vod__c varchar(100),
    delivery_status_vod__c varchar(255),
    apply_limit_vod__c varchar(5),
    limit_applied_vod__c varchar(5),
    manufacturer_vod__c varchar(255),
    product_value_vod__c varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_ims_copay_src
(
    group_number varchar(11),
    group_name varchar(100),
    claim_type varchar(1),
    rx_number varchar(12),
    date_of_fill varchar(10),
    member_id varchar(18),
    other_coverage_code varchar(1),
    new_refill_code varchar(2),
    basis_of_reimbursement varchar(2),
    ndc varchar(11),
    drug_name varchar(30),
    drug_form varchar(100),
    drug_strength varchar(10),
    paid_quantity varchar(12),
    days_supply varchar(3),
    ingredient_cost_paid varchar(12),
    dispensing_fee_paid varchar(12),
    sales_tax_paid varchar(12),
    copay_amount varchar(12),
    total_amount_paid varchar(12),
    usual_and_customary_amount varchar(12),
    claim_number varchar(14),
    adjusted_claim_number varchar(14),
    received_date varchar(10),
    pharmacy_nabp varchar(12),
    pharmacy_name varchar(30),
    pharamcy_address_1 varchar(30),
    pharamcy_address_2 varchar(30),
    pharamcy_city varchar(30),
    pharamcy_state varchar(2),
    pharamcy_zip varchar(5),
    pharmacy_group_code varchar(4),
    prescriber_first_name varchar(25),
    prescriber_middle_name varchar(25),
    prescriber_last_name varchar(100),
    prescriber_address_1 varchar(100),
    prescriber_address_2 varchar(100),
    prescriber_city varchar(100),
    prescriber_state varchar(100),
    prescriber_zip varchar(10),
    prescriber_specialty varchar(40),
    redemption varchar(2),
    mail_order_indicator varchar(2),
    dea varchar(9),
    npi varchar(10),
    pdrp varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_vv_approved_document__c_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(80),
    recordtypeid varchar(18),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    lastactivitydate varchar(10),
    mayedit varchar(5),
    islocked varchar(5),
    lastvieweddate varchar(24),
    lastreferenceddate varchar(24),
    detail_group_vod__c varchar(18),
    document_description_vod__c varchar(255),
    document_host_url_vod__c varchar(255),
    document_id_vod__c varchar(100),
    document_last_mod_datetime_vod__c varchar(24),
    email_allows_documents_vod__c varchar(5),
    email_domain_vod__c varchar(100),
    email_from_address_vod__c varchar(100),
    email_from_name_vod__c varchar(100),
    email_replyto_address_vod__c varchar(100),
    email_replyto_name_vod__c varchar(100),
    email_subject_vod__c varchar(255),
    email_template_fragment_document_id_vod__c varchar(100),
    isi_document_id_vod__c varchar(100),
    language_vod__c varchar(255),
    other_document_id_list_vod__c varchar(100),
    pi_document_id_vod__c varchar(100),
    piece_document_id_vod__c varchar(100),
    product_vod__c varchar(18),
    status_vod__c varchar(255),
    territory_vod__c varchar(100),
    vault_instance_id_vod__c varchar(100),
    expiration_date_tva__c varchar(10),
    group_to_share_to__c varchar(255),
    training_org_tva__c varchar(5),
    unsub_svr_tva__c varchar(1300),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_WHOLESALE_867_V2_src
(
    ndc varchar(20),
    product_description varchar(50),
    product_name varchar(25),
    trading_partner_name varchar(50),
    trading_partner_dea varchar(15),
    trading_partner_hin varchar(15),
    trading_partner_location_type varchar(5),
    trading_partner_dc_dea varchar(15),
    trading_partner_dc_hin varchar(15),
    trading_partner_dc_name varchar(50),
    trading_partner_dc_address varchar(50),
    trading_partner_dc_address_2 varchar(50),
    trading_partner_dc_city varchar(30),
    trading_partner_dc_state varchar(2),
    trading_partner_dc_zip varchar(10),
    class_of_trade varchar(50),
    outlet_location_name varchar(150),
    outlet_dea varchar(15),
    outlet_hin varchar(15),
    outlet_340b varchar(15),
    outlet_ncpdp varchar(15),
    outlet_npi varchar(15),
    outlet_location_address varchar(100),
    outlet_location_address_2 varchar(100),
    outlet_location_city varchar(30),
    outlet_location_state varchar(2),
    outlet_location_zip varchar(10),
    reporting_date varchar(10),
    contract_number varchar(30),
    contract_description varchar(30),
    invoice_number varchar(30),
    invoice_date varchar(10),
    invoice_line_id varchar(15),
    quanitity_stock_sales_ss varchar(50),
    ds_sales_ds varchar(15),
    summary_sales_su varchar(15),
    dock_to_dock_bq varchar(15),
    interbranch_ib varchar(15),
    return_to_useable_ru varchar(50),
    return_to_vendor_rv varchar(15),
    transfer_to_disposal_td varchar(15),
    adjusted_price varchar(15),
    gross_amount varchar(15),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_FACT_src
(
    claim_id varchar(64),
    patient_id varchar(64),
    sequence_number varchar(64),
    product_id varchar(11),
    fill_date varchar(64),
    claim_type varchar(2),
    reject_code varchar(3),
    days_supply varchar(64),
    quantity varchar(12),
    refill_code varchar(64),
    plantrak_id varchar(10),
    opc_ask varchar(10),
    sec_plantrak_id varchar(10),
    buy_down varchar(11),
    opc_paid varchar(10),
    prescriber_id varchar(7),
    sob varchar(1),
    sub_product_id varchar(11),
    sub_opc varchar(10),
    initial_claim_id varchar(64),
    prev_product_id varchar(11),
    daw_code varchar(2),
    wrt_date varchar(64),
    claim_status varchar(1),
    copay_card_flg varchar(4),
    zip_code varchar(5),
    ecoup_flag varchar(64),
    ecoup_offset_amt varchar(64),
    standard_copay varchar(64),
    standard_copay_yn varchar(1),
    flexible_fld_1_nbr varchar(64),
    flexible_fld_2_nbr varchar(64),
    flexible_fld_3_char varchar(50),
    flexible_fld_4_char varchar(50),
    fia_market_id varchar(50),
    fia_market_desc varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_src
(
    zip_code varchar(5),
    msa_code varchar(4),
    msa_description varchar(100),
    cbsa_code varchar(5),
    cbsa_description varchar(100),
    state_code varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_PLAN_src
(
    plantrak_id varchar(10),
    payer_name varchar(64),
    plan_name varchar(64),
    pbm_name varchar(60),
    payment_type varchar(30),
    model_type varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_PRODUCT_src
(
    product_id varchar(11),
    product_group varchar(80),
    product_name varchar(100),
    product_group_id varchar(64),
    cmf10 varchar(10),
    fia_market_id varchar(50),
    fia_market_desc varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_REJECT_src
(
    reject_code varchar(3),
    reject_reason varchar(200),
    reject_group varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_src
(
    client_num varchar(3),
    report_num varchar(2),
    outlet_code varchar(10),
    zip varchar(10),
    subcategory_code varchar(10),
    sra_4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(64),
    dol_mth01 varchar(64),
    dol_mth02 varchar(64),
    dol_mth03 varchar(64),
    dol_mth04 varchar(64),
    dol_mth05 varchar(64),
    dol_mth06 varchar(64),
    dol_mth07 varchar(64),
    dol_mth08 varchar(64),
    dol_mth09 varchar(64),
    dol_mth10 varchar(64),
    dol_mth11 varchar(64),
    dol_mth12 varchar(64),
    dol_mth13 varchar(64),
    dol_mth14 varchar(64),
    dol_mth15 varchar(64),
    dol_mth16 varchar(64),
    dol_mth17 varchar(64),
    dol_mth18 varchar(64),
    dol_mth19 varchar(64),
    dol_mth20 varchar(64),
    dol_mth21 varchar(64),
    dol_mth22 varchar(64),
    dol_mth23 varchar(64),
    dol_mth24 varchar(64),
    city varchar(25),
    state varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_src
(
    client_num varchar(3),
    report_num varchar(2),
    outlet_code varchar(10),
    zip varchar(10),
    subcategory_code varchar(10),
    sra_4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(64),
    qty_mth01 varchar(64),
    qty_mth02 varchar(64),
    qty_mth03 varchar(64),
    qty_mth04 varchar(64),
    qty_mth05 varchar(64),
    qty_mth06 varchar(64),
    qty_mth07 varchar(64),
    qty_mth08 varchar(64),
    qty_mth09 varchar(64),
    qty_mth10 varchar(64),
    qty_mth11 varchar(64),
    qty_mth12 varchar(64),
    qty_mth13 varchar(64),
    qty_mth14 varchar(64),
    qty_mth15 varchar(64),
    qty_mth16 varchar(64),
    qty_mth17 varchar(64),
    qty_mth18 varchar(64),
    qty_mth19 varchar(64),
    qty_mth20 varchar(64),
    qty_mth21 varchar(64),
    qty_mth22 varchar(64),
    qty_mth23 varchar(64),
    qty_mth24 varchar(64),
    city varchar(25),
    state varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.XPD_CORE_METRICS_src
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator varchar(2),
    ims_id varchar(10),
    filler_01 varchar(10),
    specialty varchar(10),
    flexible_field_2 varchar(10),
    flexible_field_3 varchar(10),
    flexible_field_4 varchar(10),
    flexible_field_5 varchar(10),
    flexible_field_6 varchar(10),
    flexible_field_7 varchar(10),
    flexible_field_8 varchar(10),
    ims_product_group varchar(3),
    month_ending varchar(10),
    xpo_nrx varchar(20),
    xpo_trx varchar(20),
    unknown_nrx varchar(20),
    unknown_trx varchar(20),
    new_therapy_starts varchar(20),
    continued_new varchar(20),
    switch_to varchar(20),
    add_on varchar(20),
    restart_same_new varchar(20),
    restart_different varchar(20),
    continued_refill varchar(20),
    restart_same_refill varchar(20),
    switch_from varchar(20),
    restart_different_from varchar(20),
    add_to varchar(20),
    market_new_to_brand_rx varchar(20),
    dynamic_capture_rx varchar(20),
    filler_02 varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.XPD_DEMOGRAPHICS_src
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    ims_id varchar(10),
    filler_01 varchar(10),
    last_name varchar(40),
    first_name varchar(40),
    middle_name varchar(40),
    address_1 varchar(40),
    address_2 varchar(40),
    city varchar(40),
    state varchar(2),
    zip varchar(5),
    specialty varchar(3),
    specialty_description varchar(25),
    trx_decile_retail varchar(2),
    nrx_decile_retail varchar(2),
    nbrx_decile_retail varchar(2),
    trx_decile_mail varchar(2),
    nrx_decile_mail varchar(2),
    nbrx_decile_mail varchar(2),
    market_prescriber_reliability_retail varchar(2),
    market_prescriber_reliability_mail varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.XPD_SWITCH_DETAILS_src
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator varchar(2),
    ims_id varchar(10),
    filler_01 varchar(10),
    specialty varchar(10),
    flexible_field_2 varchar(10),
    flexible_field_3 varchar(10),
    flexible_field_4 varchar(10),
    flexible_field_5 varchar(10),
    flexible_field_6 varchar(10),
    flexible_field_7 varchar(10),
    flexible_field_8 varchar(10),
    switch_from_product_group_num varchar(3),
    switch_to_product_group_num varchar(3),
    month_ending varchar(10),
    rx varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AXTRIA_TERRITORY_HIERARCHY_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(255),
    createddate varchar(64),
    createdbyid varchar(18),
    lastmodifieddate varchar(64),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(64),
    lastactivitydate varchar(64),
    lastvieweddate varchar(64),
    lastreferenceddate varchar(64),
    business_unit_code__c varchar(255),
    business_unit_name__c varchar(255),
    credentialing_eligible__c varchar(255),
    fleet_eligibile__c varchar(255),
    parent_territory_number__c varchar(255),
    sales_team_code__c varchar(255),
    sales_team_name__c varchar(255),
    territory_end_date__c varchar(255),
    territory_level__c varchar(255),
    territory_name__c varchar(255),
    territory_number__c varchar(255),
    territory_sampling__c varchar(255),
    territory_start_date__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PROGNOS_CINQAIR_V2_src
(
    week_end_date varchar(10),
    practice_name varchar(255),
    practice_address_line_1 varchar(255),
    pracitce_address_line_2 varchar(255),
    city varchar(255),
    state varchar(255),
    zip_code varchar(255),
    provider_first_name varchar(255),
    provider_last_name varchar(255),
    npi varchar(255),
    specialty_1 varchar(255),
    specialty_2 varchar(255),
    pts_with_moderate_severe_asthma_and_eosinophils_0_149 varchar(64),
    pts_with_moderate_severe_asthma_and_eosinophils_150_399 varchar(64),
    pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater varchar(64),
    pts_with_ao_asthma_and_eosinophils_0_149 varchar(64),
    pts_with_ao_asthma_and_eosinophils_150_399 varchar(64),
    pts_with_ao_asthma_and_eosinophils_400_or_greater varchar(64),
    pts_with_moderate_severe_asthma_and_has_eosinophils_300_499 varchar(64),
    pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src
(
    client_num varchar(3),
    report_num varchar(2),
    outlet_code varchar(10),
    zip varchar(10),
    subcategory_code varchar(10),
    sra_4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(64),
    dol_mth01 varchar(64),
    dol_mth02 varchar(64),
    dol_mth03 varchar(64),
    dol_mth04 varchar(64),
    dol_mth05 varchar(64),
    dol_mth06 varchar(64),
    dol_mth07 varchar(64),
    dol_mth08 varchar(64),
    dol_mth09 varchar(64),
    dol_mth10 varchar(64),
    dol_mth11 varchar(64),
    dol_mth12 varchar(64),
    dol_mth13 varchar(64),
    dol_mth14 varchar(64),
    dol_mth15 varchar(64),
    dol_mth16 varchar(64),
    dol_mth17 varchar(64),
    dol_mth18 varchar(64),
    dol_mth19 varchar(64),
    dol_mth20 varchar(64),
    dol_mth21 varchar(64),
    dol_mth22 varchar(64),
    dol_mth23 varchar(64),
    dol_mth24 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src
(
    client_num varchar(3),
    report_num varchar(2),
    outlet_code varchar(10),
    zip varchar(10),
    subcategory_code varchar(10),
    sra_4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(64),
    qty_mth01 varchar(64),
    qty_mth02 varchar(64),
    qty_mth03 varchar(64),
    qty_mth04 varchar(64),
    qty_mth05 varchar(64),
    qty_mth06 varchar(64),
    qty_mth07 varchar(64),
    qty_mth08 varchar(64),
    qty_mth09 varchar(64),
    qty_mth10 varchar(64),
    qty_mth11 varchar(64),
    qty_mth12 varchar(64),
    qty_mth13 varchar(64),
    qty_mth14 varchar(64),
    qty_mth15 varchar(64),
    qty_mth16 varchar(64),
    qty_mth17 varchar(64),
    qty_mth18 varchar(64),
    qty_mth19 varchar(64),
    qty_mth20 varchar(64),
    qty_mth21 varchar(64),
    qty_mth22 varchar(64),
    qty_mth23 varchar(64),
    qty_mth24 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ONC_SALES_ADJUSTMENT_LOAD_src
(
    adj_code varchar(10),
    adj_time_period varchar(10),
    tvcmid varchar(64),
    basket_id varchar(64),
    adj_factor varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(255),
    createddate varchar(64),
    createdbyid varchar(18),
    lastmodifieddate varchar(64),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(64),
    lastactivitydate varchar(64),
    lastvieweddate varchar(64),
    lastreferenceddate varchar(64),
    assignment_end_date__c varchar(255),
    assignment_start_date__c varchar(255),
    assignment_status__c varchar(255),
    assignment_type__c varchar(255),
    global_employee_id__c varchar(255),
    rms_territory_name__c varchar(255),
    rms_territory_number__c varchar(255),
    employee__c varchar(255),
    first_name__c varchar(255),
    hire_date__c varchar(255),
    last_name__c varchar(255),
    local_employee_id__c varchar(255),
    middle_name__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_USER_src
(
    id varchar(18),
    username varchar(80),
    lastname varchar(80),
    firstname varchar(40),
    name varchar(121),
    companyname varchar(80),
    division varchar(80),
    department varchar(80),
    title varchar(80),
    street varchar(255),
    city varchar(40),
    state varchar(80),
    postalcode varchar(20),
    country varchar(80),
    latitude varchar(64),
    longitude varchar(64),
    email varchar(128),
    emailpreferencesautobcc varchar(5),
    emailpreferencesautobccstayint varchar(5),
    emailpreferencesstayintouchrem varchar(5),
    senderemail varchar(80),
    sendername varchar(80),
    signature varchar(1333),
    stayintouchsubject varchar(80),
    stayintouchsignature varchar(512),
    stayintouchnote varchar(512),
    phone varchar(40),
    fax varchar(40),
    mobilephone varchar(40),
    alias varchar(8),
    communitynickname varchar(40),
    isactive varchar(5),
    timezonesidkey varchar(40),
    userroleid varchar(18),
    localesidkey varchar(40),
    receivesinfoemails varchar(5),
    receivesadmininfoemails varchar(5),
    emailencodingkey varchar(40),
    usertype varchar(40),
    languagelocalekey varchar(40),
    employeenumber varchar(20),
    delegatedapproverid varchar(18),
    managerid varchar(18),
    lastlogindate varchar(24),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    offlinetrialexpirationdate varchar(24),
    offlinepdatrialexpirationdate varchar(24),
    userpermissionsmarketinguser varchar(5),
    userpermissionsofflineuser varchar(5),
    userpermissionswirelessuser varchar(5),
    userpermissionsavantgouser varchar(5),
    userpermscallcenterautologin varchar(5),
    userpermissionsmobileuser varchar(5),
    userpermissionssfcontentuser varchar(5),
    userpermissionsinteractionuser varchar(5),
    userpermschatteranswersuser varchar(5),
    forecastenabled varchar(5),
    userprefsactivityreminderspopu varchar(5),
    userprefseventreminderscheckbo varchar(5),
    userprefstaskreminderscheckbox varchar(5),
    userprefsremindersoundoff varchar(5),
    userprefshidecsngetchattermobi varchar(5),
    userprefshidecsndesktoptask varchar(5),
    userpreferencesoptoutoftouch varchar(5),
    userprefsshowtitletoexternalus varchar(5),
    userprefsshowmanagertoexternal varchar(5),
    userprefsshowemailtoexternalus varchar(5),
    userprefsshowworkphonetoextern varchar(5),
    userprefsshowmobilephonetoexte varchar(5),
    userprefsshowfaxtoexternaluser varchar(5),
    userprefsshowstreetaddresstoex varchar(5),
    userprefsshowcitytoexternaluse varchar(5),
    userprefsshowstatetoexternalus varchar(5),
    userprefsshowpostalcodetoexter varchar(5),
    userprefsshowcountrytoexternal varchar(5),
    userprefsshowprofilepictoguest varchar(5),
    userprefsshowtitletoguestusers varchar(5),
    userprefsshowcitytoguestusers varchar(5),
    userprefsshowstatetoguestusers varchar(5),
    userprefsshowpostalcodetoguest varchar(5),
    userprefsshowcountrytoguestuse varchar(5),
    contactid varchar(18),
    accountid varchar(18),
    callcenterid varchar(18),
    extension varchar(40),
    federationidentifier varchar(512),
    lastvieweddate varchar(24),
    lastreferenceddate varchar(24),
    last_mobile_connect_vod__c varchar(24),
    last_tablet_connect_vod__c varchar(24),
    last_mobile_connect_version varchar(50),
    last_tablet_connect_version varchar(50),
    last_mobile_sync_vod__c varchar(24),
    last_tablet_sync_vod__c varchar(24),
    raiselogginglevel_vod__c varchar(255),
    senddetailedlog_vod__c varchar(5),
    last_blackberry_connect_vod__c varchar(24),
    last_blackberry_connect_versio varchar(50),
    last_blackberry_sync_vod__c varchar(24),
    force_full_refresh_vod__c varchar(5),
    override_systemmodstamp_timest varchar(24),
    facetime_email_vod__c varchar(100),
    facetime_phone_vod__c varchar(40),
    product_expertise_vod__c varchar(4000),
    available_vod__c varchar(255),
    available_last_update_vod__c varchar(24),
    last_ipad_connect_version varchar(50),
    last_ipad_connect_vod__c varchar(24),
    last_ipad_sync_vod__c varchar(24),
    inventory_order_allocation_gro varchar(80),
    concur_user_id_vod__c varchar(255),
    external_id_tva__c varchar(30),
    last_ipad_ios_version_vod__c varchar(50),
    veeva_id__c varchar(1300),
    login_id_tva__c varchar(30),
    primary_territory_vod__c varchar(80),
    analytics_admin_vod__c varchar(5),
    content_admin_vod__c varchar(5),
    upload_vtrans_vod__c varchar(5),
    can_sample_tva__c varchar(5),
    do_not_modify_tva__c varchar(5),
    profile_name_vod__c varchar(1300),
    Remote_Meeting_Host_Id_vod__c varchar(100),
    Remote_Meeting_Host_Token_vod__c varchar(255),
    Remote_Meeting_Start_From_CRM_Online_vod__c varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_CALL2_VOD__C_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(80),
    recordtypeid varchar(18),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    lastactivitydate varchar(10),
    mayedit varchar(5),
    islocked varchar(5),
    lastvieweddate varchar(24),
    lastreferenceddate varchar(24),
    sample_card_vod__c varchar(15),
    add_detail_vod__c varchar(1000),
    property_vod__c varchar(64),
    account_vod__c varchar(18),
    zvod_product_discussion_vod__c varchar(5),
    status_vod__c varchar(255),
    parent_address_vod__c varchar(18),
    account_plan_vod__c varchar(18),
    zvod_savenew_vod__c varchar(5),
    next_call_notes_vod__c varchar(255),
    mobile_id_vod__c varchar(100),
    zvod_account_credentials_vod_c varchar(5),
    zvod_account_preferred_name_vo varchar(5),
    zvod_account_sample_status_vod varchar(5),
    zvod_attendees_vod__c varchar(5),
    zvod_key_messages_vod__c varchar(5),
    zvod_detailing_vod__c varchar(5),
    zvod_expenses_vod__c varchar(5),
    zvod_followup_vod__c varchar(5),
    zvod_samples_vod__c varchar(5),
    zvod_save_vod__c varchar(5),
    zvod_submit_vod__c varchar(5),
    zvod_delete_vod__c varchar(5),
    activity_type__c varchar(255),
    significant_event__c varchar(5),
    location_vod__c varchar(128),
    subject_vod__c varchar(128),
    call_datetime_vod__c varchar(24),
    disbursed_to_vod__c varchar(255),
    request_receipt_vod__c varchar(5),
    signature_date_vod__c varchar(24),
    territory_vod__c varchar(100),
    submitted_by_mobile_vod__c varchar(5),
    call_type_vod__c varchar(255),
    add_key_message_vod__c varchar(4000),
    address_vod__c varchar(500),
    attendees_vod__c varchar(64),
    attendee_type_vod__c varchar(255),
    call_date_vod__c varchar(10),
    detailed_products_vod__c varchar(255),
    no_disbursement_vod__c varchar(5),
    parent_call_vod__c varchar(18),
    user_vod__c varchar(18),
    contact_vod__c varchar(18),
    zvod_entity_vod__c varchar(5),
    medical_event_vod__c varchar(18),
    mobile_created_datetime_vod__c varchar(24),
    mobile_last_modified_datetime varchar(24),
    license_vod__c varchar(25),
    is_parent_call_vod__c varchar(64),
    entity_display_name_vod__c varchar(1300),
    last_device_vod__c varchar(255),
    ship_address_line_1_vod__c varchar(80),
    ship_address_line_2_vod__c varchar(100),
    ship_city_vod__c varchar(40),
    ship_country_vod__c varchar(20),
    ship_license_expiration_date varchar(10),
    ship_license_status_vod__c varchar(25),
    ship_license_vod__c varchar(25),
    ship_state_vod__c varchar(30),
    ship_to_address_vod__c varchar(18),
    ship_zip_vod__c varchar(20),
    ship_to_address_text_vod__c varchar(1300),
    clm_vod__c varchar(5),
    zvod_clmdetails_vod__c varchar(5),
    is_sampled_call_vod__c varchar(5),
    zvod_surveys_vod__c varchar(5),
    presentations_vod__c varchar(500),
    entity_reference_id_vod__c varchar(100),
    error_reference_call_vod__c varchar(18),
    duration_vod__c varchar(64),
    color_vod__c varchar(255),
    allowed_products_vod__c varchar(1000),
    zvod_attachments_vod__c varchar(5),
    sample_card_reason_vod__c varchar(255),
    assmca_vod__c varchar(100),
    address_line_1_vod__c varchar(80),
    address_line_2_vod__c varchar(100),
    city_vod__c varchar(40),
    dea_address_line_1_vod__c varchar(80),
    dea_address_line_2_vod__c varchar(100),
    dea_address_vod__c varchar(18),
    dea_city_vod__c varchar(40),
    dea_expiration_date_vod__c varchar(10),
    dea_state_vod__c varchar(10),
    dea_zip_4_vod__c varchar(4),
    dea_zip_vod__c varchar(20),
    dea_vod__c varchar(9),
    ship_zip_4_vod__c varchar(4),
    state_vod__c varchar(10),
    zip_4_vod__c varchar(4),
    zip_vod__c varchar(20),
    sample_send_card_vod__c varchar(15),
    zvod_address_vod_c_dea_status_ varchar(5),
    signature_page_image_vod__c varchar(255),
    credentials_vod__c varchar(255),
    salutation_vod__c varchar(255),
    zvod_account_call_reminder_vod varchar(5),
    sales_org_tva__c varchar(1300),
    zvod_business_account_vod__c varchar(5),
    product_priority_1_vod__c varchar(18),
    product_priority_2_vod__c varchar(18),
    product_priority_3_vod__c varchar(18),
    product_priority_4_vod__c varchar(18),
    product_priority_5_vod__c varchar(18),
    zvod_more_actions_vod__c varchar(5),
    zvod_call_conflict_status varchar(5),
    signature_timestamp_vod__c varchar(64),
    expense_amount_vod__c varchar(64),
    total_expense_attendees_count varchar(64),
    attendee_list_vod__c varchar(4000),
    expense_post_status_vod__c varchar(10),
    attendee_post_status_vod__c varchar(10),
    expense_system_external_id varchar(255),
    incurred_expense_vod__c varchar(5),
    assigner_vod__c varchar(18),
    assignment_datetime_vod__c varchar(24),
    zvod_call_objective_vod__c varchar(5),
    signature_location_longitude varchar(64),
    signature_location_latitude varchar(64),
    location_services_status varchar(255),
    created_by_timezone_tva__c varchar(120),
    license_expiration_date_vod__c varchar(10),
    license_status_vod__c varchar(255),
    ship_assmca_vod__c varchar(100),
    ship_dea_expiration_date varchar(10),
    ship_dea_vod__c varchar(9),
    call_method_tva__c varchar(255),
    bendeka_indication_tva__c varchar(5000),
    austedo_indication_tva__c varchar(5000),
    call_duration_tva__c varchar(3),
    How_Executed_TVA__c varchar(40),
    Remote_Meeting_vod__c varchar(100),
    Veeva_Remote_Meeting_Id_vod__c varchar(20),
    Cobrowse_URL_Participant_vod__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp,
    Signature_Captured_Remotely_vod__c varchar(150),
    Remote_Signature_Attendee_Name_vod__c varchar(5),
    t21s10_austedo_indication_tva__c varchar(255),
    t22s2_outcomes_from_visit__c varchar(50),
    t22s2_visit_trigger__c varchar(50),
    t22s2_visit_trigger_date__c varchar(24)
);


CREATE TABLE teva_ingestion.EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src
(
    Id varchar(18),
    IsDeleted varchar(5),
    Name varchar(80),
    RecordTypeId varchar(18),
    CreatedDate varchar(24),
    CreatedById varchar(18),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    MayEdit varchar(5),
    IsLocked varchar(5),
    Remote_Meeting_vod__c varchar(18),
    Call_vod__c varchar(18),
    Join_Time_vod__c varchar(24),
    Leave_Time_vod__c varchar(24),
    Meeting_End_Time_vod__c varchar(24),
    Meeting_Start_Time_vod__c varchar(24),
    Name_vod__c varchar(150),
    Participant_Id_vod__c varchar(20),
    VExternal_Id_vod__c varchar(255),
    Veeva_Remote_Meeting_Id_vod__c varchar(20),
    Device_vod__c varchar(150),
    EM_Attendee_vod__c varchar(18),
    EM_Event_Speaker_vod__c varchar(18),
    Event_vod__c varchar(18),
    Network_Type_vod__c varchar(150),
    Meeting_Duration_vod__c varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_OCHL_W_src
(
    Constant_CL varchar(2),
    ddd_client_number varchar(4),
    blank1 varchar(2),
    client_territory_number varchar(8),
    ddd_outlet_number varchar(8),
    ddd_outlet_name varchar(25),
    ddd_outlet_address varchar(23),
    city varchar(19),
    state varchar(2),
    subcategory_code varchar(2),
    action_code varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_OCHL_M_src
(
    Constant_CL varchar(2),
    ddd_client_number varchar(4),
    blank1 varchar(2),
    client_territory_number varchar(8),
    ddd_outlet_number varchar(8),
    ddd_outlet_name varchar(25),
    ddd_outlet_address varchar(23),
    city varchar(19),
    state varchar(2),
    subcategory_code varchar(2),
    action_code varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.XPD_ADD_ON_DETAILS_src
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator varchar(2),
    ims_id varchar(10),
    filler_01 varchar(10),
    specialty varchar(10),
    flexible_field_2 varchar(10),
    flexible_field_3 varchar(10),
    flexible_field_4 varchar(10),
    flexible_field_5 varchar(10),
    flexible_field_6 varchar(10),
    flexible_field_7 varchar(10),
    flexible_field_8 varchar(10),
    add_to_product_group varchar(3),
    add_On_product_group varchar(3),
    month_ending varchar(10),
    add_on_rx varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.XPD_RESTART_DIFF_DETAILS_src
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator varchar(2),
    ims_id varchar(10),
    filler_01 varchar(10),
    specialty varchar(10),
    flexible_field_2 varchar(10),
    flexible_field_3 varchar(10),
    flexible_field_4 varchar(10),
    flexible_field_5 varchar(10),
    flexible_field_6 varchar(10),
    flexible_field_7 varchar(10),
    flexible_field_8 varchar(10),
    rdf_product_group varchar(3),
    rd_product_group varchar(3),
    month_ending varchar(10),
    restart_diff_rx varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TRIALCARD_COUPON_src
(
    redemption_type varchar(7),
    transaction_type varchar(1),
    claim_authorization_number varchar(20),
    original_claim_authorization_number varchar(20),
    date_of_fill varchar(64),
    date_written varchar(64),
    day_supply varchar(64),
    ndc varchar(19),
    daw varchar(64),
    drug_name varchar(55),
    drug_description varchar(55),
    new_refill_code varchar(64),
    quantity varchar(64),
    number_of_refills varchar(64),
    other_coverage_code varchar(64),
    group_num varchar(18),
    member_id varchar(20),
    patient_gender varchar(1),
    patient_age varchar(64),
    date_processed varchar(64),
    nabp varchar(15),
    pharmacy_chain varchar(60),
    pharmacy_npi varchar(11),
    rx_num varchar(80),
    pharmacy_name varchar(60),
    pharmacy_address_1 varchar(100),
    pharmacy_address_2 varchar(100),
    pharmacy_city varchar(50),
    pharmacy_state varchar(2),
    pharmacy_zip varchar(10),
    pharmacy_phone varchar(10),
    hcp_npi varchar(15),
    hcp_first_name varchar(35),
    hcp_middle_name varchar(35),
    hcp_last_name varchar(35),
    hcp_suffix varchar(35),
    hcp_designation varchar(20),
    hcp_specialty_1 varchar(50),
    hcp_specialty_2 varchar(50),
    hcp_address_1 varchar(40),
    hcp_address_2 varchar(40),
    hcp_city varchar(35),
    hcp_state varchar(2),
    hcp_zip varchar(10),
    submission_method varchar(1),
    previous_payer_id varchar(15),
    patient_expense varchar(64),
    patient_benefit varchar(64),
    patient_copay varchar(64),
    patient_oop varchar(64),
    pharmacy_fee varchar(64),
    amount_due varchar(64),
    create_date varchar(64),
    occ_payment_type varchar(15),
    calc_awp varchar(184),
    admin_hcp_npi varchar(15),
    admin_hcp_name varchar(100),
    admin_hcp_address varchar(100),
    admin_hcp_address2 varchar(100),
    admin_hcp_city varchar(50),
    admin_hcp_state varchar(2),
    admin_hcp_zip varchar(10),
    claim_type varchar(50),
    administration_flag varchar(50),
    soc_name varchar(60),
    soc_phone varchar(10),
    soc_fax varchar(10),
    soc_address varchar(100),
    soc_city varchar(50),
    soc_state varchar(2),
    soc_zip varchar(10),
    soc_id varchar(50),
    soc_npi varchar(15),
    payer_name varchar(60),
    cpt_code varchar(10),
    patient_type varchar(100),
    primary_bin varchar(100),
    primary_bin_description varchar(100),
    reject_code varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DDD_DOLLARS_M_ADHOC_src
(
    client_num varchar(3),
    report_num varchar(2),
    outlet_code varchar(10),
    zip varchar(10),
    subcategory_code varchar(10),
    sra_4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(64),
    dol_mth01 varchar(64),
    dol_mth02 varchar(64),
    dol_mth03 varchar(64),
    dol_mth04 varchar(64),
    dol_mth05 varchar(64),
    dol_mth06 varchar(64),
    dol_mth07 varchar(64),
    dol_mth08 varchar(64),
    dol_mth09 varchar(64),
    dol_mth10 varchar(64),
    dol_mth11 varchar(64),
    dol_mth12 varchar(64),
    dol_mth13 varchar(64),
    dol_mth14 varchar(64),
    dol_mth15 varchar(64),
    dol_mth16 varchar(64),
    dol_mth17 varchar(64),
    dol_mth18 varchar(64),
    dol_mth19 varchar(64),
    dol_mth20 varchar(64),
    dol_mth21 varchar(64),
    dol_mth22 varchar(64),
    dol_mth23 varchar(64),
    dol_mth24 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DDD_QUANTITY_M_ADHOC_src
(
    client_num varchar(3),
    report_num varchar(2),
    outlet_code varchar(10),
    zip varchar(10),
    subcategory_code varchar(10),
    sra_4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(64),
    qty_mth01 varchar(64),
    qty_mth02 varchar(64),
    qty_mth03 varchar(64),
    qty_mth04 varchar(64),
    qty_mth05 varchar(64),
    qty_mth06 varchar(64),
    qty_mth07 varchar(64),
    qty_mth08 varchar(64),
    qty_mth09 varchar(64),
    qty_mth10 varchar(64),
    qty_mth11 varchar(64),
    qty_mth12 varchar(64),
    qty_mth13 varchar(64),
    qty_mth14 varchar(64),
    qty_mth15 varchar(64),
    qty_mth16 varchar(64),
    qty_mth17 varchar(64),
    qty_mth18 varchar(64),
    qty_mth19 varchar(64),
    qty_mth20 varchar(64),
    qty_mth21 varchar(64),
    qty_mth22 varchar(64),
    qty_mth23 varchar(64),
    qty_mth24 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_RELIANCE_src
(
    referral_number varchar(64),
    hub_order_trans_number varchar(20),
    date_written varchar(64),
    referral_source varchar(30),
    referral_date varchar(64),
    patient_first_ship_date varchar(64),
    ship_date varchar(64),
    full_product_name varchar(100),
    product_strength varchar(30),
    product_form varchar(30),
    ndc_number varchar(13),
    quantity_shipped varchar(64),
    quantity_uom varchar(30),
    days_supplied varchar(64),
    dosing_instructions varchar(500),
    frequency varchar(8),
    rx_number varchar(10),
    rx_type varchar(6),
    authorized_refills varchar(64),
    fill_number varchar(64),
    refills_remaining varchar(64),
    primary_icd_codes varchar(20),
    secondary_icd_codes varchar(20),
    ship_to_location_type varchar(20),
    shipping_carrier varchar(40),
    npi varchar(10),
    dea varchar(13),
    spp_physician_id varchar(64),
    first_name varchar(30),
    middle_name varchar(30),
    last_name varchar(30),
    suffix varchar(15),
    physician_address1 varchar(40),
    physician_address2 varchar(40),
    physician_city varchar(40),
    physician_state varchar(2),
    physician_zip varchar(5),
    physician_phone varchar(20),
    physician_fax varchar(20),
    primary_payer_bin varchar(20),
    primary_payer_pcn varchar(20),
    primary_group_num varchar(30),
    primary_payer_name varchar(100),
    primary_payer_type varchar(25),
    primary_benefit_type varchar(20),
    primary_co_pay_amount varchar(20),
    primary_pa_required varchar(3),
    primary_pa_exp_date varchar(8),
    secondary_payer_bin varchar(20),
    secondary_payer_pcn varchar(20),
    secondary_group_num varchar(30),
    secondary_payer_name varchar(100),
    secondary_copay_amount varchar(20),
    encrypted_spp_patient_id varchar(40),
    hub_identifier varchar(25),
    patient_state varchar(2),
    patient_yob varchar(64),
    patient_gender varchar(1),
    pharmacy_name varchar(50),
    pharmacy_location_name varchar(100),
    location_dea varchar(16),
    location_npi_number varchar(20),
    location_ncpdp_number varchar(20),
    reliance_record_id varchar(64),
    restatement_flag varchar(1),
    physician_sln varchar(15),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_knipper_samples_v2_src
(
    tvcmid varchar(20),
    hcp_veeva_id varchar(25),
    hcp_first_name varchar(50),
    hcp_middle_name varchar(50),
    hcp_last_name varchar(50),
    hcp_designation varchar(30),
    hcp_state_license_number varchar(20),
    hcp_address1 varchar(35),
    hcp_address2 varchar(35),
    hcp_address3 varchar(35),
    hcp_city varchar(50),
    hcp_state varchar(2),
    hcp_zip varchar(10),
    dea_license_number varchar(20),
    order_source_order_id varchar(20),
    ndc varchar(20),
    quantity varchar(20),
    order_source_job_code varchar(14),
    order_source_job_code_description varchar(50),
    ship_date varchar(10),
    territory varchar(20),
    repid varchar(20),
    replastname varchar(50),
    repmiddlename varchar(50),
    repfirstname varchar(50),
    signature_type varchar(50),
    attendeename varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp,
    literature_product_id varchar(20),
    literature_product_name varchar(50)
);


CREATE TABLE teva_ingestion.EXT_ZIP_TO_TERR_V2_src
(
    zip varchar(10),
    city varchar(50),
    state varchar(2),
    territory_1_id varchar(8),
    territory_name varchar(50),
    area_name varchar(50),
    region_name varchar(50),
    mirror_flag varchar(1),
    territory_2_id varchar(8),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_TEVA_PAYER_MASTER_DETALS_src
(
    plan_code varchar(10),
    plan_name varchar(100),
    payer_name varchar(100),
    pbm varchar(100),
    payment_type varchar(100),
    key_controlling_plan_formulary varchar(100),
    key_controlling_account varchar(100),
    ajovy_access_for_ftf_plan varchar(50),
    aimovig_access_for_ftf_plan varchar(50),
    emgality_access_for_ftf_plan varchar(50),
    apportionment_factor varchar(64),
    key_controlling_parent varchar(100),
    pbm_payer_filter varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp,
    gpo varchar(100),
    refresh_month varchar(100)
);


CREATE TABLE teva_ingestion.EXT_VV_SUGGESTION_TAG_VOD__C_src
(
    id varchar(36),
    isdeleted varchar(36),
    name varchar(80),
    recordtypeid varchar(36),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    suggestion_vod__c varchar(36),
    detail_group_vod__c varchar(36),
    driver_vod__c varchar(255),
    email_fragment_order_vod__c varchar(255),
    email_fragment_vod__c varchar(36),
    external_id_vod__c varchar(255),
    product_vod__c varchar(36),
    record_type_name_vod__c varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_SUGGESTION_VOD__C_src
(
    id varchar(36),
    ownerid varchar(36),
    isdeleted varchar(5),
    name varchar(80),
    recordtypeid varchar(36),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    lastvieweddate varchar(24),
    lastreferenceddate varchar(24),
    account_priority_score_vod__c varchar(64),
    account_vod__c varchar(36),
    action_count_vod__c varchar(64),
    actioned_vod__c varchar(64),
    call_objective_clm_id_vod__c varchar(255),
    call_objective_from_date_vod__c varchar(24),
    call_objective_on_by_default_vod__c varchar(5),
    call_objective_record_type_vod__c varchar(255),
    call_objective_to_date_vod__c varchar(24),
    dismiss_count_vod__c varchar(64),
    dismissed_vod__c varchar(64),
    display_dismiss_vod__c varchar(5),
    display_mark_as_complete_vod__c varchar(5),
    display_score_vod__c varchar(5),
    email_template_id_vod__c varchar(255),
    email_template_vault_id_vod__c varchar(255),
    email_template_vod__c varchar(5),
    expiration_date_vod__c varchar(24),
    mark_complete_count_vod__c varchar(64),
    marked_as_complete_vod__c varchar(64),
    no_homepage_vod__c varchar(5),
    planned_call_date_vod__c varchar(24),
    posted_date_vod__c varchar(24),
    priority_vod__c varchar(18),
    reason_vod__c varchar(2000),
    record_type_name_vod__c varchar(100),
    suggestion_external_id_vod__c varchar(255),
    suppress_reason_vod__c varchar(5),
    title_vod__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CC_TITRATION_DOSAGE_src
(
    tvcm_id int,
    ims_id varchar(50),
    product_name varchar(50),
    data_type varchar(50),
    avg_td_daily_dose_new_patient numeric(10,3),
    avg_td_daily_dose_cont_patient numeric(10,3),
    batch_id int,
    row_id int,
    update_ts timestamp,
    data_ending_month varchar(64)
);


CREATE TABLE teva_ingestion.EXT_PSRF_UTIL_RPT_src
(
    current_week_psrfs varchar(20),
    current_month_psrfs varchar(20),
    hcp_signature_yes varchar(20),
    hcp_signature_no varchar(20),
    patient_auth_yes varchar(20),
    patient_auth_no varchar(20),
    ytd_psrfs varchar(20),
    prescribernpi varchar(10),
    prescriberzip varchar(12),
    prescribercity varchar(50),
    prescriberstate varchar(50),
    prescribername varchar(58),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DMD_MONTHLY_QUANTITY_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    FILLER_01 varchar(255),
    IMS_OUTLET_CODE varchar(10),
    SUBCATEGORY_CODE varchar(10),
    ALT_SEQ_NUM varchar(10),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(9),
    DATA_DATE varchar(64),
    QTY_MTH01 varchar(64),
    QTY_MTH02 varchar(64),
    QTY_MTH03 varchar(64),
    QTY_MTH04 varchar(64),
    QTY_MTH05 varchar(64),
    QTY_MTH06 varchar(64),
    QTY_MTH07 varchar(64),
    QTY_MTH08 varchar(64),
    QTY_MTH09 varchar(64),
    QTY_MTH10 varchar(64),
    QTY_MTH11 varchar(64),
    QTY_MTH12 varchar(64),
    QTY_MTH13 varchar(64),
    QTY_MTH14 varchar(64),
    QTY_MTH15 varchar(64),
    QTY_MTH16 varchar(64),
    QTY_MTH17 varchar(64),
    QTY_MTH18 varchar(64),
    QTY_MTH19 varchar(64),
    QTY_MTH20 varchar(64),
    QTY_MTH21 varchar(64),
    QTY_MTH22 varchar(64),
    QTY_MTH23 varchar(64),
    QTY_MTH24 varchar(64),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(30),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FACTORY_SALES_852_src
(
    TRADING_PARTNER varchar(50),
    DISTRIB_CENTER varchar(50),
    DISTRIB_CENTER_DEA_NUM varchar(20),
    REPORTING_DATE varchar(10),
    PRODUCT_NAME varchar(50),
    DESCRIPTION varchar(50),
    NDC varchar(20),
    QTY_RECEIVED varchar(64),
    QTY_RECEIVED_DOLLARS varchar(64),
    QTY_SOLD varchar(64),
    QTY_SOLD_DOLLARS varchar(64),
    QTY_OMIT varchar(64),
    QTY_OMIT_DOLLARS varchar(64),
    MTH_END_QTY_ON_HAND varchar(64),
    MTH_END_QTY_ON_HAND_DOLLARS varchar(64),
    MTH_END_COMMITTED varchar(64),
    MTH_END_COMMITTED_DOLLARS varchar(64),
    MTH_END_RESERVED varchar(64),
    MTH_END_RESERVED_DOLLARS varchar(64),
    QTY_RETURN varchar(64),
    QTY_RETURN_DOLLARS varchar(64),
    QTY_CUSTOMER_RETURN varchar(64),
    QTY_CUSTOMER_RETURN_DOLLARS varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.C_BO_HCP_DETAIL_src
(
    ROWID_OBJECT char(14),
    CREATOR varchar(50),
    CREATE_DATE varchar(64),
    UPDATED_BY varchar(50),
    LAST_UPDATE_DATE varchar(64),
    CONSOLIDATION_IND varchar(64),
    DELETED_IND varchar(64),
    DELETED_BY varchar(50),
    DELETED_DATE varchar(64),
    LAST_ROWID_SYSTEM char(14),
    DIRTY_IND varchar(64),
    INTERACTION_ID varchar(64),
    HUB_STATE_IND varchar(64),
    CM_DIRTY_IND varchar(64),
    TVCMID char(14),
    IMS_PRESCRIBER_ID varchar(7),
    PREFIX varchar(10),
    FIRST_NAME varchar(40),
    LAST_NAME varchar(40),
    MIDDLE_NAME varchar(40),
    SUFFIX varchar(10),
    HEALTHCARE_PROF_STATUS_CD varchar(10),
    YEAR_OF_BIRTH varchar(64),
    DATE_OF_DEATH varchar(64),
    GENDER_CODE varchar(5),
    TEVA_SPECIALTY_CODE varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.C_BO_IMS_FLAG_src
(
    ROWID_OBJECT char(14),
    CREATOR varchar(50),
    CREATE_DATE varchar(64),
    UPDATED_BY varchar(50),
    LAST_UPDATE_DATE varchar(64),
    CONSOLIDATION_IND varchar(64),
    DELETED_IND varchar(64),
    DELETED_BY varchar(50),
    DELETED_DATE varchar(64),
    LAST_ROWID_SYSTEM char(14),
    DIRTY_IND varchar(64),
    INTERACTION_ID varchar(64),
    HUB_STATE_IND varchar(64),
    CM_DIRTY_IND varchar(64),
    FLAG_TYPE varchar(10),
    FLAG_VALUE char(1),
    EFFECTIVE_DATE varchar(64),
    HCP_DETAIL_ID char(14),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src
(
    TRANS_TYPE varchar(1),
    ASI_TXN_ID varchar(20),
    ORIG_ASI_TXN_ID varchar(20),
    RX_NUM varchar(50),
    RX_DATE varchar(15),
    DATE_WRITTEN varchar(15),
    DAYS_SUPPLY varchar(64),
    NDC_CODE varchar(15),
    DAW varchar(64),
    DRUG_NAME varchar(50),
    DRUG_DESC varchar(50),
    NEW_REFILL varchar(64),
    QUANTITY varchar(64),
    REFILLS varchar(64),
    OTHER_COVERAGE_CODE varchar(64),
    GROUP_NUM varchar(5),
    COUPON_NUM varchar(20),
    SEX varchar(1),
    AGE_AT_REDEMPTION varchar(15),
    PHARMACY_PROCESS_DATE varchar(15),
    PHARMACY_CHAIN_NUM varchar(15),
    NABP varchar(15),
    PHARMACY_CHAIN varchar(50),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS varchar(100),
    PHARMACY_ADDRESS2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PHARMACY_PHONE varchar(25),
    PHARMACY_NPI_NUM varchar(25),
    PRINCIPLE_PHYS_DEA_NUM varchar(20),
    PHYS_NPI varchar(64),
    PHYSICIAN_NAME varchar(100),
    ASI_PHYS_ADDRESS1 varchar(50),
    ASI_PHYS_ADDRESS2 varchar(50),
    ASI_PHYS_CITY varchar(50),
    ASI_PHYS_STATE varchar(2),
    ASI_PHYS_ZIP varchar(15),
    REBATE_AMOUNT varchar(10),
    MEMBER_CASH_EXPENSE varchar(10),
    SUBMITTED_COST varchar(10),
    PHARMACY_FEE varchar(10),
    TOTAL_AMOUNT_DUE varchar(10),
    CALC_AWP varchar(10),
    CREATE_DATE varchar(15),
    OCC_PAYMENT_TYPE varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src
(
    TRANS_TYPE varchar(1),
    ASI_TXN_ID varchar(20),
    ORIG_ASI_TXN_ID varchar(20),
    RX_NUM varchar(50),
    RX_DATE varchar(15),
    DATE_WRITTEN varchar(15),
    DAYS_SUPPLY varchar(64),
    NDC_CODE varchar(15),
    DAW varchar(64),
    DRUG_NAME varchar(50),
    DRUG_DESC varchar(50),
    NEW_REFILL varchar(64),
    QUANTITY varchar(64),
    REFILLS varchar(64),
    OTHER_COVERAGE_CODE varchar(64),
    GROUP_NUM varchar(5),
    COUPON_NUM varchar(20),
    SEX varchar(1),
    AGE_AT_REDEMPTION varchar(15),
    PHARMACY_PROCESS_DATE varchar(15),
    PHARMACY_CHAIN_NUM varchar(15),
    NABP varchar(15),
    PHARMACY_CHAIN varchar(50),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS varchar(100),
    PHARMACY_ADDRESS2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PHARMACY_PHONE varchar(25),
    PHARMACY_NPI_NUM varchar(25),
    PRINCIPLE_PHYS_DEA_NUM varchar(20),
    PHYS_NPI varchar(64),
    PHYSICIAN_NAME varchar(100),
    ASI_PHYS_ADDRESS1 varchar(50),
    ASI_PHYS_ADDRESS2 varchar(50),
    ASI_PHYS_CITY varchar(50),
    ASI_PHYS_STATE varchar(2),
    ASI_PHYS_ZIP varchar(15),
    REBATE_AMOUNT varchar(10),
    MEMBER_CASH_EXPENSE varchar(10),
    SUBMITTED_COST varchar(10),
    PHARMACY_FEE varchar(10),
    TOTAL_AMOUNT_DUE varchar(10),
    CALC_AWP varchar(10),
    CREATE_DATE varchar(15),
    OCC_PAYMENT_TYPE varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src
(
    TRANS_TYPE varchar(1),
    ASI_TXN_ID varchar(20),
    ORIG_ASI_TXN_ID varchar(20),
    RX_NUM varchar(50),
    RX_DATE varchar(15),
    DATE_WRITTEN varchar(15),
    DAYS_SUPPLY varchar(64),
    NDC_CODE varchar(15),
    DAW varchar(64),
    DRUG_NAME varchar(50),
    DRUG_DESC varchar(50),
    NEW_REFILL varchar(64),
    QUANTITY varchar(64),
    REFILLS varchar(64),
    OTHER_COVERAGE_CODE varchar(64),
    GROUP_NUM varchar(5),
    COUPON_NUM varchar(20),
    SEX varchar(1),
    AGE_AT_REDEMPTION varchar(15),
    PHARMACY_PROCESS_DATE varchar(15),
    PHARMACY_CHAIN_NUM varchar(15),
    NABP varchar(15),
    PHARMACY_CHAIN varchar(50),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS varchar(100),
    PHARMACY_ADDRESS2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PHARMACY_PHONE varchar(25),
    PHARMACY_NPI_NUM varchar(25),
    PRINCIPLE_PHYS_DEA_NUM varchar(20),
    PHYS_NPI varchar(64),
    PHYSICIAN_NAME varchar(100),
    ASI_PHYS_ADDRESS1 varchar(50),
    ASI_PHYS_ADDRESS2 varchar(50),
    ASI_PHYS_CITY varchar(50),
    ASI_PHYS_STATE varchar(2),
    ASI_PHYS_ZIP varchar(15),
    REBATE_AMOUNT varchar(10),
    MEMBER_CASH_EXPENSE varchar(10),
    SUBMITTED_COST varchar(10),
    PHARMACY_FEE varchar(10),
    TOTAL_AMOUNT_DUE varchar(10),
    CALC_AWP varchar(10),
    CREATE_DATE varchar(15),
    OCC_PAYMENT_TYPE varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_src
(
    TRANS_TYPE varchar(1),
    ASI_TXN_ID varchar(20),
    ORIG_ASI_TXN_ID varchar(20),
    RX_NUM varchar(50),
    RX_DATE varchar(15),
    DATE_WRITTEN varchar(15),
    DAYS_SUPPLY varchar(64),
    NDC_CODE varchar(15),
    DAW varchar(64),
    DRUG_NAME varchar(50),
    DRUG_DESC varchar(50),
    NEW_REFILL varchar(64),
    QUANTITY varchar(64),
    REFILLS varchar(64),
    OTHER_COVERAGE_CODE varchar(64),
    GROUP_NUM varchar(5),
    COUPON_NUM varchar(20),
    SEX varchar(1),
    AGE_AT_REDEMPTION varchar(15),
    PHARMACY_PROCESS_DATE varchar(15),
    PHARMACY_CHAIN_NUM varchar(15),
    NABP varchar(15),
    PHARMACY_CHAIN varchar(50),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS varchar(100),
    PHARMACY_ADDRESS2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PHARMACY_PHONE varchar(25),
    PHARMACY_NPI_NUM varchar(25),
    PRINCIPLE_PHYS_DEA_NUM varchar(20),
    PHYS_NPI varchar(64),
    PHYSICIAN_NAME varchar(100),
    ASI_PHYS_ADDRESS1 varchar(50),
    ASI_PHYS_ADDRESS2 varchar(50),
    ASI_PHYS_CITY varchar(50),
    ASI_PHYS_STATE varchar(2),
    ASI_PHYS_ZIP varchar(15),
    REBATE_AMOUNT varchar(10),
    MEMBER_CASH_EXPENSE varchar(10),
    SUBMITTED_COST varchar(10),
    PHARMACY_FEE varchar(10),
    TOTAL_AMOUNT_DUE varchar(10),
    CALC_AWP varchar(10),
    CREATE_DATE varchar(15),
    OCC_PAYMENT_TYPE varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.C_BO_HCE_RAW_DEA_src
(
    ROWID_OBJECT char(14),
    CREATOR varchar(50),
    CREATE_DATE varchar(64),
    UPDATED_BY varchar(50),
    LAST_UPDATE_DATE varchar(64),
    CONSOLIDATION_IND varchar(64),
    DELETED_IND varchar(64),
    DELETED_BY varchar(50),
    DELETED_DATE varchar(64),
    LAST_ROWID_SYSTEM char(14),
    DIRTY_IND varchar(64),
    INTERACTION_ID varchar(64),
    HUB_STATE_IND varchar(64),
    CM_DIRTY_IND varchar(64),
    TVCMID char(14),
    IMS_ID varchar(7),
    DEA_NUMBER varchar(9),
    NAME varchar(40),
    ADDITIONAL_COMPANY_INFO varchar(40),
    ADDRESS_LINE1 varchar(40),
    ADDRESS_LINE2 varchar(40),
    CITY varchar(33),
    STATE varchar(2),
    ZIP varchar(5),
    BUSINESS_ACTIVITY_CODE char(1),
    DRUG_SCHEDULES varchar(16),
    EXPIRATION_DATE varchar(64),
    BUSINESS_ACTIVITY_SUB_CODE char(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_QTY_W_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    nrx_025 varchar(64),
    nrx_026 varchar(64),
    nrx_027 varchar(64),
    nrx_028 varchar(64),
    nrx_029 varchar(64),
    nrx_030 varchar(64),
    nrx_031 varchar(64),
    nrx_032 varchar(64),
    nrx_033 varchar(64),
    nrx_034 varchar(64),
    nrx_035 varchar(64),
    nrx_036 varchar(64),
    nrx_037 varchar(64),
    nrx_038 varchar(64),
    nrx_039 varchar(64),
    nrx_040 varchar(64),
    nrx_041 varchar(64),
    nrx_042 varchar(64),
    nrx_043 varchar(64),
    nrx_044 varchar(64),
    nrx_045 varchar(64),
    nrx_046 varchar(64),
    nrx_047 varchar(64),
    nrx_048 varchar(64),
    nrx_049 varchar(64),
    nrx_050 varchar(64),
    nrx_051 varchar(64),
    nrx_052 varchar(64),
    nrx_053 varchar(64),
    nrx_054 varchar(64),
    nrx_055 varchar(64),
    nrx_056 varchar(64),
    nrx_057 varchar(64),
    nrx_058 varchar(64),
    nrx_059 varchar(64),
    nrx_060 varchar(64),
    nrx_061 varchar(64),
    nrx_062 varchar(64),
    nrx_063 varchar(64),
    nrx_064 varchar(64),
    nrx_065 varchar(64),
    nrx_066 varchar(64),
    nrx_067 varchar(64),
    nrx_068 varchar(64),
    nrx_069 varchar(64),
    nrx_070 varchar(64),
    nrx_071 varchar(64),
    nrx_072 varchar(64),
    nrx_073 varchar(64),
    nrx_074 varchar(64),
    nrx_075 varchar(64),
    nrx_076 varchar(64),
    nrx_077 varchar(64),
    nrx_078 varchar(64),
    nrx_079 varchar(64),
    nrx_080 varchar(64),
    nrx_081 varchar(64),
    nrx_082 varchar(64),
    nrx_083 varchar(64),
    nrx_084 varchar(64),
    nrx_085 varchar(64),
    nrx_086 varchar(64),
    nrx_087 varchar(64),
    nrx_088 varchar(64),
    nrx_089 varchar(64),
    nrx_090 varchar(64),
    nrx_091 varchar(64),
    nrx_092 varchar(64),
    nrx_093 varchar(64),
    nrx_094 varchar(64),
    nrx_095 varchar(64),
    nrx_096 varchar(64),
    nrx_097 varchar(64),
    nrx_098 varchar(64),
    nrx_099 varchar(64),
    nrx_100 varchar(64),
    nrx_101 varchar(64),
    nrx_102 varchar(64),
    nrx_103 varchar(64),
    nrx_104 varchar(64),
    nrx_105 varchar(64),
    nrx_106 varchar(64),
    nrx_107 varchar(64),
    nrx_108 varchar(64),
    nrx_109 varchar(64),
    nrx_110 varchar(64),
    nrx_111 varchar(64),
    nrx_112 varchar(64),
    nrx_113 varchar(64),
    nrx_114 varchar(64),
    nrx_115 varchar(64),
    nrx_116 varchar(64),
    nrx_117 varchar(64),
    nrx_118 varchar(64),
    nrx_119 varchar(64),
    nrx_120 varchar(64),
    nrx_121 varchar(64),
    nrx_122 varchar(64),
    nrx_123 varchar(64),
    nrx_124 varchar(64),
    nrx_125 varchar(64),
    nrx_126 varchar(64),
    nrx_127 varchar(64),
    nrx_128 varchar(64),
    nrx_129 varchar(64),
    nrx_130 varchar(64),
    nrx_131 varchar(64),
    nrx_132 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    trx_025 varchar(64),
    trx_026 varchar(64),
    trx_027 varchar(64),
    trx_028 varchar(64),
    trx_029 varchar(64),
    trx_030 varchar(64),
    trx_031 varchar(64),
    trx_032 varchar(64),
    trx_033 varchar(64),
    trx_034 varchar(64),
    trx_035 varchar(64),
    trx_036 varchar(64),
    trx_037 varchar(64),
    trx_038 varchar(64),
    trx_039 varchar(64),
    trx_040 varchar(64),
    trx_041 varchar(64),
    trx_042 varchar(64),
    trx_043 varchar(64),
    trx_044 varchar(64),
    trx_045 varchar(64),
    trx_046 varchar(64),
    trx_047 varchar(64),
    trx_048 varchar(64),
    trx_049 varchar(64),
    trx_050 varchar(64),
    trx_051 varchar(64),
    trx_052 varchar(64),
    trx_053 varchar(64),
    trx_054 varchar(64),
    trx_055 varchar(64),
    trx_056 varchar(64),
    trx_057 varchar(64),
    trx_058 varchar(64),
    trx_059 varchar(64),
    trx_060 varchar(64),
    trx_061 varchar(64),
    trx_062 varchar(64),
    trx_063 varchar(64),
    trx_064 varchar(64),
    trx_065 varchar(64),
    trx_066 varchar(64),
    trx_067 varchar(64),
    trx_068 varchar(64),
    trx_069 varchar(64),
    trx_070 varchar(64),
    trx_071 varchar(64),
    trx_072 varchar(64),
    trx_073 varchar(64),
    trx_074 varchar(64),
    trx_075 varchar(64),
    trx_076 varchar(64),
    trx_077 varchar(64),
    trx_078 varchar(64),
    trx_079 varchar(64),
    trx_080 varchar(64),
    trx_081 varchar(64),
    trx_082 varchar(64),
    trx_083 varchar(64),
    trx_084 varchar(64),
    trx_085 varchar(64),
    trx_086 varchar(64),
    trx_087 varchar(64),
    trx_088 varchar(64),
    trx_089 varchar(64),
    trx_090 varchar(64),
    trx_091 varchar(64),
    trx_092 varchar(64),
    trx_093 varchar(64),
    trx_094 varchar(64),
    trx_095 varchar(64),
    trx_096 varchar(64),
    trx_097 varchar(64),
    trx_098 varchar(64),
    trx_099 varchar(64),
    trx_100 varchar(64),
    trx_101 varchar(64),
    trx_102 varchar(64),
    trx_103 varchar(64),
    trx_104 varchar(64),
    trx_105 varchar(64),
    trx_106 varchar(64),
    trx_107 varchar(64),
    trx_108 varchar(64),
    trx_109 varchar(64),
    trx_110 varchar(64),
    trx_111 varchar(64),
    trx_112 varchar(64),
    trx_113 varchar(64),
    trx_114 varchar(64),
    trx_115 varchar(64),
    trx_116 varchar(64),
    trx_117 varchar(64),
    trx_118 varchar(64),
    trx_119 varchar(64),
    trx_120 varchar(64),
    trx_121 varchar(64),
    trx_122 varchar(64),
    trx_123 varchar(64),
    trx_124 varchar(64),
    trx_125 varchar(64),
    trx_126 varchar(64),
    trx_127 varchar(64),
    trx_128 varchar(64),
    trx_129 varchar(64),
    trx_130 varchar(64),
    trx_131 varchar(64),
    trx_132 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.XX_SALES_MV_src
(
    FILE_NBR varchar(6),
    NAME varchar(40),
    JOB_TITLE varchar(30),
    COST_CENTER_NAME varchar(35),
    DEPARTMENT varchar(30),
    JOB_ENTRY_DT varchar(10),
    MANAGER_LEVEL varchar(30),
    EE_STATUS varchar(30),
    WORK_LOCATION varchar(5),
    WORK_LOCATION_NAME varchar(30),
    ORIG_HIRE_DT varchar(10),
    SERVICE_DT varchar(10),
    REHIRE_DT varchar(10),
    TERMINATION_DT varchar(10),
    DIRECT_MANAGER varchar(40),
    HOME_ADDRESS_LINE1 varchar(40),
    HOME_ADDRESS_LINE2 varchar(40),
    HOME_CITY varchar(30),
    HOME_STATE varchar(2),
    HOME_POSTAL_CODE varchar(10),
    HOME_PHONE varchar(15),
    CELL_PHONE varchar(15),
    EMAIL_ADDRESS varchar(70),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_ACCOUNTS_src
(
    ID varchar(6),
    PROVIDER_ID varchar(6),
    SITE_ID varchar(6),
    FIRST_NAME varchar(250),
    LAST_NAME varchar(100),
    TITLE varchar(250),
    ADDRESS_LINE_1 varchar(100),
    ADDRESS_LINE_2 varchar(100),
    CITY varchar(100),
    STATE varchar(2),
    POSTAL_CODE varchar(20),
    PHONE_1 varchar(50),
    PHONE_2 varchar(50),
    PHONE_MOBILE varchar(50),
    PHONE_FAX varchar(50),
    EMAIL varchar(250),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_CONTROL_src
(
    FILE_NAME varchar(250),
    RECORDS varchar(250),
    CREATED_AT varchar(250),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_COPAYS_src
(
    HEALTH_PLAN_ID varchar(6),
    TIER varchar(64),
    RETAIL_COPAY varchar(50),
    RETAIL_COINSURANCE varchar(50),
    MAIL_ORDER_COPAY varchar(50),
    MAIL_ORDER_COINSURANCE varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_DRUGS_src
(
    DRUG_CLASS_ID varchar(6),
    DRUG_CLASS varchar(100),
    DRUG_ID varchar(6),
    DRUG varchar(100),
    GENERIC varchar(100),
    MANUFACTURER varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_DRUG_CLASS_THRPTC_AREA_src
(
    DRUG_CLASS_ID varchar(6),
    THERAPEUTIC_AREA_ID varchar(6),
    THERAPEUTIC_AREA varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_FORMULARIES_src
(
    HEALTH_PLAN_ID varchar(6),
    DRUG_ID varchar(6),
    TIER_CODE varchar(2),
    RESTRICTIONS varchar(20),
    REASON_CODE varchar(100),
    REASON_CODE_DESCRIPTION varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp,
    pharmacy_status varchar(100),
    market_access_coverage varchar(40)
);


CREATE TABLE teva_ingestion.EXT_FTF_HEALTH_PLANS_src
(
    FORMULARYF_ID varchar(6),
    PROVIDER_ID varchar(6),
    PROVIDER varchar(250),
    HEALTH_PLAN_ID varchar(6),
    HEALTH_PLAN varchar(100),
    PARENT_ID varchar(6),
    PARENT varchar(250),
    NATIONAL_LIVES_COUNT varchar(64),
    PLAN_TYPE_NAME varchar(250),
    PREFERRED_BRAND_TIER varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src
(
    HEALTH_PLAN_ID varchar(6),
    OPERATING_STATE varchar(2),
    LIVES_COVERAGE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_IMS_BRIDGE_src
(
    PAYER_NAME varchar(200),
    CODE varchar(50),
    NAME varchar(250),
    STATE varchar(2),
    COMMENTS varchar(250),
    PLAN_ID varchar(100),
    PLAN_NAME varchar(250),
    PROVIDER_NAME varchar(250),
    PLAN_TYPE_NAME varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_PBMS_src
(
    HEALTH_PLAN_ID varchar(6),
    PBM_ID varchar(6),
    PBM varchar(250),
    PBM_FUNCTION_ID varchar(6),
    PBM_FUNCTION varchar(250),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_RESTRICTIONS_src
(
    HEALTH_PLAN_ID varchar(6),
    DRUG_ID varchar(6),
    RESTRICTION_DETAIL_ID varchar(6),
    RESTRICTION_CODE varchar(2),
    FORMULARY_ENTRY_RESTRICTION_ID varchar(10),
    RESTRICTION_DETAIL_TEXT varchar(250),
    RESTRICTION_ADDTNL_INFORMATION_1 varchar(4000),
    RESTRICTION_ADDTNL_INFORMATION_2 varchar(4000),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_TEVA_WK_BRIDGE_src
(
    NAME varchar(200),
    AMC_NUMBER varchar(6),
    PBM_AMC_NUMBER varchar(6),
    PLAN_TYPE_CODE varchar(50),
    ZIP_CODE varchar(50),
    COMMENTS varchar(250),
    FF_PLAN_ID varchar(100),
    FF_PLAN_NAME varchar(250),
    FF_PROVIDER_NAME varchar(250),
    FF_PLAN_TYPE varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_FTF_TIERS_src
(
    ID varchar(64),
    NAME varchar(250),
    CODE_NAME varchar(10),
    EXPLANATION_TEXT varchar(1000),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_CALL_DETAIL_GOALS_src
(
    SALES_FORCE_ID varchar(5),
    TIME_PERIOD varchar(20),
    TERRITORY_NUM varchar(8),
    PRODUCT_NAME varchar(20),
    P1 varchar(64),
    P2 varchar(64),
    P3 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CUSTOMER_FLAGS_src
(
    TVCMID varchar(64),
    PRODUCT_NAME varchar(20),
    SALES_FORCE_ID varchar(5),
    TERRITORY_NUMBER varchar(8),
    FLAG_TYPE varchar(50),
    FLAG_VALUE varchar(50),
    EFF_START_DATE varchar(64),
    EFF_END_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_MCK_src
(
    GROUP_NUMBER varchar(50),
    GROUP_NAME varchar(100),
    CLAIM_TYPE varchar(64),
    RX_NUMBER varchar(20),
    DATE_OF_FILL varchar(15),
    CARD_ID_NUMBER varchar(20),
    PATIENT_AGE varchar(64),
    PATIENT_GENDER varchar(1),
    OTHER_COVERAGE varchar(64),
    NEW_REFILL_CODE varchar(64),
    REFILLS varchar(64),
    NDC varchar(15),
    DRUG_NAME varchar(50),
    DRUG_DOSAGE_FORM varchar(100),
    DRUG_STRENGTH varchar(50),
    PAID_QUANTITY varchar(64),
    DAYS_SUPPLY varchar(64),
    INGREDIENT_COST_PAID varchar(64),
    SALES_TAX_PAID varchar(64),
    SUBMITTED_COST varchar(64),
    COPAY_AMOUNT varchar(64),
    TOTAL_AMOUNT_PAID varchar(64),
    USUAL_AND_CUSTOMARY varchar(64),
    CLAIM_NUMBER varchar(20),
    PHARMACY_NPI varchar(15),
    PHARMACY_NABP varchar(15),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS1 varchar(100),
    PHARMACY_ADDRESS2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PRESCRIBER_FIRST varchar(100),
    PRESCRIBER_MIDDLE varchar(100),
    PRESCRIBER_LAST varchar(100),
    PRESCRIBER_ADDRESS_1 varchar(100),
    PRESCRIBER_ADDRESS_2 varchar(100),
    PRESCRIBER_CITY varchar(50),
    PRESCRIBER_STATE varchar(2),
    PRESCRIBER_ZIP varchar(15),
    PRESCRIBER_SPECIALTY varchar(15),
    REDEMPTION varchar(64),
    MAIL_ORDER_INDICATOR varchar(15),
    DEA varchar(15),
    NPI varchar(15),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src
(
    GROUP_NUMBER varchar(50),
    GROUP_NAME varchar(100),
    CLAIM_TYPE varchar(64),
    RX_NUMBER varchar(20),
    DATE_OF_FILL varchar(15),
    CARD_ID_NUMBER varchar(20),
    PATIENT_AGE varchar(64),
    PATIENT_GENDER varchar(1),
    OTHER_COVERAGE varchar(64),
    NEW_REFILL_CODE varchar(64),
    REFILLS varchar(64),
    NDC varchar(15),
    DRUG_NAME varchar(50),
    DRUG_DOSAGE_FORM varchar(100),
    DRUG_STRENGTH varchar(50),
    PAID_QUANTITY varchar(64),
    DAYS_SUPPLY varchar(64),
    INGREDIENT_COST_PAID varchar(64),
    SALES_TAX_PAID varchar(64),
    SUBMITTED_COST varchar(64),
    COPAY_AMOUNT varchar(64),
    TOTAL_AMOUNT_PAID varchar(64),
    USUAL_AND_CUSTOMARY varchar(64),
    CLAIM_NUMBER varchar(20),
    PHARMACY_NPI varchar(15),
    PHARMACY_NABP varchar(15),
    PHARMACY_NAME varchar(100),
    PHARMACY_ADDRESS1 varchar(100),
    PHARMACY_ADDRESS2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(15),
    PRESCRIBER_FIRST varchar(100),
    PRESCRIBER_MIDDLE varchar(100),
    PRESCRIBER_LAST varchar(100),
    PRESCRIBER_ADDRESS_1 varchar(100),
    PRESCRIBER_ADDRESS_2 varchar(100),
    PRESCRIBER_CITY varchar(50),
    PRESCRIBER_STATE varchar(2),
    PRESCRIBER_ZIP varchar(15),
    PRESCRIBER_SPECIALTY varchar(15),
    REDEMPTION varchar(64),
    MAIL_ORDER_INDICATOR varchar(15),
    DEA varchar(15),
    NPI varchar(15),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_I3_BY_STRENGTH_RX_src
(
    SHIP_DATE varchar(64),
    FULL_NAME varchar(100),
    SPECIALTY varchar(50),
    RANK varchar(64),
    TOTAL varchar(64),
    AUBAGIO_14 varchar(64),
    AUBAGIO_7 varchar(64),
    AVONEX_30 varchar(64),
    AVONEX_PACK varchar(64),
    AVONEX_PEN_PACK varchar(64),
    BETASERON varchar(64),
    COPAXONE_20 varchar(64),
    COPAXONE_40 varchar(64),
    GILENYA_0_5 varchar(64),
    GLATOPA_20 varchar(64),
    LEMTRADA varchar(64),
    PLEGRIDY_PFS varchar(64),
    PLEGRIDY_PEN varchar(64),
    REBIF_22_REBIDOSE varchar(64),
    REBIF_22 varchar(64),
    REBIF_44 varchar(64),
    REBIF_44_REBIDOSE varchar(64),
    REBIF_PACK varchar(64),
    REBIF_PACK_REBIDOSE varchar(64),
    TECFIDERA_120 varchar(64),
    TECFIDERA_240 varchar(64),
    TECFIDERA_STARTER_PACK varchar(64),
    TYSABRI varchar(64),
    MD_ADDR1 varchar(100),
    MD_ADDR2 varchar(100),
    MD_CITY varchar(50),
    MD_STATE varchar(2),
    MD_ZIP varchar(5),
    PRESCRIBER_NPI varchar(20),
    DNC_FLAG varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_KNIPPER_SAMPLES_src
(
    TVCMID varchar(20),
    HCP_VEEVA_ID varchar(25),
    HCP_FIRST_NAME varchar(50),
    HCP_MIDDLE_NAME varchar(50),
    HCP_LAST_NAME varchar(50),
    HCP_DESIGNATION varchar(30),
    HCP_STATE_LICENSE_NUMBER varchar(20),
    HCP_ADDRESS1 varchar(35),
    HCP_ADDRESS2 varchar(35),
    HCP_ADDRESS3 varchar(35),
    HCP_CITY varchar(50),
    HCP_STATE varchar(2),
    HCP_ZIP varchar(10),
    DEA_LICENSE_NUMBER varchar(20),
    ORDER_SOURCE_ORDER_ID varchar(20),
    NDC varchar(20),
    QUANTITY varchar(64),
    ORDER_SOURCE_JOB_CODE varchar(14),
    ORDER_SOURCE_JOB_CODE_DESCRIPTION varchar(50),
    SHIP_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ACTIVITY_LINE_ITEM_src
(
    LINE_ITEM_ID varchar(64),
    BRAND_NAME varchar(200),
    ACTIVITY varchar(200),
    LINE_ITEM_DATETIME varchar(64),
    LINE_ITEM_PREVIOUS_ITEM varchar(200),
    LINE_ITEM_TRACKBACK_ID varchar(200),
    LINE_ITEM_DETAILS varchar(200),
    LINE_ITEM_TYPE_NAME varchar(200),
    LINE_ITEM_NATIVE_TYPE varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AGGREGATED_ACTIVITY_src
(
    AGGREGATED_ID varchar(64),
    LEVEL_NAME varchar(200),
    FEDERATION_ID varchar(64),
    SOURCE_NAME varchar(200),
    CONTACT varchar(200),
    ORIGINATING_ID varchar(200),
    PRIOR_ACTIVITY varchar(200),
    ACTIVITY_ROLE_NAME varchar(200),
    COUNT varchar(64),
    AGGREGATED_TYPE_NAME varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DYNAMIC_SEGMENT_src
(
    FEDERATION_ID varchar(64),
    BASKET_ID varchar(64),
    SEGMENT_NAME varchar(50),
    SEGMENT_VALUE varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_MS_DDD_DOLLARS_src
(
    client_num varchar(3),
    report_num varchar(2),
    sra1 varchar(10),
    outlet_code varchar(8),
    subcategory_code varchar(2),
    sra4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    mth_yyyymmdd varchar(8),
    dol_mth01 varchar(64),
    dol_mth02 varchar(64),
    dol_mth03 varchar(64),
    dol_mth04 varchar(64),
    dol_mth05 varchar(64),
    dol_mth06 varchar(64),
    dol_mth07 varchar(64),
    dol_mth08 varchar(64),
    dol_mth09 varchar(64),
    dol_mth10 varchar(64),
    dol_mth11 varchar(64),
    dol_mth12 varchar(64),
    dol_mth13 varchar(64),
    dol_mth14 varchar(64),
    dol_mth15 varchar(64),
    dol_mth16 varchar(64),
    dol_mth17 varchar(64),
    dol_mth18 varchar(64),
    dol_mth19 varchar(64),
    dol_mth20 varchar(64),
    dol_mth21 varchar(64),
    dol_mth22 varchar(64),
    dol_mth23 varchar(64),
    dol_mth24 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_MS_DDD_QUANTITY_src
(
    client_num varchar(3),
    report_num varchar(2),
    sra1 varchar(10),
    outlet_code varchar(8),
    subcategory_code varchar(2),
    sra4 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    mth_yyyymmdd varchar(8),
    qty_mth01 varchar(64),
    qty_mth02 varchar(64),
    qty_mth03 varchar(64),
    qty_mth04 varchar(64),
    qty_mth05 varchar(64),
    qty_mth06 varchar(64),
    qty_mth07 varchar(64),
    qty_mth08 varchar(64),
    qty_mth09 varchar(64),
    qty_mth10 varchar(64),
    qty_mth11 varchar(64),
    qty_mth12 varchar(64),
    qty_mth13 varchar(64),
    qty_mth14 varchar(64),
    qty_mth15 varchar(64),
    qty_mth16 varchar(64),
    qty_mth17 varchar(64),
    qty_mth18 varchar(64),
    qty_mth19 varchar(64),
    qty_mth20 varchar(64),
    qty_mth21 varchar(64),
    qty_mth22 varchar(64),
    qty_mth23 varchar(64),
    qty_mth24 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src
(
    client_num varchar(3),
    report_num varchar(2),
    ims_outlet_code varchar(10),
    ims_facility_number varchar(11),
    ims_prescriber_number varchar(7),
    outlet_name varchar(30),
    outlet_address varchar(120),
    outlet_city varchar(40),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    facility_prescriber_name varchar(100),
    facility_prescriber_address1 varchar(60),
    facility_prescriber_address2 varchar(60),
    facility_prescriber_address3 varchar(60),
    facility_prescriber_address4 varchar(60),
    facility_prescriber_city varchar(40),
    facility_prescriber_state varchar(2),
    facility_prescriber_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src
(
    client_num varchar(3),
    report_num varchar(2),
    ims_outlet_code varchar(10),
    ims_facility_number varchar(11),
    ims_prescriber_number varchar(7),
    outlet_name varchar(30),
    outlet_address varchar(120),
    outlet_city varchar(40),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    facility_prescriber_name varchar(100),
    facility_prescriber_address1 varchar(60),
    facility_prescriber_address2 varchar(60),
    facility_prescriber_address3 varchar(60),
    facility_prescriber_address4 varchar(60),
    facility_prescriber_city varchar(40),
    facility_prescriber_state varchar(2),
    facility_prescriber_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TR_DDDMD_WEEKLY_DOLLARS_src
(
    client_num varchar(3),
    report_num varchar(2),
    ims_outlet_code varchar(10),
    subcategory_code varchar(10),
    alt_seq_num varchar(10),
    filler01 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(6),
    dol_wk01 varchar(64),
    dol_wk02 varchar(64),
    dol_wk03 varchar(64),
    dol_wk04 varchar(64),
    dol_wk05 varchar(64),
    dol_wk06 varchar(64),
    dol_wk07 varchar(64),
    dol_wk08 varchar(64),
    dol_wk09 varchar(64),
    dol_wk10 varchar(64),
    dol_wk11 varchar(64),
    dol_wk12 varchar(64),
    dol_wk13 varchar(64),
    dol_wk14 varchar(64),
    dol_wk15 varchar(64),
    dol_wk16 varchar(64),
    dol_wk17 varchar(64),
    dol_wk18 varchar(64),
    dol_wk19 varchar(64),
    dol_wk20 varchar(64),
    dol_wk21 varchar(64),
    dol_wk22 varchar(64),
    dol_wk23 varchar(64),
    dol_wk24 varchar(64),
    dol_wk25 varchar(64),
    dol_wk26 varchar(64),
    dol_wk27 varchar(64),
    dol_wk28 varchar(64),
    dol_wk29 varchar(64),
    dol_wk30 varchar(64),
    dol_wk31 varchar(64),
    dol_wk32 varchar(64),
    dol_wk33 varchar(64),
    dol_wk34 varchar(64),
    dol_wk35 varchar(64),
    dol_wk36 varchar(64),
    dol_wk37 varchar(64),
    dol_wk38 varchar(64),
    dol_wk39 varchar(64),
    dol_wk40 varchar(64),
    dol_wk41 varchar(64),
    dol_wk42 varchar(64),
    dol_wk43 varchar(64),
    dol_wk44 varchar(64),
    dol_wk45 varchar(64),
    dol_wk46 varchar(64),
    dol_wk47 varchar(64),
    dol_wk48 varchar(64),
    dol_wk49 varchar(64),
    dol_wk50 varchar(64),
    dol_wk51 varchar(64),
    dol_wk52 varchar(64),
    dol_wk53 varchar(64),
    dol_wk54 varchar(64),
    dol_wk55 varchar(64),
    dol_wk56 varchar(64),
    dol_wk57 varchar(64),
    dol_wk58 varchar(64),
    dol_wk59 varchar(64),
    dol_wk60 varchar(64),
    dol_wk61 varchar(64),
    dol_wk62 varchar(64),
    dol_wk63 varchar(64),
    dol_wk64 varchar(64),
    dol_wk65 varchar(64),
    dol_wk66 varchar(64),
    dol_wk67 varchar(64),
    dol_wk68 varchar(64),
    dol_wk69 varchar(64),
    dol_wk70 varchar(64),
    dol_wk71 varchar(64),
    dol_wk72 varchar(64),
    dol_wk73 varchar(64),
    dol_wk74 varchar(64),
    dol_wk75 varchar(64),
    dol_wk76 varchar(64),
    dol_wk77 varchar(64),
    dol_wk78 varchar(64),
    dol_wk79 varchar(64),
    dol_wk80 varchar(64),
    dol_wk81 varchar(64),
    dol_wk82 varchar(64),
    dol_wk83 varchar(64),
    dol_wk84 varchar(64),
    dol_wk85 varchar(64),
    dol_wk86 varchar(64),
    dol_wk87 varchar(64),
    dol_wk88 varchar(64),
    dol_wk89 varchar(64),
    dol_wk90 varchar(64),
    dol_wk91 varchar(64),
    dol_wk92 varchar(64),
    dol_wk93 varchar(64),
    dol_wk94 varchar(64),
    dol_wk95 varchar(64),
    dol_wk96 varchar(64),
    dol_wk97 varchar(64),
    dol_wk98 varchar(64),
    dol_wk99 varchar(64),
    dol_wk100 varchar(64),
    dol_wk101 varchar(64),
    dol_wk102 varchar(64),
    dol_wk103 varchar(64),
    dol_wk104 varchar(64),
    dol_wk105 varchar(64),
    dol_wk106 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TR_DDDMD_WEEKLY_UNITS_src
(
    client_num varchar(3),
    report_num varchar(2),
    ims_outlet_code varchar(10),
    subcategory_code varchar(10),
    alt_seq_num varchar(10),
    filler01 varchar(10),
    category_code varchar(2),
    ims_product_code varchar(9),
    data_date varchar(6),
    qty_wk01 varchar(64),
    qty_wk02 varchar(64),
    qty_wk03 varchar(64),
    qty_wk04 varchar(64),
    qty_wk05 varchar(64),
    qty_wk06 varchar(64),
    qty_wk07 varchar(64),
    qty_wk08 varchar(64),
    qty_wk09 varchar(64),
    qty_wk10 varchar(64),
    qty_wk11 varchar(64),
    qty_wk12 varchar(64),
    qty_wk13 varchar(64),
    qty_wk14 varchar(64),
    qty_wk15 varchar(64),
    qty_wk16 varchar(64),
    qty_wk17 varchar(64),
    qty_wk18 varchar(64),
    qty_wk19 varchar(64),
    qty_wk20 varchar(64),
    qty_wk21 varchar(64),
    qty_wk22 varchar(64),
    qty_wk23 varchar(64),
    qty_wk24 varchar(64),
    qty_wk25 varchar(64),
    qty_wk26 varchar(64),
    qty_wk27 varchar(64),
    qty_wk28 varchar(64),
    qty_wk29 varchar(64),
    qty_wk30 varchar(64),
    qty_wk31 varchar(64),
    qty_wk32 varchar(64),
    qty_wk33 varchar(64),
    qty_wk34 varchar(64),
    qty_wk35 varchar(64),
    qty_wk36 varchar(64),
    qty_wk37 varchar(64),
    qty_wk38 varchar(64),
    qty_wk39 varchar(64),
    qty_wk40 varchar(64),
    qty_wk41 varchar(64),
    qty_wk42 varchar(64),
    qty_wk43 varchar(64),
    qty_wk44 varchar(64),
    qty_wk45 varchar(64),
    qty_wk46 varchar(64),
    qty_wk47 varchar(64),
    qty_wk48 varchar(64),
    qty_wk49 varchar(64),
    qty_wk50 varchar(64),
    qty_wk51 varchar(64),
    qty_wk52 varchar(64),
    qty_wk53 varchar(64),
    qty_wk54 varchar(64),
    qty_wk55 varchar(64),
    qty_wk56 varchar(64),
    qty_wk57 varchar(64),
    qty_wk58 varchar(64),
    qty_wk59 varchar(64),
    qty_wk60 varchar(64),
    qty_wk61 varchar(64),
    qty_wk62 varchar(64),
    qty_wk63 varchar(64),
    qty_wk64 varchar(64),
    qty_wk65 varchar(64),
    qty_wk66 varchar(64),
    qty_wk67 varchar(64),
    qty_wk68 varchar(64),
    qty_wk69 varchar(64),
    qty_wk70 varchar(64),
    qty_wk71 varchar(64),
    qty_wk72 varchar(64),
    qty_wk73 varchar(64),
    qty_wk74 varchar(64),
    qty_wk75 varchar(64),
    qty_wk76 varchar(64),
    qty_wk77 varchar(64),
    qty_wk78 varchar(64),
    qty_wk79 varchar(64),
    qty_wk80 varchar(64),
    qty_wk81 varchar(64),
    qty_wk82 varchar(64),
    qty_wk83 varchar(64),
    qty_wk84 varchar(64),
    qty_wk85 varchar(64),
    qty_wk86 varchar(64),
    qty_wk87 varchar(64),
    qty_wk88 varchar(64),
    qty_wk89 varchar(64),
    qty_wk90 varchar(64),
    qty_wk91 varchar(64),
    qty_wk92 varchar(64),
    qty_wk93 varchar(64),
    qty_wk94 varchar(64),
    qty_wk95 varchar(64),
    qty_wk96 varchar(64),
    qty_wk97 varchar(64),
    qty_wk98 varchar(64),
    qty_wk99 varchar(64),
    qty_wk100 varchar(64),
    qty_wk101 varchar(64),
    qty_wk102 varchar(64),
    qty_wk103 varchar(64),
    qty_wk104 varchar(64),
    qty_wk105 varchar(64),
    qty_wk106 varchar(64),
    outlet_name varchar(30),
    outlet_address varchar(30),
    outlet_city varchar(25),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_ADDRESS_src
(
    TVCMID varchar(14),
    ADDRESS_ID varchar(14),
    ADDRESS_TYPE varchar(10),
    ADDRESS_TYPE_NAME varchar(50),
    ADDRESS_LINE_1 varchar(80),
    ADDRESS_LINE_2 varchar(80),
    COUNTY varchar(40),
    CITY varchar(40),
    STATE varchar(2),
    STATE_NAME varchar(50),
    COUNTRY_CODE varchar(3),
    COUNTRY_NAME varchar(50),
    ZIP5_POSTAL_CODE varchar(5),
    ZIP4_POSTAL_EXTENSION_CODE varchar(4),
    ADDRESS_STATUS varchar(10),
    ADDRESS_STATUS_NAME varchar(50),
    ADDRESS_EFFECTIVE_DATE varchar(64),
    MSA_CBSA varchar(5),
    FIPS_STATE_CODE varchar(2),
    FIPS_STATE_DESCRIPTION varchar(50),
    FIPS_COUNTY_CODE varchar(3),
    FIPS_COUNTY_DESCRIPTION varchar(50),
    DELIVERABILITY_CONFIDENCE varchar(10),
    ADDRESS_SETTING_TYPE_CODE varchar(10),
    ADDRESS_SETTING_TYPE_DESCRIPTION varchar(50),
    ADDRESS_CATEGORY_CODE varchar(10),
    ADDRESS_CATEGORY_DESCRIPTION varchar(50),
    ADDRESS_LATITUDE varchar(20),
    ADDRESS_LONGITUDE varchar(20),
    POSTAL_BARCODE varchar(10),
    SINGLE_ADDRESS_INDICATOR varchar(1),
    PRACTICE_LOCATION_CONFIDENCE_INDICATOR varchar(10),
    PRACTICE_LOCATION_RANK varchar(10),
    VALIDATION_MESSAGE varchar(100),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_ADDRESS_LINK_src
(
    TVCMID varchar(14),
    ADDRESS_ID varchar(14),
    DSP_ID varchar(10),
    DSP_HCE_ID varchar(100),
    DSP_ADDRESS_ID varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_ALTERNATE_ID_src
(
    TVCMID varchar(14),
    ALTERNATE_ID_TYPE varchar(10),
    ALTERNATE_ID_TYPE_NAME varchar(50),
    ALTERNATE_ID_VALUE varchar(100),
    STATE varchar(2),
    STATE_NAME varchar(50),
    IDENTIFIER_CATEGORY varchar(25),
    STATUS varchar(10),
    STATUS_NAME varchar(50),
    SOURCE_DEACTIVATION_REASON_CODE varchar(1),
    SOURCE_DEACTIVATION_REASON_DESCRIPTION varchar(50),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_ALTERNATE_NAME_src
(
    TVCMID varchar(14),
    NAME_TYPE varchar(10),
    NAME_TYPE_NAME varchar(50),
    NAME_VALUE varchar(125),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_COMMUNICATION_src
(
    TVCMID varchar(14),
    ADDRESS_ID varchar(14),
    COMMUNICATION_TYPE varchar(10),
    COMMUNICATION_TYPE_NAME varchar(50),
    COMMUNICATION_VALUE varchar(100),
    STATUS_CODE varchar(10),
    STATUS_NAME varchar(50),
    EFFECTIVE_START_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_DEA_ADDRESS_src
(
    TVCMID varchar(14),
    ADDRESS_ID varchar(14),
    DEA_NUMBER varchar(18),
    BUSINESS_ACTIVITY_CODE varchar(1),
    BUSINESS_ACTIVITY_DESCRIPTION varchar(40),
    SUB_BUSINESS_ACTIVITY_CODE varchar(10),
    SUB_BUSINESS_ACTIVITY_DESCRIPTION varchar(50),
    DEA_SCHEDULE_CLASS_CODE varchar(20),
    DEA_STATUS_CODE varchar(5),
    DEA_STATUS_DESCRIPTION varchar(40),
    DEA_EXPIRATION_DATE varchar(64),
    DEA_DEACTIVATION_REASON_CODE varchar(1),
    DEA_DEACTIVATION_REASON_DESCRIPTION varchar(50),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_EMAIL_PREF_src
(
    TVCMID varchar(14),
    EMAIL varchar(10),
    VALUE varchar(100),
    EFFECTIVE_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_HCO_TEVA_FLAG_src
(
    TVCMID varchar(14),
    FLAG_TYPE varchar(10),
    FLAG_TYPE_NAME varchar(50),
    FLAG_VALUE varchar(50),
    EFFECTIVE_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_HCP_src
(
    TVCMID varchar(14),
    IMS_HCE_ID varchar(64),
    IMS_PRESCRIBER_ID varchar(7),
    FIRST_NAME varchar(40),
    MIDDLE_NAME varchar(40),
    LAST_NAME varchar(40),
    PREFIX varchar(10),
    SUFFIX varchar(10),
    SUFFIX_NAME varchar(50),
    SUB_TYPE varchar(10),
    SUB_TYPE_NAME varchar(50),
    HEALTHCARE_PROFESSIONAL_STATUS_CODE varchar(10),
    HEALTHCARE_PROFESSIONAL_STATUS_NAME varchar(50),
    YEAR_OF_BIRTH varchar(64),
    DATE_OF_DEATH varchar(64),
    GENDER_CODE varchar(5),
    GENDER_NAME varchar(50),
    TEVA_SPECIALTY_CODE varchar(5),
    TEVA_SPECIALTY_NAME varchar(50),
    LOGICAL_DELETION_DATE varchar(64),
    HCE_INSERT_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_HCP_TEVA_FLAG_src
(
    TVCMID varchar(14),
    FLAG_TYPE varchar(10),
    FLAG_TYPE_NAME varchar(50),
    FLAG_VALUE varchar(50),
    EFFECTIVE_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_IMS_FLAG_src
(
    TVCMID varchar(14),
    FLAG_TYPE varchar(10),
    FLAG_TYPE_NAME varchar(50),
    FLAG_VALUE varchar(1),
    EFFECTIVE_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_LICENSE_src
(
    TVCMID varchar(14),
    HCE_REGULATION_ID varchar(14),
    LICENSE_TYPE_ID varchar(64),
    LICENSE_TYPE_NAME varchar(100),
    AUTHORIZATION_NUMBER varchar(25),
    PROFESSION_CODE varchar(5),
    STATE varchar(2),
    STATE_NAME varchar(50),
    STATE_BOARD_ID varchar(64),
    STATE_BOARD_NAME varchar(150),
    LICENSE_PRIVILEGE_ID varchar(64),
    LICENSE_PRIVILEGE varchar(100),
    LICENSE_CERTIFICATION_CODE varchar(5),
    LICENSE_CERTIFICATION_NAME varchar(40),
    LICENSE_TYPE_PRIVILEGE_RANK varchar(64),
    LICENSE_STATUS_CODE varchar(5),
    LICENSE_STATUS_DESCRIPTION varchar(40),
    LICENSE_EFFECTIVE_DATE varchar(64),
    LICENSE_EXPIRATION_DATE varchar(64),
    LICENSE_DEACTIVATION_REASON_CODE varchar(10),
    LICENSE_DEACTIVATION_REASON_DESCRIPTION varchar(50),
    RECORD_TYPE varchar(3),
    RECORD_TYPE_NAME varchar(50),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_MARKETING_CHANNEL_src
(
    TVCMID varchar(14),
    CHANNEL varchar(10),
    VALUE varchar(100),
    EFFECTIVE_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_PROFESSIONAL_src
(
    TVCMID varchar(14),
    PROFESSION_CODE varchar(5),
    PROFESSION_CODE_NAME varchar(50),
    PROFESSION_RANK varchar(3),
    STATUS varchar(10),
    PROFESSION_STATUS_NAME varchar(50),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_RAW_DEA_src
(
    TVCMID varchar(14),
    IMS_ID varchar(7),
    DEA_NUMBER varchar(9),
    NAME varchar(40),
    ADDITIONAL_COMPANY_INFO varchar(40),
    ADDRESS_LINE1 varchar(40),
    ADDRESS_LINE2 varchar(40),
    CITY varchar(33),
    STATE varchar(2),
    STATE_NAME varchar(50),
    ZIP varchar(5),
    BUSINESS_ACTIVITY_CODE varchar(1),
    DRUG_SCHEDULES varchar(16),
    EXPIRATION_DATE varchar(64),
    BUSINESS_ACTIVITY_SUB_CODE varchar(1),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_REGULATION_src
(
    STATE_LICENSE_TYPE_ID varchar(64),
    STATE_LICENSE_TYPE_NAME varchar(120),
    STATE_PRIVILEGE_TYPE_ID varchar(64),
    STATE_LICENSE_PRIVILEGE_TYPE_NAME varchar(120),
    STATE_LICENSE_PRIVILEGE_TYPE_RANK varchar(64),
    STATE_CODE varchar(2),
    STATE_NAME varchar(50),
    STATE_BOARD_ID varchar(64),
    STATE_BOARD_NAME varchar(120),
    CERTIFICATION_CODE varchar(5),
    REQUIRED_SAMPLE_NON_CTRL varchar(1),
    REQUIRED_SAMPLE_CTRL varchar(1),
    RECEIVED_SAMPLE_NON_CTRL varchar(1),
    RECEIVED_SAMPLE_CTRL varchar(1),
    DISTRIBUTED_SAMPLE_NON_CTRL varchar(1),
    DISTRIBUTED_SAMPLE_CTRL varchar(1),
    SAMPLE_DRUG_SCHEDULE_I_FLAG varchar(1),
    SAMPLE_DRUG_SCHEDULE_II_FLAG varchar(1),
    SAMPLE_DRUG_SCHEDULE_III_FLAG varchar(1),
    SAMPLE_DRUG_SCHEDULE_IV_FLAG varchar(1),
    SAMPLE_DRUG_SCHEDULE_V_FLAG varchar(1),
    SAMPLE_DRUG_SCHEDULE_VI_FLAG varchar(1),
    PRESCRIBER_NON_CTRL_FLAG varchar(1),
    PRESCRIBER_APP_REQUIRED_NON_CTRL_FLAG varchar(1),
    PRESCRIBER_CTRL_FLAG varchar(1),
    PRESCRIBER_APP_REQUIRED_CTRL_FLAG varchar(1),
    PRESCRIBER_DRUG_SCHEDULE_I_FLAG varchar(1),
    PRESCRIBER_DRUG_SCHEDULE_II_FLAG varchar(1),
    PRESCRIBER_DRUG_SCHEDULE_III_FLAG varchar(1),
    PRESCRIBER_DRUG_SCHEDULE_IV_FLAG varchar(1),
    PRESCRIBER_DRUG_SCHEDULE_V_FLAG varchar(1),
    PRESCRIBER_DRUG_SCHEDULE_VI_FLAG varchar(1),
    SUPERVISORY_RELATIONSHIP_CODE_NON_CTRL varchar(1),
    SUPERVISORY_RELATIONSHIP_CODE_CTRL varchar(1),
    COLLABORATIVE_NON_CTRL varchar(1),
    COLLABORATIVE_CTRL varchar(1),
    INCLUSIONARY varchar(1),
    EXCLUSIONARY varchar(1),
    DELEGATION_NON_CTRL varchar(1),
    DELEGATION_CTRL varchar(1),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_RELATIONSHIP_src
(
    HIERARCHY_CODE varchar(255),
    HIERARCHY_NAME varchar(255),
    RELATIONSHIP_TYPE_CODE varchar(255),
    RELATIONSHIP_TYPE_NAME varchar(255),
    PARENT_TVCMID varchar(14),
    CHILD_TVCMID varchar(14),
    RELATIONSHIP_STATUS_CODE varchar(50),
    RELATIONSHIP_STATUS_NAME varchar(50),
    RELATIONSHIP_START_DATE varchar(64),
    RELATIONSHIP_END_DATE varchar(64),
    NOTES varchar(2000),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_SAMPLE_ELIGIBILITY_src
(
    TVCMID varchar(14),
    SLN varchar(25),
    SLN_STATE varchar(2),
    SLN_STATUS_CODE varchar(5),
    SLN_STATUS_DESCRIPTION varchar(40),
    SLN_EXPIRATION_DATE varchar(64),
    TEVA_SAMPLE_ELIGIBILITY_FLAG varchar(1),
    TEVA_SCHEDULE_IV_ELIGIBILITY_FLAG varchar(1),
    TEVA_SCHEDULE_V_ELIGIBILITY_FLAG varchar(1),
    PROFESSION_SHORT_DESCRIPTION varchar(5),
    TEVA_SPECIALTY_CODE varchar(5),
    CERTIFICATION_CODE varchar(5),
    CERTIFICATION_DESCRIPTION varchar(100),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_SOURCE_DETAILS_src
(
    TVCMID varchar(14),
    IDENTIFIER_CODE varchar(5),
    IDENTIFIER_DESCRIPTION varchar(50),
    IDENTIFIER_VALUE varchar(18),
    LEGACY_IDENTIFIER_CODE varchar(10),
    AMA_MD_DO_FLAG varchar(64),
    MAJOR_PROFESSIONAL_ACTIVITY varchar(10),
    MAJOR_PROFESSIONAL_ACTIVITY_DESCRIPTION varchar(50),
    HOSPITAL_HOURS varchar(3),
    AMA_HOSPITAL_ID varchar(10),
    AMA_HOSPITAL_DESCRIPTION varchar(100),
    PRACTICE_TYPE_CODE varchar(10),
    PRACTICE_TYPE_DESCRIPTION varchar(50),
    EMPLOYMENT_TYPE_CODE varchar(10),
    EMPLOYMENT_TYPE_DESCRIPTION varchar(50),
    BIRTH_CITY varchar(30),
    BIRTH_STATE varchar(2),
    BIRTH_COUNTRY_CODE varchar(5),
    BIRTH_COUNTRY_DESCRIPTION varchar(100),
    MEDICAL_SCHOOL_CODE varchar(10),
    MEDICAL_SCHOOL_DESCRIPTION varchar(50),
    GRADUATION_YEAR varchar(64),
    NUMBER_OF_PHYSICIAN_OFFICES varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_SPECIALTY_src
(
    TVCMID varchar(14),
    SPECIALTY_CODE varchar(5),
    SPECIALTY_CODE_NAME varchar(50),
    SPECIALTY_RANKING varchar(3),
    STATUS varchar(10),
    STATUS_NAME varchar(50),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_EMAIL_PREFERENCE_src
(
    TVCMID varchar(14),
    EMAIL varchar(10),
    VALUE varchar(100),
    EFFECTIVE_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.MDM_RAW_NPI_src
(
    TVCMID varchar(14),
    NPI_NUMBER varchar(10),
    NPI_FIRST_NAME varchar(20),
    NPI_MIDDLE_NAME varchar(20),
    NPI_LAST_NAME varchar(35),
    PRACTICE_ADDRESS_1 varchar(55),
    PRACTICE_ADDRESS_2 varchar(55),
    PRACTICE_CITY varchar(40),
    PRACTICE_STATE_NAME varchar(20),
    PRACTICE_POSTAL_CODE varchar(20),
    PRACTICE_COUNTRY_CODE varchar(2),
    PRIMARY_TAXONOMY_CODE varchar(10),
    PRIMARY_TAXONOMY_TYPE varchar(200),
    PRIMARY_TAXONOMY_CLASSIFICATION varchar(200),
    PRIMARY_TAXONOMY_SPECIALTY varchar(200),
    IMS_SPECIALTY_CODE varchar(5),
    IMS_SPECIALTY_DESCRIPTION varchar(50),
    NPI_DEACTIVATION_REASON_CODE varchar(2),
    NPI_DEACTIVATION_DATE varchar(64),
    CREATED_BY varchar(50),
    CREATED_DATE varchar(64),
    UPDATED_BY varchar(50),
    UPDATED_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_MEDICAL_EVENT_VOD__C_src
(
    active_vod__c varchar(5),
    address_tva__c varchar(40),
    city_tva__c varchar(40),
    createdbyid varchar(18),
    createddate varchar(24),
    demo_led_by_tva__c varchar(5000),
    description_vod__c varchar(32000),
    end_date_vod__c varchar(24),
    event_type__c varchar(255),
    id varchar(18),
    isdeleted varchar(5),
    islocked varchar(5),
    lastactivitydate varchar(24),
    lastmodifiedbyid varchar(18),
    lastmodifieddate varchar(24),
    lastreferenceddate varchar(24),
    lastvieweddate varchar(24),
    location__c varchar(40),
    mayedit varchar(5),
    mobile_id_vod__c varchar(100),
    name varchar(80),
    number_of_attendees_tva__c varchar(500),
    ownerid varchar(18),
    primary_product__c varchar(255),
    recordtypeid varchar(18),
    secondary_product__c varchar(255),
    start_date_vod__c varchar(24),
    state_tva__c varchar(255),
    status_tva__c varchar(255),
    systemmodstamp varchar(24),
    website__c varchar(255),
    zip_tva__c varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TW_ICS_SALES_src
(
    BP_CODE varchar(20),
    ORTHO_E varchar(100),
    BP_NAME varchar(100),
    SHIP_TO_ADDRESS varchar(100),
    SHIP_TO_CITY varchar(50),
    SHIP_TO_STATE varchar(2),
    SHIP_TO_ZIP_CODE varchar(10),
    SHIP_TO_COUNTRY varchar(50),
    SHIP_TO_PHONE varchar(50),
    SHIP_TO_FAX varchar(50),
    SHIP_TO_EMAIL varchar(100),
    BILL_TO_ADDRESS varchar(100),
    BILL_TO_CITY varchar(50),
    BILL_TO_STATE varchar(2),
    BILL_TO_ZIP_CODE varchar(10),
    BILL_TO_COUNTRY varchar(50),
    BILL_TO_PHONE varchar(50),
    BILL_TO_FAX varchar(50),
    BILL_TO_EMAIL varchar(100),
    CLASS_OF_TRADE varchar(20),
    INVOICE_NUM varchar(50),
    DEL_AMT varchar(64),
    INVOICE_DATE varchar(50),
    "24237" varchar(64),
    "24238" varchar(64),
    "24800" varchar(64),
    "33223" varchar(64),
    PACKS varchar(64),
    UNIT_PRICE varchar(64),
    TERRITORY varchar(20),
    ORDER_TYPE_CODE varchar(20),
    ORDER_TYPE_DESC varchar(50),
    LOB_CODE_DESC varchar(100),
    PRICE_MATRIX_DEF varchar(20),
    PARENT_BP_CODE varchar(20),
    PARENT_BP_DESC varchar(100),
    GRAND_PARENT_BP_DESC varchar(100),
    PO_NUMBER varchar(50),
    UPS_NUMBER varchar(50),
    ORDER_NUMBER varchar(50),
    ORDER_LINE_NUMBER varchar(64),
    DISC_AMT varchar(64),
    WHSE_CD varchar(20),
    ORDER_DATE varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TEVA_AHM_INTERACTIONS_src
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate varchar(64),
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    interactionname varchar(200),
    interactioncategory varchar(50),
    interactiontype varchar(50),
    locationtype varchar(50),
    interactionstatus varchar(50),
    interactionstartdate varchar(64),
    interactionenddate varchar(64),
    interactionstarttime varchar(50),
    interactionendtime varchar(50),
    interactiontimezone varchar(80),
    interactionstartdatetime varchar(26),
    interactionenddatetime varchar(26),
    requestingregion varchar(100),
    parentinteractionid varchar(18),
    parentinteractioncode varchar(50),
    employeeid varchar(18),
    clientemployeeid varchar(50),
    employeefirstname varchar(80),
    employeelastname varchar(80),
    employeeorganizationunitid varchar(18),
    employeeorganizationunitcode varchar(50),
    employeeorganizationunitname varchar(200),
    venueid varchar(18),
    clientvenueid varchar(18),
    venuename varchar(80),
    venueaddressline1 varchar(50),
    venueaddressline2 varchar(50),
    venueaddressline3 varchar(50),
    venuecity varchar(80),
    venuestateprovince varchar(50),
    venuepostalcode varchar(20),
    venuecountry varchar(50),
    venueregion varchar(100),
    totalestimatedparticipantcount varchar(64),
    financialcloseddate varchar(64),
    product1name varchar(80),
    product1id varchar(18),
    product1clientid varchar(100),
    topic1name varchar(255),
    topic1id varchar(18),
    topic1clientid varchar(80),
    product2name varchar(80),
    product2id varchar(18),
    product2clientid varchar(100),
    topic2name varchar(255),
    topic2id varchar(18),
    topic2clientid varchar(80),
    product3name varchar(80),
    product3id varchar(18),
    product3clientid varchar(100),
    topic3name varchar(255),
    topic3id varchar(18),
    topic3clientid varchar(80),
    product4name varchar(80),
    product4id varchar(18),
    product4clientid varchar(100),
    topic4name varchar(255),
    topic4id varchar(18),
    topic4clientid varchar(80),
    product5name varchar(80),
    product5id varchar(18),
    product5clientid varchar(100),
    topic5name varchar(255),
    topic5id varchar(18),
    topic5clientid varchar(80),
    reservedfield1 varchar(10),
    reservedfield2 varchar(10),
    reservedfield3 varchar(10),
    reservedfield4 varchar(10),
    reservedfield5 varchar(10),
    reservedfield6 varchar(10),
    reservedfield7 varchar(10),
    reservedfield8 varchar(10),
    reservedfield9 varchar(10),
    reservedfield10 varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TEVA_AHM_PARTICIPANT_src
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate varchar(64),
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    participantid varchar(18),
    clientcustomerid varchar(100),
    participanttype varchar(80),
    firstname varchar(80),
    middlename varchar(80),
    lastname varchar(80),
    suffix varchar(80),
    professionaldesignation varchar(80),
    primaryspecialty varchar(80),
    organizationname varchar(80),
    npinumber varchar(10),
    addressid varchar(18),
    clientaddressid varchar(100),
    addressline1 varchar(255),
    addressline2 varchar(255),
    addressline3 varchar(255),
    addresscity varchar(80),
    addressstateprovince varchar(50),
    addresspostalcode varchar(20),
    addresspostalcodeextension varchar(10),
    addresscountry varchar(50),
    region varchar(50),
    primarystatelicensestate varchar(50),
    primarystatelicensenumber varchar(50),
    attended varchar(1),
    mealconsumed varchar(1),
    contractid varchar(18),
    clientcontractid varchar(50),
    contractname varchar(100),
    contractcategory varchar(50),
    contractsubcategory varchar(50),
    contractclassification varchar(50),
    contracttier varchar(50),
    contracteffectivedate varchar(64),
    contractexpirationdate varchar(64),
    contracttotalvalue varchar(64),
    reservedfield1 varchar(10),
    reservedfield2 varchar(10),
    reservedfield3 varchar(10),
    reservedfield4 varchar(10),
    reservedfield5 varchar(10),
    reservedfield6 varchar(10),
    reservedfield7 varchar(10),
    reservedfield8 varchar(10),
    reservedfield9 varchar(10),
    reservedfield10 varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate varchar(64),
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    particpantcategoryid varchar(18),
    categorytype varchar(100),
    totalattendedcount varchar(64),
    totalmealconsumedcount varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TEVA_AHM_EXPENSE_src
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate varchar(64),
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    spendid varchar(18),
    clientspendid varchar(100),
    spendamount varchar(64),
    spendcurrency varchar(3),
    spenddate varchar(64),
    spendtype varchar(50),
    spendpurpose varchar(50),
    traveldestinationcity varchar(80),
    traveldestinationstateprovince varchar(50),
    traveldestinationcountry varchar(50),
    spenddescription varchar(2000),
    taxincludedindicator varchar(1),
    taxamount varchar(64),
    taxrate varchar(64),
    recipientid varchar(18),
    clientrecipientid varchar(100),
    participantid varchar(18),
    recipientfirstname varchar(80),
    recipientmiddlename varchar(80),
    recipientlastname varchar(80),
    recipientsuffix varchar(80),
    recipientprofessionaldesignation varchar(80),
    recipientprimaryspecialty varchar(80),
    recipientorganizationname varchar(80),
    recipientnpinumber varchar(10),
    recipientaddressid varchar(18),
    recipientclientaddressid varchar(100),
    recipientaddressline1 varchar(255),
    recipientaddressline2 varchar(255),
    recipientaddressline3 varchar(255),
    recipientaddresscity varchar(80),
    recipientaddressstateprovince varchar(50),
    recipientaddresspostalcode varchar(20),
    recipientaddresspostalcodeextension varchar(10),
    recipientaddresscountry varchar(50),
    recipientprimarystatelicensestate varchar(50),
    recipientprimarystatelicensenumber varchar(50),
    thirdpartyrecipientindicator varchar(1),
    thirdpartyrecipientid varchar(18),
    thirdpartyclientrecipientid varchar(100),
    thirdpartyrecipientname varchar(80),
    thirdpartycoveredrecipientindicator varchar(1),
    paymentid varchar(18),
    clientpaymentid varchar(50),
    paymentdate varchar(64),
    paymentmethod varchar(50),
    paymentreferencenumber varchar(50),
    paymentstatus varchar(50),
    reservedfield1 varchar(10),
    reservedfield2 varchar(10),
    reservedfield3 varchar(10),
    reservedfield4 varchar(10),
    reservedfield5 varchar(10),
    reservedfield6 varchar(10),
    reservedfield7 varchar(10),
    reservedfield8 varchar(10),
    reservedfield9 varchar(10),
    reservedfield10 varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src
(
    week_end_date varchar(10),
    practice_name varchar(255),
    practice_address_line_1 varchar(255),
    pracitce_address_line_2 varchar(255),
    city varchar(255),
    state varchar(255),
    zip_code varchar(255),
    provider_first_name varchar(255),
    provider_last_name varchar(255),
    npi varchar(255),
    specialty_1 varchar(255),
    specialty_2 varchar(255),
    total_cml_patients_with_poor_response_to_treatment varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_TW_BIOLOGICS_HUB_src
(
    HUB_ID varchar(20),
    SP_ID varchar(20),
    PORTAL_ID varchar(20),
    REFERRAL_DATE varchar(20),
    REFERRAL_RECEIVED_DATE varchar(20),
    REFERRAL_SOURCE varchar(30),
    REFERRAL_METHOD varchar(30),
    REFERRAL_TYPE varchar(30),
    BILLING_METHOD varchar(50),
    PATIENT_AUTH varchar(10),
    ORDER_CREATE_DATE varchar(20),
    PATIENT_STATUS varchar(20),
    BV_DATE varchar(20),
    EFFECTIVE_DATE varchar(20),
    PAYOR_RANK varchar(20),
    PAYOR_TYPE varchar(20),
    PAYOR varchar(50),
    PLAN_NAME varchar(50),
    COVERED_MAJOR_MEDICAL varchar(30),
    DEDUCTIBLE_APPLIES_PARAGARD varchar(10),
    J7300_REIMBURSEMENT varchar(50),
    BUNDLED_SERVICES varchar(50),
    PBM varchar(50),
    COVERED_PHARMACY varchar(50),
    REJECTION_CODE varchar(50),
    COVERAGE_TYPE varchar(50),
    LOW_PHARM_REIMBURSE varchar(10),
    LOW_PHARM_REIMBURSE_AMOUNT varchar(20),
    PA_REQUIRED varchar(10),
    PA_TYPE varchar(20),
    PA_CONTACT varchar(50),
    PA_PHONE varchar(20),
    PA_FAX varchar(20),
    BV_DATE_2 varchar(20),
    EFFECTIVE_DATE_2 varchar(20),
    PAYOR_RANK_2 varchar(10),
    PAYOR_TYPE_2 varchar(20),
    PAYOR_2 varchar(50),
    PLAN_NAME_2 varchar(50),
    COVERED_MAJOR_MEDICAL_2 varchar(30),
    DEDUCTIBLE_APPLIES_PARAGARD_2 varchar(10),
    J7300_REIMBURSEMENT_2 varchar(50),
    BUNDLED_SERVICES_2 varchar(50),
    PBM_2 varchar(50),
    COVERED_PHARMACY_2 varchar(50),
    REJECTION_CODE_2 varchar(100),
    COVERAGE_TYPE_2 varchar(50),
    LOW_PHARM_REIMBURSE_2 varchar(10),
    LOW_PHARM_REIMBURSE_AMOUNT_2 varchar(50),
    PA_REQUIRED_2 varchar(10),
    PA_TYPE_2 varchar(20),
    PA_CONTACT_2 varchar(50),
    PA_PHONE_2 varchar(20),
    PA_FAX_2 varchar(20),
    BV_DATE_3 varchar(20),
    EFFECTIVE_DATE_3 varchar(20),
    PAYOR_RANK_3 varchar(10),
    PAYOR_TYPE_3 varchar(20),
    PAYOR_3 varchar(50),
    PLAN_NAME_3 varchar(50),
    COVERED_MAJOR_MEDICAL_3 varchar(30),
    DEDUCTIBLE_APPLIES_PARAGARD_3 varchar(10),
    J7300_REIMBURSEMENT_3 varchar(50),
    BUNDLED_SERVICES_3 varchar(50),
    PBM_3 varchar(50),
    COVERED_PHARMACY_3 varchar(50),
    REJECTION_CODE_3 varchar(50),
    COVERAGE_TYPE_3 varchar(50),
    LOW_PHARM_REIMBURSE_3 varchar(10),
    LOW_PHARM_REIMBURSE_AMOUNT_3 varchar(20),
    PA_REQUIRED_3 varchar(10),
    PA_TYPE_3 varchar(20),
    PA_CONTACT_3 varchar(50),
    PA_PHONE_3 varchar(20),
    PA_FAX_3 varchar(20),
    COPAY varchar(50),
    TRIAGE_DATE varchar(20),
    SP_SHIP_DATE varchar(20),
    REPLACEMENT_FLAG varchar(10),
    INSERTION_MEDICAID varchar(50),
    MEDICAID_RETURN_DATE_CALL varchar(20),
    MEDICAID_RETURN_REQUEST_DATE varchar(20),
    MEDICAID_REQUEST_REASON varchar(50),
    MEDICAID_RETURN_DATE varchar(20),
    PH_ID varchar(20),
    NPI varchar(30),
    PHYSICIAN_NAME varchar(100),
    PRACTICE_NAME varchar(100),
    PH_ADDRESS varchar(100),
    PH_CITY varchar(50),
    PH_STATE varchar(2),
    PH_ZIP varchar(10),
    PH_PHONE varchar(20),
    PH_FAX varchar(20),
    DISC_DATE varchar(20),
    DISCHARGE_REASON varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src
(
    trans_type char(1),
    claim_trans_id varchar(20),
    original_claim_trans_id varchar(20),
    date_of_fill varchar(64),
    date_written varchar(64),
    days_supply varchar(64),
    ndc_drug_code varchar(19),
    daw varchar(64),
    drug_title varchar(60),
    drug_strength_and_form varchar(60),
    fill_number_code varchar(64),
    quantity_disp varchar(64),
    auth_refills varchar(64),
    other_coverage_code varchar(64),
    previous_other_payer_id varchar(64),
    group_number varchar(10),
    serial_id varchar(15),
    gender char(11),
    age varchar(64),
    date_processed varchar(64),
    pharmacy_chain varchar(64),
    ncpdp varchar(64),
    pharmacy_chain_name varchar(60),
    pharmacy_name varchar(60),
    pharmacy_address varchar(100),
    pharmacy_address2 varchar(100),
    pharmacy_city varchar(50),
    pharmacy_state varchar(2),
    pharmacy_zip varchar(64),
    pharmacy_phone varchar(64),
    pharmacy_npi varchar(64),
    hcp_dea varchar(9),
    hcp_npi varchar(64),
    hcp_name varchar(100),
    hcp_address varchar(100),
    hcp_address2 varchar(100),
    hcp_city varchar(50),
    hcp_state varchar(2),
    hcp_zip varchar(64),
    benefit_amount varchar(64),
    patient_expense varchar(64),
    submitted_cost varchar(64),
    pharmacy_fee varchar(64),
    amount_due varchar(64),
    calc_awp varchar(64),
    create_date varchar(64),
    occ_payment_type varchar(15),
    admin_hcp_npi varchar(64),
    admin_hcp_name varchar(100),
    admin_hcp_address varchar(100),
    admin_hcp_address2 varchar(100),
    admin_hcp_city varchar(50),
    admin_hcp_state varchar(2),
    admin_hcp_zip varchar(64),
    claim_type varchar(50),
    administration_flag char(1),
    soc_name varchar(60),
    soc_phone varchar(64),
    soc_fax varchar(64),
    soc_address varchar(100),
    soc_city varchar(50),
    soc_state varchar(64),
    soc_zip varchar(64),
    soc_id varchar(50),
    soc_npi varchar(64),
    payer_name varchar(60),
    cpt_code varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DX_CLAIMS_src
(
    ims_rxer_id varchar(7),
    npi varchar(10),
    g244_clm_cnt_mth_01 varchar(64),
    g244_clm_cnt_mth_02 varchar(64),
    g244_clm_cnt_mth_03 varchar(64),
    g244_clm_cnt_mth_04 varchar(64),
    g244_clm_cnt_mth_05 varchar(64),
    g244_clm_cnt_mth_06 varchar(64),
    g244_clm_cnt_mth_07 varchar(64),
    g244_clm_cnt_mth_08 varchar(64),
    g244_clm_cnt_mth_09 varchar(64),
    g244_clm_cnt_mth_10 varchar(64),
    g244_clm_cnt_mth_11 varchar(64),
    g244_clm_cnt_mth_12 varchar(64),
    g244_pat_cnt_mth_01 varchar(64),
    g244_pat_cnt_mth_02 varchar(64),
    g244_pat_cnt_mth_03 varchar(64),
    g244_pat_cnt_mth_04 varchar(64),
    g244_pat_cnt_mth_05 varchar(64),
    g244_pat_cnt_mth_06 varchar(64),
    g244_pat_cnt_mth_07 varchar(64),
    g244_pat_cnt_mth_08 varchar(64),
    g244_pat_cnt_mth_09 varchar(64),
    g244_pat_cnt_mth_10 varchar(64),
    g244_pat_cnt_mth_11 varchar(64),
    g244_pat_cnt_mth_12 varchar(64),
    g2401_clm_cnt_mth_01 varchar(64),
    g2401_clm_cnt_mth_02 varchar(64),
    g2401_clm_cnt_mth_03 varchar(64),
    g2401_clm_cnt_mth_04 varchar(64),
    g2401_clm_cnt_mth_05 varchar(64),
    g2401_clm_cnt_mth_06 varchar(64),
    g2401_clm_cnt_mth_07 varchar(64),
    g2401_clm_cnt_mth_08 varchar(64),
    g2401_clm_cnt_mth_09 varchar(64),
    g2401_clm_cnt_mth_10 varchar(64),
    g2401_clm_cnt_mth_11 varchar(64),
    g2401_clm_cnt_mth_12 varchar(64),
    g2401_pat_cnt_mth_01 varchar(64),
    g2401_pat_cnt_mth_02 varchar(64),
    g2401_pat_cnt_mth_03 varchar(64),
    g2401_pat_cnt_mth_04 varchar(64),
    g2401_pat_cnt_mth_05 varchar(64),
    g2401_pat_cnt_mth_06 varchar(64),
    g2401_pat_cnt_mth_07 varchar(64),
    g2401_pat_cnt_mth_08 varchar(64),
    g2401_pat_cnt_mth_09 varchar(64),
    g2401_pat_cnt_mth_10 varchar(64),
    g2401_pat_cnt_mth_11 varchar(64),
    g2401_pat_cnt_mth_12 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_OPTUMRX_src
(
    ship_date varchar(64),
    full_name varchar(100),
    specialty varchar(50),
    rank varchar(64),
    total varchar(64),
    aubagio_14 varchar(64),
    aubagio_7 varchar(64),
    avonex_30 varchar(64),
    avonex_pack varchar(64),
    avonex_pen_pack varchar(64),
    betaseron varchar(64),
    copaxone_20 varchar(64),
    copaxone_40 varchar(64),
    gilenya_0_5_2x14 varchar(64),
    gilenya_0_5_1x7 varchar(64),
    glatiramer_acetate_20 varchar(64),
    glatiramer_acetate_40 varchar(64),
    glatopa_20 varchar(64),
    lemtrada varchar(64),
    plegridy_pfs varchar(64),
    plegridy_pen varchar(64),
    rebif_22_rebidose varchar(64),
    rebif_22 varchar(64),
    rebif_44 varchar(64),
    rebif_44_rebidose varchar(64),
    rebif_pack varchar(64),
    rebif_pack_rebidose varchar(64),
    tecfidera_120 varchar(64),
    tecfidera_240 varchar(64),
    tecfidera_starter_pack varchar(64),
    tysabri varchar(64),
    zinbryta_150 varchar(64),
    md_addr1 varchar(100),
    md_addr2 varchar(100),
    md_city varchar(50),
    md_state varchar(2),
    md_zip varchar(5),
    prescriber_npi varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_PRODUCT_VOD__C_src
(
    ID varchar(18),
    OWNERID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    LASTVIEWEDDATE varchar(24),
    LASTREFERENCEDDATE varchar(24),
    CONSUMER_SITE__C varchar(255),
    PRODUCT_INFO__C varchar(255),
    THERAPEUTIC_CLASS_VOD__C varchar(255),
    PARENT_PRODUCT_VOD__C varchar(18),
    THERAPEUTIC_AREA_VOD__C varchar(255),
    PRODUCT_TYPE_VOD__C varchar(255),
    REQUIRE_KEY_MESSAGE_VOD__C varchar(5),
    COST_VOD__C varchar(64),
    EXTERNAL_ID_VOD__C varchar(25),
    MANUFACTURER_VOD__C varchar(255),
    COMPANY_PRODUCT_VOD__C varchar(5),
    CONTROLLED_SUBSTANCE_VOD__C varchar(5),
    DESCRIPTION_VOD__C varchar(255),
    SAMPLE_QUANTITY_PICKLIST_VOD__ varchar(1000),
    DISPLAY_ORDER_VOD__C varchar(64),
    NO_METRICS_VOD__C varchar(5),
    DISTRIBUTOR_VOD__C varchar(255),
    SAMPLE_QUANTITY_BOUND_VOD__C varchar(5),
    SAMPLE_U_M_VOD__C varchar(255),
    NO_DETAILS_VOD__C varchar(5),
    QUANTITY_PER_CASE_VOD__C varchar(64),
    SCHEDULE_VOD__C varchar(10),
    RESTRICTED_VOD__C varchar(5),
    PRICING_RULE_QUANTITY_BOUND_VO varchar(5),
    NO_PROMO_ITEMS_VOD__C varchar(1300),
    USER_ALIGNED_VOD__C varchar(5),
    RESTRICTED_STATES_VOD__C varchar(100),
    SORT_CODE_VOD__C varchar(20),
    NO_CYCLE_PLANS_VOD__C varchar(5),
    INVENTORY_ORDER_UOM_VOD__C varchar(255),
    INVENTORY_QUANTITY_PER_CASE_VO varchar(64),
    SUB_TYPE__C varchar(255),
    ORGANIZATION__C varchar(255),
    PRODUCT_ID_TEVA__C varchar(200),
    PRODUCT_LINE_TVA__C varchar(4000),
    VEXTERNAL_ID_VOD__C varchar(120),
    PRODUCT_VALUE_VOD__C varchar(64),
    ENCRYPT_VEEVA_EXTERNAL_ID_TVA__C varchar(255),
    AVAILABLE_QTY_TVA__C varchar(64),
    EXPIRATION_DATE_TVA__C varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp,
    t22s1_austedofrm__c varchar(5)
);


CREATE TABLE teva_ingestion.EXT_FTF_RESTRICTIONS_V2_src
(
    health_plan_id varchar(6),
    drug_id varchar(6),
    restriction_code varchar(7),
    restriction_detail_id varchar(6),
    restriction_detail_text varchar(250),
    restriction_addtnl_information_1 varchar(4000),
    restriction_addtnl_information_2 varchar(4000),
    step_count varchar(50),
    pa_form varchar(4000),
    indication varchar(255),
    grouped_restriction_level varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_SURVEY_TARGET_VOD__C_src
(
    ID varchar(18),
    OWNERID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    RECORDTYPEID varchar(18),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    LASTVIEWEDDATE varchar(24),
    LASTREFERENCEDDATE varchar(24),
    ACCOUNT_DISPLAY_NAME_VOD__C varchar(100),
    ACCOUNT_VOD__C varchar(18),
    CHANNELS_VOD__C varchar(255),
    END_DATE_VOD__C varchar(10),
    ENTITY_REFERENCE_ID_VOD__C varchar(100),
    EXTERNAL_ID_VOD__C varchar(120),
    LANGUAGE_VOD__C varchar(255),
    LOCK_VOD__C varchar(5),
    MOBILE_ID_VOD__C varchar(100),
    NO_AUTOASSIGN_VOD__C varchar(5),
    NOT_COMPLETED_VOD__C varchar(1300),
    REGION_VOD__C varchar(255),
    SEGMENT_VOD__C varchar(255),
    START_DATE_VOD__C varchar(10),
    STATUS_VOD__C varchar(255),
    SURVEY_VOD__C varchar(18),
    TERRITORY_VOD__C varchar(255),
    ZVOD_ADDRESS_VOD__C varchar(5),
    ZVOD_SPECIALTY_VOD__C varchar(5),
    SCORE_VOD__C varchar(64),
    Review_date_vod__c varchar(24),
    Employee_vod__c varchar(18),
    coach_vod__c varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp,
    Report_Status_vod__c varchar(50)
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_PROVIDER_V2_src
(
    PROVIDER_ID varchar(15),
    PROVIDER_TYPE varchar(2),
    IQVIA_RXER_ID varchar(7),
    PRIMARY_SPECIALTY_CODE varchar(10),
    PRIMARY_SPECIALTY_DESC varchar(100),
    FIRST_NAME varchar(100),
    LAST_NAME varchar(100),
    ORG_NM varchar(50),
    ADDRESS varchar(200),
    CITY varchar(100),
    ZIP_CODE varchar(5),
    STATE_CODE varchar(2),
    PHONE_NUMBER varchar(20),
    DEA_NUMBER varchar(20),
    ME_NUMBER varchar(20),
    FLEXIBLE_FLD_1_CHAR varchar(50),
    FLEXIBLE_FLD_2_CHAR varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_CALL_PLAN_TS_src
(
    VEEVA_ACCOUNT_ID varchar(18),
    TVCMID varchar(64),
    IMS_ID varchar(7),
    FIRST_NAME varchar(50),
    LAST_NAME varchar(50),
    SPECIALTY varchar(100),
    TERRITORY_NUM varchar(8),
    ADDRESS varchar(150),
    CITY varchar(100),
    STATE varchar(2),
    ZIP varchar(10),
    PRODUCT_NAME varchar(50),
    P1 varchar(64),
    P2 varchar(64),
    P3 varchar(64),
    TARGET varchar(50),
    SALES_FORCE_ID varchar(5),
    PERIOD varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src
(
    id varchar(18),
    ownerid varchar(18),
    isdeleted varchar(5),
    name varchar(255),
    createddate varchar(64),
    createdbyid varchar(18),
    lastmodifieddate varchar(64),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(64),
    lastactivitydate varchar(64),
    lastvieweddate varchar(64),
    lastreferenceddate varchar(64),
    birth_month_day__c varchar(255),
    business_mobile__c varchar(255),
    business_phone__c varchar(255),
    cost_center_name__c varchar(255),
    demotion__c varchar(255),
    ec_creation_date__c varchar(255),
    ec_last_modified_date__c varchar(255),
    ec_territory_id__c varchar(255),
    email_address__c varchar(255),
    employee_status__c varchar(255),
    first_name__c varchar(255),
    full_part_time__c varchar(255),
    global_employee_id__c varchar(255),
    hire_date__c varchar(255),
    home_address_1__c varchar(255),
    home_address_2__c varchar(255),
    home_address_3__c varchar(255),
    home_city_municipality__c varchar(255),
    home_country__c varchar(255),
    home_phone__c varchar(255),
    home_postal_code__c varchar(255),
    home_state_province__c varchar(255),
    job_code__c varchar(255),
    job_grade__c varchar(255),
    loa_end_date__c varchar(255),
    loa_start_date__c varchar(255),
    last_name__c varchar(255),
    local_employee_id__c varchar(255),
    mailing_address_1__c varchar(255),
    mailing_address_2__c varchar(255),
    mailing_address_3__c varchar(255),
    mailing_city__c varchar(255),
    mailing_country__c varchar(255),
    mailing_postal_code__c varchar(255),
    mailing_state__c varchar(255),
    middle_name__c varchar(255),
    name_suffix__c varchar(255),
    oracle_string__c varchar(255),
    payroll_id__c varchar(255),
    position_title__c varchar(255),
    preferred_name__c varchar(255),
    promotion__c varchar(255),
    reg_contract__c varchar(255),
    sample_eligibility_indicator__c varchar(255),
    sample_shippingstorage_address_1__c varchar(255),
    sample_shippingstorage_address_2__c varchar(255),
    sample_shippingstorage_address_3__c varchar(255),
    sample_shippingstorage_address_status__c varchar(255),
    sample_shippingstorage_city__c varchar(255),
    sample_shippingstorage_country__c varchar(255),
    sample_shippingstorage_postal_code__c varchar(255),
    sample_shippingstorage_state__c varchar(255),
    shipping_address_1__c varchar(255),
    shipping_address_2__c varchar(255),
    shipping_address_3__c varchar(255),
    shipping_city__c varchar(255),
    shipping_country__c varchar(255),
    shipping_postal_code__c varchar(255),
    shipping_state__c varchar(255),
    supervisor_global_employee_id__c varchar(255),
    transfer_date__c varchar(255),
    uid__c varchar(255),
    windows_logon_id__c varchar(255),
    teva_id__c varchar(255),
    employee_status_effective_date__c varchar(255),
    separation_date__c varchar(255),
    separation_reason__c varchar(255),
    Certified_Field_Trainer__c varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_ACCOUNT_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    MASTERRECORDID varchar(18),
    NAME varchar(255),
    LASTNAME varchar(80),
    FIRSTNAME varchar(40),
    SALUTATION varchar(40),
    TYPE varchar(40),
    RECORDTYPEID varchar(18),
    PHONE varchar(40),
    FAX varchar(40),
    WEBSITE varchar(255),
    NUMBEROFEMPLOYEES varchar(64),
    OWNERSHIP varchar(40),
    OWNERID varchar(18),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    LASTACTIVITYDATE varchar(10),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    LASTVIEWEDDATE varchar(24),
    LASTREFERENCEDDATE varchar(24),
    ISEXCLUDEDFROMREALIGN varchar(5),
    PERSONCONTACTID varchar(18),
    ISPERSONACCOUNT varchar(5),
    PERSONMAILINGSTREET varchar(255),
    PERSONMAILINGCITY varchar(40),
    PERSONMAILINGSTATE varchar(80),
    PERSONMAILINGPOSTALCODE varchar(20),
    PERSONMAILINGCOUNTRY varchar(80),
    PERSONMAILINGLATITUDE varchar(64),
    PERSONMAILINGLONGITUDE varchar(64),
    PERSONOTHERSTREET varchar(255),
    PERSONOTHERCITY varchar(40),
    PERSONOTHERSTATE varchar(80),
    PERSONOTHERPOSTALCODE varchar(20),
    PERSONOTHERCOUNTRY varchar(80),
    PERSONOTHERLATITUDE varchar(64),
    PERSONOTHERLONGITUDE varchar(64),
    PERSONMOBILEPHONE varchar(40),
    PERSONHOMEPHONE varchar(40),
    PERSONOTHERPHONE varchar(40),
    PERSONASSISTANTPHONE varchar(40),
    PERSONEMAIL varchar(80),
    PERSONTITLE varchar(80),
    PERSONDEPARTMENT varchar(80),
    PERSONASSISTANTNAME varchar(40),
    PERSONBIRTHDATE varchar(10),
    PERSONHASOPTEDOUTOFEMAIL varchar(5),
    PERSONHASOPTEDOUTOFFAX varchar(5),
    PERSONDONOTCALL varchar(5),
    PERSONLASTCUREQUESTDATE varchar(24),
    PERSONLASTCUUPDATEDATE varchar(24),
    PERSONEMAILBOUNCEDREASON varchar(255),
    PERSONEMAILBOUNCEDDATE varchar(24),
    JIGSAW varchar(20),
    JIGSAWCOMPANYID varchar(20),
    ACCOUNTSOURCE varchar(40),
    SICDESC varchar(80),
    EXTERNAL_ID_VOD__C varchar(120),
    CREDENTIALS_VOD__C varchar(255),
    EXCLUDE_FROM_ZIP_TO_TERR_PROCE varchar(5),
    GROUP_SPECIALTY_1_VOD__C varchar(255),
    GROUP_SPECIALTY_2_VOD__C varchar(255),
    SPECIALTY_1_VOD__C varchar(255),
    SPECIALTY_2_VOD__C varchar(255),
    FORMATTED_NAME_VOD__C varchar(1300),
    TERRITORY_TEST_VOD__C varchar(255),
    MOBILE_ID_VOD__C varchar(100),
    GENDER_VOD__C varchar(255),
    ID_VOD__C varchar(20),
    DO_NOT_SYNC_SALES_DATA_VOD__C varchar(5),
    ID2_VOD__C varchar(20),
    PREFERRED_NAME_VOD__C varchar(12),
    SAMPLE_DEFAULT_VOD__C varchar(1000),
    SEGMENTATIONS_VOD__C varchar(1000),
    RESTRICTED_PRODUCTS_VOD__C varchar(1000),
    PAYER_ID_VOD__C varchar(100),
    ACCOUNT_STATUS_TVA__C varchar(255),
    DO_NOT_CALL_VOD__C varchar(255),
    BEDS__C varchar(64),
    SPEND_AMOUNT__C varchar(128),
    PDRP_OPT_OUT_VOD__C varchar(5),
    SPEND_STATUS_VALUE_VOD__C varchar(1300),
    PDRP_OPT_OUT_DATE_VOD__C varchar(10),
    SPEND_STATUS_VOD__C varchar(1300),
    ENABLE_RESTRICTED_PRODUCTS varchar(5),
    CALL_REMINDER_VOD__C varchar(255),
    ACCOUNT_GROUP_VOD__C varchar(80),
    PRIMARY_PARENT_VOD__C varchar(18),
    COLOR_VOD__C varchar(1300),
    MIDDLE_VOD__C varchar(40),
    SUFFIX_VOD__C varchar(10),
    ACCOUNT_LOCATION_TVA__C varchar(50),
    NO_ORDERS_VOD__C varchar(255),
    ACCOUNT_MASTER_ID_TVA__C varchar(30),
    ACCOUNT_EMAIL_TVA__C varchar(80),
    ACCOUNT_SEARCH_FIRSTLAST varchar(1300),
    ACCOUNT_SEARCH_LASTFIRST varchar(1300),
    PERSON_PREFERRED_NAME_TVA__C varchar(50),
    PRACTICE_AT_HOSPITAL_VOD__C varchar(5),
    PRACTICE_NEAR_HOSPITAL_VOD__C varchar(5),
    DO_NOT_CREATE_CHILD_ACCOUNT varchar(5),
    TOTAL_MDS_DOS__C varchar(64),
    AHA__C varchar(20),
    ORDER_TYPE_VOD__C varchar(4000),
    NPI_VOD__C varchar(25),
    ME__C varchar(25),
    SPEAKER__C varchar(5),
    INVESTIGATOR_VOD__C varchar(5),
    DEFAULT_ORDER_TYPE_VOD__C varchar(255),
    PERSON_DEGREE_TVA__C varchar(30),
    TAX_STATUS__C varchar(20),
    MODEL__C varchar(20),
    OFFERINGS__C varchar(4000),
    DEPARTMENTS__C varchar(64),
    ACCOUNT_TYPE__C varchar(255),
    ACCOUNT_SEARCH_BUSINESS_VOD__C varchar(1300),
    BUSINESS_PROFESSIONAL_PERSON varchar(18),
    NO_SPEND_TVA__C varchar(5),
    HOSPITAL_TYPE_VOD__C varchar(255),
    ACCOUNT_CLASS_VOD__C varchar(20),
    FURIGANA_VOD__C varchar(100),
    TIRF_REMS_TVA__C varchar(50),
    FENTORA_APP_TVA__C varchar(5),
    TOTAL_REVENUE_000__C varchar(64),
    NET_INCOME_LOSS_000__C varchar(64),
    PMPM_INCOME_LOSS_000__C varchar(64),
    COMMERCIAL_PREMIUMS_PMPM__C varchar(64),
    MEDICAL_LOSS_RATIO__C varchar(64),
    MEDICAL_EXPENSES_PMPM__C varchar(64),
    COMMERCIAL_PATIENT_DAYS_1000 varchar(64),
    HMO_MARKET_SHR__C varchar(64),
    HMO__C varchar(64),
    HMO_POS__C varchar(64),
    PPO__C varchar(64),
    PPO_POS__C varchar(64),
    MEDICARE__C varchar(64),
    MEDICAID__C varchar(64),
    NUVIGIL_APP_TVA__C varchar(5),
    MDS_STATUS_TVA__C varchar(5),
    LIS_STATUS_TVA__C varchar(5),
    DNC_PCS_TVA__C varchar(30),
    DNC_CNS_TVA__C varchar(30),
    SUFFIX_TVA__C varchar(255),
    TYSABRI_STATUS_TVA__C varchar(4000),
    BUSINESS_DESCRIPTION__C varchar(4000),
    REGIONAL_STRATEGY__C varchar(4000),
    CONTRACTS_PROCESS__C varchar(4000),
    CML_PROFILED_TVA__C varchar(5),
    CELL_PHONE_TVA__C varchar(40),
    NO_CONTACT_TVA__C varchar(5),
    OUTLET_ID_TVA__C varchar(100),
    PMO_GPO_ACCOUNT_AFFILIATIONS varchar(4000),
    TERRITORY_STATUS_TVA__C varchar(255),
    ZDEA_NUMBER_TVA__C varchar(9),
    VEEVA_ID_TVA__C varchar(1300),
    TREANDA_LQ_TGT_TVA__C varchar(5),
    TBO_FILGRASTIM_TARGET_TVA__C varchar(10),
    SLN_RESCRUB_TVA__C varchar(5),
    ACCOUNT_IDENTIFIER_VOD__C varchar(80),
    TARGET__C varchar(5),
    KOL_VOD__C varchar(5),
    REMS_EXPIRATION_DATE_TEVA__C varchar(10),
    ACCOUNT_DEMO_ID_TVA__C varchar(30),
    TOTAL_LIVES__C varchar(64),
    TOTAL_PHYSICIANS_ENROLLED__C varchar(64),
    TIRF_REMS_EFF_DATE_TVA__C varchar(10),
    BUSINESS_ASSOCIATE_AGREEMENT varchar(255),
    DO_NOT_PROMOTE_TVA__C varchar(5),
    ACCOUNT_DEA_TVA__C varchar(15),
    BP_NUMBER__C varchar(1300),
    PARAGARD_SEGMENTATION_TVA__C varchar(30),
    TELESALES_ACTIVITY_TVA__C varchar(50),
    DESIGNATION_TVA__C varchar(255),
    TOTAL_PHARMACISTS__C varchar(64),
    COMP_PRICING_TVA__C varchar(5),
    FORMULARY_TVA__C varchar(255),
    GLN_TVA__C varchar(15),
    GPO_CONTRACTS_TVA__C varchar(4000),
    HIN_TVA__C varchar(9),
    MAX_ID_TVA__C varchar(15),
    ONCOLOGY_SERVICES_TVA__C varchar(5),
    PCP_PROGRAM_TVA__C varchar(5),
    PHARMACY_LOCATION_TVA__C varchar(100),
    PRIMARY_CREDENTIAL_TVA__C varchar(255),
    PRIMARY_WHOLESALER_TVA__C varchar(255),
    REP_CREDENTIALING_TVA__C varchar(255),
    SECONDARY_CREDENTIAL_TVA__C varchar(255),
    SIGN_IN_LOCATION_TVA__C varchar(100),
    SPECIAL_TVA__C varchar(5),
    SUB_TYPE_ID_TVA__C varchar(30),
    SUB_TYPE_TVA__C varchar(50),
    TEVA_CONTRACTS_TVA__C varchar(4000),
    IMS_ORG_ID_TVA__C varchar(15),
    CM_ID_TVA__C varchar(10),
    YEAR_OF_BIRTH_TVA__C varchar(4),
    TEACHING_HOSPITAL_TVA__C varchar(255),
    ACCOUNT_ARCHIVED_TVA__C varchar(5),
    MOBILE_ID_VOD__PC varchar(100),
    STAFF_EMAIL varchar(80),
    COMPANY_MANAGED_EMAIL varchar(80),
    ALTERNATE_EMAIL varchar(80),
    batch_id int,
    row_id int,
    update_ts timestamp,
    ACCREDITATIONS_KAM__C varchar(5),
    ADDL_SVCS_PATIENT_SVCS_OFFERING_KAM__C varchar(3),
    ADDL_SERVICES_SALESFORCE_KAM__C varchar(3),
    AGGREGATION_GROUP_KAM__C varchar(40),
    ALVIMOPAN_ANDA_KAM__C varchar(3),
    ALVIMOPAN_BRAND_USAGE_KAM__C varchar(3),
    ALVIMOPAN_CONVERTED_KAM__C varchar(3),
    ALVIMOPAN_REMS_KAM__C varchar(3),
    ALVIMOPAN_USAGE_KAM__C varchar(5),
    ANDA_ACCOUNT_KAM__C varchar(3),
    GPO_IDN__C varchar(10),
    GPO_OAKAM__C varchar(40),
    GPO_AFFILIATIONS_KAM__C varchar(7),
    HERZUMA_TARGET_KAM__C varchar(3),
    IDN_KAM__C varchar(3),
    IDN_SPECIALTY_PHARMACY__C varchar(3),
    KAM_PRIMARY_CONTACT__C varchar(10),
    LOC_KAM__C varchar(7),
    PCP_KAM__C varchar(3),
    PHARMACY_CLASSIFICATION_KAM__C varchar(20),
    PHARMACY_TYPE_KAM__C varchar(11),
    PREFERRED_WHOLESALER_KAM__C varchar(4),
    PURCHASING_HERZUMA_KAM__C varchar(3),
    PURCHASING_TRUXIMA_KAM__C varchar(3),
    RA_TARGET_KAM__C varchar(3),
    ROMIDEPSIN_CONVERTED_KAM__C varchar(3),
    ROMIDEPSIN_TARGET_KAM__C varchar(3),
    RX_NETWORKS_SUB_GROUP_KAM__C varchar(15),
    SECONDARY_WHOLESALER_KAM__C varchar(4),
    SPECIALTY_PHARMACY_NETWORK_AFFIL_KAM__C varchar(8),
    STATES_IN_NETWORK_FOR_MEDICAID_KAM__C varchar(2),
    STATES_LICENSED_TO_DISPENSE_KAM__C varchar(2),
    THERAPEUTIC_FOCUS_CONDITIONS_SERVED_KAM__C varchar(32),
    TRUXIMA_TARGET_KAM__C varchar(3),
    WHOLESALER_KAM__C varchar(4),
    buy_and_bill_tva__c varchar(255),
    free_trial_program_established_tva__c varchar(255),
    hcps_at_account_accept_samples_tva__c varchar(255),
    pt_committee_approval_tva__c varchar(255),
    type_of_account_tva__c varchar(255),
    t22s2_rep_email_personemail_status_tva__c varchar(10),
    t22s2_rep_email_staffemail_status_tva__c varchar(10),
    t22s2_rep_email_status2_tva__c varchar(10),
    co_mgd_email_exp_tva__c varchar(24)
);


CREATE TABLE teva_ingestion.EXT_VV_SENT_EMAIL_VOD__C_src
(
    Id varchar(36),
    CreatedDate varchar(24),
    CreatedById varchar(36),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(36),
    OwnerId varchar(36),
    RecordTypeId varchar(36),
    IsDeleted varchar(5),
    SystemModstamp varchar(24),
    Name varchar(160),
    Account_vod__c varchar(36),
    Activity_Tracking_Mode_vod__c varchar(510),
    EM_Attendee_vod__c varchar(36),
    Bcc_vod__c varchar(510),
    Call2_vod__c varchar(36),
    Capture_Datetime_vod__c varchar(24),
    Clicked_vod__c varchar(64),
    Content_Type_vod__c varchar(36),
    Detail_Group_vod__c varchar(36),
    Approved_Document_Views_vod__c varchar(65000),
    Entity_Reference_Id_vod__c varchar(200),
    Event_vod__c varchar(36),
    Event_Attendee_vod__c varchar(36),
    Event_Attendee_Mobile_Id_vod__c varchar(200),
    Event_Mobile_Id_vod__c varchar(200),
    Events_Management_Subtype_vod__c varchar(2600),
    EM_Event_Speaker_vod__c varchar(36),
    EM_Event_Team_Member_vod__c varchar(36),
    Sender_Email_vod__c varchar(160),
    Key_Message_vod__c varchar(36),
    Last_Click_Date_vod__c varchar(24),
    Last_Device_vod__c varchar(510),
    Last_Activity_Date_vod__c varchar(24),
    Last_Open_Date_vod__c varchar(24),
    MC_Capture_Datetime_vod__c varchar(24),
    Medical_Event_vod__c varchar(36),
    Medical_Inquiry_vod__c varchar(36),
    Mobile_ID_vod__c varchar(200),
    Opened_vod__c varchar(64),
    Parent_Email_vod__c varchar(36),
    Product_vod__c varchar(36),
    Product_Display_vod__c varchar(2600),
    Receipt_Entity_Type_vod__c varchar(510),
    Receipt_Record_Id_vod__c varchar(200),
    Related_Transaction_ID_vod__c varchar(510),
    Scheduled_Send_Datetime_vod__c varchar(24),
    Email_Sent_Date_vod__c varchar(24),
    Status_vod__c varchar(510),
    Failure_Msg_vod__c varchar(510),
    Suggestion_vod__c varchar(36),
    Territory_vod__c varchar(200),
    Account_Email_vod__c varchar(160),
    Click_Count_vod__c varchar(64),
    Open_Count_vod__c varchar(64),
    User_vod__c varchar(36),
    Valid_Consent_Exists_vod__c varchar(5),
    VExternal_Id_vod__c varchar(100),
    Approved_Email_Template_vod__c varchar(36),
    batch_id int,
    row_id int,
    update_ts timestamp,
    subject varchar(255)
);


CREATE TABLE teva_ingestion.EXT_VV_CALL_CLICKSTREAM_VOD__C_src
(
    Id varchar(36),
    IsDeleted varchar(5),
    Name varchar(80),
    CreatedDate varchar(24),
    CreatedById varchar(18),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    MayEdit varchar(5),
    IsLocked varchar(5),
    Answer_vod__c varchar(2000),
    Call_vod__c varchar(18),
    Key_Message_vod__c varchar(18),
    Mobile_ID_vod__c varchar(100),
    Popup_Opened_vod__c varchar(5),
    Possible_Answers_vod__c varchar(2000),
    Presentation_ID_vod__c varchar(100),
    Product_vod__c varchar(18),
    Range_Value_vod__c varchar(100),
    Rollover_Entered_vod__c varchar(5),
    Selected_Items_vod__c varchar(2000),
    CLM_ID_vod__c varchar(100),
    Question_vod__c varchar(2000),
    Survey_Type_vod__c varchar(255),
    Text_Entered_vod__c varchar(2000),
    Toggle_Button_On_vod__c varchar(5),
    Track_Element_Description_vod__c varchar(255),
    Track_Element_Id_vod__c varchar(100),
    Track_Element_Type_vod__c varchar(100),
    Usage_Duration_vod__c varchar(64),
    Usage_Start_Time_vod__c varchar(24),
    AuxillaryId_vod__c varchar(100),
    ParentId_vod__c varchar(100),
    Revision_vod__c varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_vv_objectterritory2assignmentrule_src
(
    id varchar(36),
    isdeleted varchar(5),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    territory2id varchar(18),
    ruleid varchar(18),
    isinherited varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_vv_objectterritory2assignmentruleitem_src
(
    Id varchar(36),
    IsDeleted varchar(5),
    CreatedDate varchar(24),
    CreatedById varchar(18),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    RuleId varchar(18),
    Field varchar(255),
    Operation varchar(255),
    SortOrder varchar(64),
    Value varchar(1000),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSOCIATION_src
(
    Id varchar(18),
    ObjectId varchar(18),
    Territory2Id varchar(18),
    AssociationCause varchar(40),
    SobjectType varchar(40),
    IsDeleted varchar(5),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_RULETERRITORY2ASSOCIATION_src
(
    Id varchar(36),
    IsDeleted varchar(5),
    CreatedDate varchar(24),
    CreatedById varchar(18),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    MayEdit varchar(5),
    IsLocked varchar(5),
    Territory2Id varchar(18),
    RuleId varchar(18),
    IsInherited varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_TERRITORY2MODEL_src
(
    Id varchar(36),
    IsDeleted varchar(5),
    Name varchar(80),
    CreatedDate varchar(24),
    CreatedById varchar(18),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    MayEdit varchar(5),
    IsLocked varchar(5),
    Description varchar(255),
    ActivatedDate varchar(24),
    DeactivatedDate varchar(24),
    State varchar(255),
    DeveloperName varchar(80),
    LastRunRulesEndDate varchar(24),
    IsCloneSource varchar(5),
    LastOppTerrAssignEndDate varchar(24),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_TERRITORY2MODELHISTORY_src
(
    Id varchar(36),
    IsDeleted varchar(5),
    Territory2ModelId varchar(18),
    CreatedById varchar(18),
    CreatedDate varchar(24),
    Field varchar(255),
    OldValue varchar(255),
    NewValue varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_TERRITORY2TYPE_src
(
    Id varchar(36),
    IsDeleted varchar(5),
    DeveloperName varchar(80),
    Language varchar(40),
    MasterLabel varchar(80),
    CreatedDate varchar(24),
    CreatedById varchar(18),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    Description varchar(255),
    Priority varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_USERTERRITORY2ASSOCIATION_src
(
    Id varchar(18),
    UserId varchar(18),
    Territory2Id varchar(18),
    IsActive varchar(5),
    RoleInTerritory2 varchar(40),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_TERRITORY2_src
(
    Id varchar(36),
    Name varchar(80),
    Territory2TypeId varchar(18),
    Territory2ModelId varchar(18),
    ParentTerritory2Id varchar(18),
    Description varchar(1000),
    AccountAccessLevel varchar(40),
    OpportunityAccessLevel varchar(40),
    CaseAccessLevel varchar(40),
    ContactAccessLevel varchar(40),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    DeveloperName varchar(80),
    ParentTerritory1Id__c varchar(18),
    Territory1Id__c varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src
(
    id varchar(36),
    isdeleted varchar(36),
    name varchar(80),
    recordtypeid varchar(36),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    suggestion_vod__c varchar(36),
    account_vod__c varchar(36),
    activity_execution_type_vod__c varchar(36),
    call2_vod__c varchar(36),
    dismissfeedback1_vod__c varchar(18),
    dismissfeedback2_vod__c varchar(18),
    dismissfeedback3_vod__c varchar(18),
    dismissfeedback4_vod__c varchar(18),
    mobile_id_vod__c varchar(100),
    sent_email_vod__c varchar(36),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_BOTOX_STEP_RESTRICTION_V01_src
(
    code varchar(50),
    botox_step_flag varchar(100),
    restriction_group varchar(200),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_CALCULATED_PBM_CONFIG_V01_src
(
    ftf_formulary_management_pbm_regex varchar(200),
    ftf_formulary_influencer_pbm_regex varchar(200),
    ftf_claims_processing_pbm_regex varchar(200),
    calculated_pbm_column varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_CALC_PBM_KEY_PBM_MAPPING_V01_src
(
    calculated_pbm varchar(200),
    key_pbm varchar(200),
    added_by varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_COPAY_TIER_DERIVATION_CONFIG_V01_src
(
    pharmacy_status_regex varchar(200),
    tier_cat varchar(200),
    tier_regex varchar(200),
    pref_brand_tier_regex varchar(200),
    ftf_health_plan_type_regex varchar(200),
    copay_tier varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src
(
    paytype_regex varchar(200),
    pharmacy_status_regex varchar(200),
    coverage_cat_code varchar(200),
    coverage_category varchar(200),
    restriction_cat_code_regex varchar(200),
    meaning varchar(500),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src
(
    coverage_cat varchar(200),
    description varchar(500),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src
(
    ftf_health_plan_name_regex varchar(200),
    iqvia_payer_name_regex varchar(200),
    iqvia_plan_name_regex varchar(200),
    delete_flag varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_DRUG_ASSIGNMENTS_V01_src
(
    drug_id varchar(50),
    drug_seq varchar(50),
    product varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_FORMULARY_DERIVATION_CONFIG_V01_src
(
    pharmacy_status_regex varchar(200),
    has_pa_regex varchar(200),
    has_st_regex varchar(200),
    formulary varchar(200),
    tier_regex varchar(200),
    pref_brand_tier_regex varchar(200),
    ftf_health_plan_type_regex varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_FTF_OVERRIDE_PLAN_V01_src
(
    ftf_health_plan_fid varchar(50),
    paytype_index varchar(50),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_FTF_OVERRIDE_PROVIDER_V01_src
(
    provider_fid varchar(50),
    paytype_index varchar(50),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src
(
    paytype_index varchar(50),
    paytype varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_FTF_PLANS_PAYTYPEINDEX_V01_src
(
    ftf_health_plan_type varchar(100),
    paytype_index varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_HAS_PA_MAPPING_V01_src
(
    has_pa varchar(50),
    pa_regex varchar(200),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_HAS_ST_MAPPING_V01_src
(
    has_st varchar(50),
    st_regex varchar(200),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src
(
    iqvia_payer_name varchar(200),
    iqvia_plan_name_regex varchar(200),
    paytype varchar(120),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_IQVIA_PAYTYPEINDEX_V01_src
(
    paytype_index varchar(50),
    paytype varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_IQVIA_PLANS_DISCARD_V01_src
(
    payer_id varchar(50),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_KEY_CONTROLLER_LIST_V01_src
(
    ftf_health_plan_fid varchar(50),
    ftf_health_plan_name varchar(200),
    key_controlling_account varchar(200),
    key_controlling_plan_formulary varchar(200),
    key_controlling_parent varchar(200),
    payer_pbm varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_MEDICAL_REC_RESTRICTION_V01_src
(
    code varchar(50),
    medical_records_submission_required_flag varchar(100),
    restriction_detail_id varchar(100),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_MODEL_PAYTYPE_MAP_V01_src
(
    model varchar(100),
    paytype varchar(100),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src
(
    ftf_health_plan_name_regex varchar(200),
    iqvia_payer_name_regex varchar(200),
    iqvia_plan_name_regex varchar(200),
    override_ftf_health_plan_type varchar(200),
    override_precedence varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src
(
    iqvia_plan_code varchar(50),
    iqvia_plan_name varchar(200),
    ftf_health_plan_fid varchar(50),
    ftf_health_plan_name varchar(200),
    key_controlling_plan_formulary varchar(200),
    key_controlling_account varchar(200),
    key_controlling_parent varchar(200),
    payer_pbm varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_PATIENT_PA_RESTRICTION_V01_src
(
    code varchar(50),
    patient_prior_authorization_category varchar(200),
    restriction_detail_id varchar(100),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src
(
    patpa varchar(50),
    description varchar(500),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_PA_RESTRICTION_V01_src
(
    code varchar(50),
    prescriber_prior_authorization_category varchar(200),
    restriction_detail_id varchar(100),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src
(
    prespa varchar(50),
    description varchar(500),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_PROVIDER_OVERRIDE_DEFAULT_V01_src
(
    provider_id varchar(50),
    paytype_regex varchar(200),
    provider_name varchar(200),
    fill_in_iqvia_payer_name_if_no_bridge varchar(200),
    override_best_iqvia_payer varchar(200),
    fill_in_iqvia_pbm_if_no_bridge varchar(200),
    override_best_iqvia_pbm varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src
(
    tier_regex varchar(200),
    has_pa_has_st_regex varchar(200),
    unspec_regex varchar(200),
    step_regex varchar(200),
    botox_regex varchar(200),
    prespa_regex varchar(200),
    tier_cat_regex varchar(200),
    medrecs_regex varchar(200),
    restcat varchar(50),
    restriction_category varchar(200),
    meaning varchar(500),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src
(
    rest_cat varchar(200),
    description varchar(500),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_STEP_RESTRICTION_DESCRIPTION_V01_src
(
    step varchar(50),
    description varchar(500),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_STEP_RESTRICTION_V01_src
(
    code varchar(50),
    step_category varchar(100),
    restriction_group varchar(200),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src
(
    tier_cat varchar(200),
    description varchar(500),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_UNSPECIFIED_REC_RESTRICTION_V01_src
(
    code varchar(50),
    unspecified_restriction_flag varchar(100),
    restriction_detail_id varchar(100),
    notes varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.PS_FTF_PBM_FUNCTIONS_V01_src
(
    pbm_function_id varchar(50),
    pbm_function varchar(100),
    notes varchar(200),
    used varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.teva_ingestion_control
(
    batch_id int,
    file_class varchar(255),
    source_file_id int,
    source_file varchar(1024),
    source_system varchar(255),
    source_file_run_date date,
    source_file_run_ts timestamp,
    message varchar(255),
    data_from_ts timestamp,
    data_to_ts timestamp,
    job_start_ts timestamp,
    job_end_ts timestamp,
    update_ts timestamp,
    unique_file_id int,
    original_source_system varchar(1024),
    original_source_system_path varchar(1024),
    original_source_system_modified_date timestamp,
    rows_loaded int
);


CREATE TABLE teva_ingestion.XX_SALES_LOA_MV_src
(
    FILE_NBR varchar(6),
    NAME varchar(40),
    JOB_TITLE varchar(30),
    COST_CENTER_NAME varchar(35),
    DEPARTMENT varchar(30),
    EE_STATUS varchar(30),
    LEAVE_DT varchar(10),
    RETURN_DT varchar(10),
    LEAVE_DAYS varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.addresses_src
(
    ADDR_ID varchar(64),
    LINE_1 varchar(50),
    LINE_2 varchar(50),
    LINE_3 varchar(50),
    CITY varchar(50),
    ST_ABBR varchar(2),
    POSTAL_CD varchar(20),
    CNTRY_ISO_ABBR varchar(2),
    CRT_USER varchar(30),
    CRT_DT varchar(64),
    UPD_USER varchar(30),
    UPD_DT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.associates_src
(
    TEVA_ID varchar(7),
    HR_ID varchar(15),
    CRT_USER varchar(30),
    CRT_DT varchar(64),
    UPD_USER varchar(30),
    UPD_DT varchar(64),
    HIRE_DT varchar(64),
    LOGON_ID varchar(15),
    REPORTS_TO varchar(7),
    STAT_CD varchar(2),
    TYPE_CD varchar(1),
    FULL_TIME varchar(1),
    EEO_CAT varchar(10),
    EXEMPT varchar(1),
    EXPENSE_COST_CTR varchar(10),
    HRS_PER_WK varchar(64),
    MARITAL_STAT varchar(1),
    RACE varchar(50),
    SSN varchar(9),
    EMAIL varchar(255),
    BIRTH_DT varchar(64),
    COUNTRY_ID varchar(3),
    DFLT_CURR_ID varchar(50),
    TERR_ID varchar(15),
    OFFICE varchar(6),
    PRSN_SYS_ID varchar(64),
    LANGUAGE varchar(2),
    "POSITION" varchar(50),
    TERM_DT varchar(64),
    LAST_WRK_DT varchar(64),
    AUTH_LIMIT varchar(64),
    VEHICLE varchar(11),
    VACATION_DAYS varchar(64),
    CHK_REQ_LIMIT varchar(64),
    EXPENSE_REPORT_APPROVER varchar(7),
    LOC_CD varchar(10),
    PAY_CD varchar(3),
    ED_CD varchar(2),
    ED_CD_DT varchar(64),
    JOB_CD varchar(6),
    CNTRY_CITIZENSHIP varchar(3),
    DISABLED varchar(1),
    VIETNAM_VET varchar(1),
    EMERGENCY_CONTACT_NAME varchar(50),
    EMERGENCY_CONTACT_RELATIONSHIP varchar(20),
    EMERGENCY_CONTACT_PHONE varchar(50),
    ADP_DEPT_NUM varchar(10),
    VACATION_YR varchar(64),
    FIN_AUTH_COMMENTS varchar(255),
    EEO_CAT_HR_UPDT varchar(10),
    EXPENSE_REPORTING varchar(1),
    COMPANY_ID varchar(10),
    CHECK_REQUEST_APPROVER varchar(7),
    INVOICE_APPROVER varchar(7),
    PHANTOM_IND varchar(1),
    PAYROLL_COST_CTR varchar(30),
    SAMPLE_AUTH varchar(1),
    ORACLE_STRING varchar(25),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.aud_associates_src
(
    TEVA_ID varchar(7),
    HR_ID varchar(15),
    CRT_USER varchar(30),
    CRT_DT varchar(64),
    UPD_USER varchar(30),
    UPD_DT varchar(64),
    HIRE_DT varchar(64),
    LOGON_ID varchar(15),
    REPORTS_TO varchar(7),
    STAT_CD varchar(2),
    TYPE_CD varchar(1),
    FULL_TIME varchar(1),
    EEO_CAT varchar(10),
    EXEMPT varchar(1),
    EXPENSE_COST_CTR varchar(10),
    HRS_PER_WK varchar(64),
    MARITAL_STAT varchar(1),
    RACE varchar(50),
    SSN varchar(9),
    EMAIL varchar(255),
    BIRTH_DT varchar(64),
    COUNTRY_ID varchar(3),
    DFLT_CURR_ID varchar(50),
    TERR_ID varchar(15),
    OFFICE varchar(6),
    PRSN_SYS_ID varchar(64),
    LANGUAGE varchar(2),
    "POSITION" varchar(50),
    TERM_DT varchar(64),
    LAST_WRK_DT varchar(64),
    AUTH_LIMIT varchar(64),
    VEHICLE varchar(11),
    VACATION_DAYS varchar(64),
    "TIMESTAMP" varchar(64),
    ACTION varchar(20),
    CHK_REQ_LIMIT varchar(64),
    EXPENSE_REPORT_APPROVER varchar(7),
    LOC_CD varchar(10),
    PAY_CD varchar(3),
    ED_CD varchar(2),
    ED_CD_DT varchar(64),
    JOB_CD varchar(6),
    CNTRY_CITIZENSHIP varchar(3),
    DISABLED varchar(1),
    VIETNAM_VET varchar(1),
    EMERGENCY_CONTACT_NAME varchar(50),
    EMERGENCY_CONTACT_RELATIONSHIP varchar(20),
    EMERGENCY_CONTACT_PHONE varchar(50),
    ADP_DEPT_NUM varchar(10),
    EEO_CAT_HR_UPDT varchar(10),
    COMPANY_ID varchar(10),
    EXPENSE_REPORTING varchar(1),
    PHANTOM_IND varchar(1),
    CHECK_REQUEST_APPROVER varchar(7),
    INVOICE_APPROVER varchar(7),
    VACATION_YR varchar(64),
    FIN_AUTH_COMMENTS varchar(255),
    PAYROLL_COST_CTR varchar(30),
    SAMPLE_AUTH varchar(1),
    ORACLE_STRING varchar(25),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.c_bo_hce_alt_identifier_src
(
    ROWID_OBJECT char(14),
    CREATOR varchar(50),
    CREATE_DATE varchar(64),
    UPDATED_BY varchar(50),
    LAST_UPDATE_DATE varchar(64),
    CONSOLIDATION_IND varchar(64),
    DELETED_IND varchar(64),
    DELETED_BY varchar(50),
    DELETED_DATE varchar(64),
    LAST_ROWID_SYSTEM char(14),
    DIRTY_IND varchar(64),
    INTERACTION_ID varchar(64),
    HUB_STATE_IND varchar(64),
    CM_DIRTY_IND varchar(64),
    TVCMID char(14),
    ALTERNATE_ID_VALUE varchar(18),
    ALTERNATE_ID_TYPE varchar(10),
    SOURCE_DEACT_REASON_CODE char(1),
    SOURCE_DEACT_REASON_DESC varchar(50),
    IDENTIFIER_CAT varchar(25),
    STATUS varchar(10),
    STATE varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_call_goals_kc_src
(
    ID varchar(64),
    SFA_ID varchar(18),
    IMS_ID varchar(7),
    TERRITORY_NUM varchar(8),
    PRIORITY varchar(64),
    PRODUCT varchar(20),
    GOAL varchar(64),
    ACTUAL varchar(64),
    MARKETING_SEGMENT varchar(20),
    EFFECTIVE_DATE varchar(23),
    SALES_FORCE_ID varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_ims_sln_xref_kc_src
(
    IMS_ID varchar(10),
    STATE_LICENSE_NUMBER varchar(20),
    STATE_LICENSE_STATE varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_knipper_samples_shipped_src
(
    CLIENT_PRAC_ID varchar(32),
    TERR_CODE varchar(8),
    SAMPLE_PROD_CODE varchar(15),
    SAMPLE_DATE varchar(10),
    SAMPLE_QTY varchar(64),
    REQUEST_DATE varchar(10),
    REQUEST_QTY varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.job_title_defs_src
(
    JOB_CD varchar(5),
    CD_DESC varchar(50),
    ADP_JOB_CD varchar(8),
    CRT_DT varchar(64),
    CRT_USER varchar(30),
    UPD_DT varchar(64),
    UPD_USER varchar(30),
    DISPLAY_SEQ varchar(64),
    COMPANY_ID varchar(10),
    EFF_DT varchar(64),
    EXP_DT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.people_src
(
    SYS_ID varchar(64),
    CRT_DT varchar(64),
    CRT_USER varchar(30),
    UPD_DT varchar(64),
    UPD_USER varchar(30),
    LAST_NAME varchar(50),
    FIRST_NAME varchar(50),
    STAT_CD varchar(2),
    GENDER varchar(1),
    MID_NAME varchar(50),
    NAME_SUFFIX varchar(15),
    PRSN_TITLE varchar(15),
    PROF_TITLE varchar(15),
    EMAIL varchar(255),
    PREF_NAME varchar(50),
    PREV_LAST_NAME varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.people_addresses_src
(
    PRSN_SYS_ID varchar(64),
    ADDR_ID varchar(64),
    ATD_CD varchar(2),
    PRIORITY varchar(64),
    MAIL_STOP varchar(10),
    EFF_DT varchar(64),
    END_DT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.people_phones_src
(
    PRSN_SYS_ID varchar(64),
    PHN_ID varchar(64),
    PTD_CD varchar(2),
    PRIORITY varchar(64),
    EXT varchar(64),
    VMAIL varchar(64),
    ADDR_ID varchar(64),
    PRVDR_CD varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.phones_src
(
    PHN_ID varchar(64),
    CNTRY_DIAL_CD varchar(64),
    AREA_CD varchar(5),
    PHN_NUMBER varchar(64),
    CRT_USER varchar(30),
    CRT_DT varchar(64),
    UPD_USER varchar(30),
    UPD_DT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.territories_src
(
    TERR_ID varchar(225),
    NAME varchar(255),
    DESC_TEXT varchar(255),
    COMPANY_CD varchar(10),
    TERR_TYPE varchar(20),
    TEAM varchar(50),
    SAMPLE_DIST varchar(1),
    COMMENTS varchar(200),
    FLEET_ELIG varchar(1),
    REP_TYPE varchar(8),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.tvcmid_hco_demo_src
(
    TVCMID varchar(64),
    IMS_ORG_ID varchar(11),
    NPI varchar(18),
    HIN varchar(18),
    IMS_OUTLET_CODE varchar(18),
    BUSINESS_NAME varchar(80),
    ADDRESS_LINE1 varchar(80),
    ADDRESS_LINE2 varchar(80),
    CITY varchar(40),
    STATE varchar(2),
    ZIP varchar(5),
    C_BO_HCE_ADDRESS__ADDRESS_ID char(14),
    COT_CLASSIFICATION varchar(50),
    COT_FACILITY_TYPE varchar(50),
    COT_SPECIALTY varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.tvcmid_merges_src
(
    PREVIOUS_TVCMID varchar(64),
    CURRENT_TVCMID varchar(64),
    MERGE_CYCLE char(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.tvcmid_xref_src
(
    TVCMID varchar(64),
    ID_NUM varchar(255),
    ID_TYPE varchar(14),
    STATE varchar(2),
    EXPIRATION_DATE varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_DMD_WEEKLY_SALES_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    IMS_OUTLET_CODE varchar(10),
    SUBCATEGORY_CODE varchar(10),
    ALT_SEQ_NUM varchar(10),
    FILLER_01 varchar(255),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(9),
    DATA_DATE varchar(64),
    QTY_WK01 varchar(64),
    QTY_WK02 varchar(64),
    QTY_WK03 varchar(64),
    QTY_WK04 varchar(64),
    QTY_WK05 varchar(64),
    QTY_WK06 varchar(64),
    QTY_WK07 varchar(64),
    QTY_WK08 varchar(64),
    QTY_WK09 varchar(64),
    QTY_WK10 varchar(64),
    QTY_WK11 varchar(64),
    QTY_WK12 varchar(64),
    QTY_WK13 varchar(64),
    QTY_WK14 varchar(64),
    QTY_WK15 varchar(64),
    QTY_WK16 varchar(64),
    QTY_WK17 varchar(64),
    QTY_WK18 varchar(64),
    QTY_WK19 varchar(64),
    QTY_WK20 varchar(64),
    QTY_WK21 varchar(64),
    QTY_WK22 varchar(64),
    QTY_WK23 varchar(64),
    QTY_WK24 varchar(64),
    QTY_WK25 varchar(64),
    QTY_WK26 varchar(64),
    QTY_WK27 varchar(64),
    QTY_WK28 varchar(64),
    QTY_WK29 varchar(64),
    QTY_WK30 varchar(64),
    QTY_WK31 varchar(64),
    QTY_WK32 varchar(64),
    QTY_WK33 varchar(64),
    QTY_WK34 varchar(64),
    QTY_WK35 varchar(64),
    QTY_WK36 varchar(64),
    QTY_WK37 varchar(64),
    QTY_WK38 varchar(64),
    QTY_WK39 varchar(64),
    QTY_WK40 varchar(64),
    QTY_WK41 varchar(64),
    QTY_WK42 varchar(64),
    QTY_WK43 varchar(64),
    QTY_WK44 varchar(64),
    QTY_WK45 varchar(64),
    QTY_WK46 varchar(64),
    QTY_WK47 varchar(64),
    QTY_WK48 varchar(64),
    QTY_WK49 varchar(64),
    QTY_WK50 varchar(64),
    QTY_WK51 varchar(64),
    QTY_WK52 varchar(64),
    QTY_WK53 varchar(64),
    QTY_WK54 varchar(64),
    QTY_WK55 varchar(64),
    QTY_WK56 varchar(64),
    QTY_WK57 varchar(64),
    QTY_WK58 varchar(64),
    QTY_WK59 varchar(64),
    QTY_WK60 varchar(64),
    QTY_WK61 varchar(64),
    QTY_WK62 varchar(64),
    QTY_WK63 varchar(64),
    QTY_WK64 varchar(64),
    QTY_WK65 varchar(64),
    QTY_WK66 varchar(64),
    QTY_WK67 varchar(64),
    QTY_WK68 varchar(64),
    QTY_WK69 varchar(64),
    QTY_WK70 varchar(64),
    QTY_WK71 varchar(64),
    QTY_WK72 varchar(64),
    QTY_WK73 varchar(64),
    QTY_WK74 varchar(64),
    QTY_WK75 varchar(64),
    QTY_WK76 varchar(64),
    QTY_WK77 varchar(64),
    QTY_WK78 varchar(64),
    QTY_WK79 varchar(64),
    QTY_WK80 varchar(64),
    QTY_WK81 varchar(64),
    QTY_WK82 varchar(64),
    QTY_WK83 varchar(64),
    QTY_WK84 varchar(64),
    QTY_WK85 varchar(64),
    QTY_WK86 varchar(64),
    QTY_WK87 varchar(64),
    QTY_WK88 varchar(64),
    QTY_WK89 varchar(64),
    QTY_WK90 varchar(64),
    QTY_WK91 varchar(64),
    QTY_WK92 varchar(64),
    QTY_WK93 varchar(64),
    QTY_WK94 varchar(64),
    QTY_WK95 varchar(64),
    QTY_WK96 varchar(64),
    QTY_WK97 varchar(64),
    QTY_WK98 varchar(64),
    QTY_WK99 varchar(64),
    QTY_WK100 varchar(64),
    QTY_WK101 varchar(64),
    QTY_WK102 varchar(64),
    QTY_WK103 varchar(64),
    QTY_WK104 varchar(64),
    QTY_WK105 varchar(64),
    QTY_WK106 varchar(64),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(30),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CAREMARK_RX2_AOB_src
(
    MD_ID varchar(50),
    MD_LAST_NAME varchar(50),
    MD_FIRST_NAME varchar(50),
    PRESCRIBER_NPI varchar(20),
    MD_ADDR1 varchar(100),
    MD_ADDR2 varchar(100),
    MD_CITY varchar(50),
    MD_STATE varchar(2),
    MD_ZIP varchar(5),
    NDC_NUMBER varchar(13),
    SHIP_DATE varchar(10),
    QTY varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CAREMARK_RX2_MEDICARE_src
(
    MD_ID varchar(50),
    MD_LAST_NAME varchar(50),
    MD_FIRST_NAME varchar(50),
    PRESCRIBER_NPI varchar(20),
    MD_ADDR1 varchar(100),
    MD_ADDR2 varchar(100),
    MD_CITY varchar(50),
    MD_STATE varchar(2),
    MD_ZIP varchar(5),
    NDC_NUMBER varchar(13),
    SHIP_DATE varchar(10),
    QTY varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DDD_DOD_SALES_MS_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    filler_01 varchar(255),
    OUTLET_CODE varchar(8),
    SUBCATEGORY_CODE varchar(2),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(3),
    MTH_YYYYMM varchar(6),
    DOL_MTH01 varchar(64),
    DOL_MTH02 varchar(64),
    DOL_MTH03 varchar(64),
    DOL_MTH04 varchar(64),
    DOL_MTH05 varchar(64),
    DOL_MTH06 varchar(64),
    DOL_MTH07 varchar(64),
    DOL_MTH08 varchar(64),
    DOL_MTH09 varchar(64),
    DOL_MTH10 varchar(64),
    DOL_MTH11 varchar(64),
    DOL_MTH12 varchar(64),
    DOL_MTH13 varchar(64),
    DOL_MTH14 varchar(64),
    DOL_MTH15 varchar(64),
    DOL_MTH16 varchar(64),
    DOL_MTH17 varchar(64),
    DOL_MTH18 varchar(64),
    DOL_MTH19 varchar(64),
    DOL_MTH20 varchar(64),
    DOL_MTH21 varchar(64),
    DOL_MTH22 varchar(64),
    DOL_MTH23 varchar(64),
    DOL_MTH24 varchar(64),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(30),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DDD_DOD_SALES_PD_src
(
    CLIENT_NUM varchar(3),
    REPORT_NUM varchar(2),
    filler_01 varchar(255),
    OUTLET_CODE varchar(8),
    SUBCATEGORY_CODE varchar(2),
    CATEGORY_CODE varchar(2),
    IMS_PRODUCT_CODE varchar(3),
    MTH_YYYYMM varchar(6),
    DOL_MTH01 varchar(64),
    DOL_MTH02 varchar(64),
    DOL_MTH03 varchar(64),
    DOL_MTH04 varchar(64),
    DOL_MTH05 varchar(64),
    DOL_MTH06 varchar(64),
    DOL_MTH07 varchar(64),
    DOL_MTH08 varchar(64),
    DOL_MTH09 varchar(64),
    DOL_MTH10 varchar(64),
    DOL_MTH11 varchar(64),
    DOL_MTH12 varchar(64),
    DOL_MTH13 varchar(64),
    DOL_MTH14 varchar(64),
    DOL_MTH15 varchar(64),
    DOL_MTH16 varchar(64),
    DOL_MTH17 varchar(64),
    DOL_MTH18 varchar(64),
    DOL_MTH19 varchar(64),
    DOL_MTH20 varchar(64),
    DOL_MTH21 varchar(64),
    DOL_MTH22 varchar(64),
    DOL_MTH23 varchar(64),
    DOL_MTH24 varchar(64),
    OUTLET_NAME varchar(30),
    OUTLET_ADDRESS varchar(30),
    OUTLET_CITY varchar(25),
    OUTLET_STATE varchar(2),
    OUTLET_ZIP varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_I3_TYSABRI_RX_src
(
    FULL_NAME varchar(100),
    SPECIALTY varchar(50),
    MD_ADDR1 varchar(100),
    MD_ADDR2 varchar(100),
    MD_CITY varchar(50),
    MD_STATE varchar(2),
    MD_ZIP varchar(5),
    PRESCRIBER_NPI varchar(20),
    DNC_FLAG varchar(64),
    RX_12 varchar(64),
    RX_11 varchar(64),
    RX_10 varchar(64),
    RX_09 varchar(64),
    RX_08 varchar(64),
    RX_07 varchar(64),
    RX_06 varchar(64),
    RX_05 varchar(64),
    RX_04 varchar(64),
    RX_03 varchar(64),
    RX_02 varchar(64),
    RX_01 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_DRM45_M_src
(
    FILE_CODE varchar(2),
    PRODUCT_GROUP varchar(8),
    PRODUCT_NAME varchar(100),
    MFG_NUM varchar(10),
    STATUS varchar(10),
    CMF varchar(20),
    PRODUCT_DESCRIPTION varchar(255),
    MFG_NAME varchar(100),
    USC varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_DRM45_W_src
(
    FILE_CODE varchar(2),
    PRODUCT_GROUP varchar(8),
    PRODUCT_NAME varchar(100),
    MFG_NUM varchar(10),
    STATUS varchar(10),
    CMF varchar(20),
    PRODUCT_DESCRIPTION varchar(255),
    MFG_NAME varchar(100),
    USC varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_CNT_M_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_CNT_W_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    nrx_025 varchar(64),
    nrx_026 varchar(64),
    nrx_027 varchar(64),
    nrx_028 varchar(64),
    nrx_029 varchar(64),
    nrx_030 varchar(64),
    nrx_031 varchar(64),
    nrx_032 varchar(64),
    nrx_033 varchar(64),
    nrx_034 varchar(64),
    nrx_035 varchar(64),
    nrx_036 varchar(64),
    nrx_037 varchar(64),
    nrx_038 varchar(64),
    nrx_039 varchar(64),
    nrx_040 varchar(64),
    nrx_041 varchar(64),
    nrx_042 varchar(64),
    nrx_043 varchar(64),
    nrx_044 varchar(64),
    nrx_045 varchar(64),
    nrx_046 varchar(64),
    nrx_047 varchar(64),
    nrx_048 varchar(64),
    nrx_049 varchar(64),
    nrx_050 varchar(64),
    nrx_051 varchar(64),
    nrx_052 varchar(64),
    nrx_053 varchar(64),
    nrx_054 varchar(64),
    nrx_055 varchar(64),
    nrx_056 varchar(64),
    nrx_057 varchar(64),
    nrx_058 varchar(64),
    nrx_059 varchar(64),
    nrx_060 varchar(64),
    nrx_061 varchar(64),
    nrx_062 varchar(64),
    nrx_063 varchar(64),
    nrx_064 varchar(64),
    nrx_065 varchar(64),
    nrx_066 varchar(64),
    nrx_067 varchar(64),
    nrx_068 varchar(64),
    nrx_069 varchar(64),
    nrx_070 varchar(64),
    nrx_071 varchar(64),
    nrx_072 varchar(64),
    nrx_073 varchar(64),
    nrx_074 varchar(64),
    nrx_075 varchar(64),
    nrx_076 varchar(64),
    nrx_077 varchar(64),
    nrx_078 varchar(64),
    nrx_079 varchar(64),
    nrx_080 varchar(64),
    nrx_081 varchar(64),
    nrx_082 varchar(64),
    nrx_083 varchar(64),
    nrx_084 varchar(64),
    nrx_085 varchar(64),
    nrx_086 varchar(64),
    nrx_087 varchar(64),
    nrx_088 varchar(64),
    nrx_089 varchar(64),
    nrx_090 varchar(64),
    nrx_091 varchar(64),
    nrx_092 varchar(64),
    nrx_093 varchar(64),
    nrx_094 varchar(64),
    nrx_095 varchar(64),
    nrx_096 varchar(64),
    nrx_097 varchar(64),
    nrx_098 varchar(64),
    nrx_099 varchar(64),
    nrx_100 varchar(64),
    nrx_101 varchar(64),
    nrx_102 varchar(64),
    nrx_103 varchar(64),
    nrx_104 varchar(64),
    nrx_105 varchar(64),
    nrx_106 varchar(64),
    nrx_107 varchar(64),
    nrx_108 varchar(64),
    nrx_109 varchar(64),
    nrx_110 varchar(64),
    nrx_111 varchar(64),
    nrx_112 varchar(64),
    nrx_113 varchar(64),
    nrx_114 varchar(64),
    nrx_115 varchar(64),
    nrx_116 varchar(64),
    nrx_117 varchar(64),
    nrx_118 varchar(64),
    nrx_119 varchar(64),
    nrx_120 varchar(64),
    nrx_121 varchar(64),
    nrx_122 varchar(64),
    nrx_123 varchar(64),
    nrx_124 varchar(64),
    nrx_125 varchar(64),
    nrx_126 varchar(64),
    nrx_127 varchar(64),
    nrx_128 varchar(64),
    nrx_129 varchar(64),
    nrx_130 varchar(64),
    nrx_131 varchar(64),
    nrx_132 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    trx_025 varchar(64),
    trx_026 varchar(64),
    trx_027 varchar(64),
    trx_028 varchar(64),
    trx_029 varchar(64),
    trx_030 varchar(64),
    trx_031 varchar(64),
    trx_032 varchar(64),
    trx_033 varchar(64),
    trx_034 varchar(64),
    trx_035 varchar(64),
    trx_036 varchar(64),
    trx_037 varchar(64),
    trx_038 varchar(64),
    trx_039 varchar(64),
    trx_040 varchar(64),
    trx_041 varchar(64),
    trx_042 varchar(64),
    trx_043 varchar(64),
    trx_044 varchar(64),
    trx_045 varchar(64),
    trx_046 varchar(64),
    trx_047 varchar(64),
    trx_048 varchar(64),
    trx_049 varchar(64),
    trx_050 varchar(64),
    trx_051 varchar(64),
    trx_052 varchar(64),
    trx_053 varchar(64),
    trx_054 varchar(64),
    trx_055 varchar(64),
    trx_056 varchar(64),
    trx_057 varchar(64),
    trx_058 varchar(64),
    trx_059 varchar(64),
    trx_060 varchar(64),
    trx_061 varchar(64),
    trx_062 varchar(64),
    trx_063 varchar(64),
    trx_064 varchar(64),
    trx_065 varchar(64),
    trx_066 varchar(64),
    trx_067 varchar(64),
    trx_068 varchar(64),
    trx_069 varchar(64),
    trx_070 varchar(64),
    trx_071 varchar(64),
    trx_072 varchar(64),
    trx_073 varchar(64),
    trx_074 varchar(64),
    trx_075 varchar(64),
    trx_076 varchar(64),
    trx_077 varchar(64),
    trx_078 varchar(64),
    trx_079 varchar(64),
    trx_080 varchar(64),
    trx_081 varchar(64),
    trx_082 varchar(64),
    trx_083 varchar(64),
    trx_084 varchar(64),
    trx_085 varchar(64),
    trx_086 varchar(64),
    trx_087 varchar(64),
    trx_088 varchar(64),
    trx_089 varchar(64),
    trx_090 varchar(64),
    trx_091 varchar(64),
    trx_092 varchar(64),
    trx_093 varchar(64),
    trx_094 varchar(64),
    trx_095 varchar(64),
    trx_096 varchar(64),
    trx_097 varchar(64),
    trx_098 varchar(64),
    trx_099 varchar(64),
    trx_100 varchar(64),
    trx_101 varchar(64),
    trx_102 varchar(64),
    trx_103 varchar(64),
    trx_104 varchar(64),
    trx_105 varchar(64),
    trx_106 varchar(64),
    trx_107 varchar(64),
    trx_108 varchar(64),
    trx_109 varchar(64),
    trx_110 varchar(64),
    trx_111 varchar(64),
    trx_112 varchar(64),
    trx_113 varchar(64),
    trx_114 varchar(64),
    trx_115 varchar(64),
    trx_116 varchar(64),
    trx_117 varchar(64),
    trx_118 varchar(64),
    trx_119 varchar(64),
    trx_120 varchar(64),
    trx_121 varchar(64),
    trx_122 varchar(64),
    trx_123 varchar(64),
    trx_124 varchar(64),
    trx_125 varchar(64),
    trx_126 varchar(64),
    trx_127 varchar(64),
    trx_128 varchar(64),
    trx_129 varchar(64),
    trx_130 varchar(64),
    trx_131 varchar(64),
    trx_132 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_CONTROL_M_src
(
    IMS_CLIENT_NUM varchar(64),
    IMS_REPORT_NUM varchar(64),
    SRA varchar(3),
    SALES_CATEGORY varchar(10),
    IMS_PRODUCT_GROUP_NUM varchar(9),
    NRX001 varchar(64),
    NRX002 varchar(64),
    NRX003 varchar(64),
    NRX004 varchar(64),
    NRX005 varchar(64),
    NRX006 varchar(64),
    NRX007 varchar(64),
    NRX008 varchar(64),
    NRX009 varchar(64),
    NRX010 varchar(64),
    NRX011 varchar(64),
    NRX012 varchar(64),
    NRX013 varchar(64),
    NRX014 varchar(64),
    NRX015 varchar(64),
    NRX016 varchar(64),
    NRX017 varchar(64),
    NRX018 varchar(64),
    NRX019 varchar(64),
    NRX020 varchar(64),
    NRX021 varchar(64),
    NRX022 varchar(64),
    NRX023 varchar(64),
    NRX024 varchar(64),
    TRX001 varchar(64),
    TRX002 varchar(64),
    TRX003 varchar(64),
    TRX004 varchar(64),
    TRX005 varchar(64),
    TRX006 varchar(64),
    TRX007 varchar(64),
    TRX008 varchar(64),
    TRX009 varchar(64),
    TRX010 varchar(64),
    TRX011 varchar(64),
    TRX012 varchar(64),
    TRX013 varchar(64),
    TRX014 varchar(64),
    TRX015 varchar(64),
    TRX016 varchar(64),
    TRX017 varchar(64),
    TRX018 varchar(64),
    TRX019 varchar(64),
    TRX020 varchar(64),
    TRX021 varchar(64),
    TRX022 varchar(64),
    TRX023 varchar(64),
    TRX024 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_CONTROL_W_src
(
    IMS_CLIENT_NUM varchar(64),
    IMS_REPORT_NUM varchar(64),
    SRA varchar(3),
    SALES_CATEGORY varchar(10),
    IMS_PRODUCT_GROUP_NUM varchar(9),
    NRX001 varchar(64),
    NRX002 varchar(64),
    NRX003 varchar(64),
    NRX004 varchar(64),
    NRX005 varchar(64),
    NRX006 varchar(64),
    NRX007 varchar(64),
    NRX008 varchar(64),
    NRX009 varchar(64),
    NRX010 varchar(64),
    NRX011 varchar(64),
    NRX012 varchar(64),
    NRX013 varchar(64),
    NRX014 varchar(64),
    NRX015 varchar(64),
    NRX016 varchar(64),
    NRX017 varchar(64),
    NRX018 varchar(64),
    NRX019 varchar(64),
    NRX020 varchar(64),
    NRX021 varchar(64),
    NRX022 varchar(64),
    NRX023 varchar(64),
    NRX024 varchar(64),
    NRX025 varchar(64),
    NRX026 varchar(64),
    NRX027 varchar(64),
    NRX028 varchar(64),
    NRX029 varchar(64),
    NRX030 varchar(64),
    NRX031 varchar(64),
    NRX032 varchar(64),
    NRX033 varchar(64),
    NRX034 varchar(64),
    NRX035 varchar(64),
    NRX036 varchar(64),
    NRX037 varchar(64),
    NRX038 varchar(64),
    NRX039 varchar(64),
    NRX040 varchar(64),
    NRX041 varchar(64),
    NRX042 varchar(64),
    NRX043 varchar(64),
    NRX044 varchar(64),
    NRX045 varchar(64),
    NRX046 varchar(64),
    NRX047 varchar(64),
    NRX048 varchar(64),
    NRX049 varchar(64),
    NRX050 varchar(64),
    NRX051 varchar(64),
    NRX052 varchar(64),
    NRX053 varchar(64),
    NRX054 varchar(64),
    NRX055 varchar(64),
    NRX056 varchar(64),
    NRX057 varchar(64),
    NRX058 varchar(64),
    NRX059 varchar(64),
    NRX060 varchar(64),
    NRX061 varchar(64),
    NRX062 varchar(64),
    NRX063 varchar(64),
    NRX064 varchar(64),
    NRX065 varchar(64),
    NRX066 varchar(64),
    NRX067 varchar(64),
    NRX068 varchar(64),
    NRX069 varchar(64),
    NRX070 varchar(64),
    NRX071 varchar(64),
    NRX072 varchar(64),
    NRX073 varchar(64),
    NRX074 varchar(64),
    NRX075 varchar(64),
    NRX076 varchar(64),
    NRX077 varchar(64),
    NRX078 varchar(64),
    NRX079 varchar(64),
    NRX080 varchar(64),
    NRX081 varchar(64),
    NRX082 varchar(64),
    NRX083 varchar(64),
    NRX084 varchar(64),
    NRX085 varchar(64),
    NRX086 varchar(64),
    NRX087 varchar(64),
    NRX088 varchar(64),
    NRX089 varchar(64),
    NRX090 varchar(64),
    NRX091 varchar(64),
    NRX092 varchar(64),
    NRX093 varchar(64),
    NRX094 varchar(64),
    NRX095 varchar(64),
    NRX096 varchar(64),
    NRX097 varchar(64),
    NRX098 varchar(64),
    NRX099 varchar(64),
    NRX100 varchar(64),
    NRX101 varchar(64),
    NRX102 varchar(64),
    NRX103 varchar(64),
    NRX104 varchar(64),
    NRX105 varchar(64),
    NRX106 varchar(64),
    NRX107 varchar(64),
    NRX108 varchar(64),
    NRX109 varchar(64),
    NRX110 varchar(64),
    NRX111 varchar(64),
    NRX112 varchar(64),
    NRX113 varchar(64),
    NRX114 varchar(64),
    NRX115 varchar(64),
    NRX116 varchar(64),
    NRX117 varchar(64),
    NRX118 varchar(64),
    NRX119 varchar(64),
    NRX120 varchar(64),
    NRX121 varchar(64),
    NRX122 varchar(64),
    NRX123 varchar(64),
    NRX124 varchar(64),
    NRX125 varchar(64),
    NRX126 varchar(64),
    NRX127 varchar(64),
    NRX128 varchar(64),
    NRX129 varchar(64),
    NRX130 varchar(64),
    NRX131 varchar(64),
    NRX132 varchar(64),
    TRX001 varchar(64),
    TRX002 varchar(64),
    TRX003 varchar(64),
    TRX004 varchar(64),
    TRX005 varchar(64),
    TRX006 varchar(64),
    TRX007 varchar(64),
    TRX008 varchar(64),
    TRX009 varchar(64),
    TRX010 varchar(64),
    TRX011 varchar(64),
    TRX012 varchar(64),
    TRX013 varchar(64),
    TRX014 varchar(64),
    TRX015 varchar(64),
    TRX016 varchar(64),
    TRX017 varchar(64),
    TRX018 varchar(64),
    TRX019 varchar(64),
    TRX020 varchar(64),
    TRX021 varchar(64),
    TRX022 varchar(64),
    TRX023 varchar(64),
    TRX024 varchar(64),
    TRX025 varchar(64),
    TRX026 varchar(64),
    TRX027 varchar(64),
    TRX028 varchar(64),
    TRX029 varchar(64),
    TRX030 varchar(64),
    TRX031 varchar(64),
    TRX032 varchar(64),
    TRX033 varchar(64),
    TRX034 varchar(64),
    TRX035 varchar(64),
    TRX036 varchar(64),
    TRX037 varchar(64),
    TRX038 varchar(64),
    TRX039 varchar(64),
    TRX040 varchar(64),
    TRX041 varchar(64),
    TRX042 varchar(64),
    TRX043 varchar(64),
    TRX044 varchar(64),
    TRX045 varchar(64),
    TRX046 varchar(64),
    TRX047 varchar(64),
    TRX048 varchar(64),
    TRX049 varchar(64),
    TRX050 varchar(64),
    TRX051 varchar(64),
    TRX052 varchar(64),
    TRX053 varchar(64),
    TRX054 varchar(64),
    TRX055 varchar(64),
    TRX056 varchar(64),
    TRX057 varchar(64),
    TRX058 varchar(64),
    TRX059 varchar(64),
    TRX060 varchar(64),
    TRX061 varchar(64),
    TRX062 varchar(64),
    TRX063 varchar(64),
    TRX064 varchar(64),
    TRX065 varchar(64),
    TRX066 varchar(64),
    TRX067 varchar(64),
    TRX068 varchar(64),
    TRX069 varchar(64),
    TRX070 varchar(64),
    TRX071 varchar(64),
    TRX072 varchar(64),
    TRX073 varchar(64),
    TRX074 varchar(64),
    TRX075 varchar(64),
    TRX076 varchar(64),
    TRX077 varchar(64),
    TRX078 varchar(64),
    TRX079 varchar(64),
    TRX080 varchar(64),
    TRX081 varchar(64),
    TRX082 varchar(64),
    TRX083 varchar(64),
    TRX084 varchar(64),
    TRX085 varchar(64),
    TRX086 varchar(64),
    TRX087 varchar(64),
    TRX088 varchar(64),
    TRX089 varchar(64),
    TRX090 varchar(64),
    TRX091 varchar(64),
    TRX092 varchar(64),
    TRX093 varchar(64),
    TRX094 varchar(64),
    TRX095 varchar(64),
    TRX096 varchar(64),
    TRX097 varchar(64),
    TRX098 varchar(64),
    TRX099 varchar(64),
    TRX100 varchar(64),
    TRX101 varchar(64),
    TRX102 varchar(64),
    TRX103 varchar(64),
    TRX104 varchar(64),
    TRX105 varchar(64),
    TRX106 varchar(64),
    TRX107 varchar(64),
    TRX108 varchar(64),
    TRX109 varchar(64),
    TRX110 varchar(64),
    TRX111 varchar(64),
    TRX112 varchar(64),
    TRX113 varchar(64),
    TRX114 varchar(64),
    TRX115 varchar(64),
    TRX116 varchar(64),
    TRX117 varchar(64),
    TRX118 varchar(64),
    TRX119 varchar(64),
    TRX120 varchar(64),
    TRX121 varchar(64),
    TRX122 varchar(64),
    TRX123 varchar(64),
    TRX124 varchar(64),
    TRX125 varchar(64),
    TRX126 varchar(64),
    TRX127 varchar(64),
    TRX128 varchar(64),
    TRX129 varchar(64),
    TRX130 varchar(64),
    TRX131 varchar(64),
    TRX132 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_MHJ_QTY_M_src
(
    ims_client_num varchar(64),
    ims_report_num varchar(64),
    zip_other varchar(10),
    ims_id varchar(10),
    specialty varchar(10),
    plan_id varchar(10),
    sales_category varchar(64),
    rx_type varchar(1),
    ims_product_group_num varchar(64),
    filler_01 varchar(10),
    me_num varchar(10),
    last_name varchar(25),
    first_name varchar(25),
    middle_name varchar(2),
    address varchar(30),
    city varchar(25),
    state varchar(2),
    zip varchar(5),
    supplemental_data varchar(20),
    plan_name varchar(32),
    data_date varchar(6),
    bucket_count varchar(64),
    nrx_001 varchar(64),
    nrx_002 varchar(64),
    nrx_003 varchar(64),
    nrx_004 varchar(64),
    nrx_005 varchar(64),
    nrx_006 varchar(64),
    nrx_007 varchar(64),
    nrx_008 varchar(64),
    nrx_009 varchar(64),
    nrx_010 varchar(64),
    nrx_011 varchar(64),
    nrx_012 varchar(64),
    nrx_013 varchar(64),
    nrx_014 varchar(64),
    nrx_015 varchar(64),
    nrx_016 varchar(64),
    nrx_017 varchar(64),
    nrx_018 varchar(64),
    nrx_019 varchar(64),
    nrx_020 varchar(64),
    nrx_021 varchar(64),
    nrx_022 varchar(64),
    nrx_023 varchar(64),
    nrx_024 varchar(64),
    trx_001 varchar(64),
    trx_002 varchar(64),
    trx_003 varchar(64),
    trx_004 varchar(64),
    trx_005 varchar(64),
    trx_006 varchar(64),
    trx_007 varchar(64),
    trx_008 varchar(64),
    trx_009 varchar(64),
    trx_010 varchar(64),
    trx_011 varchar(64),
    trx_012 varchar(64),
    trx_013 varchar(64),
    trx_014 varchar(64),
    trx_015 varchar(64),
    trx_016 varchar(64),
    trx_017 varchar(64),
    trx_018 varchar(64),
    trx_019 varchar(64),
    trx_020 varchar(64),
    trx_021 varchar(64),
    trx_022 varchar(64),
    trx_023 varchar(64),
    trx_024 varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_ACCOUNTSHARE_src
(
    ACCOUNTACCESSLEVEL varchar(10),
    ACCOUNTID varchar(18),
    CASEACCESSLEVEL varchar(10),
    CONTACTACCESSLEVEL varchar(10),
    ID varchar(18),
    ISDELETED varchar(5),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    OPPORTUNITYACCESSLEVEL varchar(10),
    ROWCAUSE varchar(15),
    USERORGROUPID varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_ACCT_MERGE_HISTORY_VOD_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    ACCOUNT_VOD__C varchar(18),
    PERSONCONTACTID_VOD__C varchar(20),
    ACCOUNT_PERSONCONTACTID_VOD__C varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_ADDRESS_VOD__C_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    RECORDTYPEID varchar(18),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    ACCOUNT_VOD__C varchar(18),
    ADDRESS_LINE_2_VOD__C varchar(100),
    CITY_VOD__C varchar(40),
    EXTERNAL_ID_VOD__C varchar(120),
    DEA_VOD__C varchar(9),
    DEA_EXPIRATION_DATE_VOD__C varchar(10),
    DEA_LICENSE_ADDRESS_VOD__C varchar(1000),
    PHONE_VOD__C varchar(40),
    FAX_VOD__C varchar(40),
    MAP_VOD__C varchar(1300),
    SHIPPING_VOD__C varchar(5),
    PRIMARY_VOD__C varchar(5),
    LICENSE_VOD__C varchar(25),
    LICENSE_EXPIRATION_DATE_VOD__C varchar(10),
    STAFF_NOTES_VOD__C varchar(4000),
    APPT_REQUIRED_VOD__C varchar(5),
    OFFICE_NOTES_VOD__C varchar(4000),
    LICENSE_STATUS_VOD__C varchar(255),
    ZIP_4_VOD__C varchar(4),
    PHONE_2_VOD__C varchar(40),
    FAX_2_VOD__C varchar(40),
    LICENSE_VALID_TO_SAMPLE_VOD__C varchar(1300),
    SAMPLE_STATUS_VOD__C varchar(1300),
    INCLUDE_TERRITORY_ASSIGNMENT varchar(5),
    MOBILE_ID_VOD__C varchar(100),
    INACTIVE_VOD__C varchar(5),
    LOCK_VOD__C varchar(5),
    COUNTRY_VOD__C varchar(255),
    LATITUDE_VOD__C varchar(64),
    ZIP_VOD__C varchar(20),
    BEST_TIMES_VOD__C varchar(400),
    SOURCE_VOD__C varchar(255),
    BRICK_VOD__C varchar(80),
    ASSMCA_VOD__C varchar(100),
    DEA_ADDRESS_VOD__C varchar(5),
    DEA_SCHEDULE_VOD__C varchar(100),
    BUSINESS_VOD__C varchar(5),
    BILLING_VOD__C varchar(5),
    HOME_VOD__C varchar(5),
    MAILING_VOD__C varchar(5),
    STATE_VOD__C varchar(255),
    LONGITUDE_VOD__C varchar(64),
    DEA_STATUS_VOD__C varchar(255),
    ENTITY_REFERENCE_ID_VOD__C varchar(20),
    CONTROLLING_ADDRESS_VOD__C varchar(18),
    CONTROLLED_ADDRESS_VOD__C varchar(5),
    NO_ADDRESS_COPY_VOD__C varchar(5),
    ADDRESS_LINE_3_TVA__C varchar(100),
    COUNTY_TVA__C varchar(50),
    EXTERNAL_SLN_TVA__C varchar(30),
    LICENSE_EXPIRATION_DATE_TVA__C varchar(10),
    REP_ENTERED_SLN_TVA__C varchar(30),
    DEA_CONTACT_TVA__C varchar(255),
    MARK_FOR_DELETION_TVA__C varchar(5),
    LICENSE_VALID_DATE_TVA__C varchar(24),
    LICENSE_VALID_NUM_TVA__C varchar(25),
    CM_ID_TVA__C varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_AFFILIATION_VOD__C_src
(
    CHILD_AFFILIATION_VOD__C varchar(18),
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    DESTROY_VOD__C varchar(5),
    DISABLE_TRIGGER_VOD__C varchar(5),
    EXTERNAL_ID_VOD__C varchar(255),
    FROM_ACCOUNT_VOD__C varchar(18),
    FROM_CONTACT_VOD__C varchar(18),
    ID varchar(18),
    INFLUENCE_VOD__C varchar(50),
    ISDELETED varchar(5),
    ISLOCKED varchar(5),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    MAYEDIT varchar(5),
    MOBILE_ID_VOD__C varchar(100),
    NAME varchar(100),
    OWNERID varchar(18),
    PARENT_VOD__C varchar(18),
    ROLE_VOD__C varchar(50),
    SYSTEMMODSTAMP varchar(24),
    TO_ACCOUNT_VOD__C varchar(18),
    TO_CONTACT_VOD__C varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_ASSESSMENT__C_src
(
    ACCOUNT__C varchar(18),
    ASSESSMENT_DATE_TVA__C varchar(10),
    CC_PATIENT_PROFILES__C varchar(255),
    CC_STUDY_LEVERAGE__C varchar(255),
    CML_Q1_TVA__C varchar(150),
    CML_Q2_TVA__C varchar(150),
    CML_Q3_TVA__C varchar(150),
    CML_Q4_TVA__C varchar(150),
    CML_Q5_1_TVA__C varchar(150),
    CML_Q5_TVA__C varchar(150),
    CML_Q6_TVA__C varchar(150),
    CML_Q7_1_TVA__C varchar(150),
    CML_Q7_TVA__C varchar(150),
    COMMUNITY_ACTIVITY__C varchar(255),
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    HISTORICAL_ASSESSMENT_TVA__C varchar(5),
    ID varchar(18),
    ISDELETED varchar(5),
    ISLOCKED varchar(5),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LN_PATIENT_PROFILES__C varchar(255),
    LN_STUDY_LEVERAGE__C varchar(255),
    MAYEDIT varchar(5),
    MOBILE_ID_VOD__C varchar(255),
    NAME varchar(11),
    ONCOLOGY_BOARD__C varchar(5),
    PREFERRED_PATHOLOGIST__C varchar(255),
    RECORDTYPEID varchar(18),
    RESEARCH_FOCUS__C varchar(255),
    RL_PATIENT_PROFILES__C varchar(255),
    RL_STUDY_LEVERAGE__C varchar(255),
    SYSTEMMODSTAMP varchar(24),
    TREATMENT_PREFERENCES__C varchar(255),
    TREATMENT_VOLUME__C varchar(255),
    TUMOR_TYPES__C varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_CALL2_DETAIL_VOD__C_src
(
    id varchar(18),
    isdeleted varchar(5),
    name varchar(80),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    is_parent_call_vod__c varchar(64),
    call2_vod__c varchar(18),
    product_vod__c varchar(18),
    detail_priority_vod__c varchar(64),
    mobile_id_vod__c varchar(100),
    type_vod__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_CALL2_KEY_MESSAGE_VOD_src
(
    id varchar(18),
    isdeleted varchar(5),
    name varchar(80),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    account_vod__c varchar(18),
    call2_vod__c varchar(18),
    reaction_vod__c varchar(255),
    product_vod__c varchar(18),
    key_message_vod__c varchar(18),
    mobile_id_vod__c varchar(100),
    contact_vod__c varchar(18),
    call_date_vod__c varchar(10),
    user_vod__c varchar(18),
    category_vod__c varchar(255),
    vehicle_vod__c varchar(255),
    is_parent_call_vod__c varchar(64),
    clm_id_vod__c varchar(100),
    slide_version_vod__c varchar(100),
    duration_vod__c varchar(64),
    presentation_id_vod__c varchar(100),
    start_time_vod__c varchar(24),
    attendee_type_vod__c varchar(255),
    entity_reference_id_vod__c varchar(100),
    segment_vod__c varchar(80),
    display_order_vod__c varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_CALL2_VOD__HISTORY_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    PARENTID varchar(18),
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    FIELD varchar(255),
    OLDVALUE varchar(255),
    NEWVALUE varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_CALL_GOAL_TVA__C_src
(
    ACCOUNT_TVA__C varchar(18),
    ACTIVE_TVA__C varchar(5),
    ACTUAL_REMAINING_TVA__C varchar(50),
    ACTUAL_TVA__C varchar(64),
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    END_DATE_TVA__C varchar(10),
    EXTERNAL_ID_TVA__C varchar(100),
    GOAL_TVA__C varchar(64),
    ID varchar(18),
    ISDELETED varchar(5),
    ISLOCKED varchar(5),
    LASTACTIVITYDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    MAYEDIT varchar(5),
    NAME varchar(80),
    OWNERID varchar(18),
    PRIORITY_TVA__C varchar(64),
    PRODUCT_CATALOG_TVA__C varchar(18),
    REMAINING_TVA__C varchar(64),
    SORT_ORDER_TVA__C varchar(64),
    START_DATE_TVA__C varchar(10),
    SYSTEMMODSTAMP varchar(24),
    TERRITORY_TVA__C varchar(80),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_DECILES_TVA__C_src
(
    ACCOUNT_VOD__C varchar(18),
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    ID varchar(18),
    ISDELETED varchar(5),
    ISLOCKED varchar(5),
    LASTACTIVITYDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    MARKET_TVA__C varchar(10),
    MAYEDIT varchar(5),
    MOBILE_ID_VOD__C varchar(18),
    NAME varchar(80),
    SYSTEMMODSTAMP varchar(24),
    VALUE_TVA__C varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_GROUP_src
(
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    DEVELOPERNAME varchar(50),
    DOESINCLUDEBOSSES varchar(5),
    DOESSENDEMAILTOMEMBERS varchar(5),
    EMAIL varchar(11),
    ID varchar(18),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    NAME varchar(29),
    OWNERID varchar(18),
    RELATEDID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    TYPE varchar(24),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_MEDICAL_INQUIRY_VOD__C_src
(
    ACCOUNT_VOD__C varchar(255),
    ADDRESS_LINE_1_VOD__C varchar(255),
    ADDRESS_LINE_2_VOD__C varchar(255),
    CALL2_VOD__C varchar(255),
    CITY_VOD__C varchar(255),
    COUNTRY_VOD__C varchar(255),
    CREATEDBYID varchar(255),
    CREATEDDATE varchar(255),
    DELIVERY_METHOD_VOD__C varchar(255),
    DISCLAIMER_VOD__C varchar(255),
    EMAIL_VOD__C varchar(255),
    ENTITY_REFERENCE_ID_VOD__C varchar(255),
    FAX_NUMBER_VOD__C varchar(255),
    ID varchar(255),
    INQUIRY_TEXT__C varchar(2000),
    ISDELETED varchar(255),
    ISLOCKED varchar(255),
    LASTMODIFIEDBYID varchar(255),
    LASTMODIFIEDDATE varchar(255),
    LOCK_VOD__C varchar(255),
    MAYEDIT varchar(255),
    MOBILE_ID_VOD__C varchar(255),
    MSL_CONSULT__C varchar(255),
    NAME varchar(255),
    NEW_EMAIL_TVA__C varchar(255),
    NEW_FAX_TVA__C varchar(255),
    PHONE_NUMBER_VOD__C varchar(255),
    PRODUCT__C varchar(255),
    RECORDTYPEID varchar(255),
    RUSH_DELIVERY__C varchar(255),
    SIGNATURE_DATE_VOD__C varchar(255),
    SIGNATURE_VOD__C varchar(255),
    SOURCE__C varchar(255),
    STATE_VOD__C varchar(255),
    STATUS_VOD__C varchar(255),
    SUBMITTED_BY_MOBILE_VOD__C varchar(255),
    SYSTEMMODSTAMP varchar(255),
    ZIP_VOD__C varchar(255),
    ZVOD_DELIVERY_METHOD_VOD__C varchar(255),
    ZVOD_DISCLAIMER_VOD__C varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_PRODUCT_METRICS_VOD__C_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    ACCOUNT_VOD__C varchar(18),
    AWARENESS__C varchar(255),
    SELLING_STAGE__C varchar(255),
    FORMULARY_STATUS__C varchar(255),
    MOVEMENT__C varchar(64),
    PRODUCTS_VOD__C varchar(18),
    SEGMENT__C varchar(255),
    X12_MO_TRX_CHG__C varchar(64),
    SPEAKER_SKILLS__C varchar(255),
    INVESTIGATOR_READINESS__C varchar(255),
    ENGAGEMENTS__C varchar(64),
    MOBILE_ID_VOD__C varchar(100),
    EXTERNAL_ID_VOD__C varchar(255),
    DECILE_VALUE_TVA__C varchar(64),
    CURRENT_TVA__C varchar(64),
    EXTERNAL_ID_TVA__C varchar(50),
    MARKETING_TARGET_TVA__C varchar(255),
    PRIOR_TVA__C varchar(64),
    REP_TARGET_TVA__C varchar(255),
    SBO_TARGET_TVA__C varchar(255),
    TRX_3_MONTH_TVA__C varchar(64),
    TRX_6_MONTH_TVA__C varchar(64),
    TRX_YTD_TVA__C varchar(64),
    CP_DECILE_TVA__C varchar(64),
    BUSINESS_SEGMENT_TVA__C varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_QUESTION_RESPONSE_VOD_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    RECORDTYPEID varchar(18),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    SURVEY_TARGET_VOD__C varchar(18),
    ANSWER_CHOICE_VOD__C varchar(700),
    DATE_VOD__C varchar(10),
    DATETIME_VOD__C varchar(24),
    EXTERNAL_ID_VOD__C varchar(120),
    MOBILE_ID_VOD__C varchar(100),
    NUMBER_VOD__C varchar(64),
    ORDER_VOD__C varchar(64),
    QUESTION_TEXT_VOD__C varchar(1000),
    REQUIRED_VOD__C varchar(5),
    RESPONSE_HASH_VOD__C varchar(255),
    RESPONSE_VOD__C varchar(550),
    SCORE_VOD__C varchar(64),
    SURVEY_QUESTION_VOD__C varchar(18),
    TEXT_VOD__C varchar(2500),
    TYPE_VOD__C varchar(18),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_RECORDTYPE_src
(
    BUSINESSPROCESSID varchar(18),
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    DESCRIPTION varchar(255),
    DEVELOPERNAME varchar(80),
    ID varchar(18),
    ISACTIVE varchar(5),
    ISPERSONTYPE varchar(5),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    NAME varchar(80),
    NAMESPACEPREFIX varchar(15),
    SOBJECTTYPE varchar(40),
    SYSTEMMODSTAMP varchar(24),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_SURVEY_QUESTION_VOD__C_src
(
    ID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    RECORDTYPEID varchar(18),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    SURVEY_VOD__C varchar(18),
    ANSWER_CHOICE_VOD__C varchar(700),
    EXTERNAL_ID_VOD__C varchar(120),
    MAX_SCORE_VOD__C varchar(64),
    MIN_SCORE_VOD__C varchar(64),
    ORDER_VOD__C varchar(64),
    QUESTION_VOD__C varchar(18),
    REQUIRED_VOD__C varchar(5),
    TEXT_VOD__C varchar(1000),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_SURVEY_VOD__C_src
(
    ID varchar(18),
    OWNERID varchar(18),
    ISDELETED varchar(5),
    NAME varchar(80),
    RECORDTYPEID varchar(18),
    CREATEDDATE varchar(24),
    CREATEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    LASTMODIFIEDBYID varchar(18),
    SYSTEMMODSTAMP varchar(24),
    MAYEDIT varchar(5),
    ISLOCKED varchar(5),
    LASTVIEWEDDATE varchar(24),
    LASTREFERENCEDDATE varchar(24),
    ASSIGNMENT_TYPE_VOD__C varchar(255),
    CHANNELS_VOD__C varchar(255),
    END_DATE_VOD__C varchar(10),
    EXPIRED_VOD__C varchar(1300),
    EXTERNAL_ID_VOD__C varchar(120),
    LANGUAGE_VOD__C varchar(255),
    LOCK_VOD__C varchar(5),
    OPEN_VOD__C varchar(5),
    PRODUCT_VOD__C varchar(18),
    REGION_VOD__C varchar(255),
    SEGMENT_VOD__C varchar(800),
    START_DATE_VOD__C varchar(10),
    STATUS_VOD__C varchar(255),
    TERRITORY_VOD__C varchar(255),
    ZVOD_QUESTIONS_VOD__C varchar(5),
    ZVOD_SEGMENTS_VOD__C varchar(5),
    ZVOD_TARGETS_VOD__C varchar(5),
    MAX_SCORE_VOD__C varchar(64),
    MIN_SCORE_VOD__C varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_SYNC_TRACKING_VOD__C_src
(
    CREATEDBYID varchar(18),
    CREATEDDATE varchar(24),
    DOWNLOAD_PROCESSED_VOD__C varchar(5),
    ID varchar(18),
    ISDELETED varchar(5),
    ISLOCKED varchar(5),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    MAYEDIT varchar(5),
    MEDIA_PROCESSED_VOD__C varchar(5),
    MOBILE_ID_VOD__C varchar(100),
    NAME varchar(100),
    OWNERID varchar(18),
    SUCCESSFUL_SYNC_VOD__C varchar(5),
    SYNC_COMPLETED_DATETIME_VOD__C varchar(24),
    SYNC_DURATION_VOD__C varchar(18),
    SYNC_START_DATETIME_VOD__C varchar(24),
    SYNC_TYPE_VOD__C varchar(100),
    SYSTEMMODSTAMP varchar(24),
    UPLOAD_PROCESSED_VOD__C varchar(5),
    VERSION_VOD__C varchar(100),
    VINSIGHTS_PROCESSED_VOD__C varchar(5),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_TERRITORY_src
(
    ACCOUNTACCESSLEVEL varchar(5),
    CASEACCESSLEVEL varchar(5),
    CONTACTACCESSLEVEL varchar(5),
    DESCRIPTION varchar(50),
    DEVELOPERNAME varchar(50),
    FORECASTUSERID varchar(255),
    ID varchar(18),
    LASTMODIFIEDBYID varchar(18),
    LASTMODIFIEDDATE varchar(24),
    MAYFORECASTMANAGERSHARE varchar(5),
    NAME varchar(50),
    OPPORTUNITYACCESSLEVEL varchar(5),
    PARENTTERRITORYID varchar(18),
    RESTRICTOPPORTUNITYTRANSFER varchar(5),
    SYSTEMMODSTAMP varchar(24),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_TSF_VOD__C_src
(
    id varchar(18),
    isdeleted varchar(5),
    name varchar(80),
    recordtypeid varchar(18),
    createddate varchar(24),
    createdbyid varchar(18),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(18),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    account_vod__c varchar(18),
    address_vod__c varchar(18),
    last_activity_date_vod__c varchar(10),
    my_target_vod__c varchar(5),
    route_vod__c varchar(255),
    mobile_id_vod__c varchar(100),
    external_id_vod__c varchar(255),
    territory_vod__c varchar(80),
    ytd_activity_vod__c varchar(64),
    preferred_account_vod__c varchar(18),
    allowed_products_vod__c varchar(255),
    territory_status_tva__c varchar(255),
    territory_specialty_tva__c varchar(255),
    treats_es_osa_tva__c varchar(5),
    osa_patients_tva__c varchar(64),
    account_status_tva__c varchar(255),
    dea_number_tva__c varchar(9),
    synribo_target_tva__c varchar(255),
    treanda_sbo_tva__c varchar(255),
    trisenox_sbo_tva__c varchar(255),
    appt_index_tva__c varchar(10),
    merged_mvn__c varchar(5),
    call_plan_designation_tva__c varchar(255),
    campaign_tva__c varchar(30),
    batch_id int,
    row_id int,
    update_ts timestamp,
    detail_priority__c varchar(255),
    cinqair_call_plan_target__c varchar(5),
    digihaler_call_plan_target__c varchar(5)
);


CREATE TABLE teva_ingestion.EXT_VV_USERROLE_src
(
    CASEACCESSFORACCOUNTOWNER varchar(255),
    CONTACTACCESSFORACCOUNTOWNER varchar(255),
    DEVELOPERNAME varchar(255),
    FORECASTUSERID varchar(255),
    ID varchar(255),
    LASTMODIFIEDBYID varchar(255),
    LASTMODIFIEDDATE varchar(255),
    MAYFORECASTMANAGERSHARE varchar(255),
    NAME varchar(255),
    OPPORTUNITYACCESSACCOUNTOWNER varchar(255),
    PARENTROLEID varchar(255),
    PORTALACCOUNTID varchar(255),
    PORTALACCOUNTOWNERID varchar(255),
    PORTALTYPE varchar(255),
    ROLLUPDESCRIPTION varchar(255),
    SYSTEMMODSTAMP varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_USERTERRITORY_src
(
    ID varchar(255),
    ISACTIVE varchar(255),
    LASTMODIFIEDBYID varchar(255),
    LASTMODIFIEDDATE varchar(255),
    SYSTEMMODSTAMP varchar(255),
    TERRITORYID varchar(255),
    USERID varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.XX_TERR_ID_CHANGE_V_src
(
    EE_NBR varchar(24),
    EE_NAME varchar(40),
    TERR_ID_FROM varchar(8),
    TERR_ID_TO varchar(8),
    TERR_MOVE_DT varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_time_off_territory_kc_veev_src
(
    ID varchar(64),
    EVENT_ROW_ID varchar(18),
    REP_ROW_ID varchar(18),
    TERRITORY_NUM varchar(8),
    TIME_OFF_DATE varchar(64),
    TIME_ON_DATE varchar(64),
    DESCRIPTION varchar(100),
    COMMENTS varchar(100),
    DURATION_IN_MINUTES varchar(64),
    DURATION_IN_HOURS varchar(64),
    DURATION_IN_DAYS varchar(64),
    COMPANY varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_CALL_PLAN_TC_src
(
    VEEVA_ACCOUNT_ID varchar(18),
    TVCMID varchar(64),
    IMS_ID varchar(7),
    FIRST_NAME varchar(50),
    LAST_NAME varchar(50),
    SPECIALTY varchar(100),
    TERRITORY_NUM varchar(8),
    ADDRESS varchar(150),
    CITY varchar(100),
    STATE varchar(2),
    ZIP varchar(10),
    PRODUCT_NAME varchar(50),
    P1 varchar(64),
    P2 varchar(64),
    P3 varchar(64),
    TARGET varchar(50),
    SALES_FORCE_ID varchar(5),
    PERIOD varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_CALL_PLAN_TN_src
(
    VEEVA_ACCOUNT_ID varchar(18),
    TVCMID varchar(64),
    IMS_ID varchar(7),
    FIRST_NAME varchar(50),
    LAST_NAME varchar(50),
    SPECIALTY varchar(100),
    TERRITORY_NUM varchar(8),
    ADDRESS varchar(150),
    CITY varchar(100),
    STATE varchar(2),
    ZIP varchar(10),
    PRODUCT_NAME varchar(50),
    P1 varchar(64),
    P2 varchar(64),
    P3 varchar(64),
    TARGET varchar(50),
    SALES_FORCE_ID varchar(5),
    PERIOD varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_CALL_PLAN_TP_src
(
    VEEVA_ACCOUNT_ID varchar(18),
    TVCMID varchar(64),
    IMS_ID varchar(7),
    FIRST_NAME varchar(50),
    LAST_NAME varchar(50),
    SPECIALTY varchar(100),
    TERRITORY_NUM varchar(8),
    ADDRESS varchar(150),
    CITY varchar(100),
    STATE varchar(2),
    ZIP varchar(10),
    PRODUCT_NAME varchar(50),
    P1 varchar(64),
    P2 varchar(64),
    P3 varchar(64),
    TARGET varchar(50),
    SALES_FORCE_ID varchar(5),
    PERIOD varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_CALL_PLAN_TR_src
(
    VEEVA_ACCOUNT_ID varchar(18),
    TVCMID varchar(64),
    IMS_ID varchar(7),
    FIRST_NAME varchar(50),
    LAST_NAME varchar(50),
    SPECIALTY varchar(100),
    TERRITORY_NUM varchar(8),
    ADDRESS varchar(150),
    CITY varchar(100),
    STATE varchar(2),
    ZIP varchar(10),
    PRODUCT_NAME varchar(50),
    P1 varchar(64),
    P2 varchar(64),
    P3 varchar(64),
    TARGET varchar(50),
    SALES_FORCE_ID varchar(5),
    PERIOD varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_CALL_PLAN_TW_src
(
    VEEVA_ACCOUNT_ID varchar(18),
    TVCMID varchar(64),
    IMS_ID varchar(7),
    FIRST_NAME varchar(50),
    LAST_NAME varchar(50),
    SPECIALTY varchar(100),
    TERRITORY_NUM varchar(8),
    ADDRESS varchar(150),
    CITY varchar(100),
    STATE varchar(2),
    ZIP varchar(10),
    PRODUCT_NAME varchar(50),
    P1 varchar(64),
    P2 varchar(64),
    P3 varchar(64),
    TARGET varchar(50),
    SALES_FORCE_ID varchar(5),
    PERIOD varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ONC_MANUAL_FCRS_src
(
    TIME_PERIOD varchar(15),
    SALES_FORCE_ID varchar(5),
    TERRITORY_NUM varchar(8),
    REP_ID varchar(7),
    CONTACT_DATE varchar(64),
    DURATION_DAYS varchar(64),
    SS_OPENING varchar(64),
    SS_PROBING varchar(64),
    SS_RESOURCES varchar(64),
    SS_COMMITMENT varchar(64),
    SS_TRANSITIONING varchar(64),
    SS_ACUMEN varchar(64),
    ARCHIVE_FLAG varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DDD_445_CALENDAR_src
(
    START_DATE varchar(10),
    END_DATE varchar(10),
    PERIOD varchar(7),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.tvcmid_hcp_demo_src
(
    TVCMID varchar(64),
    IMS_HCE_ID varchar(64),
    IMS_ID varchar(7),
    NPI varchar(18),
    LAST_NAME varchar(40),
    FIRST_NAME varchar(40),
    MIDDLE_NAME varchar(40),
    PERSONAL_SUFFIX varchar(10),
    MEDICAL_SUFFIX varchar(10),
    PRIMARY_SPECIALTY varchar(5),
    ADDRESS_LINE1 varchar(80),
    ADDRESS_LINE2 varchar(80),
    CITY varchar(40),
    STATE varchar(2),
    ZIP varchar(5),
    C_BO_HCE_ADDRESS__ADDRESS_ID char(14),
    LEGACY_ADDRESS_ID varchar(64),
    BUSINESS_PHONE varchar(100),
    BUSINESS_EMAIL varchar(100),
    HCE_STATUS_DESC varchar(50),
    NP_PA_FLAG varchar(1),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_hcos_ddd_xfer_src
(
    IMS_ORG_ID varchar(100),
    HCE_ID_PRFSNL varchar(100),
    PROFESSIONAL_ID varchar(100),
    IDENTIFIER_ID varchar(100),
    IDENTIFIER varchar(100),
    IDENTIFIER_ORDER varchar(100),
    IDENTIFIER_CATEGORY varchar(100),
    IDENTIFIER_STATE varchar(100),
    SRC_STRT_DT varchar(100),
    SRC_TRMTN_DT varchar(100),
    SRC_TRMTN_CD varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_tw_biologics_dispense_src
(
    SP_ID varchar(20),
    HUB_ID varchar(20),
    PAYOR varchar(100),
    PAYOR_TYPE varchar(50),
    COPAY varchar(64),
    INVOICE_NUMBER varchar(20),
    PHYSICIAN_NPI varchar(30),
    PHYSICIAN_NAME varchar(100),
    PHYSICIAN_ORG varchar(100),
    SHIP_DATE varchar(64),
    SHIP_NUM varchar(64),
    REPLACEMENT_FLAG varchar(10),
    MEDICAID_RETURN_DATE varchar(64),
    SELF_PAY_REFUND_DATE varchar(64),
    SHIP_ADDRESS varchar(100),
    SHIP_CITY varchar(50),
    SHIP_STATE varchar(2),
    SHIP_ZIP varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_tw_biologics_referral_src
(
    PATIENT_CREATE_DATE varchar(10),
    MRN varchar(20),
    PH_NPI varchar(20),
    PHYSICIAN varchar(100),
    REFERRAL_TYPE varchar(50),
    PH_SPEC varchar(50),
    PH_ORG varchar(100),
    PH_ADDRESS varchar(100),
    PH_CITY varchar(100),
    PH_STATE varchar(2),
    PH_ZIP varchar(10),
    PH_PHONE varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.ext_diplomat_rx_src
(
    SPECIALTY_PHARMACY_NAME varchar(50),
    SUB_SPECIALTY_PHARMACY_NAME varchar(50),
    SPECIALTY_PHARMACY_HUB_ID varchar(20),
    PHARMACY_NPI varchar(64),
    NCPDP varchar(7),
    PHARMACY_STORE_NUMBER varchar(20),
    PHARMACY_ADDRESS_1 varchar(100),
    PHARMACY_ADDRESS_2 varchar(100),
    PHARMACY_CITY varchar(50),
    PHARMACY_STATE varchar(2),
    PHARMACY_ZIP varchar(10),
    PHARMACY_PHONE varchar(20),
    PHARMACY_FAX varchar(20),
    DSP_PATIENT_ID varchar(100),
    GENDER varchar(1),
    AGE varchar(64),
    PATIENT_STATE varchar(2),
    PRIMARY_ICD9 varchar(20),
    SECONDARY_ICD9 varchar(20),
    PRESCRIBER_NPI varchar(64),
    PRESCRIBER_DEA varchar(20),
    PRESCRIBER_HUB_ID varchar(20),
    PRESCRIBER_NAME_FIRST varchar(50),
    PRESCIBER_NAME_LAST varchar(50),
    PRESCRIBER_ADDRESS_1 varchar(100),
    PRESCRIBER_ADDRESS_2 varchar(100),
    PRESCRIBER_CITY varchar(50),
    PRESCRIBER_STATE varchar(2),
    PRESCRIBER_ZIP varchar(10),
    PRESCRIBER_PHONE varchar(20),
    PRESCRIBER_FAX varchar(20),
    DRUG_NAME varchar(50),
    DRUG_NDC_11 varchar(20),
    DRUG_STRENGTH varchar(20),
    DRUG_FORM varchar(20),
    PACKAGE_SIZE varchar(20),
    DOSE_FORM varchar(50),
    RX_NBR varchar(20),
    REFILL_NUMBER varchar(64),
    RX_REFILLS_WRITTEN varchar(64),
    DISPENSE_QTY varchar(64),
    DAYS_SUPPLY varchar(64),
    RX_WRITTEN_DATE varchar(10),
    RX_RECEIPT_DATE varchar(10),
    FILL_DATE varchar(10),
    RX_TYPE varchar(1),
    COPAY varchar(64),
    INGREDIENT_WAC_COST varchar(64),
    TOTAL_PRICE_PAID varchar(64),
    PRIMARY_PLAN_NAME varchar(100),
    PRIMARY_BIN varchar(20),
    PRIMARY_PCN varchar(20),
    SECONDARY_PLAN_NAME varchar(100),
    SECONDARY_BIN varchar(20),
    SECONDARY_PCN varchar(20),
    TERTIARY_PLAN_NAME varchar(100),
    TERTIARY_BIN varchar(20),
    TERTIARY_PCN varchar(20),
    SHIP_DATE varchar(10),
    SHIPPING_CARRIER varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.teva_ahm_interactions
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    interactionname varchar(200),
    interactioncategory varchar(50),
    interactiontype varchar(50),
    locationtype varchar(50),
    interactionstatus varchar(50),
    interactionstartdate date,
    interactionenddate date,
    interactionstarttime varchar(50),
    interactionendtime varchar(50),
    interactiontimezone varchar(80),
    interactionstartdatetime varchar(26),
    interactionenddatetime varchar(26),
    requestingregion varchar(100),
    parentinteractionid varchar(18),
    parentinteractioncode varchar(50),
    employeeid varchar(18),
    clientemployeeid varchar(50),
    employeefirstname varchar(80),
    employeelastname varchar(80),
    employeeorganizationunitid varchar(18),
    employeeorganizationunitcode varchar(50),
    employeeorganizationunitname varchar(200),
    venueid varchar(18),
    clientvenueid varchar(18),
    venuename varchar(80),
    venueaddressline1 varchar(50),
    venueaddressline2 varchar(50),
    venueaddressline3 varchar(50),
    venuecity varchar(80),
    venuestateprovince varchar(50),
    venuepostalcode varchar(20),
    venuecountry varchar(50),
    venueregion varchar(100),
    totalestimatedparticipantcount int,
    financialcloseddate date,
    product1name varchar(80),
    product1id varchar(18),
    product1clientid varchar(100),
    topic1name varchar(255),
    topic1id varchar(18),
    topic1clientid varchar(80),
    product2name varchar(80),
    product2id varchar(18),
    product2clientid varchar(100),
    topic2name varchar(255),
    topic2id varchar(18),
    topic2clientid varchar(80),
    product3name varchar(80),
    product3id varchar(18),
    product3clientid varchar(100),
    topic3name varchar(255),
    topic3id varchar(18),
    topic3clientid varchar(80),
    product4name varchar(80),
    product4id varchar(18),
    product4clientid varchar(100),
    topic4name varchar(255),
    topic4id varchar(18),
    topic4clientid varchar(80),
    product5name varchar(80),
    product5id varchar(18),
    product5clientid varchar(100),
    topic5name varchar(255),
    topic5id varchar(18),
    topic5clientid varchar(80),
    reservedfield1 varchar(10),
    reservedfield2 varchar(10),
    reservedfield3 varchar(10),
    reservedfield4 varchar(10),
    reservedfield5 varchar(10),
    reservedfield6 varchar(10),
    reservedfield7 varchar(10),
    reservedfield8 varchar(10),
    reservedfield9 varchar(10),
    reservedfield10 varchar(10)
);


CREATE TABLE teva_ingestion.teva_ahm_participant
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    participantid varchar(18),
    clientcustomerid varchar(100),
    participanttype varchar(80),
    firstname varchar(80),
    middlename varchar(80),
    lastname varchar(80),
    suffix varchar(80),
    professionaldesignation varchar(80),
    primaryspecialty varchar(80),
    organizationname varchar(80),
    npinumber varchar(10),
    addressid varchar(18),
    clientaddressid varchar(100),
    addressline1 varchar(255),
    addressline2 varchar(255),
    addressline3 varchar(255),
    addresscity varchar(80),
    addressstateprovince varchar(50),
    addresspostalcode varchar(20),
    addresspostalcodeextension varchar(10),
    addresscountry varchar(50),
    region varchar(50),
    primarystatelicensestate varchar(50),
    primarystatelicensenumber varchar(50),
    attended varchar(1),
    mealconsumed varchar(1),
    contractid varchar(18),
    clientcontractid varchar(50),
    contractname varchar(100),
    contractcategory varchar(50),
    contractsubcategory varchar(50),
    contractclassification varchar(50),
    contracttier varchar(50),
    contracteffectivedate date,
    contractexpirationdate date,
    contracttotalvalue numeric(10,2),
    reservedfield1 varchar(10),
    reservedfield2 varchar(10),
    reservedfield3 varchar(10),
    reservedfield4 varchar(10),
    reservedfield5 varchar(10),
    reservedfield6 varchar(10),
    reservedfield7 varchar(10),
    reservedfield8 varchar(10),
    reservedfield9 varchar(10),
    reservedfield10 varchar(10)
);


CREATE TABLE teva_ingestion.teva_ahm_unnamedparticipant
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    particpantcategoryid varchar(18),
    categorytype varchar(100),
    totalattendedcount int,
    totalmealconsumedcount int
);


CREATE TABLE teva_ingestion.teva_ahm_expense
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    spendid varchar(18),
    clientspendid varchar(100),
    spendamount numeric(10,2),
    spendcurrency varchar(3),
    spenddate date,
    spendtype varchar(50),
    spendpurpose varchar(50),
    traveldestinationcity varchar(80),
    traveldestinationstateprovince varchar(50),
    traveldestinationcountry varchar(50),
    spenddescription varchar(2000),
    taxincludedindicator varchar(1),
    taxamount numeric(10,2),
    taxrate numeric(10,2),
    recipientid varchar(18),
    clientrecipientid varchar(100),
    participantid varchar(18),
    recipientfirstname varchar(80),
    recipientmiddlename varchar(80),
    recipientlastname varchar(80),
    recipientsuffix varchar(80),
    recipientprofessionaldesignation varchar(80),
    recipientprimaryspecialty varchar(80),
    recipientorganizationname varchar(80),
    recipientnpinumber varchar(10),
    recipientaddressid varchar(18),
    recipientclientaddressid varchar(100),
    recipientaddressline1 varchar(255),
    recipientaddressline2 varchar(255),
    recipientaddressline3 varchar(255),
    recipientaddresscity varchar(80),
    recipientaddressstateprovince varchar(50),
    recipientaddresspostalcode varchar(20),
    recipientaddresspostalcodeextension varchar(10),
    recipientaddresscountry varchar(50),
    recipientprimarystatelicensestate varchar(50),
    recipientprimarystatelicensenumber varchar(50),
    thirdpartyrecipientindicator varchar(1),
    thirdpartyrecipientid varchar(18),
    thirdpartyclientrecipientid varchar(100),
    thirdpartyrecipientname varchar(80),
    thirdpartycoveredrecipientindicator varchar(1),
    paymentid varchar(18),
    clientpaymentid varchar(50),
    paymentdate date,
    paymentmethod varchar(50),
    paymentreferencenumber varchar(50),
    paymentstatus varchar(50),
    reservedfield1 varchar(10),
    reservedfield2 varchar(10),
    reservedfield3 varchar(10),
    reservedfield4 varchar(10),
    reservedfield5 varchar(10),
    reservedfield6 varchar(10),
    reservedfield7 varchar(10),
    reservedfield8 varchar(10),
    reservedfield9 varchar(10),
    reservedfield10 varchar(10)
);


CREATE TABLE teva_ingestion.EXT_TW_ICS_ACCOUNT_src
(
    PARENT_BP_CODE varchar(20),
    PARENT_BP_NAME varchar(100),
    ALT_ID varchar(100),
    TAX_ID varchar(50),
    ADDRESS varchar(100),
    CITY varchar(50),
    ZIP_CODE varchar(10),
    STATE varchar(2),
    PHONE varchar(50),
    FAX varchar(50),
    EMAIL varchar(100),
    INVOICE_TO_BP_TYPE_CODE varchar(20),
    BP_CODE varchar(20),
    BP_NAME varchar(100),
    BILL_TO_TAX_ID varchar(50),
    BILL_TO_ADDRESS varchar(100),
    BILL_TO_CITY varchar(50),
    BILL_TO_ZIP_CODE varchar(10),
    BILL_TO_STATE varchar(2),
    BILL_TO_PHONE varchar(50),
    BILL_TO_FAX varchar(50),
    BILL_TO_EMAIL varchar(100),
    DEA_LICENSE_NUM varchar(20),
    HIN_NUM varchar(20),
    CUSTOMER_340B varchar(20),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_BING_ADS_src
(
    gregorian_date varchar(64),
    account_name varchar(50),
    campaign_name varchar(50),
    ad_group varchar(100),
    keyword varchar(100),
    bid_match_type varchar(50),
    ad_distribution varchar(50),
    current_maximum_cpc varchar(64),
    quality_score varchar(64),
    impressions varchar(64),
    clicks varchar(64),
    ctr_percent varchar(64),
    average_cpc varchar(64),
    spend varchar(64),
    avg_position varchar(64),
    conversions varchar(64),
    conversion_rate_percent varchar(64),
    cpa varchar(50),
    account_id varchar(64),
    account_number varchar(100),
    account_status varchar(50),
    ad_group_id varchar(64),
    ad_group_status varchar(50),
    ad_id varchar(64),
    landing_page_relevance varchar(64),
    ad_type varchar(50),
    final_app_url varchar(1000),
    bid_strategy_type varchar(100),
    business_category varchar(50),
    business_category_id varchar(64),
    business_listing varchar(50),
    business_listing_id varchar(64),
    campaign_id varchar(64),
    campaign_status varchar(50),
    currency_code varchar(50),
    custom_parameters varchar(1000),
    customer varchar(64),
    customer_name varchar(100),
    delivered_match_type varchar(50),
    destination_url varchar(1000),
    device_os varchar(50),
    device_type varchar(50),
    keyword_relevance varchar(64),
    final_url varchar(1000),
    keyword_id varchar(64),
    keyword_match_type_id varchar(64),
    keyword_status varchar(50),
    landing_page_user_experience varchar(64),
    language varchar(50),
    final_mobile_url varchar(1000),
    network varchar(100),
    pricing_method varchar(100),
    quality_impact varchar(64),
    top_vs_other varchar(100),
    tracking_template varchar(100),
    historic_quality_score varchar(64),
    historic_keyword_relevance varchar(64),
    historic_landing_page_relevance varchar(64),
    historic_landing_page_user_experience varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DA_BROADCAST_DATA_src
(
    date varchar(64),
    week_of varchar(64),
    day varchar(250),
    network varchar(250),
    "time" varchar(250),
    program varchar(250),
    length varchar(250),
    isci_code varchar(250),
    net_dollars varchar(64),
    wm1834_imps varchar(250),
    wm1834_grps varchar(250),
    national_tv_spend_acutalized varchar(64),
    national_tv_spend_planned varchar(64),
    radio_spend_total varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DA_DIGITAL_SPEND_DATA_src
(
    advertiser_code varchar(50),
    ad_server_client varchar(64),
    ad_server_client_name varchar(50),
    ad_server_publisher_code varchar(64),
    ad_server_publisher_name varchar(50),
    advertiser_business_key varchar(50),
    advertiser_name varchar(50),
    agency_location varchar(50),
    buy_category varchar(50),
    buy_type varchar(50),
    campaign_name varchar(50),
    cost_method varchar(50),
    creative_type varchar(50),
    dimension varchar(50),
    end_date varchar(64),
    location varchar(50),
    media_code varchar(64),
    media_name varchar(50),
    month_of_service varchar(50),
    package_type varchar(50),
    placement_ad_server varchar(50),
    placement_ad_server_instance varchar(50),
    placement_end_date varchar(64),
    placement_name varchar(250),
    placement_number varchar(50),
    placement_positioning varchar(50),
    served_by varchar(50),
    placement_site_name varchar(50),
    placement_start_date varchar(64),
    placement_type varchar(50),
    placement_user varchar(50),
    product_business_key varchar(50),
    product_code varchar(50),
    product_name varchar(50),
    public_id varchar(50),
    rich_media_accepted varchar(64),
    rich_media_included_in_rate varchar(64),
    supplier_business_key varchar(50),
    start_date varchar(64),
    supplier_code varchar(50),
    supplier_name varchar(50),
    unit_type varchar(50),
    ad_server_campaign_id varchar(64),
    ad_server_placement_id varchar(64),
    package_group_id varchar(64),
    package_group_name varchar(250),
    estimate_business_key varchar(50),
    estimate_code varchar(64),
    estimate_name varchar(50),
    estimate_end_date varchar(64),
    estimate_start_date varchar(64),
    third_party_actions varchar(64),
    third_party_clicks varchar(64),
    third_party_delivered_cost varchar(64),
    third_party_impressions varchar(64),
    third_party_delivered_units varchar(64),
    planned_actions varchar(64),
    planned_amount varchar(64),
    planned_clicks varchar(64),
    planned_impressions varchar(64),
    rate varchar(64),
    measurable_impression varchar(64),
    viewable_impressions varchar(64),
    eligible_impressions varchar(64),
    first_party_impressions varchar(64),
    planned_units varchar(64),
    planned_units_2 varchar(64),
    ordered varchar(64),
    approved_amount varchar(64),
    inventory_type varchar(50),
    order_id varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DA_PRINT_SPEND_DATA_src
(
    advertiser_name varchar(50),
    brand_name varchar(50),
    media_billing_estimate varchar(64),
    media_type_code varchar(64),
    publisher_identifier varchar(50),
    publisher_name varchar(50),
    order_start_date varchar(64),
    order_close_date varchar(64),
    monthly_total_cost varchar(64),
    number_of_insertions varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DOUBLECLICK_DCM_src
(
    advertiser_id varchar(64),
    advertiser_name varchar(50),
    brand varchar(200),
    target_audience varchar(100),
    campaign_id varchar(64),
    campaign_name varchar(200),
    session_date varchar(64),
    partner_site_id varchar(64),
    partner_site_name varchar(100),
    package_id varchar(64),
    package_name varchar(100),
    placement_id varchar(64),
    placement_name varchar(200),
    placement_pixel_size varchar(50),
    placement_cost_structure varchar(100),
    ad_id varchar(64),
    ad_name varchar(200),
    ad_type varchar(50),
    creative_id varchar(64),
    creative_name varchar(200),
    creative_type varchar(50),
    device_type varchar(50),
    device_browser varchar(50),
    click_thru_url varchar(1000),
    activity_group_id varchar(64),
    activity_group_name varchar(200),
    activity_id varchar(64),
    activity_name varchar(200),
    impressions varchar(64),
    clicks varchar(64),
    media_cost varchar(64),
    total_conversions varchar(64),
    click_thru_conversions varchar(64),
    view_thru_conversions varchar(64),
    conversion_id varchar(64),
    keyword_id varchar(64),
    user_id varchar(64),
    country char(2),
    state_region varchar(250),
    city_id varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DOUBLECLICK_DS_ADS_src
(
    session_date varchar(64),
    brand varchar(200),
    target_audience varchar(100),
    search_engine varchar(50),
    campaign_id varchar(64),
    campaign_name varchar(200),
    placement_id varchar(64),
    placement_name varchar(200),
    keyword_id varchar(64),
    keyword_name varchar(200),
    keyword_match_type varchar(50),
    url_landing_page varchar(1000),
    device_type varchar(50),
    impressions varchar(64),
    clicks varchar(64),
    media_cost varchar(64),
    keyword_position varchar(64),
    average_cpc varchar(64),
    average_cpm varchar(64),
    adwords_conversions varchar(64),
    keyword_engine_id varchar(64),
    keyword_engine_status varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_DOUBLECLICK_DS_CONVERSIONS_src
(
    brand varchar(200),
    target_audience varchar(100),
    search_engine varchar(50),
    campaign_id varchar(64),
    campaign_name varchar(200),
    placement_id varchar(64),
    placement_name varchar(200),
    keyword_id varchar(64),
    keyword_name varchar(200),
    keyword_match_type varchar(50),
    device_type varchar(50),
    activity_group_id varchar(64),
    activity_group_name varchar(200),
    activity_id varchar(64),
    activity_name varchar(200),
    total_conversions varchar(64),
    conversion_date varchar(64),
    visit_id varchar(64),
    conversion_id varchar(64),
    gclid varchar(250),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_GOOGLE_ANALYTICS_360_src
(
    dataset_id varchar(64),
    full_visitor_id varchar(64),
    visitor_id varchar(64),
    user_id varchar(64),
    visit_number varchar(64),
    visit_id varchar(64),
    visit_start_time varchar(64),
    date varchar(64),
    totals_visits varchar(64),
    totals_hits varchar(64),
    totals_page_views varchar(64),
    totals_time_on_site varchar(64),
    totals_bounces varchar(64),
    totals_transactions varchar(64),
    totals_transaction_revenue varchar(64),
    totals_new_visits varchar(64),
    totals_screen_views varchar(64),
    totals_unique_screen_views varchar(64),
    totals_time_on_screen varchar(64),
    totals_total_transaction_revenue varchar(64),
    traffic_source_referral_path varchar(250),
    traffic_source_campaign varchar(250),
    traffic_source_source varchar(50),
    traffic_source_medium varchar(50),
    traffic_source_keyword varchar(50),
    traffic_source_ad_content varchar(250),
    channel_grouping varchar(50),
    social_engagement_type varchar(50),
    traffic_source_adwords_click_info_campaign_id varchar(64),
    traffic_source_adwords_click_info_ad_group_id varchar(64),
    traffic_source_adwords_click_info_creative_id varchar(64),
    traffic_source_adwords_click_info_criteria_id varchar(64),
    traffic_source_adwords_click_info_page varchar(64),
    traffic_source_adwords_click_info_slot varchar(250),
    traffic_source_adwords_click_info_criteria_parameters varchar(250),
    traffic_source_adwords_click_info_gcl_id varchar(250),
    traffic_source_adwords_click_info_customer_id varchar(64),
    traffic_source_adwords_click_info_ad_network_type varchar(250),
    traffic_source_adwords_click_info_targeting_criteria_boom_user_list_id varchar(250),
    traffic_source_adwords_click_info_is_video_ad varchar(255),
    traffic_source_is_true_direct varchar(255),
    traffic_source_campaign_code varchar(250),
    device_browser varchar(50),
    device_browser_version varchar(50),
    device_browser_size varchar(250),
    device_operating_system varchar(50),
    device_operating_system_version varchar(50),
    device_is_mobile varchar(255),
    device_mobile_device_branding varchar(250),
    device_mobile_device_model varchar(250),
    device_mobile_input_selector varchar(250),
    device_mobile_device_info varchar(250),
    device_mobile_device_marketing_name varchar(250),
    device_flash_version varchar(50),
    device_java_enabled varchar(255),
    device_language varchar(50),
    device_screen_colors varchar(50),
    device_screen_resolution varchar(50),
    device_device_category varchar(50),
    geonetwork_continent varchar(50),
    geonetwork_subcontinent varchar(50),
    geonetwork_country varchar(50),
    geonetwork_region varchar(50),
    geonetwork_metro varchar(50),
    geonetwork_city varchar(50),
    geonetwork_city_id varchar(50),
    geonetwork_network_domain varchar(50),
    geonetwork_latitude varchar(50),
    geonetwork_longitude varchar(50),
    geonetwork_network_location varchar(50),
    custom_dimensions_index varchar(64),
    custom_dimensions_value varchar(250),
    hits_hit_number varchar(64),
    hits_time varchar(64),
    hits_hour varchar(64),
    hits_minute varchar(64),
    hits_is_secure varchar(255),
    hits_is_interaction varchar(255),
    hits_is_entrance varchar(255),
    hits_is_exit varchar(255),
    hits_referer varchar(250),
    hits_page_page_path varchar(500),
    hits_page_host_name varchar(50),
    hits_page_page_title varchar(250),
    hits_page_search_keyword varchar(250),
    hits_page_search_category varchar(250),
    hits_page_page_path_level_one varchar(250),
    hits_page_page_path_level_two varchar(250),
    hits_page_page_path_level_three varchar(250),
    hits_page_page_path_level_four varchar(250),
    hits_transaction_transaction_id varchar(250),
    hits_transaction_transaction_revenue varchar(64),
    hits_transaction_transaction_tax varchar(64),
    hits_transaction_transaction_shipping varchar(64),
    hits_transaction_affiliation varchar(250),
    hits_transaction_currency_code varchar(10),
    hits_transaction_local_transaction_revenue varchar(64),
    hits_transaction_local_transaction_tax varchar(64),
    hits_transaction_local_transaction_shipping varchar(64),
    hits_transaction_transaction_coupon varchar(250),
    hits_item_transaction_id varchar(250),
    hits_item_product_name varchar(250),
    hits_item_product_category varchar(250),
    hits_item_product_sku varchar(250),
    hits_item_item_quantity varchar(64),
    hits_item_item_revenue varchar(64),
    hits_item_currency_code varchar(10),
    hits_item_local_item_revenue varchar(64),
    hits_content_info_content_description varchar(250),
    hits_app_info_name varchar(250),
    hits_app_info_version varchar(250),
    hits_app_info_id varchar(250),
    hits_app_info_installer_id varchar(250),
    hits_app_info_app_installer_id varchar(250),
    hits_app_info_app_name varchar(250),
    hits_app_info_app_version varchar(250),
    hits_app_info_app_id varchar(250),
    hits_app_info_screen_name varchar(500),
    hits_app_info_landing_screen_name varchar(500),
    hits_app_info_exit_screen_name varchar(500),
    hits_app_info_screen_depth varchar(64),
    hits_exception_info_description varchar(250),
    hits_exception_info_is_fatal varchar(255),
    hits_exception_info_exceptions varchar(64),
    hits_exception_info_fatal_exceptions varchar(64),
    hits_event_info_event_category varchar(250),
    hits_event_info_event_action varchar(250),
    hits_event_info_event_label varchar(500),
    hits_event_info_event_value varchar(64),
    hits_product_product_sku varchar(250),
    hits_product_v_two_product_name varchar(250),
    hits_product_v_two_product_category varchar(250),
    hits_product_product_variant varchar(250),
    hits_product_product_brand varchar(250),
    hits_product_product_revenue varchar(64),
    hits_product_local_product_revenue varchar(64),
    hits_product_product_price varchar(64),
    hits_product_local_product_price varchar(64),
    hits_product_product_quantity varchar(64),
    hits_product_product_refund_amount varchar(64),
    hits_product_local_product_refund_amount varchar(64),
    hits_product_is_impression varchar(255),
    hits_product_is_click varchar(255),
    hits_product_product_list_name varchar(250),
    hits_product_product_list_position varchar(64),
    hits_promotion_promo_id varchar(250),
    hits_promotion_promo_name varchar(250),
    hits_promotion_promo_creative varchar(250),
    hits_promotion_promo_position varchar(250),
    hits_promotion_action_info_promo_is_view varchar(255),
    hits_promotion_action_info_promo_is_click varchar(255),
    hits_refund_refund_amount varchar(64),
    hits_refund_local_refund_amount varchar(64),
    hits_ecommerce_action_action_type varchar(64),
    hits_ecommerce_action_step varchar(64),
    hits_ecommerce_action_option varchar(250),
    hits_experiment_experiment_id varchar(250),
    hits_experiment_experiment_variant varchar(250),
    hits_publisher_dfp_clicks varchar(64),
    hits_publisher_dfp_impressions varchar(64),
    hits_publisher_dfp_matched_queries varchar(64),
    hits_publisher_dfp_measurable_impressions varchar(64),
    hits_publisher_dfp_queries varchar(64),
    hits_publisher_dfp_revenue_cpm varchar(64),
    hits_publisher_dfp_revenue_cpc varchar(64),
    hits_publisher_dfp_viewable_impressions varchar(64),
    hits_publisher_dfp_pages_viewed varchar(64),
    hits_publisher_ad_sense_backfill_dfp_clicks varchar(64),
    hits_publisher_ad_sense_backfill_dfp_impressions varchar(64),
    hits_publisher_ad_sense_backfill_dfp_matched_queries varchar(64),
    hits_publisher_ad_sense_backfill_dfp_measurable_impressions varchar(64),
    hits_publisher_ad_sense_backfill_dfp_queries varchar(64),
    hits_publisher_ad_sense_backfill_dfp_revenue_cpm varchar(64),
    hits_publisher_ad_sense_backfill_dfp_revenue_cpc varchar(64),
    hits_publisher_ad_sense_backfill_dfp_viewable_impressions varchar(64),
    hits_publisher_ad_sense_backfill_dfp_pages_viewed varchar(64),
    hits_publisher_adx_backfill_dfp_clicks varchar(64),
    hits_publisher_adx_backfill_dfp_impressions varchar(64),
    hits_publisher_adx_backfill_dfp_matched_queries varchar(64),
    hits_publisher_adx_backfill_dfp_measurable_impressions varchar(64),
    hits_publisher_adx_backfill_dfp_queries varchar(64),
    hits_publisher_adx_backfill_dfp_revenue_cpm varchar(64),
    hits_publisher_adx_backfill_dfp_revenue_cpc varchar(64),
    hits_publisher_adx_backfill_dfp_viewable_impressions varchar(64),
    hits_publisher_adx_backfill_dfp_pages_viewed varchar(64),
    hits_publisher_adx_clicks varchar(64),
    hits_publisher_adx_impressions varchar(64),
    hits_publisher_adx_matched_queries varchar(64),
    hits_publisher_adx_measurable_impressions varchar(64),
    hits_publisher_adx_queries varchar(64),
    hits_publisher_adx_revenue varchar(64),
    hits_publisher_adx_viewable_impressions varchar(64),
    hits_publisher_adx_pages_viewed varchar(64),
    hits_publisher_ads_viewed varchar(64),
    hits_publisher_ads_units_viewed varchar(64),
    hits_publisher_ads_units_matched varchar(64),
    hits_publisher_viewable_ads_viewed varchar(64),
    hits_publisher_measurable_ads_viewed varchar(64),
    hits_publisher_ads_pages_viewed varchar(64),
    hits_publisher_ads_clicked varchar(64),
    hits_publisher_ads_revenue varchar(64),
    hits_publisher_dfp_ad_group varchar(250),
    hits_publisher_dfp_ad_units varchar(250),
    hits_publisher_dfp_network_id varchar(250),
    hits_custom_variables_index varchar(250),
    hits_custom_variables_custom_var_name varchar(250),
    hits_custom_variables_custom_var_value varchar(250),
    hits_custom_dimensions_index varchar(64),
    hits_custom_dimensions_value varchar(250),
    hits_custom_metrics_index varchar(64),
    hits_custom_metrics_value varchar(250),
    hits_type varchar(50),
    hits_social_social_interaction_network varchar(250),
    hits_social_social_interaction_action varchar(250),
    hits_social_social_interactions varchar(64),
    hits_social_social_interaction_target varchar(250),
    hits_social_social_network varchar(250),
    hits_social_unique_social_interactions varchar(64),
    hits_social_has_social_source_referral varchar(50),
    hits_social_social_interaction_network_action varchar(250),
    hits_latency_tracking_pageload_sample varchar(64),
    hits_latency_tracking_pageload_time varchar(64),
    hits_latency_tracking_pagedown_load_time varchar(64),
    hits_latency_tracking_redirection_time varchar(64),
    hits_latency_tracking_speed_metrics_sample varchar(64),
    hits_latency_tracking_domain_lookup_time varchar(64),
    hits_latency_tracking_server_connection_time varchar(64),
    hits_latency_tracking_server_response_time varchar(64),
    hits_latency_tracking_dom_latency_metric_ssample varchar(64),
    hits_latency_tracking_dom_interactive_time varchar(64),
    hits_latency_tracking_dom_content_loaded_time varchar(64),
    hits_latency_tracking_user_timing_value varchar(64),
    hits_latency_tracking_user_timing_sample varchar(64),
    hits_latency_tracking_user_timing_variable varchar(250),
    hits_latency_tracking_user_timing_category varchar(250),
    hits_latency_tracking_user_timing_label varchar(250),
    hits_source_propertyinfo_source_property_display_name varchar(250),
    hits_source_propertyinfo_source_property_tracking_id varchar(250),
    hits_content_group_content_group_one varchar(250),
    hits_content_group_content_group_two varchar(250),
    hits_content_group_content_group_three varchar(250),
    hits_content_group_content_group_four varchar(250),
    hits_content_group_content_group_five varchar(250),
    hits_content_group_previous_content_group_one varchar(250),
    hits_content_group_previous_content_group_two varchar(250),
    hits_content_group_previous_content_group_three varchar(250),
    hits_content_group_previous_content_group_four varchar(250),
    hits_content_group_previous_content_group_five varchar(250),
    hits_content_group_content_group_unique_views_one varchar(64),
    hits_content_group_content_group_unique_views_two varchar(64),
    hits_content_group_content_group_unique_views_three varchar(64),
    hits_content_group_content_group_unique_views_four varchar(64),
    hits_content_group_content_group_unique_views_five varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_INNOVID_DELIVERY_src
(
    date varchar(64),
    advertiser_name varchar(50),
    advertiser_id varchar(64),
    campaign_name varchar(100),
    campaign_id varchar(64),
    publisher varchar(50),
    publisher_id varchar(64),
    video_id varchar(64),
    video_name varchar(100),
    duration varchar(64),
    placement_name varchar(200),
    impressions varchar(64),
    click_thrus varchar(64),
    awareness varchar(64),
    engagement_events varchar(64),
    twenty_five_percent_completion varchar(64),
    fifty_percent_completion varchar(64),
    seventy_five_percent_completion varchar(64),
    hundred_perent_completion varchar(64),
    companion_impressions varchar(64),
    companion_clicks varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_INNOVID_VIEWABILITY_src
(
    date varchar(64),
    advertiser_name varchar(50),
    advertiser_id varchar(64),
    campaign_name varchar(100),
    campaign_id varchar(64),
    publisher varchar(50),
    publisher_id varchar(64),
    format_type varchar(50),
    video_id varchar(64),
    video_name varchar(100),
    placement_name varchar(200),
    platform_name varchar(50),
    impressions varchar(64),
    click_thrus varchar(64),
    awareness varchar(64),
    engagement_events varchar(64),
    twenty_five_percent_completion varchar(64),
    fifty_percent_completion varchar(64),
    seventy_five_percent_completion varchar(64),
    hundred_perent_completion varchar(64),
    companion_impressions varchar(64),
    companion_clicks varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_INTEGRAL_AD_SCIENCE_src
(
    an_id varchar(50),
    ext_advertiser_id varchar(50),
    ext_campaign_id varchar(50),
    ext_placement_id varchar(50),
    ext_publisher_id varchar(50),
    in_view_one_second varchar(64),
    in_viewability_sample varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_YAHOO_GEMINI_src
(
    advertiser_id varchar(64),
    keyword_id varchar(64),
    day varchar(64),
    advertiser_name varchar(200),
    advertiser_timezone varchar(50),
    advertiser_currency varchar(50),
    campaign_id varchar(64),
    campaign_name varchar(200),
    campaign_start_date varchar(64),
    campaign_end_date varchar(64),
    campaign_status varchar(50),
    campaign_objective varchar(200),
    budget varchar(64),
    budget_type varchar(50),
    ad_group_id varchar(64),
    ad_id varchar(64),
    keyword_value varchar(200),
    keyword_status varchar(50),
    keyword_match_type varchar(50),
    impressions varchar(64),
    clicks varchar(64),
    ctr varchar(64),
    conversions varchar(64),
    spend varchar(64),
    average_cpc varchar(64),
    average_cost_per_install varchar(64),
    average_cpm varchar(64),
    pricing_type varchar(50),
    source varchar(64),
    average_position varchar(64),
    max_bid varchar(64),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_FACT_V2_src
(
    claim_id varchar(64),
    patient_id varchar(64),
    sequence_number varchar(64),
    product_id varchar(11),
    fill_date varchar(64),
    claim_type varchar(2),
    reject_code varchar(3),
    days_supply varchar(64),
    quantity varchar(12),
    refill_code varchar(64),
    plantrak_id varchar(10),
    opc_ask varchar(10),
    sec_plantrak_id varchar(10),
    buy_down varchar(11),
    opc_paid varchar(10),
    prescriber_id varchar(15),
    sob varchar(3),
    sub_product_id varchar(11),
    sub_opc varchar(10),
    initial_claim_id varchar(64),
    prev_product_id varchar(11),
    daw_code varchar(2),
    wrt_date varchar(64),
    claim_status varchar(1),
    copay_card_flg varchar(4),
    zip_code varchar(5),
    ecoup_flag varchar(64),
    ecoup_offset_amt varchar(64),
    standard_copay varchar(64),
    standard_copay_yn varchar(1),
    market_id varchar(64),
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    flexible_fld_3_char varchar(50),
    flexible_fld_4_char varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_V2_src
(
    zip_code varchar(5),
    cbsa_code varchar(5),
    cbsa_description varchar(100),
    state_code varchar(2),
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_PLAN_V2_src
(
    plantrak_id varchar(10),
    payer_name varchar(64),
    plan_name varchar(64),
    pbm_name varchar(60),
    pbm_id varchar(6),
    method_of_payment varchar(50),
    model_type varchar(64),
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_PRODUCT_V2_src
(
    product_id varchar(11),
    product_group varchar(80),
    product_group_id varchar(64),
    product_name varchar(100),
    generic_name varchar(100),
    brand_generic_flag varchar(1),
    product_form varchar(100),
    product_strength varchar(100),
    package_size varchar(64),
    manufacturer varchar(100),
    cmf10 varchar(10),
    usc_code varchar(5),
    fia_market_id varchar(50),
    fia_market_desc varchar(50),
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    flexible_fld_3_char varchar(50),
    flexible_fld_4_char varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_REJECT_V2_src
(
    reject_code varchar(3),
    reject_reason varchar(200),
    reject_group varchar(50),
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_CONNECTIVERX_COUPON_V2_src
(
    redemption_type varchar(7),
    transaction_type varchar(1),
    claim_authorization_number varchar(20),
    original_claim_authorization_number varchar(20),
    date_of_fill varchar(64),
    date_written varchar(64),
    day_supply varchar(64),
    ndc varchar(19),
    daw varchar(64),
    drug_title varchar(55),
    drug_strength_and_form varchar(55),
    new_refill_code varchar(64),
    quantity varchar(64),
    number_of_refills varchar(64),
    other_coverage_code varchar(64),
    group_num varchar(18),
    member_id varchar(20),
    patient_gender varchar(1),
    age varchar(64),
    date_processed varchar(8),
    nabp varchar(15),
    pharmacy_chain varchar(60),
    pharmacy_npi varchar(11),
    rx_num varchar(80),
    pharmacy_name varchar(60),
    pharmacy_address_1 varchar(100),
    pharmacy_address_2 varchar(100),
    pharmacy_city varchar(50),
    pharmacy_state varchar(2),
    pharmacy_zip varchar(10),
    pharmacy_phone varchar(10),
    hcp_npi varchar(15),
    hcp_first_name varchar(35),
    hcp_middle_name varchar(35),
    hcp_last_name varchar(35),
    hcp_suffix varchar(35),
    hcp_designation varchar(20),
    hcp_specialty_1 varchar(50),
    hcp_specialty_2 varchar(50),
    hcp_address_1 varchar(40),
    hcp_address_2 varchar(40),
    hcp_city varchar(35),
    hcp_state varchar(2),
    hcp_zip varchar(10),
    submission_method varchar(1),
    previous_payer_id varchar(15),
    patient_expense varchar(64),
    patient_benefit varchar(64),
    patient_copay varchar(64),
    patient_oop varchar(64),
    pharmacy_fee varchar(64),
    amount_due varchar(64),
    create_date varchar(8),
    occ_payment_type varchar(15),
    calc_awp varchar(10),
    admin_hcp_npi varchar(15),
    admin_hcp_name varchar(100),
    admin_hcp_address varchar(100),
    admin_hcp_address2 varchar(100),
    admin_hcp_city varchar(50),
    admin_hcp_state varchar(2),
    admin_hcp_zip varchar(10),
    claim_type varchar(50),
    administration_flag varchar(50),
    soc_name varchar(60),
    soc_phone varchar(10),
    soc_fax varchar(10),
    soc_address varchar(100),
    soc_city varchar(50),
    soc_state varchar(2),
    soc_zip varchar(10),
    soc_id varchar(50),
    soc_npi varchar(15),
    payer_name varchar(60),
    cpt_code varchar(10),
    patient_type varchar(100),
    primary_bin varchar(100),
    primary_bin_description varchar(100),
    reject_code varchar(100),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src
(
    subcategory_code varchar(2),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_REFERENCE_INCLUDE_867_COT_src
(
    class_of_trade varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src
(
    redemption_type varchar(20),
    program_number varchar(15),
    program_description varchar(100),
    create_date varchar(10),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_IMS_FIA_MPD_src
(
    patient_id varchar(64),
    mpd_year varchar(64),
    mpd_eligibility_class varchar(11),
    deductible_start_date varchar(64),
    copay_start_date varchar(64),
    gap_start_date varchar(64),
    catastrophic_start_date varchar(64),
    mpd_panel_patient varchar(64),
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_REMOTE_MEETING_VOD__C_src
(
    Id varchar(18),
    OwnerId varchar(18),
    IsDeleted varchar(5),
    Name varchar(80),
    RecordTypeId varchar(18),
    CreatedDate varchar(24),
    CreatedById varchar(18),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(18),
    SystemModstamp varchar(24),
    MayEdit varchar(5),
    IsLocked varchar(5),
    Meeting_Id_vod__c varchar(20),
    Meeting_Name_vod__c varchar(300),
    Mobile_ID_vod__c varchar(100),
    Scheduled_DateTime_vod__c varchar(24),
    Scheduled_vod__c varchar(5),
    Attendance_Report_Process_Status_vod__c varchar(255),
    Latest_Meeting_Start_Datetime_vod__c varchar(24),
    Meeting_Password_vod__c varchar(20),
    Meeting_Outcome_Status_vod__c varchar(255),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_VV_EMAIL_ACTIVITY_VOD__C_src
(
    Id varchar(36),
    CreatedDate varchar(24),
    CreatedById varchar(36),
    LastModifiedDate varchar(24),
    LastModifiedById varchar(36),
    RecordTypeId varchar(36),
    IsDeleted varchar(5),
    SystemModstamp varchar(24),
    Name varchar(160),
    Event_type_vod__c varchar(510),
    Activity_DateTime_vod__c varchar(24),
    Event_Msg_vod__c varchar(65000),
    Approved_Document_vod__c varchar(36),
    City_vod__c varchar(40),
    Click_URL_vod__c varchar(510),
    Client_Name_vod__c varchar(40),
    Client_OS_vod__c varchar(40),
    Client_Type_vod__c varchar(40),
    Country_vod__c varchar(40),
    Device_Type_vod__c varchar(40),
    Vault_Doc_ID_vod__c varchar(200),
    Vault_Doc_Name_vod__c varchar(200),
    Vault_Document_Number_vod__c varchar(200),
    Vault_Document_Title_vod__c varchar(510),
    IP_Address_vod__c varchar(64),
    Link_Name_vod__c varchar(510),
    Vault_Document_Major_Version_vod__c varchar(20),
    Vault_Document_Minor_Version_vod__c varchar(20),
    Preference_Modification_vod__c varchar(65000),
    Region_vod__c varchar(40),
    Sent_Email_vod__c varchar(36),
    User_Agent_vod__c varchar(510),
    Vault_Instance_ID_vod__c varchar(200),
    batch_id int,
    row_id int,
    update_ts timestamp
);


CREATE TABLE teva_ingestion.EXT_ZS_TEVA_PAYER_WRKBK_src
(
    plan_code varchar(15),
    Final_Key_Controlling_Account varchar(100),
    Key_Parent_Account varchar(100),
    PBM varchar(100),
    Payer varchar(100),
    Plan varchar(100),
    State_Code varchar(50),
    AJOVY_TRx varchar(50),
    Aimovig_TRx varchar(50),
    Emgality_TRx varchar(50),
    aCGRP_TRx varchar(50),
    AJOVY_Share_Percent varchar(100),
    Aimovig_Share_Percent varchar(100),
    Emgality_Share_Percent varchar(100),
    Latest_Mth_AJOVY_TRx varchar(50),
    Latest_Mth_AJOVY_Share_Percent varchar(100),
    Lives_Covered_Total varchar(10),
    Ajovy_Formulary_Status varchar(100),
    Aimovig_Formulary_Status varchar(100),
    Emgality_Formulary_Status varchar(100),
    Plan_Payment_Type varchar(100),
    Priority_Account_flag varchar(100),
    Justification varchar(100),
    Plan_Mapping varchar(50),
    batch_id int,
    row_id int,
    update_ts timestamp,
    key_controlling_parent varchar(100),
    pbm_payer_filter varchar(100),
    gpo varchar(100),
    refresh_month varchar(100)
);


CREATE TABLE teva_ingestion.EXT_VV_REP_ROSTER_VOD__C_src
(
    id varchar(36),
    createddate varchar(24),
    createdbyid varchar(36),
    lastmodifieddate varchar(24),
    lastmodifiedbyid varchar(36),
    ownerid varchar(36),
    isdeleted varchar(5),
    name varchar(160),
    systemmodstamp varchar(24),
    mayedit varchar(5),
    islocked varchar(5),
    territory_vod__c varchar(50),
    address_line_1_vod__c varchar(100),
    address_line_2_vod__c varchar(100),
    address_line_3_tva__c varchar(100),
    city_vod__c varchar(40),
    state_vod__c varchar(255),
    zip_vod__c varchar(20),
    computer_asset_tag__c varchar(80),
    fax_number__c varchar(40),
    home_phone__c varchar(40),
    mobile_number__c varchar(40),
    organization_id__c varchar(80),
    rep_type_tva__c varchar(255),
    sampleflag_tva__c varchar(80),
    ship_addr1_tva__c varchar(100),
    ship_addr2_tva__c varchar(100),
    ship_addr3_tva__c varchar(100),
    ship_city_tva__c varchar(40),
    ship_state_tva__c varchar(255),
    ship_zip_tva__c varchar(10),
    store_addr1_tva__c varchar(100),
    store_addr2_tva__c varchar(100),
    store_addr3_tva__c varchar(100),
    store_city_tva__c varchar(40),
    store_state_tva__c varchar(255),
    store_zip_tva__c varchar(10),
    username_external_id_vod__c varchar(80),
    vin__c varchar(20),
    lastvieweddate varchar(24),
    lastreferenceddate varchar(24),
    batch_id int,
    row_id int,
    update_ts timestamp,
    useremail varchar(80),
    local_employee_id__c varchar(255)
);


CREATE TABLE teva_ingestion.teva_ingestion_control_temp_metadata_fix
(
    concat varchar(1030),
    batch_id int,
    file_class varchar(255),
    source_file_id int,
    source_file varchar(1024),
    source_system varchar(255),
    source_file_run_date date,
    source_file_run_ts timestamp,
    message varchar(255),
    data_from_ts timestamp,
    data_to_ts timestamp,
    job_start_ts timestamp,
    job_end_ts timestamp,
    update_ts timestamp,
    unique_file_id int,
    original_source_system varchar(1024),
    original_source_system_path varchar(1024),
    original_source_system_modified_date timestamp,
    rows_loaded int
);


CREATE PROJECTION teva_ingestion.people_phones_src_b0 /*+basename(people_phones_src),createtype(L)*/ 
(
 PRSN_SYS_ID,
 PHN_ID,
 PTD_CD,
 PRIORITY,
 EXT,
 VMAIL,
 ADDR_ID,
 PRVDR_CD,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT people_phones_src.PRSN_SYS_ID,
        people_phones_src.PHN_ID,
        people_phones_src.PTD_CD,
        people_phones_src.PRIORITY,
        people_phones_src.EXT,
        people_phones_src.VMAIL,
        people_phones_src.ADDR_ID,
        people_phones_src.PRVDR_CD,
        people_phones_src.batch_id,
        people_phones_src.row_id,
        people_phones_src.update_ts
 FROM teva_ingestion.people_phones_src
 ORDER BY people_phones_src.PRSN_SYS_ID,
          people_phones_src.PHN_ID,
          people_phones_src.PTD_CD,
          people_phones_src.PRIORITY,
          people_phones_src.EXT,
          people_phones_src.VMAIL,
          people_phones_src.ADDR_ID,
          people_phones_src.PRVDR_CD,
          people_phones_src.batch_id,
          people_phones_src.row_id,
          people_phones_src.update_ts
SEGMENTED BY hash(people_phones_src.PTD_CD, people_phones_src.PRVDR_CD, people_phones_src.batch_id, people_phones_src.row_id, people_phones_src.update_ts, people_phones_src.PRSN_SYS_ID, people_phones_src.PHN_ID, people_phones_src.PRIORITY, people_phones_src.EXT, people_phones_src.VMAIL, people_phones_src.ADDR_ID) ALL NODES;

CREATE PROJECTION teva_ingestion.XX_SALES_LOA_MV_src_b0 /*+basename(XX_SALES_LOA_MV_src),createtype(L)*/ 
(
 FILE_NBR,
 NAME,
 JOB_TITLE,
 COST_CENTER_NAME,
 DEPARTMENT,
 EE_STATUS,
 LEAVE_DT,
 RETURN_DT,
 LEAVE_DAYS,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT XX_SALES_LOA_MV_src.FILE_NBR,
        XX_SALES_LOA_MV_src.NAME,
        XX_SALES_LOA_MV_src.JOB_TITLE,
        XX_SALES_LOA_MV_src.COST_CENTER_NAME,
        XX_SALES_LOA_MV_src.DEPARTMENT,
        XX_SALES_LOA_MV_src.EE_STATUS,
        XX_SALES_LOA_MV_src.LEAVE_DT,
        XX_SALES_LOA_MV_src.RETURN_DT,
        XX_SALES_LOA_MV_src.LEAVE_DAYS,
        XX_SALES_LOA_MV_src.batch_id,
        XX_SALES_LOA_MV_src.row_id,
        XX_SALES_LOA_MV_src.update_ts
 FROM teva_ingestion.XX_SALES_LOA_MV_src
 ORDER BY XX_SALES_LOA_MV_src.FILE_NBR,
          XX_SALES_LOA_MV_src.NAME,
          XX_SALES_LOA_MV_src.JOB_TITLE,
          XX_SALES_LOA_MV_src.COST_CENTER_NAME,
          XX_SALES_LOA_MV_src.DEPARTMENT,
          XX_SALES_LOA_MV_src.EE_STATUS,
          XX_SALES_LOA_MV_src.LEAVE_DT,
          XX_SALES_LOA_MV_src.RETURN_DT,
          XX_SALES_LOA_MV_src.LEAVE_DAYS,
          XX_SALES_LOA_MV_src.batch_id,
          XX_SALES_LOA_MV_src.row_id,
          XX_SALES_LOA_MV_src.update_ts
SEGMENTED BY hash(XX_SALES_LOA_MV_src.FILE_NBR, XX_SALES_LOA_MV_src.batch_id, XX_SALES_LOA_MV_src.row_id, XX_SALES_LOA_MV_src.update_ts, XX_SALES_LOA_MV_src.LEAVE_DT, XX_SALES_LOA_MV_src.RETURN_DT, XX_SALES_LOA_MV_src.JOB_TITLE, XX_SALES_LOA_MV_src.DEPARTMENT, XX_SALES_LOA_MV_src.EE_STATUS, XX_SALES_LOA_MV_src.COST_CENTER_NAME, XX_SALES_LOA_MV_src.NAME, XX_SALES_LOA_MV_src.LEAVE_DAYS) ALL NODES;

CREATE PROJECTION teva_ingestion.territories_src_b0 /*+basename(territories_src),createtype(L)*/ 
(
 TERR_ID,
 NAME,
 DESC_TEXT,
 COMPANY_CD,
 TERR_TYPE,
 TEAM,
 SAMPLE_DIST,
 COMMENTS,
 FLEET_ELIG,
 REP_TYPE,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT territories_src.TERR_ID,
        territories_src.NAME,
        territories_src.DESC_TEXT,
        territories_src.COMPANY_CD,
        territories_src.TERR_TYPE,
        territories_src.TEAM,
        territories_src.SAMPLE_DIST,
        territories_src.COMMENTS,
        territories_src.FLEET_ELIG,
        territories_src.REP_TYPE,
        territories_src.batch_id,
        territories_src.row_id,
        territories_src.update_ts
 FROM teva_ingestion.territories_src
 ORDER BY territories_src.TERR_ID,
          territories_src.NAME,
          territories_src.DESC_TEXT,
          territories_src.COMPANY_CD,
          territories_src.TERR_TYPE,
          territories_src.TEAM,
          territories_src.SAMPLE_DIST,
          territories_src.COMMENTS,
          territories_src.FLEET_ELIG,
          territories_src.REP_TYPE,
          territories_src.batch_id,
          territories_src.row_id,
          territories_src.update_ts
SEGMENTED BY hash(territories_src.SAMPLE_DIST, territories_src.FLEET_ELIG, territories_src.REP_TYPE, territories_src.batch_id, territories_src.row_id, territories_src.update_ts, territories_src.COMPANY_CD, territories_src.TERR_TYPE, territories_src.TEAM, territories_src.COMMENTS, territories_src.TERR_ID, territories_src.NAME, territories_src.DESC_TEXT) ALL NODES;

CREATE PROJECTION teva_ingestion.associates_src_b0 /*+basename(associates_src),createtype(L)*/ 
(
 TEVA_ID,
 HR_ID,
 CRT_USER,
 CRT_DT,
 UPD_USER,
 UPD_DT,
 HIRE_DT,
 LOGON_ID,
 REPORTS_TO,
 STAT_CD,
 TYPE_CD,
 FULL_TIME,
 EEO_CAT,
 EXEMPT,
 EXPENSE_COST_CTR,
 HRS_PER_WK,
 MARITAL_STAT,
 RACE,
 SSN,
 EMAIL,
 BIRTH_DT,
 COUNTRY_ID,
 DFLT_CURR_ID,
 TERR_ID,
 OFFICE,
 PRSN_SYS_ID,
 LANGUAGE,
 "POSITION",
 TERM_DT,
 LAST_WRK_DT,
 AUTH_LIMIT,
 VEHICLE,
 VACATION_DAYS,
 CHK_REQ_LIMIT,
 EXPENSE_REPORT_APPROVER,
 LOC_CD,
 PAY_CD,
 ED_CD,
 ED_CD_DT,
 JOB_CD,
 CNTRY_CITIZENSHIP,
 DISABLED,
 VIETNAM_VET,
 EMERGENCY_CONTACT_NAME,
 EMERGENCY_CONTACT_RELATIONSHIP,
 EMERGENCY_CONTACT_PHONE,
 ADP_DEPT_NUM,
 VACATION_YR,
 FIN_AUTH_COMMENTS,
 EEO_CAT_HR_UPDT,
 EXPENSE_REPORTING,
 COMPANY_ID,
 CHECK_REQUEST_APPROVER,
 INVOICE_APPROVER,
 PHANTOM_IND,
 PAYROLL_COST_CTR,
 SAMPLE_AUTH,
 ORACLE_STRING,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT associates_src.TEVA_ID,
        associates_src.HR_ID,
        associates_src.CRT_USER,
        associates_src.CRT_DT,
        associates_src.UPD_USER,
        associates_src.UPD_DT,
        associates_src.HIRE_DT,
        associates_src.LOGON_ID,
        associates_src.REPORTS_TO,
        associates_src.STAT_CD,
        associates_src.TYPE_CD,
        associates_src.FULL_TIME,
        associates_src.EEO_CAT,
        associates_src.EXEMPT,
        associates_src.EXPENSE_COST_CTR,
        associates_src.HRS_PER_WK,
        associates_src.MARITAL_STAT,
        associates_src.RACE,
        associates_src.SSN,
        associates_src.EMAIL,
        associates_src.BIRTH_DT,
        associates_src.COUNTRY_ID,
        associates_src.DFLT_CURR_ID,
        associates_src.TERR_ID,
        associates_src.OFFICE,
        associates_src.PRSN_SYS_ID,
        associates_src.LANGUAGE,
        associates_src."POSITION",
        associates_src.TERM_DT,
        associates_src.LAST_WRK_DT,
        associates_src.AUTH_LIMIT,
        associates_src.VEHICLE,
        associates_src.VACATION_DAYS,
        associates_src.CHK_REQ_LIMIT,
        associates_src.EXPENSE_REPORT_APPROVER,
        associates_src.LOC_CD,
        associates_src.PAY_CD,
        associates_src.ED_CD,
        associates_src.ED_CD_DT,
        associates_src.JOB_CD,
        associates_src.CNTRY_CITIZENSHIP,
        associates_src.DISABLED,
        associates_src.VIETNAM_VET,
        associates_src.EMERGENCY_CONTACT_NAME,
        associates_src.EMERGENCY_CONTACT_RELATIONSHIP,
        associates_src.EMERGENCY_CONTACT_PHONE,
        associates_src.ADP_DEPT_NUM,
        associates_src.VACATION_YR,
        associates_src.FIN_AUTH_COMMENTS,
        associates_src.EEO_CAT_HR_UPDT,
        associates_src.EXPENSE_REPORTING,
        associates_src.COMPANY_ID,
        associates_src.CHECK_REQUEST_APPROVER,
        associates_src.INVOICE_APPROVER,
        associates_src.PHANTOM_IND,
        associates_src.PAYROLL_COST_CTR,
        associates_src.SAMPLE_AUTH,
        associates_src.ORACLE_STRING,
        associates_src.batch_id,
        associates_src.row_id,
        associates_src.update_ts
 FROM teva_ingestion.associates_src
 ORDER BY associates_src.TEVA_ID,
          associates_src.HR_ID,
          associates_src.CRT_USER,
          associates_src.CRT_DT,
          associates_src.UPD_USER,
          associates_src.UPD_DT,
          associates_src.HIRE_DT,
          associates_src.LOGON_ID,
          associates_src.REPORTS_TO,
          associates_src.STAT_CD,
          associates_src.TYPE_CD,
          associates_src.FULL_TIME,
          associates_src.EEO_CAT,
          associates_src.EXEMPT,
          associates_src.EXPENSE_COST_CTR,
          associates_src.HRS_PER_WK,
          associates_src.MARITAL_STAT,
          associates_src.RACE,
          associates_src.SSN,
          associates_src.EMAIL,
          associates_src.BIRTH_DT,
          associates_src.COUNTRY_ID,
          associates_src.DFLT_CURR_ID,
          associates_src.TERR_ID,
          associates_src.OFFICE,
          associates_src.PRSN_SYS_ID,
          associates_src.LANGUAGE,
          associates_src."POSITION",
          associates_src.TERM_DT,
          associates_src.LAST_WRK_DT,
          associates_src.AUTH_LIMIT,
          associates_src.VEHICLE,
          associates_src.VACATION_DAYS,
          associates_src.CHK_REQ_LIMIT,
          associates_src.EXPENSE_REPORT_APPROVER,
          associates_src.LOC_CD,
          associates_src.PAY_CD,
          associates_src.ED_CD,
          associates_src.ED_CD_DT,
          associates_src.JOB_CD,
          associates_src.CNTRY_CITIZENSHIP,
          associates_src.DISABLED,
          associates_src.VIETNAM_VET,
          associates_src.EMERGENCY_CONTACT_NAME,
          associates_src.EMERGENCY_CONTACT_RELATIONSHIP,
          associates_src.EMERGENCY_CONTACT_PHONE,
          associates_src.ADP_DEPT_NUM,
          associates_src.VACATION_YR,
          associates_src.FIN_AUTH_COMMENTS,
          associates_src.EEO_CAT_HR_UPDT,
          associates_src.EXPENSE_REPORTING,
          associates_src.COMPANY_ID,
          associates_src.CHECK_REQUEST_APPROVER,
          associates_src.INVOICE_APPROVER,
          associates_src.PHANTOM_IND,
          associates_src.PAYROLL_COST_CTR,
          associates_src.SAMPLE_AUTH,
          associates_src.ORACLE_STRING,
          associates_src.batch_id,
          associates_src.row_id,
          associates_src.update_ts
SEGMENTED BY hash(associates_src.TEVA_ID, associates_src.REPORTS_TO, associates_src.STAT_CD, associates_src.TYPE_CD, associates_src.FULL_TIME, associates_src.EXEMPT, associates_src.MARITAL_STAT, associates_src.COUNTRY_ID, associates_src.OFFICE, associates_src.LANGUAGE, associates_src.EXPENSE_REPORT_APPROVER, associates_src.PAY_CD, associates_src.ED_CD, associates_src.JOB_CD, associates_src.CNTRY_CITIZENSHIP, associates_src.DISABLED, associates_src.VIETNAM_VET, associates_src.EXPENSE_REPORTING, associates_src.CHECK_REQUEST_APPROVER, associates_src.INVOICE_APPROVER, associates_src.PHANTOM_IND, associates_src.SAMPLE_AUTH, associates_src.batch_id, associates_src.row_id, associates_src.update_ts, associates_src.SSN, associates_src.EEO_CAT, associates_src.EXPENSE_COST_CTR, associates_src.LOC_CD, associates_src.ADP_DEPT_NUM, associates_src.EEO_CAT_HR_UPDT, associates_src.COMPANY_ID) ALL NODES;

CREATE PROJECTION teva_ingestion.tvcmid_xref_src_b0 /*+basename(tvcmid_xref_src),createtype(L)*/ 
(
 TVCMID,
 ID_NUM,
 ID_TYPE,
 STATE,
 EXPIRATION_DATE,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT tvcmid_xref_src.TVCMID,
        tvcmid_xref_src.ID_NUM,
        tvcmid_xref_src.ID_TYPE,
        tvcmid_xref_src.STATE,
        tvcmid_xref_src.EXPIRATION_DATE,
        tvcmid_xref_src.batch_id,
        tvcmid_xref_src.row_id,
        tvcmid_xref_src.update_ts
 FROM teva_ingestion.tvcmid_xref_src
 ORDER BY tvcmid_xref_src.TVCMID,
          tvcmid_xref_src.ID_NUM,
          tvcmid_xref_src.ID_TYPE,
          tvcmid_xref_src.STATE,
          tvcmid_xref_src.EXPIRATION_DATE,
          tvcmid_xref_src.batch_id,
          tvcmid_xref_src.row_id,
          tvcmid_xref_src.update_ts
SEGMENTED BY hash(tvcmid_xref_src.STATE, tvcmid_xref_src.batch_id, tvcmid_xref_src.row_id, tvcmid_xref_src.update_ts, tvcmid_xref_src.ID_TYPE, tvcmid_xref_src.TVCMID, tvcmid_xref_src.EXPIRATION_DATE, tvcmid_xref_src.ID_NUM) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PCS_DDD_RETAIL_src_b0 /*+basename(EXT_PCS_DDD_RETAIL_src),createtype(L)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 TERRITORY_NUM,
 OUTLET_ZIP,
 SRA3,
 SRA4,
 CATEGORY_CODE,
 PRODUCT_GROUP,
 MTH_YYYYMM,
 QTY_MTH01,
 QTY_MTH02,
 QTY_MTH03,
 QTY_MTH04,
 QTY_MTH05,
 QTY_MTH06,
 QTY_MTH07,
 QTY_MTH08,
 QTY_MTH09,
 QTY_MTH10,
 QTY_MTH11,
 QTY_MTH12,
 QTY_MTH13,
 QTY_MTH14,
 QTY_MTH15,
 QTY_MTH16,
 QTY_MTH17,
 QTY_MTH18,
 QTY_MTH19,
 QTY_MTH20,
 QTY_MTH21,
 QTY_MTH22,
 QTY_MTH23,
 QTY_MTH24,
 OUTLET_CITY,
 OUTLET_STATE,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_PCS_DDD_RETAIL_src.CLIENT_NUM,
        EXT_PCS_DDD_RETAIL_src.REPORT_NUM,
        EXT_PCS_DDD_RETAIL_src.TERRITORY_NUM,
        EXT_PCS_DDD_RETAIL_src.OUTLET_ZIP,
        EXT_PCS_DDD_RETAIL_src.SRA3,
        EXT_PCS_DDD_RETAIL_src.SRA4,
        EXT_PCS_DDD_RETAIL_src.CATEGORY_CODE,
        EXT_PCS_DDD_RETAIL_src.PRODUCT_GROUP,
        EXT_PCS_DDD_RETAIL_src.MTH_YYYYMM,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH01,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH02,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH03,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH04,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH05,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH06,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH07,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH08,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH09,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH10,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH11,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH12,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH13,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH14,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH15,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH16,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH17,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH18,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH19,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH20,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH21,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH22,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH23,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH24,
        EXT_PCS_DDD_RETAIL_src.OUTLET_CITY,
        EXT_PCS_DDD_RETAIL_src.OUTLET_STATE,
        EXT_PCS_DDD_RETAIL_src.batch_id,
        EXT_PCS_DDD_RETAIL_src.row_id,
        EXT_PCS_DDD_RETAIL_src.update_ts
 FROM teva_ingestion.EXT_PCS_DDD_RETAIL_src
 ORDER BY EXT_PCS_DDD_RETAIL_src.CLIENT_NUM,
          EXT_PCS_DDD_RETAIL_src.REPORT_NUM,
          EXT_PCS_DDD_RETAIL_src.TERRITORY_NUM,
          EXT_PCS_DDD_RETAIL_src.OUTLET_ZIP,
          EXT_PCS_DDD_RETAIL_src.SRA3,
          EXT_PCS_DDD_RETAIL_src.SRA4,
          EXT_PCS_DDD_RETAIL_src.CATEGORY_CODE,
          EXT_PCS_DDD_RETAIL_src.PRODUCT_GROUP,
          EXT_PCS_DDD_RETAIL_src.MTH_YYYYMM,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH01,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH02,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH03,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH04,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH05,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH06,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH07,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH08,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH09,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH10,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH11,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH12,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH13,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH14,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH15,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH16,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH17,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH18,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH19,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH20,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH21,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH22,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH23,
          EXT_PCS_DDD_RETAIL_src.QTY_MTH24,
          EXT_PCS_DDD_RETAIL_src.OUTLET_CITY,
          EXT_PCS_DDD_RETAIL_src.OUTLET_STATE,
          EXT_PCS_DDD_RETAIL_src.batch_id,
          EXT_PCS_DDD_RETAIL_src.row_id,
          EXT_PCS_DDD_RETAIL_src.update_ts
SEGMENTED BY hash(EXT_PCS_DDD_RETAIL_src.CLIENT_NUM, EXT_PCS_DDD_RETAIL_src.REPORT_NUM, EXT_PCS_DDD_RETAIL_src.CATEGORY_CODE, EXT_PCS_DDD_RETAIL_src.MTH_YYYYMM, EXT_PCS_DDD_RETAIL_src.OUTLET_STATE, EXT_PCS_DDD_RETAIL_src.batch_id, EXT_PCS_DDD_RETAIL_src.row_id, EXT_PCS_DDD_RETAIL_src.update_ts, EXT_PCS_DDD_RETAIL_src.PRODUCT_GROUP, EXT_PCS_DDD_RETAIL_src.TERRITORY_NUM, EXT_PCS_DDD_RETAIL_src.OUTLET_ZIP, EXT_PCS_DDD_RETAIL_src.SRA3, EXT_PCS_DDD_RETAIL_src.SRA4, EXT_PCS_DDD_RETAIL_src.OUTLET_CITY, EXT_PCS_DDD_RETAIL_src.QTY_MTH01, EXT_PCS_DDD_RETAIL_src.QTY_MTH02, EXT_PCS_DDD_RETAIL_src.QTY_MTH03, EXT_PCS_DDD_RETAIL_src.QTY_MTH04, EXT_PCS_DDD_RETAIL_src.QTY_MTH05, EXT_PCS_DDD_RETAIL_src.QTY_MTH06, EXT_PCS_DDD_RETAIL_src.QTY_MTH07, EXT_PCS_DDD_RETAIL_src.QTY_MTH08, EXT_PCS_DDD_RETAIL_src.QTY_MTH09, EXT_PCS_DDD_RETAIL_src.QTY_MTH10, EXT_PCS_DDD_RETAIL_src.QTY_MTH11, EXT_PCS_DDD_RETAIL_src.QTY_MTH12, EXT_PCS_DDD_RETAIL_src.QTY_MTH13, EXT_PCS_DDD_RETAIL_src.QTY_MTH14, EXT_PCS_DDD_RETAIL_src.QTY_MTH15, EXT_PCS_DDD_RETAIL_src.QTY_MTH16, EXT_PCS_DDD_RETAIL_src.QTY_MTH17, EXT_PCS_DDD_RETAIL_src.QTY_MTH18) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_src_b0 /*+basename(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src),createtype(L)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 IMS_OUTLET_CODE,
 IMS_FACILITY_NUMBER,
 IMS_PRESCRIBER_NUMBER,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 FACILITY_PRESCRIBER_NAME,
 FACILITY_PRESCRIBER_ADDRESS1,
 FACILITY_PRESCRIBER_ADDRESS2,
 FACILITY_PRESCRIBER_ADDRESS3,
 FACILITY_PRESCRIBER_ADDRESS4,
 FACILITY_PRESCRIBER_CITY,
 FACILITY_PRESCRIBER_STATE,
 FACILITY_PRESCRIBER_ZIP,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.CLIENT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.REPORT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_FACILITY_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_PRESCRIBER_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS1,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS2,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS3,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS4,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.row_id,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_src
 ORDER BY EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.CLIENT_NUM,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.REPORT_NUM,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_OUTLET_CODE,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_FACILITY_NUMBER,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_PRESCRIBER_NUMBER,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_NAME,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ADDRESS,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_CITY,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_STATE,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ZIP,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_NAME,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS1,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS2,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS3,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS4,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_CITY,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_STATE,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ZIP,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.batch_id,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.row_id,
          EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.update_ts
SEGMENTED BY hash(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.CLIENT_NUM, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.REPORT_NUM, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_PRESCRIBER_NUMBER, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_STATE, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ZIP, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_STATE, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ZIP, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.batch_id, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.row_id, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.update_ts, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_OUTLET_CODE, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_FACILITY_NUMBER, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_NAME, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_CITY, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_CITY, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS1, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS2, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS3, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS4, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_NAME, EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ADDRESS) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_src_b0 /*+basename(EXT_ONC_DMD_MONTHLY_DOLLARS_src),createtype(L)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 TERRITORY_NUM,
 IMS_OUTLET_CODE,
 SUBCATEGORY_CODE,
 ALT_SEQ_NUM,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 DATA_DATE,
 DOL_MTH01,
 DOL_MTH02,
 DOL_MTH03,
 DOL_MTH04,
 DOL_MTH05,
 DOL_MTH06,
 DOL_MTH07,
 DOL_MTH08,
 DOL_MTH09,
 DOL_MTH10,
 DOL_MTH11,
 DOL_MTH12,
 DOL_MTH13,
 DOL_MTH14,
 DOL_MTH15,
 DOL_MTH16,
 DOL_MTH17,
 DOL_MTH18,
 DOL_MTH19,
 DOL_MTH20,
 DOL_MTH21,
 DOL_MTH22,
 DOL_MTH23,
 DOL_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_MONTHLY_DOLLARS_src.CLIENT_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.REPORT_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.TERRITORY_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.SUBCATEGORY_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.ALT_SEQ_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.CATEGORY_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_PRODUCT_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DATA_DATE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH01,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH02,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH03,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH04,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH05,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH06,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH07,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH08,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH09,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH10,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH11,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH12,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH13,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH14,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH15,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH16,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH17,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH18,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH19,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH20,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH21,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH22,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH23,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH24,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_NAME,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_CITY,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_STATE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.row_id,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_src
 ORDER BY EXT_ONC_DMD_MONTHLY_DOLLARS_src.CLIENT_NUM,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.REPORT_NUM,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.TERRITORY_NUM,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_OUTLET_CODE,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.SUBCATEGORY_CODE,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.ALT_SEQ_NUM,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.CATEGORY_CODE,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_PRODUCT_CODE,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DATA_DATE,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH01,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH02,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH03,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH04,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH05,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH06,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH07,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH08,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH09,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH10,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH11,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH12,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH13,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH14,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH15,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH16,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH17,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH18,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH19,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH20,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH21,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH22,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH23,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH24,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_NAME,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ADDRESS,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_CITY,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_STATE,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ZIP,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.batch_id,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.row_id,
          EXT_ONC_DMD_MONTHLY_DOLLARS_src.update_ts
SEGMENTED BY hash(EXT_ONC_DMD_MONTHLY_DOLLARS_src.CLIENT_NUM, EXT_ONC_DMD_MONTHLY_DOLLARS_src.REPORT_NUM, EXT_ONC_DMD_MONTHLY_DOLLARS_src.TERRITORY_NUM, EXT_ONC_DMD_MONTHLY_DOLLARS_src.CATEGORY_CODE, EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_STATE, EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ZIP, EXT_ONC_DMD_MONTHLY_DOLLARS_src.batch_id, EXT_ONC_DMD_MONTHLY_DOLLARS_src.row_id, EXT_ONC_DMD_MONTHLY_DOLLARS_src.update_ts, EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_PRODUCT_CODE, EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_OUTLET_CODE, EXT_ONC_DMD_MONTHLY_DOLLARS_src.SUBCATEGORY_CODE, EXT_ONC_DMD_MONTHLY_DOLLARS_src.ALT_SEQ_NUM, EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_CITY, EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_NAME, EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ADDRESS, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DATA_DATE, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH01, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH02, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH03, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH04, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH05, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH06, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH07, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH08, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH09, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH10, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH11, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH12, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH13, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH14, EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH15) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_src_b0 /*+basename(EXT_ONC_DMD_WEEKLY_DEMO_src),createtype(L)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 IMS_OUTLET_CODE,
 IMS_FACILITY_NUMBER,
 IMS_PRESCRIBER_NUMBER,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 FACILITY_PRESCRIBER_NAME,
 FACILITY_PRESCRIBER_ADDRESS1,
 FACILITY_PRESCRIBER_ADDRESS2,
 FACILITY_PRESCRIBER_ADDRESS3,
 FACILITY_PRESCRIBER_ADDRESS4,
 FACILITY_PRESCRIBER_CITY,
 FACILITY_PRESCRIBER_STATE,
 FACILITY_PRESCRIBER_ZIP,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_WEEKLY_DEMO_src.CLIENT_NUM,
        EXT_ONC_DMD_WEEKLY_DEMO_src.REPORT_NUM,
        EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_FACILITY_NUMBER,
        EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_PRESCRIBER_NUMBER,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_NAME,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_CITY,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_STATE,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ZIP,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_NAME,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS1,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS2,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS3,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS4,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_CITY,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_STATE,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_WEEKLY_DEMO_src.batch_id,
        EXT_ONC_DMD_WEEKLY_DEMO_src.row_id,
        EXT_ONC_DMD_WEEKLY_DEMO_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_src
 ORDER BY EXT_ONC_DMD_WEEKLY_DEMO_src.CLIENT_NUM,
          EXT_ONC_DMD_WEEKLY_DEMO_src.REPORT_NUM,
          EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_OUTLET_CODE,
          EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_FACILITY_NUMBER,
          EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_PRESCRIBER_NUMBER,
          EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_NAME,
          EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ADDRESS,
          EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_CITY,
          EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_STATE,
          EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ZIP,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_NAME,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS1,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS2,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS3,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS4,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_CITY,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_STATE,
          EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ZIP,
          EXT_ONC_DMD_WEEKLY_DEMO_src.batch_id,
          EXT_ONC_DMD_WEEKLY_DEMO_src.row_id,
          EXT_ONC_DMD_WEEKLY_DEMO_src.update_ts
SEGMENTED BY hash(EXT_ONC_DMD_WEEKLY_DEMO_src.CLIENT_NUM, EXT_ONC_DMD_WEEKLY_DEMO_src.REPORT_NUM, EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_PRESCRIBER_NUMBER, EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_STATE, EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ZIP, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_STATE, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ZIP, EXT_ONC_DMD_WEEKLY_DEMO_src.batch_id, EXT_ONC_DMD_WEEKLY_DEMO_src.row_id, EXT_ONC_DMD_WEEKLY_DEMO_src.update_ts, EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_OUTLET_CODE, EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_FACILITY_NUMBER, EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_NAME, EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_CITY, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_CITY, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS1, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS2, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS3, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS4, EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_NAME, EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ADDRESS) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PCS_DDD_NONRETAIL_src_b0 /*+basename(EXT_PCS_DDD_NONRETAIL_src),createtype(L)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 TERRITORY_NUM,
 OUTLET_CODE,
 SUBCATEGORY_CODE,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 MTH_YYYYMM,
 QTY_MTH01,
 QTY_MTH02,
 QTY_MTH03,
 QTY_MTH04,
 QTY_MTH05,
 QTY_MTH06,
 QTY_MTH07,
 QTY_MTH08,
 QTY_MTH09,
 QTY_MTH10,
 QTY_MTH11,
 QTY_MTH12,
 QTY_MTH13,
 QTY_MTH14,
 QTY_MTH15,
 QTY_MTH16,
 QTY_MTH17,
 QTY_MTH18,
 QTY_MTH19,
 QTY_MTH20,
 QTY_MTH21,
 QTY_MTH22,
 QTY_MTH23,
 QTY_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_PCS_DDD_NONRETAIL_src.CLIENT_NUM,
        EXT_PCS_DDD_NONRETAIL_src.REPORT_NUM,
        EXT_PCS_DDD_NONRETAIL_src.TERRITORY_NUM,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_CODE,
        EXT_PCS_DDD_NONRETAIL_src.SUBCATEGORY_CODE,
        EXT_PCS_DDD_NONRETAIL_src.CATEGORY_CODE,
        EXT_PCS_DDD_NONRETAIL_src.IMS_PRODUCT_CODE,
        EXT_PCS_DDD_NONRETAIL_src.MTH_YYYYMM,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH01,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH02,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH03,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH04,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH05,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH06,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH07,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH08,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH09,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH10,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH11,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH12,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH13,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH14,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH15,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH16,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH17,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH18,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH19,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH20,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH21,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH22,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH23,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH24,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_NAME,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_ADDRESS,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_CITY,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_STATE,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_ZIP,
        EXT_PCS_DDD_NONRETAIL_src.batch_id,
        EXT_PCS_DDD_NONRETAIL_src.row_id,
        EXT_PCS_DDD_NONRETAIL_src.update_ts
 FROM teva_ingestion.EXT_PCS_DDD_NONRETAIL_src
 ORDER BY EXT_PCS_DDD_NONRETAIL_src.CLIENT_NUM,
          EXT_PCS_DDD_NONRETAIL_src.REPORT_NUM,
          EXT_PCS_DDD_NONRETAIL_src.TERRITORY_NUM,
          EXT_PCS_DDD_NONRETAIL_src.OUTLET_CODE,
          EXT_PCS_DDD_NONRETAIL_src.SUBCATEGORY_CODE,
          EXT_PCS_DDD_NONRETAIL_src.CATEGORY_CODE,
          EXT_PCS_DDD_NONRETAIL_src.IMS_PRODUCT_CODE,
          EXT_PCS_DDD_NONRETAIL_src.MTH_YYYYMM,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH01,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH02,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH03,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH04,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH05,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH06,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH07,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH08,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH09,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH10,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH11,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH12,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH13,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH14,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH15,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH16,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH17,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH18,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH19,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH20,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH21,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH22,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH23,
          EXT_PCS_DDD_NONRETAIL_src.QTY_MTH24,
          EXT_PCS_DDD_NONRETAIL_src.OUTLET_NAME,
          EXT_PCS_DDD_NONRETAIL_src.OUTLET_ADDRESS,
          EXT_PCS_DDD_NONRETAIL_src.OUTLET_CITY,
          EXT_PCS_DDD_NONRETAIL_src.OUTLET_STATE,
          EXT_PCS_DDD_NONRETAIL_src.OUTLET_ZIP,
          EXT_PCS_DDD_NONRETAIL_src.batch_id,
          EXT_PCS_DDD_NONRETAIL_src.row_id,
          EXT_PCS_DDD_NONRETAIL_src.update_ts
SEGMENTED BY hash(EXT_PCS_DDD_NONRETAIL_src.CLIENT_NUM, EXT_PCS_DDD_NONRETAIL_src.REPORT_NUM, EXT_PCS_DDD_NONRETAIL_src.TERRITORY_NUM, EXT_PCS_DDD_NONRETAIL_src.OUTLET_CODE, EXT_PCS_DDD_NONRETAIL_src.SUBCATEGORY_CODE, EXT_PCS_DDD_NONRETAIL_src.CATEGORY_CODE, EXT_PCS_DDD_NONRETAIL_src.IMS_PRODUCT_CODE, EXT_PCS_DDD_NONRETAIL_src.MTH_YYYYMM, EXT_PCS_DDD_NONRETAIL_src.OUTLET_STATE, EXT_PCS_DDD_NONRETAIL_src.OUTLET_ZIP, EXT_PCS_DDD_NONRETAIL_src.batch_id, EXT_PCS_DDD_NONRETAIL_src.row_id, EXT_PCS_DDD_NONRETAIL_src.update_ts, EXT_PCS_DDD_NONRETAIL_src.OUTLET_CITY, EXT_PCS_DDD_NONRETAIL_src.OUTLET_NAME, EXT_PCS_DDD_NONRETAIL_src.OUTLET_ADDRESS, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH01, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH02, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH03, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH04, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH05, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH06, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH07, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH08, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH09, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH10, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH11, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH12, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH13, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH14, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH15, EXT_PCS_DDD_NONRETAIL_src.QTY_MTH16) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_src_b0 /*+basename(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src),createtype(L)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 IMS_OUTLET_CODE,
 IMS_FACILITY_NUMBER,
 IMS_PRESCRIBER_NUMBER,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 FACILITY_PRESCRIBER_NAME,
 FACILITY_PRESCRIBER_ADDRESS1,
 FACILITY_PRESCRIBER_ADDRESS2,
 FACILITY_PRESCRIBER_ADDRESS3,
 FACILITY_PRESCRIBER_ADDRESS4,
 FACILITY_PRESCRIBER_CITY,
 FACILITY_PRESCRIBER_STATE,
 FACILITY_PRESCRIBER_ZIP,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.CLIENT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.REPORT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_FACILITY_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_PRESCRIBER_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS1,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS2,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS3,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS4,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.row_id,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_src
 ORDER BY EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.CLIENT_NUM,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.REPORT_NUM,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_OUTLET_CODE,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_FACILITY_NUMBER,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_PRESCRIBER_NUMBER,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_NAME,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ADDRESS,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_CITY,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_STATE,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ZIP,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_NAME,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS1,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS2,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS3,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS4,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_CITY,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_STATE,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ZIP,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.batch_id,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.row_id,
          EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.update_ts
SEGMENTED BY hash(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.CLIENT_NUM, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.REPORT_NUM, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_PRESCRIBER_NUMBER, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_STATE, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ZIP, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_STATE, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ZIP, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.batch_id, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.row_id, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.update_ts, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_OUTLET_CODE, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_FACILITY_NUMBER, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_NAME, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_CITY, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_CITY, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS1, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS2, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS3, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS4, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_NAME, EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ADDRESS) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_PLAN_XREF_src_b0 /*+basename(EXT_IMS_PLAN_XREF_src),createtype(L)*/ 
(
 PAYER_NUM,
 PAYER_NAME,
 PLAN_NUM,
 PAYER_PLAN_NUM,
 PLAN_NAME,
 MODEL,
 CITY,
 HQ_STATE,
 OPERATING_STATE,
 MONTHS_WITH_DATA,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_IMS_PLAN_XREF_src.PAYER_NUM,
        EXT_IMS_PLAN_XREF_src.PAYER_NAME,
        EXT_IMS_PLAN_XREF_src.PLAN_NUM,
        EXT_IMS_PLAN_XREF_src.PAYER_PLAN_NUM,
        EXT_IMS_PLAN_XREF_src.PLAN_NAME,
        EXT_IMS_PLAN_XREF_src.MODEL,
        EXT_IMS_PLAN_XREF_src.CITY,
        EXT_IMS_PLAN_XREF_src.HQ_STATE,
        EXT_IMS_PLAN_XREF_src.OPERATING_STATE,
        EXT_IMS_PLAN_XREF_src.MONTHS_WITH_DATA,
        EXT_IMS_PLAN_XREF_src.batch_id,
        EXT_IMS_PLAN_XREF_src.row_id,
        EXT_IMS_PLAN_XREF_src.update_ts
 FROM teva_ingestion.EXT_IMS_PLAN_XREF_src
 ORDER BY EXT_IMS_PLAN_XREF_src.PAYER_NUM,
          EXT_IMS_PLAN_XREF_src.PAYER_NAME,
          EXT_IMS_PLAN_XREF_src.PLAN_NUM,
          EXT_IMS_PLAN_XREF_src.PAYER_PLAN_NUM,
          EXT_IMS_PLAN_XREF_src.PLAN_NAME,
          EXT_IMS_PLAN_XREF_src.MODEL,
          EXT_IMS_PLAN_XREF_src.CITY,
          EXT_IMS_PLAN_XREF_src.HQ_STATE,
          EXT_IMS_PLAN_XREF_src.OPERATING_STATE,
          EXT_IMS_PLAN_XREF_src.MONTHS_WITH_DATA,
          EXT_IMS_PLAN_XREF_src.batch_id,
          EXT_IMS_PLAN_XREF_src.row_id,
          EXT_IMS_PLAN_XREF_src.update_ts
SEGMENTED BY hash(EXT_IMS_PLAN_XREF_src.PAYER_NUM, EXT_IMS_PLAN_XREF_src.PLAN_NUM, EXT_IMS_PLAN_XREF_src.HQ_STATE, EXT_IMS_PLAN_XREF_src.OPERATING_STATE, EXT_IMS_PLAN_XREF_src.MONTHS_WITH_DATA, EXT_IMS_PLAN_XREF_src.batch_id, EXT_IMS_PLAN_XREF_src.row_id, EXT_IMS_PLAN_XREF_src.update_ts, EXT_IMS_PLAN_XREF_src.PAYER_PLAN_NUM, EXT_IMS_PLAN_XREF_src.MODEL, EXT_IMS_PLAN_XREF_src.CITY, EXT_IMS_PLAN_XREF_src.PAYER_NAME, EXT_IMS_PLAN_XREF_src.PLAN_NAME) ALL NODES;

CREATE PROJECTION teva_ingestion.C_BO_TEVA_FLAG_src_super_b0 /*+basename(C_BO_TEVA_FLAG_src_super)*/ 
(
 ROWID_OBJECT,
 CREATOR,
 CREATE_DATE,
 UPDATED_BY,
 LAST_UPDATE_DATE,
 CONSOLIDATION_IND,
 DELETED_IND,
 DELETED_BY,
 DELETED_DATE,
 LAST_ROWID_SYSTEM,
 DIRTY_IND,
 INTERACTION_ID,
 HUB_STATE_IND,
 CM_DIRTY_IND,
 FLAG_TYPE,
 FLAG_VALUE,
 EFFECTIVE_DATE,
 HCP_DETAIL_ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT C_BO_TEVA_FLAG_src.ROWID_OBJECT,
        C_BO_TEVA_FLAG_src.CREATOR,
        C_BO_TEVA_FLAG_src.CREATE_DATE,
        C_BO_TEVA_FLAG_src.UPDATED_BY,
        C_BO_TEVA_FLAG_src.LAST_UPDATE_DATE,
        C_BO_TEVA_FLAG_src.CONSOLIDATION_IND,
        C_BO_TEVA_FLAG_src.DELETED_IND,
        C_BO_TEVA_FLAG_src.DELETED_BY,
        C_BO_TEVA_FLAG_src.DELETED_DATE,
        C_BO_TEVA_FLAG_src.LAST_ROWID_SYSTEM,
        C_BO_TEVA_FLAG_src.DIRTY_IND,
        C_BO_TEVA_FLAG_src.INTERACTION_ID,
        C_BO_TEVA_FLAG_src.HUB_STATE_IND,
        C_BO_TEVA_FLAG_src.CM_DIRTY_IND,
        C_BO_TEVA_FLAG_src.FLAG_TYPE,
        C_BO_TEVA_FLAG_src.FLAG_VALUE,
        C_BO_TEVA_FLAG_src.EFFECTIVE_DATE,
        C_BO_TEVA_FLAG_src.HCP_DETAIL_ID,
        C_BO_TEVA_FLAG_src.batch_id,
        C_BO_TEVA_FLAG_src.row_id,
        C_BO_TEVA_FLAG_src.update_ts
 FROM teva_ingestion.C_BO_TEVA_FLAG_src
 ORDER BY C_BO_TEVA_FLAG_src.batch_id
SEGMENTED BY hash(C_BO_TEVA_FLAG_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DDD_DOD_QTY_src_super_b0 /*+basename(EXT_DDD_DOD_QTY_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 filler_01,
 OUTLET_CODE,
 SUBCATEGORY_CODE,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 MTH_YYYYMM,
 QTY_MTH01,
 QTY_MTH02,
 QTY_MTH03,
 QTY_MTH04,
 QTY_MTH05,
 QTY_MTH06,
 QTY_MTH07,
 QTY_MTH08,
 QTY_MTH09,
 QTY_MTH10,
 QTY_MTH11,
 QTY_MTH12,
 QTY_MTH13,
 QTY_MTH14,
 QTY_MTH15,
 QTY_MTH16,
 QTY_MTH17,
 QTY_MTH18,
 QTY_MTH19,
 QTY_MTH20,
 QTY_MTH21,
 QTY_MTH22,
 QTY_MTH23,
 QTY_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DDD_DOD_QTY_src.CLIENT_NUM,
        EXT_DDD_DOD_QTY_src.REPORT_NUM,
        EXT_DDD_DOD_QTY_src.filler_01,
        EXT_DDD_DOD_QTY_src.OUTLET_CODE,
        EXT_DDD_DOD_QTY_src.SUBCATEGORY_CODE,
        EXT_DDD_DOD_QTY_src.CATEGORY_CODE,
        EXT_DDD_DOD_QTY_src.IMS_PRODUCT_CODE,
        EXT_DDD_DOD_QTY_src.MTH_YYYYMM,
        EXT_DDD_DOD_QTY_src.QTY_MTH01,
        EXT_DDD_DOD_QTY_src.QTY_MTH02,
        EXT_DDD_DOD_QTY_src.QTY_MTH03,
        EXT_DDD_DOD_QTY_src.QTY_MTH04,
        EXT_DDD_DOD_QTY_src.QTY_MTH05,
        EXT_DDD_DOD_QTY_src.QTY_MTH06,
        EXT_DDD_DOD_QTY_src.QTY_MTH07,
        EXT_DDD_DOD_QTY_src.QTY_MTH08,
        EXT_DDD_DOD_QTY_src.QTY_MTH09,
        EXT_DDD_DOD_QTY_src.QTY_MTH10,
        EXT_DDD_DOD_QTY_src.QTY_MTH11,
        EXT_DDD_DOD_QTY_src.QTY_MTH12,
        EXT_DDD_DOD_QTY_src.QTY_MTH13,
        EXT_DDD_DOD_QTY_src.QTY_MTH14,
        EXT_DDD_DOD_QTY_src.QTY_MTH15,
        EXT_DDD_DOD_QTY_src.QTY_MTH16,
        EXT_DDD_DOD_QTY_src.QTY_MTH17,
        EXT_DDD_DOD_QTY_src.QTY_MTH18,
        EXT_DDD_DOD_QTY_src.QTY_MTH19,
        EXT_DDD_DOD_QTY_src.QTY_MTH20,
        EXT_DDD_DOD_QTY_src.QTY_MTH21,
        EXT_DDD_DOD_QTY_src.QTY_MTH22,
        EXT_DDD_DOD_QTY_src.QTY_MTH23,
        EXT_DDD_DOD_QTY_src.QTY_MTH24,
        EXT_DDD_DOD_QTY_src.OUTLET_NAME,
        EXT_DDD_DOD_QTY_src.OUTLET_ADDRESS,
        EXT_DDD_DOD_QTY_src.OUTLET_CITY,
        EXT_DDD_DOD_QTY_src.OUTLET_STATE,
        EXT_DDD_DOD_QTY_src.OUTLET_ZIP,
        EXT_DDD_DOD_QTY_src.batch_id,
        EXT_DDD_DOD_QTY_src.row_id,
        EXT_DDD_DOD_QTY_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOD_QTY_src
 ORDER BY EXT_DDD_DOD_QTY_src.batch_id
SEGMENTED BY hash(EXT_DDD_DOD_QTY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src_super_b0 /*+basename(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src_super)*/ 
(
 TRANS_TYPE,
 ASI_TXN_ID,
 ORIG_ASI_TXN_ID,
 RX_NUM,
 RX_DATE,
 DATE_WRITTEN,
 DAYS_SUPPLY,
 NDC_CODE,
 DAW,
 DRUG_NAME,
 DRUG_DESC,
 NEW_REFILL,
 QUANTITY,
 REFILLS,
 OTHER_COVERAGE_CODE,
 GROUP_NUM,
 COUPON_NUM,
 SEX,
 AGE_AT_REDEMPTION,
 PHARMACY_PROCESS_DATE,
 PHARMACY_CHAIN_NUM,
 NABP,
 PHARMACY_CHAIN,
 PHARMACY_NAME,
 PHARMACY_ADDRESS,
 PHARMACY_ADDRESS2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PHARMACY_PHONE,
 PHARMACY_NPI_NUM,
 PRINCIPLE_PHYS_DEA_NUM,
 PHYS_NPI,
 PHYSICIAN_NAME,
 ASI_PHYS_ADDRESS1,
 ASI_PHYS_ADDRESS2,
 ASI_PHYS_CITY,
 ASI_PHYS_STATE,
 ASI_PHYS_ZIP,
 REBATE_AMOUNT,
 MEMBER_CASH_EXPENSE,
 SUBMITTED_COST,
 PHARMACY_FEE,
 TOTAL_AMOUNT_DUE,
 CALC_AWP,
 CREATE_DATE,
 OCC_PAYMENT_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.TRANS_TYPE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_TXN_ID,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ORIG_ASI_TXN_ID,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.RX_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.RX_DATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DATE_WRITTEN,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DAYS_SUPPLY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.NDC_CODE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DAW,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DRUG_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DRUG_DESC,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.NEW_REFILL,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.QUANTITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.REFILLS,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.OTHER_COVERAGE_CODE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.GROUP_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.COUPON_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.SEX,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.AGE_AT_REDEMPTION,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_PROCESS_DATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_CHAIN_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.NABP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_CHAIN,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_ADDRESS,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_ADDRESS2,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_CITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_STATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_ZIP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_PHONE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_NPI_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PRINCIPLE_PHYS_DEA_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHYS_NPI,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHYSICIAN_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_ADDRESS1,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_ADDRESS2,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_CITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_STATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_ZIP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.REBATE_AMOUNT,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.MEMBER_CASH_EXPENSE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.SUBMITTED_COST,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_FEE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.TOTAL_AMOUNT_DUE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.CALC_AWP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.CREATE_DATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.OCC_PAYMENT_TYPE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.batch_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.row_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.update_ts
 FROM teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src
 ORDER BY EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.batch_id
SEGMENTED BY hash(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DDD_MONTHLY_RETAIL_src_super_b0 /*+basename(EXT_ONC_DDD_MONTHLY_RETAIL_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 sra_1,
 ZIP,
 sra_3,
 sra_4,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 DATA_DATE,
 QTY_MTH01,
 QTY_MTH02,
 QTY_MTH03,
 QTY_MTH04,
 QTY_MTH05,
 QTY_MTH06,
 QTY_MTH07,
 QTY_MTH08,
 QTY_MTH09,
 QTY_MTH10,
 QTY_MTH11,
 QTY_MTH12,
 QTY_MTH13,
 QTY_MTH14,
 QTY_MTH15,
 QTY_MTH16,
 QTY_MTH17,
 QTY_MTH18,
 QTY_MTH19,
 QTY_MTH20,
 QTY_MTH21,
 QTY_MTH22,
 QTY_MTH23,
 QTY_MTH24,
 CITY,
 STATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DDD_MONTHLY_RETAIL_src.CLIENT_NUM,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.REPORT_NUM,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.sra_1,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.ZIP,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.sra_3,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.sra_4,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.CATEGORY_CODE,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.IMS_PRODUCT_CODE,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.DATA_DATE,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH01,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH02,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH03,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH04,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH05,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH06,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH07,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH08,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH09,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH10,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH11,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH12,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH13,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH14,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH15,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH16,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH17,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH18,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH19,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH20,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH21,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH22,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH23,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH24,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.CITY,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.STATE,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.batch_id,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.row_id,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.update_ts
 FROM teva_ingestion.EXT_ONC_DDD_MONTHLY_RETAIL_src
 ORDER BY EXT_ONC_DDD_MONTHLY_RETAIL_src.batch_id
SEGMENTED BY hash(EXT_ONC_DDD_MONTHLY_RETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DDD_WEEKLY_RETAIL_src_super_b0 /*+basename(EXT_ONC_DDD_WEEKLY_RETAIL_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 ZIP,
 sra_2,
 sra_3,
 sra_4,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 DATA_DATE,
 QTY_WK01,
 QTY_WK02,
 QTY_WK03,
 QTY_WK04,
 QTY_WK05,
 QTY_WK06,
 QTY_WK07,
 QTY_WK08,
 QTY_WK09,
 QTY_WK10,
 QTY_WK11,
 QTY_WK12,
 QTY_WK13,
 QTY_WK14,
 QTY_WK15,
 QTY_WK16,
 QTY_WK17,
 QTY_WK18,
 QTY_WK19,
 QTY_WK20,
 QTY_WK21,
 QTY_WK22,
 QTY_WK23,
 QTY_WK24,
 QTY_WK25,
 QTY_WK26,
 QTY_WK27,
 QTY_WK28,
 QTY_WK29,
 QTY_WK30,
 QTY_WK31,
 QTY_WK32,
 QTY_WK33,
 QTY_WK34,
 QTY_WK35,
 QTY_WK36,
 QTY_WK37,
 QTY_WK38,
 QTY_WK39,
 QTY_WK40,
 QTY_WK41,
 QTY_WK42,
 QTY_WK43,
 QTY_WK44,
 QTY_WK45,
 QTY_WK46,
 QTY_WK47,
 QTY_WK48,
 QTY_WK49,
 QTY_WK50,
 QTY_WK51,
 QTY_WK52,
 QTY_WK53,
 QTY_WK54,
 QTY_WK55,
 QTY_WK56,
 QTY_WK57,
 QTY_WK58,
 QTY_WK59,
 QTY_WK60,
 QTY_WK61,
 QTY_WK62,
 QTY_WK63,
 QTY_WK64,
 QTY_WK65,
 QTY_WK66,
 QTY_WK67,
 QTY_WK68,
 QTY_WK69,
 QTY_WK70,
 QTY_WK71,
 QTY_WK72,
 QTY_WK73,
 QTY_WK74,
 QTY_WK75,
 QTY_WK76,
 QTY_WK77,
 QTY_WK78,
 QTY_WK79,
 QTY_WK80,
 QTY_WK81,
 QTY_WK82,
 QTY_WK83,
 QTY_WK84,
 QTY_WK85,
 QTY_WK86,
 QTY_WK87,
 QTY_WK88,
 QTY_WK89,
 QTY_WK90,
 QTY_WK91,
 QTY_WK92,
 QTY_WK93,
 QTY_WK94,
 QTY_WK95,
 QTY_WK96,
 QTY_WK97,
 QTY_WK98,
 QTY_WK99,
 QTY_WK100,
 QTY_WK101,
 QTY_WK102,
 QTY_WK103,
 QTY_WK104,
 QTY_WK105,
 QTY_WK106,
 CITY,
 STATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DDD_WEEKLY_RETAIL_src.CLIENT_NUM,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.REPORT_NUM,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.ZIP,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.sra_2,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.sra_3,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.sra_4,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.CATEGORY_CODE,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.IMS_PRODUCT_CODE,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.DATA_DATE,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK01,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK02,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK03,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK04,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK05,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK06,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK07,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK08,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK09,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK10,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK11,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK12,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK13,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK14,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK15,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK16,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK17,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK18,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK19,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK20,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK21,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK22,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK23,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK24,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK25,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK26,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK27,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK28,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK29,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK30,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK31,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK32,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK33,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK34,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK35,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK36,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK37,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK38,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK39,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK40,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK41,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK42,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK43,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK44,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK45,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK46,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK47,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK48,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK49,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK50,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK51,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK52,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK53,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK54,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK55,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK56,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK57,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK58,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK59,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK60,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK61,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK62,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK63,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK64,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK65,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK66,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK67,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK68,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK69,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK70,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK71,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK72,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK73,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK74,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK75,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK76,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK77,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK78,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK79,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK80,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK81,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK82,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK83,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK84,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK85,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK86,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK87,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK88,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK89,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK90,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK91,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK92,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK93,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK94,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK95,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK96,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK97,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK98,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK99,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK100,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK101,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK102,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK103,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK104,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK105,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK106,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.CITY,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.STATE,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.batch_id,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.row_id,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.update_ts
 FROM teva_ingestion.EXT_ONC_DDD_WEEKLY_RETAIL_src
 ORDER BY EXT_ONC_DDD_WEEKLY_RETAIL_src.batch_id
SEGMENTED BY hash(EXT_ONC_DDD_WEEKLY_RETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_hcos_clinical_fact_national_src_super_b0 /*+basename(ext_hcos_clinical_fact_national_src_super)*/ 
(
 CODE_ID,
 DATA_YEAR,
 INPAT_VOL,
 OUTPAT_VOL,
 TTL_VOL,
 AVG_LOS,
 AVG_COS,
 TREND,
 CODE_ORDER,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_hcos_clinical_fact_national_src.CODE_ID,
        ext_hcos_clinical_fact_national_src.DATA_YEAR,
        ext_hcos_clinical_fact_national_src.INPAT_VOL,
        ext_hcos_clinical_fact_national_src.OUTPAT_VOL,
        ext_hcos_clinical_fact_national_src.TTL_VOL,
        ext_hcos_clinical_fact_national_src.AVG_LOS,
        ext_hcos_clinical_fact_national_src.AVG_COS,
        ext_hcos_clinical_fact_national_src.TREND,
        ext_hcos_clinical_fact_national_src.CODE_ORDER,
        ext_hcos_clinical_fact_national_src.batch_id,
        ext_hcos_clinical_fact_national_src.row_id,
        ext_hcos_clinical_fact_national_src.update_ts
 FROM teva_ingestion.ext_hcos_clinical_fact_national_src
 ORDER BY ext_hcos_clinical_fact_national_src.batch_id
SEGMENTED BY hash(ext_hcos_clinical_fact_national_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_hcos_professional_detail_fact_src_super_b0 /*+basename(ext_hcos_professional_detail_fact_src_super)*/ 
(
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 DETAIL_ID,
 DETAIL_VALUE,
 DETAIL_COUNT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_hcos_professional_detail_fact_src.HCE_ID_PRFSNL,
        ext_hcos_professional_detail_fact_src.PROFESSIONAL_ID,
        ext_hcos_professional_detail_fact_src.DETAIL_ID,
        ext_hcos_professional_detail_fact_src.DETAIL_VALUE,
        ext_hcos_professional_detail_fact_src.DETAIL_COUNT,
        ext_hcos_professional_detail_fact_src.batch_id,
        ext_hcos_professional_detail_fact_src.row_id,
        ext_hcos_professional_detail_fact_src.update_ts
 FROM teva_ingestion.ext_hcos_professional_detail_fact_src
 ORDER BY ext_hcos_professional_detail_fact_src.batch_id
SEGMENTED BY hash(ext_hcos_professional_detail_fact_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_hcos_professional_spec_fact_src_super_b0 /*+basename(ext_hcos_professional_spec_fact_src_super)*/ 
(
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 SPEC_CODE,
 SPEC_RANKING,
 SPEC_RANK_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_hcos_professional_spec_fact_src.HCE_ID_PRFSNL,
        ext_hcos_professional_spec_fact_src.PROFESSIONAL_ID,
        ext_hcos_professional_spec_fact_src.SPEC_CODE,
        ext_hcos_professional_spec_fact_src.SPEC_RANKING,
        ext_hcos_professional_spec_fact_src.SPEC_RANK_DESC,
        ext_hcos_professional_spec_fact_src.batch_id,
        ext_hcos_professional_spec_fact_src.row_id,
        ext_hcos_professional_spec_fact_src.update_ts
 FROM teva_ingestion.ext_hcos_professional_spec_fact_src
 ORDER BY ext_hcos_professional_spec_fact_src.batch_id
SEGMENTED BY hash(ext_hcos_professional_spec_fact_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_hcos_professional_specialty_src_super_b0 /*+basename(ext_hcos_professional_specialty_src_super)*/ 
(
 SPEC_CODE,
 SPEC_DESC,
 SPEC_SUB_GROUP_CODE,
 SPEC_SUB_GROUP_DESC,
 SPEC_GROUP_CODE,
 SPEC_GROUP_DESC,
 ALTERNATE_SUB_GROUP_CODE,
 ALTERNATE_SUB_GROUP_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_hcos_professional_specialty_src.SPEC_CODE,
        ext_hcos_professional_specialty_src.SPEC_DESC,
        ext_hcos_professional_specialty_src.SPEC_SUB_GROUP_CODE,
        ext_hcos_professional_specialty_src.SPEC_SUB_GROUP_DESC,
        ext_hcos_professional_specialty_src.SPEC_GROUP_CODE,
        ext_hcos_professional_specialty_src.SPEC_GROUP_DESC,
        ext_hcos_professional_specialty_src.ALTERNATE_SUB_GROUP_CODE,
        ext_hcos_professional_specialty_src.ALTERNATE_SUB_GROUP_DESC,
        ext_hcos_professional_specialty_src.batch_id,
        ext_hcos_professional_specialty_src.row_id,
        ext_hcos_professional_specialty_src.update_ts
 FROM teva_ingestion.ext_hcos_professional_specialty_src
 ORDER BY ext_hcos_professional_specialty_src.batch_id
SEGMENTED BY hash(ext_hcos_professional_specialty_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_hcos_provider_affiliation_fact_src_super_b0 /*+basename(ext_hcos_provider_affiliation_fact_src_super)*/ 
(
 IMS_ORG_ID,
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 AFFIL_TYPE_ID,
 DEA,
 AFFIL_IND,
 AFFIL_RANK,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_hcos_provider_affiliation_fact_src.IMS_ORG_ID,
        ext_hcos_provider_affiliation_fact_src.HCE_ID_PRFSNL,
        ext_hcos_provider_affiliation_fact_src.PROFESSIONAL_ID,
        ext_hcos_provider_affiliation_fact_src.AFFIL_TYPE_ID,
        ext_hcos_provider_affiliation_fact_src.DEA,
        ext_hcos_provider_affiliation_fact_src.AFFIL_IND,
        ext_hcos_provider_affiliation_fact_src.AFFIL_RANK,
        ext_hcos_provider_affiliation_fact_src.batch_id,
        ext_hcos_provider_affiliation_fact_src.row_id,
        ext_hcos_provider_affiliation_fact_src.update_ts
 FROM teva_ingestion.ext_hcos_provider_affiliation_fact_src
 ORDER BY ext_hcos_provider_affiliation_fact_src.batch_id
SEGMENTED BY hash(ext_hcos_provider_affiliation_fact_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_F60Q_src_super_b0 /*+basename(EXT_F60Q_src_super)*/ 
(
 "CLI#",
 SUFFIX,
 "TERR#",
 BLANK1,
 "OUTLET#",
 NAME,
 ADDRESS,
 CITY,
 STATE,
 RPT_TYPE,
 BLANK2,
 STATUS,
 BLANK3,
 SUBCAT,
 STATE_CODE,
 COUNTY_CODE,
 REC_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_F60Q_src."CLI#",
        EXT_F60Q_src.SUFFIX,
        EXT_F60Q_src."TERR#",
        EXT_F60Q_src.BLANK1,
        EXT_F60Q_src."OUTLET#",
        EXT_F60Q_src.NAME,
        EXT_F60Q_src.ADDRESS,
        EXT_F60Q_src.CITY,
        EXT_F60Q_src.STATE,
        EXT_F60Q_src.RPT_TYPE,
        EXT_F60Q_src.BLANK2,
        EXT_F60Q_src.STATUS,
        EXT_F60Q_src.BLANK3,
        EXT_F60Q_src.SUBCAT,
        EXT_F60Q_src.STATE_CODE,
        EXT_F60Q_src.COUNTY_CODE,
        EXT_F60Q_src.REC_TYPE,
        EXT_F60Q_src.batch_id,
        EXT_F60Q_src.row_id,
        EXT_F60Q_src.update_ts
 FROM teva_ingestion.EXT_F60Q_src
 ORDER BY EXT_F60Q_src.batch_id
SEGMENTED BY hash(EXT_F60Q_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_kc_zip_to_territory_src_super_b0 /*+basename(ext_kc_zip_to_territory_src_super)*/ 
(
 ZIP,
 CITY,
 STATE,
 TERRITORY_NUM,
 TERRITORY_NAME,
 AREA_NAME,
 REGION_NAME,
 SALES_FORCE_ID,
 ORGANIZATION_CODE,
 INACTIVE_FLAG,
 COMMENTS,
 MIRROR_FLAG,
 MIRROR_TERRITORY_NUM,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_kc_zip_to_territory_src.ZIP,
        ext_kc_zip_to_territory_src.CITY,
        ext_kc_zip_to_territory_src.STATE,
        ext_kc_zip_to_territory_src.TERRITORY_NUM,
        ext_kc_zip_to_territory_src.TERRITORY_NAME,
        ext_kc_zip_to_territory_src.AREA_NAME,
        ext_kc_zip_to_territory_src.REGION_NAME,
        ext_kc_zip_to_territory_src.SALES_FORCE_ID,
        ext_kc_zip_to_territory_src.ORGANIZATION_CODE,
        ext_kc_zip_to_territory_src.INACTIVE_FLAG,
        ext_kc_zip_to_territory_src.COMMENTS,
        ext_kc_zip_to_territory_src.MIRROR_FLAG,
        ext_kc_zip_to_territory_src.MIRROR_TERRITORY_NUM,
        ext_kc_zip_to_territory_src.batch_id,
        ext_kc_zip_to_territory_src.row_id,
        ext_kc_zip_to_territory_src.update_ts
 FROM teva_ingestion.ext_kc_zip_to_territory_src
 ORDER BY ext_kc_zip_to_territory_src.batch_id
SEGMENTED BY hash(ext_kc_zip_to_territory_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.c_bo_teva_sample_elig_src_super_b0 /*+basename(c_bo_teva_sample_elig_src_super)*/ 
(
 ROWID_OBJECT,
 CREATOR,
 CREATE_DATE,
 UPDATED_BY,
 LAST_UPDATE_DATE,
 CONSOLIDATION_IND,
 DELETED_IND,
 DELETED_BY,
 DELETED_DATE,
 LAST_ROWID_SYSTEM,
 DIRTY_IND,
 INTERACTION_ID,
 HUB_STATE_IND,
 CM_DIRTY_IND,
 TVCMID,
 CERTIFICATION_DESC,
 SLN,
 SLN_STATE,
 SLN_EXPIRATION_DATE,
 SLN_STATUS_CODE,
 SLN_STATUS_DESC,
 TEVA_SAMPLE_ELIG_FLAG,
 TEVA_SCHED_IV_ELIG_FLAG,
 TEVA_SCHED_V_ELIG_FLAG,
 PROFESSION_SHORT_DESC,
 TEVA_SPECIALTY_CODE,
 CERTIFICATION_CODE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT c_bo_teva_sample_elig_src.ROWID_OBJECT,
        c_bo_teva_sample_elig_src.CREATOR,
        c_bo_teva_sample_elig_src.CREATE_DATE,
        c_bo_teva_sample_elig_src.UPDATED_BY,
        c_bo_teva_sample_elig_src.LAST_UPDATE_DATE,
        c_bo_teva_sample_elig_src.CONSOLIDATION_IND,
        c_bo_teva_sample_elig_src.DELETED_IND,
        c_bo_teva_sample_elig_src.DELETED_BY,
        c_bo_teva_sample_elig_src.DELETED_DATE,
        c_bo_teva_sample_elig_src.LAST_ROWID_SYSTEM,
        c_bo_teva_sample_elig_src.DIRTY_IND,
        c_bo_teva_sample_elig_src.INTERACTION_ID,
        c_bo_teva_sample_elig_src.HUB_STATE_IND,
        c_bo_teva_sample_elig_src.CM_DIRTY_IND,
        c_bo_teva_sample_elig_src.TVCMID,
        c_bo_teva_sample_elig_src.CERTIFICATION_DESC,
        c_bo_teva_sample_elig_src.SLN,
        c_bo_teva_sample_elig_src.SLN_STATE,
        c_bo_teva_sample_elig_src.SLN_EXPIRATION_DATE,
        c_bo_teva_sample_elig_src.SLN_STATUS_CODE,
        c_bo_teva_sample_elig_src.SLN_STATUS_DESC,
        c_bo_teva_sample_elig_src.TEVA_SAMPLE_ELIG_FLAG,
        c_bo_teva_sample_elig_src.TEVA_SCHED_IV_ELIG_FLAG,
        c_bo_teva_sample_elig_src.TEVA_SCHED_V_ELIG_FLAG,
        c_bo_teva_sample_elig_src.PROFESSION_SHORT_DESC,
        c_bo_teva_sample_elig_src.TEVA_SPECIALTY_CODE,
        c_bo_teva_sample_elig_src.CERTIFICATION_CODE,
        c_bo_teva_sample_elig_src.batch_id,
        c_bo_teva_sample_elig_src.row_id,
        c_bo_teva_sample_elig_src.update_ts
 FROM teva_ingestion.c_bo_teva_sample_elig_src
 ORDER BY c_bo_teva_sample_elig_src.batch_id
SEGMENTED BY hash(c_bo_teva_sample_elig_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_MM_RAM_TO_STATE_src_super_b0 /*+basename(EXT_MM_RAM_TO_STATE_src_super)*/ 
(
 MM_RAM,
 STATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_MM_RAM_TO_STATE_src.MM_RAM,
        EXT_MM_RAM_TO_STATE_src.STATE,
        EXT_MM_RAM_TO_STATE_src.batch_id,
        EXT_MM_RAM_TO_STATE_src.row_id,
        EXT_MM_RAM_TO_STATE_src.update_ts
 FROM teva_ingestion.EXT_MM_RAM_TO_STATE_src
 ORDER BY EXT_MM_RAM_TO_STATE_src.batch_id
SEGMENTED BY hash(EXT_MM_RAM_TO_STATE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_CGD_src_super_b0 /*+basename(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src_super)*/ 
(
 TRANSACTION_TYPE,
 DATE_FILLED,
 DATE_WRITTEN,
 DAYS_SUPPLY,
 PRODUCT_SERVICE_CODE,
 DRUG_DESCRIPTION,
 NEW_REFILL_INDICATOR,
 QUANTITY_DISPENSED,
 REFILLS_AUTHORIZED,
 PATIENT_PAID_AMOUNT,
 PATIENT_PAID_AMOUNT_QUALIFIER,
 STATUS,
 OTHER_COVERAGE,
 GROUP_NUMBER,
 MEMBER_NUMBER,
 TIME_STAMP,
 PHARMACY_NABP,
 PHARMACY_NAME,
 PHARMACY_ADDRESS_LINE_1,
 PHARMACY_ADDRESS_LINE_2,
 PHARMACY_ADDRESS_LINE_3,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 DOCTOR_DEA,
 TOTAL_AMOUNT_AUTHORIZED,
 FEE,
 PROVIDER_REIMB,
 COPAY,
 COUPON_AMOUNT,
 DOCTOR_CITY,
 DOCTOR_STATE,
 DOCTOR_ZIP,
 CUSTOMER_PHYSICIAN_ID,
 DOCTOR_LAST_NAME,
 DOCTOR_FIRST_NAME,
 DOCTOR_MIDDLE_NAME,
 DOCTOR_TITLE_CODE,
 DOCTOR_ADDRESS_LINE_1,
 DOCTOR_ADDRESS_LINE_2,
 DOCTOR_ADDRESS_LINE_3,
 DOCTOR_STATE_LICENSE_NUMBER,
 SLN_STATE,
 SPECIALTY,
 PROGRAM_NAME,
 BRAND,
 PHARMACY_COMPANY,
 DOCTOR_NPI,
 LINKED_CARDS,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.TRANSACTION_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DATE_FILLED,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DATE_WRITTEN,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DAYS_SUPPLY,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PRODUCT_SERVICE_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DRUG_DESCRIPTION,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.NEW_REFILL_INDICATOR,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.QUANTITY_DISPENSED,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.REFILLS_AUTHORIZED,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PATIENT_PAID_AMOUNT,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PATIENT_PAID_AMOUNT_QUALIFIER,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.STATUS,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.OTHER_COVERAGE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.GROUP_NUMBER,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.MEMBER_NUMBER,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.TIME_STAMP,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_NABP,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ADDRESS_LINE_1,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ADDRESS_LINE_2,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ADDRESS_LINE_3,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_DEA,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.TOTAL_AMOUNT_AUTHORIZED,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.FEE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PROVIDER_REIMB,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.COPAY,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.COUPON_AMOUNT,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.CUSTOMER_PHYSICIAN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_LAST_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_FIRST_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_MIDDLE_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_TITLE_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ADDRESS_LINE_1,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ADDRESS_LINE_2,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ADDRESS_LINE_3,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_STATE_LICENSE_NUMBER,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.SLN_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.SPECIALTY,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PROGRAM_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.BRAND,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_COMPANY,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.LINKED_CARDS,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_CGD_src
 ORDER BY EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_diplomat_enrollment_src_super_b0 /*+basename(ext_diplomat_enrollment_src_super)*/ 
(
 PATIENT_ID,
 RX_RECEIVED_DATE,
 INSURANCE_INFORMATION,
 MOST_RECENT_CML_TREATMENT,
 DATE_OF_DISCONTINUATION,
 REASON_FOR_DISCONTINUATION,
 PHYSICIAN_LAST_NAME,
 PHYSICIAN_FIRST_NAME,
 PHYSICIAN_ADDRESS,
 PHYSICIAN_CITY,
 PHYSICIAN_STATE,
 PHYSICIAN_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_diplomat_enrollment_src.PATIENT_ID,
        ext_diplomat_enrollment_src.RX_RECEIVED_DATE,
        ext_diplomat_enrollment_src.INSURANCE_INFORMATION,
        ext_diplomat_enrollment_src.MOST_RECENT_CML_TREATMENT,
        ext_diplomat_enrollment_src.DATE_OF_DISCONTINUATION,
        ext_diplomat_enrollment_src.REASON_FOR_DISCONTINUATION,
        ext_diplomat_enrollment_src.PHYSICIAN_LAST_NAME,
        ext_diplomat_enrollment_src.PHYSICIAN_FIRST_NAME,
        ext_diplomat_enrollment_src.PHYSICIAN_ADDRESS,
        ext_diplomat_enrollment_src.PHYSICIAN_CITY,
        ext_diplomat_enrollment_src.PHYSICIAN_STATE,
        ext_diplomat_enrollment_src.PHYSICIAN_ZIP,
        ext_diplomat_enrollment_src.batch_id,
        ext_diplomat_enrollment_src.row_id,
        ext_diplomat_enrollment_src.update_ts
 FROM teva_ingestion.ext_diplomat_enrollment_src
 ORDER BY ext_diplomat_enrollment_src.batch_id
SEGMENTED BY hash(ext_diplomat_enrollment_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_WHOLESALE_867_src_super_b0 /*+basename(EXT_WHOLESALE_867_src_super)*/ 
(
 TRADING_PARTNER,
 PARTNER_DUNS,
 PARTNER_DUNS_4,
 PARTNER_DEA,
 PARTNER_HIN,
 PARTNER_SELLER_ASSIGNED_ID,
 PARTNER_BUYER_ASSIGNED_ID,
 CLIENT_NAME,
 ADDRESS1,
 ADDRESS2,
 CITY,
 STATE,
 ZIP,
 CLIENT_DUNS,
 CLIENT_DEA,
 CLIENT_HIN,
 CLIENT_SELLER_ASSIGNED_ID,
 CLIENT_BUYER_ASSIGNED_ID,
 NCPDP,
 NDC,
 ITEM,
 SHIP_DATE,
 QUANTITY_PURCHASED,
 QUANTITY_RETURNED,
 UNIT_PRICE,
 GROSS_AMOUNT,
 DROP_SHIPMENTS,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_WHOLESALE_867_src.TRADING_PARTNER,
        EXT_WHOLESALE_867_src.PARTNER_DUNS,
        EXT_WHOLESALE_867_src.PARTNER_DUNS_4,
        EXT_WHOLESALE_867_src.PARTNER_DEA,
        EXT_WHOLESALE_867_src.PARTNER_HIN,
        EXT_WHOLESALE_867_src.PARTNER_SELLER_ASSIGNED_ID,
        EXT_WHOLESALE_867_src.PARTNER_BUYER_ASSIGNED_ID,
        EXT_WHOLESALE_867_src.CLIENT_NAME,
        EXT_WHOLESALE_867_src.ADDRESS1,
        EXT_WHOLESALE_867_src.ADDRESS2,
        EXT_WHOLESALE_867_src.CITY,
        EXT_WHOLESALE_867_src.STATE,
        EXT_WHOLESALE_867_src.ZIP,
        EXT_WHOLESALE_867_src.CLIENT_DUNS,
        EXT_WHOLESALE_867_src.CLIENT_DEA,
        EXT_WHOLESALE_867_src.CLIENT_HIN,
        EXT_WHOLESALE_867_src.CLIENT_SELLER_ASSIGNED_ID,
        EXT_WHOLESALE_867_src.CLIENT_BUYER_ASSIGNED_ID,
        EXT_WHOLESALE_867_src.NCPDP,
        EXT_WHOLESALE_867_src.NDC,
        EXT_WHOLESALE_867_src.ITEM,
        EXT_WHOLESALE_867_src.SHIP_DATE,
        EXT_WHOLESALE_867_src.QUANTITY_PURCHASED,
        EXT_WHOLESALE_867_src.QUANTITY_RETURNED,
        EXT_WHOLESALE_867_src.UNIT_PRICE,
        EXT_WHOLESALE_867_src.GROSS_AMOUNT,
        EXT_WHOLESALE_867_src.DROP_SHIPMENTS,
        EXT_WHOLESALE_867_src.batch_id,
        EXT_WHOLESALE_867_src.row_id,
        EXT_WHOLESALE_867_src.update_ts
 FROM teva_ingestion.EXT_WHOLESALE_867_src
 ORDER BY EXT_WHOLESALE_867_src.batch_id
SEGMENTED BY hash(EXT_WHOLESALE_867_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_KEY_MESSAGE_VOD__C_src_super_b0 /*+basename(EXT_VV_KEY_MESSAGE_VOD__C_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 lastvieweddate,
 lastreferenceddate,
 description_vod__c,
 product_vod__c,
 product_strategy_vod__c,
 display_order_vod__c,
 active_vod__c,
 category_vod__c,
 vehicle_vod__c,
 clm_id_vod__c,
 custom_reaction_vod__c,
 slide_version_vod__c,
 language_vod__c,
 media_file_crc_vod__c,
 media_file_name_vod__c,
 media_file_size_vod__c,
 segment_vod__c,
 group_to_share_to__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_KEY_MESSAGE_VOD__C_src.id,
        EXT_VV_KEY_MESSAGE_VOD__C_src.ownerid,
        EXT_VV_KEY_MESSAGE_VOD__C_src.isdeleted,
        EXT_VV_KEY_MESSAGE_VOD__C_src.name,
        EXT_VV_KEY_MESSAGE_VOD__C_src.createddate,
        EXT_VV_KEY_MESSAGE_VOD__C_src.createdbyid,
        EXT_VV_KEY_MESSAGE_VOD__C_src.lastmodifieddate,
        EXT_VV_KEY_MESSAGE_VOD__C_src.lastmodifiedbyid,
        EXT_VV_KEY_MESSAGE_VOD__C_src.systemmodstamp,
        EXT_VV_KEY_MESSAGE_VOD__C_src.mayedit,
        EXT_VV_KEY_MESSAGE_VOD__C_src.islocked,
        EXT_VV_KEY_MESSAGE_VOD__C_src.lastvieweddate,
        EXT_VV_KEY_MESSAGE_VOD__C_src.lastreferenceddate,
        EXT_VV_KEY_MESSAGE_VOD__C_src.description_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.product_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.product_strategy_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.display_order_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.active_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.category_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.vehicle_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.clm_id_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.custom_reaction_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.slide_version_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.language_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.media_file_crc_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.media_file_name_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.media_file_size_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.segment_vod__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.group_to_share_to__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.batch_id,
        EXT_VV_KEY_MESSAGE_VOD__C_src.row_id,
        EXT_VV_KEY_MESSAGE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_KEY_MESSAGE_VOD__C_src
 ORDER BY EXT_VV_KEY_MESSAGE_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_KEY_MESSAGE_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_PREDOMINANT_src_super_b0 /*+basename(EXT_FTF_PREDOMINANT_src_super)*/ 
(
 IMS_PLAN_ID,
 IMS_PLAN_NAME,
 FF_PLAN_ID,
 FF_PLAN_NAME,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_PREDOMINANT_src.IMS_PLAN_ID,
        EXT_FTF_PREDOMINANT_src.IMS_PLAN_NAME,
        EXT_FTF_PREDOMINANT_src.FF_PLAN_ID,
        EXT_FTF_PREDOMINANT_src.FF_PLAN_NAME,
        EXT_FTF_PREDOMINANT_src.batch_id,
        EXT_FTF_PREDOMINANT_src.row_id,
        EXT_FTF_PREDOMINANT_src.update_ts
 FROM teva_ingestion.EXT_FTF_PREDOMINANT_src
 ORDER BY EXT_FTF_PREDOMINANT_src.batch_id
SEGMENTED BY hash(EXT_FTF_PREDOMINANT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_SALES_QUOTAS_src_super_b0 /*+basename(EXT_ONC_SALES_QUOTAS_src_super)*/ 
(
 TIME_PERIOD,
 SALES_FORCE_ID,
 TERRITORY_NUM,
 PRODUCT_NAME,
 QUOTA_QTY,
 QUOTA_DOL,
 QUOTA_STRENGTH_UNIT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_SALES_QUOTAS_src.TIME_PERIOD,
        EXT_ONC_SALES_QUOTAS_src.SALES_FORCE_ID,
        EXT_ONC_SALES_QUOTAS_src.TERRITORY_NUM,
        EXT_ONC_SALES_QUOTAS_src.PRODUCT_NAME,
        EXT_ONC_SALES_QUOTAS_src.QUOTA_QTY,
        EXT_ONC_SALES_QUOTAS_src.QUOTA_DOL,
        EXT_ONC_SALES_QUOTAS_src.QUOTA_STRENGTH_UNIT,
        EXT_ONC_SALES_QUOTAS_src.batch_id,
        EXT_ONC_SALES_QUOTAS_src.row_id,
        EXT_ONC_SALES_QUOTAS_src.update_ts
 FROM teva_ingestion.EXT_ONC_SALES_QUOTAS_src
 ORDER BY EXT_ONC_SALES_QUOTAS_src.batch_id
SEGMENTED BY hash(EXT_ONC_SALES_QUOTAS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_EVENT_COUNT_src_super_b0 /*+basename(EXT_AHM_EVENT_COUNT_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 EVENT_NUMBER,
 ATTENDEE_CATEGORY_CODE,
 ATTENDEE_CATEGORY,
 CNT,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_EVENT_COUNT_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_EVENT_COUNT_src.EVENT_NUMBER,
        EXT_AHM_EVENT_COUNT_src.ATTENDEE_CATEGORY_CODE,
        EXT_AHM_EVENT_COUNT_src.ATTENDEE_CATEGORY,
        EXT_AHM_EVENT_COUNT_src.CNT,
        EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_1,
        EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_2,
        EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_3,
        EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_4,
        EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_5,
        EXT_AHM_EVENT_COUNT_src.REC_STAT_CD,
        EXT_AHM_EVENT_COUNT_src.batch_id,
        EXT_AHM_EVENT_COUNT_src.row_id,
        EXT_AHM_EVENT_COUNT_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_COUNT_src
 ORDER BY EXT_AHM_EVENT_COUNT_src.batch_id
SEGMENTED BY hash(EXT_AHM_EVENT_COUNT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_EVENT_src_super_b0 /*+basename(EXT_AHM_EVENT_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 EVENT_NUMBER,
 PARENT_EVENT_NUMBER,
 EVENT_NAME,
 EVENT_STATUS_CODE,
 EVENT_STATUS_DESCRIPTION,
 EVENT_STATUS_CHANGE_DATE,
 EVENT_START_DATE,
 EVENT_END_DATE,
 EVENT_TIME_ZONE,
 FUNDING_SOURCE,
 EVENT_TYPE,
 EVENT_TYPE_DESCRIPTION,
 EVENT_FORMAT,
 EVENT_LOCATION,
 PENDING_MGMNT_APPROVAL_DATE,
 EVENT_APPROVAL_DATE,
 EVENT_APPROVER_ID,
 EVENT_SCHEDULE_DATE,
 ATTENDEE_CLOSEOUT_DATE,
 FINANCIAL_CLOSEOUT_DATE,
 CANCELLATION_DATE,
 CANCELLATION_REASON,
 CANCELLATION_SOURCE,
 EVENT_VENUE_MIN_CNT_REQ_IND,
 EVENT_VENUE_MIN_COUNT,
 ESTIMATED_ATTENDANCE,
 VENUE_ID,
 VENUE_FULL_NAME,
 VENUE_ADDRESS_LINE_1,
 VENUE_ADDRESS_LINE_2,
 VENUE_ADDRESS_LINE_3,
 VENUE_ADDRESS_LINE_4,
 VENUE_CITY,
 VENUE_STATE_PROVINCE,
 VENUE_POSTAL_CODE,
 VENUE_POSTAL_EXTENDED_CODE,
 VENUE_COUNTRY_CODE,
 VENUE_CONTACT,
 VENUE_PHONE,
 VENUE_FAX,
 VENUE_EMAIL,
 TRADE_SECRET_INDICATOR,
 TRADE_SECRET_REASON,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_EVENT_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_EVENT_src.EVENT_NUMBER,
        EXT_AHM_EVENT_src.PARENT_EVENT_NUMBER,
        EXT_AHM_EVENT_src.EVENT_NAME,
        EXT_AHM_EVENT_src.EVENT_STATUS_CODE,
        EXT_AHM_EVENT_src.EVENT_STATUS_DESCRIPTION,
        EXT_AHM_EVENT_src.EVENT_STATUS_CHANGE_DATE,
        EXT_AHM_EVENT_src.EVENT_START_DATE,
        EXT_AHM_EVENT_src.EVENT_END_DATE,
        EXT_AHM_EVENT_src.EVENT_TIME_ZONE,
        EXT_AHM_EVENT_src.FUNDING_SOURCE,
        EXT_AHM_EVENT_src.EVENT_TYPE,
        EXT_AHM_EVENT_src.EVENT_TYPE_DESCRIPTION,
        EXT_AHM_EVENT_src.EVENT_FORMAT,
        EXT_AHM_EVENT_src.EVENT_LOCATION,
        EXT_AHM_EVENT_src.PENDING_MGMNT_APPROVAL_DATE,
        EXT_AHM_EVENT_src.EVENT_APPROVAL_DATE,
        EXT_AHM_EVENT_src.EVENT_APPROVER_ID,
        EXT_AHM_EVENT_src.EVENT_SCHEDULE_DATE,
        EXT_AHM_EVENT_src.ATTENDEE_CLOSEOUT_DATE,
        EXT_AHM_EVENT_src.FINANCIAL_CLOSEOUT_DATE,
        EXT_AHM_EVENT_src.CANCELLATION_DATE,
        EXT_AHM_EVENT_src.CANCELLATION_REASON,
        EXT_AHM_EVENT_src.CANCELLATION_SOURCE,
        EXT_AHM_EVENT_src.EVENT_VENUE_MIN_CNT_REQ_IND,
        EXT_AHM_EVENT_src.EVENT_VENUE_MIN_COUNT,
        EXT_AHM_EVENT_src.ESTIMATED_ATTENDANCE,
        EXT_AHM_EVENT_src.VENUE_ID,
        EXT_AHM_EVENT_src.VENUE_FULL_NAME,
        EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_1,
        EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_2,
        EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_3,
        EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_4,
        EXT_AHM_EVENT_src.VENUE_CITY,
        EXT_AHM_EVENT_src.VENUE_STATE_PROVINCE,
        EXT_AHM_EVENT_src.VENUE_POSTAL_CODE,
        EXT_AHM_EVENT_src.VENUE_POSTAL_EXTENDED_CODE,
        EXT_AHM_EVENT_src.VENUE_COUNTRY_CODE,
        EXT_AHM_EVENT_src.VENUE_CONTACT,
        EXT_AHM_EVENT_src.VENUE_PHONE,
        EXT_AHM_EVENT_src.VENUE_FAX,
        EXT_AHM_EVENT_src.VENUE_EMAIL,
        EXT_AHM_EVENT_src.TRADE_SECRET_INDICATOR,
        EXT_AHM_EVENT_src.TRADE_SECRET_REASON,
        EXT_AHM_EVENT_src.CUSTOM_FIELD_1,
        EXT_AHM_EVENT_src.CUSTOM_FIELD_2,
        EXT_AHM_EVENT_src.CUSTOM_FIELD_3,
        EXT_AHM_EVENT_src.CUSTOM_FIELD_4,
        EXT_AHM_EVENT_src.CUSTOM_FIELD_5,
        EXT_AHM_EVENT_src.REC_STAT_CD,
        EXT_AHM_EVENT_src.batch_id,
        EXT_AHM_EVENT_src.row_id,
        EXT_AHM_EVENT_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_src
 ORDER BY EXT_AHM_EVENT_src.batch_id
SEGMENTED BY hash(EXT_AHM_EVENT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IDS_CALL2_SAMPLE_VOD__C_src_super_b0 /*+basename(EXT_IDS_CALL2_SAMPLE_VOD__C_src_super)*/ 
(
 ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IDS_CALL2_SAMPLE_VOD__C_src.ID,
        EXT_IDS_CALL2_SAMPLE_VOD__C_src.batch_id,
        EXT_IDS_CALL2_SAMPLE_VOD__C_src.row_id,
        EXT_IDS_CALL2_SAMPLE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_SAMPLE_VOD__C_src
 ORDER BY EXT_IDS_CALL2_SAMPLE_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_IDS_CALL2_SAMPLE_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src_super_b0 /*+basename(EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src_super)*/ 
(
 ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.ID,
        EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.batch_id,
        EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.row_id,
        EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src
 ORDER BY EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TB_CB_ACCOUNTS_src_super_b0 /*+basename(EXT_TB_CB_ACCOUNTS_src_super)*/ 
(
 ACCOUNT_ID,
 LOCATION_ID,
 DEA_NUMBER,
 END_CUSTOMER,
 ADDRESS_1,
 ADDRESS_2,
 CITY,
 STATE,
 ZIP,
 CONTRACT_TITLE,
 CONTRACT_ID,
 WHOLESALER_NAME,
 HIN,
 CONTRACT_ALIAS,
 WHOLESALER_DEA,
 CLASS_OF_TRADE,
 COT_SOURCE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TB_CB_ACCOUNTS_src.ACCOUNT_ID,
        EXT_TB_CB_ACCOUNTS_src.LOCATION_ID,
        EXT_TB_CB_ACCOUNTS_src.DEA_NUMBER,
        EXT_TB_CB_ACCOUNTS_src.END_CUSTOMER,
        EXT_TB_CB_ACCOUNTS_src.ADDRESS_1,
        EXT_TB_CB_ACCOUNTS_src.ADDRESS_2,
        EXT_TB_CB_ACCOUNTS_src.CITY,
        EXT_TB_CB_ACCOUNTS_src.STATE,
        EXT_TB_CB_ACCOUNTS_src.ZIP,
        EXT_TB_CB_ACCOUNTS_src.CONTRACT_TITLE,
        EXT_TB_CB_ACCOUNTS_src.CONTRACT_ID,
        EXT_TB_CB_ACCOUNTS_src.WHOLESALER_NAME,
        EXT_TB_CB_ACCOUNTS_src.HIN,
        EXT_TB_CB_ACCOUNTS_src.CONTRACT_ALIAS,
        EXT_TB_CB_ACCOUNTS_src.WHOLESALER_DEA,
        EXT_TB_CB_ACCOUNTS_src.CLASS_OF_TRADE,
        EXT_TB_CB_ACCOUNTS_src.COT_SOURCE,
        EXT_TB_CB_ACCOUNTS_src.batch_id,
        EXT_TB_CB_ACCOUNTS_src.row_id,
        EXT_TB_CB_ACCOUNTS_src.update_ts
 FROM teva_ingestion.EXT_TB_CB_ACCOUNTS_src
 ORDER BY EXT_TB_CB_ACCOUNTS_src.batch_id
SEGMENTED BY hash(EXT_TB_CB_ACCOUNTS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZIP_TO_TERR_src_super_b0 /*+basename(EXT_ZIP_TO_TERR_src_super)*/ 
(
 zip,
 state,
 territory_1_id,
 territory_name,
 area_name,
 region_name,
 mirror_flag,
 territory_2_id,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ZIP_TO_TERR_src.zip,
        EXT_ZIP_TO_TERR_src.state,
        EXT_ZIP_TO_TERR_src.territory_1_id,
        EXT_ZIP_TO_TERR_src.territory_name,
        EXT_ZIP_TO_TERR_src.area_name,
        EXT_ZIP_TO_TERR_src.region_name,
        EXT_ZIP_TO_TERR_src.mirror_flag,
        EXT_ZIP_TO_TERR_src.territory_2_id,
        EXT_ZIP_TO_TERR_src.batch_id,
        EXT_ZIP_TO_TERR_src.row_id,
        EXT_ZIP_TO_TERR_src.update_ts
 FROM teva_ingestion.EXT_ZIP_TO_TERR_src
 ORDER BY EXT_ZIP_TO_TERR_src.batch_id
SEGMENTED BY hash(EXT_ZIP_TO_TERR_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PSR_REPORT_src_super_b0 /*+basename(EXT_PSR_REPORT_src_super)*/ 
(
 prescriber_npi,
 prescriber_name,
 prescriber_state,
 product,
 month,
 indication,
 in_progress,
 completed,
 cancelled,
 psr_count,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PSR_REPORT_src.prescriber_npi,
        EXT_PSR_REPORT_src.prescriber_name,
        EXT_PSR_REPORT_src.prescriber_state,
        EXT_PSR_REPORT_src.product,
        EXT_PSR_REPORT_src.month,
        EXT_PSR_REPORT_src.indication,
        EXT_PSR_REPORT_src.in_progress,
        EXT_PSR_REPORT_src.completed,
        EXT_PSR_REPORT_src.cancelled,
        EXT_PSR_REPORT_src.psr_count,
        EXT_PSR_REPORT_src.batch_id,
        EXT_PSR_REPORT_src.row_id,
        EXT_PSR_REPORT_src.update_ts
 FROM teva_ingestion.EXT_PSR_REPORT_src
 ORDER BY EXT_PSR_REPORT_src.batch_id
SEGMENTED BY hash(EXT_PSR_REPORT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_SD809_TRANSACTION_src_super_b0 /*+basename(EXT_IMS_SD809_TRANSACTION_src_super)*/ 
(
 patient_yob,
 patient_gender,
 ims_surrogate_patient_id,
 product_ndc,
 product_name,
 product_strength,
 unit_of_measure,
 extended_wac_price,
 transaction_id,
 patient_status_date,
 patient_status_,
 patient_sub_status,
 specialty_pharmacy_patient_or_case_id,
 primary_icd_9,
 primary_icd_10,
 script_reciept_date,
 primary_appeal_status,
 primary_copay_type,
 primary_deductible,
 primary_pa_required,
 primary_copay_amount,
 primary_payer_name,
 primary_plan_name,
 primary_payer_type,
 primary_plan_type,
 primary_payer_reject_reason_code,
 primary_reimbursement_status,
 primary_reimbursement_status_date,
 primary_step_therapy_required,
 secondary_copay_type,
 secondary_deductible,
 secondary_pa_required,
 secondary_copay_amount,
 secondary_payer_name,
 secondary_plan_name,
 secondary_payer_type,
 secondary_plan_type,
 secondary_payer_reject_reason_code,
 secondary_step_therapy_required,
 ncpdp_number,
 pharmacy_name,
 pharmacy_zip,
 prescribing_physician_first_name,
 prescribing_physician_last_name,
 prescribing_physician_middle_initial,
 prescribing_physician_dea_number,
 prescribing_physician_me_number,
 prescribing_physician_npi_number,
 prescribing_physician_address_1,
 prescribing_physician_address_2,
 prescribing_physician_city,
 prescribing_physician_state,
 prescribing_physician_zip,
 number_of_fills_prescribed,
 number_of_refills_remaining,
 fill_type,
 rx_date,
 rx_number,
 carrier,
 date_of_drug_receipt,
 initial_ship_date,
 quantity_shipped,
 out_of_pocket_cost,
 shipment_date,
 product_lot_number,
 program_dispense_type,
 days_supply_dispensed,
 primary_payer_pa_outcome,
 secondary_payer_pa_outcome,
 rx_communication_method,
 tertiary_icd_10,
 ims_file_id,
 ims_transaction_id,
 ims_cycle_date,
 ims_supplier_id,
 ims_supplier_name,
 ims_transaction_type_code,
 ims_duplicate_transaction,
 ims_prescriber_id,
 ims_phys_first_name,
 ims_phys_last_name,
 ims_phys_address,
 ims_phys_city,
 ims_phys_state,
 ims_phys_zip,
 ims_phys_specialty,
 ims_product_id,
 ims_product_description,
 ims_outlet_id,
 ims_outlet_name,
 ims_outlet_address,
 ims_outlet_city,
 ims_outlet_state,
 ims_outlet_zip,
 ims_outlet_subcategory,
 ims_plan_id,
 ims_plan_name,
 ims_plan_model,
 primary_icd10_grouping,
 primary_icd10_grouping_reason_code,
 secondary_icd10_grouping,
 secondary_icd10_grouping_reason_code,
 ims_ndc_flag,
 ims_dispensed_date_flag,
 ims_dispensed_quantity_flag,
 ims_cost_flag,
 ims_overall_flag,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_SD809_TRANSACTION_src.patient_yob,
        EXT_IMS_SD809_TRANSACTION_src.patient_gender,
        EXT_IMS_SD809_TRANSACTION_src.ims_surrogate_patient_id,
        EXT_IMS_SD809_TRANSACTION_src.product_ndc,
        EXT_IMS_SD809_TRANSACTION_src.product_name,
        EXT_IMS_SD809_TRANSACTION_src.product_strength,
        EXT_IMS_SD809_TRANSACTION_src.unit_of_measure,
        EXT_IMS_SD809_TRANSACTION_src.extended_wac_price,
        EXT_IMS_SD809_TRANSACTION_src.transaction_id,
        EXT_IMS_SD809_TRANSACTION_src.patient_status_date,
        EXT_IMS_SD809_TRANSACTION_src.patient_status_,
        EXT_IMS_SD809_TRANSACTION_src.patient_sub_status,
        EXT_IMS_SD809_TRANSACTION_src.specialty_pharmacy_patient_or_case_id,
        EXT_IMS_SD809_TRANSACTION_src.primary_icd_9,
        EXT_IMS_SD809_TRANSACTION_src.primary_icd_10,
        EXT_IMS_SD809_TRANSACTION_src.script_reciept_date,
        EXT_IMS_SD809_TRANSACTION_src.primary_appeal_status,
        EXT_IMS_SD809_TRANSACTION_src.primary_copay_type,
        EXT_IMS_SD809_TRANSACTION_src.primary_deductible,
        EXT_IMS_SD809_TRANSACTION_src.primary_pa_required,
        EXT_IMS_SD809_TRANSACTION_src.primary_copay_amount,
        EXT_IMS_SD809_TRANSACTION_src.primary_payer_name,
        EXT_IMS_SD809_TRANSACTION_src.primary_plan_name,
        EXT_IMS_SD809_TRANSACTION_src.primary_payer_type,
        EXT_IMS_SD809_TRANSACTION_src.primary_plan_type,
        EXT_IMS_SD809_TRANSACTION_src.primary_payer_reject_reason_code,
        EXT_IMS_SD809_TRANSACTION_src.primary_reimbursement_status,
        EXT_IMS_SD809_TRANSACTION_src.primary_reimbursement_status_date,
        EXT_IMS_SD809_TRANSACTION_src.primary_step_therapy_required,
        EXT_IMS_SD809_TRANSACTION_src.secondary_copay_type,
        EXT_IMS_SD809_TRANSACTION_src.secondary_deductible,
        EXT_IMS_SD809_TRANSACTION_src.secondary_pa_required,
        EXT_IMS_SD809_TRANSACTION_src.secondary_copay_amount,
        EXT_IMS_SD809_TRANSACTION_src.secondary_payer_name,
        EXT_IMS_SD809_TRANSACTION_src.secondary_plan_name,
        EXT_IMS_SD809_TRANSACTION_src.secondary_payer_type,
        EXT_IMS_SD809_TRANSACTION_src.secondary_plan_type,
        EXT_IMS_SD809_TRANSACTION_src.secondary_payer_reject_reason_code,
        EXT_IMS_SD809_TRANSACTION_src.secondary_step_therapy_required,
        EXT_IMS_SD809_TRANSACTION_src.ncpdp_number,
        EXT_IMS_SD809_TRANSACTION_src.pharmacy_name,
        EXT_IMS_SD809_TRANSACTION_src.pharmacy_zip,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_first_name,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_last_name,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_middle_initial,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_dea_number,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_me_number,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_npi_number,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_address_1,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_address_2,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_city,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_state,
        EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_zip,
        EXT_IMS_SD809_TRANSACTION_src.number_of_fills_prescribed,
        EXT_IMS_SD809_TRANSACTION_src.number_of_refills_remaining,
        EXT_IMS_SD809_TRANSACTION_src.fill_type,
        EXT_IMS_SD809_TRANSACTION_src.rx_date,
        EXT_IMS_SD809_TRANSACTION_src.rx_number,
        EXT_IMS_SD809_TRANSACTION_src.carrier,
        EXT_IMS_SD809_TRANSACTION_src.date_of_drug_receipt,
        EXT_IMS_SD809_TRANSACTION_src.initial_ship_date,
        EXT_IMS_SD809_TRANSACTION_src.quantity_shipped,
        EXT_IMS_SD809_TRANSACTION_src.out_of_pocket_cost,
        EXT_IMS_SD809_TRANSACTION_src.shipment_date,
        EXT_IMS_SD809_TRANSACTION_src.product_lot_number,
        EXT_IMS_SD809_TRANSACTION_src.program_dispense_type,
        EXT_IMS_SD809_TRANSACTION_src.days_supply_dispensed,
        EXT_IMS_SD809_TRANSACTION_src.primary_payer_pa_outcome,
        EXT_IMS_SD809_TRANSACTION_src.secondary_payer_pa_outcome,
        EXT_IMS_SD809_TRANSACTION_src.rx_communication_method,
        EXT_IMS_SD809_TRANSACTION_src.tertiary_icd_10,
        EXT_IMS_SD809_TRANSACTION_src.ims_file_id,
        EXT_IMS_SD809_TRANSACTION_src.ims_transaction_id,
        EXT_IMS_SD809_TRANSACTION_src.ims_cycle_date,
        EXT_IMS_SD809_TRANSACTION_src.ims_supplier_id,
        EXT_IMS_SD809_TRANSACTION_src.ims_supplier_name,
        EXT_IMS_SD809_TRANSACTION_src.ims_transaction_type_code,
        EXT_IMS_SD809_TRANSACTION_src.ims_duplicate_transaction,
        EXT_IMS_SD809_TRANSACTION_src.ims_prescriber_id,
        EXT_IMS_SD809_TRANSACTION_src.ims_phys_first_name,
        EXT_IMS_SD809_TRANSACTION_src.ims_phys_last_name,
        EXT_IMS_SD809_TRANSACTION_src.ims_phys_address,
        EXT_IMS_SD809_TRANSACTION_src.ims_phys_city,
        EXT_IMS_SD809_TRANSACTION_src.ims_phys_state,
        EXT_IMS_SD809_TRANSACTION_src.ims_phys_zip,
        EXT_IMS_SD809_TRANSACTION_src.ims_phys_specialty,
        EXT_IMS_SD809_TRANSACTION_src.ims_product_id,
        EXT_IMS_SD809_TRANSACTION_src.ims_product_description,
        EXT_IMS_SD809_TRANSACTION_src.ims_outlet_id,
        EXT_IMS_SD809_TRANSACTION_src.ims_outlet_name,
        EXT_IMS_SD809_TRANSACTION_src.ims_outlet_address,
        EXT_IMS_SD809_TRANSACTION_src.ims_outlet_city,
        EXT_IMS_SD809_TRANSACTION_src.ims_outlet_state,
        EXT_IMS_SD809_TRANSACTION_src.ims_outlet_zip,
        EXT_IMS_SD809_TRANSACTION_src.ims_outlet_subcategory,
        EXT_IMS_SD809_TRANSACTION_src.ims_plan_id,
        EXT_IMS_SD809_TRANSACTION_src.ims_plan_name,
        EXT_IMS_SD809_TRANSACTION_src.ims_plan_model,
        EXT_IMS_SD809_TRANSACTION_src.primary_icd10_grouping,
        EXT_IMS_SD809_TRANSACTION_src.primary_icd10_grouping_reason_code,
        EXT_IMS_SD809_TRANSACTION_src.secondary_icd10_grouping,
        EXT_IMS_SD809_TRANSACTION_src.secondary_icd10_grouping_reason_code,
        EXT_IMS_SD809_TRANSACTION_src.ims_ndc_flag,
        EXT_IMS_SD809_TRANSACTION_src.ims_dispensed_date_flag,
        EXT_IMS_SD809_TRANSACTION_src.ims_dispensed_quantity_flag,
        EXT_IMS_SD809_TRANSACTION_src.ims_cost_flag,
        EXT_IMS_SD809_TRANSACTION_src.ims_overall_flag,
        EXT_IMS_SD809_TRANSACTION_src.batch_id,
        EXT_IMS_SD809_TRANSACTION_src.row_id,
        EXT_IMS_SD809_TRANSACTION_src.update_ts
 FROM teva_ingestion.EXT_IMS_SD809_TRANSACTION_src
 ORDER BY EXT_IMS_SD809_TRANSACTION_src.batch_id
SEGMENTED BY hash(EXT_IMS_SD809_TRANSACTION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_MERGES_src_super_b0 /*+basename(MDM_MERGES_src_super)*/ 
(
 previous_tvcmid,
 current_tvcmid,
 merge_cycle,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_MERGES_src.previous_tvcmid,
        MDM_MERGES_src.current_tvcmid,
        MDM_MERGES_src.merge_cycle,
        MDM_MERGES_src.batch_id,
        MDM_MERGES_src.row_id,
        MDM_MERGES_src.update_ts
 FROM teva_ingestion.MDM_MERGES_src
 ORDER BY MDM_MERGES_src.batch_id
SEGMENTED BY hash(MDM_MERGES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ACTIVITY_src_super_b0 /*+basename(EXT_ACTIVITY_src_super)*/ 
(
 ACTIVITY_ID,
 FEDERATION_ID,
 CONTACT,
 SOURCE_NAME,
 "DATETIME",
 TRACKBACK_ID,
 PREVIOUS_ACTIVITY,
 LEVEL_NAME,
 ACTIVITY_ROLE_NAME,
 TYPE_NAME,
 NATIVE_TYPE,
 DETAILS,
 BASKET_ID,
 WEB_URL,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ACTIVITY_src.ACTIVITY_ID,
        EXT_ACTIVITY_src.FEDERATION_ID,
        EXT_ACTIVITY_src.CONTACT,
        EXT_ACTIVITY_src.SOURCE_NAME,
        EXT_ACTIVITY_src."DATETIME",
        EXT_ACTIVITY_src.TRACKBACK_ID,
        EXT_ACTIVITY_src.PREVIOUS_ACTIVITY,
        EXT_ACTIVITY_src.LEVEL_NAME,
        EXT_ACTIVITY_src.ACTIVITY_ROLE_NAME,
        EXT_ACTIVITY_src.TYPE_NAME,
        EXT_ACTIVITY_src.NATIVE_TYPE,
        EXT_ACTIVITY_src.DETAILS,
        EXT_ACTIVITY_src.BASKET_ID,
        EXT_ACTIVITY_src.WEB_URL,
        EXT_ACTIVITY_src.batch_id,
        EXT_ACTIVITY_src.row_id,
        EXT_ACTIVITY_src.update_ts
 FROM teva_ingestion.EXT_ACTIVITY_src
 ORDER BY EXT_ACTIVITY_src.batch_id
SEGMENTED BY hash(EXT_ACTIVITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_tw_biologics_missing_info_src_super_b0 /*+basename(ext_tw_biologics_missing_info_src_super)*/ 
(
 FAX_DATE,
 PH_STATE,
 PH_CITY,
 PHYSICIAN,
 PH_NPI,
 MRM,
 PH_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_tw_biologics_missing_info_src.FAX_DATE,
        ext_tw_biologics_missing_info_src.PH_STATE,
        ext_tw_biologics_missing_info_src.PH_CITY,
        ext_tw_biologics_missing_info_src.PHYSICIAN,
        ext_tw_biologics_missing_info_src.PH_NPI,
        ext_tw_biologics_missing_info_src.MRM,
        ext_tw_biologics_missing_info_src.PH_ZIP,
        ext_tw_biologics_missing_info_src.batch_id,
        ext_tw_biologics_missing_info_src.row_id,
        ext_tw_biologics_missing_info_src.update_ts
 FROM teva_ingestion.ext_tw_biologics_missing_info_src
 ORDER BY ext_tw_biologics_missing_info_src.batch_id
SEGMENTED BY hash(ext_tw_biologics_missing_info_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src_super_b0 /*+basename(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 lastvieweddate,
 lastreferenceddate,
 assignment_end_date__c,
 assignment_start_date__c,
 assignment_status__c,
 assignment_type__c,
 global_employee_id__c,
 rms_territory_name__c,
 rms_territory_number__c,
 employee__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.ownerid,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.isdeleted,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.name,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.createddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.createdbyid,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastmodifieddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastmodifiedbyid,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.systemmodstamp,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastactivitydate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastvieweddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastreferenceddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_end_date__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_start_date__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_status__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_type__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.global_employee_id__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.rms_territory_name__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.rms_territory_number__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.employee__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.batch_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.row_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src
 ORDER BY EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.batch_id
SEGMENTED BY hash(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_ACCOUNT_TARGETS_src_super_b0 /*+basename(EXT_ONC_ACCOUNT_TARGETS_src_super)*/ 
(
 TVCMID,
 SALES_FORCE_ID,
 PRODUCT_NAME,
 ACCT_DEMO_ID,
 IMS_OUTLET_CODE,
 TARGET_TYPE,
 TARGET_VALUE,
 APPLIES_FROM_DATE,
 APPLIES_TO_DATE,
 ACTIVE_IND,
 SYSTEM_START_DATE,
 SYSTEM_END_DATE,
 END_REASON,
 VEEVA_ACCOUNT_ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_ACCOUNT_TARGETS_src.TVCMID,
        EXT_ONC_ACCOUNT_TARGETS_src.SALES_FORCE_ID,
        EXT_ONC_ACCOUNT_TARGETS_src.PRODUCT_NAME,
        EXT_ONC_ACCOUNT_TARGETS_src.ACCT_DEMO_ID,
        EXT_ONC_ACCOUNT_TARGETS_src.IMS_OUTLET_CODE,
        EXT_ONC_ACCOUNT_TARGETS_src.TARGET_TYPE,
        EXT_ONC_ACCOUNT_TARGETS_src.TARGET_VALUE,
        EXT_ONC_ACCOUNT_TARGETS_src.APPLIES_FROM_DATE,
        EXT_ONC_ACCOUNT_TARGETS_src.APPLIES_TO_DATE,
        EXT_ONC_ACCOUNT_TARGETS_src.ACTIVE_IND,
        EXT_ONC_ACCOUNT_TARGETS_src.SYSTEM_START_DATE,
        EXT_ONC_ACCOUNT_TARGETS_src.SYSTEM_END_DATE,
        EXT_ONC_ACCOUNT_TARGETS_src.END_REASON,
        EXT_ONC_ACCOUNT_TARGETS_src.VEEVA_ACCOUNT_ID,
        EXT_ONC_ACCOUNT_TARGETS_src.batch_id,
        EXT_ONC_ACCOUNT_TARGETS_src.row_id,
        EXT_ONC_ACCOUNT_TARGETS_src.update_ts
 FROM teva_ingestion.EXT_ONC_ACCOUNT_TARGETS_src
 ORDER BY EXT_ONC_ACCOUNT_TARGETS_src.batch_id
SEGMENTED BY hash(EXT_ONC_ACCOUNT_TARGETS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src_super_b0 /*+basename(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 lastvieweddate,
 lastreferenceddate,
 birth_month_day__c,
 business_mobile__c,
 business_phone__c,
 cost_center_name__c,
 demotion__c,
 ec_creation_date__c,
 ec_last_modified_date__c,
 ec_territory_id__c,
 email_address__c,
 employee_status__c,
 first_name__c,
 full_part_time__c,
 global_employee_id__c,
 hire_date__c,
 home_address_1__c,
 home_address_2__c,
 home_address_3__c,
 home_city_municipality__c,
 home_country__c,
 home_phone__c,
 home_postal_code__c,
 home_state_province__c,
 job_code__c,
 job_grade__c,
 loa_end_date__c,
 loa_start_date__c,
 last_name__c,
 local_employee_id__c,
 mailing_address_1__c,
 mailing_address_2__c,
 mailing_address_3__c,
 mailing_city__c,
 mailing_country__c,
 mailing_postal_code__c,
 mailing_state__c,
 middle_name__c,
 name_suffix__c,
 oracle_string__c,
 payroll_id__c,
 position_title__c,
 preferred_name__c,
 promotion__c,
 reg_contract__c,
 sample_eligibility_indicator__c,
 sample_shippingstorage_address_1__c,
 sample_shippingstorage_address_2__c,
 sample_shippingstorage_address_3__c,
 sample_shippingstorage_address_status__c,
 sample_shippingstorage_city__c,
 sample_shippingstorage_country__c,
 sample_shippingstorage_postal_code__c,
 sample_shippingstorage_state__c,
 shipping_address_1__c,
 shipping_address_2__c,
 shipping_address_3__c,
 shipping_city__c,
 shipping_country__c,
 shipping_postal_code__c,
 shipping_state__c,
 supervisor_global_employee_id__c,
 transfer_date__c,
 uid__c,
 windows_logon_id__c,
 teva_id__c,
 employee_status_effective_date__c,
 separation_date__c,
 separation_reason__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ownerid,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.isdeleted,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.name,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.createddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.createdbyid,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastmodifieddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastmodifiedbyid,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.systemmodstamp,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastactivitydate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastvieweddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastreferenceddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.birth_month_day__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.business_mobile__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.business_phone__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.cost_center_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.demotion__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ec_creation_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ec_last_modified_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ec_territory_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.email_address__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.employee_status__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.first_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.full_part_time__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.global_employee_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.hire_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_city_municipality__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_phone__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_state_province__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.job_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.job_grade__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.loa_end_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.loa_start_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.last_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.local_employee_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_city__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_state__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.middle_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.name_suffix__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.oracle_string__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.payroll_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.position_title__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.preferred_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.promotion__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.reg_contract__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_eligibility_indicator__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_status__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_city__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_state__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_city__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_state__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.supervisor_global_employee_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.transfer_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.uid__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.windows_logon_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.teva_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.employee_status_effective_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.separation_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.separation_reason__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.batch_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.row_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src
 ORDER BY EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.batch_id
SEGMENTED BY hash(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PROGNOS_CINQAIR_src_super_b0 /*+basename(EXT_PROGNOS_CINQAIR_src_super)*/ 
(
 week_end_date,
 practice_name,
 practice_address_line_1,
 pracitce_address_line_2,
 city,
 state,
 zip_code,
 provider_first_name,
 provider_last_name,
 npi,
 specialty_1,
 specialty_2,
 pts_with_moderate_severe_asthma_and_eosinophils_0_149,
 pts_with_moderate_severe_asthma_and_eosinophils_150_399,
 pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
 pts_with_ao_asthma_and_eosinophils_0_149,
 pts_with_ao_asthma_and_eosinophils_150_399,
 pts_with_ao_asthma_and_eosinophils_400_or_greater,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PROGNOS_CINQAIR_src.week_end_date,
        EXT_PROGNOS_CINQAIR_src.practice_name,
        EXT_PROGNOS_CINQAIR_src.practice_address_line_1,
        EXT_PROGNOS_CINQAIR_src.pracitce_address_line_2,
        EXT_PROGNOS_CINQAIR_src.city,
        EXT_PROGNOS_CINQAIR_src.state,
        EXT_PROGNOS_CINQAIR_src.zip_code,
        EXT_PROGNOS_CINQAIR_src.provider_first_name,
        EXT_PROGNOS_CINQAIR_src.provider_last_name,
        EXT_PROGNOS_CINQAIR_src.npi,
        EXT_PROGNOS_CINQAIR_src.specialty_1,
        EXT_PROGNOS_CINQAIR_src.specialty_2,
        EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_0_149,
        EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_150_399,
        EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
        EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_0_149,
        EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_150_399,
        EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_400_or_greater,
        EXT_PROGNOS_CINQAIR_src.batch_id,
        EXT_PROGNOS_CINQAIR_src.row_id,
        EXT_PROGNOS_CINQAIR_src.update_ts
 FROM teva_ingestion.EXT_PROGNOS_CINQAIR_src
 ORDER BY EXT_PROGNOS_CINQAIR_src.batch_id
SEGMENTED BY hash(EXT_PROGNOS_CINQAIR_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_tw_anda_sales_src_super_b0 /*+basename(ext_tw_anda_sales_src_super)*/ 
(
 YEAR,
 SALES_MONTH,
 SALES_DATE,
 CUSTOMER_NO,
 CUSTOMER,
 CUSTOMER_ADDRESS_LINE1,
 CUSTOMER_ADDRESS_LINE2,
 CITY,
 STATE,
 ZIP,
 BILL_CUSTOMER_NO,
 BILL_ADDRESS_LINE1,
 BILL_ADDRESS_LINE2,
 BILL_CITY,
 BILL_STATE,
 BILL_ZIP,
 CUSTOMER_TYPE_CD,
 CUSTOMER_TYPE,
 PVP_340B_ID,
 TRADE_CLASS,
 HEALTH_INDUSTRY_NO,
 DEA_REGISTRATION_NO,
 DEA_REGISTRATION_EXPIRATION,
 STATE_LICENSE,
 STATE_LICENSE_EXPIRATION,
 ITEM_NO,
 NDC,
 BRAND,
 PACKAGE_SIZE,
 VENDOR,
 DOCUMENT_NO,
 ORDER_NO,
 UNITS_NET,
 NET_COST,
 NET_SALES_AMT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_tw_anda_sales_src.YEAR,
        ext_tw_anda_sales_src.SALES_MONTH,
        ext_tw_anda_sales_src.SALES_DATE,
        ext_tw_anda_sales_src.CUSTOMER_NO,
        ext_tw_anda_sales_src.CUSTOMER,
        ext_tw_anda_sales_src.CUSTOMER_ADDRESS_LINE1,
        ext_tw_anda_sales_src.CUSTOMER_ADDRESS_LINE2,
        ext_tw_anda_sales_src.CITY,
        ext_tw_anda_sales_src.STATE,
        ext_tw_anda_sales_src.ZIP,
        ext_tw_anda_sales_src.BILL_CUSTOMER_NO,
        ext_tw_anda_sales_src.BILL_ADDRESS_LINE1,
        ext_tw_anda_sales_src.BILL_ADDRESS_LINE2,
        ext_tw_anda_sales_src.BILL_CITY,
        ext_tw_anda_sales_src.BILL_STATE,
        ext_tw_anda_sales_src.BILL_ZIP,
        ext_tw_anda_sales_src.CUSTOMER_TYPE_CD,
        ext_tw_anda_sales_src.CUSTOMER_TYPE,
        ext_tw_anda_sales_src.PVP_340B_ID,
        ext_tw_anda_sales_src.TRADE_CLASS,
        ext_tw_anda_sales_src.HEALTH_INDUSTRY_NO,
        ext_tw_anda_sales_src.DEA_REGISTRATION_NO,
        ext_tw_anda_sales_src.DEA_REGISTRATION_EXPIRATION,
        ext_tw_anda_sales_src.STATE_LICENSE,
        ext_tw_anda_sales_src.STATE_LICENSE_EXPIRATION,
        ext_tw_anda_sales_src.ITEM_NO,
        ext_tw_anda_sales_src.NDC,
        ext_tw_anda_sales_src.BRAND,
        ext_tw_anda_sales_src.PACKAGE_SIZE,
        ext_tw_anda_sales_src.VENDOR,
        ext_tw_anda_sales_src.DOCUMENT_NO,
        ext_tw_anda_sales_src.ORDER_NO,
        ext_tw_anda_sales_src.UNITS_NET,
        ext_tw_anda_sales_src.NET_COST,
        ext_tw_anda_sales_src.NET_SALES_AMT,
        ext_tw_anda_sales_src.batch_id,
        ext_tw_anda_sales_src.row_id,
        ext_tw_anda_sales_src.update_ts
 FROM teva_ingestion.ext_tw_anda_sales_src
 ORDER BY ext_tw_anda_sales_src.batch_id
SEGMENTED BY hash(ext_tw_anda_sales_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FR61_src_super_b0 /*+basename(EXT_IMS_FR61_src_super)*/ 
(
 ddd_outlet_number,
 subcategory_code,
 ddd_outlet_name,
 ddd_outlet_address,
 city,
 state,
 activity_date,
 dea_number,
 blank1,
 blank2,
 outlet_status,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FR61_src.ddd_outlet_number,
        EXT_IMS_FR61_src.subcategory_code,
        EXT_IMS_FR61_src.ddd_outlet_name,
        EXT_IMS_FR61_src.ddd_outlet_address,
        EXT_IMS_FR61_src.city,
        EXT_IMS_FR61_src.state,
        EXT_IMS_FR61_src.activity_date,
        EXT_IMS_FR61_src.dea_number,
        EXT_IMS_FR61_src.blank1,
        EXT_IMS_FR61_src.blank2,
        EXT_IMS_FR61_src.outlet_status,
        EXT_IMS_FR61_src.batch_id,
        EXT_IMS_FR61_src.row_id,
        EXT_IMS_FR61_src.update_ts
 FROM teva_ingestion.EXT_IMS_FR61_src
 ORDER BY EXT_IMS_FR61_src.batch_id
SEGMENTED BY hash(EXT_IMS_FR61_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_CNT_M_ADHOC_src_super_b0 /*+basename(EXT_IMS_MHJ_CNT_M_ADHOC_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_client_num,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_report_num,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.zip_other,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_id,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.specialty,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.plan_id,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.sales_category,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.rx_type,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_product_group_num,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.filler_01,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.me_num,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.last_name,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.first_name,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.middle_name,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.address,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.city,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.state,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.zip,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.supplemental_data,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.plan_name,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.data_date,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.bucket_count,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_001,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_002,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_003,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_004,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_005,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_006,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_007,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_008,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_009,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_010,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_011,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_012,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_013,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_014,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_015,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_016,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_017,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_018,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_019,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_020,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_021,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_022,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_023,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_024,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_001,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_002,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_003,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_004,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_005,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_006,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_007,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_008,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_009,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_010,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_011,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_012,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_013,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_014,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_015,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_016,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_017,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_018,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_019,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_020,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_021,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_022,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_023,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_024,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.batch_id,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.row_id,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_M_ADHOC_src
 ORDER BY EXT_IMS_MHJ_CNT_M_ADHOC_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_CNT_M_ADHOC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_CNT_W_ADHOC_src_super_b0 /*+basename(EXT_IMS_MHJ_CNT_W_ADHOC_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 nrx_025,
 nrx_026,
 nrx_027,
 nrx_028,
 nrx_029,
 nrx_030,
 nrx_031,
 nrx_032,
 nrx_033,
 nrx_034,
 nrx_035,
 nrx_036,
 nrx_037,
 nrx_038,
 nrx_039,
 nrx_040,
 nrx_041,
 nrx_042,
 nrx_043,
 nrx_044,
 nrx_045,
 nrx_046,
 nrx_047,
 nrx_048,
 nrx_049,
 nrx_050,
 nrx_051,
 nrx_052,
 nrx_053,
 nrx_054,
 nrx_055,
 nrx_056,
 nrx_057,
 nrx_058,
 nrx_059,
 nrx_060,
 nrx_061,
 nrx_062,
 nrx_063,
 nrx_064,
 nrx_065,
 nrx_066,
 nrx_067,
 nrx_068,
 nrx_069,
 nrx_070,
 nrx_071,
 nrx_072,
 nrx_073,
 nrx_074,
 nrx_075,
 nrx_076,
 nrx_077,
 nrx_078,
 nrx_079,
 nrx_080,
 nrx_081,
 nrx_082,
 nrx_083,
 nrx_084,
 nrx_085,
 nrx_086,
 nrx_087,
 nrx_088,
 nrx_089,
 nrx_090,
 nrx_091,
 nrx_092,
 nrx_093,
 nrx_094,
 nrx_095,
 nrx_096,
 nrx_097,
 nrx_098,
 nrx_099,
 nrx_100,
 nrx_101,
 nrx_102,
 nrx_103,
 nrx_104,
 nrx_105,
 nrx_106,
 nrx_107,
 nrx_108,
 nrx_109,
 nrx_110,
 nrx_111,
 nrx_112,
 nrx_113,
 nrx_114,
 nrx_115,
 nrx_116,
 nrx_117,
 nrx_118,
 nrx_119,
 nrx_120,
 nrx_121,
 nrx_122,
 nrx_123,
 nrx_124,
 nrx_125,
 nrx_126,
 nrx_127,
 nrx_128,
 nrx_129,
 nrx_130,
 nrx_131,
 nrx_132,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 trx_025,
 trx_026,
 trx_027,
 trx_028,
 trx_029,
 trx_030,
 trx_031,
 trx_032,
 trx_033,
 trx_034,
 trx_035,
 trx_036,
 trx_037,
 trx_038,
 trx_039,
 trx_040,
 trx_041,
 trx_042,
 trx_043,
 trx_044,
 trx_045,
 trx_046,
 trx_047,
 trx_048,
 trx_049,
 trx_050,
 trx_051,
 trx_052,
 trx_053,
 trx_054,
 trx_055,
 trx_056,
 trx_057,
 trx_058,
 trx_059,
 trx_060,
 trx_061,
 trx_062,
 trx_063,
 trx_064,
 trx_065,
 trx_066,
 trx_067,
 trx_068,
 trx_069,
 trx_070,
 trx_071,
 trx_072,
 trx_073,
 trx_074,
 trx_075,
 trx_076,
 trx_077,
 trx_078,
 trx_079,
 trx_080,
 trx_081,
 trx_082,
 trx_083,
 trx_084,
 trx_085,
 trx_086,
 trx_087,
 trx_088,
 trx_089,
 trx_090,
 trx_091,
 trx_092,
 trx_093,
 trx_094,
 trx_095,
 trx_096,
 trx_097,
 trx_098,
 trx_099,
 trx_100,
 trx_101,
 trx_102,
 trx_103,
 trx_104,
 trx_105,
 trx_106,
 trx_107,
 trx_108,
 trx_109,
 trx_110,
 trx_111,
 trx_112,
 trx_113,
 trx_114,
 trx_115,
 trx_116,
 trx_117,
 trx_118,
 trx_119,
 trx_120,
 trx_121,
 trx_122,
 trx_123,
 trx_124,
 trx_125,
 trx_126,
 trx_127,
 trx_128,
 trx_129,
 trx_130,
 trx_131,
 trx_132,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_client_num,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_report_num,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.zip_other,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_id,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.specialty,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.plan_id,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.sales_category,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.rx_type,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_product_group_num,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.filler_01,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.me_num,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.last_name,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.first_name,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.middle_name,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.address,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.city,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.state,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.zip,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.supplemental_data,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.plan_name,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.data_date,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.bucket_count,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_001,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_002,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_003,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_004,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_005,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_006,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_007,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_008,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_009,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_010,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_011,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_012,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_013,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_014,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_015,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_016,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_017,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_018,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_019,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_020,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_021,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_022,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_023,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_024,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_025,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_026,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_027,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_028,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_029,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_030,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_031,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_032,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_033,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_034,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_035,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_036,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_037,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_038,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_039,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_040,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_041,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_042,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_043,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_044,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_045,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_046,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_047,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_048,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_049,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_050,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_051,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_052,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_053,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_054,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_055,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_056,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_057,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_058,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_059,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_060,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_061,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_062,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_063,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_064,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_065,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_066,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_067,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_068,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_069,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_070,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_071,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_072,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_073,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_074,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_075,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_076,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_077,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_078,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_079,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_080,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_081,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_082,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_083,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_084,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_085,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_086,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_087,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_088,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_089,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_090,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_091,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_092,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_093,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_094,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_095,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_096,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_097,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_098,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_099,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_100,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_101,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_102,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_103,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_104,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_105,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_106,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_107,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_108,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_109,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_110,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_111,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_112,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_113,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_114,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_115,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_116,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_117,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_118,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_119,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_120,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_121,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_122,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_123,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_124,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_125,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_126,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_127,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_128,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_129,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_130,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_131,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_132,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_001,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_002,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_003,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_004,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_005,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_006,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_007,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_008,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_009,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_010,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_011,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_012,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_013,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_014,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_015,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_016,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_017,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_018,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_019,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_020,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_021,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_022,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_023,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_024,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_025,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_026,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_027,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_028,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_029,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_030,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_031,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_032,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_033,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_034,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_035,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_036,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_037,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_038,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_039,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_040,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_041,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_042,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_043,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_044,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_045,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_046,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_047,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_048,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_049,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_050,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_051,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_052,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_053,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_054,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_055,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_056,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_057,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_058,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_059,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_060,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_061,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_062,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_063,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_064,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_065,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_066,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_067,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_068,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_069,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_070,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_071,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_072,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_073,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_074,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_075,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_076,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_077,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_078,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_079,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_080,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_081,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_082,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_083,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_084,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_085,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_086,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_087,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_088,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_089,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_090,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_091,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_092,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_093,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_094,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_095,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_096,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_097,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_098,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_099,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_100,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_101,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_102,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_103,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_104,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_105,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_106,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_107,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_108,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_109,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_110,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_111,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_112,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_113,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_114,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_115,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_116,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_117,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_118,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_119,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_120,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_121,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_122,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_123,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_124,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_125,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_126,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_127,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_128,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_129,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_130,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_131,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_132,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.batch_id,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.row_id,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_W_ADHOC_src
 ORDER BY EXT_IMS_MHJ_CNT_W_ADHOC_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_CNT_W_ADHOC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_QTY_M_ADHOC_src_super_b0 /*+basename(EXT_IMS_MHJ_QTY_M_ADHOC_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_client_num,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_report_num,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.zip_other,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_id,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.specialty,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.plan_id,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.sales_category,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.rx_type,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_product_group_num,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.filler_01,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.me_num,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.last_name,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.first_name,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.middle_name,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.address,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.city,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.state,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.zip,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.supplemental_data,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.plan_name,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.data_date,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.bucket_count,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_001,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_002,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_003,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_004,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_005,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_006,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_007,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_008,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_009,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_010,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_011,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_012,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_013,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_014,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_015,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_016,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_017,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_018,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_019,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_020,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_021,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_022,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_023,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_024,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_001,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_002,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_003,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_004,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_005,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_006,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_007,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_008,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_009,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_010,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_011,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_012,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_013,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_014,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_015,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_016,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_017,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_018,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_019,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_020,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_021,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_022,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_023,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_024,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.batch_id,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.row_id,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_M_ADHOC_src
 ORDER BY EXT_IMS_MHJ_QTY_M_ADHOC_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_QTY_M_ADHOC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_QTY_W_ADHOC_src_super_b0 /*+basename(EXT_IMS_MHJ_QTY_W_ADHOC_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 nrx_025,
 nrx_026,
 nrx_027,
 nrx_028,
 nrx_029,
 nrx_030,
 nrx_031,
 nrx_032,
 nrx_033,
 nrx_034,
 nrx_035,
 nrx_036,
 nrx_037,
 nrx_038,
 nrx_039,
 nrx_040,
 nrx_041,
 nrx_042,
 nrx_043,
 nrx_044,
 nrx_045,
 nrx_046,
 nrx_047,
 nrx_048,
 nrx_049,
 nrx_050,
 nrx_051,
 nrx_052,
 nrx_053,
 nrx_054,
 nrx_055,
 nrx_056,
 nrx_057,
 nrx_058,
 nrx_059,
 nrx_060,
 nrx_061,
 nrx_062,
 nrx_063,
 nrx_064,
 nrx_065,
 nrx_066,
 nrx_067,
 nrx_068,
 nrx_069,
 nrx_070,
 nrx_071,
 nrx_072,
 nrx_073,
 nrx_074,
 nrx_075,
 nrx_076,
 nrx_077,
 nrx_078,
 nrx_079,
 nrx_080,
 nrx_081,
 nrx_082,
 nrx_083,
 nrx_084,
 nrx_085,
 nrx_086,
 nrx_087,
 nrx_088,
 nrx_089,
 nrx_090,
 nrx_091,
 nrx_092,
 nrx_093,
 nrx_094,
 nrx_095,
 nrx_096,
 nrx_097,
 nrx_098,
 nrx_099,
 nrx_100,
 nrx_101,
 nrx_102,
 nrx_103,
 nrx_104,
 nrx_105,
 nrx_106,
 nrx_107,
 nrx_108,
 nrx_109,
 nrx_110,
 nrx_111,
 nrx_112,
 nrx_113,
 nrx_114,
 nrx_115,
 nrx_116,
 nrx_117,
 nrx_118,
 nrx_119,
 nrx_120,
 nrx_121,
 nrx_122,
 nrx_123,
 nrx_124,
 nrx_125,
 nrx_126,
 nrx_127,
 nrx_128,
 nrx_129,
 nrx_130,
 nrx_131,
 nrx_132,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 trx_025,
 trx_026,
 trx_027,
 trx_028,
 trx_029,
 trx_030,
 trx_031,
 trx_032,
 trx_033,
 trx_034,
 trx_035,
 trx_036,
 trx_037,
 trx_038,
 trx_039,
 trx_040,
 trx_041,
 trx_042,
 trx_043,
 trx_044,
 trx_045,
 trx_046,
 trx_047,
 trx_048,
 trx_049,
 trx_050,
 trx_051,
 trx_052,
 trx_053,
 trx_054,
 trx_055,
 trx_056,
 trx_057,
 trx_058,
 trx_059,
 trx_060,
 trx_061,
 trx_062,
 trx_063,
 trx_064,
 trx_065,
 trx_066,
 trx_067,
 trx_068,
 trx_069,
 trx_070,
 trx_071,
 trx_072,
 trx_073,
 trx_074,
 trx_075,
 trx_076,
 trx_077,
 trx_078,
 trx_079,
 trx_080,
 trx_081,
 trx_082,
 trx_083,
 trx_084,
 trx_085,
 trx_086,
 trx_087,
 trx_088,
 trx_089,
 trx_090,
 trx_091,
 trx_092,
 trx_093,
 trx_094,
 trx_095,
 trx_096,
 trx_097,
 trx_098,
 trx_099,
 trx_100,
 trx_101,
 trx_102,
 trx_103,
 trx_104,
 trx_105,
 trx_106,
 trx_107,
 trx_108,
 trx_109,
 trx_110,
 trx_111,
 trx_112,
 trx_113,
 trx_114,
 trx_115,
 trx_116,
 trx_117,
 trx_118,
 trx_119,
 trx_120,
 trx_121,
 trx_122,
 trx_123,
 trx_124,
 trx_125,
 trx_126,
 trx_127,
 trx_128,
 trx_129,
 trx_130,
 trx_131,
 trx_132,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_client_num,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_report_num,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.zip_other,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_id,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.specialty,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.plan_id,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.sales_category,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.rx_type,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_product_group_num,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.filler_01,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.me_num,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.last_name,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.first_name,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.middle_name,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.address,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.city,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.state,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.zip,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.supplemental_data,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.plan_name,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.data_date,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.bucket_count,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_001,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_002,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_003,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_004,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_005,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_006,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_007,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_008,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_009,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_010,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_011,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_012,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_013,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_014,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_015,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_016,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_017,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_018,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_019,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_020,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_021,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_022,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_023,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_024,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_025,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_026,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_027,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_028,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_029,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_030,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_031,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_032,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_033,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_034,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_035,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_036,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_037,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_038,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_039,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_040,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_041,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_042,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_043,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_044,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_045,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_046,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_047,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_048,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_049,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_050,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_051,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_052,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_053,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_054,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_055,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_056,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_057,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_058,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_059,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_060,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_061,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_062,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_063,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_064,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_065,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_066,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_067,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_068,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_069,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_070,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_071,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_072,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_073,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_074,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_075,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_076,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_077,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_078,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_079,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_080,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_081,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_082,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_083,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_084,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_085,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_086,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_087,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_088,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_089,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_090,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_091,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_092,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_093,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_094,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_095,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_096,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_097,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_098,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_099,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_100,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_101,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_102,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_103,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_104,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_105,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_106,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_107,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_108,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_109,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_110,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_111,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_112,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_113,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_114,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_115,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_116,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_117,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_118,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_119,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_120,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_121,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_122,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_123,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_124,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_125,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_126,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_127,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_128,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_129,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_130,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_131,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_132,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_001,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_002,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_003,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_004,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_005,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_006,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_007,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_008,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_009,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_010,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_011,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_012,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_013,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_014,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_015,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_016,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_017,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_018,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_019,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_020,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_021,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_022,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_023,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_024,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_025,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_026,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_027,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_028,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_029,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_030,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_031,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_032,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_033,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_034,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_035,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_036,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_037,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_038,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_039,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_040,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_041,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_042,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_043,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_044,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_045,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_046,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_047,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_048,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_049,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_050,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_051,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_052,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_053,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_054,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_055,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_056,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_057,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_058,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_059,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_060,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_061,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_062,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_063,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_064,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_065,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_066,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_067,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_068,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_069,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_070,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_071,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_072,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_073,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_074,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_075,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_076,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_077,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_078,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_079,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_080,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_081,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_082,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_083,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_084,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_085,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_086,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_087,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_088,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_089,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_090,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_091,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_092,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_093,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_094,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_095,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_096,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_097,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_098,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_099,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_100,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_101,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_102,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_103,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_104,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_105,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_106,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_107,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_108,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_109,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_110,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_111,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_112,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_113,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_114,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_115,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_116,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_117,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_118,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_119,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_120,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_121,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_122,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_123,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_124,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_125,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_126,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_127,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_128,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_129,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_130,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_131,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_132,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.batch_id,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.row_id,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_W_ADHOC_src
 ORDER BY EXT_IMS_MHJ_QTY_W_ADHOC_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_QTY_W_ADHOC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PSKW_GRANIX_COUPON_SAVINGS_src_super_b0 /*+basename(EXT_PSKW_GRANIX_COUPON_SAVINGS_src_super)*/ 
(
 transaction_type,
 claim_authorization_number,
 original_claim_authorization_number,
 rx_num,
 date_of_fill,
 date_written,
 day_supply,
 daw,
 ndc,
 drug_desc,
 new_refill_code,
 number_of_refills,
 other_coverage_code,
 group_num,
 member_id,
 patient_gender,
 date_processed,
 nabp,
 phm_name,
 phm_add1,
 phm_add2,
 phm_city,
 phm_state,
 phm_zip,
 npi,
 phy_name,
 phy_fn,
 phy_mi,
 phy_ln,
 phy_suffix,
 phy_prof_desg,
 spec1,
 spec2,
 phy_add1,
 phy_add2,
 phy_city,
 phy_state,
 phy_zip,
 submission_method,
 quantity,
 patient_benefit,
 patient_copay_before_benefit_applied,
 patient_oop,
 pharmacy_transaction_fee,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PSKW_GRANIX_COUPON_SAVINGS_src.transaction_type,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.claim_authorization_number,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.original_claim_authorization_number,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.rx_num,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_of_fill,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_written,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.day_supply,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.daw,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.ndc,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.drug_desc,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.new_refill_code,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.number_of_refills,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.other_coverage_code,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.group_num,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.member_id,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_gender,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_processed,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.nabp,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_name,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_add1,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_add2,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_city,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_state,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_zip,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.npi,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_name,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_fn,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_mi,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_ln,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_suffix,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_prof_desg,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.spec1,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.spec2,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_add1,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_add2,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_city,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_state,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_zip,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.submission_method,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.quantity,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_benefit,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_copay_before_benefit_applied,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_oop,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.pharmacy_transaction_fee,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.batch_id,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.row_id,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.update_ts
 FROM teva_ingestion.EXT_PSKW_GRANIX_COUPON_SAVINGS_src
 ORDER BY EXT_PSKW_GRANIX_COUPON_SAVINGS_src.batch_id
SEGMENTED BY hash(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_HCO_src_super_b0 /*+basename(MDM_HCO_src_super)*/ 
(
 TVCMID,
 IMS_ORGANIZATION_ID,
 DBA_NAME,
 BUSINESS_NAME,
 CARE_OF_LOCATION,
 RECORD_TYPE,
 RECORD_TYPE_NAME,
 SUB_TYPE,
 SUB_TYPE_NAME,
 OWNER_STATUS,
 PROFIT_STATUS,
 CMI,
 NO_OF_PROVIDERS,
 PRIMARY_COT_ID,
 COT_CLASSIFICATION_ID,
 COT_CLASSIFICATION,
 COT_FACILITY_TYPE_ID,
 COT_FACILITY_TYPE,
 COT_SPECIALTY_ID,
 COT_SPECIALTY,
 TTL_LICENSE_BEDS,
 TTL_CENSUS_BEDS,
 TTL_STAFFED_BEDS,
 TEACHING_HOSP,
 COMMHOSP,
 FORMULARY,
 ELECTRONIC_MEDICAL_RECORD,
 EPRESCRIBE,
 PAYPERFORM,
 GENFIRST,
 SREP_ACCESS,
 PRACTICING_STATUS_CODE_HEALTHCARE_ORGANIZATION,
 MPN,
 MPN_ORDER,
 STATUS_INDICATOR,
 STATUS_INDICATOR_NAME,
 DEACTIVATION_REASON,
 LOGICAL_DELETION_DATE,
 HCE_INSERT_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_HCO_src.TVCMID,
        MDM_HCO_src.IMS_ORGANIZATION_ID,
        MDM_HCO_src.DBA_NAME,
        MDM_HCO_src.BUSINESS_NAME,
        MDM_HCO_src.CARE_OF_LOCATION,
        MDM_HCO_src.RECORD_TYPE,
        MDM_HCO_src.RECORD_TYPE_NAME,
        MDM_HCO_src.SUB_TYPE,
        MDM_HCO_src.SUB_TYPE_NAME,
        MDM_HCO_src.OWNER_STATUS,
        MDM_HCO_src.PROFIT_STATUS,
        MDM_HCO_src.CMI,
        MDM_HCO_src.NO_OF_PROVIDERS,
        MDM_HCO_src.PRIMARY_COT_ID,
        MDM_HCO_src.COT_CLASSIFICATION_ID,
        MDM_HCO_src.COT_CLASSIFICATION,
        MDM_HCO_src.COT_FACILITY_TYPE_ID,
        MDM_HCO_src.COT_FACILITY_TYPE,
        MDM_HCO_src.COT_SPECIALTY_ID,
        MDM_HCO_src.COT_SPECIALTY,
        MDM_HCO_src.TTL_LICENSE_BEDS,
        MDM_HCO_src.TTL_CENSUS_BEDS,
        MDM_HCO_src.TTL_STAFFED_BEDS,
        MDM_HCO_src.TEACHING_HOSP,
        MDM_HCO_src.COMMHOSP,
        MDM_HCO_src.FORMULARY,
        MDM_HCO_src.ELECTRONIC_MEDICAL_RECORD,
        MDM_HCO_src.EPRESCRIBE,
        MDM_HCO_src.PAYPERFORM,
        MDM_HCO_src.GENFIRST,
        MDM_HCO_src.SREP_ACCESS,
        MDM_HCO_src.PRACTICING_STATUS_CODE_HEALTHCARE_ORGANIZATION,
        MDM_HCO_src.MPN,
        MDM_HCO_src.MPN_ORDER,
        MDM_HCO_src.STATUS_INDICATOR,
        MDM_HCO_src.STATUS_INDICATOR_NAME,
        MDM_HCO_src.DEACTIVATION_REASON,
        MDM_HCO_src.LOGICAL_DELETION_DATE,
        MDM_HCO_src.HCE_INSERT_DATE,
        MDM_HCO_src.CREATED_BY,
        MDM_HCO_src.CREATED_DATE,
        MDM_HCO_src.UPDATED_BY,
        MDM_HCO_src.UPDATED_DATE,
        MDM_HCO_src.batch_id,
        MDM_HCO_src.row_id,
        MDM_HCO_src.update_ts
 FROM teva_ingestion.MDM_HCO_src
 ORDER BY MDM_HCO_src.batch_id
SEGMENTED BY hash(MDM_HCO_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CONNECTIVERX_COUPON_src_super_b0 /*+basename(EXT_CONNECTIVERX_COUPON_src_super)*/ 
(
 redemption_type,
 transaction_type,
 claim_authorization_number,
 original_claim_authorization_number,
 date_of_fill,
 date_written,
 day_supply,
 ndc,
 daw,
 drug_title,
 drug_strength_and_form,
 new_refill_code,
 quantity,
 number_of_refills,
 other_coverage_code,
 group_num,
 member_id,
 patient_gender,
 age,
 date_processed,
 nabp,
 pharmacy_chain,
 pharmacy_npi,
 rx_num,
 pharmacy_name,
 pharmacy_address_1,
 pharmacy_address_2,
 pharmacy_city,
 pharmacy_state,
 pharmacy_zip,
 pharmacy_phone,
 hcp_npi,
 hcp_first_name,
 hcp_middle_name,
 hcp_last_name,
 hcp_suffix,
 hcp_designation,
 hcp_specialty_1,
 hcp_specialty_2,
 hcp_address_1,
 hcp_address_2,
 hcp_city,
 hcp_state,
 hcp_zip,
 submission_method,
 previous_payer_id,
 patient_expense,
 patient_benefit,
 patient_copay,
 patient_oop,
 pharmacy_fee,
 amount_due,
 create_date,
 occ_payment_type,
 calc_awp,
 admin_hcp_npi,
 admin_hcp_name,
 admin_hcp_address,
 admin_hcp_address2,
 admin_hcp_city,
 admin_hcp_state,
 admin_hcp_zip,
 claim_type,
 administration_flag,
 soc_name,
 soc_phone,
 soc_fax,
 soc_address,
 soc_city,
 soc_state,
 soc_zip,
 soc_id,
 soc_npi,
 payer_name,
 cpt_code,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CONNECTIVERX_COUPON_src.redemption_type,
        EXT_CONNECTIVERX_COUPON_src.transaction_type,
        EXT_CONNECTIVERX_COUPON_src.claim_authorization_number,
        EXT_CONNECTIVERX_COUPON_src.original_claim_authorization_number,
        EXT_CONNECTIVERX_COUPON_src.date_of_fill,
        EXT_CONNECTIVERX_COUPON_src.date_written,
        EXT_CONNECTIVERX_COUPON_src.day_supply,
        EXT_CONNECTIVERX_COUPON_src.ndc,
        EXT_CONNECTIVERX_COUPON_src.daw,
        EXT_CONNECTIVERX_COUPON_src.drug_title,
        EXT_CONNECTIVERX_COUPON_src.drug_strength_and_form,
        EXT_CONNECTIVERX_COUPON_src.new_refill_code,
        EXT_CONNECTIVERX_COUPON_src.quantity,
        EXT_CONNECTIVERX_COUPON_src.number_of_refills,
        EXT_CONNECTIVERX_COUPON_src.other_coverage_code,
        EXT_CONNECTIVERX_COUPON_src.group_num,
        EXT_CONNECTIVERX_COUPON_src.member_id,
        EXT_CONNECTIVERX_COUPON_src.patient_gender,
        EXT_CONNECTIVERX_COUPON_src.age,
        EXT_CONNECTIVERX_COUPON_src.date_processed,
        EXT_CONNECTIVERX_COUPON_src.nabp,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_chain,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_npi,
        EXT_CONNECTIVERX_COUPON_src.rx_num,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_name,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_address_1,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_address_2,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_city,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_state,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_zip,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_phone,
        EXT_CONNECTIVERX_COUPON_src.hcp_npi,
        EXT_CONNECTIVERX_COUPON_src.hcp_first_name,
        EXT_CONNECTIVERX_COUPON_src.hcp_middle_name,
        EXT_CONNECTIVERX_COUPON_src.hcp_last_name,
        EXT_CONNECTIVERX_COUPON_src.hcp_suffix,
        EXT_CONNECTIVERX_COUPON_src.hcp_designation,
        EXT_CONNECTIVERX_COUPON_src.hcp_specialty_1,
        EXT_CONNECTIVERX_COUPON_src.hcp_specialty_2,
        EXT_CONNECTIVERX_COUPON_src.hcp_address_1,
        EXT_CONNECTIVERX_COUPON_src.hcp_address_2,
        EXT_CONNECTIVERX_COUPON_src.hcp_city,
        EXT_CONNECTIVERX_COUPON_src.hcp_state,
        EXT_CONNECTIVERX_COUPON_src.hcp_zip,
        EXT_CONNECTIVERX_COUPON_src.submission_method,
        EXT_CONNECTIVERX_COUPON_src.previous_payer_id,
        EXT_CONNECTIVERX_COUPON_src.patient_expense,
        EXT_CONNECTIVERX_COUPON_src.patient_benefit,
        EXT_CONNECTIVERX_COUPON_src.patient_copay,
        EXT_CONNECTIVERX_COUPON_src.patient_oop,
        EXT_CONNECTIVERX_COUPON_src.pharmacy_fee,
        EXT_CONNECTIVERX_COUPON_src.amount_due,
        EXT_CONNECTIVERX_COUPON_src.create_date,
        EXT_CONNECTIVERX_COUPON_src.occ_payment_type,
        EXT_CONNECTIVERX_COUPON_src.calc_awp,
        EXT_CONNECTIVERX_COUPON_src.admin_hcp_npi,
        EXT_CONNECTIVERX_COUPON_src.admin_hcp_name,
        EXT_CONNECTIVERX_COUPON_src.admin_hcp_address,
        EXT_CONNECTIVERX_COUPON_src.admin_hcp_address2,
        EXT_CONNECTIVERX_COUPON_src.admin_hcp_city,
        EXT_CONNECTIVERX_COUPON_src.admin_hcp_state,
        EXT_CONNECTIVERX_COUPON_src.admin_hcp_zip,
        EXT_CONNECTIVERX_COUPON_src.claim_type,
        EXT_CONNECTIVERX_COUPON_src.administration_flag,
        EXT_CONNECTIVERX_COUPON_src.soc_name,
        EXT_CONNECTIVERX_COUPON_src.soc_phone,
        EXT_CONNECTIVERX_COUPON_src.soc_fax,
        EXT_CONNECTIVERX_COUPON_src.soc_address,
        EXT_CONNECTIVERX_COUPON_src.soc_city,
        EXT_CONNECTIVERX_COUPON_src.soc_state,
        EXT_CONNECTIVERX_COUPON_src.soc_zip,
        EXT_CONNECTIVERX_COUPON_src.soc_id,
        EXT_CONNECTIVERX_COUPON_src.soc_npi,
        EXT_CONNECTIVERX_COUPON_src.payer_name,
        EXT_CONNECTIVERX_COUPON_src.cpt_code,
        EXT_CONNECTIVERX_COUPON_src.batch_id,
        EXT_CONNECTIVERX_COUPON_src.row_id,
        EXT_CONNECTIVERX_COUPON_src.update_ts
 FROM teva_ingestion.EXT_CONNECTIVERX_COUPON_src
 ORDER BY EXT_CONNECTIVERX_COUPON_src.batch_id
SEGMENTED BY hash(EXT_CONNECTIVERX_COUPON_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_OPTUMRX_V2_src_super_b0 /*+basename(EXT_OPTUMRX_V2_src_super)*/ 
(
 fill_month,
 npi,
 full_name,
 specialty,
 address_1,
 address_2,
 city,
 state,
 zip,
 ndc,
 product_name,
 trx_count,
 trx_quantity,
 payer_flag,
 briova_flag,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_OPTUMRX_V2_src.fill_month,
        EXT_OPTUMRX_V2_src.npi,
        EXT_OPTUMRX_V2_src.full_name,
        EXT_OPTUMRX_V2_src.specialty,
        EXT_OPTUMRX_V2_src.address_1,
        EXT_OPTUMRX_V2_src.address_2,
        EXT_OPTUMRX_V2_src.city,
        EXT_OPTUMRX_V2_src.state,
        EXT_OPTUMRX_V2_src.zip,
        EXT_OPTUMRX_V2_src.ndc,
        EXT_OPTUMRX_V2_src.product_name,
        EXT_OPTUMRX_V2_src.trx_count,
        EXT_OPTUMRX_V2_src.trx_quantity,
        EXT_OPTUMRX_V2_src.payer_flag,
        EXT_OPTUMRX_V2_src.briova_flag,
        EXT_OPTUMRX_V2_src.batch_id,
        EXT_OPTUMRX_V2_src.row_id,
        EXT_OPTUMRX_V2_src.update_ts
 FROM teva_ingestion.EXT_OPTUMRX_V2_src
 ORDER BY EXT_OPTUMRX_V2_src.batch_id
SEGMENTED BY hash(EXT_OPTUMRX_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_CALL2_SAMPLE_VOD__C_src_super_b0 /*+basename(EXT_VV_CALL2_SAMPLE_VOD__C_src_super)*/ 
(
 id,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 mayedit,
 islocked,
 lastvieweddate,
 lastreferenceddate,
 account_vod__c,
 call_date_vod__c,
 is_parent_call_vod__c,
 quantity_vod__c,
 lot_vod__c,
 mobile_id_vod__c,
 call2_vod__c,
 product_vod__c,
 distributor_vod__c,
 attendee_type_vod__c,
 entity_reference_id_vod__c,
 delivery_status_vod__c,
 apply_limit_vod__c,
 limit_applied_vod__c,
 manufacturer_vod__c,
 product_value_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_CALL2_SAMPLE_VOD__C_src.id,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.isdeleted,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.name,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.createddate,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.createdbyid,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.lastmodifieddate,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.lastmodifiedbyid,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.systemmodstamp,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.lastactivitydate,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.mayedit,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.islocked,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.lastvieweddate,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.lastreferenceddate,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.account_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.call_date_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.is_parent_call_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.quantity_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.lot_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.mobile_id_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.call2_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.product_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.distributor_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.attendee_type_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.entity_reference_id_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.delivery_status_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.apply_limit_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.limit_applied_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.manufacturer_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.product_value_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.batch_id,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.row_id,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_SAMPLE_VOD__C_src
 ORDER BY EXT_VV_CALL2_SAMPLE_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_CALL2_SAMPLE_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_ims_copay_src_super_b0 /*+basename(ext_ims_copay_src_super)*/ 
(
 group_number,
 group_name,
 claim_type,
 rx_number,
 date_of_fill,
 member_id,
 other_coverage_code,
 new_refill_code,
 basis_of_reimbursement,
 ndc,
 drug_name,
 drug_form,
 drug_strength,
 paid_quantity,
 days_supply,
 ingredient_cost_paid,
 dispensing_fee_paid,
 sales_tax_paid,
 copay_amount,
 total_amount_paid,
 usual_and_customary_amount,
 claim_number,
 adjusted_claim_number,
 received_date,
 pharmacy_nabp,
 pharmacy_name,
 pharamcy_address_1,
 pharamcy_address_2,
 pharamcy_city,
 pharamcy_state,
 pharamcy_zip,
 pharmacy_group_code,
 prescriber_first_name,
 prescriber_middle_name,
 prescriber_last_name,
 prescriber_address_1,
 prescriber_address_2,
 prescriber_city,
 prescriber_state,
 prescriber_zip,
 prescriber_specialty,
 redemption,
 mail_order_indicator,
 dea,
 npi,
 pdrp,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_ims_copay_src.group_number,
        ext_ims_copay_src.group_name,
        ext_ims_copay_src.claim_type,
        ext_ims_copay_src.rx_number,
        ext_ims_copay_src.date_of_fill,
        ext_ims_copay_src.member_id,
        ext_ims_copay_src.other_coverage_code,
        ext_ims_copay_src.new_refill_code,
        ext_ims_copay_src.basis_of_reimbursement,
        ext_ims_copay_src.ndc,
        ext_ims_copay_src.drug_name,
        ext_ims_copay_src.drug_form,
        ext_ims_copay_src.drug_strength,
        ext_ims_copay_src.paid_quantity,
        ext_ims_copay_src.days_supply,
        ext_ims_copay_src.ingredient_cost_paid,
        ext_ims_copay_src.dispensing_fee_paid,
        ext_ims_copay_src.sales_tax_paid,
        ext_ims_copay_src.copay_amount,
        ext_ims_copay_src.total_amount_paid,
        ext_ims_copay_src.usual_and_customary_amount,
        ext_ims_copay_src.claim_number,
        ext_ims_copay_src.adjusted_claim_number,
        ext_ims_copay_src.received_date,
        ext_ims_copay_src.pharmacy_nabp,
        ext_ims_copay_src.pharmacy_name,
        ext_ims_copay_src.pharamcy_address_1,
        ext_ims_copay_src.pharamcy_address_2,
        ext_ims_copay_src.pharamcy_city,
        ext_ims_copay_src.pharamcy_state,
        ext_ims_copay_src.pharamcy_zip,
        ext_ims_copay_src.pharmacy_group_code,
        ext_ims_copay_src.prescriber_first_name,
        ext_ims_copay_src.prescriber_middle_name,
        ext_ims_copay_src.prescriber_last_name,
        ext_ims_copay_src.prescriber_address_1,
        ext_ims_copay_src.prescriber_address_2,
        ext_ims_copay_src.prescriber_city,
        ext_ims_copay_src.prescriber_state,
        ext_ims_copay_src.prescriber_zip,
        ext_ims_copay_src.prescriber_specialty,
        ext_ims_copay_src.redemption,
        ext_ims_copay_src.mail_order_indicator,
        ext_ims_copay_src.dea,
        ext_ims_copay_src.npi,
        ext_ims_copay_src.pdrp,
        ext_ims_copay_src.batch_id,
        ext_ims_copay_src.row_id,
        ext_ims_copay_src.update_ts
 FROM teva_ingestion.ext_ims_copay_src
 ORDER BY ext_ims_copay_src.batch_id
SEGMENTED BY hash(ext_ims_copay_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_vv_approved_document__c_src_super_b0 /*+basename(ext_vv_approved_document__c_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 recordtypeid,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 mayedit,
 islocked,
 lastvieweddate,
 lastreferenceddate,
 detail_group_vod__c,
 document_description_vod__c,
 document_host_url_vod__c,
 document_id_vod__c,
 document_last_mod_datetime_vod__c,
 email_allows_documents_vod__c,
 email_domain_vod__c,
 email_from_address_vod__c,
 email_from_name_vod__c,
 email_replyto_address_vod__c,
 email_replyto_name_vod__c,
 email_subject_vod__c,
 email_template_fragment_document_id_vod__c,
 isi_document_id_vod__c,
 language_vod__c,
 other_document_id_list_vod__c,
 pi_document_id_vod__c,
 piece_document_id_vod__c,
 product_vod__c,
 status_vod__c,
 territory_vod__c,
 vault_instance_id_vod__c,
 expiration_date_tva__c,
 group_to_share_to__c,
 training_org_tva__c,
 unsub_svr_tva__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_vv_approved_document__c_src.id,
        ext_vv_approved_document__c_src.ownerid,
        ext_vv_approved_document__c_src.isdeleted,
        ext_vv_approved_document__c_src.name,
        ext_vv_approved_document__c_src.recordtypeid,
        ext_vv_approved_document__c_src.createddate,
        ext_vv_approved_document__c_src.createdbyid,
        ext_vv_approved_document__c_src.lastmodifieddate,
        ext_vv_approved_document__c_src.lastmodifiedbyid,
        ext_vv_approved_document__c_src.systemmodstamp,
        ext_vv_approved_document__c_src.lastactivitydate,
        ext_vv_approved_document__c_src.mayedit,
        ext_vv_approved_document__c_src.islocked,
        ext_vv_approved_document__c_src.lastvieweddate,
        ext_vv_approved_document__c_src.lastreferenceddate,
        ext_vv_approved_document__c_src.detail_group_vod__c,
        ext_vv_approved_document__c_src.document_description_vod__c,
        ext_vv_approved_document__c_src.document_host_url_vod__c,
        ext_vv_approved_document__c_src.document_id_vod__c,
        ext_vv_approved_document__c_src.document_last_mod_datetime_vod__c,
        ext_vv_approved_document__c_src.email_allows_documents_vod__c,
        ext_vv_approved_document__c_src.email_domain_vod__c,
        ext_vv_approved_document__c_src.email_from_address_vod__c,
        ext_vv_approved_document__c_src.email_from_name_vod__c,
        ext_vv_approved_document__c_src.email_replyto_address_vod__c,
        ext_vv_approved_document__c_src.email_replyto_name_vod__c,
        ext_vv_approved_document__c_src.email_subject_vod__c,
        ext_vv_approved_document__c_src.email_template_fragment_document_id_vod__c,
        ext_vv_approved_document__c_src.isi_document_id_vod__c,
        ext_vv_approved_document__c_src.language_vod__c,
        ext_vv_approved_document__c_src.other_document_id_list_vod__c,
        ext_vv_approved_document__c_src.pi_document_id_vod__c,
        ext_vv_approved_document__c_src.piece_document_id_vod__c,
        ext_vv_approved_document__c_src.product_vod__c,
        ext_vv_approved_document__c_src.status_vod__c,
        ext_vv_approved_document__c_src.territory_vod__c,
        ext_vv_approved_document__c_src.vault_instance_id_vod__c,
        ext_vv_approved_document__c_src.expiration_date_tva__c,
        ext_vv_approved_document__c_src.group_to_share_to__c,
        ext_vv_approved_document__c_src.training_org_tva__c,
        ext_vv_approved_document__c_src.unsub_svr_tva__c,
        ext_vv_approved_document__c_src.batch_id,
        ext_vv_approved_document__c_src.row_id,
        ext_vv_approved_document__c_src.update_ts
 FROM teva_ingestion.ext_vv_approved_document__c_src
 ORDER BY ext_vv_approved_document__c_src.batch_id
SEGMENTED BY hash(ext_vv_approved_document__c_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_WHOLESALE_867_V2_src_super_b0 /*+basename(EXT_WHOLESALE_867_V2_src_super)*/ 
(
 ndc,
 product_description,
 product_name,
 trading_partner_name,
 trading_partner_dea,
 trading_partner_hin,
 trading_partner_location_type,
 trading_partner_dc_dea,
 trading_partner_dc_hin,
 trading_partner_dc_name,
 trading_partner_dc_address,
 trading_partner_dc_address_2,
 trading_partner_dc_city,
 trading_partner_dc_state,
 trading_partner_dc_zip,
 class_of_trade,
 outlet_location_name,
 outlet_dea,
 outlet_hin,
 outlet_340b,
 outlet_ncpdp,
 outlet_npi,
 outlet_location_address,
 outlet_location_address_2,
 outlet_location_city,
 outlet_location_state,
 outlet_location_zip,
 reporting_date,
 contract_number,
 contract_description,
 invoice_number,
 invoice_date,
 invoice_line_id,
 quanitity_stock_sales_ss,
 ds_sales_ds,
 summary_sales_su,
 dock_to_dock_bq,
 interbranch_ib,
 return_to_useable_ru,
 return_to_vendor_rv,
 transfer_to_disposal_td,
 adjusted_price,
 gross_amount,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_WHOLESALE_867_V2_src.ndc,
        EXT_WHOLESALE_867_V2_src.product_description,
        EXT_WHOLESALE_867_V2_src.product_name,
        EXT_WHOLESALE_867_V2_src.trading_partner_name,
        EXT_WHOLESALE_867_V2_src.trading_partner_dea,
        EXT_WHOLESALE_867_V2_src.trading_partner_hin,
        EXT_WHOLESALE_867_V2_src.trading_partner_location_type,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_dea,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_hin,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_name,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_address,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_address_2,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_city,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_state,
        EXT_WHOLESALE_867_V2_src.trading_partner_dc_zip,
        EXT_WHOLESALE_867_V2_src.class_of_trade,
        EXT_WHOLESALE_867_V2_src.outlet_location_name,
        EXT_WHOLESALE_867_V2_src.outlet_dea,
        EXT_WHOLESALE_867_V2_src.outlet_hin,
        EXT_WHOLESALE_867_V2_src.outlet_340b,
        EXT_WHOLESALE_867_V2_src.outlet_ncpdp,
        EXT_WHOLESALE_867_V2_src.outlet_npi,
        EXT_WHOLESALE_867_V2_src.outlet_location_address,
        EXT_WHOLESALE_867_V2_src.outlet_location_address_2,
        EXT_WHOLESALE_867_V2_src.outlet_location_city,
        EXT_WHOLESALE_867_V2_src.outlet_location_state,
        EXT_WHOLESALE_867_V2_src.outlet_location_zip,
        EXT_WHOLESALE_867_V2_src.reporting_date,
        EXT_WHOLESALE_867_V2_src.contract_number,
        EXT_WHOLESALE_867_V2_src.contract_description,
        EXT_WHOLESALE_867_V2_src.invoice_number,
        EXT_WHOLESALE_867_V2_src.invoice_date,
        EXT_WHOLESALE_867_V2_src.invoice_line_id,
        EXT_WHOLESALE_867_V2_src.quanitity_stock_sales_ss,
        EXT_WHOLESALE_867_V2_src.ds_sales_ds,
        EXT_WHOLESALE_867_V2_src.summary_sales_su,
        EXT_WHOLESALE_867_V2_src.dock_to_dock_bq,
        EXT_WHOLESALE_867_V2_src.interbranch_ib,
        EXT_WHOLESALE_867_V2_src.return_to_useable_ru,
        EXT_WHOLESALE_867_V2_src.return_to_vendor_rv,
        EXT_WHOLESALE_867_V2_src.transfer_to_disposal_td,
        EXT_WHOLESALE_867_V2_src.adjusted_price,
        EXT_WHOLESALE_867_V2_src.gross_amount,
        EXT_WHOLESALE_867_V2_src.batch_id,
        EXT_WHOLESALE_867_V2_src.row_id,
        EXT_WHOLESALE_867_V2_src.update_ts
 FROM teva_ingestion.EXT_WHOLESALE_867_V2_src
 ORDER BY EXT_WHOLESALE_867_V2_src.batch_id
SEGMENTED BY hash(EXT_WHOLESALE_867_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_FACT_src_super_b0 /*+basename(EXT_IMS_FIA_FACT_src_super)*/ 
(
 claim_id,
 patient_id,
 sequence_number,
 product_id,
 fill_date,
 claim_type,
 reject_code,
 days_supply,
 quantity,
 refill_code,
 plantrak_id,
 opc_ask,
 sec_plantrak_id,
 buy_down,
 opc_paid,
 prescriber_id,
 sob,
 sub_product_id,
 sub_opc,
 initial_claim_id,
 prev_product_id,
 daw_code,
 wrt_date,
 claim_status,
 copay_card_flg,
 zip_code,
 ecoup_flag,
 ecoup_offset_amt,
 standard_copay,
 standard_copay_yn,
 flexible_fld_1_nbr,
 flexible_fld_2_nbr,
 flexible_fld_3_char,
 flexible_fld_4_char,
 fia_market_id,
 fia_market_desc,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_FACT_src.claim_id,
        EXT_IMS_FIA_FACT_src.patient_id,
        EXT_IMS_FIA_FACT_src.sequence_number,
        EXT_IMS_FIA_FACT_src.product_id,
        EXT_IMS_FIA_FACT_src.fill_date,
        EXT_IMS_FIA_FACT_src.claim_type,
        EXT_IMS_FIA_FACT_src.reject_code,
        EXT_IMS_FIA_FACT_src.days_supply,
        EXT_IMS_FIA_FACT_src.quantity,
        EXT_IMS_FIA_FACT_src.refill_code,
        EXT_IMS_FIA_FACT_src.plantrak_id,
        EXT_IMS_FIA_FACT_src.opc_ask,
        EXT_IMS_FIA_FACT_src.sec_plantrak_id,
        EXT_IMS_FIA_FACT_src.buy_down,
        EXT_IMS_FIA_FACT_src.opc_paid,
        EXT_IMS_FIA_FACT_src.prescriber_id,
        EXT_IMS_FIA_FACT_src.sob,
        EXT_IMS_FIA_FACT_src.sub_product_id,
        EXT_IMS_FIA_FACT_src.sub_opc,
        EXT_IMS_FIA_FACT_src.initial_claim_id,
        EXT_IMS_FIA_FACT_src.prev_product_id,
        EXT_IMS_FIA_FACT_src.daw_code,
        EXT_IMS_FIA_FACT_src.wrt_date,
        EXT_IMS_FIA_FACT_src.claim_status,
        EXT_IMS_FIA_FACT_src.copay_card_flg,
        EXT_IMS_FIA_FACT_src.zip_code,
        EXT_IMS_FIA_FACT_src.ecoup_flag,
        EXT_IMS_FIA_FACT_src.ecoup_offset_amt,
        EXT_IMS_FIA_FACT_src.standard_copay,
        EXT_IMS_FIA_FACT_src.standard_copay_yn,
        EXT_IMS_FIA_FACT_src.flexible_fld_1_nbr,
        EXT_IMS_FIA_FACT_src.flexible_fld_2_nbr,
        EXT_IMS_FIA_FACT_src.flexible_fld_3_char,
        EXT_IMS_FIA_FACT_src.flexible_fld_4_char,
        EXT_IMS_FIA_FACT_src.fia_market_id,
        EXT_IMS_FIA_FACT_src.fia_market_desc,
        EXT_IMS_FIA_FACT_src.batch_id,
        EXT_IMS_FIA_FACT_src.row_id,
        EXT_IMS_FIA_FACT_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_FACT_src
 ORDER BY EXT_IMS_FIA_FACT_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_src_super_b0 /*+basename(EXT_IMS_FIA_GEOGRAPHY_src_super)*/ 
(
 zip_code,
 msa_code,
 msa_description,
 cbsa_code,
 cbsa_description,
 state_code,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_GEOGRAPHY_src.zip_code,
        EXT_IMS_FIA_GEOGRAPHY_src.msa_code,
        EXT_IMS_FIA_GEOGRAPHY_src.msa_description,
        EXT_IMS_FIA_GEOGRAPHY_src.cbsa_code,
        EXT_IMS_FIA_GEOGRAPHY_src.cbsa_description,
        EXT_IMS_FIA_GEOGRAPHY_src.state_code,
        EXT_IMS_FIA_GEOGRAPHY_src.batch_id,
        EXT_IMS_FIA_GEOGRAPHY_src.row_id,
        EXT_IMS_FIA_GEOGRAPHY_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_src
 ORDER BY EXT_IMS_FIA_GEOGRAPHY_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_GEOGRAPHY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_PLAN_src_super_b0 /*+basename(EXT_IMS_FIA_PLAN_src_super)*/ 
(
 plantrak_id,
 payer_name,
 plan_name,
 pbm_name,
 payment_type,
 model_type,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_PLAN_src.plantrak_id,
        EXT_IMS_FIA_PLAN_src.payer_name,
        EXT_IMS_FIA_PLAN_src.plan_name,
        EXT_IMS_FIA_PLAN_src.pbm_name,
        EXT_IMS_FIA_PLAN_src.payment_type,
        EXT_IMS_FIA_PLAN_src.model_type,
        EXT_IMS_FIA_PLAN_src.batch_id,
        EXT_IMS_FIA_PLAN_src.row_id,
        EXT_IMS_FIA_PLAN_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PLAN_src
 ORDER BY EXT_IMS_FIA_PLAN_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_PLAN_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_PRODUCT_src_super_b0 /*+basename(EXT_IMS_FIA_PRODUCT_src_super)*/ 
(
 product_id,
 product_group,
 product_name,
 product_group_id,
 cmf10,
 fia_market_id,
 fia_market_desc,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_PRODUCT_src.product_id,
        EXT_IMS_FIA_PRODUCT_src.product_group,
        EXT_IMS_FIA_PRODUCT_src.product_name,
        EXT_IMS_FIA_PRODUCT_src.product_group_id,
        EXT_IMS_FIA_PRODUCT_src.cmf10,
        EXT_IMS_FIA_PRODUCT_src.fia_market_id,
        EXT_IMS_FIA_PRODUCT_src.fia_market_desc,
        EXT_IMS_FIA_PRODUCT_src.batch_id,
        EXT_IMS_FIA_PRODUCT_src.row_id,
        EXT_IMS_FIA_PRODUCT_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PRODUCT_src
 ORDER BY EXT_IMS_FIA_PRODUCT_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_PRODUCT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_REJECT_src_super_b0 /*+basename(EXT_IMS_FIA_REJECT_src_super)*/ 
(
 reject_code,
 reject_reason,
 reject_group,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_REJECT_src.reject_code,
        EXT_IMS_FIA_REJECT_src.reject_reason,
        EXT_IMS_FIA_REJECT_src.reject_group,
        EXT_IMS_FIA_REJECT_src.batch_id,
        EXT_IMS_FIA_REJECT_src.row_id,
        EXT_IMS_FIA_REJECT_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_REJECT_src
 ORDER BY EXT_IMS_FIA_REJECT_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_REJECT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_src_super_b0 /*+basename(EXT_ANTIMIGRAINE_DDD_DOLLARS_src_super)*/ 
(
 client_num,
 report_num,
 outlet_code,
 zip,
 subcategory_code,
 sra_4,
 category_code,
 ims_product_code,
 data_date,
 dol_mth01,
 dol_mth02,
 dol_mth03,
 dol_mth04,
 dol_mth05,
 dol_mth06,
 dol_mth07,
 dol_mth08,
 dol_mth09,
 dol_mth10,
 dol_mth11,
 dol_mth12,
 dol_mth13,
 dol_mth14,
 dol_mth15,
 dol_mth16,
 dol_mth17,
 dol_mth18,
 dol_mth19,
 dol_mth20,
 dol_mth21,
 dol_mth22,
 dol_mth23,
 dol_mth24,
 city,
 state,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ANTIMIGRAINE_DDD_DOLLARS_src.client_num,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.report_num,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.outlet_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.zip,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.subcategory_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.sra_4,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.category_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.ims_product_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.data_date,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth01,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth02,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth03,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth04,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth05,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth06,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth07,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth08,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth09,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth10,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth11,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth12,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth13,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth14,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth15,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth16,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth17,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth18,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth19,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth20,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth21,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth22,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth23,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth24,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.city,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.state,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.row_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_src
 ORDER BY EXT_ANTIMIGRAINE_DDD_DOLLARS_src.batch_id
SEGMENTED BY hash(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_src_super_b0 /*+basename(EXT_ANTIMIGRAINE_DDD_QUANTITY_src_super)*/ 
(
 client_num,
 report_num,
 outlet_code,
 zip,
 subcategory_code,
 sra_4,
 category_code,
 ims_product_code,
 data_date,
 qty_mth01,
 qty_mth02,
 qty_mth03,
 qty_mth04,
 qty_mth05,
 qty_mth06,
 qty_mth07,
 qty_mth08,
 qty_mth09,
 qty_mth10,
 qty_mth11,
 qty_mth12,
 qty_mth13,
 qty_mth14,
 qty_mth15,
 qty_mth16,
 qty_mth17,
 qty_mth18,
 qty_mth19,
 qty_mth20,
 qty_mth21,
 qty_mth22,
 qty_mth23,
 qty_mth24,
 city,
 state,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ANTIMIGRAINE_DDD_QUANTITY_src.client_num,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.report_num,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.outlet_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.zip,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.subcategory_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.sra_4,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.category_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.ims_product_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.data_date,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth01,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth02,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth03,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth04,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth05,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth06,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth07,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth08,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth09,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth10,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth11,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth12,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth13,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth14,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth15,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth16,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth17,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth18,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth19,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth20,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth21,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth22,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth23,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth24,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.city,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.state,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.row_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_src
 ORDER BY EXT_ANTIMIGRAINE_DDD_QUANTITY_src.batch_id
SEGMENTED BY hash(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.XPD_CORE_METRICS_src_super_b0 /*+basename(XPD_CORE_METRICS_src_super)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 filler_01,
 specialty,
 flexible_field_2,
 flexible_field_3,
 flexible_field_4,
 flexible_field_5,
 flexible_field_6,
 flexible_field_7,
 flexible_field_8,
 ims_product_group,
 month_ending,
 xpo_nrx,
 xpo_trx,
 unknown_nrx,
 unknown_trx,
 new_therapy_starts,
 continued_new,
 switch_to,
 add_on,
 restart_same_new,
 restart_different,
 continued_refill,
 restart_same_refill,
 switch_from,
 restart_different_from,
 add_to,
 market_new_to_brand_rx,
 dynamic_capture_rx,
 filler_02,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT XPD_CORE_METRICS_src.ims_client_number,
        XPD_CORE_METRICS_src.ims_report_number,
        XPD_CORE_METRICS_src.channel_indicator,
        XPD_CORE_METRICS_src.ims_id,
        XPD_CORE_METRICS_src.filler_01,
        XPD_CORE_METRICS_src.specialty,
        XPD_CORE_METRICS_src.flexible_field_2,
        XPD_CORE_METRICS_src.flexible_field_3,
        XPD_CORE_METRICS_src.flexible_field_4,
        XPD_CORE_METRICS_src.flexible_field_5,
        XPD_CORE_METRICS_src.flexible_field_6,
        XPD_CORE_METRICS_src.flexible_field_7,
        XPD_CORE_METRICS_src.flexible_field_8,
        XPD_CORE_METRICS_src.ims_product_group,
        XPD_CORE_METRICS_src.month_ending,
        XPD_CORE_METRICS_src.xpo_nrx,
        XPD_CORE_METRICS_src.xpo_trx,
        XPD_CORE_METRICS_src.unknown_nrx,
        XPD_CORE_METRICS_src.unknown_trx,
        XPD_CORE_METRICS_src.new_therapy_starts,
        XPD_CORE_METRICS_src.continued_new,
        XPD_CORE_METRICS_src.switch_to,
        XPD_CORE_METRICS_src.add_on,
        XPD_CORE_METRICS_src.restart_same_new,
        XPD_CORE_METRICS_src.restart_different,
        XPD_CORE_METRICS_src.continued_refill,
        XPD_CORE_METRICS_src.restart_same_refill,
        XPD_CORE_METRICS_src.switch_from,
        XPD_CORE_METRICS_src.restart_different_from,
        XPD_CORE_METRICS_src.add_to,
        XPD_CORE_METRICS_src.market_new_to_brand_rx,
        XPD_CORE_METRICS_src.dynamic_capture_rx,
        XPD_CORE_METRICS_src.filler_02,
        XPD_CORE_METRICS_src.batch_id,
        XPD_CORE_METRICS_src.row_id,
        XPD_CORE_METRICS_src.update_ts
 FROM teva_ingestion.XPD_CORE_METRICS_src
 ORDER BY XPD_CORE_METRICS_src.batch_id
SEGMENTED BY hash(XPD_CORE_METRICS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.XPD_DEMOGRAPHICS_src_super_b0 /*+basename(XPD_DEMOGRAPHICS_src_super)*/ 
(
 ims_client_number,
 ims_report_number,
 ims_id,
 filler_01,
 last_name,
 first_name,
 middle_name,
 address_1,
 address_2,
 city,
 state,
 zip,
 specialty,
 specialty_description,
 trx_decile_retail,
 nrx_decile_retail,
 nbrx_decile_retail,
 trx_decile_mail,
 nrx_decile_mail,
 nbrx_decile_mail,
 market_prescriber_reliability_retail,
 market_prescriber_reliability_mail,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT XPD_DEMOGRAPHICS_src.ims_client_number,
        XPD_DEMOGRAPHICS_src.ims_report_number,
        XPD_DEMOGRAPHICS_src.ims_id,
        XPD_DEMOGRAPHICS_src.filler_01,
        XPD_DEMOGRAPHICS_src.last_name,
        XPD_DEMOGRAPHICS_src.first_name,
        XPD_DEMOGRAPHICS_src.middle_name,
        XPD_DEMOGRAPHICS_src.address_1,
        XPD_DEMOGRAPHICS_src.address_2,
        XPD_DEMOGRAPHICS_src.city,
        XPD_DEMOGRAPHICS_src.state,
        XPD_DEMOGRAPHICS_src.zip,
        XPD_DEMOGRAPHICS_src.specialty,
        XPD_DEMOGRAPHICS_src.specialty_description,
        XPD_DEMOGRAPHICS_src.trx_decile_retail,
        XPD_DEMOGRAPHICS_src.nrx_decile_retail,
        XPD_DEMOGRAPHICS_src.nbrx_decile_retail,
        XPD_DEMOGRAPHICS_src.trx_decile_mail,
        XPD_DEMOGRAPHICS_src.nrx_decile_mail,
        XPD_DEMOGRAPHICS_src.nbrx_decile_mail,
        XPD_DEMOGRAPHICS_src.market_prescriber_reliability_retail,
        XPD_DEMOGRAPHICS_src.market_prescriber_reliability_mail,
        XPD_DEMOGRAPHICS_src.batch_id,
        XPD_DEMOGRAPHICS_src.row_id,
        XPD_DEMOGRAPHICS_src.update_ts
 FROM teva_ingestion.XPD_DEMOGRAPHICS_src
 ORDER BY XPD_DEMOGRAPHICS_src.batch_id
SEGMENTED BY hash(XPD_DEMOGRAPHICS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.XPD_SWITCH_DETAILS_src_super_b0 /*+basename(XPD_SWITCH_DETAILS_src_super)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 filler_01,
 specialty,
 flexible_field_2,
 flexible_field_3,
 flexible_field_4,
 flexible_field_5,
 flexible_field_6,
 flexible_field_7,
 flexible_field_8,
 switch_from_product_group_num,
 switch_to_product_group_num,
 month_ending,
 rx,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT XPD_SWITCH_DETAILS_src.ims_client_number,
        XPD_SWITCH_DETAILS_src.ims_report_number,
        XPD_SWITCH_DETAILS_src.channel_indicator,
        XPD_SWITCH_DETAILS_src.ims_id,
        XPD_SWITCH_DETAILS_src.filler_01,
        XPD_SWITCH_DETAILS_src.specialty,
        XPD_SWITCH_DETAILS_src.flexible_field_2,
        XPD_SWITCH_DETAILS_src.flexible_field_3,
        XPD_SWITCH_DETAILS_src.flexible_field_4,
        XPD_SWITCH_DETAILS_src.flexible_field_5,
        XPD_SWITCH_DETAILS_src.flexible_field_6,
        XPD_SWITCH_DETAILS_src.flexible_field_7,
        XPD_SWITCH_DETAILS_src.flexible_field_8,
        XPD_SWITCH_DETAILS_src.switch_from_product_group_num,
        XPD_SWITCH_DETAILS_src.switch_to_product_group_num,
        XPD_SWITCH_DETAILS_src.month_ending,
        XPD_SWITCH_DETAILS_src.rx,
        XPD_SWITCH_DETAILS_src.batch_id,
        XPD_SWITCH_DETAILS_src.row_id,
        XPD_SWITCH_DETAILS_src.update_ts
 FROM teva_ingestion.XPD_SWITCH_DETAILS_src
 ORDER BY XPD_SWITCH_DETAILS_src.batch_id
SEGMENTED BY hash(XPD_SWITCH_DETAILS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AXTRIA_TERRITORY_HIERARCHY_src_super_b0 /*+basename(EXT_AXTRIA_TERRITORY_HIERARCHY_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 lastvieweddate,
 lastreferenceddate,
 business_unit_code__c,
 business_unit_name__c,
 credentialing_eligible__c,
 fleet_eligibile__c,
 parent_territory_number__c,
 sales_team_code__c,
 sales_team_name__c,
 territory_end_date__c,
 territory_level__c,
 territory_name__c,
 territory_number__c,
 territory_sampling__c,
 territory_start_date__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AXTRIA_TERRITORY_HIERARCHY_src.id,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.ownerid,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.isdeleted,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.name,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.createddate,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.createdbyid,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastmodifieddate,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastmodifiedbyid,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.systemmodstamp,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastactivitydate,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastvieweddate,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastreferenceddate,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.business_unit_code__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.business_unit_name__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.credentialing_eligible__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.fleet_eligibile__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.parent_territory_number__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.sales_team_code__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.sales_team_name__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_end_date__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_level__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_name__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_number__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_sampling__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_start_date__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.batch_id,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.row_id,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_TERRITORY_HIERARCHY_src
 ORDER BY EXT_AXTRIA_TERRITORY_HIERARCHY_src.batch_id
SEGMENTED BY hash(EXT_AXTRIA_TERRITORY_HIERARCHY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PROGNOS_CINQAIR_V2_src_super_b0 /*+basename(EXT_PROGNOS_CINQAIR_V2_src_super)*/ 
(
 week_end_date,
 practice_name,
 practice_address_line_1,
 pracitce_address_line_2,
 city,
 state,
 zip_code,
 provider_first_name,
 provider_last_name,
 npi,
 specialty_1,
 specialty_2,
 pts_with_moderate_severe_asthma_and_eosinophils_0_149,
 pts_with_moderate_severe_asthma_and_eosinophils_150_399,
 pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
 pts_with_ao_asthma_and_eosinophils_0_149,
 pts_with_ao_asthma_and_eosinophils_150_399,
 pts_with_ao_asthma_and_eosinophils_400_or_greater,
 pts_with_moderate_severe_asthma_and_has_eosinophils_300_499,
 pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PROGNOS_CINQAIR_V2_src.week_end_date,
        EXT_PROGNOS_CINQAIR_V2_src.practice_name,
        EXT_PROGNOS_CINQAIR_V2_src.practice_address_line_1,
        EXT_PROGNOS_CINQAIR_V2_src.pracitce_address_line_2,
        EXT_PROGNOS_CINQAIR_V2_src.city,
        EXT_PROGNOS_CINQAIR_V2_src.state,
        EXT_PROGNOS_CINQAIR_V2_src.zip_code,
        EXT_PROGNOS_CINQAIR_V2_src.provider_first_name,
        EXT_PROGNOS_CINQAIR_V2_src.provider_last_name,
        EXT_PROGNOS_CINQAIR_V2_src.npi,
        EXT_PROGNOS_CINQAIR_V2_src.specialty_1,
        EXT_PROGNOS_CINQAIR_V2_src.specialty_2,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_0_149,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_150_399,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_0_149,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_150_399,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_400_or_greater,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_has_eosinophils_300_499,
        EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater,
        EXT_PROGNOS_CINQAIR_V2_src.batch_id,
        EXT_PROGNOS_CINQAIR_V2_src.row_id,
        EXT_PROGNOS_CINQAIR_V2_src.update_ts
 FROM teva_ingestion.EXT_PROGNOS_CINQAIR_V2_src
 ORDER BY EXT_PROGNOS_CINQAIR_V2_src.batch_id
SEGMENTED BY hash(EXT_PROGNOS_CINQAIR_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src_super_b0 /*+basename(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src_super)*/ 
(
 client_num,
 report_num,
 outlet_code,
 zip,
 subcategory_code,
 sra_4,
 category_code,
 ims_product_code,
 data_date,
 dol_mth01,
 dol_mth02,
 dol_mth03,
 dol_mth04,
 dol_mth05,
 dol_mth06,
 dol_mth07,
 dol_mth08,
 dol_mth09,
 dol_mth10,
 dol_mth11,
 dol_mth12,
 dol_mth13,
 dol_mth14,
 dol_mth15,
 dol_mth16,
 dol_mth17,
 dol_mth18,
 dol_mth19,
 dol_mth20,
 dol_mth21,
 dol_mth22,
 dol_mth23,
 dol_mth24,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.client_num,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.report_num,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.zip,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.subcategory_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.sra_4,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.category_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.ims_product_code,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.data_date,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth01,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth02,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth03,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth04,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth05,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth06,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth07,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth08,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth09,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth10,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth11,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth12,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth13,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth14,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth15,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth16,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth17,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth18,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth19,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth20,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth21,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth22,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth23,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth24,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_name,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_address,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_city,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_state,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_zip,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.row_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src
 ORDER BY EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.batch_id
SEGMENTED BY hash(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src_super_b0 /*+basename(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src_super)*/ 
(
 client_num,
 report_num,
 outlet_code,
 zip,
 subcategory_code,
 sra_4,
 category_code,
 ims_product_code,
 data_date,
 qty_mth01,
 qty_mth02,
 qty_mth03,
 qty_mth04,
 qty_mth05,
 qty_mth06,
 qty_mth07,
 qty_mth08,
 qty_mth09,
 qty_mth10,
 qty_mth11,
 qty_mth12,
 qty_mth13,
 qty_mth14,
 qty_mth15,
 qty_mth16,
 qty_mth17,
 qty_mth18,
 qty_mth19,
 qty_mth20,
 qty_mth21,
 qty_mth22,
 qty_mth23,
 qty_mth24,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.client_num,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.report_num,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.zip,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.subcategory_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.sra_4,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.category_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.ims_product_code,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.data_date,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth01,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth02,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth03,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth04,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth05,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth06,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth07,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth08,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth09,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth10,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth11,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth12,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth13,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth14,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth15,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth16,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth17,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth18,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth19,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth20,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth21,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth22,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth23,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth24,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_name,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_address,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_city,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_state,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_zip,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.row_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src
 ORDER BY EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.batch_id
SEGMENTED BY hash(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ONC_SALES_ADJUSTMENT_LOAD_src_super_b0 /*+basename(ONC_SALES_ADJUSTMENT_LOAD_src_super)*/ 
(
 adj_code,
 adj_time_period,
 tvcmid,
 basket_id,
 adj_factor,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ONC_SALES_ADJUSTMENT_LOAD_src.adj_code,
        ONC_SALES_ADJUSTMENT_LOAD_src.adj_time_period,
        ONC_SALES_ADJUSTMENT_LOAD_src.tvcmid,
        ONC_SALES_ADJUSTMENT_LOAD_src.basket_id,
        ONC_SALES_ADJUSTMENT_LOAD_src.adj_factor,
        ONC_SALES_ADJUSTMENT_LOAD_src.batch_id,
        ONC_SALES_ADJUSTMENT_LOAD_src.row_id,
        ONC_SALES_ADJUSTMENT_LOAD_src.update_ts
 FROM teva_ingestion.ONC_SALES_ADJUSTMENT_LOAD_src
 ORDER BY ONC_SALES_ADJUSTMENT_LOAD_src.batch_id
SEGMENTED BY hash(ONC_SALES_ADJUSTMENT_LOAD_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src_super_b0 /*+basename(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 lastvieweddate,
 lastreferenceddate,
 assignment_end_date__c,
 assignment_start_date__c,
 assignment_status__c,
 assignment_type__c,
 global_employee_id__c,
 rms_territory_name__c,
 rms_territory_number__c,
 employee__c,
 first_name__c,
 hire_date__c,
 last_name__c,
 local_employee_id__c,
 middle_name__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.ownerid,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.isdeleted,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.name,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.createddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.createdbyid,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastmodifieddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastmodifiedbyid,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.systemmodstamp,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastactivitydate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastvieweddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastreferenceddate,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_end_date__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_start_date__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_status__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_type__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.global_employee_id__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.rms_territory_name__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.rms_territory_number__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.employee__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.first_name__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.hire_date__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.last_name__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.local_employee_id__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.middle_name__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.batch_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.row_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src
 ORDER BY EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.batch_id
SEGMENTED BY hash(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_USER_src_super_b0 /*+basename(EXT_VV_USER_src_super)*/ 
(
 id,
 username,
 lastname,
 firstname,
 name,
 companyname,
 division,
 department,
 title,
 street,
 city,
 state,
 postalcode,
 country,
 latitude,
 longitude,
 email,
 emailpreferencesautobcc,
 emailpreferencesautobccstayint,
 emailpreferencesstayintouchrem,
 senderemail,
 sendername,
 signature,
 stayintouchsubject,
 stayintouchsignature,
 stayintouchnote,
 phone,
 fax,
 mobilephone,
 alias,
 communitynickname,
 isactive,
 timezonesidkey,
 userroleid,
 localesidkey,
 receivesinfoemails,
 receivesadmininfoemails,
 emailencodingkey,
 usertype,
 languagelocalekey,
 employeenumber,
 delegatedapproverid,
 managerid,
 lastlogindate,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 offlinetrialexpirationdate,
 offlinepdatrialexpirationdate,
 userpermissionsmarketinguser,
 userpermissionsofflineuser,
 userpermissionswirelessuser,
 userpermissionsavantgouser,
 userpermscallcenterautologin,
 userpermissionsmobileuser,
 userpermissionssfcontentuser,
 userpermissionsinteractionuser,
 userpermschatteranswersuser,
 forecastenabled,
 userprefsactivityreminderspopu,
 userprefseventreminderscheckbo,
 userprefstaskreminderscheckbox,
 userprefsremindersoundoff,
 userprefshidecsngetchattermobi,
 userprefshidecsndesktoptask,
 userpreferencesoptoutoftouch,
 userprefsshowtitletoexternalus,
 userprefsshowmanagertoexternal,
 userprefsshowemailtoexternalus,
 userprefsshowworkphonetoextern,
 userprefsshowmobilephonetoexte,
 userprefsshowfaxtoexternaluser,
 userprefsshowstreetaddresstoex,
 userprefsshowcitytoexternaluse,
 userprefsshowstatetoexternalus,
 userprefsshowpostalcodetoexter,
 userprefsshowcountrytoexternal,
 userprefsshowprofilepictoguest,
 userprefsshowtitletoguestusers,
 userprefsshowcitytoguestusers,
 userprefsshowstatetoguestusers,
 userprefsshowpostalcodetoguest,
 userprefsshowcountrytoguestuse,
 contactid,
 accountid,
 callcenterid,
 extension,
 federationidentifier,
 lastvieweddate,
 lastreferenceddate,
 last_mobile_connect_vod__c,
 last_tablet_connect_vod__c,
 last_mobile_connect_version,
 last_tablet_connect_version,
 last_mobile_sync_vod__c,
 last_tablet_sync_vod__c,
 raiselogginglevel_vod__c,
 senddetailedlog_vod__c,
 last_blackberry_connect_vod__c,
 last_blackberry_connect_versio,
 last_blackberry_sync_vod__c,
 force_full_refresh_vod__c,
 override_systemmodstamp_timest,
 facetime_email_vod__c,
 facetime_phone_vod__c,
 product_expertise_vod__c,
 available_vod__c,
 available_last_update_vod__c,
 last_ipad_connect_version,
 last_ipad_connect_vod__c,
 last_ipad_sync_vod__c,
 inventory_order_allocation_gro,
 concur_user_id_vod__c,
 external_id_tva__c,
 last_ipad_ios_version_vod__c,
 veeva_id__c,
 login_id_tva__c,
 primary_territory_vod__c,
 analytics_admin_vod__c,
 content_admin_vod__c,
 upload_vtrans_vod__c,
 can_sample_tva__c,
 do_not_modify_tva__c,
 profile_name_vod__c,
 Remote_Meeting_Host_Id_vod__c,
 Remote_Meeting_Host_Token_vod__c,
 Remote_Meeting_Start_From_CRM_Online_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_USER_src.id,
        EXT_VV_USER_src.username,
        EXT_VV_USER_src.lastname,
        EXT_VV_USER_src.firstname,
        EXT_VV_USER_src.name,
        EXT_VV_USER_src.companyname,
        EXT_VV_USER_src.division,
        EXT_VV_USER_src.department,
        EXT_VV_USER_src.title,
        EXT_VV_USER_src.street,
        EXT_VV_USER_src.city,
        EXT_VV_USER_src.state,
        EXT_VV_USER_src.postalcode,
        EXT_VV_USER_src.country,
        EXT_VV_USER_src.latitude,
        EXT_VV_USER_src.longitude,
        EXT_VV_USER_src.email,
        EXT_VV_USER_src.emailpreferencesautobcc,
        EXT_VV_USER_src.emailpreferencesautobccstayint,
        EXT_VV_USER_src.emailpreferencesstayintouchrem,
        EXT_VV_USER_src.senderemail,
        EXT_VV_USER_src.sendername,
        EXT_VV_USER_src.signature,
        EXT_VV_USER_src.stayintouchsubject,
        EXT_VV_USER_src.stayintouchsignature,
        EXT_VV_USER_src.stayintouchnote,
        EXT_VV_USER_src.phone,
        EXT_VV_USER_src.fax,
        EXT_VV_USER_src.mobilephone,
        EXT_VV_USER_src.alias,
        EXT_VV_USER_src.communitynickname,
        EXT_VV_USER_src.isactive,
        EXT_VV_USER_src.timezonesidkey,
        EXT_VV_USER_src.userroleid,
        EXT_VV_USER_src.localesidkey,
        EXT_VV_USER_src.receivesinfoemails,
        EXT_VV_USER_src.receivesadmininfoemails,
        EXT_VV_USER_src.emailencodingkey,
        EXT_VV_USER_src.usertype,
        EXT_VV_USER_src.languagelocalekey,
        EXT_VV_USER_src.employeenumber,
        EXT_VV_USER_src.delegatedapproverid,
        EXT_VV_USER_src.managerid,
        EXT_VV_USER_src.lastlogindate,
        EXT_VV_USER_src.createddate,
        EXT_VV_USER_src.createdbyid,
        EXT_VV_USER_src.lastmodifieddate,
        EXT_VV_USER_src.lastmodifiedbyid,
        EXT_VV_USER_src.systemmodstamp,
        EXT_VV_USER_src.offlinetrialexpirationdate,
        EXT_VV_USER_src.offlinepdatrialexpirationdate,
        EXT_VV_USER_src.userpermissionsmarketinguser,
        EXT_VV_USER_src.userpermissionsofflineuser,
        EXT_VV_USER_src.userpermissionswirelessuser,
        EXT_VV_USER_src.userpermissionsavantgouser,
        EXT_VV_USER_src.userpermscallcenterautologin,
        EXT_VV_USER_src.userpermissionsmobileuser,
        EXT_VV_USER_src.userpermissionssfcontentuser,
        EXT_VV_USER_src.userpermissionsinteractionuser,
        EXT_VV_USER_src.userpermschatteranswersuser,
        EXT_VV_USER_src.forecastenabled,
        EXT_VV_USER_src.userprefsactivityreminderspopu,
        EXT_VV_USER_src.userprefseventreminderscheckbo,
        EXT_VV_USER_src.userprefstaskreminderscheckbox,
        EXT_VV_USER_src.userprefsremindersoundoff,
        EXT_VV_USER_src.userprefshidecsngetchattermobi,
        EXT_VV_USER_src.userprefshidecsndesktoptask,
        EXT_VV_USER_src.userpreferencesoptoutoftouch,
        EXT_VV_USER_src.userprefsshowtitletoexternalus,
        EXT_VV_USER_src.userprefsshowmanagertoexternal,
        EXT_VV_USER_src.userprefsshowemailtoexternalus,
        EXT_VV_USER_src.userprefsshowworkphonetoextern,
        EXT_VV_USER_src.userprefsshowmobilephonetoexte,
        EXT_VV_USER_src.userprefsshowfaxtoexternaluser,
        EXT_VV_USER_src.userprefsshowstreetaddresstoex,
        EXT_VV_USER_src.userprefsshowcitytoexternaluse,
        EXT_VV_USER_src.userprefsshowstatetoexternalus,
        EXT_VV_USER_src.userprefsshowpostalcodetoexter,
        EXT_VV_USER_src.userprefsshowcountrytoexternal,
        EXT_VV_USER_src.userprefsshowprofilepictoguest,
        EXT_VV_USER_src.userprefsshowtitletoguestusers,
        EXT_VV_USER_src.userprefsshowcitytoguestusers,
        EXT_VV_USER_src.userprefsshowstatetoguestusers,
        EXT_VV_USER_src.userprefsshowpostalcodetoguest,
        EXT_VV_USER_src.userprefsshowcountrytoguestuse,
        EXT_VV_USER_src.contactid,
        EXT_VV_USER_src.accountid,
        EXT_VV_USER_src.callcenterid,
        EXT_VV_USER_src.extension,
        EXT_VV_USER_src.federationidentifier,
        EXT_VV_USER_src.lastvieweddate,
        EXT_VV_USER_src.lastreferenceddate,
        EXT_VV_USER_src.last_mobile_connect_vod__c,
        EXT_VV_USER_src.last_tablet_connect_vod__c,
        EXT_VV_USER_src.last_mobile_connect_version,
        EXT_VV_USER_src.last_tablet_connect_version,
        EXT_VV_USER_src.last_mobile_sync_vod__c,
        EXT_VV_USER_src.last_tablet_sync_vod__c,
        EXT_VV_USER_src.raiselogginglevel_vod__c,
        EXT_VV_USER_src.senddetailedlog_vod__c,
        EXT_VV_USER_src.last_blackberry_connect_vod__c,
        EXT_VV_USER_src.last_blackberry_connect_versio,
        EXT_VV_USER_src.last_blackberry_sync_vod__c,
        EXT_VV_USER_src.force_full_refresh_vod__c,
        EXT_VV_USER_src.override_systemmodstamp_timest,
        EXT_VV_USER_src.facetime_email_vod__c,
        EXT_VV_USER_src.facetime_phone_vod__c,
        EXT_VV_USER_src.product_expertise_vod__c,
        EXT_VV_USER_src.available_vod__c,
        EXT_VV_USER_src.available_last_update_vod__c,
        EXT_VV_USER_src.last_ipad_connect_version,
        EXT_VV_USER_src.last_ipad_connect_vod__c,
        EXT_VV_USER_src.last_ipad_sync_vod__c,
        EXT_VV_USER_src.inventory_order_allocation_gro,
        EXT_VV_USER_src.concur_user_id_vod__c,
        EXT_VV_USER_src.external_id_tva__c,
        EXT_VV_USER_src.last_ipad_ios_version_vod__c,
        EXT_VV_USER_src.veeva_id__c,
        EXT_VV_USER_src.login_id_tva__c,
        EXT_VV_USER_src.primary_territory_vod__c,
        EXT_VV_USER_src.analytics_admin_vod__c,
        EXT_VV_USER_src.content_admin_vod__c,
        EXT_VV_USER_src.upload_vtrans_vod__c,
        EXT_VV_USER_src.can_sample_tva__c,
        EXT_VV_USER_src.do_not_modify_tva__c,
        EXT_VV_USER_src.profile_name_vod__c,
        EXT_VV_USER_src.Remote_Meeting_Host_Id_vod__c,
        EXT_VV_USER_src.Remote_Meeting_Host_Token_vod__c,
        EXT_VV_USER_src.Remote_Meeting_Start_From_CRM_Online_vod__c,
        EXT_VV_USER_src.batch_id,
        EXT_VV_USER_src.row_id,
        EXT_VV_USER_src.update_ts
 FROM teva_ingestion.EXT_VV_USER_src
 ORDER BY EXT_VV_USER_src.batch_id
SEGMENTED BY hash(EXT_VV_USER_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_CALL2_VOD__C_src_super_b0 /*+basename(EXT_VV_CALL2_VOD__C_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 recordtypeid,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 mayedit,
 islocked,
 lastvieweddate,
 lastreferenceddate,
 sample_card_vod__c,
 add_detail_vod__c,
 property_vod__c,
 account_vod__c,
 zvod_product_discussion_vod__c,
 status_vod__c,
 parent_address_vod__c,
 account_plan_vod__c,
 zvod_savenew_vod__c,
 next_call_notes_vod__c,
 mobile_id_vod__c,
 zvod_account_credentials_vod_c,
 zvod_account_preferred_name_vo,
 zvod_account_sample_status_vod,
 zvod_attendees_vod__c,
 zvod_key_messages_vod__c,
 zvod_detailing_vod__c,
 zvod_expenses_vod__c,
 zvod_followup_vod__c,
 zvod_samples_vod__c,
 zvod_save_vod__c,
 zvod_submit_vod__c,
 zvod_delete_vod__c,
 activity_type__c,
 significant_event__c,
 location_vod__c,
 subject_vod__c,
 call_datetime_vod__c,
 disbursed_to_vod__c,
 request_receipt_vod__c,
 signature_date_vod__c,
 territory_vod__c,
 submitted_by_mobile_vod__c,
 call_type_vod__c,
 add_key_message_vod__c,
 address_vod__c,
 attendees_vod__c,
 attendee_type_vod__c,
 call_date_vod__c,
 detailed_products_vod__c,
 no_disbursement_vod__c,
 parent_call_vod__c,
 user_vod__c,
 contact_vod__c,
 zvod_entity_vod__c,
 medical_event_vod__c,
 mobile_created_datetime_vod__c,
 mobile_last_modified_datetime,
 license_vod__c,
 is_parent_call_vod__c,
 entity_display_name_vod__c,
 last_device_vod__c,
 ship_address_line_1_vod__c,
 ship_address_line_2_vod__c,
 ship_city_vod__c,
 ship_country_vod__c,
 ship_license_expiration_date,
 ship_license_status_vod__c,
 ship_license_vod__c,
 ship_state_vod__c,
 ship_to_address_vod__c,
 ship_zip_vod__c,
 ship_to_address_text_vod__c,
 clm_vod__c,
 zvod_clmdetails_vod__c,
 is_sampled_call_vod__c,
 zvod_surveys_vod__c,
 presentations_vod__c,
 entity_reference_id_vod__c,
 error_reference_call_vod__c,
 duration_vod__c,
 color_vod__c,
 allowed_products_vod__c,
 zvod_attachments_vod__c,
 sample_card_reason_vod__c,
 assmca_vod__c,
 address_line_1_vod__c,
 address_line_2_vod__c,
 city_vod__c,
 dea_address_line_1_vod__c,
 dea_address_line_2_vod__c,
 dea_address_vod__c,
 dea_city_vod__c,
 dea_expiration_date_vod__c,
 dea_state_vod__c,
 dea_zip_4_vod__c,
 dea_zip_vod__c,
 dea_vod__c,
 ship_zip_4_vod__c,
 state_vod__c,
 zip_4_vod__c,
 zip_vod__c,
 sample_send_card_vod__c,
 zvod_address_vod_c_dea_status_,
 signature_page_image_vod__c,
 credentials_vod__c,
 salutation_vod__c,
 zvod_account_call_reminder_vod,
 sales_org_tva__c,
 zvod_business_account_vod__c,
 product_priority_1_vod__c,
 product_priority_2_vod__c,
 product_priority_3_vod__c,
 product_priority_4_vod__c,
 product_priority_5_vod__c,
 zvod_more_actions_vod__c,
 zvod_call_conflict_status,
 signature_timestamp_vod__c,
 expense_amount_vod__c,
 total_expense_attendees_count,
 attendee_list_vod__c,
 expense_post_status_vod__c,
 attendee_post_status_vod__c,
 expense_system_external_id,
 incurred_expense_vod__c,
 assigner_vod__c,
 assignment_datetime_vod__c,
 zvod_call_objective_vod__c,
 signature_location_longitude,
 signature_location_latitude,
 location_services_status,
 created_by_timezone_tva__c,
 license_expiration_date_vod__c,
 license_status_vod__c,
 ship_assmca_vod__c,
 ship_dea_expiration_date,
 ship_dea_vod__c,
 call_method_tva__c,
 bendeka_indication_tva__c,
 austedo_indication_tva__c,
 call_duration_tva__c,
 How_Executed_TVA__c,
 Remote_Meeting_vod__c,
 Veeva_Remote_Meeting_Id_vod__c,
 Cobrowse_URL_Participant_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts,
 Signature_Captured_Remotely_vod__c,
 Remote_Signature_Attendee_Name_vod__c,
 t21s10_austedo_indication_tva__c,
 t22s2_outcomes_from_visit__c,
 t22s2_visit_trigger__c,
 t22s2_visit_trigger_date__c
)
AS
 SELECT EXT_VV_CALL2_VOD__C_src.id,
        EXT_VV_CALL2_VOD__C_src.ownerid,
        EXT_VV_CALL2_VOD__C_src.isdeleted,
        EXT_VV_CALL2_VOD__C_src.name,
        EXT_VV_CALL2_VOD__C_src.recordtypeid,
        EXT_VV_CALL2_VOD__C_src.createddate,
        EXT_VV_CALL2_VOD__C_src.createdbyid,
        EXT_VV_CALL2_VOD__C_src.lastmodifieddate,
        EXT_VV_CALL2_VOD__C_src.lastmodifiedbyid,
        EXT_VV_CALL2_VOD__C_src.systemmodstamp,
        EXT_VV_CALL2_VOD__C_src.lastactivitydate,
        EXT_VV_CALL2_VOD__C_src.mayedit,
        EXT_VV_CALL2_VOD__C_src.islocked,
        EXT_VV_CALL2_VOD__C_src.lastvieweddate,
        EXT_VV_CALL2_VOD__C_src.lastreferenceddate,
        EXT_VV_CALL2_VOD__C_src.sample_card_vod__c,
        EXT_VV_CALL2_VOD__C_src.add_detail_vod__c,
        EXT_VV_CALL2_VOD__C_src.property_vod__c,
        EXT_VV_CALL2_VOD__C_src.account_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_product_discussion_vod__c,
        EXT_VV_CALL2_VOD__C_src.status_vod__c,
        EXT_VV_CALL2_VOD__C_src.parent_address_vod__c,
        EXT_VV_CALL2_VOD__C_src.account_plan_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_savenew_vod__c,
        EXT_VV_CALL2_VOD__C_src.next_call_notes_vod__c,
        EXT_VV_CALL2_VOD__C_src.mobile_id_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_account_credentials_vod_c,
        EXT_VV_CALL2_VOD__C_src.zvod_account_preferred_name_vo,
        EXT_VV_CALL2_VOD__C_src.zvod_account_sample_status_vod,
        EXT_VV_CALL2_VOD__C_src.zvod_attendees_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_key_messages_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_detailing_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_expenses_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_followup_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_samples_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_save_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_submit_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_delete_vod__c,
        EXT_VV_CALL2_VOD__C_src.activity_type__c,
        EXT_VV_CALL2_VOD__C_src.significant_event__c,
        EXT_VV_CALL2_VOD__C_src.location_vod__c,
        EXT_VV_CALL2_VOD__C_src.subject_vod__c,
        EXT_VV_CALL2_VOD__C_src.call_datetime_vod__c,
        EXT_VV_CALL2_VOD__C_src.disbursed_to_vod__c,
        EXT_VV_CALL2_VOD__C_src.request_receipt_vod__c,
        EXT_VV_CALL2_VOD__C_src.signature_date_vod__c,
        EXT_VV_CALL2_VOD__C_src.territory_vod__c,
        EXT_VV_CALL2_VOD__C_src.submitted_by_mobile_vod__c,
        EXT_VV_CALL2_VOD__C_src.call_type_vod__c,
        EXT_VV_CALL2_VOD__C_src.add_key_message_vod__c,
        EXT_VV_CALL2_VOD__C_src.address_vod__c,
        EXT_VV_CALL2_VOD__C_src.attendees_vod__c,
        EXT_VV_CALL2_VOD__C_src.attendee_type_vod__c,
        EXT_VV_CALL2_VOD__C_src.call_date_vod__c,
        EXT_VV_CALL2_VOD__C_src.detailed_products_vod__c,
        EXT_VV_CALL2_VOD__C_src.no_disbursement_vod__c,
        EXT_VV_CALL2_VOD__C_src.parent_call_vod__c,
        EXT_VV_CALL2_VOD__C_src.user_vod__c,
        EXT_VV_CALL2_VOD__C_src.contact_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_entity_vod__c,
        EXT_VV_CALL2_VOD__C_src.medical_event_vod__c,
        EXT_VV_CALL2_VOD__C_src.mobile_created_datetime_vod__c,
        EXT_VV_CALL2_VOD__C_src.mobile_last_modified_datetime,
        EXT_VV_CALL2_VOD__C_src.license_vod__c,
        EXT_VV_CALL2_VOD__C_src.is_parent_call_vod__c,
        EXT_VV_CALL2_VOD__C_src.entity_display_name_vod__c,
        EXT_VV_CALL2_VOD__C_src.last_device_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_address_line_1_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_address_line_2_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_city_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_country_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_license_expiration_date,
        EXT_VV_CALL2_VOD__C_src.ship_license_status_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_license_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_state_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_to_address_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_zip_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_to_address_text_vod__c,
        EXT_VV_CALL2_VOD__C_src.clm_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_clmdetails_vod__c,
        EXT_VV_CALL2_VOD__C_src.is_sampled_call_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_surveys_vod__c,
        EXT_VV_CALL2_VOD__C_src.presentations_vod__c,
        EXT_VV_CALL2_VOD__C_src.entity_reference_id_vod__c,
        EXT_VV_CALL2_VOD__C_src.error_reference_call_vod__c,
        EXT_VV_CALL2_VOD__C_src.duration_vod__c,
        EXT_VV_CALL2_VOD__C_src.color_vod__c,
        EXT_VV_CALL2_VOD__C_src.allowed_products_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_attachments_vod__c,
        EXT_VV_CALL2_VOD__C_src.sample_card_reason_vod__c,
        EXT_VV_CALL2_VOD__C_src.assmca_vod__c,
        EXT_VV_CALL2_VOD__C_src.address_line_1_vod__c,
        EXT_VV_CALL2_VOD__C_src.address_line_2_vod__c,
        EXT_VV_CALL2_VOD__C_src.city_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_address_line_1_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_address_line_2_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_address_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_city_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_expiration_date_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_state_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_zip_4_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_zip_vod__c,
        EXT_VV_CALL2_VOD__C_src.dea_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_zip_4_vod__c,
        EXT_VV_CALL2_VOD__C_src.state_vod__c,
        EXT_VV_CALL2_VOD__C_src.zip_4_vod__c,
        EXT_VV_CALL2_VOD__C_src.zip_vod__c,
        EXT_VV_CALL2_VOD__C_src.sample_send_card_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_address_vod_c_dea_status_,
        EXT_VV_CALL2_VOD__C_src.signature_page_image_vod__c,
        EXT_VV_CALL2_VOD__C_src.credentials_vod__c,
        EXT_VV_CALL2_VOD__C_src.salutation_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_account_call_reminder_vod,
        EXT_VV_CALL2_VOD__C_src.sales_org_tva__c,
        EXT_VV_CALL2_VOD__C_src.zvod_business_account_vod__c,
        EXT_VV_CALL2_VOD__C_src.product_priority_1_vod__c,
        EXT_VV_CALL2_VOD__C_src.product_priority_2_vod__c,
        EXT_VV_CALL2_VOD__C_src.product_priority_3_vod__c,
        EXT_VV_CALL2_VOD__C_src.product_priority_4_vod__c,
        EXT_VV_CALL2_VOD__C_src.product_priority_5_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_more_actions_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_call_conflict_status,
        EXT_VV_CALL2_VOD__C_src.signature_timestamp_vod__c,
        EXT_VV_CALL2_VOD__C_src.expense_amount_vod__c,
        EXT_VV_CALL2_VOD__C_src.total_expense_attendees_count,
        EXT_VV_CALL2_VOD__C_src.attendee_list_vod__c,
        EXT_VV_CALL2_VOD__C_src.expense_post_status_vod__c,
        EXT_VV_CALL2_VOD__C_src.attendee_post_status_vod__c,
        EXT_VV_CALL2_VOD__C_src.expense_system_external_id,
        EXT_VV_CALL2_VOD__C_src.incurred_expense_vod__c,
        EXT_VV_CALL2_VOD__C_src.assigner_vod__c,
        EXT_VV_CALL2_VOD__C_src.assignment_datetime_vod__c,
        EXT_VV_CALL2_VOD__C_src.zvod_call_objective_vod__c,
        EXT_VV_CALL2_VOD__C_src.signature_location_longitude,
        EXT_VV_CALL2_VOD__C_src.signature_location_latitude,
        EXT_VV_CALL2_VOD__C_src.location_services_status,
        EXT_VV_CALL2_VOD__C_src.created_by_timezone_tva__c,
        EXT_VV_CALL2_VOD__C_src.license_expiration_date_vod__c,
        EXT_VV_CALL2_VOD__C_src.license_status_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_assmca_vod__c,
        EXT_VV_CALL2_VOD__C_src.ship_dea_expiration_date,
        EXT_VV_CALL2_VOD__C_src.ship_dea_vod__c,
        EXT_VV_CALL2_VOD__C_src.call_method_tva__c,
        EXT_VV_CALL2_VOD__C_src.bendeka_indication_tva__c,
        EXT_VV_CALL2_VOD__C_src.austedo_indication_tva__c,
        EXT_VV_CALL2_VOD__C_src.call_duration_tva__c,
        EXT_VV_CALL2_VOD__C_src.How_Executed_TVA__c,
        EXT_VV_CALL2_VOD__C_src.Remote_Meeting_vod__c,
        EXT_VV_CALL2_VOD__C_src.Veeva_Remote_Meeting_Id_vod__c,
        EXT_VV_CALL2_VOD__C_src.Cobrowse_URL_Participant_vod__c,
        EXT_VV_CALL2_VOD__C_src.batch_id,
        EXT_VV_CALL2_VOD__C_src.row_id,
        EXT_VV_CALL2_VOD__C_src.update_ts,
        EXT_VV_CALL2_VOD__C_src.Signature_Captured_Remotely_vod__c,
        EXT_VV_CALL2_VOD__C_src.Remote_Signature_Attendee_Name_vod__c,
        EXT_VV_CALL2_VOD__C_src.t21s10_austedo_indication_tva__c,
        EXT_VV_CALL2_VOD__C_src.t22s2_outcomes_from_visit__c,
        EXT_VV_CALL2_VOD__C_src.t22s2_visit_trigger__c,
        EXT_VV_CALL2_VOD__C_src.t22s2_visit_trigger_date__c
 FROM teva_ingestion.EXT_VV_CALL2_VOD__C_src
 ORDER BY EXT_VV_CALL2_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_CALL2_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src_super_b0 /*+basename(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src_super)*/ 
(
 Id,
 IsDeleted,
 Name,
 RecordTypeId,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 MayEdit,
 IsLocked,
 Remote_Meeting_vod__c,
 Call_vod__c,
 Join_Time_vod__c,
 Leave_Time_vod__c,
 Meeting_End_Time_vod__c,
 Meeting_Start_Time_vod__c,
 Name_vod__c,
 Participant_Id_vod__c,
 VExternal_Id_vod__c,
 Veeva_Remote_Meeting_Id_vod__c,
 Device_vod__c,
 EM_Attendee_vod__c,
 EM_Event_Speaker_vod__c,
 Event_vod__c,
 Network_Type_vod__c,
 Meeting_Duration_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Id,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.IsDeleted,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Name,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.RecordTypeId,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.CreatedDate,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.CreatedById,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.LastModifiedDate,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.LastModifiedById,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.SystemModstamp,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.MayEdit,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.IsLocked,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Remote_Meeting_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Call_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Join_Time_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Leave_Time_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Meeting_End_Time_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Meeting_Start_Time_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Name_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Participant_Id_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.VExternal_Id_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Veeva_Remote_Meeting_Id_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Device_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.EM_Attendee_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.EM_Event_Speaker_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Event_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Network_Type_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Meeting_Duration_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.batch_id,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.row_id,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src
 ORDER BY EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_OCHL_W_src_super_b0 /*+basename(EXT_IMS_OCHL_W_src_super)*/ 
(
 Constant_CL,
 ddd_client_number,
 blank1,
 client_territory_number,
 ddd_outlet_number,
 ddd_outlet_name,
 ddd_outlet_address,
 city,
 state,
 subcategory_code,
 action_code,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_IMS_OCHL_W_src.Constant_CL,
        EXT_IMS_OCHL_W_src.ddd_client_number,
        EXT_IMS_OCHL_W_src.blank1,
        EXT_IMS_OCHL_W_src.client_territory_number,
        EXT_IMS_OCHL_W_src.ddd_outlet_number,
        EXT_IMS_OCHL_W_src.ddd_outlet_name,
        EXT_IMS_OCHL_W_src.ddd_outlet_address,
        EXT_IMS_OCHL_W_src.city,
        EXT_IMS_OCHL_W_src.state,
        EXT_IMS_OCHL_W_src.subcategory_code,
        EXT_IMS_OCHL_W_src.action_code,
        EXT_IMS_OCHL_W_src.batch_id,
        EXT_IMS_OCHL_W_src.row_id,
        EXT_IMS_OCHL_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_OCHL_W_src
 ORDER BY EXT_IMS_OCHL_W_src.batch_id
SEGMENTED BY hash(EXT_IMS_OCHL_W_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_OCHL_M_src_super_b0 /*+basename(EXT_IMS_OCHL_M_src_super)*/ 
(
 Constant_CL,
 ddd_client_number,
 blank1,
 client_territory_number,
 ddd_outlet_number,
 ddd_outlet_name,
 ddd_outlet_address,
 city,
 state,
 subcategory_code,
 action_code,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_IMS_OCHL_M_src.Constant_CL,
        EXT_IMS_OCHL_M_src.ddd_client_number,
        EXT_IMS_OCHL_M_src.blank1,
        EXT_IMS_OCHL_M_src.client_territory_number,
        EXT_IMS_OCHL_M_src.ddd_outlet_number,
        EXT_IMS_OCHL_M_src.ddd_outlet_name,
        EXT_IMS_OCHL_M_src.ddd_outlet_address,
        EXT_IMS_OCHL_M_src.city,
        EXT_IMS_OCHL_M_src.state,
        EXT_IMS_OCHL_M_src.subcategory_code,
        EXT_IMS_OCHL_M_src.action_code,
        EXT_IMS_OCHL_M_src.batch_id,
        EXT_IMS_OCHL_M_src.row_id,
        EXT_IMS_OCHL_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_OCHL_M_src
 ORDER BY EXT_IMS_OCHL_M_src.batch_id
SEGMENTED BY hash(EXT_IMS_OCHL_M_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.XPD_ADD_ON_DETAILS_src_super_b0 /*+basename(XPD_ADD_ON_DETAILS_src_super)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 filler_01,
 specialty,
 flexible_field_2,
 flexible_field_3,
 flexible_field_4,
 flexible_field_5,
 flexible_field_6,
 flexible_field_7,
 flexible_field_8,
 add_to_product_group,
 add_On_product_group,
 month_ending,
 add_on_rx,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT XPD_ADD_ON_DETAILS_src.ims_client_number,
        XPD_ADD_ON_DETAILS_src.ims_report_number,
        XPD_ADD_ON_DETAILS_src.channel_indicator,
        XPD_ADD_ON_DETAILS_src.ims_id,
        XPD_ADD_ON_DETAILS_src.filler_01,
        XPD_ADD_ON_DETAILS_src.specialty,
        XPD_ADD_ON_DETAILS_src.flexible_field_2,
        XPD_ADD_ON_DETAILS_src.flexible_field_3,
        XPD_ADD_ON_DETAILS_src.flexible_field_4,
        XPD_ADD_ON_DETAILS_src.flexible_field_5,
        XPD_ADD_ON_DETAILS_src.flexible_field_6,
        XPD_ADD_ON_DETAILS_src.flexible_field_7,
        XPD_ADD_ON_DETAILS_src.flexible_field_8,
        XPD_ADD_ON_DETAILS_src.add_to_product_group,
        XPD_ADD_ON_DETAILS_src.add_On_product_group,
        XPD_ADD_ON_DETAILS_src.month_ending,
        XPD_ADD_ON_DETAILS_src.add_on_rx,
        XPD_ADD_ON_DETAILS_src.batch_id,
        XPD_ADD_ON_DETAILS_src.row_id,
        XPD_ADD_ON_DETAILS_src.update_ts
 FROM teva_ingestion.XPD_ADD_ON_DETAILS_src
 ORDER BY XPD_ADD_ON_DETAILS_src.batch_id
SEGMENTED BY hash(XPD_ADD_ON_DETAILS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.XPD_RESTART_DIFF_DETAILS_src_super_b0 /*+basename(XPD_RESTART_DIFF_DETAILS_src_super)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 filler_01,
 specialty,
 flexible_field_2,
 flexible_field_3,
 flexible_field_4,
 flexible_field_5,
 flexible_field_6,
 flexible_field_7,
 flexible_field_8,
 rdf_product_group,
 rd_product_group,
 month_ending,
 restart_diff_rx,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT XPD_RESTART_DIFF_DETAILS_src.ims_client_number,
        XPD_RESTART_DIFF_DETAILS_src.ims_report_number,
        XPD_RESTART_DIFF_DETAILS_src.channel_indicator,
        XPD_RESTART_DIFF_DETAILS_src.ims_id,
        XPD_RESTART_DIFF_DETAILS_src.filler_01,
        XPD_RESTART_DIFF_DETAILS_src.specialty,
        XPD_RESTART_DIFF_DETAILS_src.flexible_field_2,
        XPD_RESTART_DIFF_DETAILS_src.flexible_field_3,
        XPD_RESTART_DIFF_DETAILS_src.flexible_field_4,
        XPD_RESTART_DIFF_DETAILS_src.flexible_field_5,
        XPD_RESTART_DIFF_DETAILS_src.flexible_field_6,
        XPD_RESTART_DIFF_DETAILS_src.flexible_field_7,
        XPD_RESTART_DIFF_DETAILS_src.flexible_field_8,
        XPD_RESTART_DIFF_DETAILS_src.rdf_product_group,
        XPD_RESTART_DIFF_DETAILS_src.rd_product_group,
        XPD_RESTART_DIFF_DETAILS_src.month_ending,
        XPD_RESTART_DIFF_DETAILS_src.restart_diff_rx,
        XPD_RESTART_DIFF_DETAILS_src.batch_id,
        XPD_RESTART_DIFF_DETAILS_src.row_id,
        XPD_RESTART_DIFF_DETAILS_src.update_ts
 FROM teva_ingestion.XPD_RESTART_DIFF_DETAILS_src
 ORDER BY XPD_RESTART_DIFF_DETAILS_src.batch_id
SEGMENTED BY hash(XPD_RESTART_DIFF_DETAILS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TRIALCARD_COUPON_src_super_b0 /*+basename(EXT_TRIALCARD_COUPON_src_super)*/ 
(
 redemption_type,
 transaction_type,
 claim_authorization_number,
 original_claim_authorization_number,
 date_of_fill,
 date_written,
 day_supply,
 ndc,
 daw,
 drug_name,
 drug_description,
 new_refill_code,
 quantity,
 number_of_refills,
 other_coverage_code,
 group_num,
 member_id,
 patient_gender,
 patient_age,
 date_processed,
 nabp,
 pharmacy_chain,
 pharmacy_npi,
 rx_num,
 pharmacy_name,
 pharmacy_address_1,
 pharmacy_address_2,
 pharmacy_city,
 pharmacy_state,
 pharmacy_zip,
 pharmacy_phone,
 hcp_npi,
 hcp_first_name,
 hcp_middle_name,
 hcp_last_name,
 hcp_suffix,
 hcp_designation,
 hcp_specialty_1,
 hcp_specialty_2,
 hcp_address_1,
 hcp_address_2,
 hcp_city,
 hcp_state,
 hcp_zip,
 submission_method,
 previous_payer_id,
 patient_expense,
 patient_benefit,
 patient_copay,
 patient_oop,
 pharmacy_fee,
 amount_due,
 create_date,
 occ_payment_type,
 calc_awp,
 admin_hcp_npi,
 admin_hcp_name,
 admin_hcp_address,
 admin_hcp_address2,
 admin_hcp_city,
 admin_hcp_state,
 admin_hcp_zip,
 claim_type,
 administration_flag,
 soc_name,
 soc_phone,
 soc_fax,
 soc_address,
 soc_city,
 soc_state,
 soc_zip,
 soc_id,
 soc_npi,
 payer_name,
 cpt_code,
 patient_type,
 primary_bin,
 primary_bin_description,
 reject_code,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_TRIALCARD_COUPON_src.redemption_type,
        EXT_TRIALCARD_COUPON_src.transaction_type,
        EXT_TRIALCARD_COUPON_src.claim_authorization_number,
        EXT_TRIALCARD_COUPON_src.original_claim_authorization_number,
        EXT_TRIALCARD_COUPON_src.date_of_fill,
        EXT_TRIALCARD_COUPON_src.date_written,
        EXT_TRIALCARD_COUPON_src.day_supply,
        EXT_TRIALCARD_COUPON_src.ndc,
        EXT_TRIALCARD_COUPON_src.daw,
        EXT_TRIALCARD_COUPON_src.drug_name,
        EXT_TRIALCARD_COUPON_src.drug_description,
        EXT_TRIALCARD_COUPON_src.new_refill_code,
        EXT_TRIALCARD_COUPON_src.quantity,
        EXT_TRIALCARD_COUPON_src.number_of_refills,
        EXT_TRIALCARD_COUPON_src.other_coverage_code,
        EXT_TRIALCARD_COUPON_src.group_num,
        EXT_TRIALCARD_COUPON_src.member_id,
        EXT_TRIALCARD_COUPON_src.patient_gender,
        EXT_TRIALCARD_COUPON_src.patient_age,
        EXT_TRIALCARD_COUPON_src.date_processed,
        EXT_TRIALCARD_COUPON_src.nabp,
        EXT_TRIALCARD_COUPON_src.pharmacy_chain,
        EXT_TRIALCARD_COUPON_src.pharmacy_npi,
        EXT_TRIALCARD_COUPON_src.rx_num,
        EXT_TRIALCARD_COUPON_src.pharmacy_name,
        EXT_TRIALCARD_COUPON_src.pharmacy_address_1,
        EXT_TRIALCARD_COUPON_src.pharmacy_address_2,
        EXT_TRIALCARD_COUPON_src.pharmacy_city,
        EXT_TRIALCARD_COUPON_src.pharmacy_state,
        EXT_TRIALCARD_COUPON_src.pharmacy_zip,
        EXT_TRIALCARD_COUPON_src.pharmacy_phone,
        EXT_TRIALCARD_COUPON_src.hcp_npi,
        EXT_TRIALCARD_COUPON_src.hcp_first_name,
        EXT_TRIALCARD_COUPON_src.hcp_middle_name,
        EXT_TRIALCARD_COUPON_src.hcp_last_name,
        EXT_TRIALCARD_COUPON_src.hcp_suffix,
        EXT_TRIALCARD_COUPON_src.hcp_designation,
        EXT_TRIALCARD_COUPON_src.hcp_specialty_1,
        EXT_TRIALCARD_COUPON_src.hcp_specialty_2,
        EXT_TRIALCARD_COUPON_src.hcp_address_1,
        EXT_TRIALCARD_COUPON_src.hcp_address_2,
        EXT_TRIALCARD_COUPON_src.hcp_city,
        EXT_TRIALCARD_COUPON_src.hcp_state,
        EXT_TRIALCARD_COUPON_src.hcp_zip,
        EXT_TRIALCARD_COUPON_src.submission_method,
        EXT_TRIALCARD_COUPON_src.previous_payer_id,
        EXT_TRIALCARD_COUPON_src.patient_expense,
        EXT_TRIALCARD_COUPON_src.patient_benefit,
        EXT_TRIALCARD_COUPON_src.patient_copay,
        EXT_TRIALCARD_COUPON_src.patient_oop,
        EXT_TRIALCARD_COUPON_src.pharmacy_fee,
        EXT_TRIALCARD_COUPON_src.amount_due,
        EXT_TRIALCARD_COUPON_src.create_date,
        EXT_TRIALCARD_COUPON_src.occ_payment_type,
        EXT_TRIALCARD_COUPON_src.calc_awp,
        EXT_TRIALCARD_COUPON_src.admin_hcp_npi,
        EXT_TRIALCARD_COUPON_src.admin_hcp_name,
        EXT_TRIALCARD_COUPON_src.admin_hcp_address,
        EXT_TRIALCARD_COUPON_src.admin_hcp_address2,
        EXT_TRIALCARD_COUPON_src.admin_hcp_city,
        EXT_TRIALCARD_COUPON_src.admin_hcp_state,
        EXT_TRIALCARD_COUPON_src.admin_hcp_zip,
        EXT_TRIALCARD_COUPON_src.claim_type,
        EXT_TRIALCARD_COUPON_src.administration_flag,
        EXT_TRIALCARD_COUPON_src.soc_name,
        EXT_TRIALCARD_COUPON_src.soc_phone,
        EXT_TRIALCARD_COUPON_src.soc_fax,
        EXT_TRIALCARD_COUPON_src.soc_address,
        EXT_TRIALCARD_COUPON_src.soc_city,
        EXT_TRIALCARD_COUPON_src.soc_state,
        EXT_TRIALCARD_COUPON_src.soc_zip,
        EXT_TRIALCARD_COUPON_src.soc_id,
        EXT_TRIALCARD_COUPON_src.soc_npi,
        EXT_TRIALCARD_COUPON_src.payer_name,
        EXT_TRIALCARD_COUPON_src.cpt_code,
        EXT_TRIALCARD_COUPON_src.patient_type,
        EXT_TRIALCARD_COUPON_src.primary_bin,
        EXT_TRIALCARD_COUPON_src.primary_bin_description,
        EXT_TRIALCARD_COUPON_src.reject_code,
        EXT_TRIALCARD_COUPON_src.batch_id,
        EXT_TRIALCARD_COUPON_src.row_id,
        EXT_TRIALCARD_COUPON_src.update_ts
 FROM teva_ingestion.EXT_TRIALCARD_COUPON_src
 ORDER BY EXT_TRIALCARD_COUPON_src.batch_id
SEGMENTED BY hash(EXT_TRIALCARD_COUPON_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DDD_DOLLARS_M_ADHOC_src_super_b0 /*+basename(EXT_DDD_DOLLARS_M_ADHOC_src_super)*/ 
(
 client_num,
 report_num,
 outlet_code,
 zip,
 subcategory_code,
 sra_4,
 category_code,
 ims_product_code,
 data_date,
 dol_mth01,
 dol_mth02,
 dol_mth03,
 dol_mth04,
 dol_mth05,
 dol_mth06,
 dol_mth07,
 dol_mth08,
 dol_mth09,
 dol_mth10,
 dol_mth11,
 dol_mth12,
 dol_mth13,
 dol_mth14,
 dol_mth15,
 dol_mth16,
 dol_mth17,
 dol_mth18,
 dol_mth19,
 dol_mth20,
 dol_mth21,
 dol_mth22,
 dol_mth23,
 dol_mth24,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_DDD_DOLLARS_M_ADHOC_src.client_num,
        EXT_DDD_DOLLARS_M_ADHOC_src.report_num,
        EXT_DDD_DOLLARS_M_ADHOC_src.outlet_code,
        EXT_DDD_DOLLARS_M_ADHOC_src.zip,
        EXT_DDD_DOLLARS_M_ADHOC_src.subcategory_code,
        EXT_DDD_DOLLARS_M_ADHOC_src.sra_4,
        EXT_DDD_DOLLARS_M_ADHOC_src.category_code,
        EXT_DDD_DOLLARS_M_ADHOC_src.ims_product_code,
        EXT_DDD_DOLLARS_M_ADHOC_src.data_date,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth01,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth02,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth03,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth04,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth05,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth06,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth07,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth08,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth09,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth10,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth11,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth12,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth13,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth14,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth15,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth16,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth17,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth18,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth19,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth20,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth21,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth22,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth23,
        EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth24,
        EXT_DDD_DOLLARS_M_ADHOC_src.outlet_name,
        EXT_DDD_DOLLARS_M_ADHOC_src.outlet_address,
        EXT_DDD_DOLLARS_M_ADHOC_src.outlet_city,
        EXT_DDD_DOLLARS_M_ADHOC_src.outlet_state,
        EXT_DDD_DOLLARS_M_ADHOC_src.outlet_zip,
        EXT_DDD_DOLLARS_M_ADHOC_src.batch_id,
        EXT_DDD_DOLLARS_M_ADHOC_src.row_id,
        EXT_DDD_DOLLARS_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOLLARS_M_ADHOC_src
 ORDER BY EXT_DDD_DOLLARS_M_ADHOC_src.batch_id
SEGMENTED BY hash(EXT_DDD_DOLLARS_M_ADHOC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DDD_QUANTITY_M_ADHOC_src_super_b0 /*+basename(EXT_DDD_QUANTITY_M_ADHOC_src_super)*/ 
(
 client_num,
 report_num,
 outlet_code,
 zip,
 subcategory_code,
 sra_4,
 category_code,
 ims_product_code,
 data_date,
 qty_mth01,
 qty_mth02,
 qty_mth03,
 qty_mth04,
 qty_mth05,
 qty_mth06,
 qty_mth07,
 qty_mth08,
 qty_mth09,
 qty_mth10,
 qty_mth11,
 qty_mth12,
 qty_mth13,
 qty_mth14,
 qty_mth15,
 qty_mth16,
 qty_mth17,
 qty_mth18,
 qty_mth19,
 qty_mth20,
 qty_mth21,
 qty_mth22,
 qty_mth23,
 qty_mth24,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_DDD_QUANTITY_M_ADHOC_src.client_num,
        EXT_DDD_QUANTITY_M_ADHOC_src.report_num,
        EXT_DDD_QUANTITY_M_ADHOC_src.outlet_code,
        EXT_DDD_QUANTITY_M_ADHOC_src.zip,
        EXT_DDD_QUANTITY_M_ADHOC_src.subcategory_code,
        EXT_DDD_QUANTITY_M_ADHOC_src.sra_4,
        EXT_DDD_QUANTITY_M_ADHOC_src.category_code,
        EXT_DDD_QUANTITY_M_ADHOC_src.ims_product_code,
        EXT_DDD_QUANTITY_M_ADHOC_src.data_date,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth01,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth02,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth03,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth04,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth05,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth06,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth07,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth08,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth09,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth10,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth11,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth12,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth13,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth14,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth15,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth16,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth17,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth18,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth19,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth20,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth21,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth22,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth23,
        EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth24,
        EXT_DDD_QUANTITY_M_ADHOC_src.outlet_name,
        EXT_DDD_QUANTITY_M_ADHOC_src.outlet_address,
        EXT_DDD_QUANTITY_M_ADHOC_src.outlet_city,
        EXT_DDD_QUANTITY_M_ADHOC_src.outlet_state,
        EXT_DDD_QUANTITY_M_ADHOC_src.outlet_zip,
        EXT_DDD_QUANTITY_M_ADHOC_src.batch_id,
        EXT_DDD_QUANTITY_M_ADHOC_src.row_id,
        EXT_DDD_QUANTITY_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_DDD_QUANTITY_M_ADHOC_src
 ORDER BY EXT_DDD_QUANTITY_M_ADHOC_src.batch_id
SEGMENTED BY hash(EXT_DDD_QUANTITY_M_ADHOC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_RELIANCE_src_super_b0 /*+basename(EXT_RELIANCE_src_super)*/ 
(
 referral_number,
 hub_order_trans_number,
 date_written,
 referral_source,
 referral_date,
 patient_first_ship_date,
 ship_date,
 full_product_name,
 product_strength,
 product_form,
 ndc_number,
 quantity_shipped,
 quantity_uom,
 days_supplied,
 dosing_instructions,
 frequency,
 rx_number,
 rx_type,
 authorized_refills,
 fill_number,
 refills_remaining,
 primary_icd_codes,
 secondary_icd_codes,
 ship_to_location_type,
 shipping_carrier,
 npi,
 dea,
 spp_physician_id,
 first_name,
 middle_name,
 last_name,
 suffix,
 physician_address1,
 physician_address2,
 physician_city,
 physician_state,
 physician_zip,
 physician_phone,
 physician_fax,
 primary_payer_bin,
 primary_payer_pcn,
 primary_group_num,
 primary_payer_name,
 primary_payer_type,
 primary_benefit_type,
 primary_co_pay_amount,
 primary_pa_required,
 primary_pa_exp_date,
 secondary_payer_bin,
 secondary_payer_pcn,
 secondary_group_num,
 secondary_payer_name,
 secondary_copay_amount,
 encrypted_spp_patient_id,
 hub_identifier,
 patient_state,
 patient_yob,
 patient_gender,
 pharmacy_name,
 pharmacy_location_name,
 location_dea,
 location_npi_number,
 location_ncpdp_number,
 reliance_record_id,
 restatement_flag,
 physician_sln,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_RELIANCE_src.referral_number,
        EXT_RELIANCE_src.hub_order_trans_number,
        EXT_RELIANCE_src.date_written,
        EXT_RELIANCE_src.referral_source,
        EXT_RELIANCE_src.referral_date,
        EXT_RELIANCE_src.patient_first_ship_date,
        EXT_RELIANCE_src.ship_date,
        EXT_RELIANCE_src.full_product_name,
        EXT_RELIANCE_src.product_strength,
        EXT_RELIANCE_src.product_form,
        EXT_RELIANCE_src.ndc_number,
        EXT_RELIANCE_src.quantity_shipped,
        EXT_RELIANCE_src.quantity_uom,
        EXT_RELIANCE_src.days_supplied,
        EXT_RELIANCE_src.dosing_instructions,
        EXT_RELIANCE_src.frequency,
        EXT_RELIANCE_src.rx_number,
        EXT_RELIANCE_src.rx_type,
        EXT_RELIANCE_src.authorized_refills,
        EXT_RELIANCE_src.fill_number,
        EXT_RELIANCE_src.refills_remaining,
        EXT_RELIANCE_src.primary_icd_codes,
        EXT_RELIANCE_src.secondary_icd_codes,
        EXT_RELIANCE_src.ship_to_location_type,
        EXT_RELIANCE_src.shipping_carrier,
        EXT_RELIANCE_src.npi,
        EXT_RELIANCE_src.dea,
        EXT_RELIANCE_src.spp_physician_id,
        EXT_RELIANCE_src.first_name,
        EXT_RELIANCE_src.middle_name,
        EXT_RELIANCE_src.last_name,
        EXT_RELIANCE_src.suffix,
        EXT_RELIANCE_src.physician_address1,
        EXT_RELIANCE_src.physician_address2,
        EXT_RELIANCE_src.physician_city,
        EXT_RELIANCE_src.physician_state,
        EXT_RELIANCE_src.physician_zip,
        EXT_RELIANCE_src.physician_phone,
        EXT_RELIANCE_src.physician_fax,
        EXT_RELIANCE_src.primary_payer_bin,
        EXT_RELIANCE_src.primary_payer_pcn,
        EXT_RELIANCE_src.primary_group_num,
        EXT_RELIANCE_src.primary_payer_name,
        EXT_RELIANCE_src.primary_payer_type,
        EXT_RELIANCE_src.primary_benefit_type,
        EXT_RELIANCE_src.primary_co_pay_amount,
        EXT_RELIANCE_src.primary_pa_required,
        EXT_RELIANCE_src.primary_pa_exp_date,
        EXT_RELIANCE_src.secondary_payer_bin,
        EXT_RELIANCE_src.secondary_payer_pcn,
        EXT_RELIANCE_src.secondary_group_num,
        EXT_RELIANCE_src.secondary_payer_name,
        EXT_RELIANCE_src.secondary_copay_amount,
        EXT_RELIANCE_src.encrypted_spp_patient_id,
        EXT_RELIANCE_src.hub_identifier,
        EXT_RELIANCE_src.patient_state,
        EXT_RELIANCE_src.patient_yob,
        EXT_RELIANCE_src.patient_gender,
        EXT_RELIANCE_src.pharmacy_name,
        EXT_RELIANCE_src.pharmacy_location_name,
        EXT_RELIANCE_src.location_dea,
        EXT_RELIANCE_src.location_npi_number,
        EXT_RELIANCE_src.location_ncpdp_number,
        EXT_RELIANCE_src.reliance_record_id,
        EXT_RELIANCE_src.restatement_flag,
        EXT_RELIANCE_src.physician_sln,
        EXT_RELIANCE_src.batch_id,
        EXT_RELIANCE_src.row_id,
        EXT_RELIANCE_src.update_ts
 FROM teva_ingestion.EXT_RELIANCE_src
 ORDER BY EXT_RELIANCE_src.batch_id
SEGMENTED BY hash(EXT_RELIANCE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_knipper_samples_v2_src_b0 /*+basename(ext_knipper_samples_v2_src),createtype(L)*/ 
(
 tvcmid,
 hcp_veeva_id,
 hcp_first_name,
 hcp_middle_name,
 hcp_last_name,
 hcp_designation,
 hcp_state_license_number,
 hcp_address1,
 hcp_address2,
 hcp_address3,
 hcp_city,
 hcp_state,
 hcp_zip,
 dea_license_number,
 order_source_order_id,
 ndc,
 quantity,
 order_source_job_code,
 order_source_job_code_description,
 ship_date,
 territory,
 repid,
 replastname,
 repmiddlename,
 repfirstname,
 signature_type,
 attendeename,
 batch_id,
 row_id,
 update_ts,
 literature_product_id,
 literature_product_name
)
AS
 SELECT ext_knipper_samples_v2_src.tvcmid,
        ext_knipper_samples_v2_src.hcp_veeva_id,
        ext_knipper_samples_v2_src.hcp_first_name,
        ext_knipper_samples_v2_src.hcp_middle_name,
        ext_knipper_samples_v2_src.hcp_last_name,
        ext_knipper_samples_v2_src.hcp_designation,
        ext_knipper_samples_v2_src.hcp_state_license_number,
        ext_knipper_samples_v2_src.hcp_address1,
        ext_knipper_samples_v2_src.hcp_address2,
        ext_knipper_samples_v2_src.hcp_address3,
        ext_knipper_samples_v2_src.hcp_city,
        ext_knipper_samples_v2_src.hcp_state,
        ext_knipper_samples_v2_src.hcp_zip,
        ext_knipper_samples_v2_src.dea_license_number,
        ext_knipper_samples_v2_src.order_source_order_id,
        ext_knipper_samples_v2_src.ndc,
        ext_knipper_samples_v2_src.quantity,
        ext_knipper_samples_v2_src.order_source_job_code,
        ext_knipper_samples_v2_src.order_source_job_code_description,
        ext_knipper_samples_v2_src.ship_date,
        ext_knipper_samples_v2_src.territory,
        ext_knipper_samples_v2_src.repid,
        ext_knipper_samples_v2_src.replastname,
        ext_knipper_samples_v2_src.repmiddlename,
        ext_knipper_samples_v2_src.repfirstname,
        ext_knipper_samples_v2_src.signature_type,
        ext_knipper_samples_v2_src.attendeename,
        ext_knipper_samples_v2_src.batch_id,
        ext_knipper_samples_v2_src.row_id,
        ext_knipper_samples_v2_src.update_ts,
        ext_knipper_samples_v2_src.literature_product_id,
        ext_knipper_samples_v2_src.literature_product_name
 FROM teva_ingestion.ext_knipper_samples_v2_src
 ORDER BY ext_knipper_samples_v2_src.batch_id
SEGMENTED BY hash(ext_knipper_samples_v2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZIP_TO_TERR_V2_src_super_b0 /*+basename(EXT_ZIP_TO_TERR_V2_src_super)*/ 
(
 zip,
 city,
 state,
 territory_1_id,
 territory_name,
 area_name,
 region_name,
 mirror_flag,
 territory_2_id,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_ZIP_TO_TERR_V2_src.zip,
        EXT_ZIP_TO_TERR_V2_src.city,
        EXT_ZIP_TO_TERR_V2_src.state,
        EXT_ZIP_TO_TERR_V2_src.territory_1_id,
        EXT_ZIP_TO_TERR_V2_src.territory_name,
        EXT_ZIP_TO_TERR_V2_src.area_name,
        EXT_ZIP_TO_TERR_V2_src.region_name,
        EXT_ZIP_TO_TERR_V2_src.mirror_flag,
        EXT_ZIP_TO_TERR_V2_src.territory_2_id,
        EXT_ZIP_TO_TERR_V2_src.batch_id,
        EXT_ZIP_TO_TERR_V2_src.row_id,
        EXT_ZIP_TO_TERR_V2_src.update_ts
 FROM teva_ingestion.EXT_ZIP_TO_TERR_V2_src
 ORDER BY EXT_ZIP_TO_TERR_V2_src.batch_id
SEGMENTED BY hash(EXT_ZIP_TO_TERR_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_TEVA_PAYER_MASTER_DETALS_src_super_b0 /*+basename(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src_super)*/ 
(
 plan_code,
 plan_name,
 payer_name,
 pbm,
 payment_type,
 key_controlling_plan_formulary,
 key_controlling_account,
 ajovy_access_for_ftf_plan,
 aimovig_access_for_ftf_plan,
 emgality_access_for_ftf_plan,
 apportionment_factor,
 key_controlling_parent,
 pbm_payer_filter,
 batch_id,
 row_id,
 update_ts,
 gpo,
 refresh_month
)
AS
 SELECT EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.plan_code,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.plan_name,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.payer_name,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.pbm,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.payment_type,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.key_controlling_plan_formulary,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.key_controlling_account,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.ajovy_access_for_ftf_plan,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.aimovig_access_for_ftf_plan,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.emgality_access_for_ftf_plan,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.apportionment_factor,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.key_controlling_parent,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.pbm_payer_filter,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.batch_id,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.row_id,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.update_ts,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.gpo,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.refresh_month
 FROM teva_ingestion.EXT_ZS_TEVA_PAYER_MASTER_DETALS_src
 ORDER BY EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.batch_id
SEGMENTED BY hash(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SUGGESTION_TAG_VOD__C_src_super_b0 /*+basename(EXT_VV_SUGGESTION_TAG_VOD__C_src_super)*/ 
(
 id,
 isdeleted,
 name,
 recordtypeid,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 suggestion_vod__c,
 detail_group_vod__c,
 driver_vod__c,
 email_fragment_order_vod__c,
 email_fragment_vod__c,
 external_id_vod__c,
 product_vod__c,
 record_type_name_vod__c,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_SUGGESTION_TAG_VOD__C_src.id,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.isdeleted,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.name,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.recordtypeid,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.createddate,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.createdbyid,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.lastmodifieddate,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.lastmodifiedbyid,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.systemmodstamp,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.mayedit,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.islocked,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.suggestion_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.detail_group_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.driver_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.email_fragment_order_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.email_fragment_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.external_id_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.product_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.record_type_name_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.batch_id,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.row_id,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SUGGESTION_TAG_VOD__C_src
 ORDER BY EXT_VV_SUGGESTION_TAG_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SUGGESTION_TAG_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SUGGESTION_VOD__C_src_super_b0 /*+basename(EXT_VV_SUGGESTION_VOD__C_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 recordtypeid,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 lastvieweddate,
 lastreferenceddate,
 account_priority_score_vod__c,
 account_vod__c,
 action_count_vod__c,
 actioned_vod__c,
 call_objective_clm_id_vod__c,
 call_objective_from_date_vod__c,
 call_objective_on_by_default_vod__c,
 call_objective_record_type_vod__c,
 call_objective_to_date_vod__c,
 dismiss_count_vod__c,
 dismissed_vod__c,
 display_dismiss_vod__c,
 display_mark_as_complete_vod__c,
 display_score_vod__c,
 email_template_id_vod__c,
 email_template_vault_id_vod__c,
 email_template_vod__c,
 expiration_date_vod__c,
 mark_complete_count_vod__c,
 marked_as_complete_vod__c,
 no_homepage_vod__c,
 planned_call_date_vod__c,
 posted_date_vod__c,
 priority_vod__c,
 reason_vod__c,
 record_type_name_vod__c,
 suggestion_external_id_vod__c,
 suppress_reason_vod__c,
 title_vod__c,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_SUGGESTION_VOD__C_src.id,
        EXT_VV_SUGGESTION_VOD__C_src.ownerid,
        EXT_VV_SUGGESTION_VOD__C_src.isdeleted,
        EXT_VV_SUGGESTION_VOD__C_src.name,
        EXT_VV_SUGGESTION_VOD__C_src.recordtypeid,
        EXT_VV_SUGGESTION_VOD__C_src.createddate,
        EXT_VV_SUGGESTION_VOD__C_src.createdbyid,
        EXT_VV_SUGGESTION_VOD__C_src.lastmodifieddate,
        EXT_VV_SUGGESTION_VOD__C_src.lastmodifiedbyid,
        EXT_VV_SUGGESTION_VOD__C_src.systemmodstamp,
        EXT_VV_SUGGESTION_VOD__C_src.mayedit,
        EXT_VV_SUGGESTION_VOD__C_src.islocked,
        EXT_VV_SUGGESTION_VOD__C_src.lastvieweddate,
        EXT_VV_SUGGESTION_VOD__C_src.lastreferenceddate,
        EXT_VV_SUGGESTION_VOD__C_src.account_priority_score_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.account_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.action_count_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.actioned_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.call_objective_clm_id_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.call_objective_from_date_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.call_objective_on_by_default_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.call_objective_record_type_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.call_objective_to_date_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.dismiss_count_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.dismissed_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.display_dismiss_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.display_mark_as_complete_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.display_score_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.email_template_id_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.email_template_vault_id_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.email_template_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.expiration_date_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.mark_complete_count_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.marked_as_complete_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.no_homepage_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.planned_call_date_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.posted_date_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.priority_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.reason_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.record_type_name_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.suggestion_external_id_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.suppress_reason_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.title_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.batch_id,
        EXT_VV_SUGGESTION_VOD__C_src.row_id,
        EXT_VV_SUGGESTION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SUGGESTION_VOD__C_src
 ORDER BY EXT_VV_SUGGESTION_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SUGGESTION_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CC_TITRATION_DOSAGE_src_super_b0 /*+basename(EXT_CC_TITRATION_DOSAGE_src_super)*/ 
(
 tvcm_id,
 ims_id,
 product_name,
 data_type,
 avg_td_daily_dose_new_patient,
 avg_td_daily_dose_cont_patient,
 batch_id,
 row_id,
 update_ts,
 data_ending_month
)
AS
 SELECT EXT_CC_TITRATION_DOSAGE_src.tvcm_id,
        EXT_CC_TITRATION_DOSAGE_src.ims_id,
        EXT_CC_TITRATION_DOSAGE_src.product_name,
        EXT_CC_TITRATION_DOSAGE_src.data_type,
        EXT_CC_TITRATION_DOSAGE_src.avg_td_daily_dose_new_patient,
        EXT_CC_TITRATION_DOSAGE_src.avg_td_daily_dose_cont_patient,
        EXT_CC_TITRATION_DOSAGE_src.batch_id,
        EXT_CC_TITRATION_DOSAGE_src.row_id,
        EXT_CC_TITRATION_DOSAGE_src.update_ts,
        EXT_CC_TITRATION_DOSAGE_src.data_ending_month
 FROM teva_ingestion.EXT_CC_TITRATION_DOSAGE_src
 ORDER BY EXT_CC_TITRATION_DOSAGE_src.batch_id
SEGMENTED BY hash(EXT_CC_TITRATION_DOSAGE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PSRF_UTIL_RPT_src_super_b0 /*+basename(EXT_PSRF_UTIL_RPT_src_super)*/ 
(
 current_week_psrfs,
 current_month_psrfs,
 hcp_signature_yes,
 hcp_signature_no,
 patient_auth_yes,
 patient_auth_no,
 ytd_psrfs,
 prescribernpi,
 prescriberzip,
 prescribercity,
 prescriberstate,
 prescribername,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_PSRF_UTIL_RPT_src.current_week_psrfs,
        EXT_PSRF_UTIL_RPT_src.current_month_psrfs,
        EXT_PSRF_UTIL_RPT_src.hcp_signature_yes,
        EXT_PSRF_UTIL_RPT_src.hcp_signature_no,
        EXT_PSRF_UTIL_RPT_src.patient_auth_yes,
        EXT_PSRF_UTIL_RPT_src.patient_auth_no,
        EXT_PSRF_UTIL_RPT_src.ytd_psrfs,
        EXT_PSRF_UTIL_RPT_src.prescribernpi,
        EXT_PSRF_UTIL_RPT_src.prescriberzip,
        EXT_PSRF_UTIL_RPT_src.prescribercity,
        EXT_PSRF_UTIL_RPT_src.prescriberstate,
        EXT_PSRF_UTIL_RPT_src.prescribername,
        EXT_PSRF_UTIL_RPT_src.batch_id,
        EXT_PSRF_UTIL_RPT_src.row_id,
        EXT_PSRF_UTIL_RPT_src.update_ts
 FROM teva_ingestion.EXT_PSRF_UTIL_RPT_src
 ORDER BY EXT_PSRF_UTIL_RPT_src.batch_id
SEGMENTED BY hash(EXT_PSRF_UTIL_RPT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.people_addresses_src_b0 /*+basename(people_addresses_src),createtype(L)*/ 
(
 PRSN_SYS_ID,
 ADDR_ID,
 ATD_CD,
 PRIORITY,
 MAIL_STOP,
 EFF_DT,
 END_DT,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT people_addresses_src.PRSN_SYS_ID,
        people_addresses_src.ADDR_ID,
        people_addresses_src.ATD_CD,
        people_addresses_src.PRIORITY,
        people_addresses_src.MAIL_STOP,
        people_addresses_src.EFF_DT,
        people_addresses_src.END_DT,
        people_addresses_src.batch_id,
        people_addresses_src.row_id,
        people_addresses_src.update_ts
 FROM teva_ingestion.people_addresses_src
 ORDER BY people_addresses_src.PRSN_SYS_ID,
          people_addresses_src.ADDR_ID,
          people_addresses_src.ATD_CD,
          people_addresses_src.PRIORITY,
          people_addresses_src.MAIL_STOP,
          people_addresses_src.EFF_DT,
          people_addresses_src.END_DT,
          people_addresses_src.batch_id,
          people_addresses_src.row_id,
          people_addresses_src.update_ts
SEGMENTED BY hash(people_addresses_src.ATD_CD, people_addresses_src.batch_id, people_addresses_src.row_id, people_addresses_src.update_ts, people_addresses_src.MAIL_STOP, people_addresses_src.PRSN_SYS_ID, people_addresses_src.ADDR_ID, people_addresses_src.PRIORITY, people_addresses_src.EFF_DT, people_addresses_src.END_DT) ALL NODES;

CREATE PROJECTION teva_ingestion.phones_src_b0 /*+basename(phones_src),createtype(L)*/ 
(
 PHN_ID,
 CNTRY_DIAL_CD,
 AREA_CD,
 PHN_NUMBER,
 CRT_USER,
 CRT_DT,
 UPD_USER,
 UPD_DT,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT phones_src.PHN_ID,
        phones_src.CNTRY_DIAL_CD,
        phones_src.AREA_CD,
        phones_src.PHN_NUMBER,
        phones_src.CRT_USER,
        phones_src.CRT_DT,
        phones_src.UPD_USER,
        phones_src.UPD_DT,
        phones_src.batch_id,
        phones_src.row_id,
        phones_src.update_ts
 FROM teva_ingestion.phones_src
 ORDER BY phones_src.PHN_ID,
          phones_src.CNTRY_DIAL_CD,
          phones_src.AREA_CD,
          phones_src.PHN_NUMBER,
          phones_src.CRT_USER,
          phones_src.CRT_DT,
          phones_src.UPD_USER,
          phones_src.UPD_DT,
          phones_src.batch_id,
          phones_src.row_id,
          phones_src.update_ts
SEGMENTED BY hash(phones_src.AREA_CD, phones_src.batch_id, phones_src.row_id, phones_src.update_ts, phones_src.CRT_USER, phones_src.UPD_USER, phones_src.PHN_ID, phones_src.CNTRY_DIAL_CD, phones_src.PHN_NUMBER, phones_src.CRT_DT, phones_src.UPD_DT) ALL NODES;

CREATE PROJECTION teva_ingestion.tvcmid_hco_demo_src_b0 /*+basename(tvcmid_hco_demo_src),createtype(L)*/ 
(
 TVCMID,
 IMS_ORG_ID,
 NPI,
 HIN,
 IMS_OUTLET_CODE,
 BUSINESS_NAME,
 ADDRESS_LINE1,
 ADDRESS_LINE2,
 CITY,
 STATE,
 ZIP,
 C_BO_HCE_ADDRESS__ADDRESS_ID,
 COT_CLASSIFICATION,
 COT_FACILITY_TYPE,
 COT_SPECIALTY,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT tvcmid_hco_demo_src.TVCMID,
        tvcmid_hco_demo_src.IMS_ORG_ID,
        tvcmid_hco_demo_src.NPI,
        tvcmid_hco_demo_src.HIN,
        tvcmid_hco_demo_src.IMS_OUTLET_CODE,
        tvcmid_hco_demo_src.BUSINESS_NAME,
        tvcmid_hco_demo_src.ADDRESS_LINE1,
        tvcmid_hco_demo_src.ADDRESS_LINE2,
        tvcmid_hco_demo_src.CITY,
        tvcmid_hco_demo_src.STATE,
        tvcmid_hco_demo_src.ZIP,
        tvcmid_hco_demo_src.C_BO_HCE_ADDRESS__ADDRESS_ID,
        tvcmid_hco_demo_src.COT_CLASSIFICATION,
        tvcmid_hco_demo_src.COT_FACILITY_TYPE,
        tvcmid_hco_demo_src.COT_SPECIALTY,
        tvcmid_hco_demo_src.batch_id,
        tvcmid_hco_demo_src.row_id,
        tvcmid_hco_demo_src.update_ts
 FROM teva_ingestion.tvcmid_hco_demo_src
 ORDER BY tvcmid_hco_demo_src.TVCMID,
          tvcmid_hco_demo_src.IMS_ORG_ID,
          tvcmid_hco_demo_src.NPI,
          tvcmid_hco_demo_src.HIN,
          tvcmid_hco_demo_src.IMS_OUTLET_CODE,
          tvcmid_hco_demo_src.BUSINESS_NAME,
          tvcmid_hco_demo_src.ADDRESS_LINE1,
          tvcmid_hco_demo_src.ADDRESS_LINE2,
          tvcmid_hco_demo_src.CITY,
          tvcmid_hco_demo_src.STATE,
          tvcmid_hco_demo_src.ZIP,
          tvcmid_hco_demo_src.C_BO_HCE_ADDRESS__ADDRESS_ID,
          tvcmid_hco_demo_src.COT_CLASSIFICATION,
          tvcmid_hco_demo_src.COT_FACILITY_TYPE,
          tvcmid_hco_demo_src.COT_SPECIALTY,
          tvcmid_hco_demo_src.batch_id,
          tvcmid_hco_demo_src.row_id,
          tvcmid_hco_demo_src.update_ts
SEGMENTED BY hash(tvcmid_hco_demo_src.STATE, tvcmid_hco_demo_src.ZIP, tvcmid_hco_demo_src.batch_id, tvcmid_hco_demo_src.row_id, tvcmid_hco_demo_src.update_ts, tvcmid_hco_demo_src.IMS_ORG_ID, tvcmid_hco_demo_src.C_BO_HCE_ADDRESS__ADDRESS_ID, tvcmid_hco_demo_src.NPI, tvcmid_hco_demo_src.HIN, tvcmid_hco_demo_src.IMS_OUTLET_CODE, tvcmid_hco_demo_src.CITY, tvcmid_hco_demo_src.COT_CLASSIFICATION, tvcmid_hco_demo_src.COT_FACILITY_TYPE, tvcmid_hco_demo_src.COT_SPECIALTY, tvcmid_hco_demo_src.TVCMID, tvcmid_hco_demo_src.BUSINESS_NAME, tvcmid_hco_demo_src.ADDRESS_LINE1, tvcmid_hco_demo_src.ADDRESS_LINE2) ALL NODES;

CREATE PROJECTION teva_ingestion.addresses_src_b0 /*+basename(addresses_src),createtype(L)*/ 
(
 ADDR_ID,
 LINE_1,
 LINE_2,
 LINE_3,
 CITY,
 ST_ABBR,
 POSTAL_CD,
 CNTRY_ISO_ABBR,
 CRT_USER,
 CRT_DT,
 UPD_USER,
 UPD_DT,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT addresses_src.ADDR_ID,
        addresses_src.LINE_1,
        addresses_src.LINE_2,
        addresses_src.LINE_3,
        addresses_src.CITY,
        addresses_src.ST_ABBR,
        addresses_src.POSTAL_CD,
        addresses_src.CNTRY_ISO_ABBR,
        addresses_src.CRT_USER,
        addresses_src.CRT_DT,
        addresses_src.UPD_USER,
        addresses_src.UPD_DT,
        addresses_src.batch_id,
        addresses_src.row_id,
        addresses_src.update_ts
 FROM teva_ingestion.addresses_src
 ORDER BY addresses_src.ADDR_ID,
          addresses_src.LINE_1,
          addresses_src.LINE_2,
          addresses_src.LINE_3,
          addresses_src.CITY,
          addresses_src.ST_ABBR,
          addresses_src.POSTAL_CD,
          addresses_src.CNTRY_ISO_ABBR,
          addresses_src.CRT_USER,
          addresses_src.CRT_DT,
          addresses_src.UPD_USER,
          addresses_src.UPD_DT,
          addresses_src.batch_id,
          addresses_src.row_id,
          addresses_src.update_ts
SEGMENTED BY hash(addresses_src.ST_ABBR, addresses_src.CNTRY_ISO_ABBR, addresses_src.batch_id, addresses_src.row_id, addresses_src.update_ts, addresses_src.POSTAL_CD, addresses_src.CRT_USER, addresses_src.UPD_USER, addresses_src.LINE_1, addresses_src.LINE_2, addresses_src.LINE_3, addresses_src.CITY, addresses_src.ADDR_ID, addresses_src.CRT_DT, addresses_src.UPD_DT) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_knipper_samples_shipped_src_b0 /*+basename(ext_knipper_samples_shipped_src),createtype(L)*/ 
(
 CLIENT_PRAC_ID,
 TERR_CODE,
 SAMPLE_PROD_CODE,
 SAMPLE_DATE,
 SAMPLE_QTY,
 REQUEST_DATE,
 REQUEST_QTY,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT ext_knipper_samples_shipped_src.CLIENT_PRAC_ID,
        ext_knipper_samples_shipped_src.TERR_CODE,
        ext_knipper_samples_shipped_src.SAMPLE_PROD_CODE,
        ext_knipper_samples_shipped_src.SAMPLE_DATE,
        ext_knipper_samples_shipped_src.SAMPLE_QTY,
        ext_knipper_samples_shipped_src.REQUEST_DATE,
        ext_knipper_samples_shipped_src.REQUEST_QTY,
        ext_knipper_samples_shipped_src.batch_id,
        ext_knipper_samples_shipped_src.row_id,
        ext_knipper_samples_shipped_src.update_ts
 FROM teva_ingestion.ext_knipper_samples_shipped_src
 ORDER BY ext_knipper_samples_shipped_src.CLIENT_PRAC_ID,
          ext_knipper_samples_shipped_src.TERR_CODE,
          ext_knipper_samples_shipped_src.SAMPLE_PROD_CODE,
          ext_knipper_samples_shipped_src.SAMPLE_DATE,
          ext_knipper_samples_shipped_src.SAMPLE_QTY,
          ext_knipper_samples_shipped_src.REQUEST_DATE,
          ext_knipper_samples_shipped_src.REQUEST_QTY,
          ext_knipper_samples_shipped_src.batch_id,
          ext_knipper_samples_shipped_src.row_id,
          ext_knipper_samples_shipped_src.update_ts
SEGMENTED BY hash(ext_knipper_samples_shipped_src.TERR_CODE, ext_knipper_samples_shipped_src.batch_id, ext_knipper_samples_shipped_src.row_id, ext_knipper_samples_shipped_src.update_ts, ext_knipper_samples_shipped_src.SAMPLE_DATE, ext_knipper_samples_shipped_src.REQUEST_DATE, ext_knipper_samples_shipped_src.SAMPLE_PROD_CODE, ext_knipper_samples_shipped_src.CLIENT_PRAC_ID, ext_knipper_samples_shipped_src.SAMPLE_QTY, ext_knipper_samples_shipped_src.REQUEST_QTY) ALL NODES;

CREATE PROJECTION teva_ingestion.people_src_b0 /*+basename(people_src),createtype(L)*/ 
(
 SYS_ID,
 CRT_DT,
 CRT_USER,
 UPD_DT,
 UPD_USER,
 LAST_NAME,
 FIRST_NAME,
 STAT_CD,
 GENDER,
 MID_NAME,
 NAME_SUFFIX,
 PRSN_TITLE,
 PROF_TITLE,
 EMAIL,
 PREF_NAME,
 PREV_LAST_NAME,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT people_src.SYS_ID,
        people_src.CRT_DT,
        people_src.CRT_USER,
        people_src.UPD_DT,
        people_src.UPD_USER,
        people_src.LAST_NAME,
        people_src.FIRST_NAME,
        people_src.STAT_CD,
        people_src.GENDER,
        people_src.MID_NAME,
        people_src.NAME_SUFFIX,
        people_src.PRSN_TITLE,
        people_src.PROF_TITLE,
        people_src.EMAIL,
        people_src.PREF_NAME,
        people_src.PREV_LAST_NAME,
        people_src.batch_id,
        people_src.row_id,
        people_src.update_ts
 FROM teva_ingestion.people_src
 ORDER BY people_src.SYS_ID,
          people_src.CRT_DT,
          people_src.CRT_USER,
          people_src.UPD_DT,
          people_src.UPD_USER,
          people_src.LAST_NAME,
          people_src.FIRST_NAME,
          people_src.STAT_CD,
          people_src.GENDER,
          people_src.MID_NAME,
          people_src.NAME_SUFFIX,
          people_src.PRSN_TITLE,
          people_src.PROF_TITLE,
          people_src.EMAIL,
          people_src.PREF_NAME,
          people_src.PREV_LAST_NAME,
          people_src.batch_id,
          people_src.row_id,
          people_src.update_ts
SEGMENTED BY hash(people_src.STAT_CD, people_src.GENDER, people_src.batch_id, people_src.row_id, people_src.update_ts, people_src.NAME_SUFFIX, people_src.PRSN_TITLE, people_src.PROF_TITLE, people_src.CRT_USER, people_src.UPD_USER, people_src.LAST_NAME, people_src.FIRST_NAME, people_src.MID_NAME, people_src.PREF_NAME, people_src.PREV_LAST_NAME, people_src.SYS_ID, people_src.CRT_DT, people_src.UPD_DT, people_src.EMAIL) ALL NODES;

CREATE PROJECTION teva_ingestion.job_title_defs_src_b0 /*+basename(job_title_defs_src),createtype(L)*/ 
(
 JOB_CD,
 CD_DESC,
 ADP_JOB_CD,
 CRT_DT,
 CRT_USER,
 UPD_DT,
 UPD_USER,
 DISPLAY_SEQ,
 COMPANY_ID,
 EFF_DT,
 EXP_DT,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT job_title_defs_src.JOB_CD,
        job_title_defs_src.CD_DESC,
        job_title_defs_src.ADP_JOB_CD,
        job_title_defs_src.CRT_DT,
        job_title_defs_src.CRT_USER,
        job_title_defs_src.UPD_DT,
        job_title_defs_src.UPD_USER,
        job_title_defs_src.DISPLAY_SEQ,
        job_title_defs_src.COMPANY_ID,
        job_title_defs_src.EFF_DT,
        job_title_defs_src.EXP_DT,
        job_title_defs_src.batch_id,
        job_title_defs_src.row_id,
        job_title_defs_src.update_ts
 FROM teva_ingestion.job_title_defs_src
 ORDER BY job_title_defs_src.JOB_CD,
          job_title_defs_src.CD_DESC,
          job_title_defs_src.ADP_JOB_CD,
          job_title_defs_src.CRT_DT,
          job_title_defs_src.CRT_USER,
          job_title_defs_src.UPD_DT,
          job_title_defs_src.UPD_USER,
          job_title_defs_src.DISPLAY_SEQ,
          job_title_defs_src.COMPANY_ID,
          job_title_defs_src.EFF_DT,
          job_title_defs_src.EXP_DT,
          job_title_defs_src.batch_id,
          job_title_defs_src.row_id,
          job_title_defs_src.update_ts
SEGMENTED BY hash(job_title_defs_src.JOB_CD, job_title_defs_src.ADP_JOB_CD, job_title_defs_src.batch_id, job_title_defs_src.row_id, job_title_defs_src.update_ts, job_title_defs_src.COMPANY_ID, job_title_defs_src.CRT_USER, job_title_defs_src.UPD_USER, job_title_defs_src.CD_DESC, job_title_defs_src.CRT_DT, job_title_defs_src.UPD_DT, job_title_defs_src.DISPLAY_SEQ, job_title_defs_src.EFF_DT, job_title_defs_src.EXP_DT) ALL NODES;

CREATE PROJECTION teva_ingestion.tvcmid_merges_src_b0 /*+basename(tvcmid_merges_src),createtype(L)*/ 
(
 PREVIOUS_TVCMID,
 CURRENT_TVCMID,
 MERGE_CYCLE,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT tvcmid_merges_src.PREVIOUS_TVCMID,
        tvcmid_merges_src.CURRENT_TVCMID,
        tvcmid_merges_src.MERGE_CYCLE,
        tvcmid_merges_src.batch_id,
        tvcmid_merges_src.row_id,
        tvcmid_merges_src.update_ts
 FROM teva_ingestion.tvcmid_merges_src
 ORDER BY tvcmid_merges_src.PREVIOUS_TVCMID,
          tvcmid_merges_src.CURRENT_TVCMID,
          tvcmid_merges_src.MERGE_CYCLE,
          tvcmid_merges_src.batch_id,
          tvcmid_merges_src.row_id,
          tvcmid_merges_src.update_ts
SEGMENTED BY hash(tvcmid_merges_src.MERGE_CYCLE, tvcmid_merges_src.batch_id, tvcmid_merges_src.row_id, tvcmid_merges_src.update_ts, tvcmid_merges_src.PREVIOUS_TVCMID, tvcmid_merges_src.CURRENT_TVCMID) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_call_goals_kc_src_b0 /*+basename(ext_call_goals_kc_src),createtype(L)*/ 
(
 ID,
 SFA_ID,
 IMS_ID,
 TERRITORY_NUM,
 PRIORITY,
 PRODUCT,
 GOAL,
 ACTUAL,
 MARKETING_SEGMENT,
 EFFECTIVE_DATE,
 SALES_FORCE_ID,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT ext_call_goals_kc_src.ID,
        ext_call_goals_kc_src.SFA_ID,
        ext_call_goals_kc_src.IMS_ID,
        ext_call_goals_kc_src.TERRITORY_NUM,
        ext_call_goals_kc_src.PRIORITY,
        ext_call_goals_kc_src.PRODUCT,
        ext_call_goals_kc_src.GOAL,
        ext_call_goals_kc_src.ACTUAL,
        ext_call_goals_kc_src.MARKETING_SEGMENT,
        ext_call_goals_kc_src.EFFECTIVE_DATE,
        ext_call_goals_kc_src.SALES_FORCE_ID,
        ext_call_goals_kc_src.batch_id,
        ext_call_goals_kc_src.row_id,
        ext_call_goals_kc_src.update_ts
 FROM teva_ingestion.ext_call_goals_kc_src
 ORDER BY ext_call_goals_kc_src.ID,
          ext_call_goals_kc_src.SFA_ID,
          ext_call_goals_kc_src.IMS_ID,
          ext_call_goals_kc_src.TERRITORY_NUM,
          ext_call_goals_kc_src.PRIORITY,
          ext_call_goals_kc_src.PRODUCT,
          ext_call_goals_kc_src.GOAL,
          ext_call_goals_kc_src.ACTUAL,
          ext_call_goals_kc_src.MARKETING_SEGMENT,
          ext_call_goals_kc_src.EFFECTIVE_DATE,
          ext_call_goals_kc_src.SALES_FORCE_ID,
          ext_call_goals_kc_src.batch_id,
          ext_call_goals_kc_src.row_id,
          ext_call_goals_kc_src.update_ts
SEGMENTED BY hash(ext_call_goals_kc_src.IMS_ID, ext_call_goals_kc_src.TERRITORY_NUM, ext_call_goals_kc_src.SALES_FORCE_ID, ext_call_goals_kc_src.batch_id, ext_call_goals_kc_src.row_id, ext_call_goals_kc_src.update_ts, ext_call_goals_kc_src.SFA_ID, ext_call_goals_kc_src.PRODUCT, ext_call_goals_kc_src.MARKETING_SEGMENT, ext_call_goals_kc_src.EFFECTIVE_DATE, ext_call_goals_kc_src.ID, ext_call_goals_kc_src.PRIORITY, ext_call_goals_kc_src.GOAL, ext_call_goals_kc_src.ACTUAL) ALL NODES;

CREATE PROJECTION teva_ingestion.aud_associates_src_b0 /*+basename(aud_associates_src),createtype(L)*/ 
(
 TEVA_ID,
 HR_ID,
 CRT_USER,
 CRT_DT,
 UPD_USER,
 UPD_DT,
 HIRE_DT,
 LOGON_ID,
 REPORTS_TO,
 STAT_CD,
 TYPE_CD,
 FULL_TIME,
 EEO_CAT,
 EXEMPT,
 EXPENSE_COST_CTR,
 HRS_PER_WK,
 MARITAL_STAT,
 RACE,
 SSN,
 EMAIL,
 BIRTH_DT,
 COUNTRY_ID,
 DFLT_CURR_ID,
 TERR_ID,
 OFFICE,
 PRSN_SYS_ID,
 LANGUAGE,
 "POSITION",
 TERM_DT,
 LAST_WRK_DT,
 AUTH_LIMIT,
 VEHICLE,
 VACATION_DAYS,
 "TIMESTAMP",
 ACTION,
 CHK_REQ_LIMIT,
 EXPENSE_REPORT_APPROVER,
 LOC_CD,
 PAY_CD,
 ED_CD,
 ED_CD_DT,
 JOB_CD,
 CNTRY_CITIZENSHIP,
 DISABLED,
 VIETNAM_VET,
 EMERGENCY_CONTACT_NAME,
 EMERGENCY_CONTACT_RELATIONSHIP,
 EMERGENCY_CONTACT_PHONE,
 ADP_DEPT_NUM,
 EEO_CAT_HR_UPDT,
 COMPANY_ID,
 EXPENSE_REPORTING,
 PHANTOM_IND,
 CHECK_REQUEST_APPROVER,
 INVOICE_APPROVER,
 VACATION_YR,
 FIN_AUTH_COMMENTS,
 PAYROLL_COST_CTR,
 SAMPLE_AUTH,
 ORACLE_STRING,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT aud_associates_src.TEVA_ID,
        aud_associates_src.HR_ID,
        aud_associates_src.CRT_USER,
        aud_associates_src.CRT_DT,
        aud_associates_src.UPD_USER,
        aud_associates_src.UPD_DT,
        aud_associates_src.HIRE_DT,
        aud_associates_src.LOGON_ID,
        aud_associates_src.REPORTS_TO,
        aud_associates_src.STAT_CD,
        aud_associates_src.TYPE_CD,
        aud_associates_src.FULL_TIME,
        aud_associates_src.EEO_CAT,
        aud_associates_src.EXEMPT,
        aud_associates_src.EXPENSE_COST_CTR,
        aud_associates_src.HRS_PER_WK,
        aud_associates_src.MARITAL_STAT,
        aud_associates_src.RACE,
        aud_associates_src.SSN,
        aud_associates_src.EMAIL,
        aud_associates_src.BIRTH_DT,
        aud_associates_src.COUNTRY_ID,
        aud_associates_src.DFLT_CURR_ID,
        aud_associates_src.TERR_ID,
        aud_associates_src.OFFICE,
        aud_associates_src.PRSN_SYS_ID,
        aud_associates_src.LANGUAGE,
        aud_associates_src."POSITION",
        aud_associates_src.TERM_DT,
        aud_associates_src.LAST_WRK_DT,
        aud_associates_src.AUTH_LIMIT,
        aud_associates_src.VEHICLE,
        aud_associates_src.VACATION_DAYS,
        aud_associates_src."TIMESTAMP",
        aud_associates_src.ACTION,
        aud_associates_src.CHK_REQ_LIMIT,
        aud_associates_src.EXPENSE_REPORT_APPROVER,
        aud_associates_src.LOC_CD,
        aud_associates_src.PAY_CD,
        aud_associates_src.ED_CD,
        aud_associates_src.ED_CD_DT,
        aud_associates_src.JOB_CD,
        aud_associates_src.CNTRY_CITIZENSHIP,
        aud_associates_src.DISABLED,
        aud_associates_src.VIETNAM_VET,
        aud_associates_src.EMERGENCY_CONTACT_NAME,
        aud_associates_src.EMERGENCY_CONTACT_RELATIONSHIP,
        aud_associates_src.EMERGENCY_CONTACT_PHONE,
        aud_associates_src.ADP_DEPT_NUM,
        aud_associates_src.EEO_CAT_HR_UPDT,
        aud_associates_src.COMPANY_ID,
        aud_associates_src.EXPENSE_REPORTING,
        aud_associates_src.PHANTOM_IND,
        aud_associates_src.CHECK_REQUEST_APPROVER,
        aud_associates_src.INVOICE_APPROVER,
        aud_associates_src.VACATION_YR,
        aud_associates_src.FIN_AUTH_COMMENTS,
        aud_associates_src.PAYROLL_COST_CTR,
        aud_associates_src.SAMPLE_AUTH,
        aud_associates_src.ORACLE_STRING,
        aud_associates_src.batch_id,
        aud_associates_src.row_id,
        aud_associates_src.update_ts
 FROM teva_ingestion.aud_associates_src
 ORDER BY aud_associates_src.TEVA_ID,
          aud_associates_src.HR_ID,
          aud_associates_src.CRT_USER,
          aud_associates_src.CRT_DT,
          aud_associates_src.UPD_USER,
          aud_associates_src.UPD_DT,
          aud_associates_src.HIRE_DT,
          aud_associates_src.LOGON_ID,
          aud_associates_src.REPORTS_TO,
          aud_associates_src.STAT_CD,
          aud_associates_src.TYPE_CD,
          aud_associates_src.FULL_TIME,
          aud_associates_src.EEO_CAT,
          aud_associates_src.EXEMPT,
          aud_associates_src.EXPENSE_COST_CTR,
          aud_associates_src.HRS_PER_WK,
          aud_associates_src.MARITAL_STAT,
          aud_associates_src.RACE,
          aud_associates_src.SSN,
          aud_associates_src.EMAIL,
          aud_associates_src.BIRTH_DT,
          aud_associates_src.COUNTRY_ID,
          aud_associates_src.DFLT_CURR_ID,
          aud_associates_src.TERR_ID,
          aud_associates_src.OFFICE,
          aud_associates_src.PRSN_SYS_ID,
          aud_associates_src.LANGUAGE,
          aud_associates_src."POSITION",
          aud_associates_src.TERM_DT,
          aud_associates_src.LAST_WRK_DT,
          aud_associates_src.AUTH_LIMIT,
          aud_associates_src.VEHICLE,
          aud_associates_src.VACATION_DAYS,
          aud_associates_src."TIMESTAMP",
          aud_associates_src.ACTION,
          aud_associates_src.CHK_REQ_LIMIT,
          aud_associates_src.EXPENSE_REPORT_APPROVER,
          aud_associates_src.LOC_CD,
          aud_associates_src.PAY_CD,
          aud_associates_src.ED_CD,
          aud_associates_src.ED_CD_DT,
          aud_associates_src.JOB_CD,
          aud_associates_src.CNTRY_CITIZENSHIP,
          aud_associates_src.DISABLED,
          aud_associates_src.VIETNAM_VET,
          aud_associates_src.EMERGENCY_CONTACT_NAME,
          aud_associates_src.EMERGENCY_CONTACT_RELATIONSHIP,
          aud_associates_src.EMERGENCY_CONTACT_PHONE,
          aud_associates_src.ADP_DEPT_NUM,
          aud_associates_src.EEO_CAT_HR_UPDT,
          aud_associates_src.COMPANY_ID,
          aud_associates_src.EXPENSE_REPORTING,
          aud_associates_src.PHANTOM_IND,
          aud_associates_src.CHECK_REQUEST_APPROVER,
          aud_associates_src.INVOICE_APPROVER,
          aud_associates_src.VACATION_YR,
          aud_associates_src.FIN_AUTH_COMMENTS,
          aud_associates_src.PAYROLL_COST_CTR,
          aud_associates_src.SAMPLE_AUTH,
          aud_associates_src.ORACLE_STRING,
          aud_associates_src.batch_id,
          aud_associates_src.row_id,
          aud_associates_src.update_ts
SEGMENTED BY hash(aud_associates_src.TEVA_ID, aud_associates_src.REPORTS_TO, aud_associates_src.STAT_CD, aud_associates_src.TYPE_CD, aud_associates_src.FULL_TIME, aud_associates_src.EXEMPT, aud_associates_src.MARITAL_STAT, aud_associates_src.COUNTRY_ID, aud_associates_src.OFFICE, aud_associates_src.LANGUAGE, aud_associates_src.EXPENSE_REPORT_APPROVER, aud_associates_src.PAY_CD, aud_associates_src.ED_CD, aud_associates_src.JOB_CD, aud_associates_src.CNTRY_CITIZENSHIP, aud_associates_src.DISABLED, aud_associates_src.VIETNAM_VET, aud_associates_src.EXPENSE_REPORTING, aud_associates_src.PHANTOM_IND, aud_associates_src.CHECK_REQUEST_APPROVER, aud_associates_src.INVOICE_APPROVER, aud_associates_src.SAMPLE_AUTH, aud_associates_src.batch_id, aud_associates_src.row_id, aud_associates_src.update_ts, aud_associates_src.SSN, aud_associates_src.EEO_CAT, aud_associates_src.EXPENSE_COST_CTR, aud_associates_src.LOC_CD, aud_associates_src.ADP_DEPT_NUM, aud_associates_src.EEO_CAT_HR_UPDT, aud_associates_src.COMPANY_ID) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_ims_sln_xref_kc_src_b0 /*+basename(ext_ims_sln_xref_kc_src),createtype(L)*/ 
(
 IMS_ID,
 STATE_LICENSE_NUMBER,
 STATE_LICENSE_STATE,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT ext_ims_sln_xref_kc_src.IMS_ID,
        ext_ims_sln_xref_kc_src.STATE_LICENSE_NUMBER,
        ext_ims_sln_xref_kc_src.STATE_LICENSE_STATE,
        ext_ims_sln_xref_kc_src.batch_id,
        ext_ims_sln_xref_kc_src.row_id,
        ext_ims_sln_xref_kc_src.update_ts
 FROM teva_ingestion.ext_ims_sln_xref_kc_src
 ORDER BY ext_ims_sln_xref_kc_src.IMS_ID,
          ext_ims_sln_xref_kc_src.STATE_LICENSE_NUMBER,
          ext_ims_sln_xref_kc_src.STATE_LICENSE_STATE,
          ext_ims_sln_xref_kc_src.batch_id,
          ext_ims_sln_xref_kc_src.row_id,
          ext_ims_sln_xref_kc_src.update_ts
SEGMENTED BY hash(ext_ims_sln_xref_kc_src.STATE_LICENSE_STATE, ext_ims_sln_xref_kc_src.batch_id, ext_ims_sln_xref_kc_src.row_id, ext_ims_sln_xref_kc_src.update_ts, ext_ims_sln_xref_kc_src.IMS_ID, ext_ims_sln_xref_kc_src.STATE_LICENSE_NUMBER) ALL NODES;

CREATE PROJECTION teva_ingestion.c_bo_hce_alt_identifier_src_b0 /*+basename(c_bo_hce_alt_identifier_src),createtype(L)*/ 
(
 ROWID_OBJECT,
 CREATOR,
 CREATE_DATE,
 UPDATED_BY,
 LAST_UPDATE_DATE,
 CONSOLIDATION_IND,
 DELETED_IND,
 DELETED_BY,
 DELETED_DATE,
 LAST_ROWID_SYSTEM,
 DIRTY_IND,
 INTERACTION_ID,
 HUB_STATE_IND,
 CM_DIRTY_IND,
 TVCMID,
 ALTERNATE_ID_VALUE,
 ALTERNATE_ID_TYPE,
 SOURCE_DEACT_REASON_CODE,
 SOURCE_DEACT_REASON_DESC,
 IDENTIFIER_CAT,
 STATUS,
 STATE,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT c_bo_hce_alt_identifier_src.ROWID_OBJECT,
        c_bo_hce_alt_identifier_src.CREATOR,
        c_bo_hce_alt_identifier_src.CREATE_DATE,
        c_bo_hce_alt_identifier_src.UPDATED_BY,
        c_bo_hce_alt_identifier_src.LAST_UPDATE_DATE,
        c_bo_hce_alt_identifier_src.CONSOLIDATION_IND,
        c_bo_hce_alt_identifier_src.DELETED_IND,
        c_bo_hce_alt_identifier_src.DELETED_BY,
        c_bo_hce_alt_identifier_src.DELETED_DATE,
        c_bo_hce_alt_identifier_src.LAST_ROWID_SYSTEM,
        c_bo_hce_alt_identifier_src.DIRTY_IND,
        c_bo_hce_alt_identifier_src.INTERACTION_ID,
        c_bo_hce_alt_identifier_src.HUB_STATE_IND,
        c_bo_hce_alt_identifier_src.CM_DIRTY_IND,
        c_bo_hce_alt_identifier_src.TVCMID,
        c_bo_hce_alt_identifier_src.ALTERNATE_ID_VALUE,
        c_bo_hce_alt_identifier_src.ALTERNATE_ID_TYPE,
        c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_CODE,
        c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_DESC,
        c_bo_hce_alt_identifier_src.IDENTIFIER_CAT,
        c_bo_hce_alt_identifier_src.STATUS,
        c_bo_hce_alt_identifier_src.STATE,
        c_bo_hce_alt_identifier_src.batch_id,
        c_bo_hce_alt_identifier_src.row_id,
        c_bo_hce_alt_identifier_src.update_ts
 FROM teva_ingestion.c_bo_hce_alt_identifier_src
 ORDER BY c_bo_hce_alt_identifier_src.ROWID_OBJECT,
          c_bo_hce_alt_identifier_src.CREATOR,
          c_bo_hce_alt_identifier_src.CREATE_DATE,
          c_bo_hce_alt_identifier_src.UPDATED_BY,
          c_bo_hce_alt_identifier_src.LAST_UPDATE_DATE,
          c_bo_hce_alt_identifier_src.CONSOLIDATION_IND,
          c_bo_hce_alt_identifier_src.DELETED_IND,
          c_bo_hce_alt_identifier_src.DELETED_BY,
          c_bo_hce_alt_identifier_src.DELETED_DATE,
          c_bo_hce_alt_identifier_src.LAST_ROWID_SYSTEM,
          c_bo_hce_alt_identifier_src.DIRTY_IND,
          c_bo_hce_alt_identifier_src.INTERACTION_ID,
          c_bo_hce_alt_identifier_src.HUB_STATE_IND,
          c_bo_hce_alt_identifier_src.CM_DIRTY_IND,
          c_bo_hce_alt_identifier_src.TVCMID,
          c_bo_hce_alt_identifier_src.ALTERNATE_ID_VALUE,
          c_bo_hce_alt_identifier_src.ALTERNATE_ID_TYPE,
          c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_CODE,
          c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_DESC,
          c_bo_hce_alt_identifier_src.IDENTIFIER_CAT,
          c_bo_hce_alt_identifier_src.STATUS,
          c_bo_hce_alt_identifier_src.STATE,
          c_bo_hce_alt_identifier_src.batch_id,
          c_bo_hce_alt_identifier_src.row_id,
          c_bo_hce_alt_identifier_src.update_ts
SEGMENTED BY hash(c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_CODE, c_bo_hce_alt_identifier_src.STATE, c_bo_hce_alt_identifier_src.batch_id, c_bo_hce_alt_identifier_src.row_id, c_bo_hce_alt_identifier_src.update_ts, c_bo_hce_alt_identifier_src.ALTERNATE_ID_TYPE, c_bo_hce_alt_identifier_src.STATUS, c_bo_hce_alt_identifier_src.ROWID_OBJECT, c_bo_hce_alt_identifier_src.LAST_ROWID_SYSTEM, c_bo_hce_alt_identifier_src.TVCMID, c_bo_hce_alt_identifier_src.ALTERNATE_ID_VALUE, c_bo_hce_alt_identifier_src.IDENTIFIER_CAT, c_bo_hce_alt_identifier_src.CREATOR, c_bo_hce_alt_identifier_src.UPDATED_BY, c_bo_hce_alt_identifier_src.DELETED_BY, c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_DESC, c_bo_hce_alt_identifier_src.CREATE_DATE, c_bo_hce_alt_identifier_src.LAST_UPDATE_DATE, c_bo_hce_alt_identifier_src.CONSOLIDATION_IND, c_bo_hce_alt_identifier_src.DELETED_IND, c_bo_hce_alt_identifier_src.DELETED_DATE, c_bo_hce_alt_identifier_src.DIRTY_IND, c_bo_hce_alt_identifier_src.INTERACTION_ID, c_bo_hce_alt_identifier_src.HUB_STATE_IND, c_bo_hce_alt_identifier_src.CM_DIRTY_IND) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_OMNICARE_SALES_src_b0 /*+basename(EXT_OMNICARE_SALES_src),createtype(L)*/ 
(
 TRANSACTION_ID,
 INVOICE_DATE,
 PRODUCT_BRAND,
 PRODUCT_NDC,
 PRODUCT_DESC,
 INVOICE_QTY,
 INVOICE_UNITS,
 INVOICE_COST,
 INVOICE_PACK_COST,
 INVOICE_UNIT_COST,
 CONTRACT_PACK_COST,
 CONTRACT_PURCHASES,
 CONTRACT_NUMBER,
 DISPENSING_LOCATION,
 DL_ADDRESS_1,
 DL_ADDRESS_2,
 DL_CITY,
 DL_STATE,
 DL_ZIP,
 DL_DEA_NUM,
 DEPOT_LOCATION,
 DEP_ADDRESS_1,
 DEP_ADDRESS_2,
 DEP_CITY,
 DEP_STATE,
 DEP_ZIP,
 DEP_DEA_NUM,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_OMNICARE_SALES_src.TRANSACTION_ID,
        EXT_OMNICARE_SALES_src.INVOICE_DATE,
        EXT_OMNICARE_SALES_src.PRODUCT_BRAND,
        EXT_OMNICARE_SALES_src.PRODUCT_NDC,
        EXT_OMNICARE_SALES_src.PRODUCT_DESC,
        EXT_OMNICARE_SALES_src.INVOICE_QTY,
        EXT_OMNICARE_SALES_src.INVOICE_UNITS,
        EXT_OMNICARE_SALES_src.INVOICE_COST,
        EXT_OMNICARE_SALES_src.INVOICE_PACK_COST,
        EXT_OMNICARE_SALES_src.INVOICE_UNIT_COST,
        EXT_OMNICARE_SALES_src.CONTRACT_PACK_COST,
        EXT_OMNICARE_SALES_src.CONTRACT_PURCHASES,
        EXT_OMNICARE_SALES_src.CONTRACT_NUMBER,
        EXT_OMNICARE_SALES_src.DISPENSING_LOCATION,
        EXT_OMNICARE_SALES_src.DL_ADDRESS_1,
        EXT_OMNICARE_SALES_src.DL_ADDRESS_2,
        EXT_OMNICARE_SALES_src.DL_CITY,
        EXT_OMNICARE_SALES_src.DL_STATE,
        EXT_OMNICARE_SALES_src.DL_ZIP,
        EXT_OMNICARE_SALES_src.DL_DEA_NUM,
        EXT_OMNICARE_SALES_src.DEPOT_LOCATION,
        EXT_OMNICARE_SALES_src.DEP_ADDRESS_1,
        EXT_OMNICARE_SALES_src.DEP_ADDRESS_2,
        EXT_OMNICARE_SALES_src.DEP_CITY,
        EXT_OMNICARE_SALES_src.DEP_STATE,
        EXT_OMNICARE_SALES_src.DEP_ZIP,
        EXT_OMNICARE_SALES_src.DEP_DEA_NUM,
        EXT_OMNICARE_SALES_src.batch_id,
        EXT_OMNICARE_SALES_src.row_id,
        EXT_OMNICARE_SALES_src.update_ts
 FROM teva_ingestion.EXT_OMNICARE_SALES_src
 ORDER BY EXT_OMNICARE_SALES_src.TRANSACTION_ID,
          EXT_OMNICARE_SALES_src.INVOICE_DATE,
          EXT_OMNICARE_SALES_src.PRODUCT_BRAND,
          EXT_OMNICARE_SALES_src.PRODUCT_NDC,
          EXT_OMNICARE_SALES_src.PRODUCT_DESC,
          EXT_OMNICARE_SALES_src.INVOICE_QTY,
          EXT_OMNICARE_SALES_src.INVOICE_UNITS,
          EXT_OMNICARE_SALES_src.INVOICE_COST,
          EXT_OMNICARE_SALES_src.INVOICE_PACK_COST,
          EXT_OMNICARE_SALES_src.INVOICE_UNIT_COST,
          EXT_OMNICARE_SALES_src.CONTRACT_PACK_COST,
          EXT_OMNICARE_SALES_src.CONTRACT_PURCHASES,
          EXT_OMNICARE_SALES_src.CONTRACT_NUMBER,
          EXT_OMNICARE_SALES_src.DISPENSING_LOCATION,
          EXT_OMNICARE_SALES_src.DL_ADDRESS_1,
          EXT_OMNICARE_SALES_src.DL_ADDRESS_2,
          EXT_OMNICARE_SALES_src.DL_CITY,
          EXT_OMNICARE_SALES_src.DL_STATE,
          EXT_OMNICARE_SALES_src.DL_ZIP,
          EXT_OMNICARE_SALES_src.DL_DEA_NUM,
          EXT_OMNICARE_SALES_src.DEPOT_LOCATION,
          EXT_OMNICARE_SALES_src.DEP_ADDRESS_1,
          EXT_OMNICARE_SALES_src.DEP_ADDRESS_2,
          EXT_OMNICARE_SALES_src.DEP_CITY,
          EXT_OMNICARE_SALES_src.DEP_STATE,
          EXT_OMNICARE_SALES_src.DEP_ZIP,
          EXT_OMNICARE_SALES_src.DEP_DEA_NUM,
          EXT_OMNICARE_SALES_src.batch_id,
          EXT_OMNICARE_SALES_src.row_id,
          EXT_OMNICARE_SALES_src.update_ts
SEGMENTED BY hash(EXT_OMNICARE_SALES_src.DL_STATE, EXT_OMNICARE_SALES_src.DEP_STATE, EXT_OMNICARE_SALES_src.batch_id, EXT_OMNICARE_SALES_src.row_id, EXT_OMNICARE_SALES_src.update_ts, EXT_OMNICARE_SALES_src.INVOICE_DATE, EXT_OMNICARE_SALES_src.DL_ZIP, EXT_OMNICARE_SALES_src.DEP_ZIP, EXT_OMNICARE_SALES_src.PRODUCT_NDC, EXT_OMNICARE_SALES_src.DL_DEA_NUM, EXT_OMNICARE_SALES_src.DEP_DEA_NUM, EXT_OMNICARE_SALES_src.PRODUCT_BRAND, EXT_OMNICARE_SALES_src.DL_CITY, EXT_OMNICARE_SALES_src.DEP_CITY, EXT_OMNICARE_SALES_src.INVOICE_QTY, EXT_OMNICARE_SALES_src.INVOICE_UNITS, EXT_OMNICARE_SALES_src.INVOICE_COST, EXT_OMNICARE_SALES_src.INVOICE_PACK_COST, EXT_OMNICARE_SALES_src.INVOICE_UNIT_COST, EXT_OMNICARE_SALES_src.CONTRACT_PACK_COST, EXT_OMNICARE_SALES_src.CONTRACT_PURCHASES, EXT_OMNICARE_SALES_src.TRANSACTION_ID, EXT_OMNICARE_SALES_src.PRODUCT_DESC, EXT_OMNICARE_SALES_src.CONTRACT_NUMBER, EXT_OMNICARE_SALES_src.DISPENSING_LOCATION, EXT_OMNICARE_SALES_src.DL_ADDRESS_1, EXT_OMNICARE_SALES_src.DL_ADDRESS_2, EXT_OMNICARE_SALES_src.DEPOT_LOCATION, EXT_OMNICARE_SALES_src.DEP_ADDRESS_1, EXT_OMNICARE_SALES_src.DEP_ADDRESS_2) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ANDA_SALES_src_b0 /*+basename(EXT_ANDA_SALES_src),createtype(L)*/ 
(
 TRANSACTION_ID,
 INVOICE_DATE,
 PRODUCT_BRAND,
 PRODUCT_NDC,
 PRODUCT_DESC,
 INVOICE_QTY,
 INVOICE_UNITS,
 INVOICE_COST,
 INVOICE_PACK_COST,
 INVOICE_UNIT_COST,
 CONTRACT_PACK_COST,
 CONTRACT_PURCHASES,
 CONTRACT_NUMBER,
 DISPENSING_LOCATION,
 DL_ADDRESS_1,
 DL_ADDRESS_2,
 DL_CITY,
 DL_STATE,
 DL_ZIP,
 DL_DEA_NUM,
 DEPOT_LOCATION,
 DEP_ADDRESS_1,
 DEP_ADDRESS_2,
 DEP_CITY,
 DEP_STATE,
 DEP_ZIP,
 DEP_DEA_NUM,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_ANDA_SALES_src.TRANSACTION_ID,
        EXT_ANDA_SALES_src.INVOICE_DATE,
        EXT_ANDA_SALES_src.PRODUCT_BRAND,
        EXT_ANDA_SALES_src.PRODUCT_NDC,
        EXT_ANDA_SALES_src.PRODUCT_DESC,
        EXT_ANDA_SALES_src.INVOICE_QTY,
        EXT_ANDA_SALES_src.INVOICE_UNITS,
        EXT_ANDA_SALES_src.INVOICE_COST,
        EXT_ANDA_SALES_src.INVOICE_PACK_COST,
        EXT_ANDA_SALES_src.INVOICE_UNIT_COST,
        EXT_ANDA_SALES_src.CONTRACT_PACK_COST,
        EXT_ANDA_SALES_src.CONTRACT_PURCHASES,
        EXT_ANDA_SALES_src.CONTRACT_NUMBER,
        EXT_ANDA_SALES_src.DISPENSING_LOCATION,
        EXT_ANDA_SALES_src.DL_ADDRESS_1,
        EXT_ANDA_SALES_src.DL_ADDRESS_2,
        EXT_ANDA_SALES_src.DL_CITY,
        EXT_ANDA_SALES_src.DL_STATE,
        EXT_ANDA_SALES_src.DL_ZIP,
        EXT_ANDA_SALES_src.DL_DEA_NUM,
        EXT_ANDA_SALES_src.DEPOT_LOCATION,
        EXT_ANDA_SALES_src.DEP_ADDRESS_1,
        EXT_ANDA_SALES_src.DEP_ADDRESS_2,
        EXT_ANDA_SALES_src.DEP_CITY,
        EXT_ANDA_SALES_src.DEP_STATE,
        EXT_ANDA_SALES_src.DEP_ZIP,
        EXT_ANDA_SALES_src.DEP_DEA_NUM,
        EXT_ANDA_SALES_src.batch_id,
        EXT_ANDA_SALES_src.row_id,
        EXT_ANDA_SALES_src.update_ts
 FROM teva_ingestion.EXT_ANDA_SALES_src
 ORDER BY EXT_ANDA_SALES_src.TRANSACTION_ID,
          EXT_ANDA_SALES_src.INVOICE_DATE,
          EXT_ANDA_SALES_src.PRODUCT_BRAND,
          EXT_ANDA_SALES_src.PRODUCT_NDC,
          EXT_ANDA_SALES_src.PRODUCT_DESC,
          EXT_ANDA_SALES_src.INVOICE_QTY,
          EXT_ANDA_SALES_src.INVOICE_UNITS,
          EXT_ANDA_SALES_src.INVOICE_COST,
          EXT_ANDA_SALES_src.INVOICE_PACK_COST,
          EXT_ANDA_SALES_src.INVOICE_UNIT_COST,
          EXT_ANDA_SALES_src.CONTRACT_PACK_COST,
          EXT_ANDA_SALES_src.CONTRACT_PURCHASES,
          EXT_ANDA_SALES_src.CONTRACT_NUMBER,
          EXT_ANDA_SALES_src.DISPENSING_LOCATION,
          EXT_ANDA_SALES_src.DL_ADDRESS_1,
          EXT_ANDA_SALES_src.DL_ADDRESS_2,
          EXT_ANDA_SALES_src.DL_CITY,
          EXT_ANDA_SALES_src.DL_STATE,
          EXT_ANDA_SALES_src.DL_ZIP,
          EXT_ANDA_SALES_src.DL_DEA_NUM,
          EXT_ANDA_SALES_src.DEPOT_LOCATION,
          EXT_ANDA_SALES_src.DEP_ADDRESS_1,
          EXT_ANDA_SALES_src.DEP_ADDRESS_2,
          EXT_ANDA_SALES_src.DEP_CITY,
          EXT_ANDA_SALES_src.DEP_STATE,
          EXT_ANDA_SALES_src.DEP_ZIP,
          EXT_ANDA_SALES_src.DEP_DEA_NUM,
          EXT_ANDA_SALES_src.batch_id,
          EXT_ANDA_SALES_src.row_id,
          EXT_ANDA_SALES_src.update_ts
SEGMENTED BY hash(EXT_ANDA_SALES_src.DL_STATE, EXT_ANDA_SALES_src.DL_ZIP, EXT_ANDA_SALES_src.DEP_STATE, EXT_ANDA_SALES_src.DEP_ZIP, EXT_ANDA_SALES_src.batch_id, EXT_ANDA_SALES_src.row_id, EXT_ANDA_SALES_src.update_ts, EXT_ANDA_SALES_src.INVOICE_DATE, EXT_ANDA_SALES_src.PRODUCT_NDC, EXT_ANDA_SALES_src.DL_DEA_NUM, EXT_ANDA_SALES_src.DEP_DEA_NUM, EXT_ANDA_SALES_src.PRODUCT_BRAND, EXT_ANDA_SALES_src.DL_CITY, EXT_ANDA_SALES_src.DEP_CITY, EXT_ANDA_SALES_src.INVOICE_QTY, EXT_ANDA_SALES_src.INVOICE_UNITS, EXT_ANDA_SALES_src.INVOICE_COST, EXT_ANDA_SALES_src.INVOICE_PACK_COST, EXT_ANDA_SALES_src.INVOICE_UNIT_COST, EXT_ANDA_SALES_src.CONTRACT_PACK_COST, EXT_ANDA_SALES_src.CONTRACT_PURCHASES, EXT_ANDA_SALES_src.TRANSACTION_ID, EXT_ANDA_SALES_src.PRODUCT_DESC, EXT_ANDA_SALES_src.CONTRACT_NUMBER, EXT_ANDA_SALES_src.DISPENSING_LOCATION, EXT_ANDA_SALES_src.DL_ADDRESS_1, EXT_ANDA_SALES_src.DL_ADDRESS_2, EXT_ANDA_SALES_src.DEPOT_LOCATION, EXT_ANDA_SALES_src.DEP_ADDRESS_1, EXT_ANDA_SALES_src.DEP_ADDRESS_2) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_src_b0 /*+basename(EXT_TOUCHPOINT_PRESENTATION_src),createtype(L)*/ 
(
 CALL_ID,
 CALL_ATTEMPT_ID,
 PRESENTATION_ID,
 PRODUCT,
 "POSITION",
 ITEM_TYPE,
 ITEM_DESCRIPTION,
 QUANTITY,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_TOUCHPOINT_PRESENTATION_src.CALL_ID,
        EXT_TOUCHPOINT_PRESENTATION_src.CALL_ATTEMPT_ID,
        EXT_TOUCHPOINT_PRESENTATION_src.PRESENTATION_ID,
        EXT_TOUCHPOINT_PRESENTATION_src.PRODUCT,
        EXT_TOUCHPOINT_PRESENTATION_src."POSITION",
        EXT_TOUCHPOINT_PRESENTATION_src.ITEM_TYPE,
        EXT_TOUCHPOINT_PRESENTATION_src.ITEM_DESCRIPTION,
        EXT_TOUCHPOINT_PRESENTATION_src.QUANTITY,
        EXT_TOUCHPOINT_PRESENTATION_src.batch_id,
        EXT_TOUCHPOINT_PRESENTATION_src.row_id,
        EXT_TOUCHPOINT_PRESENTATION_src.update_ts
 FROM teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_src
 ORDER BY EXT_TOUCHPOINT_PRESENTATION_src.CALL_ID,
          EXT_TOUCHPOINT_PRESENTATION_src.CALL_ATTEMPT_ID,
          EXT_TOUCHPOINT_PRESENTATION_src.PRESENTATION_ID,
          EXT_TOUCHPOINT_PRESENTATION_src.PRODUCT,
          EXT_TOUCHPOINT_PRESENTATION_src."POSITION",
          EXT_TOUCHPOINT_PRESENTATION_src.ITEM_TYPE,
          EXT_TOUCHPOINT_PRESENTATION_src.ITEM_DESCRIPTION,
          EXT_TOUCHPOINT_PRESENTATION_src.QUANTITY,
          EXT_TOUCHPOINT_PRESENTATION_src.batch_id,
          EXT_TOUCHPOINT_PRESENTATION_src.row_id,
          EXT_TOUCHPOINT_PRESENTATION_src.update_ts
SEGMENTED BY hash(EXT_TOUCHPOINT_PRESENTATION_src.batch_id, EXT_TOUCHPOINT_PRESENTATION_src.row_id, EXT_TOUCHPOINT_PRESENTATION_src.update_ts, EXT_TOUCHPOINT_PRESENTATION_src.PRODUCT, EXT_TOUCHPOINT_PRESENTATION_src.ITEM_TYPE, EXT_TOUCHPOINT_PRESENTATION_src.CALL_ID, EXT_TOUCHPOINT_PRESENTATION_src.CALL_ATTEMPT_ID, EXT_TOUCHPOINT_PRESENTATION_src.PRESENTATION_ID, EXT_TOUCHPOINT_PRESENTATION_src."POSITION", EXT_TOUCHPOINT_PRESENTATION_src.QUANTITY, EXT_TOUCHPOINT_PRESENTATION_src.ITEM_DESCRIPTION) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_PBM_XREF_src_b0 /*+basename(EXT_IMS_PBM_XREF_src),createtype(L)*/ 
(
 PBM_NAME,
 PAYER_PLAN_NUM,
 XREF_TO_PAYER_PLAN_NUM,
 IPD_ID,
 IPD_TYPE,
 PLAN_NAME,
 PBM_NUM,
 IMS_PROCESSOR_NUM,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_IMS_PBM_XREF_src.PBM_NAME,
        EXT_IMS_PBM_XREF_src.PAYER_PLAN_NUM,
        EXT_IMS_PBM_XREF_src.XREF_TO_PAYER_PLAN_NUM,
        EXT_IMS_PBM_XREF_src.IPD_ID,
        EXT_IMS_PBM_XREF_src.IPD_TYPE,
        EXT_IMS_PBM_XREF_src.PLAN_NAME,
        EXT_IMS_PBM_XREF_src.PBM_NUM,
        EXT_IMS_PBM_XREF_src.IMS_PROCESSOR_NUM,
        EXT_IMS_PBM_XREF_src.batch_id,
        EXT_IMS_PBM_XREF_src.row_id,
        EXT_IMS_PBM_XREF_src.update_ts
 FROM teva_ingestion.EXT_IMS_PBM_XREF_src
 ORDER BY EXT_IMS_PBM_XREF_src.PBM_NAME,
          EXT_IMS_PBM_XREF_src.PAYER_PLAN_NUM,
          EXT_IMS_PBM_XREF_src.XREF_TO_PAYER_PLAN_NUM,
          EXT_IMS_PBM_XREF_src.IPD_ID,
          EXT_IMS_PBM_XREF_src.IPD_TYPE,
          EXT_IMS_PBM_XREF_src.PLAN_NAME,
          EXT_IMS_PBM_XREF_src.PBM_NUM,
          EXT_IMS_PBM_XREF_src.IMS_PROCESSOR_NUM,
          EXT_IMS_PBM_XREF_src.batch_id,
          EXT_IMS_PBM_XREF_src.row_id,
          EXT_IMS_PBM_XREF_src.update_ts
SEGMENTED BY hash(EXT_IMS_PBM_XREF_src.PBM_NUM, EXT_IMS_PBM_XREF_src.batch_id, EXT_IMS_PBM_XREF_src.row_id, EXT_IMS_PBM_XREF_src.update_ts, EXT_IMS_PBM_XREF_src.PAYER_PLAN_NUM, EXT_IMS_PBM_XREF_src.XREF_TO_PAYER_PLAN_NUM, EXT_IMS_PBM_XREF_src.IPD_ID, EXT_IMS_PBM_XREF_src.IPD_TYPE, EXT_IMS_PBM_XREF_src.IMS_PROCESSOR_NUM, EXT_IMS_PBM_XREF_src.PBM_NAME, EXT_IMS_PBM_XREF_src.PLAN_NAME) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TOUCHPOINT_CALL_src_b0 /*+basename(EXT_TOUCHPOINT_CALL_src),createtype(L)*/ 
(
 CALL_ID,
 CALL_ATTEMPT_ID,
 TOUCHPOINT_ID,
 CLIENT_ID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 CALL_TYPE,
 CALL_DATE,
 STATUS_CODE,
 STATUS_DESCRIPTION,
 REP_ID,
 REP_FIRST_NAME,
 REP_LAST_NAME,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_TOUCHPOINT_CALL_src.CALL_ID,
        EXT_TOUCHPOINT_CALL_src.CALL_ATTEMPT_ID,
        EXT_TOUCHPOINT_CALL_src.TOUCHPOINT_ID,
        EXT_TOUCHPOINT_CALL_src.CLIENT_ID,
        EXT_TOUCHPOINT_CALL_src.IMS_ID,
        EXT_TOUCHPOINT_CALL_src.FIRST_NAME,
        EXT_TOUCHPOINT_CALL_src.LAST_NAME,
        EXT_TOUCHPOINT_CALL_src.CALL_TYPE,
        EXT_TOUCHPOINT_CALL_src.CALL_DATE,
        EXT_TOUCHPOINT_CALL_src.STATUS_CODE,
        EXT_TOUCHPOINT_CALL_src.STATUS_DESCRIPTION,
        EXT_TOUCHPOINT_CALL_src.REP_ID,
        EXT_TOUCHPOINT_CALL_src.REP_FIRST_NAME,
        EXT_TOUCHPOINT_CALL_src.REP_LAST_NAME,
        EXT_TOUCHPOINT_CALL_src.batch_id,
        EXT_TOUCHPOINT_CALL_src.row_id,
        EXT_TOUCHPOINT_CALL_src.update_ts
 FROM teva_ingestion.EXT_TOUCHPOINT_CALL_src
 ORDER BY EXT_TOUCHPOINT_CALL_src.CALL_ID,
          EXT_TOUCHPOINT_CALL_src.CALL_ATTEMPT_ID,
          EXT_TOUCHPOINT_CALL_src.TOUCHPOINT_ID,
          EXT_TOUCHPOINT_CALL_src.CLIENT_ID,
          EXT_TOUCHPOINT_CALL_src.IMS_ID,
          EXT_TOUCHPOINT_CALL_src.FIRST_NAME,
          EXT_TOUCHPOINT_CALL_src.LAST_NAME,
          EXT_TOUCHPOINT_CALL_src.CALL_TYPE,
          EXT_TOUCHPOINT_CALL_src.CALL_DATE,
          EXT_TOUCHPOINT_CALL_src.STATUS_CODE,
          EXT_TOUCHPOINT_CALL_src.STATUS_DESCRIPTION,
          EXT_TOUCHPOINT_CALL_src.REP_ID,
          EXT_TOUCHPOINT_CALL_src.REP_FIRST_NAME,
          EXT_TOUCHPOINT_CALL_src.REP_LAST_NAME,
          EXT_TOUCHPOINT_CALL_src.batch_id,
          EXT_TOUCHPOINT_CALL_src.row_id,
          EXT_TOUCHPOINT_CALL_src.update_ts
SEGMENTED BY hash(EXT_TOUCHPOINT_CALL_src.batch_id, EXT_TOUCHPOINT_CALL_src.row_id, EXT_TOUCHPOINT_CALL_src.update_ts, EXT_TOUCHPOINT_CALL_src.IMS_ID, EXT_TOUCHPOINT_CALL_src.STATUS_CODE, EXT_TOUCHPOINT_CALL_src.CLIENT_ID, EXT_TOUCHPOINT_CALL_src.FIRST_NAME, EXT_TOUCHPOINT_CALL_src.LAST_NAME, EXT_TOUCHPOINT_CALL_src.REP_FIRST_NAME, EXT_TOUCHPOINT_CALL_src.REP_LAST_NAME, EXT_TOUCHPOINT_CALL_src.CALL_ID, EXT_TOUCHPOINT_CALL_src.CALL_ATTEMPT_ID, EXT_TOUCHPOINT_CALL_src.TOUCHPOINT_ID, EXT_TOUCHPOINT_CALL_src.CALL_DATE, EXT_TOUCHPOINT_CALL_src.REP_ID, EXT_TOUCHPOINT_CALL_src.CALL_TYPE, EXT_TOUCHPOINT_CALL_src.STATUS_DESCRIPTION) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CLOZAPINE_UNIT_AP_src_b0 /*+basename(EXT_CLOZAPINE_UNIT_AP_src),createtype(L)*/ 
(
 NDC_CODE,
 DESCRIPTION,
 UNIT_AP,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_CLOZAPINE_UNIT_AP_src.NDC_CODE,
        EXT_CLOZAPINE_UNIT_AP_src.DESCRIPTION,
        EXT_CLOZAPINE_UNIT_AP_src.UNIT_AP,
        EXT_CLOZAPINE_UNIT_AP_src.batch_id,
        EXT_CLOZAPINE_UNIT_AP_src.row_id,
        EXT_CLOZAPINE_UNIT_AP_src.update_ts
 FROM teva_ingestion.EXT_CLOZAPINE_UNIT_AP_src
 ORDER BY EXT_CLOZAPINE_UNIT_AP_src.NDC_CODE,
          EXT_CLOZAPINE_UNIT_AP_src.DESCRIPTION,
          EXT_CLOZAPINE_UNIT_AP_src.UNIT_AP,
          EXT_CLOZAPINE_UNIT_AP_src.batch_id,
          EXT_CLOZAPINE_UNIT_AP_src.row_id,
          EXT_CLOZAPINE_UNIT_AP_src.update_ts
SEGMENTED BY hash(EXT_CLOZAPINE_UNIT_AP_src.batch_id, EXT_CLOZAPINE_UNIT_AP_src.row_id, EXT_CLOZAPINE_UNIT_AP_src.update_ts, EXT_CLOZAPINE_UNIT_AP_src.NDC_CODE, EXT_CLOZAPINE_UNIT_AP_src.UNIT_AP, EXT_CLOZAPINE_UNIT_AP_src.DESCRIPTION) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_MONTHLY_QUANTITY_src_super_b0 /*+basename(EXT_ONC_DMD_MONTHLY_QUANTITY_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 FILLER_01,
 IMS_OUTLET_CODE,
 SUBCATEGORY_CODE,
 ALT_SEQ_NUM,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 DATA_DATE,
 QTY_MTH01,
 QTY_MTH02,
 QTY_MTH03,
 QTY_MTH04,
 QTY_MTH05,
 QTY_MTH06,
 QTY_MTH07,
 QTY_MTH08,
 QTY_MTH09,
 QTY_MTH10,
 QTY_MTH11,
 QTY_MTH12,
 QTY_MTH13,
 QTY_MTH14,
 QTY_MTH15,
 QTY_MTH16,
 QTY_MTH17,
 QTY_MTH18,
 QTY_MTH19,
 QTY_MTH20,
 QTY_MTH21,
 QTY_MTH22,
 QTY_MTH23,
 QTY_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_MONTHLY_QUANTITY_src.CLIENT_NUM,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.REPORT_NUM,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.FILLER_01,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.SUBCATEGORY_CODE,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.ALT_SEQ_NUM,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.CATEGORY_CODE,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.IMS_PRODUCT_CODE,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.DATA_DATE,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH01,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH02,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH03,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH04,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH05,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH06,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH07,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH08,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH09,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH10,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH11,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH12,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH13,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH14,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH15,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH16,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH17,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH18,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH19,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH20,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH21,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH22,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH23,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH24,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_NAME,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_CITY,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_STATE,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.batch_id,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.row_id,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_QUANTITY_src
 ORDER BY EXT_ONC_DMD_MONTHLY_QUANTITY_src.batch_id
SEGMENTED BY hash(EXT_ONC_DMD_MONTHLY_QUANTITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FACTORY_SALES_852_src_super_b0 /*+basename(EXT_FACTORY_SALES_852_src_super)*/ 
(
 TRADING_PARTNER,
 DISTRIB_CENTER,
 DISTRIB_CENTER_DEA_NUM,
 REPORTING_DATE,
 PRODUCT_NAME,
 DESCRIPTION,
 NDC,
 QTY_RECEIVED,
 QTY_RECEIVED_DOLLARS,
 QTY_SOLD,
 QTY_SOLD_DOLLARS,
 QTY_OMIT,
 QTY_OMIT_DOLLARS,
 MTH_END_QTY_ON_HAND,
 MTH_END_QTY_ON_HAND_DOLLARS,
 MTH_END_COMMITTED,
 MTH_END_COMMITTED_DOLLARS,
 MTH_END_RESERVED,
 MTH_END_RESERVED_DOLLARS,
 QTY_RETURN,
 QTY_RETURN_DOLLARS,
 QTY_CUSTOMER_RETURN,
 QTY_CUSTOMER_RETURN_DOLLARS,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FACTORY_SALES_852_src.TRADING_PARTNER,
        EXT_FACTORY_SALES_852_src.DISTRIB_CENTER,
        EXT_FACTORY_SALES_852_src.DISTRIB_CENTER_DEA_NUM,
        EXT_FACTORY_SALES_852_src.REPORTING_DATE,
        EXT_FACTORY_SALES_852_src.PRODUCT_NAME,
        EXT_FACTORY_SALES_852_src.DESCRIPTION,
        EXT_FACTORY_SALES_852_src.NDC,
        EXT_FACTORY_SALES_852_src.QTY_RECEIVED,
        EXT_FACTORY_SALES_852_src.QTY_RECEIVED_DOLLARS,
        EXT_FACTORY_SALES_852_src.QTY_SOLD,
        EXT_FACTORY_SALES_852_src.QTY_SOLD_DOLLARS,
        EXT_FACTORY_SALES_852_src.QTY_OMIT,
        EXT_FACTORY_SALES_852_src.QTY_OMIT_DOLLARS,
        EXT_FACTORY_SALES_852_src.MTH_END_QTY_ON_HAND,
        EXT_FACTORY_SALES_852_src.MTH_END_QTY_ON_HAND_DOLLARS,
        EXT_FACTORY_SALES_852_src.MTH_END_COMMITTED,
        EXT_FACTORY_SALES_852_src.MTH_END_COMMITTED_DOLLARS,
        EXT_FACTORY_SALES_852_src.MTH_END_RESERVED,
        EXT_FACTORY_SALES_852_src.MTH_END_RESERVED_DOLLARS,
        EXT_FACTORY_SALES_852_src.QTY_RETURN,
        EXT_FACTORY_SALES_852_src.QTY_RETURN_DOLLARS,
        EXT_FACTORY_SALES_852_src.QTY_CUSTOMER_RETURN,
        EXT_FACTORY_SALES_852_src.QTY_CUSTOMER_RETURN_DOLLARS,
        EXT_FACTORY_SALES_852_src.batch_id,
        EXT_FACTORY_SALES_852_src.row_id,
        EXT_FACTORY_SALES_852_src.update_ts
 FROM teva_ingestion.EXT_FACTORY_SALES_852_src
 ORDER BY EXT_FACTORY_SALES_852_src.batch_id
SEGMENTED BY hash(EXT_FACTORY_SALES_852_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.C_BO_HCP_DETAIL_src_super_b0 /*+basename(C_BO_HCP_DETAIL_src_super)*/ 
(
 ROWID_OBJECT,
 CREATOR,
 CREATE_DATE,
 UPDATED_BY,
 LAST_UPDATE_DATE,
 CONSOLIDATION_IND,
 DELETED_IND,
 DELETED_BY,
 DELETED_DATE,
 LAST_ROWID_SYSTEM,
 DIRTY_IND,
 INTERACTION_ID,
 HUB_STATE_IND,
 CM_DIRTY_IND,
 TVCMID,
 IMS_PRESCRIBER_ID,
 PREFIX,
 FIRST_NAME,
 LAST_NAME,
 MIDDLE_NAME,
 SUFFIX,
 HEALTHCARE_PROF_STATUS_CD,
 YEAR_OF_BIRTH,
 DATE_OF_DEATH,
 GENDER_CODE,
 TEVA_SPECIALTY_CODE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT C_BO_HCP_DETAIL_src.ROWID_OBJECT,
        C_BO_HCP_DETAIL_src.CREATOR,
        C_BO_HCP_DETAIL_src.CREATE_DATE,
        C_BO_HCP_DETAIL_src.UPDATED_BY,
        C_BO_HCP_DETAIL_src.LAST_UPDATE_DATE,
        C_BO_HCP_DETAIL_src.CONSOLIDATION_IND,
        C_BO_HCP_DETAIL_src.DELETED_IND,
        C_BO_HCP_DETAIL_src.DELETED_BY,
        C_BO_HCP_DETAIL_src.DELETED_DATE,
        C_BO_HCP_DETAIL_src.LAST_ROWID_SYSTEM,
        C_BO_HCP_DETAIL_src.DIRTY_IND,
        C_BO_HCP_DETAIL_src.INTERACTION_ID,
        C_BO_HCP_DETAIL_src.HUB_STATE_IND,
        C_BO_HCP_DETAIL_src.CM_DIRTY_IND,
        C_BO_HCP_DETAIL_src.TVCMID,
        C_BO_HCP_DETAIL_src.IMS_PRESCRIBER_ID,
        C_BO_HCP_DETAIL_src.PREFIX,
        C_BO_HCP_DETAIL_src.FIRST_NAME,
        C_BO_HCP_DETAIL_src.LAST_NAME,
        C_BO_HCP_DETAIL_src.MIDDLE_NAME,
        C_BO_HCP_DETAIL_src.SUFFIX,
        C_BO_HCP_DETAIL_src.HEALTHCARE_PROF_STATUS_CD,
        C_BO_HCP_DETAIL_src.YEAR_OF_BIRTH,
        C_BO_HCP_DETAIL_src.DATE_OF_DEATH,
        C_BO_HCP_DETAIL_src.GENDER_CODE,
        C_BO_HCP_DETAIL_src.TEVA_SPECIALTY_CODE,
        C_BO_HCP_DETAIL_src.batch_id,
        C_BO_HCP_DETAIL_src.row_id,
        C_BO_HCP_DETAIL_src.update_ts
 FROM teva_ingestion.C_BO_HCP_DETAIL_src
 ORDER BY C_BO_HCP_DETAIL_src.batch_id
SEGMENTED BY hash(C_BO_HCP_DETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.C_BO_IMS_FLAG_src_super_b0 /*+basename(C_BO_IMS_FLAG_src_super)*/ 
(
 ROWID_OBJECT,
 CREATOR,
 CREATE_DATE,
 UPDATED_BY,
 LAST_UPDATE_DATE,
 CONSOLIDATION_IND,
 DELETED_IND,
 DELETED_BY,
 DELETED_DATE,
 LAST_ROWID_SYSTEM,
 DIRTY_IND,
 INTERACTION_ID,
 HUB_STATE_IND,
 CM_DIRTY_IND,
 FLAG_TYPE,
 FLAG_VALUE,
 EFFECTIVE_DATE,
 HCP_DETAIL_ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT C_BO_IMS_FLAG_src.ROWID_OBJECT,
        C_BO_IMS_FLAG_src.CREATOR,
        C_BO_IMS_FLAG_src.CREATE_DATE,
        C_BO_IMS_FLAG_src.UPDATED_BY,
        C_BO_IMS_FLAG_src.LAST_UPDATE_DATE,
        C_BO_IMS_FLAG_src.CONSOLIDATION_IND,
        C_BO_IMS_FLAG_src.DELETED_IND,
        C_BO_IMS_FLAG_src.DELETED_BY,
        C_BO_IMS_FLAG_src.DELETED_DATE,
        C_BO_IMS_FLAG_src.LAST_ROWID_SYSTEM,
        C_BO_IMS_FLAG_src.DIRTY_IND,
        C_BO_IMS_FLAG_src.INTERACTION_ID,
        C_BO_IMS_FLAG_src.HUB_STATE_IND,
        C_BO_IMS_FLAG_src.CM_DIRTY_IND,
        C_BO_IMS_FLAG_src.FLAG_TYPE,
        C_BO_IMS_FLAG_src.FLAG_VALUE,
        C_BO_IMS_FLAG_src.EFFECTIVE_DATE,
        C_BO_IMS_FLAG_src.HCP_DETAIL_ID,
        C_BO_IMS_FLAG_src.batch_id,
        C_BO_IMS_FLAG_src.row_id,
        C_BO_IMS_FLAG_src.update_ts
 FROM teva_ingestion.C_BO_IMS_FLAG_src
 ORDER BY C_BO_IMS_FLAG_src.batch_id
SEGMENTED BY hash(C_BO_IMS_FLAG_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src_super_b0 /*+basename(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src_super)*/ 
(
 TRANS_TYPE,
 ASI_TXN_ID,
 ORIG_ASI_TXN_ID,
 RX_NUM,
 RX_DATE,
 DATE_WRITTEN,
 DAYS_SUPPLY,
 NDC_CODE,
 DAW,
 DRUG_NAME,
 DRUG_DESC,
 NEW_REFILL,
 QUANTITY,
 REFILLS,
 OTHER_COVERAGE_CODE,
 GROUP_NUM,
 COUPON_NUM,
 SEX,
 AGE_AT_REDEMPTION,
 PHARMACY_PROCESS_DATE,
 PHARMACY_CHAIN_NUM,
 NABP,
 PHARMACY_CHAIN,
 PHARMACY_NAME,
 PHARMACY_ADDRESS,
 PHARMACY_ADDRESS2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PHARMACY_PHONE,
 PHARMACY_NPI_NUM,
 PRINCIPLE_PHYS_DEA_NUM,
 PHYS_NPI,
 PHYSICIAN_NAME,
 ASI_PHYS_ADDRESS1,
 ASI_PHYS_ADDRESS2,
 ASI_PHYS_CITY,
 ASI_PHYS_STATE,
 ASI_PHYS_ZIP,
 REBATE_AMOUNT,
 MEMBER_CASH_EXPENSE,
 SUBMITTED_COST,
 PHARMACY_FEE,
 TOTAL_AMOUNT_DUE,
 CALC_AWP,
 CREATE_DATE,
 OCC_PAYMENT_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.TRANS_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ORIG_ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.RX_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.RX_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DATE_WRITTEN,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DAYS_SUPPLY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.NDC_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DAW,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DRUG_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DRUG_DESC,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.NEW_REFILL,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.QUANTITY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.REFILLS,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.OTHER_COVERAGE_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.GROUP_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.COUPON_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.SEX,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.AGE_AT_REDEMPTION,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_PROCESS_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_CHAIN_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.NABP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_CHAIN,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_ADDRESS,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_ADDRESS2,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_PHONE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_NPI_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PRINCIPLE_PHYS_DEA_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHYS_NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHYSICIAN_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_ADDRESS1,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_ADDRESS2,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.REBATE_AMOUNT,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.MEMBER_CASH_EXPENSE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.SUBMITTED_COST,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_FEE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.TOTAL_AMOUNT_DUE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.CALC_AWP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.CREATE_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.OCC_PAYMENT_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src
 ORDER BY EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src_super_b0 /*+basename(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src_super)*/ 
(
 TRANS_TYPE,
 ASI_TXN_ID,
 ORIG_ASI_TXN_ID,
 RX_NUM,
 RX_DATE,
 DATE_WRITTEN,
 DAYS_SUPPLY,
 NDC_CODE,
 DAW,
 DRUG_NAME,
 DRUG_DESC,
 NEW_REFILL,
 QUANTITY,
 REFILLS,
 OTHER_COVERAGE_CODE,
 GROUP_NUM,
 COUPON_NUM,
 SEX,
 AGE_AT_REDEMPTION,
 PHARMACY_PROCESS_DATE,
 PHARMACY_CHAIN_NUM,
 NABP,
 PHARMACY_CHAIN,
 PHARMACY_NAME,
 PHARMACY_ADDRESS,
 PHARMACY_ADDRESS2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PHARMACY_PHONE,
 PHARMACY_NPI_NUM,
 PRINCIPLE_PHYS_DEA_NUM,
 PHYS_NPI,
 PHYSICIAN_NAME,
 ASI_PHYS_ADDRESS1,
 ASI_PHYS_ADDRESS2,
 ASI_PHYS_CITY,
 ASI_PHYS_STATE,
 ASI_PHYS_ZIP,
 REBATE_AMOUNT,
 MEMBER_CASH_EXPENSE,
 SUBMITTED_COST,
 PHARMACY_FEE,
 TOTAL_AMOUNT_DUE,
 CALC_AWP,
 CREATE_DATE,
 OCC_PAYMENT_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.TRANS_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ORIG_ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.RX_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.RX_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DATE_WRITTEN,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DAYS_SUPPLY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.NDC_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DAW,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DRUG_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DRUG_DESC,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.NEW_REFILL,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.QUANTITY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.REFILLS,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.OTHER_COVERAGE_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.GROUP_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.COUPON_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.SEX,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.AGE_AT_REDEMPTION,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_PROCESS_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_CHAIN_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.NABP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_CHAIN,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_ADDRESS,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_ADDRESS2,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_PHONE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_NPI_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PRINCIPLE_PHYS_DEA_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHYS_NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHYSICIAN_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_ADDRESS1,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_ADDRESS2,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.REBATE_AMOUNT,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.MEMBER_CASH_EXPENSE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.SUBMITTED_COST,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_FEE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.TOTAL_AMOUNT_DUE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.CALC_AWP,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.CREATE_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.OCC_PAYMENT_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src
 ORDER BY EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src_super_b0 /*+basename(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src_super)*/ 
(
 TRANS_TYPE,
 ASI_TXN_ID,
 ORIG_ASI_TXN_ID,
 RX_NUM,
 RX_DATE,
 DATE_WRITTEN,
 DAYS_SUPPLY,
 NDC_CODE,
 DAW,
 DRUG_NAME,
 DRUG_DESC,
 NEW_REFILL,
 QUANTITY,
 REFILLS,
 OTHER_COVERAGE_CODE,
 GROUP_NUM,
 COUPON_NUM,
 SEX,
 AGE_AT_REDEMPTION,
 PHARMACY_PROCESS_DATE,
 PHARMACY_CHAIN_NUM,
 NABP,
 PHARMACY_CHAIN,
 PHARMACY_NAME,
 PHARMACY_ADDRESS,
 PHARMACY_ADDRESS2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PHARMACY_PHONE,
 PHARMACY_NPI_NUM,
 PRINCIPLE_PHYS_DEA_NUM,
 PHYS_NPI,
 PHYSICIAN_NAME,
 ASI_PHYS_ADDRESS1,
 ASI_PHYS_ADDRESS2,
 ASI_PHYS_CITY,
 ASI_PHYS_STATE,
 ASI_PHYS_ZIP,
 REBATE_AMOUNT,
 MEMBER_CASH_EXPENSE,
 SUBMITTED_COST,
 PHARMACY_FEE,
 TOTAL_AMOUNT_DUE,
 CALC_AWP,
 CREATE_DATE,
 OCC_PAYMENT_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.TRANS_TYPE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_TXN_ID,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ORIG_ASI_TXN_ID,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.RX_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.RX_DATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DATE_WRITTEN,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DAYS_SUPPLY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.NDC_CODE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DAW,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DRUG_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DRUG_DESC,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.NEW_REFILL,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.QUANTITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.REFILLS,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.OTHER_COVERAGE_CODE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.GROUP_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.COUPON_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.SEX,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.AGE_AT_REDEMPTION,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_PROCESS_DATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_CHAIN_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.NABP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_CHAIN,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_ADDRESS,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_ADDRESS2,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_CITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_STATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_ZIP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_PHONE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_NPI_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PRINCIPLE_PHYS_DEA_NUM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHYS_NPI,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHYSICIAN_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_ADDRESS1,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_ADDRESS2,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_CITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_STATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_ZIP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.REBATE_AMOUNT,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.MEMBER_CASH_EXPENSE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.SUBMITTED_COST,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_FEE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.TOTAL_AMOUNT_DUE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.CALC_AWP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.CREATE_DATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.OCC_PAYMENT_TYPE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.batch_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.row_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.update_ts
 FROM teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src
 ORDER BY EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.batch_id
SEGMENTED BY hash(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_src_super_b0 /*+basename(EXT_ASI_COPAY_DETAIL_WKLY_src_super)*/ 
(
 TRANS_TYPE,
 ASI_TXN_ID,
 ORIG_ASI_TXN_ID,
 RX_NUM,
 RX_DATE,
 DATE_WRITTEN,
 DAYS_SUPPLY,
 NDC_CODE,
 DAW,
 DRUG_NAME,
 DRUG_DESC,
 NEW_REFILL,
 QUANTITY,
 REFILLS,
 OTHER_COVERAGE_CODE,
 GROUP_NUM,
 COUPON_NUM,
 SEX,
 AGE_AT_REDEMPTION,
 PHARMACY_PROCESS_DATE,
 PHARMACY_CHAIN_NUM,
 NABP,
 PHARMACY_CHAIN,
 PHARMACY_NAME,
 PHARMACY_ADDRESS,
 PHARMACY_ADDRESS2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PHARMACY_PHONE,
 PHARMACY_NPI_NUM,
 PRINCIPLE_PHYS_DEA_NUM,
 PHYS_NPI,
 PHYSICIAN_NAME,
 ASI_PHYS_ADDRESS1,
 ASI_PHYS_ADDRESS2,
 ASI_PHYS_CITY,
 ASI_PHYS_STATE,
 ASI_PHYS_ZIP,
 REBATE_AMOUNT,
 MEMBER_CASH_EXPENSE,
 SUBMITTED_COST,
 PHARMACY_FEE,
 TOTAL_AMOUNT_DUE,
 CALC_AWP,
 CREATE_DATE,
 OCC_PAYMENT_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_DETAIL_WKLY_src.TRANS_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_src.ORIG_ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_src.RX_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_src.RX_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.DATE_WRITTEN,
        EXT_ASI_COPAY_DETAIL_WKLY_src.DAYS_SUPPLY,
        EXT_ASI_COPAY_DETAIL_WKLY_src.NDC_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.DAW,
        EXT_ASI_COPAY_DETAIL_WKLY_src.DRUG_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_src.DRUG_DESC,
        EXT_ASI_COPAY_DETAIL_WKLY_src.NEW_REFILL,
        EXT_ASI_COPAY_DETAIL_WKLY_src.QUANTITY,
        EXT_ASI_COPAY_DETAIL_WKLY_src.REFILLS,
        EXT_ASI_COPAY_DETAIL_WKLY_src.OTHER_COVERAGE_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.GROUP_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_src.COUPON_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_src.SEX,
        EXT_ASI_COPAY_DETAIL_WKLY_src.AGE_AT_REDEMPTION,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_PROCESS_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_CHAIN_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_src.NABP,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_CHAIN,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_ADDRESS,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_ADDRESS2,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_PHONE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_NPI_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PRINCIPLE_PHYS_DEA_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHYS_NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHYSICIAN_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_ADDRESS1,
        EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_ADDRESS2,
        EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_src.REBATE_AMOUNT,
        EXT_ASI_COPAY_DETAIL_WKLY_src.MEMBER_CASH_EXPENSE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.SUBMITTED_COST,
        EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_FEE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.TOTAL_AMOUNT_DUE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.CALC_AWP,
        EXT_ASI_COPAY_DETAIL_WKLY_src.CREATE_DATE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.OCC_PAYMENT_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_src
 ORDER BY EXT_ASI_COPAY_DETAIL_WKLY_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_DETAIL_WKLY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.C_BO_HCE_RAW_DEA_src_super_b0 /*+basename(C_BO_HCE_RAW_DEA_src_super)*/ 
(
 ROWID_OBJECT,
 CREATOR,
 CREATE_DATE,
 UPDATED_BY,
 LAST_UPDATE_DATE,
 CONSOLIDATION_IND,
 DELETED_IND,
 DELETED_BY,
 DELETED_DATE,
 LAST_ROWID_SYSTEM,
 DIRTY_IND,
 INTERACTION_ID,
 HUB_STATE_IND,
 CM_DIRTY_IND,
 TVCMID,
 IMS_ID,
 DEA_NUMBER,
 NAME,
 ADDITIONAL_COMPANY_INFO,
 ADDRESS_LINE1,
 ADDRESS_LINE2,
 CITY,
 STATE,
 ZIP,
 BUSINESS_ACTIVITY_CODE,
 DRUG_SCHEDULES,
 EXPIRATION_DATE,
 BUSINESS_ACTIVITY_SUB_CODE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT C_BO_HCE_RAW_DEA_src.ROWID_OBJECT,
        C_BO_HCE_RAW_DEA_src.CREATOR,
        C_BO_HCE_RAW_DEA_src.CREATE_DATE,
        C_BO_HCE_RAW_DEA_src.UPDATED_BY,
        C_BO_HCE_RAW_DEA_src.LAST_UPDATE_DATE,
        C_BO_HCE_RAW_DEA_src.CONSOLIDATION_IND,
        C_BO_HCE_RAW_DEA_src.DELETED_IND,
        C_BO_HCE_RAW_DEA_src.DELETED_BY,
        C_BO_HCE_RAW_DEA_src.DELETED_DATE,
        C_BO_HCE_RAW_DEA_src.LAST_ROWID_SYSTEM,
        C_BO_HCE_RAW_DEA_src.DIRTY_IND,
        C_BO_HCE_RAW_DEA_src.INTERACTION_ID,
        C_BO_HCE_RAW_DEA_src.HUB_STATE_IND,
        C_BO_HCE_RAW_DEA_src.CM_DIRTY_IND,
        C_BO_HCE_RAW_DEA_src.TVCMID,
        C_BO_HCE_RAW_DEA_src.IMS_ID,
        C_BO_HCE_RAW_DEA_src.DEA_NUMBER,
        C_BO_HCE_RAW_DEA_src.NAME,
        C_BO_HCE_RAW_DEA_src.ADDITIONAL_COMPANY_INFO,
        C_BO_HCE_RAW_DEA_src.ADDRESS_LINE1,
        C_BO_HCE_RAW_DEA_src.ADDRESS_LINE2,
        C_BO_HCE_RAW_DEA_src.CITY,
        C_BO_HCE_RAW_DEA_src.STATE,
        C_BO_HCE_RAW_DEA_src.ZIP,
        C_BO_HCE_RAW_DEA_src.BUSINESS_ACTIVITY_CODE,
        C_BO_HCE_RAW_DEA_src.DRUG_SCHEDULES,
        C_BO_HCE_RAW_DEA_src.EXPIRATION_DATE,
        C_BO_HCE_RAW_DEA_src.BUSINESS_ACTIVITY_SUB_CODE,
        C_BO_HCE_RAW_DEA_src.batch_id,
        C_BO_HCE_RAW_DEA_src.row_id,
        C_BO_HCE_RAW_DEA_src.update_ts
 FROM teva_ingestion.C_BO_HCE_RAW_DEA_src
 ORDER BY C_BO_HCE_RAW_DEA_src.batch_id
SEGMENTED BY hash(C_BO_HCE_RAW_DEA_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_QTY_W_src_super_b0 /*+basename(EXT_IMS_MHJ_QTY_W_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 nrx_025,
 nrx_026,
 nrx_027,
 nrx_028,
 nrx_029,
 nrx_030,
 nrx_031,
 nrx_032,
 nrx_033,
 nrx_034,
 nrx_035,
 nrx_036,
 nrx_037,
 nrx_038,
 nrx_039,
 nrx_040,
 nrx_041,
 nrx_042,
 nrx_043,
 nrx_044,
 nrx_045,
 nrx_046,
 nrx_047,
 nrx_048,
 nrx_049,
 nrx_050,
 nrx_051,
 nrx_052,
 nrx_053,
 nrx_054,
 nrx_055,
 nrx_056,
 nrx_057,
 nrx_058,
 nrx_059,
 nrx_060,
 nrx_061,
 nrx_062,
 nrx_063,
 nrx_064,
 nrx_065,
 nrx_066,
 nrx_067,
 nrx_068,
 nrx_069,
 nrx_070,
 nrx_071,
 nrx_072,
 nrx_073,
 nrx_074,
 nrx_075,
 nrx_076,
 nrx_077,
 nrx_078,
 nrx_079,
 nrx_080,
 nrx_081,
 nrx_082,
 nrx_083,
 nrx_084,
 nrx_085,
 nrx_086,
 nrx_087,
 nrx_088,
 nrx_089,
 nrx_090,
 nrx_091,
 nrx_092,
 nrx_093,
 nrx_094,
 nrx_095,
 nrx_096,
 nrx_097,
 nrx_098,
 nrx_099,
 nrx_100,
 nrx_101,
 nrx_102,
 nrx_103,
 nrx_104,
 nrx_105,
 nrx_106,
 nrx_107,
 nrx_108,
 nrx_109,
 nrx_110,
 nrx_111,
 nrx_112,
 nrx_113,
 nrx_114,
 nrx_115,
 nrx_116,
 nrx_117,
 nrx_118,
 nrx_119,
 nrx_120,
 nrx_121,
 nrx_122,
 nrx_123,
 nrx_124,
 nrx_125,
 nrx_126,
 nrx_127,
 nrx_128,
 nrx_129,
 nrx_130,
 nrx_131,
 nrx_132,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 trx_025,
 trx_026,
 trx_027,
 trx_028,
 trx_029,
 trx_030,
 trx_031,
 trx_032,
 trx_033,
 trx_034,
 trx_035,
 trx_036,
 trx_037,
 trx_038,
 trx_039,
 trx_040,
 trx_041,
 trx_042,
 trx_043,
 trx_044,
 trx_045,
 trx_046,
 trx_047,
 trx_048,
 trx_049,
 trx_050,
 trx_051,
 trx_052,
 trx_053,
 trx_054,
 trx_055,
 trx_056,
 trx_057,
 trx_058,
 trx_059,
 trx_060,
 trx_061,
 trx_062,
 trx_063,
 trx_064,
 trx_065,
 trx_066,
 trx_067,
 trx_068,
 trx_069,
 trx_070,
 trx_071,
 trx_072,
 trx_073,
 trx_074,
 trx_075,
 trx_076,
 trx_077,
 trx_078,
 trx_079,
 trx_080,
 trx_081,
 trx_082,
 trx_083,
 trx_084,
 trx_085,
 trx_086,
 trx_087,
 trx_088,
 trx_089,
 trx_090,
 trx_091,
 trx_092,
 trx_093,
 trx_094,
 trx_095,
 trx_096,
 trx_097,
 trx_098,
 trx_099,
 trx_100,
 trx_101,
 trx_102,
 trx_103,
 trx_104,
 trx_105,
 trx_106,
 trx_107,
 trx_108,
 trx_109,
 trx_110,
 trx_111,
 trx_112,
 trx_113,
 trx_114,
 trx_115,
 trx_116,
 trx_117,
 trx_118,
 trx_119,
 trx_120,
 trx_121,
 trx_122,
 trx_123,
 trx_124,
 trx_125,
 trx_126,
 trx_127,
 trx_128,
 trx_129,
 trx_130,
 trx_131,
 trx_132,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_QTY_W_src.ims_client_num,
        EXT_IMS_MHJ_QTY_W_src.ims_report_num,
        EXT_IMS_MHJ_QTY_W_src.zip_other,
        EXT_IMS_MHJ_QTY_W_src.ims_id,
        EXT_IMS_MHJ_QTY_W_src.specialty,
        EXT_IMS_MHJ_QTY_W_src.plan_id,
        EXT_IMS_MHJ_QTY_W_src.sales_category,
        EXT_IMS_MHJ_QTY_W_src.rx_type,
        EXT_IMS_MHJ_QTY_W_src.ims_product_group_num,
        EXT_IMS_MHJ_QTY_W_src.filler_01,
        EXT_IMS_MHJ_QTY_W_src.me_num,
        EXT_IMS_MHJ_QTY_W_src.last_name,
        EXT_IMS_MHJ_QTY_W_src.first_name,
        EXT_IMS_MHJ_QTY_W_src.middle_name,
        EXT_IMS_MHJ_QTY_W_src.address,
        EXT_IMS_MHJ_QTY_W_src.city,
        EXT_IMS_MHJ_QTY_W_src.state,
        EXT_IMS_MHJ_QTY_W_src.zip,
        EXT_IMS_MHJ_QTY_W_src.supplemental_data,
        EXT_IMS_MHJ_QTY_W_src.plan_name,
        EXT_IMS_MHJ_QTY_W_src.data_date,
        EXT_IMS_MHJ_QTY_W_src.bucket_count,
        EXT_IMS_MHJ_QTY_W_src.nrx_001,
        EXT_IMS_MHJ_QTY_W_src.nrx_002,
        EXT_IMS_MHJ_QTY_W_src.nrx_003,
        EXT_IMS_MHJ_QTY_W_src.nrx_004,
        EXT_IMS_MHJ_QTY_W_src.nrx_005,
        EXT_IMS_MHJ_QTY_W_src.nrx_006,
        EXT_IMS_MHJ_QTY_W_src.nrx_007,
        EXT_IMS_MHJ_QTY_W_src.nrx_008,
        EXT_IMS_MHJ_QTY_W_src.nrx_009,
        EXT_IMS_MHJ_QTY_W_src.nrx_010,
        EXT_IMS_MHJ_QTY_W_src.nrx_011,
        EXT_IMS_MHJ_QTY_W_src.nrx_012,
        EXT_IMS_MHJ_QTY_W_src.nrx_013,
        EXT_IMS_MHJ_QTY_W_src.nrx_014,
        EXT_IMS_MHJ_QTY_W_src.nrx_015,
        EXT_IMS_MHJ_QTY_W_src.nrx_016,
        EXT_IMS_MHJ_QTY_W_src.nrx_017,
        EXT_IMS_MHJ_QTY_W_src.nrx_018,
        EXT_IMS_MHJ_QTY_W_src.nrx_019,
        EXT_IMS_MHJ_QTY_W_src.nrx_020,
        EXT_IMS_MHJ_QTY_W_src.nrx_021,
        EXT_IMS_MHJ_QTY_W_src.nrx_022,
        EXT_IMS_MHJ_QTY_W_src.nrx_023,
        EXT_IMS_MHJ_QTY_W_src.nrx_024,
        EXT_IMS_MHJ_QTY_W_src.nrx_025,
        EXT_IMS_MHJ_QTY_W_src.nrx_026,
        EXT_IMS_MHJ_QTY_W_src.nrx_027,
        EXT_IMS_MHJ_QTY_W_src.nrx_028,
        EXT_IMS_MHJ_QTY_W_src.nrx_029,
        EXT_IMS_MHJ_QTY_W_src.nrx_030,
        EXT_IMS_MHJ_QTY_W_src.nrx_031,
        EXT_IMS_MHJ_QTY_W_src.nrx_032,
        EXT_IMS_MHJ_QTY_W_src.nrx_033,
        EXT_IMS_MHJ_QTY_W_src.nrx_034,
        EXT_IMS_MHJ_QTY_W_src.nrx_035,
        EXT_IMS_MHJ_QTY_W_src.nrx_036,
        EXT_IMS_MHJ_QTY_W_src.nrx_037,
        EXT_IMS_MHJ_QTY_W_src.nrx_038,
        EXT_IMS_MHJ_QTY_W_src.nrx_039,
        EXT_IMS_MHJ_QTY_W_src.nrx_040,
        EXT_IMS_MHJ_QTY_W_src.nrx_041,
        EXT_IMS_MHJ_QTY_W_src.nrx_042,
        EXT_IMS_MHJ_QTY_W_src.nrx_043,
        EXT_IMS_MHJ_QTY_W_src.nrx_044,
        EXT_IMS_MHJ_QTY_W_src.nrx_045,
        EXT_IMS_MHJ_QTY_W_src.nrx_046,
        EXT_IMS_MHJ_QTY_W_src.nrx_047,
        EXT_IMS_MHJ_QTY_W_src.nrx_048,
        EXT_IMS_MHJ_QTY_W_src.nrx_049,
        EXT_IMS_MHJ_QTY_W_src.nrx_050,
        EXT_IMS_MHJ_QTY_W_src.nrx_051,
        EXT_IMS_MHJ_QTY_W_src.nrx_052,
        EXT_IMS_MHJ_QTY_W_src.nrx_053,
        EXT_IMS_MHJ_QTY_W_src.nrx_054,
        EXT_IMS_MHJ_QTY_W_src.nrx_055,
        EXT_IMS_MHJ_QTY_W_src.nrx_056,
        EXT_IMS_MHJ_QTY_W_src.nrx_057,
        EXT_IMS_MHJ_QTY_W_src.nrx_058,
        EXT_IMS_MHJ_QTY_W_src.nrx_059,
        EXT_IMS_MHJ_QTY_W_src.nrx_060,
        EXT_IMS_MHJ_QTY_W_src.nrx_061,
        EXT_IMS_MHJ_QTY_W_src.nrx_062,
        EXT_IMS_MHJ_QTY_W_src.nrx_063,
        EXT_IMS_MHJ_QTY_W_src.nrx_064,
        EXT_IMS_MHJ_QTY_W_src.nrx_065,
        EXT_IMS_MHJ_QTY_W_src.nrx_066,
        EXT_IMS_MHJ_QTY_W_src.nrx_067,
        EXT_IMS_MHJ_QTY_W_src.nrx_068,
        EXT_IMS_MHJ_QTY_W_src.nrx_069,
        EXT_IMS_MHJ_QTY_W_src.nrx_070,
        EXT_IMS_MHJ_QTY_W_src.nrx_071,
        EXT_IMS_MHJ_QTY_W_src.nrx_072,
        EXT_IMS_MHJ_QTY_W_src.nrx_073,
        EXT_IMS_MHJ_QTY_W_src.nrx_074,
        EXT_IMS_MHJ_QTY_W_src.nrx_075,
        EXT_IMS_MHJ_QTY_W_src.nrx_076,
        EXT_IMS_MHJ_QTY_W_src.nrx_077,
        EXT_IMS_MHJ_QTY_W_src.nrx_078,
        EXT_IMS_MHJ_QTY_W_src.nrx_079,
        EXT_IMS_MHJ_QTY_W_src.nrx_080,
        EXT_IMS_MHJ_QTY_W_src.nrx_081,
        EXT_IMS_MHJ_QTY_W_src.nrx_082,
        EXT_IMS_MHJ_QTY_W_src.nrx_083,
        EXT_IMS_MHJ_QTY_W_src.nrx_084,
        EXT_IMS_MHJ_QTY_W_src.nrx_085,
        EXT_IMS_MHJ_QTY_W_src.nrx_086,
        EXT_IMS_MHJ_QTY_W_src.nrx_087,
        EXT_IMS_MHJ_QTY_W_src.nrx_088,
        EXT_IMS_MHJ_QTY_W_src.nrx_089,
        EXT_IMS_MHJ_QTY_W_src.nrx_090,
        EXT_IMS_MHJ_QTY_W_src.nrx_091,
        EXT_IMS_MHJ_QTY_W_src.nrx_092,
        EXT_IMS_MHJ_QTY_W_src.nrx_093,
        EXT_IMS_MHJ_QTY_W_src.nrx_094,
        EXT_IMS_MHJ_QTY_W_src.nrx_095,
        EXT_IMS_MHJ_QTY_W_src.nrx_096,
        EXT_IMS_MHJ_QTY_W_src.nrx_097,
        EXT_IMS_MHJ_QTY_W_src.nrx_098,
        EXT_IMS_MHJ_QTY_W_src.nrx_099,
        EXT_IMS_MHJ_QTY_W_src.nrx_100,
        EXT_IMS_MHJ_QTY_W_src.nrx_101,
        EXT_IMS_MHJ_QTY_W_src.nrx_102,
        EXT_IMS_MHJ_QTY_W_src.nrx_103,
        EXT_IMS_MHJ_QTY_W_src.nrx_104,
        EXT_IMS_MHJ_QTY_W_src.nrx_105,
        EXT_IMS_MHJ_QTY_W_src.nrx_106,
        EXT_IMS_MHJ_QTY_W_src.nrx_107,
        EXT_IMS_MHJ_QTY_W_src.nrx_108,
        EXT_IMS_MHJ_QTY_W_src.nrx_109,
        EXT_IMS_MHJ_QTY_W_src.nrx_110,
        EXT_IMS_MHJ_QTY_W_src.nrx_111,
        EXT_IMS_MHJ_QTY_W_src.nrx_112,
        EXT_IMS_MHJ_QTY_W_src.nrx_113,
        EXT_IMS_MHJ_QTY_W_src.nrx_114,
        EXT_IMS_MHJ_QTY_W_src.nrx_115,
        EXT_IMS_MHJ_QTY_W_src.nrx_116,
        EXT_IMS_MHJ_QTY_W_src.nrx_117,
        EXT_IMS_MHJ_QTY_W_src.nrx_118,
        EXT_IMS_MHJ_QTY_W_src.nrx_119,
        EXT_IMS_MHJ_QTY_W_src.nrx_120,
        EXT_IMS_MHJ_QTY_W_src.nrx_121,
        EXT_IMS_MHJ_QTY_W_src.nrx_122,
        EXT_IMS_MHJ_QTY_W_src.nrx_123,
        EXT_IMS_MHJ_QTY_W_src.nrx_124,
        EXT_IMS_MHJ_QTY_W_src.nrx_125,
        EXT_IMS_MHJ_QTY_W_src.nrx_126,
        EXT_IMS_MHJ_QTY_W_src.nrx_127,
        EXT_IMS_MHJ_QTY_W_src.nrx_128,
        EXT_IMS_MHJ_QTY_W_src.nrx_129,
        EXT_IMS_MHJ_QTY_W_src.nrx_130,
        EXT_IMS_MHJ_QTY_W_src.nrx_131,
        EXT_IMS_MHJ_QTY_W_src.nrx_132,
        EXT_IMS_MHJ_QTY_W_src.trx_001,
        EXT_IMS_MHJ_QTY_W_src.trx_002,
        EXT_IMS_MHJ_QTY_W_src.trx_003,
        EXT_IMS_MHJ_QTY_W_src.trx_004,
        EXT_IMS_MHJ_QTY_W_src.trx_005,
        EXT_IMS_MHJ_QTY_W_src.trx_006,
        EXT_IMS_MHJ_QTY_W_src.trx_007,
        EXT_IMS_MHJ_QTY_W_src.trx_008,
        EXT_IMS_MHJ_QTY_W_src.trx_009,
        EXT_IMS_MHJ_QTY_W_src.trx_010,
        EXT_IMS_MHJ_QTY_W_src.trx_011,
        EXT_IMS_MHJ_QTY_W_src.trx_012,
        EXT_IMS_MHJ_QTY_W_src.trx_013,
        EXT_IMS_MHJ_QTY_W_src.trx_014,
        EXT_IMS_MHJ_QTY_W_src.trx_015,
        EXT_IMS_MHJ_QTY_W_src.trx_016,
        EXT_IMS_MHJ_QTY_W_src.trx_017,
        EXT_IMS_MHJ_QTY_W_src.trx_018,
        EXT_IMS_MHJ_QTY_W_src.trx_019,
        EXT_IMS_MHJ_QTY_W_src.trx_020,
        EXT_IMS_MHJ_QTY_W_src.trx_021,
        EXT_IMS_MHJ_QTY_W_src.trx_022,
        EXT_IMS_MHJ_QTY_W_src.trx_023,
        EXT_IMS_MHJ_QTY_W_src.trx_024,
        EXT_IMS_MHJ_QTY_W_src.trx_025,
        EXT_IMS_MHJ_QTY_W_src.trx_026,
        EXT_IMS_MHJ_QTY_W_src.trx_027,
        EXT_IMS_MHJ_QTY_W_src.trx_028,
        EXT_IMS_MHJ_QTY_W_src.trx_029,
        EXT_IMS_MHJ_QTY_W_src.trx_030,
        EXT_IMS_MHJ_QTY_W_src.trx_031,
        EXT_IMS_MHJ_QTY_W_src.trx_032,
        EXT_IMS_MHJ_QTY_W_src.trx_033,
        EXT_IMS_MHJ_QTY_W_src.trx_034,
        EXT_IMS_MHJ_QTY_W_src.trx_035,
        EXT_IMS_MHJ_QTY_W_src.trx_036,
        EXT_IMS_MHJ_QTY_W_src.trx_037,
        EXT_IMS_MHJ_QTY_W_src.trx_038,
        EXT_IMS_MHJ_QTY_W_src.trx_039,
        EXT_IMS_MHJ_QTY_W_src.trx_040,
        EXT_IMS_MHJ_QTY_W_src.trx_041,
        EXT_IMS_MHJ_QTY_W_src.trx_042,
        EXT_IMS_MHJ_QTY_W_src.trx_043,
        EXT_IMS_MHJ_QTY_W_src.trx_044,
        EXT_IMS_MHJ_QTY_W_src.trx_045,
        EXT_IMS_MHJ_QTY_W_src.trx_046,
        EXT_IMS_MHJ_QTY_W_src.trx_047,
        EXT_IMS_MHJ_QTY_W_src.trx_048,
        EXT_IMS_MHJ_QTY_W_src.trx_049,
        EXT_IMS_MHJ_QTY_W_src.trx_050,
        EXT_IMS_MHJ_QTY_W_src.trx_051,
        EXT_IMS_MHJ_QTY_W_src.trx_052,
        EXT_IMS_MHJ_QTY_W_src.trx_053,
        EXT_IMS_MHJ_QTY_W_src.trx_054,
        EXT_IMS_MHJ_QTY_W_src.trx_055,
        EXT_IMS_MHJ_QTY_W_src.trx_056,
        EXT_IMS_MHJ_QTY_W_src.trx_057,
        EXT_IMS_MHJ_QTY_W_src.trx_058,
        EXT_IMS_MHJ_QTY_W_src.trx_059,
        EXT_IMS_MHJ_QTY_W_src.trx_060,
        EXT_IMS_MHJ_QTY_W_src.trx_061,
        EXT_IMS_MHJ_QTY_W_src.trx_062,
        EXT_IMS_MHJ_QTY_W_src.trx_063,
        EXT_IMS_MHJ_QTY_W_src.trx_064,
        EXT_IMS_MHJ_QTY_W_src.trx_065,
        EXT_IMS_MHJ_QTY_W_src.trx_066,
        EXT_IMS_MHJ_QTY_W_src.trx_067,
        EXT_IMS_MHJ_QTY_W_src.trx_068,
        EXT_IMS_MHJ_QTY_W_src.trx_069,
        EXT_IMS_MHJ_QTY_W_src.trx_070,
        EXT_IMS_MHJ_QTY_W_src.trx_071,
        EXT_IMS_MHJ_QTY_W_src.trx_072,
        EXT_IMS_MHJ_QTY_W_src.trx_073,
        EXT_IMS_MHJ_QTY_W_src.trx_074,
        EXT_IMS_MHJ_QTY_W_src.trx_075,
        EXT_IMS_MHJ_QTY_W_src.trx_076,
        EXT_IMS_MHJ_QTY_W_src.trx_077,
        EXT_IMS_MHJ_QTY_W_src.trx_078,
        EXT_IMS_MHJ_QTY_W_src.trx_079,
        EXT_IMS_MHJ_QTY_W_src.trx_080,
        EXT_IMS_MHJ_QTY_W_src.trx_081,
        EXT_IMS_MHJ_QTY_W_src.trx_082,
        EXT_IMS_MHJ_QTY_W_src.trx_083,
        EXT_IMS_MHJ_QTY_W_src.trx_084,
        EXT_IMS_MHJ_QTY_W_src.trx_085,
        EXT_IMS_MHJ_QTY_W_src.trx_086,
        EXT_IMS_MHJ_QTY_W_src.trx_087,
        EXT_IMS_MHJ_QTY_W_src.trx_088,
        EXT_IMS_MHJ_QTY_W_src.trx_089,
        EXT_IMS_MHJ_QTY_W_src.trx_090,
        EXT_IMS_MHJ_QTY_W_src.trx_091,
        EXT_IMS_MHJ_QTY_W_src.trx_092,
        EXT_IMS_MHJ_QTY_W_src.trx_093,
        EXT_IMS_MHJ_QTY_W_src.trx_094,
        EXT_IMS_MHJ_QTY_W_src.trx_095,
        EXT_IMS_MHJ_QTY_W_src.trx_096,
        EXT_IMS_MHJ_QTY_W_src.trx_097,
        EXT_IMS_MHJ_QTY_W_src.trx_098,
        EXT_IMS_MHJ_QTY_W_src.trx_099,
        EXT_IMS_MHJ_QTY_W_src.trx_100,
        EXT_IMS_MHJ_QTY_W_src.trx_101,
        EXT_IMS_MHJ_QTY_W_src.trx_102,
        EXT_IMS_MHJ_QTY_W_src.trx_103,
        EXT_IMS_MHJ_QTY_W_src.trx_104,
        EXT_IMS_MHJ_QTY_W_src.trx_105,
        EXT_IMS_MHJ_QTY_W_src.trx_106,
        EXT_IMS_MHJ_QTY_W_src.trx_107,
        EXT_IMS_MHJ_QTY_W_src.trx_108,
        EXT_IMS_MHJ_QTY_W_src.trx_109,
        EXT_IMS_MHJ_QTY_W_src.trx_110,
        EXT_IMS_MHJ_QTY_W_src.trx_111,
        EXT_IMS_MHJ_QTY_W_src.trx_112,
        EXT_IMS_MHJ_QTY_W_src.trx_113,
        EXT_IMS_MHJ_QTY_W_src.trx_114,
        EXT_IMS_MHJ_QTY_W_src.trx_115,
        EXT_IMS_MHJ_QTY_W_src.trx_116,
        EXT_IMS_MHJ_QTY_W_src.trx_117,
        EXT_IMS_MHJ_QTY_W_src.trx_118,
        EXT_IMS_MHJ_QTY_W_src.trx_119,
        EXT_IMS_MHJ_QTY_W_src.trx_120,
        EXT_IMS_MHJ_QTY_W_src.trx_121,
        EXT_IMS_MHJ_QTY_W_src.trx_122,
        EXT_IMS_MHJ_QTY_W_src.trx_123,
        EXT_IMS_MHJ_QTY_W_src.trx_124,
        EXT_IMS_MHJ_QTY_W_src.trx_125,
        EXT_IMS_MHJ_QTY_W_src.trx_126,
        EXT_IMS_MHJ_QTY_W_src.trx_127,
        EXT_IMS_MHJ_QTY_W_src.trx_128,
        EXT_IMS_MHJ_QTY_W_src.trx_129,
        EXT_IMS_MHJ_QTY_W_src.trx_130,
        EXT_IMS_MHJ_QTY_W_src.trx_131,
        EXT_IMS_MHJ_QTY_W_src.trx_132,
        EXT_IMS_MHJ_QTY_W_src.batch_id,
        EXT_IMS_MHJ_QTY_W_src.row_id,
        EXT_IMS_MHJ_QTY_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_W_src
 ORDER BY EXT_IMS_MHJ_QTY_W_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_QTY_W_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.XX_SALES_MV_src_super_b0 /*+basename(XX_SALES_MV_src_super)*/ 
(
 FILE_NBR,
 NAME,
 JOB_TITLE,
 COST_CENTER_NAME,
 DEPARTMENT,
 JOB_ENTRY_DT,
 MANAGER_LEVEL,
 EE_STATUS,
 WORK_LOCATION,
 WORK_LOCATION_NAME,
 ORIG_HIRE_DT,
 SERVICE_DT,
 REHIRE_DT,
 TERMINATION_DT,
 DIRECT_MANAGER,
 HOME_ADDRESS_LINE1,
 HOME_ADDRESS_LINE2,
 HOME_CITY,
 HOME_STATE,
 HOME_POSTAL_CODE,
 HOME_PHONE,
 CELL_PHONE,
 EMAIL_ADDRESS,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT XX_SALES_MV_src.FILE_NBR,
        XX_SALES_MV_src.NAME,
        XX_SALES_MV_src.JOB_TITLE,
        XX_SALES_MV_src.COST_CENTER_NAME,
        XX_SALES_MV_src.DEPARTMENT,
        XX_SALES_MV_src.JOB_ENTRY_DT,
        XX_SALES_MV_src.MANAGER_LEVEL,
        XX_SALES_MV_src.EE_STATUS,
        XX_SALES_MV_src.WORK_LOCATION,
        XX_SALES_MV_src.WORK_LOCATION_NAME,
        XX_SALES_MV_src.ORIG_HIRE_DT,
        XX_SALES_MV_src.SERVICE_DT,
        XX_SALES_MV_src.REHIRE_DT,
        XX_SALES_MV_src.TERMINATION_DT,
        XX_SALES_MV_src.DIRECT_MANAGER,
        XX_SALES_MV_src.HOME_ADDRESS_LINE1,
        XX_SALES_MV_src.HOME_ADDRESS_LINE2,
        XX_SALES_MV_src.HOME_CITY,
        XX_SALES_MV_src.HOME_STATE,
        XX_SALES_MV_src.HOME_POSTAL_CODE,
        XX_SALES_MV_src.HOME_PHONE,
        XX_SALES_MV_src.CELL_PHONE,
        XX_SALES_MV_src.EMAIL_ADDRESS,
        XX_SALES_MV_src.batch_id,
        XX_SALES_MV_src.row_id,
        XX_SALES_MV_src.update_ts
 FROM teva_ingestion.XX_SALES_MV_src
 ORDER BY XX_SALES_MV_src.batch_id
SEGMENTED BY hash(XX_SALES_MV_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_ACCOUNTS_src_super_b0 /*+basename(EXT_FTF_ACCOUNTS_src_super)*/ 
(
 ID,
 PROVIDER_ID,
 SITE_ID,
 FIRST_NAME,
 LAST_NAME,
 TITLE,
 ADDRESS_LINE_1,
 ADDRESS_LINE_2,
 CITY,
 STATE,
 POSTAL_CODE,
 PHONE_1,
 PHONE_2,
 PHONE_MOBILE,
 PHONE_FAX,
 EMAIL,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_ACCOUNTS_src.ID,
        EXT_FTF_ACCOUNTS_src.PROVIDER_ID,
        EXT_FTF_ACCOUNTS_src.SITE_ID,
        EXT_FTF_ACCOUNTS_src.FIRST_NAME,
        EXT_FTF_ACCOUNTS_src.LAST_NAME,
        EXT_FTF_ACCOUNTS_src.TITLE,
        EXT_FTF_ACCOUNTS_src.ADDRESS_LINE_1,
        EXT_FTF_ACCOUNTS_src.ADDRESS_LINE_2,
        EXT_FTF_ACCOUNTS_src.CITY,
        EXT_FTF_ACCOUNTS_src.STATE,
        EXT_FTF_ACCOUNTS_src.POSTAL_CODE,
        EXT_FTF_ACCOUNTS_src.PHONE_1,
        EXT_FTF_ACCOUNTS_src.PHONE_2,
        EXT_FTF_ACCOUNTS_src.PHONE_MOBILE,
        EXT_FTF_ACCOUNTS_src.PHONE_FAX,
        EXT_FTF_ACCOUNTS_src.EMAIL,
        EXT_FTF_ACCOUNTS_src.batch_id,
        EXT_FTF_ACCOUNTS_src.row_id,
        EXT_FTF_ACCOUNTS_src.update_ts
 FROM teva_ingestion.EXT_FTF_ACCOUNTS_src
 ORDER BY EXT_FTF_ACCOUNTS_src.batch_id
SEGMENTED BY hash(EXT_FTF_ACCOUNTS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_CONTROL_src_super_b0 /*+basename(EXT_FTF_CONTROL_src_super)*/ 
(
 FILE_NAME,
 RECORDS,
 CREATED_AT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_CONTROL_src.FILE_NAME,
        EXT_FTF_CONTROL_src.RECORDS,
        EXT_FTF_CONTROL_src.CREATED_AT,
        EXT_FTF_CONTROL_src.batch_id,
        EXT_FTF_CONTROL_src.row_id,
        EXT_FTF_CONTROL_src.update_ts
 FROM teva_ingestion.EXT_FTF_CONTROL_src
 ORDER BY EXT_FTF_CONTROL_src.batch_id
SEGMENTED BY hash(EXT_FTF_CONTROL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_COPAYS_src_super_b0 /*+basename(EXT_FTF_COPAYS_src_super)*/ 
(
 HEALTH_PLAN_ID,
 TIER,
 RETAIL_COPAY,
 RETAIL_COINSURANCE,
 MAIL_ORDER_COPAY,
 MAIL_ORDER_COINSURANCE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_COPAYS_src.HEALTH_PLAN_ID,
        EXT_FTF_COPAYS_src.TIER,
        EXT_FTF_COPAYS_src.RETAIL_COPAY,
        EXT_FTF_COPAYS_src.RETAIL_COINSURANCE,
        EXT_FTF_COPAYS_src.MAIL_ORDER_COPAY,
        EXT_FTF_COPAYS_src.MAIL_ORDER_COINSURANCE,
        EXT_FTF_COPAYS_src.batch_id,
        EXT_FTF_COPAYS_src.row_id,
        EXT_FTF_COPAYS_src.update_ts
 FROM teva_ingestion.EXT_FTF_COPAYS_src
 ORDER BY EXT_FTF_COPAYS_src.batch_id
SEGMENTED BY hash(EXT_FTF_COPAYS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_DRUGS_src_super_b0 /*+basename(EXT_FTF_DRUGS_src_super)*/ 
(
 DRUG_CLASS_ID,
 DRUG_CLASS,
 DRUG_ID,
 DRUG,
 GENERIC,
 MANUFACTURER,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_DRUGS_src.DRUG_CLASS_ID,
        EXT_FTF_DRUGS_src.DRUG_CLASS,
        EXT_FTF_DRUGS_src.DRUG_ID,
        EXT_FTF_DRUGS_src.DRUG,
        EXT_FTF_DRUGS_src.GENERIC,
        EXT_FTF_DRUGS_src.MANUFACTURER,
        EXT_FTF_DRUGS_src.batch_id,
        EXT_FTF_DRUGS_src.row_id,
        EXT_FTF_DRUGS_src.update_ts
 FROM teva_ingestion.EXT_FTF_DRUGS_src
 ORDER BY EXT_FTF_DRUGS_src.batch_id
SEGMENTED BY hash(EXT_FTF_DRUGS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_DRUG_CLASS_THRPTC_AREA_src_super_b0 /*+basename(EXT_FTF_DRUG_CLASS_THRPTC_AREA_src_super)*/ 
(
 DRUG_CLASS_ID,
 THERAPEUTIC_AREA_ID,
 THERAPEUTIC_AREA,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.DRUG_CLASS_ID,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.THERAPEUTIC_AREA_ID,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.THERAPEUTIC_AREA,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.batch_id,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.row_id,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.update_ts
 FROM teva_ingestion.EXT_FTF_DRUG_CLASS_THRPTC_AREA_src
 ORDER BY EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.batch_id
SEGMENTED BY hash(EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_FORMULARIES_src_super_b0 /*+basename(EXT_FTF_FORMULARIES_src_super)*/ 
(
 HEALTH_PLAN_ID,
 DRUG_ID,
 TIER_CODE,
 RESTRICTIONS,
 REASON_CODE,
 REASON_CODE_DESCRIPTION,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts,
 pharmacy_status,
 market_access_coverage
)
AS
 SELECT EXT_FTF_FORMULARIES_src.HEALTH_PLAN_ID,
        EXT_FTF_FORMULARIES_src.DRUG_ID,
        EXT_FTF_FORMULARIES_src.TIER_CODE,
        EXT_FTF_FORMULARIES_src.RESTRICTIONS,
        EXT_FTF_FORMULARIES_src.REASON_CODE,
        EXT_FTF_FORMULARIES_src.REASON_CODE_DESCRIPTION,
        EXT_FTF_FORMULARIES_src.batch_id,
        EXT_FTF_FORMULARIES_src.row_id,
        EXT_FTF_FORMULARIES_src.update_ts,
        EXT_FTF_FORMULARIES_src.pharmacy_status,
        EXT_FTF_FORMULARIES_src.market_access_coverage
 FROM teva_ingestion.EXT_FTF_FORMULARIES_src
 ORDER BY EXT_FTF_FORMULARIES_src.batch_id
SEGMENTED BY hash(EXT_FTF_FORMULARIES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_HEALTH_PLANS_src_super_b0 /*+basename(EXT_FTF_HEALTH_PLANS_src_super)*/ 
(
 FORMULARYF_ID,
 PROVIDER_ID,
 PROVIDER,
 HEALTH_PLAN_ID,
 HEALTH_PLAN,
 PARENT_ID,
 PARENT,
 NATIONAL_LIVES_COUNT,
 PLAN_TYPE_NAME,
 PREFERRED_BRAND_TIER,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_HEALTH_PLANS_src.FORMULARYF_ID,
        EXT_FTF_HEALTH_PLANS_src.PROVIDER_ID,
        EXT_FTF_HEALTH_PLANS_src.PROVIDER,
        EXT_FTF_HEALTH_PLANS_src.HEALTH_PLAN_ID,
        EXT_FTF_HEALTH_PLANS_src.HEALTH_PLAN,
        EXT_FTF_HEALTH_PLANS_src.PARENT_ID,
        EXT_FTF_HEALTH_PLANS_src.PARENT,
        EXT_FTF_HEALTH_PLANS_src.NATIONAL_LIVES_COUNT,
        EXT_FTF_HEALTH_PLANS_src.PLAN_TYPE_NAME,
        EXT_FTF_HEALTH_PLANS_src.PREFERRED_BRAND_TIER,
        EXT_FTF_HEALTH_PLANS_src.batch_id,
        EXT_FTF_HEALTH_PLANS_src.row_id,
        EXT_FTF_HEALTH_PLANS_src.update_ts
 FROM teva_ingestion.EXT_FTF_HEALTH_PLANS_src
 ORDER BY EXT_FTF_HEALTH_PLANS_src.batch_id
SEGMENTED BY hash(EXT_FTF_HEALTH_PLANS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src_super_b0 /*+basename(EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src_super)*/ 
(
 HEALTH_PLAN_ID,
 OPERATING_STATE,
 LIVES_COVERAGE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.HEALTH_PLAN_ID,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.OPERATING_STATE,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.LIVES_COVERAGE,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.batch_id,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.row_id,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.update_ts
 FROM teva_ingestion.EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src
 ORDER BY EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.batch_id
SEGMENTED BY hash(EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_IMS_BRIDGE_src_super_b0 /*+basename(EXT_FTF_IMS_BRIDGE_src_super)*/ 
(
 PAYER_NAME,
 CODE,
 NAME,
 STATE,
 COMMENTS,
 PLAN_ID,
 PLAN_NAME,
 PROVIDER_NAME,
 PLAN_TYPE_NAME,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_IMS_BRIDGE_src.PAYER_NAME,
        EXT_FTF_IMS_BRIDGE_src.CODE,
        EXT_FTF_IMS_BRIDGE_src.NAME,
        EXT_FTF_IMS_BRIDGE_src.STATE,
        EXT_FTF_IMS_BRIDGE_src.COMMENTS,
        EXT_FTF_IMS_BRIDGE_src.PLAN_ID,
        EXT_FTF_IMS_BRIDGE_src.PLAN_NAME,
        EXT_FTF_IMS_BRIDGE_src.PROVIDER_NAME,
        EXT_FTF_IMS_BRIDGE_src.PLAN_TYPE_NAME,
        EXT_FTF_IMS_BRIDGE_src.batch_id,
        EXT_FTF_IMS_BRIDGE_src.row_id,
        EXT_FTF_IMS_BRIDGE_src.update_ts
 FROM teva_ingestion.EXT_FTF_IMS_BRIDGE_src
 ORDER BY EXT_FTF_IMS_BRIDGE_src.batch_id
SEGMENTED BY hash(EXT_FTF_IMS_BRIDGE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_PBMS_src_super_b0 /*+basename(EXT_FTF_PBMS_src_super)*/ 
(
 HEALTH_PLAN_ID,
 PBM_ID,
 PBM,
 PBM_FUNCTION_ID,
 PBM_FUNCTION,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_PBMS_src.HEALTH_PLAN_ID,
        EXT_FTF_PBMS_src.PBM_ID,
        EXT_FTF_PBMS_src.PBM,
        EXT_FTF_PBMS_src.PBM_FUNCTION_ID,
        EXT_FTF_PBMS_src.PBM_FUNCTION,
        EXT_FTF_PBMS_src.batch_id,
        EXT_FTF_PBMS_src.row_id,
        EXT_FTF_PBMS_src.update_ts
 FROM teva_ingestion.EXT_FTF_PBMS_src
 ORDER BY EXT_FTF_PBMS_src.batch_id
SEGMENTED BY hash(EXT_FTF_PBMS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_RESTRICTIONS_src_super_b0 /*+basename(EXT_FTF_RESTRICTIONS_src_super)*/ 
(
 HEALTH_PLAN_ID,
 DRUG_ID,
 RESTRICTION_DETAIL_ID,
 RESTRICTION_CODE,
 FORMULARY_ENTRY_RESTRICTION_ID,
 RESTRICTION_DETAIL_TEXT,
 RESTRICTION_ADDTNL_INFORMATION_1,
 RESTRICTION_ADDTNL_INFORMATION_2,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_RESTRICTIONS_src.HEALTH_PLAN_ID,
        EXT_FTF_RESTRICTIONS_src.DRUG_ID,
        EXT_FTF_RESTRICTIONS_src.RESTRICTION_DETAIL_ID,
        EXT_FTF_RESTRICTIONS_src.RESTRICTION_CODE,
        EXT_FTF_RESTRICTIONS_src.FORMULARY_ENTRY_RESTRICTION_ID,
        EXT_FTF_RESTRICTIONS_src.RESTRICTION_DETAIL_TEXT,
        EXT_FTF_RESTRICTIONS_src.RESTRICTION_ADDTNL_INFORMATION_1,
        EXT_FTF_RESTRICTIONS_src.RESTRICTION_ADDTNL_INFORMATION_2,
        EXT_FTF_RESTRICTIONS_src.batch_id,
        EXT_FTF_RESTRICTIONS_src.row_id,
        EXT_FTF_RESTRICTIONS_src.update_ts
 FROM teva_ingestion.EXT_FTF_RESTRICTIONS_src
 ORDER BY EXT_FTF_RESTRICTIONS_src.batch_id
SEGMENTED BY hash(EXT_FTF_RESTRICTIONS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_TEVA_WK_BRIDGE_src_super_b0 /*+basename(EXT_FTF_TEVA_WK_BRIDGE_src_super)*/ 
(
 NAME,
 AMC_NUMBER,
 PBM_AMC_NUMBER,
 PLAN_TYPE_CODE,
 ZIP_CODE,
 COMMENTS,
 FF_PLAN_ID,
 FF_PLAN_NAME,
 FF_PROVIDER_NAME,
 FF_PLAN_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_TEVA_WK_BRIDGE_src.NAME,
        EXT_FTF_TEVA_WK_BRIDGE_src.AMC_NUMBER,
        EXT_FTF_TEVA_WK_BRIDGE_src.PBM_AMC_NUMBER,
        EXT_FTF_TEVA_WK_BRIDGE_src.PLAN_TYPE_CODE,
        EXT_FTF_TEVA_WK_BRIDGE_src.ZIP_CODE,
        EXT_FTF_TEVA_WK_BRIDGE_src.COMMENTS,
        EXT_FTF_TEVA_WK_BRIDGE_src.FF_PLAN_ID,
        EXT_FTF_TEVA_WK_BRIDGE_src.FF_PLAN_NAME,
        EXT_FTF_TEVA_WK_BRIDGE_src.FF_PROVIDER_NAME,
        EXT_FTF_TEVA_WK_BRIDGE_src.FF_PLAN_TYPE,
        EXT_FTF_TEVA_WK_BRIDGE_src.batch_id,
        EXT_FTF_TEVA_WK_BRIDGE_src.row_id,
        EXT_FTF_TEVA_WK_BRIDGE_src.update_ts
 FROM teva_ingestion.EXT_FTF_TEVA_WK_BRIDGE_src
 ORDER BY EXT_FTF_TEVA_WK_BRIDGE_src.batch_id
SEGMENTED BY hash(EXT_FTF_TEVA_WK_BRIDGE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_TIERS_src_super_b0 /*+basename(EXT_FTF_TIERS_src_super)*/ 
(
 ID,
 NAME,
 CODE_NAME,
 EXPLANATION_TEXT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_TIERS_src.ID,
        EXT_FTF_TIERS_src.NAME,
        EXT_FTF_TIERS_src.CODE_NAME,
        EXT_FTF_TIERS_src.EXPLANATION_TEXT,
        EXT_FTF_TIERS_src.batch_id,
        EXT_FTF_TIERS_src.row_id,
        EXT_FTF_TIERS_src.update_ts
 FROM teva_ingestion.EXT_FTF_TIERS_src
 ORDER BY EXT_FTF_TIERS_src.batch_id
SEGMENTED BY hash(EXT_FTF_TIERS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_CALL_DETAIL_GOALS_src_super_b0 /*+basename(EXT_ONC_CALL_DETAIL_GOALS_src_super)*/ 
(
 SALES_FORCE_ID,
 TIME_PERIOD,
 TERRITORY_NUM,
 PRODUCT_NAME,
 P1,
 P2,
 P3,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_CALL_DETAIL_GOALS_src.SALES_FORCE_ID,
        EXT_ONC_CALL_DETAIL_GOALS_src.TIME_PERIOD,
        EXT_ONC_CALL_DETAIL_GOALS_src.TERRITORY_NUM,
        EXT_ONC_CALL_DETAIL_GOALS_src.PRODUCT_NAME,
        EXT_ONC_CALL_DETAIL_GOALS_src.P1,
        EXT_ONC_CALL_DETAIL_GOALS_src.P2,
        EXT_ONC_CALL_DETAIL_GOALS_src.P3,
        EXT_ONC_CALL_DETAIL_GOALS_src.batch_id,
        EXT_ONC_CALL_DETAIL_GOALS_src.row_id,
        EXT_ONC_CALL_DETAIL_GOALS_src.update_ts
 FROM teva_ingestion.EXT_ONC_CALL_DETAIL_GOALS_src
 ORDER BY EXT_ONC_CALL_DETAIL_GOALS_src.batch_id
SEGMENTED BY hash(EXT_ONC_CALL_DETAIL_GOALS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CUSTOMER_FLAGS_src_super_b0 /*+basename(EXT_CUSTOMER_FLAGS_src_super)*/ 
(
 TVCMID,
 PRODUCT_NAME,
 SALES_FORCE_ID,
 TERRITORY_NUMBER,
 FLAG_TYPE,
 FLAG_VALUE,
 EFF_START_DATE,
 EFF_END_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CUSTOMER_FLAGS_src.TVCMID,
        EXT_CUSTOMER_FLAGS_src.PRODUCT_NAME,
        EXT_CUSTOMER_FLAGS_src.SALES_FORCE_ID,
        EXT_CUSTOMER_FLAGS_src.TERRITORY_NUMBER,
        EXT_CUSTOMER_FLAGS_src.FLAG_TYPE,
        EXT_CUSTOMER_FLAGS_src.FLAG_VALUE,
        EXT_CUSTOMER_FLAGS_src.EFF_START_DATE,
        EXT_CUSTOMER_FLAGS_src.EFF_END_DATE,
        EXT_CUSTOMER_FLAGS_src.batch_id,
        EXT_CUSTOMER_FLAGS_src.row_id,
        EXT_CUSTOMER_FLAGS_src.update_ts
 FROM teva_ingestion.EXT_CUSTOMER_FLAGS_src
 ORDER BY EXT_CUSTOMER_FLAGS_src.batch_id
SEGMENTED BY hash(EXT_CUSTOMER_FLAGS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_MCK_src_super_b0 /*+basename(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src_super)*/ 
(
 GROUP_NUMBER,
 GROUP_NAME,
 CLAIM_TYPE,
 RX_NUMBER,
 DATE_OF_FILL,
 CARD_ID_NUMBER,
 PATIENT_AGE,
 PATIENT_GENDER,
 OTHER_COVERAGE,
 NEW_REFILL_CODE,
 REFILLS,
 NDC,
 DRUG_NAME,
 DRUG_DOSAGE_FORM,
 DRUG_STRENGTH,
 PAID_QUANTITY,
 DAYS_SUPPLY,
 INGREDIENT_COST_PAID,
 SALES_TAX_PAID,
 SUBMITTED_COST,
 COPAY_AMOUNT,
 TOTAL_AMOUNT_PAID,
 USUAL_AND_CUSTOMARY,
 CLAIM_NUMBER,
 PHARMACY_NPI,
 PHARMACY_NABP,
 PHARMACY_NAME,
 PHARMACY_ADDRESS1,
 PHARMACY_ADDRESS2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PRESCRIBER_FIRST,
 PRESCRIBER_MIDDLE,
 PRESCRIBER_LAST,
 PRESCRIBER_ADDRESS_1,
 PRESCRIBER_ADDRESS_2,
 PRESCRIBER_CITY,
 PRESCRIBER_STATE,
 PRESCRIBER_ZIP,
 PRESCRIBER_SPECIALTY,
 REDEMPTION,
 MAIL_ORDER_INDICATOR,
 DEA,
 NPI,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.GROUP_NUMBER,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.GROUP_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.CLAIM_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.RX_NUMBER,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DATE_OF_FILL,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.CARD_ID_NUMBER,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PATIENT_AGE,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PATIENT_GENDER,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.OTHER_COVERAGE,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.NEW_REFILL_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.REFILLS,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.NDC,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DRUG_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DRUG_DOSAGE_FORM,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DRUG_STRENGTH,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PAID_QUANTITY,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DAYS_SUPPLY,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.INGREDIENT_COST_PAID,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.SALES_TAX_PAID,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.SUBMITTED_COST,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.COPAY_AMOUNT,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.TOTAL_AMOUNT_PAID,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.USUAL_AND_CUSTOMARY,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.CLAIM_NUMBER,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_NABP,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_ADDRESS1,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_ADDRESS2,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_FIRST,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_MIDDLE,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_LAST,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_ADDRESS_1,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_ADDRESS_2,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_SPECIALTY,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.REDEMPTION,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.MAIL_ORDER_INDICATOR,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DEA,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_MCK_src
 ORDER BY EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src_super_b0 /*+basename(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src_super)*/ 
(
 GROUP_NUMBER,
 GROUP_NAME,
 CLAIM_TYPE,
 RX_NUMBER,
 DATE_OF_FILL,
 CARD_ID_NUMBER,
 PATIENT_AGE,
 PATIENT_GENDER,
 OTHER_COVERAGE,
 NEW_REFILL_CODE,
 REFILLS,
 NDC,
 DRUG_NAME,
 DRUG_DOSAGE_FORM,
 DRUG_STRENGTH,
 PAID_QUANTITY,
 DAYS_SUPPLY,
 INGREDIENT_COST_PAID,
 SALES_TAX_PAID,
 SUBMITTED_COST,
 COPAY_AMOUNT,
 TOTAL_AMOUNT_PAID,
 USUAL_AND_CUSTOMARY,
 CLAIM_NUMBER,
 PHARMACY_NPI,
 PHARMACY_NABP,
 PHARMACY_NAME,
 PHARMACY_ADDRESS1,
 PHARMACY_ADDRESS2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PRESCRIBER_FIRST,
 PRESCRIBER_MIDDLE,
 PRESCRIBER_LAST,
 PRESCRIBER_ADDRESS_1,
 PRESCRIBER_ADDRESS_2,
 PRESCRIBER_CITY,
 PRESCRIBER_STATE,
 PRESCRIBER_ZIP,
 PRESCRIBER_SPECIALTY,
 REDEMPTION,
 MAIL_ORDER_INDICATOR,
 DEA,
 NPI,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.GROUP_NUMBER,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.GROUP_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.CLAIM_TYPE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.RX_NUMBER,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DATE_OF_FILL,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.CARD_ID_NUMBER,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PATIENT_AGE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PATIENT_GENDER,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.OTHER_COVERAGE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.NEW_REFILL_CODE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.REFILLS,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.NDC,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DRUG_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DRUG_DOSAGE_FORM,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DRUG_STRENGTH,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PAID_QUANTITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DAYS_SUPPLY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.INGREDIENT_COST_PAID,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.SALES_TAX_PAID,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.SUBMITTED_COST,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.COPAY_AMOUNT,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.TOTAL_AMOUNT_PAID,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.USUAL_AND_CUSTOMARY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.CLAIM_NUMBER,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_NPI,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_NABP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_NAME,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_ADDRESS1,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_ADDRESS2,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_CITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_STATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_ZIP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_FIRST,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_MIDDLE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_LAST,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_ADDRESS_1,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_ADDRESS_2,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_CITY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_STATE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_ZIP,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_SPECIALTY,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.REDEMPTION,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.MAIL_ORDER_INDICATOR,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DEA,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.NPI,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.batch_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.row_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.update_ts
 FROM teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src
 ORDER BY EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.batch_id
SEGMENTED BY hash(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_I3_BY_STRENGTH_RX_src_super_b0 /*+basename(EXT_I3_BY_STRENGTH_RX_src_super)*/ 
(
 SHIP_DATE,
 FULL_NAME,
 SPECIALTY,
 RANK,
 TOTAL,
 AUBAGIO_14,
 AUBAGIO_7,
 AVONEX_30,
 AVONEX_PACK,
 AVONEX_PEN_PACK,
 BETASERON,
 COPAXONE_20,
 COPAXONE_40,
 GILENYA_0_5,
 GLATOPA_20,
 LEMTRADA,
 PLEGRIDY_PFS,
 PLEGRIDY_PEN,
 REBIF_22_REBIDOSE,
 REBIF_22,
 REBIF_44,
 REBIF_44_REBIDOSE,
 REBIF_PACK,
 REBIF_PACK_REBIDOSE,
 TECFIDERA_120,
 TECFIDERA_240,
 TECFIDERA_STARTER_PACK,
 TYSABRI,
 MD_ADDR1,
 MD_ADDR2,
 MD_CITY,
 MD_STATE,
 MD_ZIP,
 PRESCRIBER_NPI,
 DNC_FLAG,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_I3_BY_STRENGTH_RX_src.SHIP_DATE,
        EXT_I3_BY_STRENGTH_RX_src.FULL_NAME,
        EXT_I3_BY_STRENGTH_RX_src.SPECIALTY,
        EXT_I3_BY_STRENGTH_RX_src.RANK,
        EXT_I3_BY_STRENGTH_RX_src.TOTAL,
        EXT_I3_BY_STRENGTH_RX_src.AUBAGIO_14,
        EXT_I3_BY_STRENGTH_RX_src.AUBAGIO_7,
        EXT_I3_BY_STRENGTH_RX_src.AVONEX_30,
        EXT_I3_BY_STRENGTH_RX_src.AVONEX_PACK,
        EXT_I3_BY_STRENGTH_RX_src.AVONEX_PEN_PACK,
        EXT_I3_BY_STRENGTH_RX_src.BETASERON,
        EXT_I3_BY_STRENGTH_RX_src.COPAXONE_20,
        EXT_I3_BY_STRENGTH_RX_src.COPAXONE_40,
        EXT_I3_BY_STRENGTH_RX_src.GILENYA_0_5,
        EXT_I3_BY_STRENGTH_RX_src.GLATOPA_20,
        EXT_I3_BY_STRENGTH_RX_src.LEMTRADA,
        EXT_I3_BY_STRENGTH_RX_src.PLEGRIDY_PFS,
        EXT_I3_BY_STRENGTH_RX_src.PLEGRIDY_PEN,
        EXT_I3_BY_STRENGTH_RX_src.REBIF_22_REBIDOSE,
        EXT_I3_BY_STRENGTH_RX_src.REBIF_22,
        EXT_I3_BY_STRENGTH_RX_src.REBIF_44,
        EXT_I3_BY_STRENGTH_RX_src.REBIF_44_REBIDOSE,
        EXT_I3_BY_STRENGTH_RX_src.REBIF_PACK,
        EXT_I3_BY_STRENGTH_RX_src.REBIF_PACK_REBIDOSE,
        EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_120,
        EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_240,
        EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_STARTER_PACK,
        EXT_I3_BY_STRENGTH_RX_src.TYSABRI,
        EXT_I3_BY_STRENGTH_RX_src.MD_ADDR1,
        EXT_I3_BY_STRENGTH_RX_src.MD_ADDR2,
        EXT_I3_BY_STRENGTH_RX_src.MD_CITY,
        EXT_I3_BY_STRENGTH_RX_src.MD_STATE,
        EXT_I3_BY_STRENGTH_RX_src.MD_ZIP,
        EXT_I3_BY_STRENGTH_RX_src.PRESCRIBER_NPI,
        EXT_I3_BY_STRENGTH_RX_src.DNC_FLAG,
        EXT_I3_BY_STRENGTH_RX_src.batch_id,
        EXT_I3_BY_STRENGTH_RX_src.row_id,
        EXT_I3_BY_STRENGTH_RX_src.update_ts
 FROM teva_ingestion.EXT_I3_BY_STRENGTH_RX_src
 ORDER BY EXT_I3_BY_STRENGTH_RX_src.batch_id
SEGMENTED BY hash(EXT_I3_BY_STRENGTH_RX_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_KNIPPER_SAMPLES_src_super_b0 /*+basename(EXT_KNIPPER_SAMPLES_src_super)*/ 
(
 TVCMID,
 HCP_VEEVA_ID,
 HCP_FIRST_NAME,
 HCP_MIDDLE_NAME,
 HCP_LAST_NAME,
 HCP_DESIGNATION,
 HCP_STATE_LICENSE_NUMBER,
 HCP_ADDRESS1,
 HCP_ADDRESS2,
 HCP_ADDRESS3,
 HCP_CITY,
 HCP_STATE,
 HCP_ZIP,
 DEA_LICENSE_NUMBER,
 ORDER_SOURCE_ORDER_ID,
 NDC,
 QUANTITY,
 ORDER_SOURCE_JOB_CODE,
 ORDER_SOURCE_JOB_CODE_DESCRIPTION,
 SHIP_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_KNIPPER_SAMPLES_src.TVCMID,
        EXT_KNIPPER_SAMPLES_src.HCP_VEEVA_ID,
        EXT_KNIPPER_SAMPLES_src.HCP_FIRST_NAME,
        EXT_KNIPPER_SAMPLES_src.HCP_MIDDLE_NAME,
        EXT_KNIPPER_SAMPLES_src.HCP_LAST_NAME,
        EXT_KNIPPER_SAMPLES_src.HCP_DESIGNATION,
        EXT_KNIPPER_SAMPLES_src.HCP_STATE_LICENSE_NUMBER,
        EXT_KNIPPER_SAMPLES_src.HCP_ADDRESS1,
        EXT_KNIPPER_SAMPLES_src.HCP_ADDRESS2,
        EXT_KNIPPER_SAMPLES_src.HCP_ADDRESS3,
        EXT_KNIPPER_SAMPLES_src.HCP_CITY,
        EXT_KNIPPER_SAMPLES_src.HCP_STATE,
        EXT_KNIPPER_SAMPLES_src.HCP_ZIP,
        EXT_KNIPPER_SAMPLES_src.DEA_LICENSE_NUMBER,
        EXT_KNIPPER_SAMPLES_src.ORDER_SOURCE_ORDER_ID,
        EXT_KNIPPER_SAMPLES_src.NDC,
        EXT_KNIPPER_SAMPLES_src.QUANTITY,
        EXT_KNIPPER_SAMPLES_src.ORDER_SOURCE_JOB_CODE,
        EXT_KNIPPER_SAMPLES_src.ORDER_SOURCE_JOB_CODE_DESCRIPTION,
        EXT_KNIPPER_SAMPLES_src.SHIP_DATE,
        EXT_KNIPPER_SAMPLES_src.batch_id,
        EXT_KNIPPER_SAMPLES_src.row_id,
        EXT_KNIPPER_SAMPLES_src.update_ts
 FROM teva_ingestion.EXT_KNIPPER_SAMPLES_src
 ORDER BY EXT_KNIPPER_SAMPLES_src.batch_id
SEGMENTED BY hash(EXT_KNIPPER_SAMPLES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ACTIVITY_LINE_ITEM_src_super_b0 /*+basename(EXT_ACTIVITY_LINE_ITEM_src_super)*/ 
(
 LINE_ITEM_ID,
 BRAND_NAME,
 ACTIVITY,
 LINE_ITEM_DATETIME,
 LINE_ITEM_PREVIOUS_ITEM,
 LINE_ITEM_TRACKBACK_ID,
 LINE_ITEM_DETAILS,
 LINE_ITEM_TYPE_NAME,
 LINE_ITEM_NATIVE_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_ID,
        EXT_ACTIVITY_LINE_ITEM_src.BRAND_NAME,
        EXT_ACTIVITY_LINE_ITEM_src.ACTIVITY,
        EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_DATETIME,
        EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_PREVIOUS_ITEM,
        EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_TRACKBACK_ID,
        EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_DETAILS,
        EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_TYPE_NAME,
        EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_NATIVE_TYPE,
        EXT_ACTIVITY_LINE_ITEM_src.batch_id,
        EXT_ACTIVITY_LINE_ITEM_src.row_id,
        EXT_ACTIVITY_LINE_ITEM_src.update_ts
 FROM teva_ingestion.EXT_ACTIVITY_LINE_ITEM_src
 ORDER BY EXT_ACTIVITY_LINE_ITEM_src.batch_id
SEGMENTED BY hash(EXT_ACTIVITY_LINE_ITEM_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AGGREGATED_ACTIVITY_src_super_b0 /*+basename(EXT_AGGREGATED_ACTIVITY_src_super)*/ 
(
 AGGREGATED_ID,
 LEVEL_NAME,
 FEDERATION_ID,
 SOURCE_NAME,
 CONTACT,
 ORIGINATING_ID,
 PRIOR_ACTIVITY,
 ACTIVITY_ROLE_NAME,
 COUNT,
 AGGREGATED_TYPE_NAME,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AGGREGATED_ACTIVITY_src.AGGREGATED_ID,
        EXT_AGGREGATED_ACTIVITY_src.LEVEL_NAME,
        EXT_AGGREGATED_ACTIVITY_src.FEDERATION_ID,
        EXT_AGGREGATED_ACTIVITY_src.SOURCE_NAME,
        EXT_AGGREGATED_ACTIVITY_src.CONTACT,
        EXT_AGGREGATED_ACTIVITY_src.ORIGINATING_ID,
        EXT_AGGREGATED_ACTIVITY_src.PRIOR_ACTIVITY,
        EXT_AGGREGATED_ACTIVITY_src.ACTIVITY_ROLE_NAME,
        EXT_AGGREGATED_ACTIVITY_src.COUNT,
        EXT_AGGREGATED_ACTIVITY_src.AGGREGATED_TYPE_NAME,
        EXT_AGGREGATED_ACTIVITY_src.batch_id,
        EXT_AGGREGATED_ACTIVITY_src.row_id,
        EXT_AGGREGATED_ACTIVITY_src.update_ts
 FROM teva_ingestion.EXT_AGGREGATED_ACTIVITY_src
 ORDER BY EXT_AGGREGATED_ACTIVITY_src.batch_id
SEGMENTED BY hash(EXT_AGGREGATED_ACTIVITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DYNAMIC_SEGMENT_src_super_b0 /*+basename(EXT_DYNAMIC_SEGMENT_src_super)*/ 
(
 FEDERATION_ID,
 BASKET_ID,
 SEGMENT_NAME,
 SEGMENT_VALUE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DYNAMIC_SEGMENT_src.FEDERATION_ID,
        EXT_DYNAMIC_SEGMENT_src.BASKET_ID,
        EXT_DYNAMIC_SEGMENT_src.SEGMENT_NAME,
        EXT_DYNAMIC_SEGMENT_src.SEGMENT_VALUE,
        EXT_DYNAMIC_SEGMENT_src.batch_id,
        EXT_DYNAMIC_SEGMENT_src.row_id,
        EXT_DYNAMIC_SEGMENT_src.update_ts
 FROM teva_ingestion.EXT_DYNAMIC_SEGMENT_src
 ORDER BY EXT_DYNAMIC_SEGMENT_src.batch_id
SEGMENTED BY hash(EXT_DYNAMIC_SEGMENT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_MS_DDD_DOLLARS_src_super_b0 /*+basename(EXT_MS_DDD_DOLLARS_src_super)*/ 
(
 client_num,
 report_num,
 sra1,
 outlet_code,
 subcategory_code,
 sra4,
 category_code,
 ims_product_code,
 mth_yyyymmdd,
 dol_mth01,
 dol_mth02,
 dol_mth03,
 dol_mth04,
 dol_mth05,
 dol_mth06,
 dol_mth07,
 dol_mth08,
 dol_mth09,
 dol_mth10,
 dol_mth11,
 dol_mth12,
 dol_mth13,
 dol_mth14,
 dol_mth15,
 dol_mth16,
 dol_mth17,
 dol_mth18,
 dol_mth19,
 dol_mth20,
 dol_mth21,
 dol_mth22,
 dol_mth23,
 dol_mth24,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_MS_DDD_DOLLARS_src.client_num,
        EXT_MS_DDD_DOLLARS_src.report_num,
        EXT_MS_DDD_DOLLARS_src.sra1,
        EXT_MS_DDD_DOLLARS_src.outlet_code,
        EXT_MS_DDD_DOLLARS_src.subcategory_code,
        EXT_MS_DDD_DOLLARS_src.sra4,
        EXT_MS_DDD_DOLLARS_src.category_code,
        EXT_MS_DDD_DOLLARS_src.ims_product_code,
        EXT_MS_DDD_DOLLARS_src.mth_yyyymmdd,
        EXT_MS_DDD_DOLLARS_src.dol_mth01,
        EXT_MS_DDD_DOLLARS_src.dol_mth02,
        EXT_MS_DDD_DOLLARS_src.dol_mth03,
        EXT_MS_DDD_DOLLARS_src.dol_mth04,
        EXT_MS_DDD_DOLLARS_src.dol_mth05,
        EXT_MS_DDD_DOLLARS_src.dol_mth06,
        EXT_MS_DDD_DOLLARS_src.dol_mth07,
        EXT_MS_DDD_DOLLARS_src.dol_mth08,
        EXT_MS_DDD_DOLLARS_src.dol_mth09,
        EXT_MS_DDD_DOLLARS_src.dol_mth10,
        EXT_MS_DDD_DOLLARS_src.dol_mth11,
        EXT_MS_DDD_DOLLARS_src.dol_mth12,
        EXT_MS_DDD_DOLLARS_src.dol_mth13,
        EXT_MS_DDD_DOLLARS_src.dol_mth14,
        EXT_MS_DDD_DOLLARS_src.dol_mth15,
        EXT_MS_DDD_DOLLARS_src.dol_mth16,
        EXT_MS_DDD_DOLLARS_src.dol_mth17,
        EXT_MS_DDD_DOLLARS_src.dol_mth18,
        EXT_MS_DDD_DOLLARS_src.dol_mth19,
        EXT_MS_DDD_DOLLARS_src.dol_mth20,
        EXT_MS_DDD_DOLLARS_src.dol_mth21,
        EXT_MS_DDD_DOLLARS_src.dol_mth22,
        EXT_MS_DDD_DOLLARS_src.dol_mth23,
        EXT_MS_DDD_DOLLARS_src.dol_mth24,
        EXT_MS_DDD_DOLLARS_src.outlet_name,
        EXT_MS_DDD_DOLLARS_src.outlet_address,
        EXT_MS_DDD_DOLLARS_src.outlet_city,
        EXT_MS_DDD_DOLLARS_src.outlet_state,
        EXT_MS_DDD_DOLLARS_src.outlet_zip,
        EXT_MS_DDD_DOLLARS_src.batch_id,
        EXT_MS_DDD_DOLLARS_src.row_id,
        EXT_MS_DDD_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_MS_DDD_DOLLARS_src
 ORDER BY EXT_MS_DDD_DOLLARS_src.batch_id
SEGMENTED BY hash(EXT_MS_DDD_DOLLARS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_MS_DDD_QUANTITY_src_super_b0 /*+basename(EXT_MS_DDD_QUANTITY_src_super)*/ 
(
 client_num,
 report_num,
 sra1,
 outlet_code,
 subcategory_code,
 sra4,
 category_code,
 ims_product_code,
 mth_yyyymmdd,
 qty_mth01,
 qty_mth02,
 qty_mth03,
 qty_mth04,
 qty_mth05,
 qty_mth06,
 qty_mth07,
 qty_mth08,
 qty_mth09,
 qty_mth10,
 qty_mth11,
 qty_mth12,
 qty_mth13,
 qty_mth14,
 qty_mth15,
 qty_mth16,
 qty_mth17,
 qty_mth18,
 qty_mth19,
 qty_mth20,
 qty_mth21,
 qty_mth22,
 qty_mth23,
 qty_mth24,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_MS_DDD_QUANTITY_src.client_num,
        EXT_MS_DDD_QUANTITY_src.report_num,
        EXT_MS_DDD_QUANTITY_src.sra1,
        EXT_MS_DDD_QUANTITY_src.outlet_code,
        EXT_MS_DDD_QUANTITY_src.subcategory_code,
        EXT_MS_DDD_QUANTITY_src.sra4,
        EXT_MS_DDD_QUANTITY_src.category_code,
        EXT_MS_DDD_QUANTITY_src.ims_product_code,
        EXT_MS_DDD_QUANTITY_src.mth_yyyymmdd,
        EXT_MS_DDD_QUANTITY_src.qty_mth01,
        EXT_MS_DDD_QUANTITY_src.qty_mth02,
        EXT_MS_DDD_QUANTITY_src.qty_mth03,
        EXT_MS_DDD_QUANTITY_src.qty_mth04,
        EXT_MS_DDD_QUANTITY_src.qty_mth05,
        EXT_MS_DDD_QUANTITY_src.qty_mth06,
        EXT_MS_DDD_QUANTITY_src.qty_mth07,
        EXT_MS_DDD_QUANTITY_src.qty_mth08,
        EXT_MS_DDD_QUANTITY_src.qty_mth09,
        EXT_MS_DDD_QUANTITY_src.qty_mth10,
        EXT_MS_DDD_QUANTITY_src.qty_mth11,
        EXT_MS_DDD_QUANTITY_src.qty_mth12,
        EXT_MS_DDD_QUANTITY_src.qty_mth13,
        EXT_MS_DDD_QUANTITY_src.qty_mth14,
        EXT_MS_DDD_QUANTITY_src.qty_mth15,
        EXT_MS_DDD_QUANTITY_src.qty_mth16,
        EXT_MS_DDD_QUANTITY_src.qty_mth17,
        EXT_MS_DDD_QUANTITY_src.qty_mth18,
        EXT_MS_DDD_QUANTITY_src.qty_mth19,
        EXT_MS_DDD_QUANTITY_src.qty_mth20,
        EXT_MS_DDD_QUANTITY_src.qty_mth21,
        EXT_MS_DDD_QUANTITY_src.qty_mth22,
        EXT_MS_DDD_QUANTITY_src.qty_mth23,
        EXT_MS_DDD_QUANTITY_src.qty_mth24,
        EXT_MS_DDD_QUANTITY_src.outlet_name,
        EXT_MS_DDD_QUANTITY_src.outlet_address,
        EXT_MS_DDD_QUANTITY_src.outlet_city,
        EXT_MS_DDD_QUANTITY_src.outlet_state,
        EXT_MS_DDD_QUANTITY_src.outlet_zip,
        EXT_MS_DDD_QUANTITY_src.batch_id,
        EXT_MS_DDD_QUANTITY_src.row_id,
        EXT_MS_DDD_QUANTITY_src.update_ts
 FROM teva_ingestion.EXT_MS_DDD_QUANTITY_src
 ORDER BY EXT_MS_DDD_QUANTITY_src.batch_id
SEGMENTED BY hash(EXT_MS_DDD_QUANTITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src_super_b0 /*+basename(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src_super)*/ 
(
 client_num,
 report_num,
 ims_outlet_code,
 ims_facility_number,
 ims_prescriber_number,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 facility_prescriber_name,
 facility_prescriber_address1,
 facility_prescriber_address2,
 facility_prescriber_address3,
 facility_prescriber_address4,
 facility_prescriber_city,
 facility_prescriber_state,
 facility_prescriber_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.client_num,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.report_num,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.ims_outlet_code,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.ims_facility_number,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.ims_prescriber_number,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_name,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_address,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_city,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_state,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_zip,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_name,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address1,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address2,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address3,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address4,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_city,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_state,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_zip,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.row_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src
 ORDER BY EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.batch_id
SEGMENTED BY hash(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src_super_b0 /*+basename(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src_super)*/ 
(
 client_num,
 report_num,
 ims_outlet_code,
 ims_facility_number,
 ims_prescriber_number,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 facility_prescriber_name,
 facility_prescriber_address1,
 facility_prescriber_address2,
 facility_prescriber_address3,
 facility_prescriber_address4,
 facility_prescriber_city,
 facility_prescriber_state,
 facility_prescriber_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.client_num,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.report_num,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.ims_outlet_code,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.ims_facility_number,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.ims_prescriber_number,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_name,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_address,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_city,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_state,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_zip,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_name,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address1,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address2,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address3,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address4,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_city,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_state,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_zip,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.row_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src
 ORDER BY EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.batch_id
SEGMENTED BY hash(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TR_DDDMD_WEEKLY_DOLLARS_src_super_b0 /*+basename(EXT_TR_DDDMD_WEEKLY_DOLLARS_src_super)*/ 
(
 client_num,
 report_num,
 ims_outlet_code,
 subcategory_code,
 alt_seq_num,
 filler01,
 category_code,
 ims_product_code,
 data_date,
 dol_wk01,
 dol_wk02,
 dol_wk03,
 dol_wk04,
 dol_wk05,
 dol_wk06,
 dol_wk07,
 dol_wk08,
 dol_wk09,
 dol_wk10,
 dol_wk11,
 dol_wk12,
 dol_wk13,
 dol_wk14,
 dol_wk15,
 dol_wk16,
 dol_wk17,
 dol_wk18,
 dol_wk19,
 dol_wk20,
 dol_wk21,
 dol_wk22,
 dol_wk23,
 dol_wk24,
 dol_wk25,
 dol_wk26,
 dol_wk27,
 dol_wk28,
 dol_wk29,
 dol_wk30,
 dol_wk31,
 dol_wk32,
 dol_wk33,
 dol_wk34,
 dol_wk35,
 dol_wk36,
 dol_wk37,
 dol_wk38,
 dol_wk39,
 dol_wk40,
 dol_wk41,
 dol_wk42,
 dol_wk43,
 dol_wk44,
 dol_wk45,
 dol_wk46,
 dol_wk47,
 dol_wk48,
 dol_wk49,
 dol_wk50,
 dol_wk51,
 dol_wk52,
 dol_wk53,
 dol_wk54,
 dol_wk55,
 dol_wk56,
 dol_wk57,
 dol_wk58,
 dol_wk59,
 dol_wk60,
 dol_wk61,
 dol_wk62,
 dol_wk63,
 dol_wk64,
 dol_wk65,
 dol_wk66,
 dol_wk67,
 dol_wk68,
 dol_wk69,
 dol_wk70,
 dol_wk71,
 dol_wk72,
 dol_wk73,
 dol_wk74,
 dol_wk75,
 dol_wk76,
 dol_wk77,
 dol_wk78,
 dol_wk79,
 dol_wk80,
 dol_wk81,
 dol_wk82,
 dol_wk83,
 dol_wk84,
 dol_wk85,
 dol_wk86,
 dol_wk87,
 dol_wk88,
 dol_wk89,
 dol_wk90,
 dol_wk91,
 dol_wk92,
 dol_wk93,
 dol_wk94,
 dol_wk95,
 dol_wk96,
 dol_wk97,
 dol_wk98,
 dol_wk99,
 dol_wk100,
 dol_wk101,
 dol_wk102,
 dol_wk103,
 dol_wk104,
 dol_wk105,
 dol_wk106,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TR_DDDMD_WEEKLY_DOLLARS_src.client_num,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.report_num,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.ims_outlet_code,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.subcategory_code,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.alt_seq_num,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.filler01,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.category_code,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.ims_product_code,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.data_date,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk01,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk02,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk03,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk04,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk05,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk06,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk07,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk08,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk09,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk10,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk11,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk12,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk13,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk14,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk15,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk16,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk17,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk18,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk19,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk20,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk21,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk22,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk23,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk24,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk25,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk26,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk27,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk28,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk29,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk30,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk31,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk32,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk33,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk34,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk35,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk36,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk37,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk38,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk39,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk40,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk41,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk42,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk43,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk44,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk45,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk46,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk47,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk48,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk49,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk50,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk51,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk52,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk53,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk54,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk55,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk56,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk57,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk58,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk59,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk60,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk61,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk62,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk63,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk64,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk65,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk66,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk67,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk68,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk69,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk70,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk71,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk72,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk73,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk74,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk75,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk76,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk77,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk78,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk79,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk80,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk81,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk82,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk83,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk84,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk85,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk86,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk87,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk88,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk89,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk90,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk91,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk92,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk93,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk94,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk95,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk96,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk97,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk98,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk99,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk100,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk101,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk102,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk103,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk104,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk105,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk106,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_name,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_address,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_city,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_state,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_zip,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.row_id,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_DOLLARS_src
 ORDER BY EXT_TR_DDDMD_WEEKLY_DOLLARS_src.batch_id
SEGMENTED BY hash(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TR_DDDMD_WEEKLY_UNITS_src_super_b0 /*+basename(EXT_TR_DDDMD_WEEKLY_UNITS_src_super)*/ 
(
 client_num,
 report_num,
 ims_outlet_code,
 subcategory_code,
 alt_seq_num,
 filler01,
 category_code,
 ims_product_code,
 data_date,
 qty_wk01,
 qty_wk02,
 qty_wk03,
 qty_wk04,
 qty_wk05,
 qty_wk06,
 qty_wk07,
 qty_wk08,
 qty_wk09,
 qty_wk10,
 qty_wk11,
 qty_wk12,
 qty_wk13,
 qty_wk14,
 qty_wk15,
 qty_wk16,
 qty_wk17,
 qty_wk18,
 qty_wk19,
 qty_wk20,
 qty_wk21,
 qty_wk22,
 qty_wk23,
 qty_wk24,
 qty_wk25,
 qty_wk26,
 qty_wk27,
 qty_wk28,
 qty_wk29,
 qty_wk30,
 qty_wk31,
 qty_wk32,
 qty_wk33,
 qty_wk34,
 qty_wk35,
 qty_wk36,
 qty_wk37,
 qty_wk38,
 qty_wk39,
 qty_wk40,
 qty_wk41,
 qty_wk42,
 qty_wk43,
 qty_wk44,
 qty_wk45,
 qty_wk46,
 qty_wk47,
 qty_wk48,
 qty_wk49,
 qty_wk50,
 qty_wk51,
 qty_wk52,
 qty_wk53,
 qty_wk54,
 qty_wk55,
 qty_wk56,
 qty_wk57,
 qty_wk58,
 qty_wk59,
 qty_wk60,
 qty_wk61,
 qty_wk62,
 qty_wk63,
 qty_wk64,
 qty_wk65,
 qty_wk66,
 qty_wk67,
 qty_wk68,
 qty_wk69,
 qty_wk70,
 qty_wk71,
 qty_wk72,
 qty_wk73,
 qty_wk74,
 qty_wk75,
 qty_wk76,
 qty_wk77,
 qty_wk78,
 qty_wk79,
 qty_wk80,
 qty_wk81,
 qty_wk82,
 qty_wk83,
 qty_wk84,
 qty_wk85,
 qty_wk86,
 qty_wk87,
 qty_wk88,
 qty_wk89,
 qty_wk90,
 qty_wk91,
 qty_wk92,
 qty_wk93,
 qty_wk94,
 qty_wk95,
 qty_wk96,
 qty_wk97,
 qty_wk98,
 qty_wk99,
 qty_wk100,
 qty_wk101,
 qty_wk102,
 qty_wk103,
 qty_wk104,
 qty_wk105,
 qty_wk106,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TR_DDDMD_WEEKLY_UNITS_src.client_num,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.report_num,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.ims_outlet_code,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.subcategory_code,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.alt_seq_num,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.filler01,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.category_code,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.ims_product_code,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.data_date,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk01,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk02,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk03,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk04,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk05,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk06,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk07,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk08,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk09,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk10,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk11,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk12,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk13,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk14,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk15,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk16,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk17,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk18,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk19,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk20,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk21,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk22,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk23,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk24,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk25,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk26,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk27,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk28,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk29,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk30,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk31,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk32,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk33,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk34,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk35,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk36,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk37,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk38,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk39,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk40,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk41,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk42,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk43,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk44,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk45,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk46,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk47,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk48,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk49,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk50,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk51,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk52,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk53,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk54,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk55,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk56,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk57,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk58,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk59,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk60,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk61,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk62,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk63,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk64,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk65,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk66,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk67,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk68,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk69,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk70,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk71,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk72,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk73,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk74,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk75,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk76,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk77,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk78,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk79,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk80,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk81,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk82,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk83,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk84,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk85,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk86,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk87,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk88,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk89,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk90,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk91,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk92,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk93,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk94,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk95,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk96,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk97,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk98,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk99,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk100,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk101,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk102,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk103,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk104,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk105,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk106,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_name,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_address,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_city,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_state,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_zip,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.row_id,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_UNITS_src
 ORDER BY EXT_TR_DDDMD_WEEKLY_UNITS_src.batch_id
SEGMENTED BY hash(EXT_TR_DDDMD_WEEKLY_UNITS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_ADDRESS_src_super_b0 /*+basename(MDM_ADDRESS_src_super)*/ 
(
 TVCMID,
 ADDRESS_ID,
 ADDRESS_TYPE,
 ADDRESS_TYPE_NAME,
 ADDRESS_LINE_1,
 ADDRESS_LINE_2,
 COUNTY,
 CITY,
 STATE,
 STATE_NAME,
 COUNTRY_CODE,
 COUNTRY_NAME,
 ZIP5_POSTAL_CODE,
 ZIP4_POSTAL_EXTENSION_CODE,
 ADDRESS_STATUS,
 ADDRESS_STATUS_NAME,
 ADDRESS_EFFECTIVE_DATE,
 MSA_CBSA,
 FIPS_STATE_CODE,
 FIPS_STATE_DESCRIPTION,
 FIPS_COUNTY_CODE,
 FIPS_COUNTY_DESCRIPTION,
 DELIVERABILITY_CONFIDENCE,
 ADDRESS_SETTING_TYPE_CODE,
 ADDRESS_SETTING_TYPE_DESCRIPTION,
 ADDRESS_CATEGORY_CODE,
 ADDRESS_CATEGORY_DESCRIPTION,
 ADDRESS_LATITUDE,
 ADDRESS_LONGITUDE,
 POSTAL_BARCODE,
 SINGLE_ADDRESS_INDICATOR,
 PRACTICE_LOCATION_CONFIDENCE_INDICATOR,
 PRACTICE_LOCATION_RANK,
 VALIDATION_MESSAGE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_ADDRESS_src.TVCMID,
        MDM_ADDRESS_src.ADDRESS_ID,
        MDM_ADDRESS_src.ADDRESS_TYPE,
        MDM_ADDRESS_src.ADDRESS_TYPE_NAME,
        MDM_ADDRESS_src.ADDRESS_LINE_1,
        MDM_ADDRESS_src.ADDRESS_LINE_2,
        MDM_ADDRESS_src.COUNTY,
        MDM_ADDRESS_src.CITY,
        MDM_ADDRESS_src.STATE,
        MDM_ADDRESS_src.STATE_NAME,
        MDM_ADDRESS_src.COUNTRY_CODE,
        MDM_ADDRESS_src.COUNTRY_NAME,
        MDM_ADDRESS_src.ZIP5_POSTAL_CODE,
        MDM_ADDRESS_src.ZIP4_POSTAL_EXTENSION_CODE,
        MDM_ADDRESS_src.ADDRESS_STATUS,
        MDM_ADDRESS_src.ADDRESS_STATUS_NAME,
        MDM_ADDRESS_src.ADDRESS_EFFECTIVE_DATE,
        MDM_ADDRESS_src.MSA_CBSA,
        MDM_ADDRESS_src.FIPS_STATE_CODE,
        MDM_ADDRESS_src.FIPS_STATE_DESCRIPTION,
        MDM_ADDRESS_src.FIPS_COUNTY_CODE,
        MDM_ADDRESS_src.FIPS_COUNTY_DESCRIPTION,
        MDM_ADDRESS_src.DELIVERABILITY_CONFIDENCE,
        MDM_ADDRESS_src.ADDRESS_SETTING_TYPE_CODE,
        MDM_ADDRESS_src.ADDRESS_SETTING_TYPE_DESCRIPTION,
        MDM_ADDRESS_src.ADDRESS_CATEGORY_CODE,
        MDM_ADDRESS_src.ADDRESS_CATEGORY_DESCRIPTION,
        MDM_ADDRESS_src.ADDRESS_LATITUDE,
        MDM_ADDRESS_src.ADDRESS_LONGITUDE,
        MDM_ADDRESS_src.POSTAL_BARCODE,
        MDM_ADDRESS_src.SINGLE_ADDRESS_INDICATOR,
        MDM_ADDRESS_src.PRACTICE_LOCATION_CONFIDENCE_INDICATOR,
        MDM_ADDRESS_src.PRACTICE_LOCATION_RANK,
        MDM_ADDRESS_src.VALIDATION_MESSAGE,
        MDM_ADDRESS_src.CREATED_BY,
        MDM_ADDRESS_src.CREATED_DATE,
        MDM_ADDRESS_src.UPDATED_BY,
        MDM_ADDRESS_src.UPDATED_DATE,
        MDM_ADDRESS_src.batch_id,
        MDM_ADDRESS_src.row_id,
        MDM_ADDRESS_src.update_ts
 FROM teva_ingestion.MDM_ADDRESS_src
 ORDER BY MDM_ADDRESS_src.batch_id
SEGMENTED BY hash(MDM_ADDRESS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_ADDRESS_LINK_src_super_b0 /*+basename(MDM_ADDRESS_LINK_src_super)*/ 
(
 TVCMID,
 ADDRESS_ID,
 DSP_ID,
 DSP_HCE_ID,
 DSP_ADDRESS_ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_ADDRESS_LINK_src.TVCMID,
        MDM_ADDRESS_LINK_src.ADDRESS_ID,
        MDM_ADDRESS_LINK_src.DSP_ID,
        MDM_ADDRESS_LINK_src.DSP_HCE_ID,
        MDM_ADDRESS_LINK_src.DSP_ADDRESS_ID,
        MDM_ADDRESS_LINK_src.batch_id,
        MDM_ADDRESS_LINK_src.row_id,
        MDM_ADDRESS_LINK_src.update_ts
 FROM teva_ingestion.MDM_ADDRESS_LINK_src
 ORDER BY MDM_ADDRESS_LINK_src.batch_id
SEGMENTED BY hash(MDM_ADDRESS_LINK_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_ALTERNATE_ID_src_super_b0 /*+basename(MDM_ALTERNATE_ID_src_super)*/ 
(
 TVCMID,
 ALTERNATE_ID_TYPE,
 ALTERNATE_ID_TYPE_NAME,
 ALTERNATE_ID_VALUE,
 STATE,
 STATE_NAME,
 IDENTIFIER_CATEGORY,
 STATUS,
 STATUS_NAME,
 SOURCE_DEACTIVATION_REASON_CODE,
 SOURCE_DEACTIVATION_REASON_DESCRIPTION,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_ALTERNATE_ID_src.TVCMID,
        MDM_ALTERNATE_ID_src.ALTERNATE_ID_TYPE,
        MDM_ALTERNATE_ID_src.ALTERNATE_ID_TYPE_NAME,
        MDM_ALTERNATE_ID_src.ALTERNATE_ID_VALUE,
        MDM_ALTERNATE_ID_src.STATE,
        MDM_ALTERNATE_ID_src.STATE_NAME,
        MDM_ALTERNATE_ID_src.IDENTIFIER_CATEGORY,
        MDM_ALTERNATE_ID_src.STATUS,
        MDM_ALTERNATE_ID_src.STATUS_NAME,
        MDM_ALTERNATE_ID_src.SOURCE_DEACTIVATION_REASON_CODE,
        MDM_ALTERNATE_ID_src.SOURCE_DEACTIVATION_REASON_DESCRIPTION,
        MDM_ALTERNATE_ID_src.CREATED_BY,
        MDM_ALTERNATE_ID_src.CREATED_DATE,
        MDM_ALTERNATE_ID_src.UPDATED_BY,
        MDM_ALTERNATE_ID_src.UPDATED_DATE,
        MDM_ALTERNATE_ID_src.batch_id,
        MDM_ALTERNATE_ID_src.row_id,
        MDM_ALTERNATE_ID_src.update_ts
 FROM teva_ingestion.MDM_ALTERNATE_ID_src
 ORDER BY MDM_ALTERNATE_ID_src.batch_id
SEGMENTED BY hash(MDM_ALTERNATE_ID_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_ALTERNATE_NAME_src_super_b0 /*+basename(MDM_ALTERNATE_NAME_src_super)*/ 
(
 TVCMID,
 NAME_TYPE,
 NAME_TYPE_NAME,
 NAME_VALUE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_ALTERNATE_NAME_src.TVCMID,
        MDM_ALTERNATE_NAME_src.NAME_TYPE,
        MDM_ALTERNATE_NAME_src.NAME_TYPE_NAME,
        MDM_ALTERNATE_NAME_src.NAME_VALUE,
        MDM_ALTERNATE_NAME_src.CREATED_BY,
        MDM_ALTERNATE_NAME_src.CREATED_DATE,
        MDM_ALTERNATE_NAME_src.UPDATED_BY,
        MDM_ALTERNATE_NAME_src.UPDATED_DATE,
        MDM_ALTERNATE_NAME_src.batch_id,
        MDM_ALTERNATE_NAME_src.row_id,
        MDM_ALTERNATE_NAME_src.update_ts
 FROM teva_ingestion.MDM_ALTERNATE_NAME_src
 ORDER BY MDM_ALTERNATE_NAME_src.batch_id
SEGMENTED BY hash(MDM_ALTERNATE_NAME_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_COMMUNICATION_src_super_b0 /*+basename(MDM_COMMUNICATION_src_super)*/ 
(
 TVCMID,
 ADDRESS_ID,
 COMMUNICATION_TYPE,
 COMMUNICATION_TYPE_NAME,
 COMMUNICATION_VALUE,
 STATUS_CODE,
 STATUS_NAME,
 EFFECTIVE_START_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_COMMUNICATION_src.TVCMID,
        MDM_COMMUNICATION_src.ADDRESS_ID,
        MDM_COMMUNICATION_src.COMMUNICATION_TYPE,
        MDM_COMMUNICATION_src.COMMUNICATION_TYPE_NAME,
        MDM_COMMUNICATION_src.COMMUNICATION_VALUE,
        MDM_COMMUNICATION_src.STATUS_CODE,
        MDM_COMMUNICATION_src.STATUS_NAME,
        MDM_COMMUNICATION_src.EFFECTIVE_START_DATE,
        MDM_COMMUNICATION_src.CREATED_BY,
        MDM_COMMUNICATION_src.CREATED_DATE,
        MDM_COMMUNICATION_src.UPDATED_BY,
        MDM_COMMUNICATION_src.UPDATED_DATE,
        MDM_COMMUNICATION_src.batch_id,
        MDM_COMMUNICATION_src.row_id,
        MDM_COMMUNICATION_src.update_ts
 FROM teva_ingestion.MDM_COMMUNICATION_src
 ORDER BY MDM_COMMUNICATION_src.batch_id
SEGMENTED BY hash(MDM_COMMUNICATION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_DEA_ADDRESS_src_super_b0 /*+basename(MDM_DEA_ADDRESS_src_super)*/ 
(
 TVCMID,
 ADDRESS_ID,
 DEA_NUMBER,
 BUSINESS_ACTIVITY_CODE,
 BUSINESS_ACTIVITY_DESCRIPTION,
 SUB_BUSINESS_ACTIVITY_CODE,
 SUB_BUSINESS_ACTIVITY_DESCRIPTION,
 DEA_SCHEDULE_CLASS_CODE,
 DEA_STATUS_CODE,
 DEA_STATUS_DESCRIPTION,
 DEA_EXPIRATION_DATE,
 DEA_DEACTIVATION_REASON_CODE,
 DEA_DEACTIVATION_REASON_DESCRIPTION,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_DEA_ADDRESS_src.TVCMID,
        MDM_DEA_ADDRESS_src.ADDRESS_ID,
        MDM_DEA_ADDRESS_src.DEA_NUMBER,
        MDM_DEA_ADDRESS_src.BUSINESS_ACTIVITY_CODE,
        MDM_DEA_ADDRESS_src.BUSINESS_ACTIVITY_DESCRIPTION,
        MDM_DEA_ADDRESS_src.SUB_BUSINESS_ACTIVITY_CODE,
        MDM_DEA_ADDRESS_src.SUB_BUSINESS_ACTIVITY_DESCRIPTION,
        MDM_DEA_ADDRESS_src.DEA_SCHEDULE_CLASS_CODE,
        MDM_DEA_ADDRESS_src.DEA_STATUS_CODE,
        MDM_DEA_ADDRESS_src.DEA_STATUS_DESCRIPTION,
        MDM_DEA_ADDRESS_src.DEA_EXPIRATION_DATE,
        MDM_DEA_ADDRESS_src.DEA_DEACTIVATION_REASON_CODE,
        MDM_DEA_ADDRESS_src.DEA_DEACTIVATION_REASON_DESCRIPTION,
        MDM_DEA_ADDRESS_src.CREATED_BY,
        MDM_DEA_ADDRESS_src.CREATED_DATE,
        MDM_DEA_ADDRESS_src.UPDATED_BY,
        MDM_DEA_ADDRESS_src.UPDATED_DATE,
        MDM_DEA_ADDRESS_src.batch_id,
        MDM_DEA_ADDRESS_src.row_id,
        MDM_DEA_ADDRESS_src.update_ts
 FROM teva_ingestion.MDM_DEA_ADDRESS_src
 ORDER BY MDM_DEA_ADDRESS_src.batch_id
SEGMENTED BY hash(MDM_DEA_ADDRESS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_EMAIL_PREF_src_super_b0 /*+basename(MDM_EMAIL_PREF_src_super)*/ 
(
 TVCMID,
 EMAIL,
 VALUE,
 EFFECTIVE_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_EMAIL_PREF_src.TVCMID,
        MDM_EMAIL_PREF_src.EMAIL,
        MDM_EMAIL_PREF_src.VALUE,
        MDM_EMAIL_PREF_src.EFFECTIVE_DATE,
        MDM_EMAIL_PREF_src.CREATED_BY,
        MDM_EMAIL_PREF_src.CREATED_DATE,
        MDM_EMAIL_PREF_src.UPDATED_BY,
        MDM_EMAIL_PREF_src.UPDATED_DATE,
        MDM_EMAIL_PREF_src.batch_id,
        MDM_EMAIL_PREF_src.row_id,
        MDM_EMAIL_PREF_src.update_ts
 FROM teva_ingestion.MDM_EMAIL_PREF_src
 ORDER BY MDM_EMAIL_PREF_src.batch_id
SEGMENTED BY hash(MDM_EMAIL_PREF_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_HCO_TEVA_FLAG_src_super_b0 /*+basename(MDM_HCO_TEVA_FLAG_src_super)*/ 
(
 TVCMID,
 FLAG_TYPE,
 FLAG_TYPE_NAME,
 FLAG_VALUE,
 EFFECTIVE_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_HCO_TEVA_FLAG_src.TVCMID,
        MDM_HCO_TEVA_FLAG_src.FLAG_TYPE,
        MDM_HCO_TEVA_FLAG_src.FLAG_TYPE_NAME,
        MDM_HCO_TEVA_FLAG_src.FLAG_VALUE,
        MDM_HCO_TEVA_FLAG_src.EFFECTIVE_DATE,
        MDM_HCO_TEVA_FLAG_src.CREATED_BY,
        MDM_HCO_TEVA_FLAG_src.CREATED_DATE,
        MDM_HCO_TEVA_FLAG_src.UPDATED_BY,
        MDM_HCO_TEVA_FLAG_src.UPDATED_DATE,
        MDM_HCO_TEVA_FLAG_src.batch_id,
        MDM_HCO_TEVA_FLAG_src.row_id,
        MDM_HCO_TEVA_FLAG_src.update_ts
 FROM teva_ingestion.MDM_HCO_TEVA_FLAG_src
 ORDER BY MDM_HCO_TEVA_FLAG_src.batch_id
SEGMENTED BY hash(MDM_HCO_TEVA_FLAG_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_HCP_src_super_b0 /*+basename(MDM_HCP_src_super)*/ 
(
 TVCMID,
 IMS_HCE_ID,
 IMS_PRESCRIBER_ID,
 FIRST_NAME,
 MIDDLE_NAME,
 LAST_NAME,
 PREFIX,
 SUFFIX,
 SUFFIX_NAME,
 SUB_TYPE,
 SUB_TYPE_NAME,
 HEALTHCARE_PROFESSIONAL_STATUS_CODE,
 HEALTHCARE_PROFESSIONAL_STATUS_NAME,
 YEAR_OF_BIRTH,
 DATE_OF_DEATH,
 GENDER_CODE,
 GENDER_NAME,
 TEVA_SPECIALTY_CODE,
 TEVA_SPECIALTY_NAME,
 LOGICAL_DELETION_DATE,
 HCE_INSERT_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_HCP_src.TVCMID,
        MDM_HCP_src.IMS_HCE_ID,
        MDM_HCP_src.IMS_PRESCRIBER_ID,
        MDM_HCP_src.FIRST_NAME,
        MDM_HCP_src.MIDDLE_NAME,
        MDM_HCP_src.LAST_NAME,
        MDM_HCP_src.PREFIX,
        MDM_HCP_src.SUFFIX,
        MDM_HCP_src.SUFFIX_NAME,
        MDM_HCP_src.SUB_TYPE,
        MDM_HCP_src.SUB_TYPE_NAME,
        MDM_HCP_src.HEALTHCARE_PROFESSIONAL_STATUS_CODE,
        MDM_HCP_src.HEALTHCARE_PROFESSIONAL_STATUS_NAME,
        MDM_HCP_src.YEAR_OF_BIRTH,
        MDM_HCP_src.DATE_OF_DEATH,
        MDM_HCP_src.GENDER_CODE,
        MDM_HCP_src.GENDER_NAME,
        MDM_HCP_src.TEVA_SPECIALTY_CODE,
        MDM_HCP_src.TEVA_SPECIALTY_NAME,
        MDM_HCP_src.LOGICAL_DELETION_DATE,
        MDM_HCP_src.HCE_INSERT_DATE,
        MDM_HCP_src.CREATED_BY,
        MDM_HCP_src.CREATED_DATE,
        MDM_HCP_src.UPDATED_BY,
        MDM_HCP_src.UPDATED_DATE,
        MDM_HCP_src.batch_id,
        MDM_HCP_src.row_id,
        MDM_HCP_src.update_ts
 FROM teva_ingestion.MDM_HCP_src
 ORDER BY MDM_HCP_src.batch_id
SEGMENTED BY hash(MDM_HCP_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_HCP_TEVA_FLAG_src_super_b0 /*+basename(MDM_HCP_TEVA_FLAG_src_super)*/ 
(
 TVCMID,
 FLAG_TYPE,
 FLAG_TYPE_NAME,
 FLAG_VALUE,
 EFFECTIVE_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_HCP_TEVA_FLAG_src.TVCMID,
        MDM_HCP_TEVA_FLAG_src.FLAG_TYPE,
        MDM_HCP_TEVA_FLAG_src.FLAG_TYPE_NAME,
        MDM_HCP_TEVA_FLAG_src.FLAG_VALUE,
        MDM_HCP_TEVA_FLAG_src.EFFECTIVE_DATE,
        MDM_HCP_TEVA_FLAG_src.CREATED_BY,
        MDM_HCP_TEVA_FLAG_src.CREATED_DATE,
        MDM_HCP_TEVA_FLAG_src.UPDATED_BY,
        MDM_HCP_TEVA_FLAG_src.UPDATED_DATE,
        MDM_HCP_TEVA_FLAG_src.batch_id,
        MDM_HCP_TEVA_FLAG_src.row_id,
        MDM_HCP_TEVA_FLAG_src.update_ts
 FROM teva_ingestion.MDM_HCP_TEVA_FLAG_src
 ORDER BY MDM_HCP_TEVA_FLAG_src.batch_id
SEGMENTED BY hash(MDM_HCP_TEVA_FLAG_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_IMS_FLAG_src_super_b0 /*+basename(MDM_IMS_FLAG_src_super)*/ 
(
 TVCMID,
 FLAG_TYPE,
 FLAG_TYPE_NAME,
 FLAG_VALUE,
 EFFECTIVE_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_IMS_FLAG_src.TVCMID,
        MDM_IMS_FLAG_src.FLAG_TYPE,
        MDM_IMS_FLAG_src.FLAG_TYPE_NAME,
        MDM_IMS_FLAG_src.FLAG_VALUE,
        MDM_IMS_FLAG_src.EFFECTIVE_DATE,
        MDM_IMS_FLAG_src.CREATED_BY,
        MDM_IMS_FLAG_src.CREATED_DATE,
        MDM_IMS_FLAG_src.UPDATED_BY,
        MDM_IMS_FLAG_src.UPDATED_DATE,
        MDM_IMS_FLAG_src.batch_id,
        MDM_IMS_FLAG_src.row_id,
        MDM_IMS_FLAG_src.update_ts
 FROM teva_ingestion.MDM_IMS_FLAG_src
 ORDER BY MDM_IMS_FLAG_src.batch_id
SEGMENTED BY hash(MDM_IMS_FLAG_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_LICENSE_src_super_b0 /*+basename(MDM_LICENSE_src_super)*/ 
(
 TVCMID,
 HCE_REGULATION_ID,
 LICENSE_TYPE_ID,
 LICENSE_TYPE_NAME,
 AUTHORIZATION_NUMBER,
 PROFESSION_CODE,
 STATE,
 STATE_NAME,
 STATE_BOARD_ID,
 STATE_BOARD_NAME,
 LICENSE_PRIVILEGE_ID,
 LICENSE_PRIVILEGE,
 LICENSE_CERTIFICATION_CODE,
 LICENSE_CERTIFICATION_NAME,
 LICENSE_TYPE_PRIVILEGE_RANK,
 LICENSE_STATUS_CODE,
 LICENSE_STATUS_DESCRIPTION,
 LICENSE_EFFECTIVE_DATE,
 LICENSE_EXPIRATION_DATE,
 LICENSE_DEACTIVATION_REASON_CODE,
 LICENSE_DEACTIVATION_REASON_DESCRIPTION,
 RECORD_TYPE,
 RECORD_TYPE_NAME,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_LICENSE_src.TVCMID,
        MDM_LICENSE_src.HCE_REGULATION_ID,
        MDM_LICENSE_src.LICENSE_TYPE_ID,
        MDM_LICENSE_src.LICENSE_TYPE_NAME,
        MDM_LICENSE_src.AUTHORIZATION_NUMBER,
        MDM_LICENSE_src.PROFESSION_CODE,
        MDM_LICENSE_src.STATE,
        MDM_LICENSE_src.STATE_NAME,
        MDM_LICENSE_src.STATE_BOARD_ID,
        MDM_LICENSE_src.STATE_BOARD_NAME,
        MDM_LICENSE_src.LICENSE_PRIVILEGE_ID,
        MDM_LICENSE_src.LICENSE_PRIVILEGE,
        MDM_LICENSE_src.LICENSE_CERTIFICATION_CODE,
        MDM_LICENSE_src.LICENSE_CERTIFICATION_NAME,
        MDM_LICENSE_src.LICENSE_TYPE_PRIVILEGE_RANK,
        MDM_LICENSE_src.LICENSE_STATUS_CODE,
        MDM_LICENSE_src.LICENSE_STATUS_DESCRIPTION,
        MDM_LICENSE_src.LICENSE_EFFECTIVE_DATE,
        MDM_LICENSE_src.LICENSE_EXPIRATION_DATE,
        MDM_LICENSE_src.LICENSE_DEACTIVATION_REASON_CODE,
        MDM_LICENSE_src.LICENSE_DEACTIVATION_REASON_DESCRIPTION,
        MDM_LICENSE_src.RECORD_TYPE,
        MDM_LICENSE_src.RECORD_TYPE_NAME,
        MDM_LICENSE_src.CREATED_BY,
        MDM_LICENSE_src.CREATED_DATE,
        MDM_LICENSE_src.UPDATED_BY,
        MDM_LICENSE_src.UPDATED_DATE,
        MDM_LICENSE_src.batch_id,
        MDM_LICENSE_src.row_id,
        MDM_LICENSE_src.update_ts
 FROM teva_ingestion.MDM_LICENSE_src
 ORDER BY MDM_LICENSE_src.batch_id
SEGMENTED BY hash(MDM_LICENSE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_MARKETING_CHANNEL_src_super_b0 /*+basename(MDM_MARKETING_CHANNEL_src_super)*/ 
(
 TVCMID,
 CHANNEL,
 VALUE,
 EFFECTIVE_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_MARKETING_CHANNEL_src.TVCMID,
        MDM_MARKETING_CHANNEL_src.CHANNEL,
        MDM_MARKETING_CHANNEL_src.VALUE,
        MDM_MARKETING_CHANNEL_src.EFFECTIVE_DATE,
        MDM_MARKETING_CHANNEL_src.CREATED_BY,
        MDM_MARKETING_CHANNEL_src.CREATED_DATE,
        MDM_MARKETING_CHANNEL_src.UPDATED_BY,
        MDM_MARKETING_CHANNEL_src.UPDATED_DATE,
        MDM_MARKETING_CHANNEL_src.batch_id,
        MDM_MARKETING_CHANNEL_src.row_id,
        MDM_MARKETING_CHANNEL_src.update_ts
 FROM teva_ingestion.MDM_MARKETING_CHANNEL_src
 ORDER BY MDM_MARKETING_CHANNEL_src.batch_id
SEGMENTED BY hash(MDM_MARKETING_CHANNEL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_PROFESSIONAL_src_super_b0 /*+basename(MDM_PROFESSIONAL_src_super)*/ 
(
 TVCMID,
 PROFESSION_CODE,
 PROFESSION_CODE_NAME,
 PROFESSION_RANK,
 STATUS,
 PROFESSION_STATUS_NAME,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_PROFESSIONAL_src.TVCMID,
        MDM_PROFESSIONAL_src.PROFESSION_CODE,
        MDM_PROFESSIONAL_src.PROFESSION_CODE_NAME,
        MDM_PROFESSIONAL_src.PROFESSION_RANK,
        MDM_PROFESSIONAL_src.STATUS,
        MDM_PROFESSIONAL_src.PROFESSION_STATUS_NAME,
        MDM_PROFESSIONAL_src.CREATED_BY,
        MDM_PROFESSIONAL_src.CREATED_DATE,
        MDM_PROFESSIONAL_src.UPDATED_BY,
        MDM_PROFESSIONAL_src.UPDATED_DATE,
        MDM_PROFESSIONAL_src.batch_id,
        MDM_PROFESSIONAL_src.row_id,
        MDM_PROFESSIONAL_src.update_ts
 FROM teva_ingestion.MDM_PROFESSIONAL_src
 ORDER BY MDM_PROFESSIONAL_src.batch_id
SEGMENTED BY hash(MDM_PROFESSIONAL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_RAW_DEA_src_super_b0 /*+basename(MDM_RAW_DEA_src_super)*/ 
(
 TVCMID,
 IMS_ID,
 DEA_NUMBER,
 NAME,
 ADDITIONAL_COMPANY_INFO,
 ADDRESS_LINE1,
 ADDRESS_LINE2,
 CITY,
 STATE,
 STATE_NAME,
 ZIP,
 BUSINESS_ACTIVITY_CODE,
 DRUG_SCHEDULES,
 EXPIRATION_DATE,
 BUSINESS_ACTIVITY_SUB_CODE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_RAW_DEA_src.TVCMID,
        MDM_RAW_DEA_src.IMS_ID,
        MDM_RAW_DEA_src.DEA_NUMBER,
        MDM_RAW_DEA_src.NAME,
        MDM_RAW_DEA_src.ADDITIONAL_COMPANY_INFO,
        MDM_RAW_DEA_src.ADDRESS_LINE1,
        MDM_RAW_DEA_src.ADDRESS_LINE2,
        MDM_RAW_DEA_src.CITY,
        MDM_RAW_DEA_src.STATE,
        MDM_RAW_DEA_src.STATE_NAME,
        MDM_RAW_DEA_src.ZIP,
        MDM_RAW_DEA_src.BUSINESS_ACTIVITY_CODE,
        MDM_RAW_DEA_src.DRUG_SCHEDULES,
        MDM_RAW_DEA_src.EXPIRATION_DATE,
        MDM_RAW_DEA_src.BUSINESS_ACTIVITY_SUB_CODE,
        MDM_RAW_DEA_src.CREATED_BY,
        MDM_RAW_DEA_src.CREATED_DATE,
        MDM_RAW_DEA_src.UPDATED_BY,
        MDM_RAW_DEA_src.UPDATED_DATE,
        MDM_RAW_DEA_src.batch_id,
        MDM_RAW_DEA_src.row_id,
        MDM_RAW_DEA_src.update_ts
 FROM teva_ingestion.MDM_RAW_DEA_src
 ORDER BY MDM_RAW_DEA_src.batch_id
SEGMENTED BY hash(MDM_RAW_DEA_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_REGULATION_src_super_b0 /*+basename(MDM_REGULATION_src_super)*/ 
(
 STATE_LICENSE_TYPE_ID,
 STATE_LICENSE_TYPE_NAME,
 STATE_PRIVILEGE_TYPE_ID,
 STATE_LICENSE_PRIVILEGE_TYPE_NAME,
 STATE_LICENSE_PRIVILEGE_TYPE_RANK,
 STATE_CODE,
 STATE_NAME,
 STATE_BOARD_ID,
 STATE_BOARD_NAME,
 CERTIFICATION_CODE,
 REQUIRED_SAMPLE_NON_CTRL,
 REQUIRED_SAMPLE_CTRL,
 RECEIVED_SAMPLE_NON_CTRL,
 RECEIVED_SAMPLE_CTRL,
 DISTRIBUTED_SAMPLE_NON_CTRL,
 DISTRIBUTED_SAMPLE_CTRL,
 SAMPLE_DRUG_SCHEDULE_I_FLAG,
 SAMPLE_DRUG_SCHEDULE_II_FLAG,
 SAMPLE_DRUG_SCHEDULE_III_FLAG,
 SAMPLE_DRUG_SCHEDULE_IV_FLAG,
 SAMPLE_DRUG_SCHEDULE_V_FLAG,
 SAMPLE_DRUG_SCHEDULE_VI_FLAG,
 PRESCRIBER_NON_CTRL_FLAG,
 PRESCRIBER_APP_REQUIRED_NON_CTRL_FLAG,
 PRESCRIBER_CTRL_FLAG,
 PRESCRIBER_APP_REQUIRED_CTRL_FLAG,
 PRESCRIBER_DRUG_SCHEDULE_I_FLAG,
 PRESCRIBER_DRUG_SCHEDULE_II_FLAG,
 PRESCRIBER_DRUG_SCHEDULE_III_FLAG,
 PRESCRIBER_DRUG_SCHEDULE_IV_FLAG,
 PRESCRIBER_DRUG_SCHEDULE_V_FLAG,
 PRESCRIBER_DRUG_SCHEDULE_VI_FLAG,
 SUPERVISORY_RELATIONSHIP_CODE_NON_CTRL,
 SUPERVISORY_RELATIONSHIP_CODE_CTRL,
 COLLABORATIVE_NON_CTRL,
 COLLABORATIVE_CTRL,
 INCLUSIONARY,
 EXCLUSIONARY,
 DELEGATION_NON_CTRL,
 DELEGATION_CTRL,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_REGULATION_src.STATE_LICENSE_TYPE_ID,
        MDM_REGULATION_src.STATE_LICENSE_TYPE_NAME,
        MDM_REGULATION_src.STATE_PRIVILEGE_TYPE_ID,
        MDM_REGULATION_src.STATE_LICENSE_PRIVILEGE_TYPE_NAME,
        MDM_REGULATION_src.STATE_LICENSE_PRIVILEGE_TYPE_RANK,
        MDM_REGULATION_src.STATE_CODE,
        MDM_REGULATION_src.STATE_NAME,
        MDM_REGULATION_src.STATE_BOARD_ID,
        MDM_REGULATION_src.STATE_BOARD_NAME,
        MDM_REGULATION_src.CERTIFICATION_CODE,
        MDM_REGULATION_src.REQUIRED_SAMPLE_NON_CTRL,
        MDM_REGULATION_src.REQUIRED_SAMPLE_CTRL,
        MDM_REGULATION_src.RECEIVED_SAMPLE_NON_CTRL,
        MDM_REGULATION_src.RECEIVED_SAMPLE_CTRL,
        MDM_REGULATION_src.DISTRIBUTED_SAMPLE_NON_CTRL,
        MDM_REGULATION_src.DISTRIBUTED_SAMPLE_CTRL,
        MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_I_FLAG,
        MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_II_FLAG,
        MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_III_FLAG,
        MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_IV_FLAG,
        MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_V_FLAG,
        MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_VI_FLAG,
        MDM_REGULATION_src.PRESCRIBER_NON_CTRL_FLAG,
        MDM_REGULATION_src.PRESCRIBER_APP_REQUIRED_NON_CTRL_FLAG,
        MDM_REGULATION_src.PRESCRIBER_CTRL_FLAG,
        MDM_REGULATION_src.PRESCRIBER_APP_REQUIRED_CTRL_FLAG,
        MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_I_FLAG,
        MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_II_FLAG,
        MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_III_FLAG,
        MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_IV_FLAG,
        MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_V_FLAG,
        MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_VI_FLAG,
        MDM_REGULATION_src.SUPERVISORY_RELATIONSHIP_CODE_NON_CTRL,
        MDM_REGULATION_src.SUPERVISORY_RELATIONSHIP_CODE_CTRL,
        MDM_REGULATION_src.COLLABORATIVE_NON_CTRL,
        MDM_REGULATION_src.COLLABORATIVE_CTRL,
        MDM_REGULATION_src.INCLUSIONARY,
        MDM_REGULATION_src.EXCLUSIONARY,
        MDM_REGULATION_src.DELEGATION_NON_CTRL,
        MDM_REGULATION_src.DELEGATION_CTRL,
        MDM_REGULATION_src.CREATED_BY,
        MDM_REGULATION_src.CREATED_DATE,
        MDM_REGULATION_src.UPDATED_BY,
        MDM_REGULATION_src.UPDATED_DATE,
        MDM_REGULATION_src.batch_id,
        MDM_REGULATION_src.row_id,
        MDM_REGULATION_src.update_ts
 FROM teva_ingestion.MDM_REGULATION_src
 ORDER BY MDM_REGULATION_src.batch_id
SEGMENTED BY hash(MDM_REGULATION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_RELATIONSHIP_src_super_b0 /*+basename(MDM_RELATIONSHIP_src_super)*/ 
(
 HIERARCHY_CODE,
 HIERARCHY_NAME,
 RELATIONSHIP_TYPE_CODE,
 RELATIONSHIP_TYPE_NAME,
 PARENT_TVCMID,
 CHILD_TVCMID,
 RELATIONSHIP_STATUS_CODE,
 RELATIONSHIP_STATUS_NAME,
 RELATIONSHIP_START_DATE,
 RELATIONSHIP_END_DATE,
 NOTES,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_RELATIONSHIP_src.HIERARCHY_CODE,
        MDM_RELATIONSHIP_src.HIERARCHY_NAME,
        MDM_RELATIONSHIP_src.RELATIONSHIP_TYPE_CODE,
        MDM_RELATIONSHIP_src.RELATIONSHIP_TYPE_NAME,
        MDM_RELATIONSHIP_src.PARENT_TVCMID,
        MDM_RELATIONSHIP_src.CHILD_TVCMID,
        MDM_RELATIONSHIP_src.RELATIONSHIP_STATUS_CODE,
        MDM_RELATIONSHIP_src.RELATIONSHIP_STATUS_NAME,
        MDM_RELATIONSHIP_src.RELATIONSHIP_START_DATE,
        MDM_RELATIONSHIP_src.RELATIONSHIP_END_DATE,
        MDM_RELATIONSHIP_src.NOTES,
        MDM_RELATIONSHIP_src.CREATED_BY,
        MDM_RELATIONSHIP_src.CREATED_DATE,
        MDM_RELATIONSHIP_src.UPDATED_BY,
        MDM_RELATIONSHIP_src.UPDATED_DATE,
        MDM_RELATIONSHIP_src.batch_id,
        MDM_RELATIONSHIP_src.row_id,
        MDM_RELATIONSHIP_src.update_ts
 FROM teva_ingestion.MDM_RELATIONSHIP_src
 ORDER BY MDM_RELATIONSHIP_src.batch_id
SEGMENTED BY hash(MDM_RELATIONSHIP_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_SAMPLE_ELIGIBILITY_src_super_b0 /*+basename(MDM_SAMPLE_ELIGIBILITY_src_super)*/ 
(
 TVCMID,
 SLN,
 SLN_STATE,
 SLN_STATUS_CODE,
 SLN_STATUS_DESCRIPTION,
 SLN_EXPIRATION_DATE,
 TEVA_SAMPLE_ELIGIBILITY_FLAG,
 TEVA_SCHEDULE_IV_ELIGIBILITY_FLAG,
 TEVA_SCHEDULE_V_ELIGIBILITY_FLAG,
 PROFESSION_SHORT_DESCRIPTION,
 TEVA_SPECIALTY_CODE,
 CERTIFICATION_CODE,
 CERTIFICATION_DESCRIPTION,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_SAMPLE_ELIGIBILITY_src.TVCMID,
        MDM_SAMPLE_ELIGIBILITY_src.SLN,
        MDM_SAMPLE_ELIGIBILITY_src.SLN_STATE,
        MDM_SAMPLE_ELIGIBILITY_src.SLN_STATUS_CODE,
        MDM_SAMPLE_ELIGIBILITY_src.SLN_STATUS_DESCRIPTION,
        MDM_SAMPLE_ELIGIBILITY_src.SLN_EXPIRATION_DATE,
        MDM_SAMPLE_ELIGIBILITY_src.TEVA_SAMPLE_ELIGIBILITY_FLAG,
        MDM_SAMPLE_ELIGIBILITY_src.TEVA_SCHEDULE_IV_ELIGIBILITY_FLAG,
        MDM_SAMPLE_ELIGIBILITY_src.TEVA_SCHEDULE_V_ELIGIBILITY_FLAG,
        MDM_SAMPLE_ELIGIBILITY_src.PROFESSION_SHORT_DESCRIPTION,
        MDM_SAMPLE_ELIGIBILITY_src.TEVA_SPECIALTY_CODE,
        MDM_SAMPLE_ELIGIBILITY_src.CERTIFICATION_CODE,
        MDM_SAMPLE_ELIGIBILITY_src.CERTIFICATION_DESCRIPTION,
        MDM_SAMPLE_ELIGIBILITY_src.CREATED_BY,
        MDM_SAMPLE_ELIGIBILITY_src.CREATED_DATE,
        MDM_SAMPLE_ELIGIBILITY_src.UPDATED_BY,
        MDM_SAMPLE_ELIGIBILITY_src.UPDATED_DATE,
        MDM_SAMPLE_ELIGIBILITY_src.batch_id,
        MDM_SAMPLE_ELIGIBILITY_src.row_id,
        MDM_SAMPLE_ELIGIBILITY_src.update_ts
 FROM teva_ingestion.MDM_SAMPLE_ELIGIBILITY_src
 ORDER BY MDM_SAMPLE_ELIGIBILITY_src.batch_id
SEGMENTED BY hash(MDM_SAMPLE_ELIGIBILITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_SOURCE_DETAILS_src_super_b0 /*+basename(MDM_SOURCE_DETAILS_src_super)*/ 
(
 TVCMID,
 IDENTIFIER_CODE,
 IDENTIFIER_DESCRIPTION,
 IDENTIFIER_VALUE,
 LEGACY_IDENTIFIER_CODE,
 AMA_MD_DO_FLAG,
 MAJOR_PROFESSIONAL_ACTIVITY,
 MAJOR_PROFESSIONAL_ACTIVITY_DESCRIPTION,
 HOSPITAL_HOURS,
 AMA_HOSPITAL_ID,
 AMA_HOSPITAL_DESCRIPTION,
 PRACTICE_TYPE_CODE,
 PRACTICE_TYPE_DESCRIPTION,
 EMPLOYMENT_TYPE_CODE,
 EMPLOYMENT_TYPE_DESCRIPTION,
 BIRTH_CITY,
 BIRTH_STATE,
 BIRTH_COUNTRY_CODE,
 BIRTH_COUNTRY_DESCRIPTION,
 MEDICAL_SCHOOL_CODE,
 MEDICAL_SCHOOL_DESCRIPTION,
 GRADUATION_YEAR,
 NUMBER_OF_PHYSICIAN_OFFICES,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_SOURCE_DETAILS_src.TVCMID,
        MDM_SOURCE_DETAILS_src.IDENTIFIER_CODE,
        MDM_SOURCE_DETAILS_src.IDENTIFIER_DESCRIPTION,
        MDM_SOURCE_DETAILS_src.IDENTIFIER_VALUE,
        MDM_SOURCE_DETAILS_src.LEGACY_IDENTIFIER_CODE,
        MDM_SOURCE_DETAILS_src.AMA_MD_DO_FLAG,
        MDM_SOURCE_DETAILS_src.MAJOR_PROFESSIONAL_ACTIVITY,
        MDM_SOURCE_DETAILS_src.MAJOR_PROFESSIONAL_ACTIVITY_DESCRIPTION,
        MDM_SOURCE_DETAILS_src.HOSPITAL_HOURS,
        MDM_SOURCE_DETAILS_src.AMA_HOSPITAL_ID,
        MDM_SOURCE_DETAILS_src.AMA_HOSPITAL_DESCRIPTION,
        MDM_SOURCE_DETAILS_src.PRACTICE_TYPE_CODE,
        MDM_SOURCE_DETAILS_src.PRACTICE_TYPE_DESCRIPTION,
        MDM_SOURCE_DETAILS_src.EMPLOYMENT_TYPE_CODE,
        MDM_SOURCE_DETAILS_src.EMPLOYMENT_TYPE_DESCRIPTION,
        MDM_SOURCE_DETAILS_src.BIRTH_CITY,
        MDM_SOURCE_DETAILS_src.BIRTH_STATE,
        MDM_SOURCE_DETAILS_src.BIRTH_COUNTRY_CODE,
        MDM_SOURCE_DETAILS_src.BIRTH_COUNTRY_DESCRIPTION,
        MDM_SOURCE_DETAILS_src.MEDICAL_SCHOOL_CODE,
        MDM_SOURCE_DETAILS_src.MEDICAL_SCHOOL_DESCRIPTION,
        MDM_SOURCE_DETAILS_src.GRADUATION_YEAR,
        MDM_SOURCE_DETAILS_src.NUMBER_OF_PHYSICIAN_OFFICES,
        MDM_SOURCE_DETAILS_src.CREATED_BY,
        MDM_SOURCE_DETAILS_src.CREATED_DATE,
        MDM_SOURCE_DETAILS_src.UPDATED_BY,
        MDM_SOURCE_DETAILS_src.UPDATED_DATE,
        MDM_SOURCE_DETAILS_src.batch_id,
        MDM_SOURCE_DETAILS_src.row_id,
        MDM_SOURCE_DETAILS_src.update_ts
 FROM teva_ingestion.MDM_SOURCE_DETAILS_src
 ORDER BY MDM_SOURCE_DETAILS_src.batch_id
SEGMENTED BY hash(MDM_SOURCE_DETAILS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_SPECIALTY_src_super_b0 /*+basename(MDM_SPECIALTY_src_super)*/ 
(
 TVCMID,
 SPECIALTY_CODE,
 SPECIALTY_CODE_NAME,
 SPECIALTY_RANKING,
 STATUS,
 STATUS_NAME,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_SPECIALTY_src.TVCMID,
        MDM_SPECIALTY_src.SPECIALTY_CODE,
        MDM_SPECIALTY_src.SPECIALTY_CODE_NAME,
        MDM_SPECIALTY_src.SPECIALTY_RANKING,
        MDM_SPECIALTY_src.STATUS,
        MDM_SPECIALTY_src.STATUS_NAME,
        MDM_SPECIALTY_src.CREATED_BY,
        MDM_SPECIALTY_src.CREATED_DATE,
        MDM_SPECIALTY_src.UPDATED_BY,
        MDM_SPECIALTY_src.UPDATED_DATE,
        MDM_SPECIALTY_src.batch_id,
        MDM_SPECIALTY_src.row_id,
        MDM_SPECIALTY_src.update_ts
 FROM teva_ingestion.MDM_SPECIALTY_src
 ORDER BY MDM_SPECIALTY_src.batch_id
SEGMENTED BY hash(MDM_SPECIALTY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_EMAIL_PREFERENCE_src_super_b0 /*+basename(MDM_EMAIL_PREFERENCE_src_super)*/ 
(
 TVCMID,
 EMAIL,
 VALUE,
 EFFECTIVE_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_EMAIL_PREFERENCE_src.TVCMID,
        MDM_EMAIL_PREFERENCE_src.EMAIL,
        MDM_EMAIL_PREFERENCE_src.VALUE,
        MDM_EMAIL_PREFERENCE_src.EFFECTIVE_DATE,
        MDM_EMAIL_PREFERENCE_src.CREATED_BY,
        MDM_EMAIL_PREFERENCE_src.CREATED_DATE,
        MDM_EMAIL_PREFERENCE_src.UPDATED_BY,
        MDM_EMAIL_PREFERENCE_src.UPDATED_DATE,
        MDM_EMAIL_PREFERENCE_src.batch_id,
        MDM_EMAIL_PREFERENCE_src.row_id,
        MDM_EMAIL_PREFERENCE_src.update_ts
 FROM teva_ingestion.MDM_EMAIL_PREFERENCE_src
 ORDER BY MDM_EMAIL_PREFERENCE_src.batch_id
SEGMENTED BY hash(MDM_EMAIL_PREFERENCE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.MDM_RAW_NPI_src_super_b0 /*+basename(MDM_RAW_NPI_src_super)*/ 
(
 TVCMID,
 NPI_NUMBER,
 NPI_FIRST_NAME,
 NPI_MIDDLE_NAME,
 NPI_LAST_NAME,
 PRACTICE_ADDRESS_1,
 PRACTICE_ADDRESS_2,
 PRACTICE_CITY,
 PRACTICE_STATE_NAME,
 PRACTICE_POSTAL_CODE,
 PRACTICE_COUNTRY_CODE,
 PRIMARY_TAXONOMY_CODE,
 PRIMARY_TAXONOMY_TYPE,
 PRIMARY_TAXONOMY_CLASSIFICATION,
 PRIMARY_TAXONOMY_SPECIALTY,
 IMS_SPECIALTY_CODE,
 IMS_SPECIALTY_DESCRIPTION,
 NPI_DEACTIVATION_REASON_CODE,
 NPI_DEACTIVATION_DATE,
 CREATED_BY,
 CREATED_DATE,
 UPDATED_BY,
 UPDATED_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT MDM_RAW_NPI_src.TVCMID,
        MDM_RAW_NPI_src.NPI_NUMBER,
        MDM_RAW_NPI_src.NPI_FIRST_NAME,
        MDM_RAW_NPI_src.NPI_MIDDLE_NAME,
        MDM_RAW_NPI_src.NPI_LAST_NAME,
        MDM_RAW_NPI_src.PRACTICE_ADDRESS_1,
        MDM_RAW_NPI_src.PRACTICE_ADDRESS_2,
        MDM_RAW_NPI_src.PRACTICE_CITY,
        MDM_RAW_NPI_src.PRACTICE_STATE_NAME,
        MDM_RAW_NPI_src.PRACTICE_POSTAL_CODE,
        MDM_RAW_NPI_src.PRACTICE_COUNTRY_CODE,
        MDM_RAW_NPI_src.PRIMARY_TAXONOMY_CODE,
        MDM_RAW_NPI_src.PRIMARY_TAXONOMY_TYPE,
        MDM_RAW_NPI_src.PRIMARY_TAXONOMY_CLASSIFICATION,
        MDM_RAW_NPI_src.PRIMARY_TAXONOMY_SPECIALTY,
        MDM_RAW_NPI_src.IMS_SPECIALTY_CODE,
        MDM_RAW_NPI_src.IMS_SPECIALTY_DESCRIPTION,
        MDM_RAW_NPI_src.NPI_DEACTIVATION_REASON_CODE,
        MDM_RAW_NPI_src.NPI_DEACTIVATION_DATE,
        MDM_RAW_NPI_src.CREATED_BY,
        MDM_RAW_NPI_src.CREATED_DATE,
        MDM_RAW_NPI_src.UPDATED_BY,
        MDM_RAW_NPI_src.UPDATED_DATE,
        MDM_RAW_NPI_src.batch_id,
        MDM_RAW_NPI_src.row_id,
        MDM_RAW_NPI_src.update_ts
 FROM teva_ingestion.MDM_RAW_NPI_src
 ORDER BY MDM_RAW_NPI_src.batch_id
SEGMENTED BY hash(MDM_RAW_NPI_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_MEDICAL_EVENT_VOD__C_src_super_b0 /*+basename(EXT_VV_MEDICAL_EVENT_VOD__C_src_super)*/ 
(
 active_vod__c,
 address_tva__c,
 city_tva__c,
 createdbyid,
 createddate,
 demo_led_by_tva__c,
 description_vod__c,
 end_date_vod__c,
 event_type__c,
 id,
 isdeleted,
 islocked,
 lastactivitydate,
 lastmodifiedbyid,
 lastmodifieddate,
 lastreferenceddate,
 lastvieweddate,
 location__c,
 mayedit,
 mobile_id_vod__c,
 name,
 number_of_attendees_tva__c,
 ownerid,
 primary_product__c,
 recordtypeid,
 secondary_product__c,
 start_date_vod__c,
 state_tva__c,
 status_tva__c,
 systemmodstamp,
 website__c,
 zip_tva__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_MEDICAL_EVENT_VOD__C_src.active_vod__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.address_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.city_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.createdbyid,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.createddate,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.demo_led_by_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.description_vod__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.end_date_vod__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.event_type__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.id,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.isdeleted,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.islocked,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.lastactivitydate,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.lastmodifiedbyid,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.lastmodifieddate,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.lastreferenceddate,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.lastvieweddate,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.location__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.mayedit,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.mobile_id_vod__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.name,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.number_of_attendees_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.ownerid,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.primary_product__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.recordtypeid,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.secondary_product__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.start_date_vod__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.state_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.status_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.systemmodstamp,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.website__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.zip_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.batch_id,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.row_id,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_MEDICAL_EVENT_VOD__C_src
 ORDER BY EXT_VV_MEDICAL_EVENT_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_MEDICAL_EVENT_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TW_ICS_SALES_src_super_b0 /*+basename(EXT_TW_ICS_SALES_src_super)*/ 
(
 BP_CODE,
 ORTHO_E,
 BP_NAME,
 SHIP_TO_ADDRESS,
 SHIP_TO_CITY,
 SHIP_TO_STATE,
 SHIP_TO_ZIP_CODE,
 SHIP_TO_COUNTRY,
 SHIP_TO_PHONE,
 SHIP_TO_FAX,
 SHIP_TO_EMAIL,
 BILL_TO_ADDRESS,
 BILL_TO_CITY,
 BILL_TO_STATE,
 BILL_TO_ZIP_CODE,
 BILL_TO_COUNTRY,
 BILL_TO_PHONE,
 BILL_TO_FAX,
 BILL_TO_EMAIL,
 CLASS_OF_TRADE,
 INVOICE_NUM,
 DEL_AMT,
 INVOICE_DATE,
 "24237",
 "24238",
 "24800",
 "33223",
 PACKS,
 UNIT_PRICE,
 TERRITORY,
 ORDER_TYPE_CODE,
 ORDER_TYPE_DESC,
 LOB_CODE_DESC,
 PRICE_MATRIX_DEF,
 PARENT_BP_CODE,
 PARENT_BP_DESC,
 GRAND_PARENT_BP_DESC,
 PO_NUMBER,
 UPS_NUMBER,
 ORDER_NUMBER,
 ORDER_LINE_NUMBER,
 DISC_AMT,
 WHSE_CD,
 ORDER_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TW_ICS_SALES_src.BP_CODE,
        EXT_TW_ICS_SALES_src.ORTHO_E,
        EXT_TW_ICS_SALES_src.BP_NAME,
        EXT_TW_ICS_SALES_src.SHIP_TO_ADDRESS,
        EXT_TW_ICS_SALES_src.SHIP_TO_CITY,
        EXT_TW_ICS_SALES_src.SHIP_TO_STATE,
        EXT_TW_ICS_SALES_src.SHIP_TO_ZIP_CODE,
        EXT_TW_ICS_SALES_src.SHIP_TO_COUNTRY,
        EXT_TW_ICS_SALES_src.SHIP_TO_PHONE,
        EXT_TW_ICS_SALES_src.SHIP_TO_FAX,
        EXT_TW_ICS_SALES_src.SHIP_TO_EMAIL,
        EXT_TW_ICS_SALES_src.BILL_TO_ADDRESS,
        EXT_TW_ICS_SALES_src.BILL_TO_CITY,
        EXT_TW_ICS_SALES_src.BILL_TO_STATE,
        EXT_TW_ICS_SALES_src.BILL_TO_ZIP_CODE,
        EXT_TW_ICS_SALES_src.BILL_TO_COUNTRY,
        EXT_TW_ICS_SALES_src.BILL_TO_PHONE,
        EXT_TW_ICS_SALES_src.BILL_TO_FAX,
        EXT_TW_ICS_SALES_src.BILL_TO_EMAIL,
        EXT_TW_ICS_SALES_src.CLASS_OF_TRADE,
        EXT_TW_ICS_SALES_src.INVOICE_NUM,
        EXT_TW_ICS_SALES_src.DEL_AMT,
        EXT_TW_ICS_SALES_src.INVOICE_DATE,
        EXT_TW_ICS_SALES_src."24237",
        EXT_TW_ICS_SALES_src."24238",
        EXT_TW_ICS_SALES_src."24800",
        EXT_TW_ICS_SALES_src."33223",
        EXT_TW_ICS_SALES_src.PACKS,
        EXT_TW_ICS_SALES_src.UNIT_PRICE,
        EXT_TW_ICS_SALES_src.TERRITORY,
        EXT_TW_ICS_SALES_src.ORDER_TYPE_CODE,
        EXT_TW_ICS_SALES_src.ORDER_TYPE_DESC,
        EXT_TW_ICS_SALES_src.LOB_CODE_DESC,
        EXT_TW_ICS_SALES_src.PRICE_MATRIX_DEF,
        EXT_TW_ICS_SALES_src.PARENT_BP_CODE,
        EXT_TW_ICS_SALES_src.PARENT_BP_DESC,
        EXT_TW_ICS_SALES_src.GRAND_PARENT_BP_DESC,
        EXT_TW_ICS_SALES_src.PO_NUMBER,
        EXT_TW_ICS_SALES_src.UPS_NUMBER,
        EXT_TW_ICS_SALES_src.ORDER_NUMBER,
        EXT_TW_ICS_SALES_src.ORDER_LINE_NUMBER,
        EXT_TW_ICS_SALES_src.DISC_AMT,
        EXT_TW_ICS_SALES_src.WHSE_CD,
        EXT_TW_ICS_SALES_src.ORDER_DATE,
        EXT_TW_ICS_SALES_src.batch_id,
        EXT_TW_ICS_SALES_src.row_id,
        EXT_TW_ICS_SALES_src.update_ts
 FROM teva_ingestion.EXT_TW_ICS_SALES_src
 ORDER BY EXT_TW_ICS_SALES_src.batch_id
SEGMENTED BY hash(EXT_TW_ICS_SALES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TEVA_AHM_INTERACTIONS_src_super_b0 /*+basename(EXT_TEVA_AHM_INTERACTIONS_src_super)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 interactionname,
 interactioncategory,
 interactiontype,
 locationtype,
 interactionstatus,
 interactionstartdate,
 interactionenddate,
 interactionstarttime,
 interactionendtime,
 interactiontimezone,
 interactionstartdatetime,
 interactionenddatetime,
 requestingregion,
 parentinteractionid,
 parentinteractioncode,
 employeeid,
 clientemployeeid,
 employeefirstname,
 employeelastname,
 employeeorganizationunitid,
 employeeorganizationunitcode,
 employeeorganizationunitname,
 venueid,
 clientvenueid,
 venuename,
 venueaddressline1,
 venueaddressline2,
 venueaddressline3,
 venuecity,
 venuestateprovince,
 venuepostalcode,
 venuecountry,
 venueregion,
 totalestimatedparticipantcount,
 financialcloseddate,
 product1name,
 product1id,
 product1clientid,
 topic1name,
 topic1id,
 topic1clientid,
 product2name,
 product2id,
 product2clientid,
 topic2name,
 topic2id,
 topic2clientid,
 product3name,
 product3id,
 product3clientid,
 topic3name,
 topic3id,
 topic3clientid,
 product4name,
 product4id,
 product4clientid,
 topic4name,
 topic4id,
 topic4clientid,
 product5name,
 product5id,
 product5clientid,
 topic5name,
 topic5id,
 topic5clientid,
 reservedfield1,
 reservedfield2,
 reservedfield3,
 reservedfield4,
 reservedfield5,
 reservedfield6,
 reservedfield7,
 reservedfield8,
 reservedfield9,
 reservedfield10,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TEVA_AHM_INTERACTIONS_src.sourcesystemid,
        EXT_TEVA_AHM_INTERACTIONS_src.batchid,
        EXT_TEVA_AHM_INTERACTIONS_src.batchdate,
        EXT_TEVA_AHM_INTERACTIONS_src.transactionstatuscode,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionid,
        EXT_TEVA_AHM_INTERACTIONS_src.interactioncode,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionname,
        EXT_TEVA_AHM_INTERACTIONS_src.interactioncategory,
        EXT_TEVA_AHM_INTERACTIONS_src.interactiontype,
        EXT_TEVA_AHM_INTERACTIONS_src.locationtype,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionstatus,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionstartdate,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionenddate,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionstarttime,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionendtime,
        EXT_TEVA_AHM_INTERACTIONS_src.interactiontimezone,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionstartdatetime,
        EXT_TEVA_AHM_INTERACTIONS_src.interactionenddatetime,
        EXT_TEVA_AHM_INTERACTIONS_src.requestingregion,
        EXT_TEVA_AHM_INTERACTIONS_src.parentinteractionid,
        EXT_TEVA_AHM_INTERACTIONS_src.parentinteractioncode,
        EXT_TEVA_AHM_INTERACTIONS_src.employeeid,
        EXT_TEVA_AHM_INTERACTIONS_src.clientemployeeid,
        EXT_TEVA_AHM_INTERACTIONS_src.employeefirstname,
        EXT_TEVA_AHM_INTERACTIONS_src.employeelastname,
        EXT_TEVA_AHM_INTERACTIONS_src.employeeorganizationunitid,
        EXT_TEVA_AHM_INTERACTIONS_src.employeeorganizationunitcode,
        EXT_TEVA_AHM_INTERACTIONS_src.employeeorganizationunitname,
        EXT_TEVA_AHM_INTERACTIONS_src.venueid,
        EXT_TEVA_AHM_INTERACTIONS_src.clientvenueid,
        EXT_TEVA_AHM_INTERACTIONS_src.venuename,
        EXT_TEVA_AHM_INTERACTIONS_src.venueaddressline1,
        EXT_TEVA_AHM_INTERACTIONS_src.venueaddressline2,
        EXT_TEVA_AHM_INTERACTIONS_src.venueaddressline3,
        EXT_TEVA_AHM_INTERACTIONS_src.venuecity,
        EXT_TEVA_AHM_INTERACTIONS_src.venuestateprovince,
        EXT_TEVA_AHM_INTERACTIONS_src.venuepostalcode,
        EXT_TEVA_AHM_INTERACTIONS_src.venuecountry,
        EXT_TEVA_AHM_INTERACTIONS_src.venueregion,
        EXT_TEVA_AHM_INTERACTIONS_src.totalestimatedparticipantcount,
        EXT_TEVA_AHM_INTERACTIONS_src.financialcloseddate,
        EXT_TEVA_AHM_INTERACTIONS_src.product1name,
        EXT_TEVA_AHM_INTERACTIONS_src.product1id,
        EXT_TEVA_AHM_INTERACTIONS_src.product1clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.topic1name,
        EXT_TEVA_AHM_INTERACTIONS_src.topic1id,
        EXT_TEVA_AHM_INTERACTIONS_src.topic1clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.product2name,
        EXT_TEVA_AHM_INTERACTIONS_src.product2id,
        EXT_TEVA_AHM_INTERACTIONS_src.product2clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.topic2name,
        EXT_TEVA_AHM_INTERACTIONS_src.topic2id,
        EXT_TEVA_AHM_INTERACTIONS_src.topic2clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.product3name,
        EXT_TEVA_AHM_INTERACTIONS_src.product3id,
        EXT_TEVA_AHM_INTERACTIONS_src.product3clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.topic3name,
        EXT_TEVA_AHM_INTERACTIONS_src.topic3id,
        EXT_TEVA_AHM_INTERACTIONS_src.topic3clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.product4name,
        EXT_TEVA_AHM_INTERACTIONS_src.product4id,
        EXT_TEVA_AHM_INTERACTIONS_src.product4clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.topic4name,
        EXT_TEVA_AHM_INTERACTIONS_src.topic4id,
        EXT_TEVA_AHM_INTERACTIONS_src.topic4clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.product5name,
        EXT_TEVA_AHM_INTERACTIONS_src.product5id,
        EXT_TEVA_AHM_INTERACTIONS_src.product5clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.topic5name,
        EXT_TEVA_AHM_INTERACTIONS_src.topic5id,
        EXT_TEVA_AHM_INTERACTIONS_src.topic5clientid,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield1,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield2,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield3,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield4,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield5,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield6,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield7,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield8,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield9,
        EXT_TEVA_AHM_INTERACTIONS_src.reservedfield10,
        EXT_TEVA_AHM_INTERACTIONS_src.batch_id,
        EXT_TEVA_AHM_INTERACTIONS_src.row_id,
        EXT_TEVA_AHM_INTERACTIONS_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_INTERACTIONS_src
 ORDER BY EXT_TEVA_AHM_INTERACTIONS_src.batch_id
SEGMENTED BY hash(EXT_TEVA_AHM_INTERACTIONS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TEVA_AHM_PARTICIPANT_src_super_b0 /*+basename(EXT_TEVA_AHM_PARTICIPANT_src_super)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 participantid,
 clientcustomerid,
 participanttype,
 firstname,
 middlename,
 lastname,
 suffix,
 professionaldesignation,
 primaryspecialty,
 organizationname,
 npinumber,
 addressid,
 clientaddressid,
 addressline1,
 addressline2,
 addressline3,
 addresscity,
 addressstateprovince,
 addresspostalcode,
 addresspostalcodeextension,
 addresscountry,
 region,
 primarystatelicensestate,
 primarystatelicensenumber,
 attended,
 mealconsumed,
 contractid,
 clientcontractid,
 contractname,
 contractcategory,
 contractsubcategory,
 contractclassification,
 contracttier,
 contracteffectivedate,
 contractexpirationdate,
 contracttotalvalue,
 reservedfield1,
 reservedfield2,
 reservedfield3,
 reservedfield4,
 reservedfield5,
 reservedfield6,
 reservedfield7,
 reservedfield8,
 reservedfield9,
 reservedfield10,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TEVA_AHM_PARTICIPANT_src.sourcesystemid,
        EXT_TEVA_AHM_PARTICIPANT_src.batchid,
        EXT_TEVA_AHM_PARTICIPANT_src.batchdate,
        EXT_TEVA_AHM_PARTICIPANT_src.transactionstatuscode,
        EXT_TEVA_AHM_PARTICIPANT_src.interactionid,
        EXT_TEVA_AHM_PARTICIPANT_src.interactioncode,
        EXT_TEVA_AHM_PARTICIPANT_src.participantid,
        EXT_TEVA_AHM_PARTICIPANT_src.clientcustomerid,
        EXT_TEVA_AHM_PARTICIPANT_src.participanttype,
        EXT_TEVA_AHM_PARTICIPANT_src.firstname,
        EXT_TEVA_AHM_PARTICIPANT_src.middlename,
        EXT_TEVA_AHM_PARTICIPANT_src.lastname,
        EXT_TEVA_AHM_PARTICIPANT_src.suffix,
        EXT_TEVA_AHM_PARTICIPANT_src.professionaldesignation,
        EXT_TEVA_AHM_PARTICIPANT_src.primaryspecialty,
        EXT_TEVA_AHM_PARTICIPANT_src.organizationname,
        EXT_TEVA_AHM_PARTICIPANT_src.npinumber,
        EXT_TEVA_AHM_PARTICIPANT_src.addressid,
        EXT_TEVA_AHM_PARTICIPANT_src.clientaddressid,
        EXT_TEVA_AHM_PARTICIPANT_src.addressline1,
        EXT_TEVA_AHM_PARTICIPANT_src.addressline2,
        EXT_TEVA_AHM_PARTICIPANT_src.addressline3,
        EXT_TEVA_AHM_PARTICIPANT_src.addresscity,
        EXT_TEVA_AHM_PARTICIPANT_src.addressstateprovince,
        EXT_TEVA_AHM_PARTICIPANT_src.addresspostalcode,
        EXT_TEVA_AHM_PARTICIPANT_src.addresspostalcodeextension,
        EXT_TEVA_AHM_PARTICIPANT_src.addresscountry,
        EXT_TEVA_AHM_PARTICIPANT_src.region,
        EXT_TEVA_AHM_PARTICIPANT_src.primarystatelicensestate,
        EXT_TEVA_AHM_PARTICIPANT_src.primarystatelicensenumber,
        EXT_TEVA_AHM_PARTICIPANT_src.attended,
        EXT_TEVA_AHM_PARTICIPANT_src.mealconsumed,
        EXT_TEVA_AHM_PARTICIPANT_src.contractid,
        EXT_TEVA_AHM_PARTICIPANT_src.clientcontractid,
        EXT_TEVA_AHM_PARTICIPANT_src.contractname,
        EXT_TEVA_AHM_PARTICIPANT_src.contractcategory,
        EXT_TEVA_AHM_PARTICIPANT_src.contractsubcategory,
        EXT_TEVA_AHM_PARTICIPANT_src.contractclassification,
        EXT_TEVA_AHM_PARTICIPANT_src.contracttier,
        EXT_TEVA_AHM_PARTICIPANT_src.contracteffectivedate,
        EXT_TEVA_AHM_PARTICIPANT_src.contractexpirationdate,
        EXT_TEVA_AHM_PARTICIPANT_src.contracttotalvalue,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield1,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield2,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield3,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield4,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield5,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield6,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield7,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield8,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield9,
        EXT_TEVA_AHM_PARTICIPANT_src.reservedfield10,
        EXT_TEVA_AHM_PARTICIPANT_src.batch_id,
        EXT_TEVA_AHM_PARTICIPANT_src.row_id,
        EXT_TEVA_AHM_PARTICIPANT_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_PARTICIPANT_src
 ORDER BY EXT_TEVA_AHM_PARTICIPANT_src.batch_id
SEGMENTED BY hash(EXT_TEVA_AHM_PARTICIPANT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src_super_b0 /*+basename(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src_super)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 particpantcategoryid,
 categorytype,
 totalattendedcount,
 totalmealconsumedcount,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.sourcesystemid,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batchid,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batchdate,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.transactionstatuscode,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.interactionid,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.interactioncode,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.particpantcategoryid,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.categorytype,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.totalattendedcount,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.totalmealconsumedcount,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batch_id,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.row_id,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src
 ORDER BY EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batch_id
SEGMENTED BY hash(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TEVA_AHM_EXPENSE_src_super_b0 /*+basename(EXT_TEVA_AHM_EXPENSE_src_super)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 spendid,
 clientspendid,
 spendamount,
 spendcurrency,
 spenddate,
 spendtype,
 spendpurpose,
 traveldestinationcity,
 traveldestinationstateprovince,
 traveldestinationcountry,
 spenddescription,
 taxincludedindicator,
 taxamount,
 taxrate,
 recipientid,
 clientrecipientid,
 participantid,
 recipientfirstname,
 recipientmiddlename,
 recipientlastname,
 recipientsuffix,
 recipientprofessionaldesignation,
 recipientprimaryspecialty,
 recipientorganizationname,
 recipientnpinumber,
 recipientaddressid,
 recipientclientaddressid,
 recipientaddressline1,
 recipientaddressline2,
 recipientaddressline3,
 recipientaddresscity,
 recipientaddressstateprovince,
 recipientaddresspostalcode,
 recipientaddresspostalcodeextension,
 recipientaddresscountry,
 recipientprimarystatelicensestate,
 recipientprimarystatelicensenumber,
 thirdpartyrecipientindicator,
 thirdpartyrecipientid,
 thirdpartyclientrecipientid,
 thirdpartyrecipientname,
 thirdpartycoveredrecipientindicator,
 paymentid,
 clientpaymentid,
 paymentdate,
 paymentmethod,
 paymentreferencenumber,
 paymentstatus,
 reservedfield1,
 reservedfield2,
 reservedfield3,
 reservedfield4,
 reservedfield5,
 reservedfield6,
 reservedfield7,
 reservedfield8,
 reservedfield9,
 reservedfield10,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TEVA_AHM_EXPENSE_src.sourcesystemid,
        EXT_TEVA_AHM_EXPENSE_src.batchid,
        EXT_TEVA_AHM_EXPENSE_src.batchdate,
        EXT_TEVA_AHM_EXPENSE_src.transactionstatuscode,
        EXT_TEVA_AHM_EXPENSE_src.interactionid,
        EXT_TEVA_AHM_EXPENSE_src.interactioncode,
        EXT_TEVA_AHM_EXPENSE_src.spendid,
        EXT_TEVA_AHM_EXPENSE_src.clientspendid,
        EXT_TEVA_AHM_EXPENSE_src.spendamount,
        EXT_TEVA_AHM_EXPENSE_src.spendcurrency,
        EXT_TEVA_AHM_EXPENSE_src.spenddate,
        EXT_TEVA_AHM_EXPENSE_src.spendtype,
        EXT_TEVA_AHM_EXPENSE_src.spendpurpose,
        EXT_TEVA_AHM_EXPENSE_src.traveldestinationcity,
        EXT_TEVA_AHM_EXPENSE_src.traveldestinationstateprovince,
        EXT_TEVA_AHM_EXPENSE_src.traveldestinationcountry,
        EXT_TEVA_AHM_EXPENSE_src.spenddescription,
        EXT_TEVA_AHM_EXPENSE_src.taxincludedindicator,
        EXT_TEVA_AHM_EXPENSE_src.taxamount,
        EXT_TEVA_AHM_EXPENSE_src.taxrate,
        EXT_TEVA_AHM_EXPENSE_src.recipientid,
        EXT_TEVA_AHM_EXPENSE_src.clientrecipientid,
        EXT_TEVA_AHM_EXPENSE_src.participantid,
        EXT_TEVA_AHM_EXPENSE_src.recipientfirstname,
        EXT_TEVA_AHM_EXPENSE_src.recipientmiddlename,
        EXT_TEVA_AHM_EXPENSE_src.recipientlastname,
        EXT_TEVA_AHM_EXPENSE_src.recipientsuffix,
        EXT_TEVA_AHM_EXPENSE_src.recipientprofessionaldesignation,
        EXT_TEVA_AHM_EXPENSE_src.recipientprimaryspecialty,
        EXT_TEVA_AHM_EXPENSE_src.recipientorganizationname,
        EXT_TEVA_AHM_EXPENSE_src.recipientnpinumber,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddressid,
        EXT_TEVA_AHM_EXPENSE_src.recipientclientaddressid,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddressline1,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddressline2,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddressline3,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddresscity,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddressstateprovince,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddresspostalcode,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddresspostalcodeextension,
        EXT_TEVA_AHM_EXPENSE_src.recipientaddresscountry,
        EXT_TEVA_AHM_EXPENSE_src.recipientprimarystatelicensestate,
        EXT_TEVA_AHM_EXPENSE_src.recipientprimarystatelicensenumber,
        EXT_TEVA_AHM_EXPENSE_src.thirdpartyrecipientindicator,
        EXT_TEVA_AHM_EXPENSE_src.thirdpartyrecipientid,
        EXT_TEVA_AHM_EXPENSE_src.thirdpartyclientrecipientid,
        EXT_TEVA_AHM_EXPENSE_src.thirdpartyrecipientname,
        EXT_TEVA_AHM_EXPENSE_src.thirdpartycoveredrecipientindicator,
        EXT_TEVA_AHM_EXPENSE_src.paymentid,
        EXT_TEVA_AHM_EXPENSE_src.clientpaymentid,
        EXT_TEVA_AHM_EXPENSE_src.paymentdate,
        EXT_TEVA_AHM_EXPENSE_src.paymentmethod,
        EXT_TEVA_AHM_EXPENSE_src.paymentreferencenumber,
        EXT_TEVA_AHM_EXPENSE_src.paymentstatus,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield1,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield2,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield3,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield4,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield5,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield6,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield7,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield8,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield9,
        EXT_TEVA_AHM_EXPENSE_src.reservedfield10,
        EXT_TEVA_AHM_EXPENSE_src.batch_id,
        EXT_TEVA_AHM_EXPENSE_src.row_id,
        EXT_TEVA_AHM_EXPENSE_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_EXPENSE_src
 ORDER BY EXT_TEVA_AHM_EXPENSE_src.batch_id
SEGMENTED BY hash(EXT_TEVA_AHM_EXPENSE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src_super_b0 /*+basename(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src_super)*/ 
(
 week_end_date,
 practice_name,
 practice_address_line_1,
 pracitce_address_line_2,
 city,
 state,
 zip_code,
 provider_first_name,
 provider_last_name,
 npi,
 specialty_1,
 specialty_2,
 total_cml_patients_with_poor_response_to_treatment,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.week_end_date,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.practice_name,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.practice_address_line_1,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.pracitce_address_line_2,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.city,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.state,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.zip_code,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.provider_first_name,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.provider_last_name,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.npi,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.specialty_1,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.specialty_2,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.total_cml_patients_with_poor_response_to_treatment,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.batch_id,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.row_id,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.update_ts
 FROM teva_ingestion.EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src
 ORDER BY EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.batch_id
SEGMENTED BY hash(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TW_BIOLOGICS_HUB_src_super_b0 /*+basename(EXT_TW_BIOLOGICS_HUB_src_super)*/ 
(
 HUB_ID,
 SP_ID,
 PORTAL_ID,
 REFERRAL_DATE,
 REFERRAL_RECEIVED_DATE,
 REFERRAL_SOURCE,
 REFERRAL_METHOD,
 REFERRAL_TYPE,
 BILLING_METHOD,
 PATIENT_AUTH,
 ORDER_CREATE_DATE,
 PATIENT_STATUS,
 BV_DATE,
 EFFECTIVE_DATE,
 PAYOR_RANK,
 PAYOR_TYPE,
 PAYOR,
 PLAN_NAME,
 COVERED_MAJOR_MEDICAL,
 DEDUCTIBLE_APPLIES_PARAGARD,
 J7300_REIMBURSEMENT,
 BUNDLED_SERVICES,
 PBM,
 COVERED_PHARMACY,
 REJECTION_CODE,
 COVERAGE_TYPE,
 LOW_PHARM_REIMBURSE,
 LOW_PHARM_REIMBURSE_AMOUNT,
 PA_REQUIRED,
 PA_TYPE,
 PA_CONTACT,
 PA_PHONE,
 PA_FAX,
 BV_DATE_2,
 EFFECTIVE_DATE_2,
 PAYOR_RANK_2,
 PAYOR_TYPE_2,
 PAYOR_2,
 PLAN_NAME_2,
 COVERED_MAJOR_MEDICAL_2,
 DEDUCTIBLE_APPLIES_PARAGARD_2,
 J7300_REIMBURSEMENT_2,
 BUNDLED_SERVICES_2,
 PBM_2,
 COVERED_PHARMACY_2,
 REJECTION_CODE_2,
 COVERAGE_TYPE_2,
 LOW_PHARM_REIMBURSE_2,
 LOW_PHARM_REIMBURSE_AMOUNT_2,
 PA_REQUIRED_2,
 PA_TYPE_2,
 PA_CONTACT_2,
 PA_PHONE_2,
 PA_FAX_2,
 BV_DATE_3,
 EFFECTIVE_DATE_3,
 PAYOR_RANK_3,
 PAYOR_TYPE_3,
 PAYOR_3,
 PLAN_NAME_3,
 COVERED_MAJOR_MEDICAL_3,
 DEDUCTIBLE_APPLIES_PARAGARD_3,
 J7300_REIMBURSEMENT_3,
 BUNDLED_SERVICES_3,
 PBM_3,
 COVERED_PHARMACY_3,
 REJECTION_CODE_3,
 COVERAGE_TYPE_3,
 LOW_PHARM_REIMBURSE_3,
 LOW_PHARM_REIMBURSE_AMOUNT_3,
 PA_REQUIRED_3,
 PA_TYPE_3,
 PA_CONTACT_3,
 PA_PHONE_3,
 PA_FAX_3,
 COPAY,
 TRIAGE_DATE,
 SP_SHIP_DATE,
 REPLACEMENT_FLAG,
 INSERTION_MEDICAID,
 MEDICAID_RETURN_DATE_CALL,
 MEDICAID_RETURN_REQUEST_DATE,
 MEDICAID_REQUEST_REASON,
 MEDICAID_RETURN_DATE,
 PH_ID,
 NPI,
 PHYSICIAN_NAME,
 PRACTICE_NAME,
 PH_ADDRESS,
 PH_CITY,
 PH_STATE,
 PH_ZIP,
 PH_PHONE,
 PH_FAX,
 DISC_DATE,
 DISCHARGE_REASON,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TW_BIOLOGICS_HUB_src.HUB_ID,
        EXT_TW_BIOLOGICS_HUB_src.SP_ID,
        EXT_TW_BIOLOGICS_HUB_src.PORTAL_ID,
        EXT_TW_BIOLOGICS_HUB_src.REFERRAL_DATE,
        EXT_TW_BIOLOGICS_HUB_src.REFERRAL_RECEIVED_DATE,
        EXT_TW_BIOLOGICS_HUB_src.REFERRAL_SOURCE,
        EXT_TW_BIOLOGICS_HUB_src.REFERRAL_METHOD,
        EXT_TW_BIOLOGICS_HUB_src.REFERRAL_TYPE,
        EXT_TW_BIOLOGICS_HUB_src.BILLING_METHOD,
        EXT_TW_BIOLOGICS_HUB_src.PATIENT_AUTH,
        EXT_TW_BIOLOGICS_HUB_src.ORDER_CREATE_DATE,
        EXT_TW_BIOLOGICS_HUB_src.PATIENT_STATUS,
        EXT_TW_BIOLOGICS_HUB_src.BV_DATE,
        EXT_TW_BIOLOGICS_HUB_src.EFFECTIVE_DATE,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_RANK,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_TYPE,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR,
        EXT_TW_BIOLOGICS_HUB_src.PLAN_NAME,
        EXT_TW_BIOLOGICS_HUB_src.COVERED_MAJOR_MEDICAL,
        EXT_TW_BIOLOGICS_HUB_src.DEDUCTIBLE_APPLIES_PARAGARD,
        EXT_TW_BIOLOGICS_HUB_src.J7300_REIMBURSEMENT,
        EXT_TW_BIOLOGICS_HUB_src.BUNDLED_SERVICES,
        EXT_TW_BIOLOGICS_HUB_src.PBM,
        EXT_TW_BIOLOGICS_HUB_src.COVERED_PHARMACY,
        EXT_TW_BIOLOGICS_HUB_src.REJECTION_CODE,
        EXT_TW_BIOLOGICS_HUB_src.COVERAGE_TYPE,
        EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE,
        EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_AMOUNT,
        EXT_TW_BIOLOGICS_HUB_src.PA_REQUIRED,
        EXT_TW_BIOLOGICS_HUB_src.PA_TYPE,
        EXT_TW_BIOLOGICS_HUB_src.PA_CONTACT,
        EXT_TW_BIOLOGICS_HUB_src.PA_PHONE,
        EXT_TW_BIOLOGICS_HUB_src.PA_FAX,
        EXT_TW_BIOLOGICS_HUB_src.BV_DATE_2,
        EXT_TW_BIOLOGICS_HUB_src.EFFECTIVE_DATE_2,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_RANK_2,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_TYPE_2,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_2,
        EXT_TW_BIOLOGICS_HUB_src.PLAN_NAME_2,
        EXT_TW_BIOLOGICS_HUB_src.COVERED_MAJOR_MEDICAL_2,
        EXT_TW_BIOLOGICS_HUB_src.DEDUCTIBLE_APPLIES_PARAGARD_2,
        EXT_TW_BIOLOGICS_HUB_src.J7300_REIMBURSEMENT_2,
        EXT_TW_BIOLOGICS_HUB_src.BUNDLED_SERVICES_2,
        EXT_TW_BIOLOGICS_HUB_src.PBM_2,
        EXT_TW_BIOLOGICS_HUB_src.COVERED_PHARMACY_2,
        EXT_TW_BIOLOGICS_HUB_src.REJECTION_CODE_2,
        EXT_TW_BIOLOGICS_HUB_src.COVERAGE_TYPE_2,
        EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_2,
        EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_AMOUNT_2,
        EXT_TW_BIOLOGICS_HUB_src.PA_REQUIRED_2,
        EXT_TW_BIOLOGICS_HUB_src.PA_TYPE_2,
        EXT_TW_BIOLOGICS_HUB_src.PA_CONTACT_2,
        EXT_TW_BIOLOGICS_HUB_src.PA_PHONE_2,
        EXT_TW_BIOLOGICS_HUB_src.PA_FAX_2,
        EXT_TW_BIOLOGICS_HUB_src.BV_DATE_3,
        EXT_TW_BIOLOGICS_HUB_src.EFFECTIVE_DATE_3,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_RANK_3,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_TYPE_3,
        EXT_TW_BIOLOGICS_HUB_src.PAYOR_3,
        EXT_TW_BIOLOGICS_HUB_src.PLAN_NAME_3,
        EXT_TW_BIOLOGICS_HUB_src.COVERED_MAJOR_MEDICAL_3,
        EXT_TW_BIOLOGICS_HUB_src.DEDUCTIBLE_APPLIES_PARAGARD_3,
        EXT_TW_BIOLOGICS_HUB_src.J7300_REIMBURSEMENT_3,
        EXT_TW_BIOLOGICS_HUB_src.BUNDLED_SERVICES_3,
        EXT_TW_BIOLOGICS_HUB_src.PBM_3,
        EXT_TW_BIOLOGICS_HUB_src.COVERED_PHARMACY_3,
        EXT_TW_BIOLOGICS_HUB_src.REJECTION_CODE_3,
        EXT_TW_BIOLOGICS_HUB_src.COVERAGE_TYPE_3,
        EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_3,
        EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_AMOUNT_3,
        EXT_TW_BIOLOGICS_HUB_src.PA_REQUIRED_3,
        EXT_TW_BIOLOGICS_HUB_src.PA_TYPE_3,
        EXT_TW_BIOLOGICS_HUB_src.PA_CONTACT_3,
        EXT_TW_BIOLOGICS_HUB_src.PA_PHONE_3,
        EXT_TW_BIOLOGICS_HUB_src.PA_FAX_3,
        EXT_TW_BIOLOGICS_HUB_src.COPAY,
        EXT_TW_BIOLOGICS_HUB_src.TRIAGE_DATE,
        EXT_TW_BIOLOGICS_HUB_src.SP_SHIP_DATE,
        EXT_TW_BIOLOGICS_HUB_src.REPLACEMENT_FLAG,
        EXT_TW_BIOLOGICS_HUB_src.INSERTION_MEDICAID,
        EXT_TW_BIOLOGICS_HUB_src.MEDICAID_RETURN_DATE_CALL,
        EXT_TW_BIOLOGICS_HUB_src.MEDICAID_RETURN_REQUEST_DATE,
        EXT_TW_BIOLOGICS_HUB_src.MEDICAID_REQUEST_REASON,
        EXT_TW_BIOLOGICS_HUB_src.MEDICAID_RETURN_DATE,
        EXT_TW_BIOLOGICS_HUB_src.PH_ID,
        EXT_TW_BIOLOGICS_HUB_src.NPI,
        EXT_TW_BIOLOGICS_HUB_src.PHYSICIAN_NAME,
        EXT_TW_BIOLOGICS_HUB_src.PRACTICE_NAME,
        EXT_TW_BIOLOGICS_HUB_src.PH_ADDRESS,
        EXT_TW_BIOLOGICS_HUB_src.PH_CITY,
        EXT_TW_BIOLOGICS_HUB_src.PH_STATE,
        EXT_TW_BIOLOGICS_HUB_src.PH_ZIP,
        EXT_TW_BIOLOGICS_HUB_src.PH_PHONE,
        EXT_TW_BIOLOGICS_HUB_src.PH_FAX,
        EXT_TW_BIOLOGICS_HUB_src.DISC_DATE,
        EXT_TW_BIOLOGICS_HUB_src.DISCHARGE_REASON,
        EXT_TW_BIOLOGICS_HUB_src.batch_id,
        EXT_TW_BIOLOGICS_HUB_src.row_id,
        EXT_TW_BIOLOGICS_HUB_src.update_ts
 FROM teva_ingestion.EXT_TW_BIOLOGICS_HUB_src
 ORDER BY EXT_TW_BIOLOGICS_HUB_src.batch_id
SEGMENTED BY hash(EXT_TW_BIOLOGICS_HUB_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src_super_b0 /*+basename(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src_super)*/ 
(
 trans_type,
 claim_trans_id,
 original_claim_trans_id,
 date_of_fill,
 date_written,
 days_supply,
 ndc_drug_code,
 daw,
 drug_title,
 drug_strength_and_form,
 fill_number_code,
 quantity_disp,
 auth_refills,
 other_coverage_code,
 previous_other_payer_id,
 group_number,
 serial_id,
 gender,
 age,
 date_processed,
 pharmacy_chain,
 ncpdp,
 pharmacy_chain_name,
 pharmacy_name,
 pharmacy_address,
 pharmacy_address2,
 pharmacy_city,
 pharmacy_state,
 pharmacy_zip,
 pharmacy_phone,
 pharmacy_npi,
 hcp_dea,
 hcp_npi,
 hcp_name,
 hcp_address,
 hcp_address2,
 hcp_city,
 hcp_state,
 hcp_zip,
 benefit_amount,
 patient_expense,
 submitted_cost,
 pharmacy_fee,
 amount_due,
 calc_awp,
 create_date,
 occ_payment_type,
 admin_hcp_npi,
 admin_hcp_name,
 admin_hcp_address,
 admin_hcp_address2,
 admin_hcp_city,
 admin_hcp_state,
 admin_hcp_zip,
 claim_type,
 administration_flag,
 soc_name,
 soc_phone,
 soc_fax,
 soc_address,
 soc_city,
 soc_state,
 soc_zip,
 soc_id,
 soc_npi,
 payer_name,
 cpt_code,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.trans_type,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.claim_trans_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.original_claim_trans_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_of_fill,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_written,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.days_supply,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.ndc_drug_code,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.daw,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.drug_title,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.drug_strength_and_form,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.fill_number_code,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.quantity_disp,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.auth_refills,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.other_coverage_code,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.previous_other_payer_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.group_number,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.serial_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.gender,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.age,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_processed,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_chain,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.ncpdp,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_chain_name,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_name,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_address,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_address2,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_city,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_state,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_zip,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_phone,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_npi,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_dea,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_npi,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_name,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_address,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_address2,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_city,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_state,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_zip,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.benefit_amount,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.patient_expense,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.submitted_cost,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_fee,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.amount_due,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.calc_awp,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.create_date,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.occ_payment_type,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_npi,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_name,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_address,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_address2,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_city,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_state,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_zip,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.claim_type,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.administration_flag,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_name,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_phone,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_fax,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_address,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_city,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_state,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_zip,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_npi,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.payer_name,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.cpt_code,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.batch_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.row_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src
 ORDER BY EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DX_CLAIMS_src_super_b0 /*+basename(EXT_DX_CLAIMS_src_super)*/ 
(
 ims_rxer_id,
 npi,
 g244_clm_cnt_mth_01,
 g244_clm_cnt_mth_02,
 g244_clm_cnt_mth_03,
 g244_clm_cnt_mth_04,
 g244_clm_cnt_mth_05,
 g244_clm_cnt_mth_06,
 g244_clm_cnt_mth_07,
 g244_clm_cnt_mth_08,
 g244_clm_cnt_mth_09,
 g244_clm_cnt_mth_10,
 g244_clm_cnt_mth_11,
 g244_clm_cnt_mth_12,
 g244_pat_cnt_mth_01,
 g244_pat_cnt_mth_02,
 g244_pat_cnt_mth_03,
 g244_pat_cnt_mth_04,
 g244_pat_cnt_mth_05,
 g244_pat_cnt_mth_06,
 g244_pat_cnt_mth_07,
 g244_pat_cnt_mth_08,
 g244_pat_cnt_mth_09,
 g244_pat_cnt_mth_10,
 g244_pat_cnt_mth_11,
 g244_pat_cnt_mth_12,
 g2401_clm_cnt_mth_01,
 g2401_clm_cnt_mth_02,
 g2401_clm_cnt_mth_03,
 g2401_clm_cnt_mth_04,
 g2401_clm_cnt_mth_05,
 g2401_clm_cnt_mth_06,
 g2401_clm_cnt_mth_07,
 g2401_clm_cnt_mth_08,
 g2401_clm_cnt_mth_09,
 g2401_clm_cnt_mth_10,
 g2401_clm_cnt_mth_11,
 g2401_clm_cnt_mth_12,
 g2401_pat_cnt_mth_01,
 g2401_pat_cnt_mth_02,
 g2401_pat_cnt_mth_03,
 g2401_pat_cnt_mth_04,
 g2401_pat_cnt_mth_05,
 g2401_pat_cnt_mth_06,
 g2401_pat_cnt_mth_07,
 g2401_pat_cnt_mth_08,
 g2401_pat_cnt_mth_09,
 g2401_pat_cnt_mth_10,
 g2401_pat_cnt_mth_11,
 g2401_pat_cnt_mth_12,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DX_CLAIMS_src.ims_rxer_id,
        EXT_DX_CLAIMS_src.npi,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_01,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_02,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_03,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_04,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_05,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_06,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_07,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_08,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_09,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_10,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_11,
        EXT_DX_CLAIMS_src.g244_clm_cnt_mth_12,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_01,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_02,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_03,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_04,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_05,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_06,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_07,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_08,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_09,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_10,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_11,
        EXT_DX_CLAIMS_src.g244_pat_cnt_mth_12,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_01,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_02,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_03,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_04,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_05,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_06,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_07,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_08,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_09,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_10,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_11,
        EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_12,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_01,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_02,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_03,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_04,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_05,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_06,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_07,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_08,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_09,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_10,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_11,
        EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_12,
        EXT_DX_CLAIMS_src.batch_id,
        EXT_DX_CLAIMS_src.row_id,
        EXT_DX_CLAIMS_src.update_ts
 FROM teva_ingestion.EXT_DX_CLAIMS_src
 ORDER BY EXT_DX_CLAIMS_src.batch_id
SEGMENTED BY hash(EXT_DX_CLAIMS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_OPTUMRX_src_super_b0 /*+basename(EXT_OPTUMRX_src_super)*/ 
(
 ship_date,
 full_name,
 specialty,
 rank,
 total,
 aubagio_14,
 aubagio_7,
 avonex_30,
 avonex_pack,
 avonex_pen_pack,
 betaseron,
 copaxone_20,
 copaxone_40,
 gilenya_0_5_2x14,
 gilenya_0_5_1x7,
 glatiramer_acetate_20,
 glatiramer_acetate_40,
 glatopa_20,
 lemtrada,
 plegridy_pfs,
 plegridy_pen,
 rebif_22_rebidose,
 rebif_22,
 rebif_44,
 rebif_44_rebidose,
 rebif_pack,
 rebif_pack_rebidose,
 tecfidera_120,
 tecfidera_240,
 tecfidera_starter_pack,
 tysabri,
 zinbryta_150,
 md_addr1,
 md_addr2,
 md_city,
 md_state,
 md_zip,
 prescriber_npi,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_OPTUMRX_src.ship_date,
        EXT_OPTUMRX_src.full_name,
        EXT_OPTUMRX_src.specialty,
        EXT_OPTUMRX_src.rank,
        EXT_OPTUMRX_src.total,
        EXT_OPTUMRX_src.aubagio_14,
        EXT_OPTUMRX_src.aubagio_7,
        EXT_OPTUMRX_src.avonex_30,
        EXT_OPTUMRX_src.avonex_pack,
        EXT_OPTUMRX_src.avonex_pen_pack,
        EXT_OPTUMRX_src.betaseron,
        EXT_OPTUMRX_src.copaxone_20,
        EXT_OPTUMRX_src.copaxone_40,
        EXT_OPTUMRX_src.gilenya_0_5_2x14,
        EXT_OPTUMRX_src.gilenya_0_5_1x7,
        EXT_OPTUMRX_src.glatiramer_acetate_20,
        EXT_OPTUMRX_src.glatiramer_acetate_40,
        EXT_OPTUMRX_src.glatopa_20,
        EXT_OPTUMRX_src.lemtrada,
        EXT_OPTUMRX_src.plegridy_pfs,
        EXT_OPTUMRX_src.plegridy_pen,
        EXT_OPTUMRX_src.rebif_22_rebidose,
        EXT_OPTUMRX_src.rebif_22,
        EXT_OPTUMRX_src.rebif_44,
        EXT_OPTUMRX_src.rebif_44_rebidose,
        EXT_OPTUMRX_src.rebif_pack,
        EXT_OPTUMRX_src.rebif_pack_rebidose,
        EXT_OPTUMRX_src.tecfidera_120,
        EXT_OPTUMRX_src.tecfidera_240,
        EXT_OPTUMRX_src.tecfidera_starter_pack,
        EXT_OPTUMRX_src.tysabri,
        EXT_OPTUMRX_src.zinbryta_150,
        EXT_OPTUMRX_src.md_addr1,
        EXT_OPTUMRX_src.md_addr2,
        EXT_OPTUMRX_src.md_city,
        EXT_OPTUMRX_src.md_state,
        EXT_OPTUMRX_src.md_zip,
        EXT_OPTUMRX_src.prescriber_npi,
        EXT_OPTUMRX_src.batch_id,
        EXT_OPTUMRX_src.row_id,
        EXT_OPTUMRX_src.update_ts
 FROM teva_ingestion.EXT_OPTUMRX_src
 ORDER BY EXT_OPTUMRX_src.batch_id
SEGMENTED BY hash(EXT_OPTUMRX_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_PRODUCT_VOD__C_src_super_b0 /*+basename(EXT_VV_PRODUCT_VOD__C_src_super)*/ 
(
 ID,
 OWNERID,
 ISDELETED,
 NAME,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 LASTVIEWEDDATE,
 LASTREFERENCEDDATE,
 CONSUMER_SITE__C,
 PRODUCT_INFO__C,
 THERAPEUTIC_CLASS_VOD__C,
 PARENT_PRODUCT_VOD__C,
 THERAPEUTIC_AREA_VOD__C,
 PRODUCT_TYPE_VOD__C,
 REQUIRE_KEY_MESSAGE_VOD__C,
 COST_VOD__C,
 EXTERNAL_ID_VOD__C,
 MANUFACTURER_VOD__C,
 COMPANY_PRODUCT_VOD__C,
 CONTROLLED_SUBSTANCE_VOD__C,
 DESCRIPTION_VOD__C,
 SAMPLE_QUANTITY_PICKLIST_VOD__,
 DISPLAY_ORDER_VOD__C,
 NO_METRICS_VOD__C,
 DISTRIBUTOR_VOD__C,
 SAMPLE_QUANTITY_BOUND_VOD__C,
 SAMPLE_U_M_VOD__C,
 NO_DETAILS_VOD__C,
 QUANTITY_PER_CASE_VOD__C,
 SCHEDULE_VOD__C,
 RESTRICTED_VOD__C,
 PRICING_RULE_QUANTITY_BOUND_VO,
 NO_PROMO_ITEMS_VOD__C,
 USER_ALIGNED_VOD__C,
 RESTRICTED_STATES_VOD__C,
 SORT_CODE_VOD__C,
 NO_CYCLE_PLANS_VOD__C,
 INVENTORY_ORDER_UOM_VOD__C,
 INVENTORY_QUANTITY_PER_CASE_VO,
 SUB_TYPE__C,
 ORGANIZATION__C,
 PRODUCT_ID_TEVA__C,
 PRODUCT_LINE_TVA__C,
 VEXTERNAL_ID_VOD__C,
 PRODUCT_VALUE_VOD__C,
 ENCRYPT_VEEVA_EXTERNAL_ID_TVA__C,
 AVAILABLE_QTY_TVA__C,
 EXPIRATION_DATE_TVA__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts,
 t22s1_austedofrm__c
)
AS
 SELECT EXT_VV_PRODUCT_VOD__C_src.ID,
        EXT_VV_PRODUCT_VOD__C_src.OWNERID,
        EXT_VV_PRODUCT_VOD__C_src.ISDELETED,
        EXT_VV_PRODUCT_VOD__C_src.NAME,
        EXT_VV_PRODUCT_VOD__C_src.CREATEDDATE,
        EXT_VV_PRODUCT_VOD__C_src.CREATEDBYID,
        EXT_VV_PRODUCT_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_PRODUCT_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_PRODUCT_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_PRODUCT_VOD__C_src.MAYEDIT,
        EXT_VV_PRODUCT_VOD__C_src.ISLOCKED,
        EXT_VV_PRODUCT_VOD__C_src.LASTVIEWEDDATE,
        EXT_VV_PRODUCT_VOD__C_src.LASTREFERENCEDDATE,
        EXT_VV_PRODUCT_VOD__C_src.CONSUMER_SITE__C,
        EXT_VV_PRODUCT_VOD__C_src.PRODUCT_INFO__C,
        EXT_VV_PRODUCT_VOD__C_src.THERAPEUTIC_CLASS_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.PARENT_PRODUCT_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.THERAPEUTIC_AREA_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.PRODUCT_TYPE_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.REQUIRE_KEY_MESSAGE_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.COST_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.EXTERNAL_ID_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.MANUFACTURER_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.COMPANY_PRODUCT_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.CONTROLLED_SUBSTANCE_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.DESCRIPTION_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.SAMPLE_QUANTITY_PICKLIST_VOD__,
        EXT_VV_PRODUCT_VOD__C_src.DISPLAY_ORDER_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.NO_METRICS_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.DISTRIBUTOR_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.SAMPLE_QUANTITY_BOUND_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.SAMPLE_U_M_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.NO_DETAILS_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.QUANTITY_PER_CASE_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.SCHEDULE_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.RESTRICTED_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.PRICING_RULE_QUANTITY_BOUND_VO,
        EXT_VV_PRODUCT_VOD__C_src.NO_PROMO_ITEMS_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.USER_ALIGNED_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.RESTRICTED_STATES_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.SORT_CODE_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.NO_CYCLE_PLANS_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.INVENTORY_ORDER_UOM_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.INVENTORY_QUANTITY_PER_CASE_VO,
        EXT_VV_PRODUCT_VOD__C_src.SUB_TYPE__C,
        EXT_VV_PRODUCT_VOD__C_src.ORGANIZATION__C,
        EXT_VV_PRODUCT_VOD__C_src.PRODUCT_ID_TEVA__C,
        EXT_VV_PRODUCT_VOD__C_src.PRODUCT_LINE_TVA__C,
        EXT_VV_PRODUCT_VOD__C_src.VEXTERNAL_ID_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.PRODUCT_VALUE_VOD__C,
        EXT_VV_PRODUCT_VOD__C_src.ENCRYPT_VEEVA_EXTERNAL_ID_TVA__C,
        EXT_VV_PRODUCT_VOD__C_src.AVAILABLE_QTY_TVA__C,
        EXT_VV_PRODUCT_VOD__C_src.EXPIRATION_DATE_TVA__C,
        EXT_VV_PRODUCT_VOD__C_src.batch_id,
        EXT_VV_PRODUCT_VOD__C_src.row_id,
        EXT_VV_PRODUCT_VOD__C_src.update_ts,
        EXT_VV_PRODUCT_VOD__C_src.t22s1_austedofrm__c
 FROM teva_ingestion.EXT_VV_PRODUCT_VOD__C_src
 ORDER BY EXT_VV_PRODUCT_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_PRODUCT_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_FTF_RESTRICTIONS_V2_src_super_b0 /*+basename(EXT_FTF_RESTRICTIONS_V2_src_super)*/ 
(
 health_plan_id,
 drug_id,
 restriction_code,
 restriction_detail_id,
 restriction_detail_text,
 restriction_addtnl_information_1,
 restriction_addtnl_information_2,
 step_count,
 pa_form,
 indication,
 grouped_restriction_level,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_FTF_RESTRICTIONS_V2_src.health_plan_id,
        EXT_FTF_RESTRICTIONS_V2_src.drug_id,
        EXT_FTF_RESTRICTIONS_V2_src.restriction_code,
        EXT_FTF_RESTRICTIONS_V2_src.restriction_detail_id,
        EXT_FTF_RESTRICTIONS_V2_src.restriction_detail_text,
        EXT_FTF_RESTRICTIONS_V2_src.restriction_addtnl_information_1,
        EXT_FTF_RESTRICTIONS_V2_src.restriction_addtnl_information_2,
        EXT_FTF_RESTRICTIONS_V2_src.step_count,
        EXT_FTF_RESTRICTIONS_V2_src.pa_form,
        EXT_FTF_RESTRICTIONS_V2_src.indication,
        EXT_FTF_RESTRICTIONS_V2_src.grouped_restriction_level,
        EXT_FTF_RESTRICTIONS_V2_src.batch_id,
        EXT_FTF_RESTRICTIONS_V2_src.row_id,
        EXT_FTF_RESTRICTIONS_V2_src.update_ts
 FROM teva_ingestion.EXT_FTF_RESTRICTIONS_V2_src
 ORDER BY EXT_FTF_RESTRICTIONS_V2_src.batch_id
SEGMENTED BY hash(EXT_FTF_RESTRICTIONS_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SURVEY_TARGET_VOD__C_src_super_b0 /*+basename(EXT_VV_SURVEY_TARGET_VOD__C_src_super)*/ 
(
 ID,
 OWNERID,
 ISDELETED,
 NAME,
 RECORDTYPEID,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 LASTVIEWEDDATE,
 LASTREFERENCEDDATE,
 ACCOUNT_DISPLAY_NAME_VOD__C,
 ACCOUNT_VOD__C,
 CHANNELS_VOD__C,
 END_DATE_VOD__C,
 ENTITY_REFERENCE_ID_VOD__C,
 EXTERNAL_ID_VOD__C,
 LANGUAGE_VOD__C,
 LOCK_VOD__C,
 MOBILE_ID_VOD__C,
 NO_AUTOASSIGN_VOD__C,
 NOT_COMPLETED_VOD__C,
 REGION_VOD__C,
 SEGMENT_VOD__C,
 START_DATE_VOD__C,
 STATUS_VOD__C,
 SURVEY_VOD__C,
 TERRITORY_VOD__C,
 ZVOD_ADDRESS_VOD__C,
 ZVOD_SPECIALTY_VOD__C,
 SCORE_VOD__C,
 Review_date_vod__c,
 Employee_vod__c,
 coach_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts,
 Report_Status_vod__c
)
AS
 SELECT EXT_VV_SURVEY_TARGET_VOD__C_src.ID,
        EXT_VV_SURVEY_TARGET_VOD__C_src.OWNERID,
        EXT_VV_SURVEY_TARGET_VOD__C_src.ISDELETED,
        EXT_VV_SURVEY_TARGET_VOD__C_src.NAME,
        EXT_VV_SURVEY_TARGET_VOD__C_src.RECORDTYPEID,
        EXT_VV_SURVEY_TARGET_VOD__C_src.CREATEDDATE,
        EXT_VV_SURVEY_TARGET_VOD__C_src.CREATEDBYID,
        EXT_VV_SURVEY_TARGET_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_SURVEY_TARGET_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_SURVEY_TARGET_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_SURVEY_TARGET_VOD__C_src.MAYEDIT,
        EXT_VV_SURVEY_TARGET_VOD__C_src.ISLOCKED,
        EXT_VV_SURVEY_TARGET_VOD__C_src.LASTVIEWEDDATE,
        EXT_VV_SURVEY_TARGET_VOD__C_src.LASTREFERENCEDDATE,
        EXT_VV_SURVEY_TARGET_VOD__C_src.ACCOUNT_DISPLAY_NAME_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.ACCOUNT_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.CHANNELS_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.END_DATE_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.ENTITY_REFERENCE_ID_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.EXTERNAL_ID_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.LANGUAGE_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.LOCK_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.NO_AUTOASSIGN_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.NOT_COMPLETED_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.REGION_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.SEGMENT_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.START_DATE_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.STATUS_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.SURVEY_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.TERRITORY_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.ZVOD_ADDRESS_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.ZVOD_SPECIALTY_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.SCORE_VOD__C,
        EXT_VV_SURVEY_TARGET_VOD__C_src.Review_date_vod__c,
        EXT_VV_SURVEY_TARGET_VOD__C_src.Employee_vod__c,
        EXT_VV_SURVEY_TARGET_VOD__C_src.coach_vod__c,
        EXT_VV_SURVEY_TARGET_VOD__C_src.batch_id,
        EXT_VV_SURVEY_TARGET_VOD__C_src.row_id,
        EXT_VV_SURVEY_TARGET_VOD__C_src.update_ts,
        EXT_VV_SURVEY_TARGET_VOD__C_src.Report_Status_vod__c
 FROM teva_ingestion.EXT_VV_SURVEY_TARGET_VOD__C_src
 ORDER BY EXT_VV_SURVEY_TARGET_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SURVEY_TARGET_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_PROVIDER_V2_src_super_b0 /*+basename(EXT_IMS_FIA_PROVIDER_V2_src_super)*/ 
(
 PROVIDER_ID,
 PROVIDER_TYPE,
 IQVIA_RXER_ID,
 PRIMARY_SPECIALTY_CODE,
 PRIMARY_SPECIALTY_DESC,
 FIRST_NAME,
 LAST_NAME,
 ORG_NM,
 ADDRESS,
 CITY,
 ZIP_CODE,
 STATE_CODE,
 PHONE_NUMBER,
 DEA_NUMBER,
 ME_NUMBER,
 FLEXIBLE_FLD_1_CHAR,
 FLEXIBLE_FLD_2_CHAR,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_PROVIDER_V2_src.PROVIDER_ID,
        EXT_IMS_FIA_PROVIDER_V2_src.PROVIDER_TYPE,
        EXT_IMS_FIA_PROVIDER_V2_src.IQVIA_RXER_ID,
        EXT_IMS_FIA_PROVIDER_V2_src.PRIMARY_SPECIALTY_CODE,
        EXT_IMS_FIA_PROVIDER_V2_src.PRIMARY_SPECIALTY_DESC,
        EXT_IMS_FIA_PROVIDER_V2_src.FIRST_NAME,
        EXT_IMS_FIA_PROVIDER_V2_src.LAST_NAME,
        EXT_IMS_FIA_PROVIDER_V2_src.ORG_NM,
        EXT_IMS_FIA_PROVIDER_V2_src.ADDRESS,
        EXT_IMS_FIA_PROVIDER_V2_src.CITY,
        EXT_IMS_FIA_PROVIDER_V2_src.ZIP_CODE,
        EXT_IMS_FIA_PROVIDER_V2_src.STATE_CODE,
        EXT_IMS_FIA_PROVIDER_V2_src.PHONE_NUMBER,
        EXT_IMS_FIA_PROVIDER_V2_src.DEA_NUMBER,
        EXT_IMS_FIA_PROVIDER_V2_src.ME_NUMBER,
        EXT_IMS_FIA_PROVIDER_V2_src.FLEXIBLE_FLD_1_CHAR,
        EXT_IMS_FIA_PROVIDER_V2_src.FLEXIBLE_FLD_2_CHAR,
        EXT_IMS_FIA_PROVIDER_V2_src.batch_id,
        EXT_IMS_FIA_PROVIDER_V2_src.row_id,
        EXT_IMS_FIA_PROVIDER_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PROVIDER_V2_src
 ORDER BY EXT_IMS_FIA_PROVIDER_V2_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_PROVIDER_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_CALL_PLAN_TS_src_super_b0 /*+basename(EXT_ZS_CALL_PLAN_TS_src_super)*/ 
(
 VEEVA_ACCOUNT_ID,
 TVCMID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 SPECIALTY,
 TERRITORY_NUM,
 ADDRESS,
 CITY,
 STATE,
 ZIP,
 PRODUCT_NAME,
 P1,
 P2,
 P3,
 TARGET,
 SALES_FORCE_ID,
 PERIOD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ZS_CALL_PLAN_TS_src.VEEVA_ACCOUNT_ID,
        EXT_ZS_CALL_PLAN_TS_src.TVCMID,
        EXT_ZS_CALL_PLAN_TS_src.IMS_ID,
        EXT_ZS_CALL_PLAN_TS_src.FIRST_NAME,
        EXT_ZS_CALL_PLAN_TS_src.LAST_NAME,
        EXT_ZS_CALL_PLAN_TS_src.SPECIALTY,
        EXT_ZS_CALL_PLAN_TS_src.TERRITORY_NUM,
        EXT_ZS_CALL_PLAN_TS_src.ADDRESS,
        EXT_ZS_CALL_PLAN_TS_src.CITY,
        EXT_ZS_CALL_PLAN_TS_src.STATE,
        EXT_ZS_CALL_PLAN_TS_src.ZIP,
        EXT_ZS_CALL_PLAN_TS_src.PRODUCT_NAME,
        EXT_ZS_CALL_PLAN_TS_src.P1,
        EXT_ZS_CALL_PLAN_TS_src.P2,
        EXT_ZS_CALL_PLAN_TS_src.P3,
        EXT_ZS_CALL_PLAN_TS_src.TARGET,
        EXT_ZS_CALL_PLAN_TS_src.SALES_FORCE_ID,
        EXT_ZS_CALL_PLAN_TS_src.PERIOD,
        EXT_ZS_CALL_PLAN_TS_src.batch_id,
        EXT_ZS_CALL_PLAN_TS_src.row_id,
        EXT_ZS_CALL_PLAN_TS_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TS_src
 ORDER BY EXT_ZS_CALL_PLAN_TS_src.batch_id
SEGMENTED BY hash(EXT_ZS_CALL_PLAN_TS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src_super_b0 /*+basename(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src_super)*/ 
(
 id,
 ownerid,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 lastactivitydate,
 lastvieweddate,
 lastreferenceddate,
 birth_month_day__c,
 business_mobile__c,
 business_phone__c,
 cost_center_name__c,
 demotion__c,
 ec_creation_date__c,
 ec_last_modified_date__c,
 ec_territory_id__c,
 email_address__c,
 employee_status__c,
 first_name__c,
 full_part_time__c,
 global_employee_id__c,
 hire_date__c,
 home_address_1__c,
 home_address_2__c,
 home_address_3__c,
 home_city_municipality__c,
 home_country__c,
 home_phone__c,
 home_postal_code__c,
 home_state_province__c,
 job_code__c,
 job_grade__c,
 loa_end_date__c,
 loa_start_date__c,
 last_name__c,
 local_employee_id__c,
 mailing_address_1__c,
 mailing_address_2__c,
 mailing_address_3__c,
 mailing_city__c,
 mailing_country__c,
 mailing_postal_code__c,
 mailing_state__c,
 middle_name__c,
 name_suffix__c,
 oracle_string__c,
 payroll_id__c,
 position_title__c,
 preferred_name__c,
 promotion__c,
 reg_contract__c,
 sample_eligibility_indicator__c,
 sample_shippingstorage_address_1__c,
 sample_shippingstorage_address_2__c,
 sample_shippingstorage_address_3__c,
 sample_shippingstorage_address_status__c,
 sample_shippingstorage_city__c,
 sample_shippingstorage_country__c,
 sample_shippingstorage_postal_code__c,
 sample_shippingstorage_state__c,
 shipping_address_1__c,
 shipping_address_2__c,
 shipping_address_3__c,
 shipping_city__c,
 shipping_country__c,
 shipping_postal_code__c,
 shipping_state__c,
 supervisor_global_employee_id__c,
 transfer_date__c,
 uid__c,
 windows_logon_id__c,
 teva_id__c,
 employee_status_effective_date__c,
 separation_date__c,
 separation_reason__c,
 Certified_Field_Trainer__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ownerid,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.isdeleted,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.name,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.createddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.createdbyid,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastmodifieddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastmodifiedbyid,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.systemmodstamp,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastactivitydate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastvieweddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastreferenceddate,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.birth_month_day__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.business_mobile__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.business_phone__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.cost_center_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.demotion__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ec_creation_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ec_last_modified_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ec_territory_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.email_address__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.employee_status__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.first_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.full_part_time__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.global_employee_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.hire_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_city_municipality__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_phone__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_state_province__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.job_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.job_grade__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.loa_end_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.loa_start_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.last_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.local_employee_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_city__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_state__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.middle_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.name_suffix__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.oracle_string__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.payroll_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.position_title__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.preferred_name__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.promotion__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.reg_contract__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_eligibility_indicator__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_status__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_city__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_state__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_address_1__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_address_2__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_address_3__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_city__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_country__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_postal_code__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_state__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.supervisor_global_employee_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.transfer_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.uid__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.windows_logon_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.teva_id__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.employee_status_effective_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.separation_date__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.separation_reason__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.Certified_Field_Trainer__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.batch_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.row_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src
 ORDER BY EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.batch_id
SEGMENTED BY hash(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_ACCOUNT_src_super_b0 /*+basename(EXT_VV_ACCOUNT_src_super)*/ 
(
 ID,
 ISDELETED,
 MASTERRECORDID,
 NAME,
 LASTNAME,
 FIRSTNAME,
 SALUTATION,
 TYPE,
 RECORDTYPEID,
 PHONE,
 FAX,
 WEBSITE,
 NUMBEROFEMPLOYEES,
 OWNERSHIP,
 OWNERID,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 LASTACTIVITYDATE,
 MAYEDIT,
 ISLOCKED,
 LASTVIEWEDDATE,
 LASTREFERENCEDDATE,
 ISEXCLUDEDFROMREALIGN,
 PERSONCONTACTID,
 ISPERSONACCOUNT,
 PERSONMAILINGSTREET,
 PERSONMAILINGCITY,
 PERSONMAILINGSTATE,
 PERSONMAILINGPOSTALCODE,
 PERSONMAILINGCOUNTRY,
 PERSONMAILINGLATITUDE,
 PERSONMAILINGLONGITUDE,
 PERSONOTHERSTREET,
 PERSONOTHERCITY,
 PERSONOTHERSTATE,
 PERSONOTHERPOSTALCODE,
 PERSONOTHERCOUNTRY,
 PERSONOTHERLATITUDE,
 PERSONOTHERLONGITUDE,
 PERSONMOBILEPHONE,
 PERSONHOMEPHONE,
 PERSONOTHERPHONE,
 PERSONASSISTANTPHONE,
 PERSONEMAIL,
 PERSONTITLE,
 PERSONDEPARTMENT,
 PERSONASSISTANTNAME,
 PERSONBIRTHDATE,
 PERSONHASOPTEDOUTOFEMAIL,
 PERSONHASOPTEDOUTOFFAX,
 PERSONDONOTCALL,
 PERSONLASTCUREQUESTDATE,
 PERSONLASTCUUPDATEDATE,
 PERSONEMAILBOUNCEDREASON,
 PERSONEMAILBOUNCEDDATE,
 JIGSAW,
 JIGSAWCOMPANYID,
 ACCOUNTSOURCE,
 SICDESC,
 EXTERNAL_ID_VOD__C,
 CREDENTIALS_VOD__C,
 EXCLUDE_FROM_ZIP_TO_TERR_PROCE,
 GROUP_SPECIALTY_1_VOD__C,
 GROUP_SPECIALTY_2_VOD__C,
 SPECIALTY_1_VOD__C,
 SPECIALTY_2_VOD__C,
 FORMATTED_NAME_VOD__C,
 TERRITORY_TEST_VOD__C,
 MOBILE_ID_VOD__C,
 GENDER_VOD__C,
 ID_VOD__C,
 DO_NOT_SYNC_SALES_DATA_VOD__C,
 ID2_VOD__C,
 PREFERRED_NAME_VOD__C,
 SAMPLE_DEFAULT_VOD__C,
 SEGMENTATIONS_VOD__C,
 RESTRICTED_PRODUCTS_VOD__C,
 PAYER_ID_VOD__C,
 ACCOUNT_STATUS_TVA__C,
 DO_NOT_CALL_VOD__C,
 BEDS__C,
 SPEND_AMOUNT__C,
 PDRP_OPT_OUT_VOD__C,
 SPEND_STATUS_VALUE_VOD__C,
 PDRP_OPT_OUT_DATE_VOD__C,
 SPEND_STATUS_VOD__C,
 ENABLE_RESTRICTED_PRODUCTS,
 CALL_REMINDER_VOD__C,
 ACCOUNT_GROUP_VOD__C,
 PRIMARY_PARENT_VOD__C,
 COLOR_VOD__C,
 MIDDLE_VOD__C,
 SUFFIX_VOD__C,
 ACCOUNT_LOCATION_TVA__C,
 NO_ORDERS_VOD__C,
 ACCOUNT_MASTER_ID_TVA__C,
 ACCOUNT_EMAIL_TVA__C,
 ACCOUNT_SEARCH_FIRSTLAST,
 ACCOUNT_SEARCH_LASTFIRST,
 PERSON_PREFERRED_NAME_TVA__C,
 PRACTICE_AT_HOSPITAL_VOD__C,
 PRACTICE_NEAR_HOSPITAL_VOD__C,
 DO_NOT_CREATE_CHILD_ACCOUNT,
 TOTAL_MDS_DOS__C,
 AHA__C,
 ORDER_TYPE_VOD__C,
 NPI_VOD__C,
 ME__C,
 SPEAKER__C,
 INVESTIGATOR_VOD__C,
 DEFAULT_ORDER_TYPE_VOD__C,
 PERSON_DEGREE_TVA__C,
 TAX_STATUS__C,
 MODEL__C,
 OFFERINGS__C,
 DEPARTMENTS__C,
 ACCOUNT_TYPE__C,
 ACCOUNT_SEARCH_BUSINESS_VOD__C,
 BUSINESS_PROFESSIONAL_PERSON,
 NO_SPEND_TVA__C,
 HOSPITAL_TYPE_VOD__C,
 ACCOUNT_CLASS_VOD__C,
 FURIGANA_VOD__C,
 TIRF_REMS_TVA__C,
 FENTORA_APP_TVA__C,
 TOTAL_REVENUE_000__C,
 NET_INCOME_LOSS_000__C,
 PMPM_INCOME_LOSS_000__C,
 COMMERCIAL_PREMIUMS_PMPM__C,
 MEDICAL_LOSS_RATIO__C,
 MEDICAL_EXPENSES_PMPM__C,
 COMMERCIAL_PATIENT_DAYS_1000,
 HMO_MARKET_SHR__C,
 HMO__C,
 HMO_POS__C,
 PPO__C,
 PPO_POS__C,
 MEDICARE__C,
 MEDICAID__C,
 NUVIGIL_APP_TVA__C,
 MDS_STATUS_TVA__C,
 LIS_STATUS_TVA__C,
 DNC_PCS_TVA__C,
 DNC_CNS_TVA__C,
 SUFFIX_TVA__C,
 TYSABRI_STATUS_TVA__C,
 BUSINESS_DESCRIPTION__C,
 REGIONAL_STRATEGY__C,
 CONTRACTS_PROCESS__C,
 CML_PROFILED_TVA__C,
 CELL_PHONE_TVA__C,
 NO_CONTACT_TVA__C,
 OUTLET_ID_TVA__C,
 PMO_GPO_ACCOUNT_AFFILIATIONS,
 TERRITORY_STATUS_TVA__C,
 ZDEA_NUMBER_TVA__C,
 VEEVA_ID_TVA__C,
 TREANDA_LQ_TGT_TVA__C,
 TBO_FILGRASTIM_TARGET_TVA__C,
 SLN_RESCRUB_TVA__C,
 ACCOUNT_IDENTIFIER_VOD__C,
 TARGET__C,
 KOL_VOD__C,
 REMS_EXPIRATION_DATE_TEVA__C,
 ACCOUNT_DEMO_ID_TVA__C,
 TOTAL_LIVES__C,
 TOTAL_PHYSICIANS_ENROLLED__C,
 TIRF_REMS_EFF_DATE_TVA__C,
 BUSINESS_ASSOCIATE_AGREEMENT,
 DO_NOT_PROMOTE_TVA__C,
 ACCOUNT_DEA_TVA__C,
 BP_NUMBER__C,
 PARAGARD_SEGMENTATION_TVA__C,
 TELESALES_ACTIVITY_TVA__C,
 DESIGNATION_TVA__C,
 TOTAL_PHARMACISTS__C,
 COMP_PRICING_TVA__C,
 FORMULARY_TVA__C,
 GLN_TVA__C,
 GPO_CONTRACTS_TVA__C,
 HIN_TVA__C,
 MAX_ID_TVA__C,
 ONCOLOGY_SERVICES_TVA__C,
 PCP_PROGRAM_TVA__C,
 PHARMACY_LOCATION_TVA__C,
 PRIMARY_CREDENTIAL_TVA__C,
 PRIMARY_WHOLESALER_TVA__C,
 REP_CREDENTIALING_TVA__C,
 SECONDARY_CREDENTIAL_TVA__C,
 SIGN_IN_LOCATION_TVA__C,
 SPECIAL_TVA__C,
 SUB_TYPE_ID_TVA__C,
 SUB_TYPE_TVA__C,
 TEVA_CONTRACTS_TVA__C,
 IMS_ORG_ID_TVA__C,
 CM_ID_TVA__C,
 YEAR_OF_BIRTH_TVA__C,
 TEACHING_HOSPITAL_TVA__C,
 ACCOUNT_ARCHIVED_TVA__C,
 MOBILE_ID_VOD__PC,
 STAFF_EMAIL,
 COMPANY_MANAGED_EMAIL,
 ALTERNATE_EMAIL,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts,
 ACCREDITATIONS_KAM__C,
 ADDL_SVCS_PATIENT_SVCS_OFFERING_KAM__C,
 ADDL_SERVICES_SALESFORCE_KAM__C,
 AGGREGATION_GROUP_KAM__C,
 ALVIMOPAN_ANDA_KAM__C,
 ALVIMOPAN_BRAND_USAGE_KAM__C,
 ALVIMOPAN_CONVERTED_KAM__C,
 ALVIMOPAN_REMS_KAM__C,
 ALVIMOPAN_USAGE_KAM__C,
 ANDA_ACCOUNT_KAM__C,
 GPO_IDN__C,
 GPO_OAKAM__C,
 GPO_AFFILIATIONS_KAM__C,
 HERZUMA_TARGET_KAM__C,
 IDN_KAM__C,
 IDN_SPECIALTY_PHARMACY__C,
 KAM_PRIMARY_CONTACT__C,
 LOC_KAM__C,
 PCP_KAM__C,
 PHARMACY_CLASSIFICATION_KAM__C,
 PHARMACY_TYPE_KAM__C,
 PREFERRED_WHOLESALER_KAM__C,
 PURCHASING_HERZUMA_KAM__C,
 PURCHASING_TRUXIMA_KAM__C,
 RA_TARGET_KAM__C,
 ROMIDEPSIN_CONVERTED_KAM__C,
 ROMIDEPSIN_TARGET_KAM__C,
 RX_NETWORKS_SUB_GROUP_KAM__C,
 SECONDARY_WHOLESALER_KAM__C,
 SPECIALTY_PHARMACY_NETWORK_AFFIL_KAM__C,
 STATES_IN_NETWORK_FOR_MEDICAID_KAM__C,
 STATES_LICENSED_TO_DISPENSE_KAM__C,
 THERAPEUTIC_FOCUS_CONDITIONS_SERVED_KAM__C,
 TRUXIMA_TARGET_KAM__C,
 WHOLESALER_KAM__C,
 buy_and_bill_tva__c,
 free_trial_program_established_tva__c,
 hcps_at_account_accept_samples_tva__c,
 pt_committee_approval_tva__c,
 type_of_account_tva__c,
 t22s2_rep_email_personemail_status_tva__c,
 t22s2_rep_email_staffemail_status_tva__c,
 t22s2_rep_email_status2_tva__c,
 co_mgd_email_exp_tva__c
)
AS
 SELECT EXT_VV_ACCOUNT_src.ID,
        EXT_VV_ACCOUNT_src.ISDELETED,
        EXT_VV_ACCOUNT_src.MASTERRECORDID,
        EXT_VV_ACCOUNT_src.NAME,
        EXT_VV_ACCOUNT_src.LASTNAME,
        EXT_VV_ACCOUNT_src.FIRSTNAME,
        EXT_VV_ACCOUNT_src.SALUTATION,
        EXT_VV_ACCOUNT_src.TYPE,
        EXT_VV_ACCOUNT_src.RECORDTYPEID,
        EXT_VV_ACCOUNT_src.PHONE,
        EXT_VV_ACCOUNT_src.FAX,
        EXT_VV_ACCOUNT_src.WEBSITE,
        EXT_VV_ACCOUNT_src.NUMBEROFEMPLOYEES,
        EXT_VV_ACCOUNT_src.OWNERSHIP,
        EXT_VV_ACCOUNT_src.OWNERID,
        EXT_VV_ACCOUNT_src.CREATEDDATE,
        EXT_VV_ACCOUNT_src.CREATEDBYID,
        EXT_VV_ACCOUNT_src.LASTMODIFIEDDATE,
        EXT_VV_ACCOUNT_src.LASTMODIFIEDBYID,
        EXT_VV_ACCOUNT_src.SYSTEMMODSTAMP,
        EXT_VV_ACCOUNT_src.LASTACTIVITYDATE,
        EXT_VV_ACCOUNT_src.MAYEDIT,
        EXT_VV_ACCOUNT_src.ISLOCKED,
        EXT_VV_ACCOUNT_src.LASTVIEWEDDATE,
        EXT_VV_ACCOUNT_src.LASTREFERENCEDDATE,
        EXT_VV_ACCOUNT_src.ISEXCLUDEDFROMREALIGN,
        EXT_VV_ACCOUNT_src.PERSONCONTACTID,
        EXT_VV_ACCOUNT_src.ISPERSONACCOUNT,
        EXT_VV_ACCOUNT_src.PERSONMAILINGSTREET,
        EXT_VV_ACCOUNT_src.PERSONMAILINGCITY,
        EXT_VV_ACCOUNT_src.PERSONMAILINGSTATE,
        EXT_VV_ACCOUNT_src.PERSONMAILINGPOSTALCODE,
        EXT_VV_ACCOUNT_src.PERSONMAILINGCOUNTRY,
        EXT_VV_ACCOUNT_src.PERSONMAILINGLATITUDE,
        EXT_VV_ACCOUNT_src.PERSONMAILINGLONGITUDE,
        EXT_VV_ACCOUNT_src.PERSONOTHERSTREET,
        EXT_VV_ACCOUNT_src.PERSONOTHERCITY,
        EXT_VV_ACCOUNT_src.PERSONOTHERSTATE,
        EXT_VV_ACCOUNT_src.PERSONOTHERPOSTALCODE,
        EXT_VV_ACCOUNT_src.PERSONOTHERCOUNTRY,
        EXT_VV_ACCOUNT_src.PERSONOTHERLATITUDE,
        EXT_VV_ACCOUNT_src.PERSONOTHERLONGITUDE,
        EXT_VV_ACCOUNT_src.PERSONMOBILEPHONE,
        EXT_VV_ACCOUNT_src.PERSONHOMEPHONE,
        EXT_VV_ACCOUNT_src.PERSONOTHERPHONE,
        EXT_VV_ACCOUNT_src.PERSONASSISTANTPHONE,
        EXT_VV_ACCOUNT_src.PERSONEMAIL,
        EXT_VV_ACCOUNT_src.PERSONTITLE,
        EXT_VV_ACCOUNT_src.PERSONDEPARTMENT,
        EXT_VV_ACCOUNT_src.PERSONASSISTANTNAME,
        EXT_VV_ACCOUNT_src.PERSONBIRTHDATE,
        EXT_VV_ACCOUNT_src.PERSONHASOPTEDOUTOFEMAIL,
        EXT_VV_ACCOUNT_src.PERSONHASOPTEDOUTOFFAX,
        EXT_VV_ACCOUNT_src.PERSONDONOTCALL,
        EXT_VV_ACCOUNT_src.PERSONLASTCUREQUESTDATE,
        EXT_VV_ACCOUNT_src.PERSONLASTCUUPDATEDATE,
        EXT_VV_ACCOUNT_src.PERSONEMAILBOUNCEDREASON,
        EXT_VV_ACCOUNT_src.PERSONEMAILBOUNCEDDATE,
        EXT_VV_ACCOUNT_src.JIGSAW,
        EXT_VV_ACCOUNT_src.JIGSAWCOMPANYID,
        EXT_VV_ACCOUNT_src.ACCOUNTSOURCE,
        EXT_VV_ACCOUNT_src.SICDESC,
        EXT_VV_ACCOUNT_src.EXTERNAL_ID_VOD__C,
        EXT_VV_ACCOUNT_src.CREDENTIALS_VOD__C,
        EXT_VV_ACCOUNT_src.EXCLUDE_FROM_ZIP_TO_TERR_PROCE,
        EXT_VV_ACCOUNT_src.GROUP_SPECIALTY_1_VOD__C,
        EXT_VV_ACCOUNT_src.GROUP_SPECIALTY_2_VOD__C,
        EXT_VV_ACCOUNT_src.SPECIALTY_1_VOD__C,
        EXT_VV_ACCOUNT_src.SPECIALTY_2_VOD__C,
        EXT_VV_ACCOUNT_src.FORMATTED_NAME_VOD__C,
        EXT_VV_ACCOUNT_src.TERRITORY_TEST_VOD__C,
        EXT_VV_ACCOUNT_src.MOBILE_ID_VOD__C,
        EXT_VV_ACCOUNT_src.GENDER_VOD__C,
        EXT_VV_ACCOUNT_src.ID_VOD__C,
        EXT_VV_ACCOUNT_src.DO_NOT_SYNC_SALES_DATA_VOD__C,
        EXT_VV_ACCOUNT_src.ID2_VOD__C,
        EXT_VV_ACCOUNT_src.PREFERRED_NAME_VOD__C,
        EXT_VV_ACCOUNT_src.SAMPLE_DEFAULT_VOD__C,
        EXT_VV_ACCOUNT_src.SEGMENTATIONS_VOD__C,
        EXT_VV_ACCOUNT_src.RESTRICTED_PRODUCTS_VOD__C,
        EXT_VV_ACCOUNT_src.PAYER_ID_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.DO_NOT_CALL_VOD__C,
        EXT_VV_ACCOUNT_src.BEDS__C,
        EXT_VV_ACCOUNT_src.SPEND_AMOUNT__C,
        EXT_VV_ACCOUNT_src.PDRP_OPT_OUT_VOD__C,
        EXT_VV_ACCOUNT_src.SPEND_STATUS_VALUE_VOD__C,
        EXT_VV_ACCOUNT_src.PDRP_OPT_OUT_DATE_VOD__C,
        EXT_VV_ACCOUNT_src.SPEND_STATUS_VOD__C,
        EXT_VV_ACCOUNT_src.ENABLE_RESTRICTED_PRODUCTS,
        EXT_VV_ACCOUNT_src.CALL_REMINDER_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_GROUP_VOD__C,
        EXT_VV_ACCOUNT_src.PRIMARY_PARENT_VOD__C,
        EXT_VV_ACCOUNT_src.COLOR_VOD__C,
        EXT_VV_ACCOUNT_src.MIDDLE_VOD__C,
        EXT_VV_ACCOUNT_src.SUFFIX_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_LOCATION_TVA__C,
        EXT_VV_ACCOUNT_src.NO_ORDERS_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_MASTER_ID_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_EMAIL_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_FIRSTLAST,
        EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_LASTFIRST,
        EXT_VV_ACCOUNT_src.PERSON_PREFERRED_NAME_TVA__C,
        EXT_VV_ACCOUNT_src.PRACTICE_AT_HOSPITAL_VOD__C,
        EXT_VV_ACCOUNT_src.PRACTICE_NEAR_HOSPITAL_VOD__C,
        EXT_VV_ACCOUNT_src.DO_NOT_CREATE_CHILD_ACCOUNT,
        EXT_VV_ACCOUNT_src.TOTAL_MDS_DOS__C,
        EXT_VV_ACCOUNT_src.AHA__C,
        EXT_VV_ACCOUNT_src.ORDER_TYPE_VOD__C,
        EXT_VV_ACCOUNT_src.NPI_VOD__C,
        EXT_VV_ACCOUNT_src.ME__C,
        EXT_VV_ACCOUNT_src.SPEAKER__C,
        EXT_VV_ACCOUNT_src.INVESTIGATOR_VOD__C,
        EXT_VV_ACCOUNT_src.DEFAULT_ORDER_TYPE_VOD__C,
        EXT_VV_ACCOUNT_src.PERSON_DEGREE_TVA__C,
        EXT_VV_ACCOUNT_src.TAX_STATUS__C,
        EXT_VV_ACCOUNT_src.MODEL__C,
        EXT_VV_ACCOUNT_src.OFFERINGS__C,
        EXT_VV_ACCOUNT_src.DEPARTMENTS__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_TYPE__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_BUSINESS_VOD__C,
        EXT_VV_ACCOUNT_src.BUSINESS_PROFESSIONAL_PERSON,
        EXT_VV_ACCOUNT_src.NO_SPEND_TVA__C,
        EXT_VV_ACCOUNT_src.HOSPITAL_TYPE_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_CLASS_VOD__C,
        EXT_VV_ACCOUNT_src.FURIGANA_VOD__C,
        EXT_VV_ACCOUNT_src.TIRF_REMS_TVA__C,
        EXT_VV_ACCOUNT_src.FENTORA_APP_TVA__C,
        EXT_VV_ACCOUNT_src.TOTAL_REVENUE_000__C,
        EXT_VV_ACCOUNT_src.NET_INCOME_LOSS_000__C,
        EXT_VV_ACCOUNT_src.PMPM_INCOME_LOSS_000__C,
        EXT_VV_ACCOUNT_src.COMMERCIAL_PREMIUMS_PMPM__C,
        EXT_VV_ACCOUNT_src.MEDICAL_LOSS_RATIO__C,
        EXT_VV_ACCOUNT_src.MEDICAL_EXPENSES_PMPM__C,
        EXT_VV_ACCOUNT_src.COMMERCIAL_PATIENT_DAYS_1000,
        EXT_VV_ACCOUNT_src.HMO_MARKET_SHR__C,
        EXT_VV_ACCOUNT_src.HMO__C,
        EXT_VV_ACCOUNT_src.HMO_POS__C,
        EXT_VV_ACCOUNT_src.PPO__C,
        EXT_VV_ACCOUNT_src.PPO_POS__C,
        EXT_VV_ACCOUNT_src.MEDICARE__C,
        EXT_VV_ACCOUNT_src.MEDICAID__C,
        EXT_VV_ACCOUNT_src.NUVIGIL_APP_TVA__C,
        EXT_VV_ACCOUNT_src.MDS_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.LIS_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.DNC_PCS_TVA__C,
        EXT_VV_ACCOUNT_src.DNC_CNS_TVA__C,
        EXT_VV_ACCOUNT_src.SUFFIX_TVA__C,
        EXT_VV_ACCOUNT_src.TYSABRI_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.BUSINESS_DESCRIPTION__C,
        EXT_VV_ACCOUNT_src.REGIONAL_STRATEGY__C,
        EXT_VV_ACCOUNT_src.CONTRACTS_PROCESS__C,
        EXT_VV_ACCOUNT_src.CML_PROFILED_TVA__C,
        EXT_VV_ACCOUNT_src.CELL_PHONE_TVA__C,
        EXT_VV_ACCOUNT_src.NO_CONTACT_TVA__C,
        EXT_VV_ACCOUNT_src.OUTLET_ID_TVA__C,
        EXT_VV_ACCOUNT_src.PMO_GPO_ACCOUNT_AFFILIATIONS,
        EXT_VV_ACCOUNT_src.TERRITORY_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.ZDEA_NUMBER_TVA__C,
        EXT_VV_ACCOUNT_src.VEEVA_ID_TVA__C,
        EXT_VV_ACCOUNT_src.TREANDA_LQ_TGT_TVA__C,
        EXT_VV_ACCOUNT_src.TBO_FILGRASTIM_TARGET_TVA__C,
        EXT_VV_ACCOUNT_src.SLN_RESCRUB_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_IDENTIFIER_VOD__C,
        EXT_VV_ACCOUNT_src.TARGET__C,
        EXT_VV_ACCOUNT_src.KOL_VOD__C,
        EXT_VV_ACCOUNT_src.REMS_EXPIRATION_DATE_TEVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_DEMO_ID_TVA__C,
        EXT_VV_ACCOUNT_src.TOTAL_LIVES__C,
        EXT_VV_ACCOUNT_src.TOTAL_PHYSICIANS_ENROLLED__C,
        EXT_VV_ACCOUNT_src.TIRF_REMS_EFF_DATE_TVA__C,
        EXT_VV_ACCOUNT_src.BUSINESS_ASSOCIATE_AGREEMENT,
        EXT_VV_ACCOUNT_src.DO_NOT_PROMOTE_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_DEA_TVA__C,
        EXT_VV_ACCOUNT_src.BP_NUMBER__C,
        EXT_VV_ACCOUNT_src.PARAGARD_SEGMENTATION_TVA__C,
        EXT_VV_ACCOUNT_src.TELESALES_ACTIVITY_TVA__C,
        EXT_VV_ACCOUNT_src.DESIGNATION_TVA__C,
        EXT_VV_ACCOUNT_src.TOTAL_PHARMACISTS__C,
        EXT_VV_ACCOUNT_src.COMP_PRICING_TVA__C,
        EXT_VV_ACCOUNT_src.FORMULARY_TVA__C,
        EXT_VV_ACCOUNT_src.GLN_TVA__C,
        EXT_VV_ACCOUNT_src.GPO_CONTRACTS_TVA__C,
        EXT_VV_ACCOUNT_src.HIN_TVA__C,
        EXT_VV_ACCOUNT_src.MAX_ID_TVA__C,
        EXT_VV_ACCOUNT_src.ONCOLOGY_SERVICES_TVA__C,
        EXT_VV_ACCOUNT_src.PCP_PROGRAM_TVA__C,
        EXT_VV_ACCOUNT_src.PHARMACY_LOCATION_TVA__C,
        EXT_VV_ACCOUNT_src.PRIMARY_CREDENTIAL_TVA__C,
        EXT_VV_ACCOUNT_src.PRIMARY_WHOLESALER_TVA__C,
        EXT_VV_ACCOUNT_src.REP_CREDENTIALING_TVA__C,
        EXT_VV_ACCOUNT_src.SECONDARY_CREDENTIAL_TVA__C,
        EXT_VV_ACCOUNT_src.SIGN_IN_LOCATION_TVA__C,
        EXT_VV_ACCOUNT_src.SPECIAL_TVA__C,
        EXT_VV_ACCOUNT_src.SUB_TYPE_ID_TVA__C,
        EXT_VV_ACCOUNT_src.SUB_TYPE_TVA__C,
        EXT_VV_ACCOUNT_src.TEVA_CONTRACTS_TVA__C,
        EXT_VV_ACCOUNT_src.IMS_ORG_ID_TVA__C,
        EXT_VV_ACCOUNT_src.CM_ID_TVA__C,
        EXT_VV_ACCOUNT_src.YEAR_OF_BIRTH_TVA__C,
        EXT_VV_ACCOUNT_src.TEACHING_HOSPITAL_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_ARCHIVED_TVA__C,
        EXT_VV_ACCOUNT_src.MOBILE_ID_VOD__PC,
        EXT_VV_ACCOUNT_src.STAFF_EMAIL,
        EXT_VV_ACCOUNT_src.COMPANY_MANAGED_EMAIL,
        EXT_VV_ACCOUNT_src.ALTERNATE_EMAIL,
        EXT_VV_ACCOUNT_src.batch_id,
        EXT_VV_ACCOUNT_src.row_id,
        EXT_VV_ACCOUNT_src.update_ts,
        EXT_VV_ACCOUNT_src.ACCREDITATIONS_KAM__C,
        EXT_VV_ACCOUNT_src.ADDL_SVCS_PATIENT_SVCS_OFFERING_KAM__C,
        EXT_VV_ACCOUNT_src.ADDL_SERVICES_SALESFORCE_KAM__C,
        EXT_VV_ACCOUNT_src.AGGREGATION_GROUP_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_ANDA_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_BRAND_USAGE_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_CONVERTED_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_REMS_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_USAGE_KAM__C,
        EXT_VV_ACCOUNT_src.ANDA_ACCOUNT_KAM__C,
        EXT_VV_ACCOUNT_src.GPO_IDN__C,
        EXT_VV_ACCOUNT_src.GPO_OAKAM__C,
        EXT_VV_ACCOUNT_src.GPO_AFFILIATIONS_KAM__C,
        EXT_VV_ACCOUNT_src.HERZUMA_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.IDN_KAM__C,
        EXT_VV_ACCOUNT_src.IDN_SPECIALTY_PHARMACY__C,
        EXT_VV_ACCOUNT_src.KAM_PRIMARY_CONTACT__C,
        EXT_VV_ACCOUNT_src.LOC_KAM__C,
        EXT_VV_ACCOUNT_src.PCP_KAM__C,
        EXT_VV_ACCOUNT_src.PHARMACY_CLASSIFICATION_KAM__C,
        EXT_VV_ACCOUNT_src.PHARMACY_TYPE_KAM__C,
        EXT_VV_ACCOUNT_src.PREFERRED_WHOLESALER_KAM__C,
        EXT_VV_ACCOUNT_src.PURCHASING_HERZUMA_KAM__C,
        EXT_VV_ACCOUNT_src.PURCHASING_TRUXIMA_KAM__C,
        EXT_VV_ACCOUNT_src.RA_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.ROMIDEPSIN_CONVERTED_KAM__C,
        EXT_VV_ACCOUNT_src.ROMIDEPSIN_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.RX_NETWORKS_SUB_GROUP_KAM__C,
        EXT_VV_ACCOUNT_src.SECONDARY_WHOLESALER_KAM__C,
        EXT_VV_ACCOUNT_src.SPECIALTY_PHARMACY_NETWORK_AFFIL_KAM__C,
        EXT_VV_ACCOUNT_src.STATES_IN_NETWORK_FOR_MEDICAID_KAM__C,
        EXT_VV_ACCOUNT_src.STATES_LICENSED_TO_DISPENSE_KAM__C,
        EXT_VV_ACCOUNT_src.THERAPEUTIC_FOCUS_CONDITIONS_SERVED_KAM__C,
        EXT_VV_ACCOUNT_src.TRUXIMA_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.WHOLESALER_KAM__C,
        EXT_VV_ACCOUNT_src.buy_and_bill_tva__c,
        EXT_VV_ACCOUNT_src.free_trial_program_established_tva__c,
        EXT_VV_ACCOUNT_src.hcps_at_account_accept_samples_tva__c,
        EXT_VV_ACCOUNT_src.pt_committee_approval_tva__c,
        EXT_VV_ACCOUNT_src.type_of_account_tva__c,
        EXT_VV_ACCOUNT_src.t22s2_rep_email_personemail_status_tva__c,
        EXT_VV_ACCOUNT_src.t22s2_rep_email_staffemail_status_tva__c,
        EXT_VV_ACCOUNT_src.t22s2_rep_email_status2_tva__c,
        EXT_VV_ACCOUNT_src.co_mgd_email_exp_tva__c
 FROM teva_ingestion.EXT_VV_ACCOUNT_src
 ORDER BY EXT_VV_ACCOUNT_src.batch_id
SEGMENTED BY hash(EXT_VV_ACCOUNT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SENT_EMAIL_VOD__C_src_super_b0 /*+basename(EXT_VV_SENT_EMAIL_VOD__C_src_super)*/ 
(
 Id,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 OwnerId,
 RecordTypeId,
 IsDeleted,
 SystemModstamp,
 Name,
 Account_vod__c,
 Activity_Tracking_Mode_vod__c,
 EM_Attendee_vod__c,
 Bcc_vod__c,
 Call2_vod__c,
 Capture_Datetime_vod__c,
 Clicked_vod__c,
 Content_Type_vod__c,
 Detail_Group_vod__c,
 Approved_Document_Views_vod__c,
 Entity_Reference_Id_vod__c,
 Event_vod__c,
 Event_Attendee_vod__c,
 Event_Attendee_Mobile_Id_vod__c,
 Event_Mobile_Id_vod__c,
 Events_Management_Subtype_vod__c,
 EM_Event_Speaker_vod__c,
 EM_Event_Team_Member_vod__c,
 Sender_Email_vod__c,
 Key_Message_vod__c,
 Last_Click_Date_vod__c,
 Last_Device_vod__c,
 Last_Activity_Date_vod__c,
 Last_Open_Date_vod__c,
 MC_Capture_Datetime_vod__c,
 Medical_Event_vod__c,
 Medical_Inquiry_vod__c,
 Mobile_ID_vod__c,
 Opened_vod__c,
 Parent_Email_vod__c,
 Product_vod__c,
 Product_Display_vod__c,
 Receipt_Entity_Type_vod__c,
 Receipt_Record_Id_vod__c,
 Related_Transaction_ID_vod__c,
 Scheduled_Send_Datetime_vod__c,
 Email_Sent_Date_vod__c,
 Status_vod__c,
 Failure_Msg_vod__c,
 Suggestion_vod__c,
 Territory_vod__c,
 Account_Email_vod__c,
 Click_Count_vod__c,
 Open_Count_vod__c,
 User_vod__c,
 Valid_Consent_Exists_vod__c,
 VExternal_Id_vod__c,
 Approved_Email_Template_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts,
 subject
)
AS
 SELECT EXT_VV_SENT_EMAIL_VOD__C_src.Id,
        EXT_VV_SENT_EMAIL_VOD__C_src.CreatedDate,
        EXT_VV_SENT_EMAIL_VOD__C_src.CreatedById,
        EXT_VV_SENT_EMAIL_VOD__C_src.LastModifiedDate,
        EXT_VV_SENT_EMAIL_VOD__C_src.LastModifiedById,
        EXT_VV_SENT_EMAIL_VOD__C_src.OwnerId,
        EXT_VV_SENT_EMAIL_VOD__C_src.RecordTypeId,
        EXT_VV_SENT_EMAIL_VOD__C_src.IsDeleted,
        EXT_VV_SENT_EMAIL_VOD__C_src.SystemModstamp,
        EXT_VV_SENT_EMAIL_VOD__C_src.Name,
        EXT_VV_SENT_EMAIL_VOD__C_src.Account_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Activity_Tracking_Mode_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.EM_Attendee_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Bcc_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Call2_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Capture_Datetime_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Clicked_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Content_Type_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Detail_Group_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Approved_Document_Views_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Entity_Reference_Id_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Event_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Event_Attendee_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Event_Attendee_Mobile_Id_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Event_Mobile_Id_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Events_Management_Subtype_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.EM_Event_Speaker_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.EM_Event_Team_Member_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Sender_Email_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Key_Message_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Last_Click_Date_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Last_Device_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Last_Activity_Date_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Last_Open_Date_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.MC_Capture_Datetime_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Medical_Event_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Medical_Inquiry_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Mobile_ID_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Opened_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Parent_Email_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Product_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Product_Display_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Receipt_Entity_Type_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Receipt_Record_Id_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Related_Transaction_ID_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Scheduled_Send_Datetime_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Email_Sent_Date_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Status_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Failure_Msg_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Suggestion_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Territory_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Account_Email_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Click_Count_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Open_Count_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.User_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Valid_Consent_Exists_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.VExternal_Id_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.Approved_Email_Template_vod__c,
        EXT_VV_SENT_EMAIL_VOD__C_src.batch_id,
        EXT_VV_SENT_EMAIL_VOD__C_src.row_id,
        EXT_VV_SENT_EMAIL_VOD__C_src.update_ts,
        EXT_VV_SENT_EMAIL_VOD__C_src.subject
 FROM teva_ingestion.EXT_VV_SENT_EMAIL_VOD__C_src
 ORDER BY EXT_VV_SENT_EMAIL_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SENT_EMAIL_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_CALL_CLICKSTREAM_VOD__C_src_super_b0 /*+basename(EXT_VV_CALL_CLICKSTREAM_VOD__C_src_super)*/ 
(
 Id,
 IsDeleted,
 Name,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 MayEdit,
 IsLocked,
 Answer_vod__c,
 Call_vod__c,
 Key_Message_vod__c,
 Mobile_ID_vod__c,
 Popup_Opened_vod__c,
 Possible_Answers_vod__c,
 Presentation_ID_vod__c,
 Product_vod__c,
 Range_Value_vod__c,
 Rollover_Entered_vod__c,
 Selected_Items_vod__c,
 CLM_ID_vod__c,
 Question_vod__c,
 Survey_Type_vod__c,
 Text_Entered_vod__c,
 Toggle_Button_On_vod__c,
 Track_Element_Description_vod__c,
 Track_Element_Id_vod__c,
 Track_Element_Type_vod__c,
 Usage_Duration_vod__c,
 Usage_Start_Time_vod__c,
 AuxillaryId_vod__c,
 ParentId_vod__c,
 Revision_vod__c,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Id,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.IsDeleted,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Name,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.CreatedDate,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.CreatedById,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.LastModifiedDate,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.LastModifiedById,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.SystemModstamp,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.MayEdit,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.IsLocked,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Answer_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Call_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Key_Message_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Mobile_ID_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Popup_Opened_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Possible_Answers_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Presentation_ID_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Product_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Range_Value_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Rollover_Entered_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Selected_Items_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.CLM_ID_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Question_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Survey_Type_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Text_Entered_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Toggle_Button_On_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Track_Element_Description_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Track_Element_Id_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Track_Element_Type_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Usage_Duration_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Usage_Start_Time_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.AuxillaryId_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.ParentId_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Revision_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.batch_id,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.row_id,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL_CLICKSTREAM_VOD__C_src
 ORDER BY EXT_VV_CALL_CLICKSTREAM_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_vv_objectterritory2assignmentrule_src_super_b0 /*+basename(ext_vv_objectterritory2assignmentrule_src_super)*/ 
(
 id,
 isdeleted,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 territory2id,
 ruleid,
 isinherited,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT ext_vv_objectterritory2assignmentrule_src.id,
        ext_vv_objectterritory2assignmentrule_src.isdeleted,
        ext_vv_objectterritory2assignmentrule_src.createddate,
        ext_vv_objectterritory2assignmentrule_src.createdbyid,
        ext_vv_objectterritory2assignmentrule_src.lastmodifieddate,
        ext_vv_objectterritory2assignmentrule_src.lastmodifiedbyid,
        ext_vv_objectterritory2assignmentrule_src.systemmodstamp,
        ext_vv_objectterritory2assignmentrule_src.mayedit,
        ext_vv_objectterritory2assignmentrule_src.islocked,
        ext_vv_objectterritory2assignmentrule_src.territory2id,
        ext_vv_objectterritory2assignmentrule_src.ruleid,
        ext_vv_objectterritory2assignmentrule_src.isinherited,
        ext_vv_objectterritory2assignmentrule_src.batch_id,
        ext_vv_objectterritory2assignmentrule_src.row_id,
        ext_vv_objectterritory2assignmentrule_src.update_ts
 FROM teva_ingestion.ext_vv_objectterritory2assignmentrule_src
 ORDER BY ext_vv_objectterritory2assignmentrule_src.batch_id
SEGMENTED BY hash(ext_vv_objectterritory2assignmentrule_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_vv_objectterritory2assignmentruleitem_src_super_b0 /*+basename(ext_vv_objectterritory2assignmentruleitem_src_super)*/ 
(
 Id,
 IsDeleted,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 RuleId,
 Field,
 Operation,
 SortOrder,
 Value,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT ext_vv_objectterritory2assignmentruleitem_src.Id,
        ext_vv_objectterritory2assignmentruleitem_src.IsDeleted,
        ext_vv_objectterritory2assignmentruleitem_src.CreatedDate,
        ext_vv_objectterritory2assignmentruleitem_src.CreatedById,
        ext_vv_objectterritory2assignmentruleitem_src.LastModifiedDate,
        ext_vv_objectterritory2assignmentruleitem_src.LastModifiedById,
        ext_vv_objectterritory2assignmentruleitem_src.SystemModstamp,
        ext_vv_objectterritory2assignmentruleitem_src.RuleId,
        ext_vv_objectterritory2assignmentruleitem_src.Field,
        ext_vv_objectterritory2assignmentruleitem_src.Operation,
        ext_vv_objectterritory2assignmentruleitem_src.SortOrder,
        ext_vv_objectterritory2assignmentruleitem_src.Value,
        ext_vv_objectterritory2assignmentruleitem_src.batch_id,
        ext_vv_objectterritory2assignmentruleitem_src.row_id,
        ext_vv_objectterritory2assignmentruleitem_src.update_ts
 FROM teva_ingestion.ext_vv_objectterritory2assignmentruleitem_src
 ORDER BY ext_vv_objectterritory2assignmentruleitem_src.batch_id
SEGMENTED BY hash(ext_vv_objectterritory2assignmentruleitem_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSOCIATION_src_super_b0 /*+basename(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src_super)*/ 
(
 Id,
 ObjectId,
 Territory2Id,
 AssociationCause,
 SobjectType,
 IsDeleted,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.Id,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.ObjectId,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.Territory2Id,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.AssociationCause,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.SobjectType,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.IsDeleted,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.LastModifiedDate,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.LastModifiedById,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.SystemModstamp,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.batch_id,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.row_id,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.update_ts
 FROM teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSOCIATION_src
 ORDER BY EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.batch_id
SEGMENTED BY hash(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_RULETERRITORY2ASSOCIATION_src_super_b0 /*+basename(EXT_VV_RULETERRITORY2ASSOCIATION_src_super)*/ 
(
 Id,
 IsDeleted,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 MayEdit,
 IsLocked,
 Territory2Id,
 RuleId,
 IsInherited,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_RULETERRITORY2ASSOCIATION_src.Id,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.IsDeleted,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.CreatedDate,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.CreatedById,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.LastModifiedDate,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.LastModifiedById,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.SystemModstamp,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.MayEdit,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.IsLocked,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.Territory2Id,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.RuleId,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.IsInherited,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.batch_id,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.row_id,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.update_ts
 FROM teva_ingestion.EXT_VV_RULETERRITORY2ASSOCIATION_src
 ORDER BY EXT_VV_RULETERRITORY2ASSOCIATION_src.batch_id
SEGMENTED BY hash(EXT_VV_RULETERRITORY2ASSOCIATION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_TERRITORY2MODEL_src_super_b0 /*+basename(EXT_VV_TERRITORY2MODEL_src_super)*/ 
(
 Id,
 IsDeleted,
 Name,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 MayEdit,
 IsLocked,
 Description,
 ActivatedDate,
 DeactivatedDate,
 State,
 DeveloperName,
 LastRunRulesEndDate,
 IsCloneSource,
 LastOppTerrAssignEndDate,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_TERRITORY2MODEL_src.Id,
        EXT_VV_TERRITORY2MODEL_src.IsDeleted,
        EXT_VV_TERRITORY2MODEL_src.Name,
        EXT_VV_TERRITORY2MODEL_src.CreatedDate,
        EXT_VV_TERRITORY2MODEL_src.CreatedById,
        EXT_VV_TERRITORY2MODEL_src.LastModifiedDate,
        EXT_VV_TERRITORY2MODEL_src.LastModifiedById,
        EXT_VV_TERRITORY2MODEL_src.SystemModstamp,
        EXT_VV_TERRITORY2MODEL_src.MayEdit,
        EXT_VV_TERRITORY2MODEL_src.IsLocked,
        EXT_VV_TERRITORY2MODEL_src.Description,
        EXT_VV_TERRITORY2MODEL_src.ActivatedDate,
        EXT_VV_TERRITORY2MODEL_src.DeactivatedDate,
        EXT_VV_TERRITORY2MODEL_src.State,
        EXT_VV_TERRITORY2MODEL_src.DeveloperName,
        EXT_VV_TERRITORY2MODEL_src.LastRunRulesEndDate,
        EXT_VV_TERRITORY2MODEL_src.IsCloneSource,
        EXT_VV_TERRITORY2MODEL_src.LastOppTerrAssignEndDate,
        EXT_VV_TERRITORY2MODEL_src.batch_id,
        EXT_VV_TERRITORY2MODEL_src.row_id,
        EXT_VV_TERRITORY2MODEL_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2MODEL_src
 ORDER BY EXT_VV_TERRITORY2MODEL_src.batch_id
SEGMENTED BY hash(EXT_VV_TERRITORY2MODEL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_TERRITORY2MODELHISTORY_src_super_b0 /*+basename(EXT_VV_TERRITORY2MODELHISTORY_src_super)*/ 
(
 Id,
 IsDeleted,
 Territory2ModelId,
 CreatedById,
 CreatedDate,
 Field,
 OldValue,
 NewValue,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_TERRITORY2MODELHISTORY_src.Id,
        EXT_VV_TERRITORY2MODELHISTORY_src.IsDeleted,
        EXT_VV_TERRITORY2MODELHISTORY_src.Territory2ModelId,
        EXT_VV_TERRITORY2MODELHISTORY_src.CreatedById,
        EXT_VV_TERRITORY2MODELHISTORY_src.CreatedDate,
        EXT_VV_TERRITORY2MODELHISTORY_src.Field,
        EXT_VV_TERRITORY2MODELHISTORY_src.OldValue,
        EXT_VV_TERRITORY2MODELHISTORY_src.NewValue,
        EXT_VV_TERRITORY2MODELHISTORY_src.batch_id,
        EXT_VV_TERRITORY2MODELHISTORY_src.row_id,
        EXT_VV_TERRITORY2MODELHISTORY_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2MODELHISTORY_src
 ORDER BY EXT_VV_TERRITORY2MODELHISTORY_src.batch_id
SEGMENTED BY hash(EXT_VV_TERRITORY2MODELHISTORY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_TERRITORY2TYPE_src_super_b0 /*+basename(EXT_VV_TERRITORY2TYPE_src_super)*/ 
(
 Id,
 IsDeleted,
 DeveloperName,
 Language,
 MasterLabel,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 Description,
 Priority,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_TERRITORY2TYPE_src.Id,
        EXT_VV_TERRITORY2TYPE_src.IsDeleted,
        EXT_VV_TERRITORY2TYPE_src.DeveloperName,
        EXT_VV_TERRITORY2TYPE_src.Language,
        EXT_VV_TERRITORY2TYPE_src.MasterLabel,
        EXT_VV_TERRITORY2TYPE_src.CreatedDate,
        EXT_VV_TERRITORY2TYPE_src.CreatedById,
        EXT_VV_TERRITORY2TYPE_src.LastModifiedDate,
        EXT_VV_TERRITORY2TYPE_src.LastModifiedById,
        EXT_VV_TERRITORY2TYPE_src.SystemModstamp,
        EXT_VV_TERRITORY2TYPE_src.Description,
        EXT_VV_TERRITORY2TYPE_src.Priority,
        EXT_VV_TERRITORY2TYPE_src.batch_id,
        EXT_VV_TERRITORY2TYPE_src.row_id,
        EXT_VV_TERRITORY2TYPE_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2TYPE_src
 ORDER BY EXT_VV_TERRITORY2TYPE_src.batch_id
SEGMENTED BY hash(EXT_VV_TERRITORY2TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_USERTERRITORY2ASSOCIATION_src_super_b0 /*+basename(EXT_VV_USERTERRITORY2ASSOCIATION_src_super)*/ 
(
 Id,
 UserId,
 Territory2Id,
 IsActive,
 RoleInTerritory2,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_USERTERRITORY2ASSOCIATION_src.Id,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.UserId,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.Territory2Id,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.IsActive,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.RoleInTerritory2,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.LastModifiedDate,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.LastModifiedById,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.SystemModstamp,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.batch_id,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.row_id,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.update_ts
 FROM teva_ingestion.EXT_VV_USERTERRITORY2ASSOCIATION_src
 ORDER BY EXT_VV_USERTERRITORY2ASSOCIATION_src.batch_id
SEGMENTED BY hash(EXT_VV_USERTERRITORY2ASSOCIATION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_TERRITORY2_src_super_b0 /*+basename(EXT_VV_TERRITORY2_src_super)*/ 
(
 Id,
 Name,
 Territory2TypeId,
 Territory2ModelId,
 ParentTerritory2Id,
 Description,
 AccountAccessLevel,
 OpportunityAccessLevel,
 CaseAccessLevel,
 ContactAccessLevel,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 DeveloperName,
 ParentTerritory1Id__c,
 Territory1Id__c,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_TERRITORY2_src.Id,
        EXT_VV_TERRITORY2_src.Name,
        EXT_VV_TERRITORY2_src.Territory2TypeId,
        EXT_VV_TERRITORY2_src.Territory2ModelId,
        EXT_VV_TERRITORY2_src.ParentTerritory2Id,
        EXT_VV_TERRITORY2_src.Description,
        EXT_VV_TERRITORY2_src.AccountAccessLevel,
        EXT_VV_TERRITORY2_src.OpportunityAccessLevel,
        EXT_VV_TERRITORY2_src.CaseAccessLevel,
        EXT_VV_TERRITORY2_src.ContactAccessLevel,
        EXT_VV_TERRITORY2_src.LastModifiedDate,
        EXT_VV_TERRITORY2_src.LastModifiedById,
        EXT_VV_TERRITORY2_src.SystemModstamp,
        EXT_VV_TERRITORY2_src.DeveloperName,
        EXT_VV_TERRITORY2_src.ParentTerritory1Id__c,
        EXT_VV_TERRITORY2_src.Territory1Id__c,
        EXT_VV_TERRITORY2_src.batch_id,
        EXT_VV_TERRITORY2_src.row_id,
        EXT_VV_TERRITORY2_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2_src
 ORDER BY EXT_VV_TERRITORY2_src.batch_id
SEGMENTED BY hash(EXT_VV_TERRITORY2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src_super_b0 /*+basename(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src_super)*/ 
(
 id,
 isdeleted,
 name,
 recordtypeid,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 suggestion_vod__c,
 account_vod__c,
 activity_execution_type_vod__c,
 call2_vod__c,
 dismissfeedback1_vod__c,
 dismissfeedback2_vod__c,
 dismissfeedback3_vod__c,
 dismissfeedback4_vod__c,
 mobile_id_vod__c,
 sent_email_vod__c,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.id,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.isdeleted,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.name,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.recordtypeid,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.createddate,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.createdbyid,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.lastmodifieddate,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.lastmodifiedbyid,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.systemmodstamp,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.mayedit,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.islocked,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.suggestion_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.account_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.activity_execution_type_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.call2_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback1_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback2_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback3_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback4_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.mobile_id_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.sent_email_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.batch_id,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.row_id,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src
 ORDER BY EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_BOTOX_STEP_RESTRICTION_V01_src_super_b0 /*+basename(PS_BOTOX_STEP_RESTRICTION_V01_src_super)*/ 
(
 code,
 botox_step_flag,
 restriction_group,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_BOTOX_STEP_RESTRICTION_V01_src.code,
        PS_BOTOX_STEP_RESTRICTION_V01_src.botox_step_flag,
        PS_BOTOX_STEP_RESTRICTION_V01_src.restriction_group,
        PS_BOTOX_STEP_RESTRICTION_V01_src.notes,
        PS_BOTOX_STEP_RESTRICTION_V01_src.batch_id,
        PS_BOTOX_STEP_RESTRICTION_V01_src.row_id,
        PS_BOTOX_STEP_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_BOTOX_STEP_RESTRICTION_V01_src
 ORDER BY PS_BOTOX_STEP_RESTRICTION_V01_src.batch_id
SEGMENTED BY hash(PS_BOTOX_STEP_RESTRICTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_CALCULATED_PBM_CONFIG_V01_src_super_b0 /*+basename(PS_CALCULATED_PBM_CONFIG_V01_src_super)*/ 
(
 ftf_formulary_management_pbm_regex,
 ftf_formulary_influencer_pbm_regex,
 ftf_claims_processing_pbm_regex,
 calculated_pbm_column,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_CALCULATED_PBM_CONFIG_V01_src.ftf_formulary_management_pbm_regex,
        PS_CALCULATED_PBM_CONFIG_V01_src.ftf_formulary_influencer_pbm_regex,
        PS_CALCULATED_PBM_CONFIG_V01_src.ftf_claims_processing_pbm_regex,
        PS_CALCULATED_PBM_CONFIG_V01_src.calculated_pbm_column,
        PS_CALCULATED_PBM_CONFIG_V01_src.batch_id,
        PS_CALCULATED_PBM_CONFIG_V01_src.row_id,
        PS_CALCULATED_PBM_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_CALCULATED_PBM_CONFIG_V01_src
 ORDER BY PS_CALCULATED_PBM_CONFIG_V01_src.batch_id
SEGMENTED BY hash(PS_CALCULATED_PBM_CONFIG_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_CALC_PBM_KEY_PBM_MAPPING_V01_src_super_b0 /*+basename(PS_CALC_PBM_KEY_PBM_MAPPING_V01_src_super)*/ 
(
 calculated_pbm,
 key_pbm,
 added_by,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.calculated_pbm,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.key_pbm,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.added_by,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.batch_id,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.row_id,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_CALC_PBM_KEY_PBM_MAPPING_V01_src
 ORDER BY PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.batch_id
SEGMENTED BY hash(PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_COPAY_TIER_DERIVATION_CONFIG_V01_src_super_b0 /*+basename(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src_super)*/ 
(
 pharmacy_status_regex,
 tier_cat,
 tier_regex,
 pref_brand_tier_regex,
 ftf_health_plan_type_regex,
 copay_tier,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.pharmacy_status_regex,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.tier_cat,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.tier_regex,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.pref_brand_tier_regex,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.ftf_health_plan_type_regex,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.copay_tier,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.batch_id,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.row_id,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_COPAY_TIER_DERIVATION_CONFIG_V01_src
 ORDER BY PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.batch_id
SEGMENTED BY hash(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src_super_b0 /*+basename(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src_super)*/ 
(
 paytype_regex,
 pharmacy_status_regex,
 coverage_cat_code,
 coverage_category,
 restriction_cat_code_regex,
 meaning,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.paytype_regex,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.pharmacy_status_regex,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.coverage_cat_code,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.coverage_category,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.restriction_cat_code_regex,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.meaning,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.batch_id,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.row_id,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.update_ts
 FROM teva_ingestion.PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src
 ORDER BY PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.batch_id
SEGMENTED BY hash(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src_super_b0 /*+basename(PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src_super)*/ 
(
 coverage_cat,
 description,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.coverage_cat,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.description,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.notes,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.batch_id,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.row_id,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src
 ORDER BY PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.batch_id
SEGMENTED BY hash(PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src_super_b0 /*+basename(PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src_super)*/ 
(
 ftf_health_plan_name_regex,
 iqvia_payer_name_regex,
 iqvia_plan_name_regex,
 delete_flag,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.ftf_health_plan_name_regex,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_payer_name_regex,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_plan_name_regex,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.delete_flag,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.batch_id,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.row_id,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.update_ts
 FROM teva_ingestion.PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src
 ORDER BY PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.batch_id
SEGMENTED BY hash(PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_DRUG_ASSIGNMENTS_V01_src_super_b0 /*+basename(PS_DRUG_ASSIGNMENTS_V01_src_super)*/ 
(
 drug_id,
 drug_seq,
 product,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_DRUG_ASSIGNMENTS_V01_src.drug_id,
        PS_DRUG_ASSIGNMENTS_V01_src.drug_seq,
        PS_DRUG_ASSIGNMENTS_V01_src.product,
        PS_DRUG_ASSIGNMENTS_V01_src.batch_id,
        PS_DRUG_ASSIGNMENTS_V01_src.row_id,
        PS_DRUG_ASSIGNMENTS_V01_src.update_ts
 FROM teva_ingestion.PS_DRUG_ASSIGNMENTS_V01_src
 ORDER BY PS_DRUG_ASSIGNMENTS_V01_src.batch_id
SEGMENTED BY hash(PS_DRUG_ASSIGNMENTS_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_FORMULARY_DERIVATION_CONFIG_V01_src_super_b0 /*+basename(PS_FORMULARY_DERIVATION_CONFIG_V01_src_super)*/ 
(
 pharmacy_status_regex,
 has_pa_regex,
 has_st_regex,
 formulary,
 tier_regex,
 pref_brand_tier_regex,
 ftf_health_plan_type_regex,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_FORMULARY_DERIVATION_CONFIG_V01_src.pharmacy_status_regex,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.has_pa_regex,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.has_st_regex,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.formulary,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.tier_regex,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.pref_brand_tier_regex,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.ftf_health_plan_type_regex,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.batch_id,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.row_id,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_FORMULARY_DERIVATION_CONFIG_V01_src
 ORDER BY PS_FORMULARY_DERIVATION_CONFIG_V01_src.batch_id
SEGMENTED BY hash(PS_FORMULARY_DERIVATION_CONFIG_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_FTF_OVERRIDE_PLAN_V01_src_super_b0 /*+basename(PS_FTF_OVERRIDE_PLAN_V01_src_super)*/ 
(
 ftf_health_plan_fid,
 paytype_index,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_FTF_OVERRIDE_PLAN_V01_src.ftf_health_plan_fid,
        PS_FTF_OVERRIDE_PLAN_V01_src.paytype_index,
        PS_FTF_OVERRIDE_PLAN_V01_src.notes,
        PS_FTF_OVERRIDE_PLAN_V01_src.batch_id,
        PS_FTF_OVERRIDE_PLAN_V01_src.row_id,
        PS_FTF_OVERRIDE_PLAN_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_OVERRIDE_PLAN_V01_src
 ORDER BY PS_FTF_OVERRIDE_PLAN_V01_src.batch_id
SEGMENTED BY hash(PS_FTF_OVERRIDE_PLAN_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_FTF_OVERRIDE_PROVIDER_V01_src_super_b0 /*+basename(PS_FTF_OVERRIDE_PROVIDER_V01_src_super)*/ 
(
 provider_fid,
 paytype_index,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_FTF_OVERRIDE_PROVIDER_V01_src.provider_fid,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.paytype_index,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.notes,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.batch_id,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.row_id,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_OVERRIDE_PROVIDER_V01_src
 ORDER BY PS_FTF_OVERRIDE_PROVIDER_V01_src.batch_id
SEGMENTED BY hash(PS_FTF_OVERRIDE_PROVIDER_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src_super_b0 /*+basename(PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src_super)*/ 
(
 paytype_index,
 paytype,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.paytype_index,
        PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.paytype,
        PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.batch_id,
        PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.row_id,
        PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src
 ORDER BY PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.batch_id
SEGMENTED BY hash(PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_FTF_PLANS_PAYTYPEINDEX_V01_src_super_b0 /*+basename(PS_FTF_PLANS_PAYTYPEINDEX_V01_src_super)*/ 
(
 ftf_health_plan_type,
 paytype_index,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_FTF_PLANS_PAYTYPEINDEX_V01_src.ftf_health_plan_type,
        PS_FTF_PLANS_PAYTYPEINDEX_V01_src.paytype_index,
        PS_FTF_PLANS_PAYTYPEINDEX_V01_src.batch_id,
        PS_FTF_PLANS_PAYTYPEINDEX_V01_src.row_id,
        PS_FTF_PLANS_PAYTYPEINDEX_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_PLANS_PAYTYPEINDEX_V01_src
 ORDER BY PS_FTF_PLANS_PAYTYPEINDEX_V01_src.batch_id
SEGMENTED BY hash(PS_FTF_PLANS_PAYTYPEINDEX_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_HAS_PA_MAPPING_V01_src_super_b0 /*+basename(PS_HAS_PA_MAPPING_V01_src_super)*/ 
(
 has_pa,
 pa_regex,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_HAS_PA_MAPPING_V01_src.has_pa,
        PS_HAS_PA_MAPPING_V01_src.pa_regex,
        PS_HAS_PA_MAPPING_V01_src.notes,
        PS_HAS_PA_MAPPING_V01_src.batch_id,
        PS_HAS_PA_MAPPING_V01_src.row_id,
        PS_HAS_PA_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_HAS_PA_MAPPING_V01_src
 ORDER BY PS_HAS_PA_MAPPING_V01_src.batch_id
SEGMENTED BY hash(PS_HAS_PA_MAPPING_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_HAS_ST_MAPPING_V01_src_super_b0 /*+basename(PS_HAS_ST_MAPPING_V01_src_super)*/ 
(
 has_st,
 st_regex,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_HAS_ST_MAPPING_V01_src.has_st,
        PS_HAS_ST_MAPPING_V01_src.st_regex,
        PS_HAS_ST_MAPPING_V01_src.notes,
        PS_HAS_ST_MAPPING_V01_src.batch_id,
        PS_HAS_ST_MAPPING_V01_src.row_id,
        PS_HAS_ST_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_HAS_ST_MAPPING_V01_src
 ORDER BY PS_HAS_ST_MAPPING_V01_src.batch_id
SEGMENTED BY hash(PS_HAS_ST_MAPPING_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src_super_b0 /*+basename(PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src_super)*/ 
(
 iqvia_payer_name,
 iqvia_plan_name_regex,
 paytype,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.iqvia_payer_name,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.iqvia_plan_name_regex,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.paytype,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.batch_id,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.row_id,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.update_ts
 FROM teva_ingestion.PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src
 ORDER BY PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.batch_id
SEGMENTED BY hash(PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_IQVIA_PAYTYPEINDEX_V01_src_super_b0 /*+basename(PS_IQVIA_PAYTYPEINDEX_V01_src_super)*/ 
(
 paytype_index,
 paytype,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_IQVIA_PAYTYPEINDEX_V01_src.paytype_index,
        PS_IQVIA_PAYTYPEINDEX_V01_src.paytype,
        PS_IQVIA_PAYTYPEINDEX_V01_src.batch_id,
        PS_IQVIA_PAYTYPEINDEX_V01_src.row_id,
        PS_IQVIA_PAYTYPEINDEX_V01_src.update_ts
 FROM teva_ingestion.PS_IQVIA_PAYTYPEINDEX_V01_src
 ORDER BY PS_IQVIA_PAYTYPEINDEX_V01_src.batch_id
SEGMENTED BY hash(PS_IQVIA_PAYTYPEINDEX_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_IQVIA_PLANS_DISCARD_V01_src_super_b0 /*+basename(PS_IQVIA_PLANS_DISCARD_V01_src_super)*/ 
(
 payer_id,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_IQVIA_PLANS_DISCARD_V01_src.payer_id,
        PS_IQVIA_PLANS_DISCARD_V01_src.notes,
        PS_IQVIA_PLANS_DISCARD_V01_src.batch_id,
        PS_IQVIA_PLANS_DISCARD_V01_src.row_id,
        PS_IQVIA_PLANS_DISCARD_V01_src.update_ts
 FROM teva_ingestion.PS_IQVIA_PLANS_DISCARD_V01_src
 ORDER BY PS_IQVIA_PLANS_DISCARD_V01_src.batch_id
SEGMENTED BY hash(PS_IQVIA_PLANS_DISCARD_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_KEY_CONTROLLER_LIST_V01_src_super_b0 /*+basename(PS_KEY_CONTROLLER_LIST_V01_src_super)*/ 
(
 ftf_health_plan_fid,
 ftf_health_plan_name,
 key_controlling_account,
 key_controlling_plan_formulary,
 key_controlling_parent,
 payer_pbm,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_fid,
        PS_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_name,
        PS_KEY_CONTROLLER_LIST_V01_src.key_controlling_account,
        PS_KEY_CONTROLLER_LIST_V01_src.key_controlling_plan_formulary,
        PS_KEY_CONTROLLER_LIST_V01_src.key_controlling_parent,
        PS_KEY_CONTROLLER_LIST_V01_src.payer_pbm,
        PS_KEY_CONTROLLER_LIST_V01_src.batch_id,
        PS_KEY_CONTROLLER_LIST_V01_src.row_id,
        PS_KEY_CONTROLLER_LIST_V01_src.update_ts
 FROM teva_ingestion.PS_KEY_CONTROLLER_LIST_V01_src
 ORDER BY PS_KEY_CONTROLLER_LIST_V01_src.batch_id
SEGMENTED BY hash(PS_KEY_CONTROLLER_LIST_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_MEDICAL_REC_RESTRICTION_V01_src_super_b0 /*+basename(PS_MEDICAL_REC_RESTRICTION_V01_src_super)*/ 
(
 code,
 medical_records_submission_required_flag,
 restriction_detail_id,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_MEDICAL_REC_RESTRICTION_V01_src.code,
        PS_MEDICAL_REC_RESTRICTION_V01_src.medical_records_submission_required_flag,
        PS_MEDICAL_REC_RESTRICTION_V01_src.restriction_detail_id,
        PS_MEDICAL_REC_RESTRICTION_V01_src.notes,
        PS_MEDICAL_REC_RESTRICTION_V01_src.batch_id,
        PS_MEDICAL_REC_RESTRICTION_V01_src.row_id,
        PS_MEDICAL_REC_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_MEDICAL_REC_RESTRICTION_V01_src
 ORDER BY PS_MEDICAL_REC_RESTRICTION_V01_src.batch_id
SEGMENTED BY hash(PS_MEDICAL_REC_RESTRICTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_MODEL_PAYTYPE_MAP_V01_src_super_b0 /*+basename(PS_MODEL_PAYTYPE_MAP_V01_src_super)*/ 
(
 model,
 paytype,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_MODEL_PAYTYPE_MAP_V01_src.model,
        PS_MODEL_PAYTYPE_MAP_V01_src.paytype,
        PS_MODEL_PAYTYPE_MAP_V01_src.notes,
        PS_MODEL_PAYTYPE_MAP_V01_src.batch_id,
        PS_MODEL_PAYTYPE_MAP_V01_src.row_id,
        PS_MODEL_PAYTYPE_MAP_V01_src.update_ts
 FROM teva_ingestion.PS_MODEL_PAYTYPE_MAP_V01_src
 ORDER BY PS_MODEL_PAYTYPE_MAP_V01_src.batch_id
SEGMENTED BY hash(PS_MODEL_PAYTYPE_MAP_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src_super_b0 /*+basename(PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src_super)*/ 
(
 ftf_health_plan_name_regex,
 iqvia_payer_name_regex,
 iqvia_plan_name_regex,
 override_ftf_health_plan_type,
 override_precedence,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.ftf_health_plan_name_regex,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_payer_name_regex,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_plan_name_regex,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.override_ftf_health_plan_type,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.override_precedence,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.batch_id,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.row_id,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.update_ts
 FROM teva_ingestion.PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src
 ORDER BY PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.batch_id
SEGMENTED BY hash(PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src_super_b0 /*+basename(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src_super)*/ 
(
 iqvia_plan_code,
 iqvia_plan_name,
 ftf_health_plan_fid,
 ftf_health_plan_name,
 key_controlling_plan_formulary,
 key_controlling_account,
 key_controlling_parent,
 payer_pbm,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.iqvia_plan_code,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.iqvia_plan_name,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_fid,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_name,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.key_controlling_plan_formulary,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.key_controlling_account,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.key_controlling_parent,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.payer_pbm,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.batch_id,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.row_id,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.update_ts
 FROM teva_ingestion.PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src
 ORDER BY PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.batch_id
SEGMENTED BY hash(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_PATIENT_PA_RESTRICTION_V01_src_super_b0 /*+basename(PS_PATIENT_PA_RESTRICTION_V01_src_super)*/ 
(
 code,
 patient_prior_authorization_category,
 restriction_detail_id,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_PATIENT_PA_RESTRICTION_V01_src.code,
        PS_PATIENT_PA_RESTRICTION_V01_src.patient_prior_authorization_category,
        PS_PATIENT_PA_RESTRICTION_V01_src.restriction_detail_id,
        PS_PATIENT_PA_RESTRICTION_V01_src.notes,
        PS_PATIENT_PA_RESTRICTION_V01_src.batch_id,
        PS_PATIENT_PA_RESTRICTION_V01_src.row_id,
        PS_PATIENT_PA_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_PATIENT_PA_RESTRICTION_V01_src
 ORDER BY PS_PATIENT_PA_RESTRICTION_V01_src.batch_id
SEGMENTED BY hash(PS_PATIENT_PA_RESTRICTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src_super_b0 /*+basename(PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src_super)*/ 
(
 patpa,
 description,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.patpa,
        PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.description,
        PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.batch_id,
        PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.row_id,
        PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.update_ts
 FROM teva_ingestion.PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src
 ORDER BY PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.batch_id
SEGMENTED BY hash(PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_PA_RESTRICTION_V01_src_super_b0 /*+basename(PS_PA_RESTRICTION_V01_src_super)*/ 
(
 code,
 prescriber_prior_authorization_category,
 restriction_detail_id,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_PA_RESTRICTION_V01_src.code,
        PS_PA_RESTRICTION_V01_src.prescriber_prior_authorization_category,
        PS_PA_RESTRICTION_V01_src.restriction_detail_id,
        PS_PA_RESTRICTION_V01_src.notes,
        PS_PA_RESTRICTION_V01_src.batch_id,
        PS_PA_RESTRICTION_V01_src.row_id,
        PS_PA_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_PA_RESTRICTION_V01_src
 ORDER BY PS_PA_RESTRICTION_V01_src.batch_id
SEGMENTED BY hash(PS_PA_RESTRICTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src_super_b0 /*+basename(PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src_super)*/ 
(
 prespa,
 description,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.prespa,
        PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.description,
        PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.batch_id,
        PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.row_id,
        PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.update_ts
 FROM teva_ingestion.PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src
 ORDER BY PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.batch_id
SEGMENTED BY hash(PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_PROVIDER_OVERRIDE_DEFAULT_V01_src_super_b0 /*+basename(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src_super)*/ 
(
 provider_id,
 paytype_regex,
 provider_name,
 fill_in_iqvia_payer_name_if_no_bridge,
 override_best_iqvia_payer,
 fill_in_iqvia_pbm_if_no_bridge,
 override_best_iqvia_pbm,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.provider_id,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.paytype_regex,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.provider_name,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.fill_in_iqvia_payer_name_if_no_bridge,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.override_best_iqvia_payer,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.fill_in_iqvia_pbm_if_no_bridge,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.override_best_iqvia_pbm,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.batch_id,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.row_id,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.update_ts
 FROM teva_ingestion.PS_PROVIDER_OVERRIDE_DEFAULT_V01_src
 ORDER BY PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.batch_id
SEGMENTED BY hash(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src_super_b0 /*+basename(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src_super)*/ 
(
 tier_regex,
 has_pa_has_st_regex,
 unspec_regex,
 step_regex,
 botox_regex,
 prespa_regex,
 tier_cat_regex,
 medrecs_regex,
 restcat,
 restriction_category,
 meaning,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.tier_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.has_pa_has_st_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.unspec_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.step_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.botox_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.prespa_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.tier_cat_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.medrecs_regex,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.restcat,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.restriction_category,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.meaning,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.batch_id,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.row_id,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src
 ORDER BY PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.batch_id
SEGMENTED BY hash(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src_super_b0 /*+basename(PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src_super)*/ 
(
 rest_cat,
 description,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.rest_cat,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.description,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.notes,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.batch_id,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.row_id,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src
 ORDER BY PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.batch_id
SEGMENTED BY hash(PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_STEP_RESTRICTION_DESCRIPTION_V01_src_super_b0 /*+basename(PS_STEP_RESTRICTION_DESCRIPTION_V01_src_super)*/ 
(
 step,
 description,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_STEP_RESTRICTION_DESCRIPTION_V01_src.step,
        PS_STEP_RESTRICTION_DESCRIPTION_V01_src.description,
        PS_STEP_RESTRICTION_DESCRIPTION_V01_src.batch_id,
        PS_STEP_RESTRICTION_DESCRIPTION_V01_src.row_id,
        PS_STEP_RESTRICTION_DESCRIPTION_V01_src.update_ts
 FROM teva_ingestion.PS_STEP_RESTRICTION_DESCRIPTION_V01_src
 ORDER BY PS_STEP_RESTRICTION_DESCRIPTION_V01_src.batch_id
SEGMENTED BY hash(PS_STEP_RESTRICTION_DESCRIPTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_STEP_RESTRICTION_V01_src_super_b0 /*+basename(PS_STEP_RESTRICTION_V01_src_super)*/ 
(
 code,
 step_category,
 restriction_group,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_STEP_RESTRICTION_V01_src.code,
        PS_STEP_RESTRICTION_V01_src.step_category,
        PS_STEP_RESTRICTION_V01_src.restriction_group,
        PS_STEP_RESTRICTION_V01_src.notes,
        PS_STEP_RESTRICTION_V01_src.batch_id,
        PS_STEP_RESTRICTION_V01_src.row_id,
        PS_STEP_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_STEP_RESTRICTION_V01_src
 ORDER BY PS_STEP_RESTRICTION_V01_src.batch_id
SEGMENTED BY hash(PS_STEP_RESTRICTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src_super_b0 /*+basename(PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src_super)*/ 
(
 tier_cat,
 description,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.tier_cat,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.description,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.notes,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.batch_id,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.row_id,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src
 ORDER BY PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.batch_id
SEGMENTED BY hash(PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_UNSPECIFIED_REC_RESTRICTION_V01_src_super_b0 /*+basename(PS_UNSPECIFIED_REC_RESTRICTION_V01_src_super)*/ 
(
 code,
 unspecified_restriction_flag,
 restriction_detail_id,
 notes,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_UNSPECIFIED_REC_RESTRICTION_V01_src.code,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.unspecified_restriction_flag,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.restriction_detail_id,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.notes,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.batch_id,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.row_id,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_UNSPECIFIED_REC_RESTRICTION_V01_src
 ORDER BY PS_UNSPECIFIED_REC_RESTRICTION_V01_src.batch_id
SEGMENTED BY hash(PS_UNSPECIFIED_REC_RESTRICTION_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.PS_FTF_PBM_FUNCTIONS_V01_src_super_b0 /*+basename(PS_FTF_PBM_FUNCTIONS_V01_src_super)*/ 
(
 pbm_function_id,
 pbm_function,
 notes,
 used,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT PS_FTF_PBM_FUNCTIONS_V01_src.pbm_function_id,
        PS_FTF_PBM_FUNCTIONS_V01_src.pbm_function,
        PS_FTF_PBM_FUNCTIONS_V01_src.notes,
        PS_FTF_PBM_FUNCTIONS_V01_src.used,
        PS_FTF_PBM_FUNCTIONS_V01_src.batch_id,
        PS_FTF_PBM_FUNCTIONS_V01_src.row_id,
        PS_FTF_PBM_FUNCTIONS_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_PBM_FUNCTIONS_V01_src
 ORDER BY PS_FTF_PBM_FUNCTIONS_V01_src.batch_id
SEGMENTED BY hash(PS_FTF_PBM_FUNCTIONS_V01_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.teva_ingestion_control_b0 /*+basename(teva_ingestion_control),createtype(L)*/ 
(
 batch_id,
 file_class,
 source_file_id,
 source_file,
 source_system,
 source_file_run_date,
 source_file_run_ts,
 message,
 data_from_ts,
 data_to_ts,
 job_start_ts,
 job_end_ts,
 update_ts,
 unique_file_id,
 original_source_system,
 original_source_system_path,
 original_source_system_modified_date,
 rows_loaded
)
AS
 SELECT teva_ingestion_control.batch_id,
        teva_ingestion_control.file_class,
        teva_ingestion_control.source_file_id,
        teva_ingestion_control.source_file,
        teva_ingestion_control.source_system,
        teva_ingestion_control.source_file_run_date,
        teva_ingestion_control.source_file_run_ts,
        teva_ingestion_control.message,
        teva_ingestion_control.data_from_ts,
        teva_ingestion_control.data_to_ts,
        teva_ingestion_control.job_start_ts,
        teva_ingestion_control.job_end_ts,
        teva_ingestion_control.update_ts,
        teva_ingestion_control.unique_file_id,
        teva_ingestion_control.original_source_system,
        teva_ingestion_control.original_source_system_path,
        teva_ingestion_control.original_source_system_modified_date,
        teva_ingestion_control.rows_loaded
 FROM teva_ingestion.teva_ingestion_control
 ORDER BY teva_ingestion_control.batch_id,
          teva_ingestion_control.file_class,
          teva_ingestion_control.source_file_id,
          teva_ingestion_control.source_file,
          teva_ingestion_control.source_system,
          teva_ingestion_control.source_file_run_date,
          teva_ingestion_control.source_file_run_ts,
          teva_ingestion_control.message,
          teva_ingestion_control.data_from_ts,
          teva_ingestion_control.data_to_ts,
          teva_ingestion_control.job_start_ts,
          teva_ingestion_control.job_end_ts,
          teva_ingestion_control.update_ts
SEGMENTED BY hash(teva_ingestion_control.batch_id, teva_ingestion_control.source_file_id, teva_ingestion_control.source_file_run_date, teva_ingestion_control.source_file_run_ts, teva_ingestion_control.data_from_ts, teva_ingestion_control.data_to_ts, teva_ingestion_control.job_start_ts, teva_ingestion_control.job_end_ts, teva_ingestion_control.update_ts, teva_ingestion_control.file_class, teva_ingestion_control.source_system, teva_ingestion_control.message, teva_ingestion_control.source_file) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CLM_PRESENTATION_VOD__C_src_b0 /*+basename(EXT_CLM_PRESENTATION_VOD__C_src),createtype(L)*/ 
(
 APPROVED_VOD__C,
 COPIED_FROM_VOD__C,
 COPY_DATE_VOD__C,
 CREATEDBYID,
 CREATEDDATE,
 DEFAULT_PRESENTATION_VOD__C,
 GROUP_TO_SHARE_TO__C,
 HIDDEN_VOD__C,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 NAME,
 ORIGINAL_RECORD_ID_VOD__C,
 OWNERID,
 PARENTID_VOD__C,
 PRESENTATION_ID_VOD__C,
 PRODUCT_VOD__C,
 SYSTEMMODSTAMP,
 TRAINING_VOD__C,
 TYPE_VOD__C,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_CLM_PRESENTATION_VOD__C_src.APPROVED_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.COPIED_FROM_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.COPY_DATE_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.CREATEDBYID,
        EXT_CLM_PRESENTATION_VOD__C_src.CREATEDDATE,
        EXT_CLM_PRESENTATION_VOD__C_src.DEFAULT_PRESENTATION_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.GROUP_TO_SHARE_TO__C,
        EXT_CLM_PRESENTATION_VOD__C_src.HIDDEN_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.ID,
        EXT_CLM_PRESENTATION_VOD__C_src.ISDELETED,
        EXT_CLM_PRESENTATION_VOD__C_src.ISLOCKED,
        EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDBYID,
        EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDDATE,
        EXT_CLM_PRESENTATION_VOD__C_src.MAYEDIT,
        EXT_CLM_PRESENTATION_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.NAME,
        EXT_CLM_PRESENTATION_VOD__C_src.ORIGINAL_RECORD_ID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.OWNERID,
        EXT_CLM_PRESENTATION_VOD__C_src.PARENTID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.PRESENTATION_ID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.PRODUCT_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.SYSTEMMODSTAMP,
        EXT_CLM_PRESENTATION_VOD__C_src.TRAINING_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.TYPE_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.batch_id,
        EXT_CLM_PRESENTATION_VOD__C_src.row_id,
        EXT_CLM_PRESENTATION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_CLM_PRESENTATION_VOD__C_src
 ORDER BY EXT_CLM_PRESENTATION_VOD__C_src.APPROVED_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.COPIED_FROM_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.COPY_DATE_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.CREATEDBYID,
          EXT_CLM_PRESENTATION_VOD__C_src.CREATEDDATE,
          EXT_CLM_PRESENTATION_VOD__C_src.DEFAULT_PRESENTATION_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.GROUP_TO_SHARE_TO__C,
          EXT_CLM_PRESENTATION_VOD__C_src.HIDDEN_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.ID,
          EXT_CLM_PRESENTATION_VOD__C_src.ISDELETED,
          EXT_CLM_PRESENTATION_VOD__C_src.ISLOCKED,
          EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDBYID,
          EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDDATE,
          EXT_CLM_PRESENTATION_VOD__C_src.MAYEDIT,
          EXT_CLM_PRESENTATION_VOD__C_src.MOBILE_ID_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.NAME,
          EXT_CLM_PRESENTATION_VOD__C_src.ORIGINAL_RECORD_ID_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.OWNERID,
          EXT_CLM_PRESENTATION_VOD__C_src.PARENTID_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.PRESENTATION_ID_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.PRODUCT_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.SYSTEMMODSTAMP,
          EXT_CLM_PRESENTATION_VOD__C_src.TRAINING_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.TYPE_VOD__C,
          EXT_CLM_PRESENTATION_VOD__C_src.batch_id,
          EXT_CLM_PRESENTATION_VOD__C_src.row_id,
          EXT_CLM_PRESENTATION_VOD__C_src.update_ts
SEGMENTED BY hash(EXT_CLM_PRESENTATION_VOD__C_src.APPROVED_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.DEFAULT_PRESENTATION_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.HIDDEN_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.ISDELETED, EXT_CLM_PRESENTATION_VOD__C_src.ISLOCKED, EXT_CLM_PRESENTATION_VOD__C_src.MAYEDIT, EXT_CLM_PRESENTATION_VOD__C_src.batch_id, EXT_CLM_PRESENTATION_VOD__C_src.row_id, EXT_CLM_PRESENTATION_VOD__C_src.update_ts, EXT_CLM_PRESENTATION_VOD__C_src.CREATEDBYID, EXT_CLM_PRESENTATION_VOD__C_src.ID, EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDBYID, EXT_CLM_PRESENTATION_VOD__C_src.OWNERID, EXT_CLM_PRESENTATION_VOD__C_src.PRODUCT_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.COPIED_FROM_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.ORIGINAL_RECORD_ID_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.COPY_DATE_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.CREATEDDATE, EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDDATE, EXT_CLM_PRESENTATION_VOD__C_src.SYSTEMMODSTAMP, EXT_CLM_PRESENTATION_VOD__C_src.GROUP_TO_SHARE_TO__C, EXT_CLM_PRESENTATION_VOD__C_src.NAME, EXT_CLM_PRESENTATION_VOD__C_src.MOBILE_ID_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.PARENTID_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.PRESENTATION_ID_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.TRAINING_VOD__C, EXT_CLM_PRESENTATION_VOD__C_src.TYPE_VOD__C) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C_src_b0 /*+basename(EXT_TIME_OFF_TERRITORY_VOD__C_src),createtype(L)*/ 
(
 CREATEDBYID,
 CREATEDDATE,
 DATE_VOD__C,
 HOURS_OFF_VOD__C,
 HOURS_VOD__C,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTACTIVITYDATE,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 NAME,
 OWNERID,
 REASON_VOD__C,
 START_TIME_VOD__C,
 STATUS_VOD__C,
 SYSTEMMODSTAMP,
 TERRITORY_VOD__C,
 TIME_VOD__C,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDBYID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDDATE,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.DATE_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_OFF_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.ID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.ISDELETED,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.ISLOCKED,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTACTIVITYDATE,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDBYID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDDATE,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.MAYEDIT,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.NAME,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.OWNERID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.REASON_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.START_TIME_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.STATUS_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.SYSTEMMODSTAMP,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.TERRITORY_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.TIME_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.batch_id,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.row_id,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C_src
 ORDER BY EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDBYID,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDDATE,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.DATE_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_OFF_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.ID,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.ISDELETED,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.ISLOCKED,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTACTIVITYDATE,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDBYID,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDDATE,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.MAYEDIT,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.MOBILE_ID_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.NAME,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.OWNERID,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.REASON_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.START_TIME_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.STATUS_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.SYSTEMMODSTAMP,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.TERRITORY_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.TIME_VOD__C,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.batch_id,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.row_id,
          EXT_TIME_OFF_TERRITORY_VOD__C_src.update_ts
SEGMENTED BY hash(EXT_TIME_OFF_TERRITORY_VOD__C_src.ISDELETED, EXT_TIME_OFF_TERRITORY_VOD__C_src.ISLOCKED, EXT_TIME_OFF_TERRITORY_VOD__C_src.MAYEDIT, EXT_TIME_OFF_TERRITORY_VOD__C_src.START_TIME_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.batch_id, EXT_TIME_OFF_TERRITORY_VOD__C_src.row_id, EXT_TIME_OFF_TERRITORY_VOD__C_src.update_ts, EXT_TIME_OFF_TERRITORY_VOD__C_src.DATE_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTACTIVITYDATE, EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDBYID, EXT_TIME_OFF_TERRITORY_VOD__C_src.ID, EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDBYID, EXT_TIME_OFF_TERRITORY_VOD__C_src.OWNERID, EXT_TIME_OFF_TERRITORY_VOD__C_src.STATUS_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.TIME_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDDATE, EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDDATE, EXT_TIME_OFF_TERRITORY_VOD__C_src.SYSTEMMODSTAMP, EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_OFF_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.NAME, EXT_TIME_OFF_TERRITORY_VOD__C_src.MOBILE_ID_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.REASON_VOD__C, EXT_TIME_OFF_TERRITORY_VOD__C_src.TERRITORY_VOD__C) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC_src_b0 /*+basename(EXT_CLM_PRESENTATION_SLIDE_VC_src),createtype(L)*/ 
(
 ID,
 ISDELETED,
 NAME,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 CLM_PRESENTATION_VOD__C,
 KEY_MESSAGE_VOD__C,
 DISPLAY_ORDER_VOD__C,
 SUB_PRESENTATION_VOD__C,
 MOBILE_ID_VOD__C,
 EXTERNAL_ID_VOD__C,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_CLM_PRESENTATION_SLIDE_VC_src.ID,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.ISDELETED,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.NAME,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDDATE,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDBYID,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDDATE,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDBYID,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.SYSTEMMODSTAMP,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.MAYEDIT,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.ISLOCKED,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.CLM_PRESENTATION_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.KEY_MESSAGE_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.DISPLAY_ORDER_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.SUB_PRESENTATION_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.MOBILE_ID_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.EXTERNAL_ID_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.batch_id,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.row_id,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.update_ts
 FROM teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC_src
 ORDER BY EXT_CLM_PRESENTATION_SLIDE_VC_src.ID,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.ISDELETED,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.NAME,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDDATE,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDBYID,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDDATE,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDBYID,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.SYSTEMMODSTAMP,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.MAYEDIT,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.ISLOCKED,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.CLM_PRESENTATION_VOD__C,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.KEY_MESSAGE_VOD__C,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.DISPLAY_ORDER_VOD__C,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.SUB_PRESENTATION_VOD__C,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.MOBILE_ID_VOD__C,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.EXTERNAL_ID_VOD__C,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.batch_id,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.row_id,
          EXT_CLM_PRESENTATION_SLIDE_VC_src.update_ts
SEGMENTED BY hash(EXT_CLM_PRESENTATION_SLIDE_VC_src.ISDELETED, EXT_CLM_PRESENTATION_SLIDE_VC_src.MAYEDIT, EXT_CLM_PRESENTATION_SLIDE_VC_src.ISLOCKED, EXT_CLM_PRESENTATION_SLIDE_VC_src.batch_id, EXT_CLM_PRESENTATION_SLIDE_VC_src.row_id, EXT_CLM_PRESENTATION_SLIDE_VC_src.update_ts, EXT_CLM_PRESENTATION_SLIDE_VC_src.ID, EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDBYID, EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDBYID, EXT_CLM_PRESENTATION_SLIDE_VC_src.CLM_PRESENTATION_VOD__C, EXT_CLM_PRESENTATION_SLIDE_VC_src.KEY_MESSAGE_VOD__C, EXT_CLM_PRESENTATION_SLIDE_VC_src.SUB_PRESENTATION_VOD__C, EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDDATE, EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDDATE, EXT_CLM_PRESENTATION_SLIDE_VC_src.SYSTEMMODSTAMP, EXT_CLM_PRESENTATION_SLIDE_VC_src.DISPLAY_ORDER_VOD__C, EXT_CLM_PRESENTATION_SLIDE_VC_src.NAME, EXT_CLM_PRESENTATION_SLIDE_VC_src.MOBILE_ID_VOD__C, EXT_CLM_PRESENTATION_SLIDE_VC_src.EXTERNAL_ID_VOD__C) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C_src_b0 /*+basename(EXT_IDS_CALL2_DETAIL_VOD__C_src),createtype(L)*/ 
(
 ID,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_IDS_CALL2_DETAIL_VOD__C_src.ID,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.batch_id,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.row_id,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C_src
 ORDER BY EXT_IDS_CALL2_DETAIL_VOD__C_src.ID,
          EXT_IDS_CALL2_DETAIL_VOD__C_src.batch_id,
          EXT_IDS_CALL2_DETAIL_VOD__C_src.row_id,
          EXT_IDS_CALL2_DETAIL_VOD__C_src.update_ts
SEGMENTED BY hash(EXT_IDS_CALL2_DETAIL_VOD__C_src.batch_id, EXT_IDS_CALL2_DETAIL_VOD__C_src.row_id, EXT_IDS_CALL2_DETAIL_VOD__C_src.update_ts, EXT_IDS_CALL2_DETAIL_VOD__C_src.ID) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IDS_CALL2_VOD__C_src_b0 /*+basename(EXT_IDS_CALL2_VOD__C_src),createtype(L)*/ 
(
 ID,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_IDS_CALL2_VOD__C_src.ID,
        EXT_IDS_CALL2_VOD__C_src.batch_id,
        EXT_IDS_CALL2_VOD__C_src.row_id,
        EXT_IDS_CALL2_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_VOD__C_src
 ORDER BY EXT_IDS_CALL2_VOD__C_src.ID,
          EXT_IDS_CALL2_VOD__C_src.batch_id,
          EXT_IDS_CALL2_VOD__C_src.row_id,
          EXT_IDS_CALL2_VOD__C_src.update_ts
SEGMENTED BY hash(EXT_IDS_CALL2_VOD__C_src.batch_id, EXT_IDS_CALL2_VOD__C_src.row_id, EXT_IDS_CALL2_VOD__C_src.update_ts, EXT_IDS_CALL2_VOD__C_src.ID) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_PLAN_XREF_ACCELERATED_src_b0 /*+basename(EXT_IMS_PLAN_XREF_ACCELERATED_src),createtype(L)*/ 
(
 PAYER_NUM,
 PAYER_NAME,
 PLAN_NUM,
 PAYER_PLAN_NUM,
 PLAN_NAME,
 MODEL,
 CITY,
 HQ_STATE,
 OPERATING_STATE,
 MONTHS_WITH_DATA,
 batch_id,
 row_id,
 update_ts
)
AS
 SELECT EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NUM,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NAME,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NUM,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_PLAN_NUM,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NAME,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.MODEL,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.CITY,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.HQ_STATE,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.OPERATING_STATE,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.MONTHS_WITH_DATA,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.batch_id,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.row_id,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.update_ts
 FROM teva_ingestion.EXT_IMS_PLAN_XREF_ACCELERATED_src
 ORDER BY EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NUM,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NAME,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NUM,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_PLAN_NUM,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NAME,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.MODEL,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.CITY,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.HQ_STATE,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.OPERATING_STATE,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.MONTHS_WITH_DATA,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.batch_id,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.row_id,
          EXT_IMS_PLAN_XREF_ACCELERATED_src.update_ts
SEGMENTED BY hash(EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NUM, EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NUM, EXT_IMS_PLAN_XREF_ACCELERATED_src.HQ_STATE, EXT_IMS_PLAN_XREF_ACCELERATED_src.OPERATING_STATE, EXT_IMS_PLAN_XREF_ACCELERATED_src.MONTHS_WITH_DATA, EXT_IMS_PLAN_XREF_ACCELERATED_src.batch_id, EXT_IMS_PLAN_XREF_ACCELERATED_src.row_id, EXT_IMS_PLAN_XREF_ACCELERATED_src.update_ts, EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_PLAN_NUM, EXT_IMS_PLAN_XREF_ACCELERATED_src.MODEL, EXT_IMS_PLAN_XREF_ACCELERATED_src.CITY, EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NAME, EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NAME) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_EVENT_ATTENDEE_src_super_b0 /*+basename(EXT_AHM_EVENT_ATTENDEE_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 EVENT_NUMBER,
 EMPLOYEE_ID,
 CUSTOMER_ID,
 ATTENDEE_ID,
 ATTENDEE_LAST_NAME,
 ATTENDEE_FIRST_NAME,
 ATTENDEE_MIDDLE_NAME,
 ATTENDEE_TITLE,
 ATTENDEE_SPECIALTY,
 ATTENDEE_DEGREE,
 ATTENDEE_ADDRESS_LINE_1,
 ATTENDEE_ADDRESS_LINE_2,
 ATTENDEE_ADDRESS_LINE_3,
 ATTENDEE_ADDRESS_LINE_4,
 ATTENDEE_CITY,
 ATTENDEE_STATE_PROVINCE,
 ATTENDEE_POSTAL_CODE,
 ATTENDEE_POSTAL_EXTENDED_CODE,
 ATTENDEE_COUNTRY_CODE,
 ATTENDEE_PHONE,
 ATTENDEE_FAX,
 ATTENDEE_EMAIL,
 DEA_NUMBER,
 IMS_NUMBER,
 ME_NUMBER,
 NPI_NUMBER,
 ATTENDEE_CATEGORY_CODE,
 ATTENDED,
 MEAL,
 NON_HCP_COUNT,
 OTHER_HCP_COUNT,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_EVENT_ATTENDEE_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_EVENT_ATTENDEE_src.EVENT_NUMBER,
        EXT_AHM_EVENT_ATTENDEE_src.EMPLOYEE_ID,
        EXT_AHM_EVENT_ATTENDEE_src.CUSTOMER_ID,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ID,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_LAST_NAME,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_FIRST_NAME,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_MIDDLE_NAME,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_TITLE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_SPECIALTY,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_DEGREE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_1,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_2,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_3,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_4,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_CITY,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_STATE_PROVINCE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_POSTAL_CODE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_POSTAL_EXTENDED_CODE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_COUNTRY_CODE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_PHONE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_FAX,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_EMAIL,
        EXT_AHM_EVENT_ATTENDEE_src.DEA_NUMBER,
        EXT_AHM_EVENT_ATTENDEE_src.IMS_NUMBER,
        EXT_AHM_EVENT_ATTENDEE_src.ME_NUMBER,
        EXT_AHM_EVENT_ATTENDEE_src.NPI_NUMBER,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_CATEGORY_CODE,
        EXT_AHM_EVENT_ATTENDEE_src.ATTENDED,
        EXT_AHM_EVENT_ATTENDEE_src.MEAL,
        EXT_AHM_EVENT_ATTENDEE_src.NON_HCP_COUNT,
        EXT_AHM_EVENT_ATTENDEE_src.OTHER_HCP_COUNT,
        EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_1,
        EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_2,
        EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_3,
        EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_4,
        EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_5,
        EXT_AHM_EVENT_ATTENDEE_src.REC_STAT_CD,
        EXT_AHM_EVENT_ATTENDEE_src.batch_id,
        EXT_AHM_EVENT_ATTENDEE_src.row_id,
        EXT_AHM_EVENT_ATTENDEE_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_ATTENDEE_src
 ORDER BY EXT_AHM_EVENT_ATTENDEE_src.batch_id
SEGMENTED BY hash(EXT_AHM_EVENT_ATTENDEE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_EVENT_EXPENSE_src_super_b0 /*+basename(EXT_AHM_EVENT_EXPENSE_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 EVENT_NUMBER,
 PAYMENT_ID,
 EXPENSE_CATEGORY,
 AMOUNT,
 REMIT_TO_ID,
 RECIPIENT_ID,
 CHECK_NUMBER,
 CHECK_DATE,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_EVENT_EXPENSE_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_EVENT_EXPENSE_src.EVENT_NUMBER,
        EXT_AHM_EVENT_EXPENSE_src.PAYMENT_ID,
        EXT_AHM_EVENT_EXPENSE_src.EXPENSE_CATEGORY,
        EXT_AHM_EVENT_EXPENSE_src.AMOUNT,
        EXT_AHM_EVENT_EXPENSE_src.REMIT_TO_ID,
        EXT_AHM_EVENT_EXPENSE_src.RECIPIENT_ID,
        EXT_AHM_EVENT_EXPENSE_src.CHECK_NUMBER,
        EXT_AHM_EVENT_EXPENSE_src.CHECK_DATE,
        EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_1,
        EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_2,
        EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_3,
        EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_4,
        EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_5,
        EXT_AHM_EVENT_EXPENSE_src.REC_STAT_CD,
        EXT_AHM_EVENT_EXPENSE_src.batch_id,
        EXT_AHM_EVENT_EXPENSE_src.row_id,
        EXT_AHM_EVENT_EXPENSE_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_EXPENSE_src
 ORDER BY EXT_AHM_EVENT_EXPENSE_src.batch_id
SEGMENTED BY hash(EXT_AHM_EVENT_EXPENSE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_EVENT_HOST_src_super_b0 /*+basename(EXT_AHM_EVENT_HOST_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 EVENT_NUMBER,
 EMPLOYEE_ID,
 TERRITORY,
 ORDINAL,
 BUDGET_PERCENT,
 BUDGET_POOL,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_EVENT_HOST_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_EVENT_HOST_src.EVENT_NUMBER,
        EXT_AHM_EVENT_HOST_src.EMPLOYEE_ID,
        EXT_AHM_EVENT_HOST_src.TERRITORY,
        EXT_AHM_EVENT_HOST_src.ORDINAL,
        EXT_AHM_EVENT_HOST_src.BUDGET_PERCENT,
        EXT_AHM_EVENT_HOST_src.BUDGET_POOL,
        EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_1,
        EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_2,
        EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_3,
        EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_4,
        EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_5,
        EXT_AHM_EVENT_HOST_src.REC_STAT_CD,
        EXT_AHM_EVENT_HOST_src.batch_id,
        EXT_AHM_EVENT_HOST_src.row_id,
        EXT_AHM_EVENT_HOST_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_HOST_src
 ORDER BY EXT_AHM_EVENT_HOST_src.batch_id
SEGMENTED BY hash(EXT_AHM_EVENT_HOST_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_EVENT_PRODUCT_src_super_b0 /*+basename(EXT_AHM_EVENT_PRODUCT_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 EVENT_NUMBER,
 PRODUCT_ID,
 PRODUCT_NAME,
 TOPIC_ID,
 TOPIC_NAME,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_EVENT_PRODUCT_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_EVENT_PRODUCT_src.EVENT_NUMBER,
        EXT_AHM_EVENT_PRODUCT_src.PRODUCT_ID,
        EXT_AHM_EVENT_PRODUCT_src.PRODUCT_NAME,
        EXT_AHM_EVENT_PRODUCT_src.TOPIC_ID,
        EXT_AHM_EVENT_PRODUCT_src.TOPIC_NAME,
        EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_1,
        EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_2,
        EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_3,
        EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_4,
        EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_5,
        EXT_AHM_EVENT_PRODUCT_src.REC_STAT_CD,
        EXT_AHM_EVENT_PRODUCT_src.batch_id,
        EXT_AHM_EVENT_PRODUCT_src.row_id,
        EXT_AHM_EVENT_PRODUCT_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_PRODUCT_src
 ORDER BY EXT_AHM_EVENT_PRODUCT_src.batch_id
SEGMENTED BY hash(EXT_AHM_EVENT_PRODUCT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_EVENT_SPEAKER_src_super_b0 /*+basename(EXT_AHM_EVENT_SPEAKER_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 EVENT_NUMBER,
 EVENT_SPEAKER_STATUS,
 SPEAKER_ID,
 PRODUCT_ID,
 TOPIC_ID,
 CANCELLATION_REASON,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_EVENT_SPEAKER_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_EVENT_SPEAKER_src.EVENT_NUMBER,
        EXT_AHM_EVENT_SPEAKER_src.EVENT_SPEAKER_STATUS,
        EXT_AHM_EVENT_SPEAKER_src.SPEAKER_ID,
        EXT_AHM_EVENT_SPEAKER_src.PRODUCT_ID,
        EXT_AHM_EVENT_SPEAKER_src.TOPIC_ID,
        EXT_AHM_EVENT_SPEAKER_src.CANCELLATION_REASON,
        EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_1,
        EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_2,
        EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_3,
        EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_4,
        EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_5,
        EXT_AHM_EVENT_SPEAKER_src.REC_STAT_CD,
        EXT_AHM_EVENT_SPEAKER_src.batch_id,
        EXT_AHM_EVENT_SPEAKER_src.row_id,
        EXT_AHM_EVENT_SPEAKER_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_SPEAKER_src
 ORDER BY EXT_AHM_EVENT_SPEAKER_src.batch_id
SEGMENTED BY hash(EXT_AHM_EVENT_SPEAKER_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_ORGANIZATION_src_super_b0 /*+basename(EXT_AHM_ORGANIZATION_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 AHM_ORG_ID,
 NAME,
 ADDRESS_LINE_1,
 ADDRESS_LINE_2,
 ADDRESS_LINE_3,
 ADDRESS_LINE_4,
 CITY,
 STATE_PROVINCE,
 POSTAL_CODE,
 POSTAL_EXTENDED_CODE,
 COUNTRY_CODE,
 PHONE,
 FAX,
 EMAIL,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_ORGANIZATION_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_ORGANIZATION_src.AHM_ORG_ID,
        EXT_AHM_ORGANIZATION_src.NAME,
        EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_1,
        EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_2,
        EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_3,
        EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_4,
        EXT_AHM_ORGANIZATION_src.CITY,
        EXT_AHM_ORGANIZATION_src.STATE_PROVINCE,
        EXT_AHM_ORGANIZATION_src.POSTAL_CODE,
        EXT_AHM_ORGANIZATION_src.POSTAL_EXTENDED_CODE,
        EXT_AHM_ORGANIZATION_src.COUNTRY_CODE,
        EXT_AHM_ORGANIZATION_src.PHONE,
        EXT_AHM_ORGANIZATION_src.FAX,
        EXT_AHM_ORGANIZATION_src.EMAIL,
        EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_1,
        EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_2,
        EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_3,
        EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_4,
        EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_5,
        EXT_AHM_ORGANIZATION_src.REC_STAT_CD,
        EXT_AHM_ORGANIZATION_src.batch_id,
        EXT_AHM_ORGANIZATION_src.row_id,
        EXT_AHM_ORGANIZATION_src.update_ts
 FROM teva_ingestion.EXT_AHM_ORGANIZATION_src
 ORDER BY EXT_AHM_ORGANIZATION_src.batch_id
SEGMENTED BY hash(EXT_AHM_ORGANIZATION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_SPEAKER_CONTRACT_src_super_b0 /*+basename(EXT_AHM_SPEAKER_CONTRACT_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 SPEAKER_ID,
 CONTRACT_TYPE_CODE,
 CONTRACT_TYPE_NAME,
 CONTRACT_EFFECTIVE_DATE,
 CONTRACT_EXPIRATION_DATE,
 CONTRACT_SIGNED_DATE,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_SPEAKER_CONTRACT_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_SPEAKER_CONTRACT_src.SPEAKER_ID,
        EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_TYPE_CODE,
        EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_TYPE_NAME,
        EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_EFFECTIVE_DATE,
        EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_EXPIRATION_DATE,
        EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_SIGNED_DATE,
        EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_1,
        EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_2,
        EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_3,
        EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_4,
        EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_5,
        EXT_AHM_SPEAKER_CONTRACT_src.REC_STAT_CD,
        EXT_AHM_SPEAKER_CONTRACT_src.batch_id,
        EXT_AHM_SPEAKER_CONTRACT_src.row_id,
        EXT_AHM_SPEAKER_CONTRACT_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_CONTRACT_src
 ORDER BY EXT_AHM_SPEAKER_CONTRACT_src.batch_id
SEGMENTED BY hash(EXT_AHM_SPEAKER_CONTRACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_SPEAKER_LICENSE_src_super_b0 /*+basename(EXT_AHM_SPEAKER_LICENSE_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 SPEAKER_ID,
 STATE_CODE,
 STATE_LICENSE_NUMBER,
 STATE_LICENSE_EFFECTIVE_DATE,
 STATE_LICENSE_EXPIRATION_DATE,
 DEBARMENT_INDICATOR,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_SPEAKER_LICENSE_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_SPEAKER_LICENSE_src.SPEAKER_ID,
        EXT_AHM_SPEAKER_LICENSE_src.STATE_CODE,
        EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_NUMBER,
        EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_EFFECTIVE_DATE,
        EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_EXPIRATION_DATE,
        EXT_AHM_SPEAKER_LICENSE_src.DEBARMENT_INDICATOR,
        EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_1,
        EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_2,
        EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_3,
        EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_4,
        EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_5,
        EXT_AHM_SPEAKER_LICENSE_src.REC_STAT_CD,
        EXT_AHM_SPEAKER_LICENSE_src.batch_id,
        EXT_AHM_SPEAKER_LICENSE_src.row_id,
        EXT_AHM_SPEAKER_LICENSE_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_LICENSE_src
 ORDER BY EXT_AHM_SPEAKER_LICENSE_src.batch_id
SEGMENTED BY hash(EXT_AHM_SPEAKER_LICENSE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_SPEAKER_PROFILE_src_super_b0 /*+basename(EXT_AHM_SPEAKER_PROFILE_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 SPEAKER_ID,
 FIRST_NAME,
 LAST_NAME,
 MIDDLE_NAME,
 TITLE,
 ADDRESS_LINE_1,
 ADDRESS_LINE_2,
 ADDRESS_LINE_3,
 ADDRESS_LINE_4,
 CITY,
 STATE_PROVINCE,
 POSTAL_CODE,
 POSTAL_EXTENDED_CODE,
 COUNTRY_CODE,
 BUSINESS_PHONE,
 BUSINESS_PHONE_EXTENSION,
 HOME_PHONE,
 MOBILE_PHONE,
 BUSINESS_FAX,
 HOME_FAX,
 EMAIL,
 SPECIALTY,
 PERSONAL_SUFFIX,
 DEGREE,
 ME_NUMBER,
 IMS_NUMBER,
 DEA_NUMBER,
 NPI_NUMBER,
 CLINICAL_AFFILIATION,
 CLINICAL_TITLE,
 ACADEMIC_AFFILIATION,
 OTHER_AFFILIATION,
 FEDERAL_EMPLOYEE_INDICATOR,
 STATE_EMPLOYEE_INDICATOR,
 LOCAL_EMPLOYEE_INDICATOR,
 FDA_DEBARMENT_INDICATOR,
 OFAC_DEBARMENT_INDICATOR,
 OIG_EXCLUSION_INDICATOR,
 SPEAKER_BIOGRAPHY,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_SPEAKER_PROFILE_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_SPEAKER_PROFILE_src.SPEAKER_ID,
        EXT_AHM_SPEAKER_PROFILE_src.FIRST_NAME,
        EXT_AHM_SPEAKER_PROFILE_src.LAST_NAME,
        EXT_AHM_SPEAKER_PROFILE_src.MIDDLE_NAME,
        EXT_AHM_SPEAKER_PROFILE_src.TITLE,
        EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_1,
        EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_2,
        EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_3,
        EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_4,
        EXT_AHM_SPEAKER_PROFILE_src.CITY,
        EXT_AHM_SPEAKER_PROFILE_src.STATE_PROVINCE,
        EXT_AHM_SPEAKER_PROFILE_src.POSTAL_CODE,
        EXT_AHM_SPEAKER_PROFILE_src.POSTAL_EXTENDED_CODE,
        EXT_AHM_SPEAKER_PROFILE_src.COUNTRY_CODE,
        EXT_AHM_SPEAKER_PROFILE_src.BUSINESS_PHONE,
        EXT_AHM_SPEAKER_PROFILE_src.BUSINESS_PHONE_EXTENSION,
        EXT_AHM_SPEAKER_PROFILE_src.HOME_PHONE,
        EXT_AHM_SPEAKER_PROFILE_src.MOBILE_PHONE,
        EXT_AHM_SPEAKER_PROFILE_src.BUSINESS_FAX,
        EXT_AHM_SPEAKER_PROFILE_src.HOME_FAX,
        EXT_AHM_SPEAKER_PROFILE_src.EMAIL,
        EXT_AHM_SPEAKER_PROFILE_src.SPECIALTY,
        EXT_AHM_SPEAKER_PROFILE_src.PERSONAL_SUFFIX,
        EXT_AHM_SPEAKER_PROFILE_src.DEGREE,
        EXT_AHM_SPEAKER_PROFILE_src.ME_NUMBER,
        EXT_AHM_SPEAKER_PROFILE_src.IMS_NUMBER,
        EXT_AHM_SPEAKER_PROFILE_src.DEA_NUMBER,
        EXT_AHM_SPEAKER_PROFILE_src.NPI_NUMBER,
        EXT_AHM_SPEAKER_PROFILE_src.CLINICAL_AFFILIATION,
        EXT_AHM_SPEAKER_PROFILE_src.CLINICAL_TITLE,
        EXT_AHM_SPEAKER_PROFILE_src.ACADEMIC_AFFILIATION,
        EXT_AHM_SPEAKER_PROFILE_src.OTHER_AFFILIATION,
        EXT_AHM_SPEAKER_PROFILE_src.FEDERAL_EMPLOYEE_INDICATOR,
        EXT_AHM_SPEAKER_PROFILE_src.STATE_EMPLOYEE_INDICATOR,
        EXT_AHM_SPEAKER_PROFILE_src.LOCAL_EMPLOYEE_INDICATOR,
        EXT_AHM_SPEAKER_PROFILE_src.FDA_DEBARMENT_INDICATOR,
        EXT_AHM_SPEAKER_PROFILE_src.OFAC_DEBARMENT_INDICATOR,
        EXT_AHM_SPEAKER_PROFILE_src.OIG_EXCLUSION_INDICATOR,
        EXT_AHM_SPEAKER_PROFILE_src.SPEAKER_BIOGRAPHY,
        EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_1,
        EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_2,
        EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_3,
        EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_4,
        EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_5,
        EXT_AHM_SPEAKER_PROFILE_src.REC_STAT_CD,
        EXT_AHM_SPEAKER_PROFILE_src.batch_id,
        EXT_AHM_SPEAKER_PROFILE_src.row_id,
        EXT_AHM_SPEAKER_PROFILE_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_PROFILE_src
 ORDER BY EXT_AHM_SPEAKER_PROFILE_src.batch_id
SEGMENTED BY hash(EXT_AHM_SPEAKER_PROFILE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_SPEAKER_TRAINING_src_super_b0 /*+basename(EXT_AHM_SPEAKER_TRAINING_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 SPEAKER_ID,
 TOPIC_ID,
 EFFECTIVE_DATE,
 EXPIRATION_DATE,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_SPEAKER_TRAINING_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_SPEAKER_TRAINING_src.SPEAKER_ID,
        EXT_AHM_SPEAKER_TRAINING_src.TOPIC_ID,
        EXT_AHM_SPEAKER_TRAINING_src.EFFECTIVE_DATE,
        EXT_AHM_SPEAKER_TRAINING_src.EXPIRATION_DATE,
        EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_1,
        EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_2,
        EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_3,
        EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_4,
        EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_5,
        EXT_AHM_SPEAKER_TRAINING_src.REC_STAT_CD,
        EXT_AHM_SPEAKER_TRAINING_src.batch_id,
        EXT_AHM_SPEAKER_TRAINING_src.row_id,
        EXT_AHM_SPEAKER_TRAINING_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_TRAINING_src
 ORDER BY EXT_AHM_SPEAKER_TRAINING_src.batch_id
SEGMENTED BY hash(EXT_AHM_SPEAKER_TRAINING_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_AHM_TOPIC_PRODUCT_src_super_b0 /*+basename(EXT_AHM_TOPIC_PRODUCT_src_super)*/ 
(
 SOURCE_SYSTEM_NAME,
 TOPIC_ID,
 TOPIC_NAME,
 PRODUCT_ID,
 PRODUCT_NAME,
 EFFECTIVE_DATE,
 EXPIRATION_DATE,
 CUSTOM_FIELD_1,
 CUSTOM_FIELD_2,
 CUSTOM_FIELD_3,
 CUSTOM_FIELD_4,
 CUSTOM_FIELD_5,
 REC_STAT_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_AHM_TOPIC_PRODUCT_src.SOURCE_SYSTEM_NAME,
        EXT_AHM_TOPIC_PRODUCT_src.TOPIC_ID,
        EXT_AHM_TOPIC_PRODUCT_src.TOPIC_NAME,
        EXT_AHM_TOPIC_PRODUCT_src.PRODUCT_ID,
        EXT_AHM_TOPIC_PRODUCT_src.PRODUCT_NAME,
        EXT_AHM_TOPIC_PRODUCT_src.EFFECTIVE_DATE,
        EXT_AHM_TOPIC_PRODUCT_src.EXPIRATION_DATE,
        EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_1,
        EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_2,
        EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_3,
        EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_4,
        EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_5,
        EXT_AHM_TOPIC_PRODUCT_src.REC_STAT_CD,
        EXT_AHM_TOPIC_PRODUCT_src.batch_id,
        EXT_AHM_TOPIC_PRODUCT_src.row_id,
        EXT_AHM_TOPIC_PRODUCT_src.update_ts
 FROM teva_ingestion.EXT_AHM_TOPIC_PRODUCT_src
 ORDER BY EXT_AHM_TOPIC_PRODUCT_src.batch_id
SEGMENTED BY hash(EXT_AHM_TOPIC_PRODUCT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ANDA_SALES_src_super_b0 /*+basename(EXT_ANDA_SALES_src_super)*/ 
(
 TRANSACTION_ID,
 INVOICE_DATE,
 PRODUCT_BRAND,
 PRODUCT_NDC,
 PRODUCT_DESC,
 INVOICE_QTY,
 INVOICE_UNITS,
 INVOICE_COST,
 INVOICE_PACK_COST,
 INVOICE_UNIT_COST,
 CONTRACT_PACK_COST,
 CONTRACT_PURCHASES,
 CONTRACT_NUMBER,
 DISPENSING_LOCATION,
 DL_ADDRESS_1,
 DL_ADDRESS_2,
 DL_CITY,
 DL_STATE,
 DL_ZIP,
 DL_DEA_NUM,
 DEPOT_LOCATION,
 DEP_ADDRESS_1,
 DEP_ADDRESS_2,
 DEP_CITY,
 DEP_STATE,
 DEP_ZIP,
 DEP_DEA_NUM,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ANDA_SALES_src.TRANSACTION_ID,
        EXT_ANDA_SALES_src.INVOICE_DATE,
        EXT_ANDA_SALES_src.PRODUCT_BRAND,
        EXT_ANDA_SALES_src.PRODUCT_NDC,
        EXT_ANDA_SALES_src.PRODUCT_DESC,
        EXT_ANDA_SALES_src.INVOICE_QTY,
        EXT_ANDA_SALES_src.INVOICE_UNITS,
        EXT_ANDA_SALES_src.INVOICE_COST,
        EXT_ANDA_SALES_src.INVOICE_PACK_COST,
        EXT_ANDA_SALES_src.INVOICE_UNIT_COST,
        EXT_ANDA_SALES_src.CONTRACT_PACK_COST,
        EXT_ANDA_SALES_src.CONTRACT_PURCHASES,
        EXT_ANDA_SALES_src.CONTRACT_NUMBER,
        EXT_ANDA_SALES_src.DISPENSING_LOCATION,
        EXT_ANDA_SALES_src.DL_ADDRESS_1,
        EXT_ANDA_SALES_src.DL_ADDRESS_2,
        EXT_ANDA_SALES_src.DL_CITY,
        EXT_ANDA_SALES_src.DL_STATE,
        EXT_ANDA_SALES_src.DL_ZIP,
        EXT_ANDA_SALES_src.DL_DEA_NUM,
        EXT_ANDA_SALES_src.DEPOT_LOCATION,
        EXT_ANDA_SALES_src.DEP_ADDRESS_1,
        EXT_ANDA_SALES_src.DEP_ADDRESS_2,
        EXT_ANDA_SALES_src.DEP_CITY,
        EXT_ANDA_SALES_src.DEP_STATE,
        EXT_ANDA_SALES_src.DEP_ZIP,
        EXT_ANDA_SALES_src.DEP_DEA_NUM,
        EXT_ANDA_SALES_src.batch_id,
        EXT_ANDA_SALES_src.row_id,
        EXT_ANDA_SALES_src.update_ts
 FROM teva_ingestion.EXT_ANDA_SALES_src
 ORDER BY EXT_ANDA_SALES_src.batch_id
SEGMENTED BY hash(EXT_ANDA_SALES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src_super_b0 /*+basename(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src_super)*/ 
(
 TRANS_TYPE,
 ASI_TXN_ID,
 ORIG_ASI_TXN_ID,
 RX_NUM,
 DATE_OF_FILL,
 DATE_WRITTEN,
 DAY_SUPPLY,
 DAW,
 NDC,
 DRUG_DESC,
 NEW_REFILL_CODE,
 NUMBER_OF_REFILLS,
 OTHER_COVERAGE_CODE,
 GROUP_NUM,
 MEMBER_ID,
 PATIENT_GENDER,
 PATIENT_AGE,
 DATE_PROCESSED,
 NABP,
 PHM_NAME,
 PHM_ADD1,
 PHM_ADD2,
 PHM_CITY,
 PHM_STATE,
 PHM_ZIP,
 PHARMACY_NPI,
 NPI,
 DEA,
 PHY_NAME,
 PHY_FN,
 PHY_MI,
 PHY_LN,
 PHY_SUFFIX,
 PHY_PROF_DESG,
 SPEC1,
 SPEC2,
 PHY_ADD1,
 PHY_ADD2,
 PHY_CITY,
 PHY_STATE,
 PHY_ZIP,
 SUBMISSION_METHOD,
 QUANTITY,
 PATIENT_BENEFIT,
 PATIENT_COPAY,
 PATIENT_OOP,
 PHARMACY_TRANSACTION_FEE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.TRANS_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.ORIG_ASI_TXN_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.RX_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DATE_OF_FILL,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DATE_WRITTEN,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DAY_SUPPLY,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DAW,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NDC,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DRUG_DESC,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NEW_REFILL_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NUMBER_OF_REFILLS,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.OTHER_COVERAGE_CODE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.GROUP_NUM,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.MEMBER_ID,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_GENDER,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_AGE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DATE_PROCESSED,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NABP,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_ADD1,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_ADD2,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHARMACY_NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DEA,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_NAME,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_FN,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_MI,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_LN,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_SUFFIX,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_PROF_DESG,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.SPEC1,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.SPEC2,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_ADD1,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_ADD2,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_CITY,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_STATE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_ZIP,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.SUBMISSION_METHOD,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.QUANTITY,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_BENEFIT,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_COPAY,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_OOP,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHARMACY_TRANSACTION_FEE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src
 ORDER BY EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_COPAY_REDEMPTIONS_src_super_b0 /*+basename(EXT_ASI_COPAY_REDEMPTIONS_src_super)*/ 
(
 ASI_TXN_ID,
 TERRITORY_NUM,
 PROGRAM_NUM,
 CLAIM_CERT_NUM,
 RX_DATE,
 NDC_CODE,
 QUANTITY,
 SUBMITTED_COST,
 REBATE_AMOUNT,
 MEMBER_CASH_EXPENSE,
 PHARMACY_FEE,
 TOTAL_AMOUNT_DUE,
 DOB,
 SEX,
 PHARMACY_NAME,
 PHARMACY_ADDRESS,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PRINCIPAL_PHYS_LAST_NAME,
 PRINCIPAL_PHYS_FIRST_NAME,
 PRINCIPAL_PHYS_DEA_NUM,
 COMPANY_PHYS_LAST_NAME,
 COMPANY_PHYS_FIRST_NAME,
 COMPANY_PHYS_ADDRESS1,
 COMPANY_PHYS_ADDRESS2,
 COMPANY_PHYS_CITY,
 COMPANY_PHYS_STATE,
 COMPANY_PHYS_ZIP,
 ASI_PHYS_LAST_NAME,
 ASI_PHYS_FIRST_NAME,
 ASI_PHYS_ADDRESS1,
 ASI_PHYS_ADDRESS2,
 ASI_PHYS_CITY,
 ASI_PHYS_STATE,
 ASI_PHYS_ZIP,
 NPI,
 OTHER_COVERAGE_CODE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_COPAY_REDEMPTIONS_src.ASI_TXN_ID,
        EXT_ASI_COPAY_REDEMPTIONS_src.TERRITORY_NUM,
        EXT_ASI_COPAY_REDEMPTIONS_src.PROGRAM_NUM,
        EXT_ASI_COPAY_REDEMPTIONS_src.CLAIM_CERT_NUM,
        EXT_ASI_COPAY_REDEMPTIONS_src.RX_DATE,
        EXT_ASI_COPAY_REDEMPTIONS_src.NDC_CODE,
        EXT_ASI_COPAY_REDEMPTIONS_src.QUANTITY,
        EXT_ASI_COPAY_REDEMPTIONS_src.SUBMITTED_COST,
        EXT_ASI_COPAY_REDEMPTIONS_src.REBATE_AMOUNT,
        EXT_ASI_COPAY_REDEMPTIONS_src.MEMBER_CASH_EXPENSE,
        EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_FEE,
        EXT_ASI_COPAY_REDEMPTIONS_src.TOTAL_AMOUNT_DUE,
        EXT_ASI_COPAY_REDEMPTIONS_src.DOB,
        EXT_ASI_COPAY_REDEMPTIONS_src.SEX,
        EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_NAME,
        EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_ADDRESS,
        EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_CITY,
        EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_STATE,
        EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_ZIP,
        EXT_ASI_COPAY_REDEMPTIONS_src.PRINCIPAL_PHYS_LAST_NAME,
        EXT_ASI_COPAY_REDEMPTIONS_src.PRINCIPAL_PHYS_FIRST_NAME,
        EXT_ASI_COPAY_REDEMPTIONS_src.PRINCIPAL_PHYS_DEA_NUM,
        EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_LAST_NAME,
        EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_FIRST_NAME,
        EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS1,
        EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS2,
        EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_CITY,
        EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_STATE,
        EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_ZIP,
        EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_LAST_NAME,
        EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_FIRST_NAME,
        EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_ADDRESS1,
        EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_ADDRESS2,
        EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_CITY,
        EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_STATE,
        EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_ZIP,
        EXT_ASI_COPAY_REDEMPTIONS_src.NPI,
        EXT_ASI_COPAY_REDEMPTIONS_src.OTHER_COVERAGE_CODE,
        EXT_ASI_COPAY_REDEMPTIONS_src.batch_id,
        EXT_ASI_COPAY_REDEMPTIONS_src.row_id,
        EXT_ASI_COPAY_REDEMPTIONS_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_REDEMPTIONS_src
 ORDER BY EXT_ASI_COPAY_REDEMPTIONS_src.batch_id
SEGMENTED BY hash(EXT_ASI_COPAY_REDEMPTIONS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ASI_REDEMPTIONS_src_super_b0 /*+basename(EXT_ASI_REDEMPTIONS_src_super)*/ 
(
 ASI_TXN_ID,
 TERRITORY_NUM,
 PROGRAM_NUM,
 CLAIM_CERT_NUM,
 RX_DATE,
 NDC_CODE,
 QUANTITY,
 DOB,
 SEX,
 PHARMACY_NAME,
 PHARMACY_ADDRESS,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PRINCIPAL_PHYS_LAST_NAME,
 PRINCIPAL_PHYS_FIRST_NAME,
 PRINCIPAL_PHYS_DEA_NUM,
 COMPANY_PHYS_LAST_NAME,
 COMPANY_PHYS_FIRST_NAME,
 COMPANY_PHYS_ADDRESS1,
 COMPANY_PHYS_ADDRESS2,
 COMPANY_PHYS_CITY,
 COMPANY_PHYS_STATE,
 COMPANY_PHYS_ZIP,
 ASI_PHYS_LAST_NAME,
 ASI_PHYS_FIRST_NAME,
 ASI_PHYS_ADDRESS1,
 ASI_PHYS_ADDRESS2,
 ASI_PHYS_CITY,
 ASI_PHYS_STATE,
 ASI_PHYS_ZIP,
 NPI,
 OTHER_COVERAGE_CODE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ASI_REDEMPTIONS_src.ASI_TXN_ID,
        EXT_ASI_REDEMPTIONS_src.TERRITORY_NUM,
        EXT_ASI_REDEMPTIONS_src.PROGRAM_NUM,
        EXT_ASI_REDEMPTIONS_src.CLAIM_CERT_NUM,
        EXT_ASI_REDEMPTIONS_src.RX_DATE,
        EXT_ASI_REDEMPTIONS_src.NDC_CODE,
        EXT_ASI_REDEMPTIONS_src.QUANTITY,
        EXT_ASI_REDEMPTIONS_src.DOB,
        EXT_ASI_REDEMPTIONS_src.SEX,
        EXT_ASI_REDEMPTIONS_src.PHARMACY_NAME,
        EXT_ASI_REDEMPTIONS_src.PHARMACY_ADDRESS,
        EXT_ASI_REDEMPTIONS_src.PHARMACY_CITY,
        EXT_ASI_REDEMPTIONS_src.PHARMACY_STATE,
        EXT_ASI_REDEMPTIONS_src.PHARMACY_ZIP,
        EXT_ASI_REDEMPTIONS_src.PRINCIPAL_PHYS_LAST_NAME,
        EXT_ASI_REDEMPTIONS_src.PRINCIPAL_PHYS_FIRST_NAME,
        EXT_ASI_REDEMPTIONS_src.PRINCIPAL_PHYS_DEA_NUM,
        EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_LAST_NAME,
        EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_FIRST_NAME,
        EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS1,
        EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS2,
        EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_CITY,
        EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_STATE,
        EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_ZIP,
        EXT_ASI_REDEMPTIONS_src.ASI_PHYS_LAST_NAME,
        EXT_ASI_REDEMPTIONS_src.ASI_PHYS_FIRST_NAME,
        EXT_ASI_REDEMPTIONS_src.ASI_PHYS_ADDRESS1,
        EXT_ASI_REDEMPTIONS_src.ASI_PHYS_ADDRESS2,
        EXT_ASI_REDEMPTIONS_src.ASI_PHYS_CITY,
        EXT_ASI_REDEMPTIONS_src.ASI_PHYS_STATE,
        EXT_ASI_REDEMPTIONS_src.ASI_PHYS_ZIP,
        EXT_ASI_REDEMPTIONS_src.NPI,
        EXT_ASI_REDEMPTIONS_src.OTHER_COVERAGE_CODE,
        EXT_ASI_REDEMPTIONS_src.batch_id,
        EXT_ASI_REDEMPTIONS_src.row_id,
        EXT_ASI_REDEMPTIONS_src.update_ts
 FROM teva_ingestion.EXT_ASI_REDEMPTIONS_src
 ORDER BY EXT_ASI_REDEMPTIONS_src.batch_id
SEGMENTED BY hash(EXT_ASI_REDEMPTIONS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC_src_super_b0 /*+basename(EXT_CLM_PRESENTATION_SLIDE_VC_src_super)*/ 
(
 ID,
 ISDELETED,
 NAME,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 CLM_PRESENTATION_VOD__C,
 KEY_MESSAGE_VOD__C,
 DISPLAY_ORDER_VOD__C,
 SUB_PRESENTATION_VOD__C,
 MOBILE_ID_VOD__C,
 EXTERNAL_ID_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CLM_PRESENTATION_SLIDE_VC_src.ID,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.ISDELETED,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.NAME,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDDATE,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDBYID,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDDATE,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDBYID,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.SYSTEMMODSTAMP,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.MAYEDIT,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.ISLOCKED,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.CLM_PRESENTATION_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.KEY_MESSAGE_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.DISPLAY_ORDER_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.SUB_PRESENTATION_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.MOBILE_ID_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.EXTERNAL_ID_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.batch_id,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.row_id,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.update_ts
 FROM teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC_src
 ORDER BY EXT_CLM_PRESENTATION_SLIDE_VC_src.batch_id
SEGMENTED BY hash(EXT_CLM_PRESENTATION_SLIDE_VC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CLM_PRESENTATION_VOD__C_src_super_b0 /*+basename(EXT_CLM_PRESENTATION_VOD__C_src_super)*/ 
(
 APPROVED_VOD__C,
 COPIED_FROM_VOD__C,
 COPY_DATE_VOD__C,
 CREATEDBYID,
 CREATEDDATE,
 DEFAULT_PRESENTATION_VOD__C,
 GROUP_TO_SHARE_TO__C,
 HIDDEN_VOD__C,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 NAME,
 ORIGINAL_RECORD_ID_VOD__C,
 OWNERID,
 PARENTID_VOD__C,
 PRESENTATION_ID_VOD__C,
 PRODUCT_VOD__C,
 SYSTEMMODSTAMP,
 TRAINING_VOD__C,
 TYPE_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CLM_PRESENTATION_VOD__C_src.APPROVED_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.COPIED_FROM_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.COPY_DATE_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.CREATEDBYID,
        EXT_CLM_PRESENTATION_VOD__C_src.CREATEDDATE,
        EXT_CLM_PRESENTATION_VOD__C_src.DEFAULT_PRESENTATION_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.GROUP_TO_SHARE_TO__C,
        EXT_CLM_PRESENTATION_VOD__C_src.HIDDEN_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.ID,
        EXT_CLM_PRESENTATION_VOD__C_src.ISDELETED,
        EXT_CLM_PRESENTATION_VOD__C_src.ISLOCKED,
        EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDBYID,
        EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDDATE,
        EXT_CLM_PRESENTATION_VOD__C_src.MAYEDIT,
        EXT_CLM_PRESENTATION_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.NAME,
        EXT_CLM_PRESENTATION_VOD__C_src.ORIGINAL_RECORD_ID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.OWNERID,
        EXT_CLM_PRESENTATION_VOD__C_src.PARENTID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.PRESENTATION_ID_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.PRODUCT_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.SYSTEMMODSTAMP,
        EXT_CLM_PRESENTATION_VOD__C_src.TRAINING_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.TYPE_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.batch_id,
        EXT_CLM_PRESENTATION_VOD__C_src.row_id,
        EXT_CLM_PRESENTATION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_CLM_PRESENTATION_VOD__C_src
 ORDER BY EXT_CLM_PRESENTATION_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_CLM_PRESENTATION_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CMOP_RX_DATA_TEVA_src_super_b0 /*+basename(EXT_CMOP_RX_DATA_TEVA_src_super)*/ 
(
 MONTH,
 CMOP,
 VISN,
 STATION_NUMBER,
 STATION,
 VA_PRODUCT,
 TOTAL_RXS,
 CMOP_RXS,
 TOTAL_QTY,
 CMOP_QTY,
 "30_DAY_RXS",
 ZIP,
 ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CMOP_RX_DATA_TEVA_src.MONTH,
        EXT_CMOP_RX_DATA_TEVA_src.CMOP,
        EXT_CMOP_RX_DATA_TEVA_src.VISN,
        EXT_CMOP_RX_DATA_TEVA_src.STATION_NUMBER,
        EXT_CMOP_RX_DATA_TEVA_src.STATION,
        EXT_CMOP_RX_DATA_TEVA_src.VA_PRODUCT,
        EXT_CMOP_RX_DATA_TEVA_src.TOTAL_RXS,
        EXT_CMOP_RX_DATA_TEVA_src.CMOP_RXS,
        EXT_CMOP_RX_DATA_TEVA_src.TOTAL_QTY,
        EXT_CMOP_RX_DATA_TEVA_src.CMOP_QTY,
        EXT_CMOP_RX_DATA_TEVA_src."30_DAY_RXS",
        EXT_CMOP_RX_DATA_TEVA_src.ZIP,
        EXT_CMOP_RX_DATA_TEVA_src.ID,
        EXT_CMOP_RX_DATA_TEVA_src.batch_id,
        EXT_CMOP_RX_DATA_TEVA_src.row_id,
        EXT_CMOP_RX_DATA_TEVA_src.update_ts
 FROM teva_ingestion.EXT_CMOP_RX_DATA_TEVA_src
 ORDER BY EXT_CMOP_RX_DATA_TEVA_src.batch_id
SEGMENTED BY hash(EXT_CMOP_RX_DATA_TEVA_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_ACO_DETAIL_src_super_b0 /*+basename(EXT_HCOS_ACO_DETAIL_src_super)*/ 
(
 ACO_DETAIL_ID,
 ACO_DETAIL_CODE,
 ACO_DETAIL_DESC,
 ACO_DETAIL_GROUP_CODE,
 ACO_DETAIL_GROUP_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_ID,
        EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_CODE,
        EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_DESC,
        EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_GROUP_CODE,
        EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_GROUP_DESC,
        EXT_HCOS_ACO_DETAIL_src.batch_id,
        EXT_HCOS_ACO_DETAIL_src.row_id,
        EXT_HCOS_ACO_DETAIL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_DETAIL_src
 ORDER BY EXT_HCOS_ACO_DETAIL_src.batch_id
SEGMENTED BY hash(EXT_HCOS_ACO_DETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_ACO_DETAIL_FACT_src_super_b0 /*+basename(EXT_HCOS_ACO_DETAIL_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 ACO_TYPE_ID,
 ACO_DETAIL_ID,
 ACO_VAL,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_ACO_DETAIL_FACT_src.IMS_ORG_ID,
        EXT_HCOS_ACO_DETAIL_FACT_src.ACO_TYPE_ID,
        EXT_HCOS_ACO_DETAIL_FACT_src.ACO_DETAIL_ID,
        EXT_HCOS_ACO_DETAIL_FACT_src.ACO_VAL,
        EXT_HCOS_ACO_DETAIL_FACT_src.batch_id,
        EXT_HCOS_ACO_DETAIL_FACT_src.row_id,
        EXT_HCOS_ACO_DETAIL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_DETAIL_FACT_src
 ORDER BY EXT_HCOS_ACO_DETAIL_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_ACO_DETAIL_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_ACO_ORG_FACT_src_super_b0 /*+basename(EXT_HCOS_ACO_ORG_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 ACO_TYPE_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_ACO_ORG_FACT_src.IMS_ORG_ID,
        EXT_HCOS_ACO_ORG_FACT_src.ACO_TYPE_DESC,
        EXT_HCOS_ACO_ORG_FACT_src.batch_id,
        EXT_HCOS_ACO_ORG_FACT_src.row_id,
        EXT_HCOS_ACO_ORG_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_ORG_FACT_src
 ORDER BY EXT_HCOS_ACO_ORG_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_ACO_ORG_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_ACO_PROFESSIONAL_RSTR_src_super_b0 /*+basename(EXT_HCOS_ACO_PROFESSIONAL_RSTR_src_super)*/ 
(
 IMS_ORG_ID,
 ACO_TYPE_ID,
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.IMS_ORG_ID,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.ACO_TYPE_ID,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.HCE_ID_PRFSNL,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.PROFESSIONAL_ID,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.batch_id,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.row_id,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_PROFESSIONAL_RSTR_src
 ORDER BY EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.batch_id
SEGMENTED BY hash(EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_ACO_TYPE_src_super_b0 /*+basename(EXT_HCOS_ACO_TYPE_src_super)*/ 
(
 ACO_TYPE_ID,
 ACO_TYPE_DESC,
 ACO_TYPE_CATG,
 ACO_MODEL,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_ACO_TYPE_src.ACO_TYPE_ID,
        EXT_HCOS_ACO_TYPE_src.ACO_TYPE_DESC,
        EXT_HCOS_ACO_TYPE_src.ACO_TYPE_CATG,
        EXT_HCOS_ACO_TYPE_src.ACO_MODEL,
        EXT_HCOS_ACO_TYPE_src.batch_id,
        EXT_HCOS_ACO_TYPE_src.row_id,
        EXT_HCOS_ACO_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_TYPE_src
 ORDER BY EXT_HCOS_ACO_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_ACO_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_AFFILIATION_TYPE_src_super_b0 /*+basename(EXT_HCOS_AFFILIATION_TYPE_src_super)*/ 
(
 AFFIL_TYPE_ID,
 AFFIL_TYPE_CODE,
 AFFIL_TYPE_DESC,
 AFFIL_GROUP_CODE,
 AFFIL_GROUP_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_TYPE_ID,
        EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_TYPE_CODE,
        EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_TYPE_DESC,
        EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_GROUP_CODE,
        EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_GROUP_DESC,
        EXT_HCOS_AFFILIATION_TYPE_src.batch_id,
        EXT_HCOS_AFFILIATION_TYPE_src.row_id,
        EXT_HCOS_AFFILIATION_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_AFFILIATION_TYPE_src
 ORDER BY EXT_HCOS_AFFILIATION_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_AFFILIATION_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_BED_CLUSTER_TYPE_src_super_b0 /*+basename(EXT_HCOS_BED_CLUSTER_TYPE_src_super)*/ 
(
 BED_CLUSTER_ID,
 BED_CLUSTER_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_BED_CLUSTER_TYPE_src.BED_CLUSTER_ID,
        EXT_HCOS_BED_CLUSTER_TYPE_src.BED_CLUSTER_DESC,
        EXT_HCOS_BED_CLUSTER_TYPE_src.batch_id,
        EXT_HCOS_BED_CLUSTER_TYPE_src.row_id,
        EXT_HCOS_BED_CLUSTER_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BED_CLUSTER_TYPE_src
 ORDER BY EXT_HCOS_BED_CLUSTER_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_BED_CLUSTER_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_BED_FACT_src_super_b0 /*+basename(EXT_HCOS_BED_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 BED_ID,
 LICENSE_BEDS,
 CENSUS_BEDS,
 STAFFED_BEDS,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_BED_FACT_src.IMS_ORG_ID,
        EXT_HCOS_BED_FACT_src.BED_ID,
        EXT_HCOS_BED_FACT_src.LICENSE_BEDS,
        EXT_HCOS_BED_FACT_src.CENSUS_BEDS,
        EXT_HCOS_BED_FACT_src.STAFFED_BEDS,
        EXT_HCOS_BED_FACT_src.batch_id,
        EXT_HCOS_BED_FACT_src.row_id,
        EXT_HCOS_BED_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BED_FACT_src
 ORDER BY EXT_HCOS_BED_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_BED_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_BED_TYPE_src_super_b0 /*+basename(EXT_HCOS_BED_TYPE_src_super)*/ 
(
 BED_ID,
 BED_CODE,
 BED_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_BED_TYPE_src.BED_ID,
        EXT_HCOS_BED_TYPE_src.BED_CODE,
        EXT_HCOS_BED_TYPE_src.BED_DESC,
        EXT_HCOS_BED_TYPE_src.batch_id,
        EXT_HCOS_BED_TYPE_src.row_id,
        EXT_HCOS_BED_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BED_TYPE_src
 ORDER BY EXT_HCOS_BED_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_BED_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_BUSINESS_src_super_b0 /*+basename(EXT_HCOS_BUSINESS_src_super)*/ 
(
 IMS_ORG_ID,
 BUSINESS_NAME,
 DBA_NAME,
 CARE_OF_LOCATION,
 ADDRESS_ID,
 STF_ID,
 PHYSICAL_ADDR_1,
 PHYSICAL_ADDR_2,
 PHYSICAL_CITY,
 PHYSICAL_STATE,
 PHYSICAL_ZIP,
 POSTAL_ADDR_1,
 POSTAL_ADDR_2,
 POSTAL_CITY,
 POSTAL_STATE,
 POSTAL_ZIP,
 PHONE,
 FAX,
 WEBSITE,
 LATITUDE,
 LONGITUDE,
 OWNER_STATUS,
 PROFIT_STATUS,
 CMI,
 PRIMARY_COT_ID,
 COT_CLASSIFICATION_ID,
 COT_CLASSIFICATION,
 COT_FACILITY_TYPE_ID,
 COT_FACILITY_TYPE,
 COT_SPECIALTY_ID,
 COT_SPECIALTY,
 RECORD_TYPE,
 BED_CLUSTER_ID,
 TTL_LICENSE_BEDS,
 TTL_CENSUS_BEDS,
 TTL_STAFFED_BEDS,
 TEACHING_HOSP,
 COMMHOSP,
 ALL_DDD,
 ALL_NPI,
 HIN,
 DEA,
 MPN,
 MPN_ORDER,
 MSA,
 FIPS_STATE,
 FIPS_COUNTY,
 NUM_OF_PROVIDERS,
 CORP_PARENT_IMS_ORG_ID,
 CORP_PARENT_NAME,
 OWNER_SUB_IMS_ORG_ID,
 OWNER_SUB_NAME,
 GPO_PHARMA_IMS_ORG_ID,
 GPO_PHARMA_NAME,
 GPO_MEDSURG_IMS_ORG_ID,
 GPO_MEDSURG_NAME,
 PHARMA_PROV_IMS_ORG_ID,
 PHARMA_PROV_NAME,
 FORMULARY,
 ELECTRONIC_MED_REC,
 EPRESCRIBE,
 PAYPERFORM,
 GENFIRST,
 SREP_ACCESS,
 DEACTIVATION_REASON,
 REFERBACK_IMS_ORG_ID,
 STATUS_INDICATOR,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_BUSINESS_src.IMS_ORG_ID,
        EXT_HCOS_BUSINESS_src.BUSINESS_NAME,
        EXT_HCOS_BUSINESS_src.DBA_NAME,
        EXT_HCOS_BUSINESS_src.CARE_OF_LOCATION,
        EXT_HCOS_BUSINESS_src.ADDRESS_ID,
        EXT_HCOS_BUSINESS_src.STF_ID,
        EXT_HCOS_BUSINESS_src.PHYSICAL_ADDR_1,
        EXT_HCOS_BUSINESS_src.PHYSICAL_ADDR_2,
        EXT_HCOS_BUSINESS_src.PHYSICAL_CITY,
        EXT_HCOS_BUSINESS_src.PHYSICAL_STATE,
        EXT_HCOS_BUSINESS_src.PHYSICAL_ZIP,
        EXT_HCOS_BUSINESS_src.POSTAL_ADDR_1,
        EXT_HCOS_BUSINESS_src.POSTAL_ADDR_2,
        EXT_HCOS_BUSINESS_src.POSTAL_CITY,
        EXT_HCOS_BUSINESS_src.POSTAL_STATE,
        EXT_HCOS_BUSINESS_src.POSTAL_ZIP,
        EXT_HCOS_BUSINESS_src.PHONE,
        EXT_HCOS_BUSINESS_src.FAX,
        EXT_HCOS_BUSINESS_src.WEBSITE,
        EXT_HCOS_BUSINESS_src.LATITUDE,
        EXT_HCOS_BUSINESS_src.LONGITUDE,
        EXT_HCOS_BUSINESS_src.OWNER_STATUS,
        EXT_HCOS_BUSINESS_src.PROFIT_STATUS,
        EXT_HCOS_BUSINESS_src.CMI,
        EXT_HCOS_BUSINESS_src.PRIMARY_COT_ID,
        EXT_HCOS_BUSINESS_src.COT_CLASSIFICATION_ID,
        EXT_HCOS_BUSINESS_src.COT_CLASSIFICATION,
        EXT_HCOS_BUSINESS_src.COT_FACILITY_TYPE_ID,
        EXT_HCOS_BUSINESS_src.COT_FACILITY_TYPE,
        EXT_HCOS_BUSINESS_src.COT_SPECIALTY_ID,
        EXT_HCOS_BUSINESS_src.COT_SPECIALTY,
        EXT_HCOS_BUSINESS_src.RECORD_TYPE,
        EXT_HCOS_BUSINESS_src.BED_CLUSTER_ID,
        EXT_HCOS_BUSINESS_src.TTL_LICENSE_BEDS,
        EXT_HCOS_BUSINESS_src.TTL_CENSUS_BEDS,
        EXT_HCOS_BUSINESS_src.TTL_STAFFED_BEDS,
        EXT_HCOS_BUSINESS_src.TEACHING_HOSP,
        EXT_HCOS_BUSINESS_src.COMMHOSP,
        EXT_HCOS_BUSINESS_src.ALL_DDD,
        EXT_HCOS_BUSINESS_src.ALL_NPI,
        EXT_HCOS_BUSINESS_src.HIN,
        EXT_HCOS_BUSINESS_src.DEA,
        EXT_HCOS_BUSINESS_src.MPN,
        EXT_HCOS_BUSINESS_src.MPN_ORDER,
        EXT_HCOS_BUSINESS_src.MSA,
        EXT_HCOS_BUSINESS_src.FIPS_STATE,
        EXT_HCOS_BUSINESS_src.FIPS_COUNTY,
        EXT_HCOS_BUSINESS_src.NUM_OF_PROVIDERS,
        EXT_HCOS_BUSINESS_src.CORP_PARENT_IMS_ORG_ID,
        EXT_HCOS_BUSINESS_src.CORP_PARENT_NAME,
        EXT_HCOS_BUSINESS_src.OWNER_SUB_IMS_ORG_ID,
        EXT_HCOS_BUSINESS_src.OWNER_SUB_NAME,
        EXT_HCOS_BUSINESS_src.GPO_PHARMA_IMS_ORG_ID,
        EXT_HCOS_BUSINESS_src.GPO_PHARMA_NAME,
        EXT_HCOS_BUSINESS_src.GPO_MEDSURG_IMS_ORG_ID,
        EXT_HCOS_BUSINESS_src.GPO_MEDSURG_NAME,
        EXT_HCOS_BUSINESS_src.PHARMA_PROV_IMS_ORG_ID,
        EXT_HCOS_BUSINESS_src.PHARMA_PROV_NAME,
        EXT_HCOS_BUSINESS_src.FORMULARY,
        EXT_HCOS_BUSINESS_src.ELECTRONIC_MED_REC,
        EXT_HCOS_BUSINESS_src.EPRESCRIBE,
        EXT_HCOS_BUSINESS_src.PAYPERFORM,
        EXT_HCOS_BUSINESS_src.GENFIRST,
        EXT_HCOS_BUSINESS_src.SREP_ACCESS,
        EXT_HCOS_BUSINESS_src.DEACTIVATION_REASON,
        EXT_HCOS_BUSINESS_src.REFERBACK_IMS_ORG_ID,
        EXT_HCOS_BUSINESS_src.STATUS_INDICATOR,
        EXT_HCOS_BUSINESS_src.batch_id,
        EXT_HCOS_BUSINESS_src.row_id,
        EXT_HCOS_BUSINESS_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BUSINESS_src
 ORDER BY EXT_HCOS_BUSINESS_src.batch_id
SEGMENTED BY hash(EXT_HCOS_BUSINESS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_src_super_b0 /*+basename(EXT_HCOS_BUSINESS_DETAIL_src_super)*/ 
(
 DETAIL_ID,
 DETAIL_CODE,
 DETAIL_DESC,
 DETAIL_GROUP_CODE,
 DETAIL_GROUP_CODE_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_ID,
        EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_CODE,
        EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_DESC,
        EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_GROUP_CODE,
        EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_GROUP_CODE_DESC,
        EXT_HCOS_BUSINESS_DETAIL_src.batch_id,
        EXT_HCOS_BUSINESS_DETAIL_src.row_id,
        EXT_HCOS_BUSINESS_DETAIL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_src
 ORDER BY EXT_HCOS_BUSINESS_DETAIL_src.batch_id
SEGMENTED BY hash(EXT_HCOS_BUSINESS_DETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_FACT_src_super_b0 /*+basename(EXT_HCOS_BUSINESS_DETAIL_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 DETAIL_ID,
 DETAIL_VALUE,
 DETAIL_COUNT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_BUSINESS_DETAIL_FACT_src.IMS_ORG_ID,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_ID,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_VALUE,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_COUNT,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.batch_id,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.row_id,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_FACT_src
 ORDER BY EXT_HCOS_BUSINESS_DETAIL_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_BUSINESS_DETAIL_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_CLASS_OF_TRADE_src_super_b0 /*+basename(EXT_HCOS_CLASS_OF_TRADE_src_super)*/ 
(
 COT_ID,
 CLASSIFICATION_ID,
 CLASSIFICATION,
 FACILITY_TYPE_ID,
 FACILITY_TYPE,
 SPECIALTY_ID,
 SPECIALTY,
 RECORD_TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_CLASS_OF_TRADE_src.COT_ID,
        EXT_HCOS_CLASS_OF_TRADE_src.CLASSIFICATION_ID,
        EXT_HCOS_CLASS_OF_TRADE_src.CLASSIFICATION,
        EXT_HCOS_CLASS_OF_TRADE_src.FACILITY_TYPE_ID,
        EXT_HCOS_CLASS_OF_TRADE_src.FACILITY_TYPE,
        EXT_HCOS_CLASS_OF_TRADE_src.SPECIALTY_ID,
        EXT_HCOS_CLASS_OF_TRADE_src.SPECIALTY,
        EXT_HCOS_CLASS_OF_TRADE_src.RECORD_TYPE,
        EXT_HCOS_CLASS_OF_TRADE_src.batch_id,
        EXT_HCOS_CLASS_OF_TRADE_src.row_id,
        EXT_HCOS_CLASS_OF_TRADE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLASS_OF_TRADE_src
 ORDER BY EXT_HCOS_CLASS_OF_TRADE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_CLASS_OF_TRADE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_CLINICAL_CODE_src_super_b0 /*+basename(EXT_HCOS_CLINICAL_CODE_src_super)*/ 
(
 CODE_ID,
 CLIN_CODE,
 CLIN_CODE_DESC,
 CCS_CODE,
 CCS_DESC,
 MDC_CODE,
 MDC_DESC,
 CODE_CATEGORY,
 SURGICAL_CODE,
 OR_CODE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_CLINICAL_CODE_src.CODE_ID,
        EXT_HCOS_CLINICAL_CODE_src.CLIN_CODE,
        EXT_HCOS_CLINICAL_CODE_src.CLIN_CODE_DESC,
        EXT_HCOS_CLINICAL_CODE_src.CCS_CODE,
        EXT_HCOS_CLINICAL_CODE_src.CCS_DESC,
        EXT_HCOS_CLINICAL_CODE_src.MDC_CODE,
        EXT_HCOS_CLINICAL_CODE_src.MDC_DESC,
        EXT_HCOS_CLINICAL_CODE_src.CODE_CATEGORY,
        EXT_HCOS_CLINICAL_CODE_src.SURGICAL_CODE,
        EXT_HCOS_CLINICAL_CODE_src.OR_CODE,
        EXT_HCOS_CLINICAL_CODE_src.batch_id,
        EXT_HCOS_CLINICAL_CODE_src.row_id,
        EXT_HCOS_CLINICAL_CODE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLINICAL_CODE_src
 ORDER BY EXT_HCOS_CLINICAL_CODE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_CLINICAL_CODE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_CLINICAL_FACT_src_super_b0 /*+basename(EXT_HCOS_CLINICAL_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 CODE_ID,
 DATA_YEAR,
 INPAT_VOL,
 OUTPAT_VOL,
 TTL_VOL,
 DECILE,
 AVG_LOS,
 AVG_COS,
 CODE_ORDER,
 GPO_VIEW,
 USE_FOR_AGG,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_CLINICAL_FACT_src.IMS_ORG_ID,
        EXT_HCOS_CLINICAL_FACT_src.CODE_ID,
        EXT_HCOS_CLINICAL_FACT_src.DATA_YEAR,
        EXT_HCOS_CLINICAL_FACT_src.INPAT_VOL,
        EXT_HCOS_CLINICAL_FACT_src.OUTPAT_VOL,
        EXT_HCOS_CLINICAL_FACT_src.TTL_VOL,
        EXT_HCOS_CLINICAL_FACT_src.DECILE,
        EXT_HCOS_CLINICAL_FACT_src.AVG_LOS,
        EXT_HCOS_CLINICAL_FACT_src.AVG_COS,
        EXT_HCOS_CLINICAL_FACT_src.CODE_ORDER,
        EXT_HCOS_CLINICAL_FACT_src.GPO_VIEW,
        EXT_HCOS_CLINICAL_FACT_src.USE_FOR_AGG,
        EXT_HCOS_CLINICAL_FACT_src.batch_id,
        EXT_HCOS_CLINICAL_FACT_src.row_id,
        EXT_HCOS_CLINICAL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLINICAL_FACT_src
 ORDER BY EXT_HCOS_CLINICAL_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_CLINICAL_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_CLINICAL_FACT_STATE_src_super_b0 /*+basename(EXT_HCOS_CLINICAL_FACT_STATE_src_super)*/ 
(
 CODE_ID,
 DATA_YEAR,
 STATE,
 INPAT_VOL,
 OUTPAT_VOL,
 TTL_VOL,
 AVG_LOS,
 AVG_COS,
 CODE_ORDER,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_CLINICAL_FACT_STATE_src.CODE_ID,
        EXT_HCOS_CLINICAL_FACT_STATE_src.DATA_YEAR,
        EXT_HCOS_CLINICAL_FACT_STATE_src.STATE,
        EXT_HCOS_CLINICAL_FACT_STATE_src.INPAT_VOL,
        EXT_HCOS_CLINICAL_FACT_STATE_src.OUTPAT_VOL,
        EXT_HCOS_CLINICAL_FACT_STATE_src.TTL_VOL,
        EXT_HCOS_CLINICAL_FACT_STATE_src.AVG_LOS,
        EXT_HCOS_CLINICAL_FACT_STATE_src.AVG_COS,
        EXT_HCOS_CLINICAL_FACT_STATE_src.CODE_ORDER,
        EXT_HCOS_CLINICAL_FACT_STATE_src.batch_id,
        EXT_HCOS_CLINICAL_FACT_STATE_src.row_id,
        EXT_HCOS_CLINICAL_FACT_STATE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLINICAL_FACT_STATE_src
 ORDER BY EXT_HCOS_CLINICAL_FACT_STATE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_CLINICAL_FACT_STATE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_CONTACT_AFFILTN_FACT_src_super_b0 /*+basename(EXT_HCOS_CONTACT_AFFILTN_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 TITLE_GROUP_CODE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_CONTACT_AFFILTN_FACT_src.IMS_ORG_ID,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.HCE_ID_PRFSNL,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.PROFESSIONAL_ID,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.TITLE_GROUP_CODE,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.batch_id,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.row_id,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CONTACT_AFFILTN_FACT_src
 ORDER BY EXT_HCOS_CONTACT_AFFILTN_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_CONTACT_AFFILTN_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_COT_FACT_src_super_b0 /*+basename(EXT_HCOS_COT_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 COT_ID,
 COT_ORDER,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_COT_FACT_src.IMS_ORG_ID,
        EXT_HCOS_COT_FACT_src.COT_ID,
        EXT_HCOS_COT_FACT_src.COT_ORDER,
        EXT_HCOS_COT_FACT_src.batch_id,
        EXT_HCOS_COT_FACT_src.row_id,
        EXT_HCOS_COT_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_COT_FACT_src
 ORDER BY EXT_HCOS_COT_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_COT_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_FINANCIAL_FACT_src_super_b0 /*+basename(EXT_HCOS_FINANCIAL_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 DATA_YEAR,
 INPAT_REV,
 OUTPAT_REV,
 TTL_PAT_REV,
 NET_PAT_REV,
 OP_EXP,
 OTH_EXP,
 TTL_EXP,
 SUPPLY_COST,
 DRUG_COST,
 TTL_SALARIES,
 NET_INC_PAT,
 NET_INC,
 COST_PER_BED,
 TTL_ASSETS,
 FTE_EMP,
 CURR_ASSETS,
 CURR_LIAB,
 FIX_ASSETS,
 FRINGE_BENEFITS,
 FUND_BAL,
 GOV_APPR,
 H_IN_REV,
 L_T_LIAB,
 NON_PAT_REV,
 OTH_ASSETS,
 OTH_INCOME,
 H_OUT_REV,
 TOT_LIAB,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_FINANCIAL_FACT_src.IMS_ORG_ID,
        EXT_HCOS_FINANCIAL_FACT_src.DATA_YEAR,
        EXT_HCOS_FINANCIAL_FACT_src.INPAT_REV,
        EXT_HCOS_FINANCIAL_FACT_src.OUTPAT_REV,
        EXT_HCOS_FINANCIAL_FACT_src.TTL_PAT_REV,
        EXT_HCOS_FINANCIAL_FACT_src.NET_PAT_REV,
        EXT_HCOS_FINANCIAL_FACT_src.OP_EXP,
        EXT_HCOS_FINANCIAL_FACT_src.OTH_EXP,
        EXT_HCOS_FINANCIAL_FACT_src.TTL_EXP,
        EXT_HCOS_FINANCIAL_FACT_src.SUPPLY_COST,
        EXT_HCOS_FINANCIAL_FACT_src.DRUG_COST,
        EXT_HCOS_FINANCIAL_FACT_src.TTL_SALARIES,
        EXT_HCOS_FINANCIAL_FACT_src.NET_INC_PAT,
        EXT_HCOS_FINANCIAL_FACT_src.NET_INC,
        EXT_HCOS_FINANCIAL_FACT_src.COST_PER_BED,
        EXT_HCOS_FINANCIAL_FACT_src.TTL_ASSETS,
        EXT_HCOS_FINANCIAL_FACT_src.FTE_EMP,
        EXT_HCOS_FINANCIAL_FACT_src.CURR_ASSETS,
        EXT_HCOS_FINANCIAL_FACT_src.CURR_LIAB,
        EXT_HCOS_FINANCIAL_FACT_src.FIX_ASSETS,
        EXT_HCOS_FINANCIAL_FACT_src.FRINGE_BENEFITS,
        EXT_HCOS_FINANCIAL_FACT_src.FUND_BAL,
        EXT_HCOS_FINANCIAL_FACT_src.GOV_APPR,
        EXT_HCOS_FINANCIAL_FACT_src.H_IN_REV,
        EXT_HCOS_FINANCIAL_FACT_src.L_T_LIAB,
        EXT_HCOS_FINANCIAL_FACT_src.NON_PAT_REV,
        EXT_HCOS_FINANCIAL_FACT_src.OTH_ASSETS,
        EXT_HCOS_FINANCIAL_FACT_src.OTH_INCOME,
        EXT_HCOS_FINANCIAL_FACT_src.H_OUT_REV,
        EXT_HCOS_FINANCIAL_FACT_src.TOT_LIAB,
        EXT_HCOS_FINANCIAL_FACT_src.batch_id,
        EXT_HCOS_FINANCIAL_FACT_src.row_id,
        EXT_HCOS_FINANCIAL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_FINANCIAL_FACT_src
 ORDER BY EXT_HCOS_FINANCIAL_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_FINANCIAL_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_IDENTIFIER_FACT_src_super_b0 /*+basename(EXT_HCOS_IDENTIFIER_FACT_src_super)*/ 
(
 IMS_ORG_ID,
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 IDENTIFIER_ID,
 IDENTIFIER,
 IDENTIFIER_ORDER,
 IDENTIFIER_CATEGORY,
 IDENTIFIER_STATE,
 SRC_STRT_DT,
 SRC_TRMTN_DT,
 SRC_TRMTN_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_IDENTIFIER_FACT_src.IMS_ORG_ID,
        EXT_HCOS_IDENTIFIER_FACT_src.HCE_ID_PRFSNL,
        EXT_HCOS_IDENTIFIER_FACT_src.PROFESSIONAL_ID,
        EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_ID,
        EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER,
        EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_ORDER,
        EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_CATEGORY,
        EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_STATE,
        EXT_HCOS_IDENTIFIER_FACT_src.SRC_STRT_DT,
        EXT_HCOS_IDENTIFIER_FACT_src.SRC_TRMTN_DT,
        EXT_HCOS_IDENTIFIER_FACT_src.SRC_TRMTN_CD,
        EXT_HCOS_IDENTIFIER_FACT_src.batch_id,
        EXT_HCOS_IDENTIFIER_FACT_src.row_id,
        EXT_HCOS_IDENTIFIER_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_IDENTIFIER_FACT_src
 ORDER BY EXT_HCOS_IDENTIFIER_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_IDENTIFIER_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_IDENTIFIER_TYPE_src_super_b0 /*+basename(EXT_HCOS_IDENTIFIER_TYPE_src_super)*/ 
(
 IDENTIFIER_ID,
 IDENTIFIER_CODE,
 IDENTIFIER_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_IDENTIFIER_TYPE_src.IDENTIFIER_ID,
        EXT_HCOS_IDENTIFIER_TYPE_src.IDENTIFIER_CODE,
        EXT_HCOS_IDENTIFIER_TYPE_src.IDENTIFIER_DESC,
        EXT_HCOS_IDENTIFIER_TYPE_src.batch_id,
        EXT_HCOS_IDENTIFIER_TYPE_src.row_id,
        EXT_HCOS_IDENTIFIER_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_IDENTIFIER_TYPE_src
 ORDER BY EXT_HCOS_IDENTIFIER_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_IDENTIFIER_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_INDENTIFIER_CAT_TYPE_src_super_b0 /*+basename(EXT_HCOS_INDENTIFIER_CAT_TYPE_src_super)*/ 
(
 IDENTIFIER_ID,
 IDENTIFIER_CATEGORY,
 IDENTIFIER_CATEGORY_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_INDENTIFIER_CAT_TYPE_src.IDENTIFIER_ID,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.IDENTIFIER_CATEGORY,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.IDENTIFIER_CATEGORY_DESC,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.batch_id,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.row_id,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_INDENTIFIER_CAT_TYPE_src
 ORDER BY EXT_HCOS_INDENTIFIER_CAT_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_INDENTIFIER_CAT_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_INDENTIFIER_TERM_TYPE_src_super_b0 /*+basename(EXT_HCOS_INDENTIFIER_TERM_TYPE_src_super)*/ 
(
 IDENTIFIER_ID,
 SRC_TRMTN_CD,
 SRC_TRMTN_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_INDENTIFIER_TERM_TYPE_src.IDENTIFIER_ID,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.SRC_TRMTN_CD,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.SRC_TRMTN_DESC,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.batch_id,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.row_id,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_INDENTIFIER_TERM_TYPE_src
 ORDER BY EXT_HCOS_INDENTIFIER_TERM_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_INDENTIFIER_TERM_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_PROFESSIONAL_src_super_b0 /*+basename(EXT_HCOS_PROFESSIONAL_src_super)*/ 
(
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 FIRST_NAME,
 MIDDLE_NAME,
 LAST_NAME,
 GEN_SUFFIX,
 DESIGNATION,
 GENDER,
 ROLE,
 PRIMARY_SPEC,
 SECONDARY_SPEC,
 TERTIARY_SPEC,
 PRIMARY_PROF_CODE,
 PRIMARY_PROF_DESC,
 IMS_ID,
 UPIN,
 ME,
 ALL_DEA,
 NPI,
 STATUS_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_PROFESSIONAL_src.HCE_ID_PRFSNL,
        EXT_HCOS_PROFESSIONAL_src.PROFESSIONAL_ID,
        EXT_HCOS_PROFESSIONAL_src.FIRST_NAME,
        EXT_HCOS_PROFESSIONAL_src.MIDDLE_NAME,
        EXT_HCOS_PROFESSIONAL_src.LAST_NAME,
        EXT_HCOS_PROFESSIONAL_src.GEN_SUFFIX,
        EXT_HCOS_PROFESSIONAL_src.DESIGNATION,
        EXT_HCOS_PROFESSIONAL_src.GENDER,
        EXT_HCOS_PROFESSIONAL_src.ROLE,
        EXT_HCOS_PROFESSIONAL_src.PRIMARY_SPEC,
        EXT_HCOS_PROFESSIONAL_src.SECONDARY_SPEC,
        EXT_HCOS_PROFESSIONAL_src.TERTIARY_SPEC,
        EXT_HCOS_PROFESSIONAL_src.PRIMARY_PROF_CODE,
        EXT_HCOS_PROFESSIONAL_src.PRIMARY_PROF_DESC,
        EXT_HCOS_PROFESSIONAL_src.IMS_ID,
        EXT_HCOS_PROFESSIONAL_src.UPIN,
        EXT_HCOS_PROFESSIONAL_src.ME,
        EXT_HCOS_PROFESSIONAL_src.ALL_DEA,
        EXT_HCOS_PROFESSIONAL_src.NPI,
        EXT_HCOS_PROFESSIONAL_src.STATUS_DESC,
        EXT_HCOS_PROFESSIONAL_src.batch_id,
        EXT_HCOS_PROFESSIONAL_src.row_id,
        EXT_HCOS_PROFESSIONAL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_PROFESSIONAL_src
 ORDER BY EXT_HCOS_PROFESSIONAL_src.batch_id
SEGMENTED BY hash(EXT_HCOS_PROFESSIONAL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_PROFESSIONAL_DETAIL_src_super_b0 /*+basename(EXT_HCOS_PROFESSIONAL_DETAIL_src_super)*/ 
(
 DETAIL_ID,
 DETAIL_CODE,
 DETAIL_DESC,
 DETAIL_GROUP_CODE,
 DETAIL_GROUP_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_ID,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_CODE,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_DESC,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_GROUP_CODE,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_GROUP_DESC,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.batch_id,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.row_id,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_PROFESSIONAL_DETAIL_src
 ORDER BY EXT_HCOS_PROFESSIONAL_DETAIL_src.batch_id
SEGMENTED BY hash(EXT_HCOS_PROFESSIONAL_DETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_PROFESSIONAL_TITLE_src_super_b0 /*+basename(EXT_HCOS_PROFESSIONAL_TITLE_src_super)*/ 
(
 TITLE_GROUP_CODE,
 TITLE_GROUP_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_PROFESSIONAL_TITLE_src.TITLE_GROUP_CODE,
        EXT_HCOS_PROFESSIONAL_TITLE_src.TITLE_GROUP_DESC,
        EXT_HCOS_PROFESSIONAL_TITLE_src.batch_id,
        EXT_HCOS_PROFESSIONAL_TITLE_src.row_id,
        EXT_HCOS_PROFESSIONAL_TITLE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_PROFESSIONAL_TITLE_src
 ORDER BY EXT_HCOS_PROFESSIONAL_TITLE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_PROFESSIONAL_TITLE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_RELATIONSHIP_FACT_src_super_b0 /*+basename(EXT_HCOS_RELATIONSHIP_FACT_src_super)*/ 
(
 IMS_ORG_ID_PARENT,
 IMS_ORG_ID_CHILD,
 REL_ID,
 REL_ORDER,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_RELATIONSHIP_FACT_src.IMS_ORG_ID_PARENT,
        EXT_HCOS_RELATIONSHIP_FACT_src.IMS_ORG_ID_CHILD,
        EXT_HCOS_RELATIONSHIP_FACT_src.REL_ID,
        EXT_HCOS_RELATIONSHIP_FACT_src.REL_ORDER,
        EXT_HCOS_RELATIONSHIP_FACT_src.batch_id,
        EXT_HCOS_RELATIONSHIP_FACT_src.row_id,
        EXT_HCOS_RELATIONSHIP_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_RELATIONSHIP_FACT_src
 ORDER BY EXT_HCOS_RELATIONSHIP_FACT_src.batch_id
SEGMENTED BY hash(EXT_HCOS_RELATIONSHIP_FACT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_HCOS_RELATIONSHIP_TYPE_src_super_b0 /*+basename(EXT_HCOS_RELATIONSHIP_TYPE_src_super)*/ 
(
 REL_ID,
 REL_CODE,
 REL_DESC,
 REL_GROUP_CODE,
 REL_GROUP_DESC,
 REL_CATEGORY_CODE,
 REL_CATEGORY_DESC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_HCOS_RELATIONSHIP_TYPE_src.REL_ID,
        EXT_HCOS_RELATIONSHIP_TYPE_src.REL_CODE,
        EXT_HCOS_RELATIONSHIP_TYPE_src.REL_DESC,
        EXT_HCOS_RELATIONSHIP_TYPE_src.REL_GROUP_CODE,
        EXT_HCOS_RELATIONSHIP_TYPE_src.REL_GROUP_DESC,
        EXT_HCOS_RELATIONSHIP_TYPE_src.REL_CATEGORY_CODE,
        EXT_HCOS_RELATIONSHIP_TYPE_src.REL_CATEGORY_DESC,
        EXT_HCOS_RELATIONSHIP_TYPE_src.batch_id,
        EXT_HCOS_RELATIONSHIP_TYPE_src.row_id,
        EXT_HCOS_RELATIONSHIP_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_RELATIONSHIP_TYPE_src
 ORDER BY EXT_HCOS_RELATIONSHIP_TYPE_src.batch_id
SEGMENTED BY hash(EXT_HCOS_RELATIONSHIP_TYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_I3_RX_src_super_b0 /*+basename(EXT_I3_RX_src_super)*/ 
(
 FULL_NAME,
 SPECIALTY,
 RANK,
 TOTAL,
 AUBAGIO,
 AVONEX,
 BETASERON,
 COPAXONE,
 EXTAVIA,
 GILENYA,
 REBIF,
 TECFIDERA,
 MD_ADDR1,
 MD_ADDR2,
 MD_CITY,
 MD_STATE,
 MD_ZIP,
 PRESCRIBER_NPI,
 DNC_FLAG,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_I3_RX_src.FULL_NAME,
        EXT_I3_RX_src.SPECIALTY,
        EXT_I3_RX_src.RANK,
        EXT_I3_RX_src.TOTAL,
        EXT_I3_RX_src.AUBAGIO,
        EXT_I3_RX_src.AVONEX,
        EXT_I3_RX_src.BETASERON,
        EXT_I3_RX_src.COPAXONE,
        EXT_I3_RX_src.EXTAVIA,
        EXT_I3_RX_src.GILENYA,
        EXT_I3_RX_src.REBIF,
        EXT_I3_RX_src.TECFIDERA,
        EXT_I3_RX_src.MD_ADDR1,
        EXT_I3_RX_src.MD_ADDR2,
        EXT_I3_RX_src.MD_CITY,
        EXT_I3_RX_src.MD_STATE,
        EXT_I3_RX_src.MD_ZIP,
        EXT_I3_RX_src.PRESCRIBER_NPI,
        EXT_I3_RX_src.DNC_FLAG,
        EXT_I3_RX_src.batch_id,
        EXT_I3_RX_src.row_id,
        EXT_I3_RX_src.update_ts
 FROM teva_ingestion.EXT_I3_RX_src
 ORDER BY EXT_I3_RX_src.batch_id
SEGMENTED BY hash(EXT_I3_RX_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C_src_super_b0 /*+basename(EXT_IDS_CALL2_DETAIL_VOD__C_src_super)*/ 
(
 ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IDS_CALL2_DETAIL_VOD__C_src.ID,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.batch_id,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.row_id,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C_src
 ORDER BY EXT_IDS_CALL2_DETAIL_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_IDS_CALL2_DETAIL_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IDS_CALL2_VOD__C_src_super_b0 /*+basename(EXT_IDS_CALL2_VOD__C_src_super)*/ 
(
 ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IDS_CALL2_VOD__C_src.ID,
        EXT_IDS_CALL2_VOD__C_src.batch_id,
        EXT_IDS_CALL2_VOD__C_src.row_id,
        EXT_IDS_CALL2_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_VOD__C_src
 ORDER BY EXT_IDS_CALL2_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_IDS_CALL2_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_PBM_XREF_src_super_b0 /*+basename(EXT_IMS_PBM_XREF_src_super)*/ 
(
 PBM_NAME,
 PAYER_PLAN_NUM,
 XREF_TO_PAYER_PLAN_NUM,
 IPD_ID,
 IPD_TYPE,
 PLAN_NAME,
 PBM_NUM,
 IMS_PROCESSOR_NUM,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_PBM_XREF_src.PBM_NAME,
        EXT_IMS_PBM_XREF_src.PAYER_PLAN_NUM,
        EXT_IMS_PBM_XREF_src.XREF_TO_PAYER_PLAN_NUM,
        EXT_IMS_PBM_XREF_src.IPD_ID,
        EXT_IMS_PBM_XREF_src.IPD_TYPE,
        EXT_IMS_PBM_XREF_src.PLAN_NAME,
        EXT_IMS_PBM_XREF_src.PBM_NUM,
        EXT_IMS_PBM_XREF_src.IMS_PROCESSOR_NUM,
        EXT_IMS_PBM_XREF_src.batch_id,
        EXT_IMS_PBM_XREF_src.row_id,
        EXT_IMS_PBM_XREF_src.update_ts
 FROM teva_ingestion.EXT_IMS_PBM_XREF_src
 ORDER BY EXT_IMS_PBM_XREF_src.batch_id
SEGMENTED BY hash(EXT_IMS_PBM_XREF_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_PLAN_XREF_src_super_b0 /*+basename(EXT_IMS_PLAN_XREF_src_super)*/ 
(
 PAYER_NUM,
 PAYER_NAME,
 PLAN_NUM,
 PAYER_PLAN_NUM,
 PLAN_NAME,
 MODEL,
 CITY,
 HQ_STATE,
 OPERATING_STATE,
 MONTHS_WITH_DATA,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_PLAN_XREF_src.PAYER_NUM,
        EXT_IMS_PLAN_XREF_src.PAYER_NAME,
        EXT_IMS_PLAN_XREF_src.PLAN_NUM,
        EXT_IMS_PLAN_XREF_src.PAYER_PLAN_NUM,
        EXT_IMS_PLAN_XREF_src.PLAN_NAME,
        EXT_IMS_PLAN_XREF_src.MODEL,
        EXT_IMS_PLAN_XREF_src.CITY,
        EXT_IMS_PLAN_XREF_src.HQ_STATE,
        EXT_IMS_PLAN_XREF_src.OPERATING_STATE,
        EXT_IMS_PLAN_XREF_src.MONTHS_WITH_DATA,
        EXT_IMS_PLAN_XREF_src.batch_id,
        EXT_IMS_PLAN_XREF_src.row_id,
        EXT_IMS_PLAN_XREF_src.update_ts
 FROM teva_ingestion.EXT_IMS_PLAN_XREF_src
 ORDER BY EXT_IMS_PLAN_XREF_src.batch_id
SEGMENTED BY hash(EXT_IMS_PLAN_XREF_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_PLAN_XREF_ACCELERATED_src_super_b0 /*+basename(EXT_IMS_PLAN_XREF_ACCELERATED_src_super)*/ 
(
 PAYER_NUM,
 PAYER_NAME,
 PLAN_NUM,
 PAYER_PLAN_NUM,
 PLAN_NAME,
 MODEL,
 CITY,
 HQ_STATE,
 OPERATING_STATE,
 MONTHS_WITH_DATA,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NUM,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NAME,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NUM,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_PLAN_NUM,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NAME,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.MODEL,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.CITY,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.HQ_STATE,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.OPERATING_STATE,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.MONTHS_WITH_DATA,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.batch_id,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.row_id,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.update_ts
 FROM teva_ingestion.EXT_IMS_PLAN_XREF_ACCELERATED_src
 ORDER BY EXT_IMS_PLAN_XREF_ACCELERATED_src.batch_id
SEGMENTED BY hash(EXT_IMS_PLAN_XREF_ACCELERATED_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_SLN_XREF_KC_src_super_b0 /*+basename(EXT_IMS_SLN_XREF_KC_src_super)*/ 
(
 IMS_ID,
 STATE_LICENSE_NUMBER,
 STATE_LICENSE_STATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_SLN_XREF_KC_src.IMS_ID,
        EXT_IMS_SLN_XREF_KC_src.STATE_LICENSE_NUMBER,
        EXT_IMS_SLN_XREF_KC_src.STATE_LICENSE_STATE,
        EXT_IMS_SLN_XREF_KC_src.batch_id,
        EXT_IMS_SLN_XREF_KC_src.row_id,
        EXT_IMS_SLN_XREF_KC_src.update_ts
 FROM teva_ingestion.ext_ims_sln_xref_kc_src
 ORDER BY EXT_IMS_SLN_XREF_KC_src.batch_id
SEGMENTED BY hash(EXT_IMS_SLN_XREF_KC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_KNIPPER_SAMPLES_SHIPPED_src_super_b0 /*+basename(EXT_KNIPPER_SAMPLES_SHIPPED_src_super)*/ 
(
 CLIENT_PRAC_ID,
 TERR_CODE,
 SAMPLE_PROD_CODE,
 SAMPLE_DATE,
 SAMPLE_QTY,
 REQUEST_DATE,
 REQUEST_QTY,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_KNIPPER_SAMPLES_SHIPPED_src.CLIENT_PRAC_ID,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.TERR_CODE,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.SAMPLE_PROD_CODE,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.SAMPLE_DATE,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.SAMPLE_QTY,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.REQUEST_DATE,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.REQUEST_QTY,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.batch_id,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.row_id,
        EXT_KNIPPER_SAMPLES_SHIPPED_src.update_ts
 FROM teva_ingestion.ext_knipper_samples_shipped_src
 ORDER BY EXT_KNIPPER_SAMPLES_SHIPPED_src.batch_id
SEGMENTED BY hash(EXT_KNIPPER_SAMPLES_SHIPPED_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_OMNICARE_SALES_src_super_b0 /*+basename(EXT_OMNICARE_SALES_src_super)*/ 
(
 TRANSACTION_ID,
 INVOICE_DATE,
 PRODUCT_BRAND,
 PRODUCT_NDC,
 PRODUCT_DESC,
 INVOICE_QTY,
 INVOICE_UNITS,
 INVOICE_COST,
 INVOICE_PACK_COST,
 INVOICE_UNIT_COST,
 CONTRACT_PACK_COST,
 CONTRACT_PURCHASES,
 CONTRACT_NUMBER,
 DISPENSING_LOCATION,
 DL_ADDRESS_1,
 DL_ADDRESS_2,
 DL_CITY,
 DL_STATE,
 DL_ZIP,
 DL_DEA_NUM,
 DEPOT_LOCATION,
 DEP_ADDRESS_1,
 DEP_ADDRESS_2,
 DEP_CITY,
 DEP_STATE,
 DEP_ZIP,
 DEP_DEA_NUM,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_OMNICARE_SALES_src.TRANSACTION_ID,
        EXT_OMNICARE_SALES_src.INVOICE_DATE,
        EXT_OMNICARE_SALES_src.PRODUCT_BRAND,
        EXT_OMNICARE_SALES_src.PRODUCT_NDC,
        EXT_OMNICARE_SALES_src.PRODUCT_DESC,
        EXT_OMNICARE_SALES_src.INVOICE_QTY,
        EXT_OMNICARE_SALES_src.INVOICE_UNITS,
        EXT_OMNICARE_SALES_src.INVOICE_COST,
        EXT_OMNICARE_SALES_src.INVOICE_PACK_COST,
        EXT_OMNICARE_SALES_src.INVOICE_UNIT_COST,
        EXT_OMNICARE_SALES_src.CONTRACT_PACK_COST,
        EXT_OMNICARE_SALES_src.CONTRACT_PURCHASES,
        EXT_OMNICARE_SALES_src.CONTRACT_NUMBER,
        EXT_OMNICARE_SALES_src.DISPENSING_LOCATION,
        EXT_OMNICARE_SALES_src.DL_ADDRESS_1,
        EXT_OMNICARE_SALES_src.DL_ADDRESS_2,
        EXT_OMNICARE_SALES_src.DL_CITY,
        EXT_OMNICARE_SALES_src.DL_STATE,
        EXT_OMNICARE_SALES_src.DL_ZIP,
        EXT_OMNICARE_SALES_src.DL_DEA_NUM,
        EXT_OMNICARE_SALES_src.DEPOT_LOCATION,
        EXT_OMNICARE_SALES_src.DEP_ADDRESS_1,
        EXT_OMNICARE_SALES_src.DEP_ADDRESS_2,
        EXT_OMNICARE_SALES_src.DEP_CITY,
        EXT_OMNICARE_SALES_src.DEP_STATE,
        EXT_OMNICARE_SALES_src.DEP_ZIP,
        EXT_OMNICARE_SALES_src.DEP_DEA_NUM,
        EXT_OMNICARE_SALES_src.batch_id,
        EXT_OMNICARE_SALES_src.row_id,
        EXT_OMNICARE_SALES_src.update_ts
 FROM teva_ingestion.EXT_OMNICARE_SALES_src
 ORDER BY EXT_OMNICARE_SALES_src.batch_id
SEGMENTED BY hash(EXT_OMNICARE_SALES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_src_super_b0 /*+basename(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 IMS_OUTLET_CODE,
 IMS_FACILITY_NUMBER,
 IMS_PRESCRIBER_NUMBER,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 FACILITY_PRESCRIBER_NAME,
 FACILITY_PRESCRIBER_ADDRESS1,
 FACILITY_PRESCRIBER_ADDRESS2,
 FACILITY_PRESCRIBER_ADDRESS3,
 FACILITY_PRESCRIBER_ADDRESS4,
 FACILITY_PRESCRIBER_CITY,
 FACILITY_PRESCRIBER_STATE,
 FACILITY_PRESCRIBER_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.CLIENT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.REPORT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_FACILITY_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_PRESCRIBER_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS1,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS2,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS3,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS4,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.row_id,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_src
 ORDER BY EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.batch_id
SEGMENTED BY hash(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_src_super_b0 /*+basename(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 IMS_OUTLET_CODE,
 IMS_FACILITY_NUMBER,
 IMS_PRESCRIBER_NUMBER,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 FACILITY_PRESCRIBER_NAME,
 FACILITY_PRESCRIBER_ADDRESS1,
 FACILITY_PRESCRIBER_ADDRESS2,
 FACILITY_PRESCRIBER_ADDRESS3,
 FACILITY_PRESCRIBER_ADDRESS4,
 FACILITY_PRESCRIBER_CITY,
 FACILITY_PRESCRIBER_STATE,
 FACILITY_PRESCRIBER_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.CLIENT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.REPORT_NUM,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_FACILITY_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_PRESCRIBER_NUMBER,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_NAME,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS1,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS2,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS3,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS4,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_CITY,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_STATE,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.row_id,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_src
 ORDER BY EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.batch_id
SEGMENTED BY hash(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_src_super_b0 /*+basename(EXT_ONC_DMD_MONTHLY_DOLLARS_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 TERRITORY_NUM,
 IMS_OUTLET_CODE,
 SUBCATEGORY_CODE,
 ALT_SEQ_NUM,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 DATA_DATE,
 DOL_MTH01,
 DOL_MTH02,
 DOL_MTH03,
 DOL_MTH04,
 DOL_MTH05,
 DOL_MTH06,
 DOL_MTH07,
 DOL_MTH08,
 DOL_MTH09,
 DOL_MTH10,
 DOL_MTH11,
 DOL_MTH12,
 DOL_MTH13,
 DOL_MTH14,
 DOL_MTH15,
 DOL_MTH16,
 DOL_MTH17,
 DOL_MTH18,
 DOL_MTH19,
 DOL_MTH20,
 DOL_MTH21,
 DOL_MTH22,
 DOL_MTH23,
 DOL_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_MONTHLY_DOLLARS_src.CLIENT_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.REPORT_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.TERRITORY_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.SUBCATEGORY_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.ALT_SEQ_NUM,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.CATEGORY_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_PRODUCT_CODE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DATA_DATE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH01,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH02,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH03,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH04,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH05,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH06,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH07,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH08,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH09,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH10,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH11,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH12,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH13,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH14,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH15,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH16,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH17,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH18,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH19,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH20,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH21,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH22,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH23,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH24,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_NAME,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_CITY,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_STATE,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.row_id,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_src
 ORDER BY EXT_ONC_DMD_MONTHLY_DOLLARS_src.batch_id
SEGMENTED BY hash(EXT_ONC_DMD_MONTHLY_DOLLARS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_src_super_b0 /*+basename(EXT_ONC_DMD_WEEKLY_DEMO_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 IMS_OUTLET_CODE,
 IMS_FACILITY_NUMBER,
 IMS_PRESCRIBER_NUMBER,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 FACILITY_PRESCRIBER_NAME,
 FACILITY_PRESCRIBER_ADDRESS1,
 FACILITY_PRESCRIBER_ADDRESS2,
 FACILITY_PRESCRIBER_ADDRESS3,
 FACILITY_PRESCRIBER_ADDRESS4,
 FACILITY_PRESCRIBER_CITY,
 FACILITY_PRESCRIBER_STATE,
 FACILITY_PRESCRIBER_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_WEEKLY_DEMO_src.CLIENT_NUM,
        EXT_ONC_DMD_WEEKLY_DEMO_src.REPORT_NUM,
        EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_FACILITY_NUMBER,
        EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_PRESCRIBER_NUMBER,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_NAME,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_CITY,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_STATE,
        EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ZIP,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_NAME,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS1,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS2,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS3,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS4,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_CITY,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_STATE,
        EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_WEEKLY_DEMO_src.batch_id,
        EXT_ONC_DMD_WEEKLY_DEMO_src.row_id,
        EXT_ONC_DMD_WEEKLY_DEMO_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_src
 ORDER BY EXT_ONC_DMD_WEEKLY_DEMO_src.batch_id
SEGMENTED BY hash(EXT_ONC_DMD_WEEKLY_DEMO_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PCS_DDD_NONRETAIL_src_super_b0 /*+basename(EXT_PCS_DDD_NONRETAIL_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 TERRITORY_NUM,
 OUTLET_CODE,
 SUBCATEGORY_CODE,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 MTH_YYYYMM,
 QTY_MTH01,
 QTY_MTH02,
 QTY_MTH03,
 QTY_MTH04,
 QTY_MTH05,
 QTY_MTH06,
 QTY_MTH07,
 QTY_MTH08,
 QTY_MTH09,
 QTY_MTH10,
 QTY_MTH11,
 QTY_MTH12,
 QTY_MTH13,
 QTY_MTH14,
 QTY_MTH15,
 QTY_MTH16,
 QTY_MTH17,
 QTY_MTH18,
 QTY_MTH19,
 QTY_MTH20,
 QTY_MTH21,
 QTY_MTH22,
 QTY_MTH23,
 QTY_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PCS_DDD_NONRETAIL_src.CLIENT_NUM,
        EXT_PCS_DDD_NONRETAIL_src.REPORT_NUM,
        EXT_PCS_DDD_NONRETAIL_src.TERRITORY_NUM,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_CODE,
        EXT_PCS_DDD_NONRETAIL_src.SUBCATEGORY_CODE,
        EXT_PCS_DDD_NONRETAIL_src.CATEGORY_CODE,
        EXT_PCS_DDD_NONRETAIL_src.IMS_PRODUCT_CODE,
        EXT_PCS_DDD_NONRETAIL_src.MTH_YYYYMM,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH01,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH02,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH03,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH04,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH05,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH06,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH07,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH08,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH09,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH10,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH11,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH12,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH13,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH14,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH15,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH16,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH17,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH18,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH19,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH20,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH21,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH22,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH23,
        EXT_PCS_DDD_NONRETAIL_src.QTY_MTH24,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_NAME,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_ADDRESS,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_CITY,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_STATE,
        EXT_PCS_DDD_NONRETAIL_src.OUTLET_ZIP,
        EXT_PCS_DDD_NONRETAIL_src.batch_id,
        EXT_PCS_DDD_NONRETAIL_src.row_id,
        EXT_PCS_DDD_NONRETAIL_src.update_ts
 FROM teva_ingestion.EXT_PCS_DDD_NONRETAIL_src
 ORDER BY EXT_PCS_DDD_NONRETAIL_src.batch_id
SEGMENTED BY hash(EXT_PCS_DDD_NONRETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PCS_DDD_RETAIL_src_super_b0 /*+basename(EXT_PCS_DDD_RETAIL_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 TERRITORY_NUM,
 OUTLET_ZIP,
 SRA3,
 SRA4,
 CATEGORY_CODE,
 PRODUCT_GROUP,
 MTH_YYYYMM,
 QTY_MTH01,
 QTY_MTH02,
 QTY_MTH03,
 QTY_MTH04,
 QTY_MTH05,
 QTY_MTH06,
 QTY_MTH07,
 QTY_MTH08,
 QTY_MTH09,
 QTY_MTH10,
 QTY_MTH11,
 QTY_MTH12,
 QTY_MTH13,
 QTY_MTH14,
 QTY_MTH15,
 QTY_MTH16,
 QTY_MTH17,
 QTY_MTH18,
 QTY_MTH19,
 QTY_MTH20,
 QTY_MTH21,
 QTY_MTH22,
 QTY_MTH23,
 QTY_MTH24,
 OUTLET_CITY,
 OUTLET_STATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PCS_DDD_RETAIL_src.CLIENT_NUM,
        EXT_PCS_DDD_RETAIL_src.REPORT_NUM,
        EXT_PCS_DDD_RETAIL_src.TERRITORY_NUM,
        EXT_PCS_DDD_RETAIL_src.OUTLET_ZIP,
        EXT_PCS_DDD_RETAIL_src.SRA3,
        EXT_PCS_DDD_RETAIL_src.SRA4,
        EXT_PCS_DDD_RETAIL_src.CATEGORY_CODE,
        EXT_PCS_DDD_RETAIL_src.PRODUCT_GROUP,
        EXT_PCS_DDD_RETAIL_src.MTH_YYYYMM,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH01,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH02,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH03,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH04,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH05,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH06,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH07,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH08,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH09,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH10,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH11,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH12,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH13,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH14,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH15,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH16,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH17,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH18,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH19,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH20,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH21,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH22,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH23,
        EXT_PCS_DDD_RETAIL_src.QTY_MTH24,
        EXT_PCS_DDD_RETAIL_src.OUTLET_CITY,
        EXT_PCS_DDD_RETAIL_src.OUTLET_STATE,
        EXT_PCS_DDD_RETAIL_src.batch_id,
        EXT_PCS_DDD_RETAIL_src.row_id,
        EXT_PCS_DDD_RETAIL_src.update_ts
 FROM teva_ingestion.EXT_PCS_DDD_RETAIL_src
 ORDER BY EXT_PCS_DDD_RETAIL_src.batch_id
SEGMENTED BY hash(EXT_PCS_DDD_RETAIL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_PRIME_RX_src_super_b0 /*+basename(EXT_PRIME_RX_src_super)*/ 
(
 PHARMACY_NAME,
 MD_LAST_NAME,
 MD_FIRST_NAME,
 PRESCRIBER_NPI,
 MD_ADDR1,
 MD_ADDR2,
 MD_CITY,
 MD_STATE,
 MD_ZIP,
 MD_PHONE,
 SHIP_DATE,
 NDC_NUMBER,
 PRODUCT_NAME,
 FILL_NUMBER,
 QTY,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_PRIME_RX_src.PHARMACY_NAME,
        EXT_PRIME_RX_src.MD_LAST_NAME,
        EXT_PRIME_RX_src.MD_FIRST_NAME,
        EXT_PRIME_RX_src.PRESCRIBER_NPI,
        EXT_PRIME_RX_src.MD_ADDR1,
        EXT_PRIME_RX_src.MD_ADDR2,
        EXT_PRIME_RX_src.MD_CITY,
        EXT_PRIME_RX_src.MD_STATE,
        EXT_PRIME_RX_src.MD_ZIP,
        EXT_PRIME_RX_src.MD_PHONE,
        EXT_PRIME_RX_src.SHIP_DATE,
        EXT_PRIME_RX_src.NDC_NUMBER,
        EXT_PRIME_RX_src.PRODUCT_NAME,
        EXT_PRIME_RX_src.FILL_NUMBER,
        EXT_PRIME_RX_src.QTY,
        EXT_PRIME_RX_src.batch_id,
        EXT_PRIME_RX_src.row_id,
        EXT_PRIME_RX_src.update_ts
 FROM teva_ingestion.EXT_PRIME_RX_src
 ORDER BY EXT_PRIME_RX_src.batch_id
SEGMENTED BY hash(EXT_PRIME_RX_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_REMS_FACILITY_src_super_b0 /*+basename(EXT_REMS_FACILITY_src_super)*/ 
(
 PROGRAM_ID,
 PROGRAM_NAME,
 CHANNEL_INITIATED,
 ENROLLMENT_ID,
 HEALTHCARE_FACILITY_TYPE,
 SITE_NAME,
 ADDRESS_1,
 ADDRESS_2,
 CITY,
 STATE,
 ZIP_CODE,
 FIRST_NAME,
 MIDDLE_NAME,
 LAST_NAME,
 STATUS_DESCRIPTION,
 IN_PROGRESS_STEP,
 PHONE_NUMBER,
 EFFECTIVE_DATE,
 EXPIRATION_DATE,
 NCPDP,
 NPI,
 DEA,
 OBSOLESCENCE_DATE,
 OBSOLESCENCE_REASON,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_REMS_FACILITY_src.PROGRAM_ID,
        EXT_REMS_FACILITY_src.PROGRAM_NAME,
        EXT_REMS_FACILITY_src.CHANNEL_INITIATED,
        EXT_REMS_FACILITY_src.ENROLLMENT_ID,
        EXT_REMS_FACILITY_src.HEALTHCARE_FACILITY_TYPE,
        EXT_REMS_FACILITY_src.SITE_NAME,
        EXT_REMS_FACILITY_src.ADDRESS_1,
        EXT_REMS_FACILITY_src.ADDRESS_2,
        EXT_REMS_FACILITY_src.CITY,
        EXT_REMS_FACILITY_src.STATE,
        EXT_REMS_FACILITY_src.ZIP_CODE,
        EXT_REMS_FACILITY_src.FIRST_NAME,
        EXT_REMS_FACILITY_src.MIDDLE_NAME,
        EXT_REMS_FACILITY_src.LAST_NAME,
        EXT_REMS_FACILITY_src.STATUS_DESCRIPTION,
        EXT_REMS_FACILITY_src.IN_PROGRESS_STEP,
        EXT_REMS_FACILITY_src.PHONE_NUMBER,
        EXT_REMS_FACILITY_src.EFFECTIVE_DATE,
        EXT_REMS_FACILITY_src.EXPIRATION_DATE,
        EXT_REMS_FACILITY_src.NCPDP,
        EXT_REMS_FACILITY_src.NPI,
        EXT_REMS_FACILITY_src.DEA,
        EXT_REMS_FACILITY_src.OBSOLESCENCE_DATE,
        EXT_REMS_FACILITY_src.OBSOLESCENCE_REASON,
        EXT_REMS_FACILITY_src.batch_id,
        EXT_REMS_FACILITY_src.row_id,
        EXT_REMS_FACILITY_src.update_ts
 FROM teva_ingestion.EXT_REMS_FACILITY_src
 ORDER BY EXT_REMS_FACILITY_src.batch_id
SEGMENTED BY hash(EXT_REMS_FACILITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_REMS_PHARMACY_src_super_b0 /*+basename(EXT_REMS_PHARMACY_src_super)*/ 
(
 PROGRAM_ID,
 PROGRAM_NAME,
 CHANNEL,
 ENROLLMENT_ID,
 PHARMACY_TYPE,
 PHARMACY_NAME,
 ADDRESS1,
 ADDRESS2,
 CITY,
 STATE,
 ZIP,
 FIRST_NAME,
 MIDDLE_NAME,
 LAST_NAME,
 STATUS,
 IN_PROGRESS_STEP,
 PHONE,
 EFFECTIVE_DATE,
 EXPIRATION_DATE,
 NCPDP,
 NPI,
 DEA_NUM,
 LICENSE_NUMBER,
 OBSOLESCENCE_DATE,
 OBSOLESCENCE_REASON,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_REMS_PHARMACY_src.PROGRAM_ID,
        EXT_REMS_PHARMACY_src.PROGRAM_NAME,
        EXT_REMS_PHARMACY_src.CHANNEL,
        EXT_REMS_PHARMACY_src.ENROLLMENT_ID,
        EXT_REMS_PHARMACY_src.PHARMACY_TYPE,
        EXT_REMS_PHARMACY_src.PHARMACY_NAME,
        EXT_REMS_PHARMACY_src.ADDRESS1,
        EXT_REMS_PHARMACY_src.ADDRESS2,
        EXT_REMS_PHARMACY_src.CITY,
        EXT_REMS_PHARMACY_src.STATE,
        EXT_REMS_PHARMACY_src.ZIP,
        EXT_REMS_PHARMACY_src.FIRST_NAME,
        EXT_REMS_PHARMACY_src.MIDDLE_NAME,
        EXT_REMS_PHARMACY_src.LAST_NAME,
        EXT_REMS_PHARMACY_src.STATUS,
        EXT_REMS_PHARMACY_src.IN_PROGRESS_STEP,
        EXT_REMS_PHARMACY_src.PHONE,
        EXT_REMS_PHARMACY_src.EFFECTIVE_DATE,
        EXT_REMS_PHARMACY_src.EXPIRATION_DATE,
        EXT_REMS_PHARMACY_src.NCPDP,
        EXT_REMS_PHARMACY_src.NPI,
        EXT_REMS_PHARMACY_src.DEA_NUM,
        EXT_REMS_PHARMACY_src.LICENSE_NUMBER,
        EXT_REMS_PHARMACY_src.OBSOLESCENCE_DATE,
        EXT_REMS_PHARMACY_src.OBSOLESCENCE_REASON,
        EXT_REMS_PHARMACY_src.batch_id,
        EXT_REMS_PHARMACY_src.row_id,
        EXT_REMS_PHARMACY_src.update_ts
 FROM teva_ingestion.EXT_REMS_PHARMACY_src
 ORDER BY EXT_REMS_PHARMACY_src.batch_id
SEGMENTED BY hash(EXT_REMS_PHARMACY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_REMS_PRESCRIBER_src_super_b0 /*+basename(EXT_REMS_PRESCRIBER_src_super)*/ 
(
 PROGRAM_ID,
 PROGRAM_NAME,
 CHANNEL,
 ENROLLMENT_ID,
 FIRST_NAME,
 MIDDLE_NAME,
 LAST_NAME,
 CREDENTIAL,
 SPECIALTY,
 SITE_NAME,
 ADDRESS1,
 ADDRESS2,
 CITY,
 STATE,
 ZIP,
 STATUS,
 IN_PROGRESS_STEP,
 PHONE,
 EFFECTIVE_DATE,
 EXPIRATION_DATE,
 NPI,
 DEA_NUM,
 OBSOLESCENCE_DATE,
 OBSOLESCENCE_REASON,
 PPAF_COUNT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_REMS_PRESCRIBER_src.PROGRAM_ID,
        EXT_REMS_PRESCRIBER_src.PROGRAM_NAME,
        EXT_REMS_PRESCRIBER_src.CHANNEL,
        EXT_REMS_PRESCRIBER_src.ENROLLMENT_ID,
        EXT_REMS_PRESCRIBER_src.FIRST_NAME,
        EXT_REMS_PRESCRIBER_src.MIDDLE_NAME,
        EXT_REMS_PRESCRIBER_src.LAST_NAME,
        EXT_REMS_PRESCRIBER_src.CREDENTIAL,
        EXT_REMS_PRESCRIBER_src.SPECIALTY,
        EXT_REMS_PRESCRIBER_src.SITE_NAME,
        EXT_REMS_PRESCRIBER_src.ADDRESS1,
        EXT_REMS_PRESCRIBER_src.ADDRESS2,
        EXT_REMS_PRESCRIBER_src.CITY,
        EXT_REMS_PRESCRIBER_src.STATE,
        EXT_REMS_PRESCRIBER_src.ZIP,
        EXT_REMS_PRESCRIBER_src.STATUS,
        EXT_REMS_PRESCRIBER_src.IN_PROGRESS_STEP,
        EXT_REMS_PRESCRIBER_src.PHONE,
        EXT_REMS_PRESCRIBER_src.EFFECTIVE_DATE,
        EXT_REMS_PRESCRIBER_src.EXPIRATION_DATE,
        EXT_REMS_PRESCRIBER_src.NPI,
        EXT_REMS_PRESCRIBER_src.DEA_NUM,
        EXT_REMS_PRESCRIBER_src.OBSOLESCENCE_DATE,
        EXT_REMS_PRESCRIBER_src.OBSOLESCENCE_REASON,
        EXT_REMS_PRESCRIBER_src.PPAF_COUNT,
        EXT_REMS_PRESCRIBER_src.batch_id,
        EXT_REMS_PRESCRIBER_src.row_id,
        EXT_REMS_PRESCRIBER_src.update_ts
 FROM teva_ingestion.EXT_REMS_PRESCRIBER_src
 ORDER BY EXT_REMS_PRESCRIBER_src.batch_id
SEGMENTED BY hash(EXT_REMS_PRESCRIBER_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_SPECIALTY_PHARMACY_CM_LKUP_src_super_b0 /*+basename(EXT_SPECIALTY_PHARMACY_CM_LKUP_src_super)*/ 
(
 SOURCE_KEY,
 SOURCE_NAME,
 FILE_NAME,
 ROWID_OBJECT_MATCHED,
 RULE_NO,
 ROWID_MATCH_RULE,
 AUTOMERGE_IND,
 CREATOR,
 CREATE_DATE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_SPECIALTY_PHARMACY_CM_LKUP_src.SOURCE_KEY,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.SOURCE_NAME,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.FILE_NAME,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.ROWID_OBJECT_MATCHED,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.RULE_NO,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.ROWID_MATCH_RULE,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.AUTOMERGE_IND,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.CREATOR,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.CREATE_DATE,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.batch_id,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.row_id,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.update_ts
 FROM teva_ingestion.EXT_SPECIALTY_PHARMACY_CM_LKUP_src
 ORDER BY EXT_SPECIALTY_PHARMACY_CM_LKUP_src.batch_id
SEGMENTED BY hash(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_SPECIALTY_PHARMACY_LOOKUPS_src_super_b0 /*+basename(EXT_SPECIALTY_PHARMACY_LOOKUPS_src_super)*/ 
(
 SOURCE_ID,
 LAST_NAME,
 FIRST_NAME,
 NPI,
 ADDRESS1,
 ADDRESS2,
 CITY,
 STATE,
 ZIP,
 IMS_ID,
 "MATCH",
 HCE_ID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_SPECIALTY_PHARMACY_LOOKUPS_src.SOURCE_ID,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.LAST_NAME,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.FIRST_NAME,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.NPI,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.ADDRESS1,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.ADDRESS2,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.CITY,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.STATE,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.ZIP,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.IMS_ID,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src."MATCH",
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.HCE_ID,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.batch_id,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.row_id,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.update_ts
 FROM teva_ingestion.EXT_SPECIALTY_PHARMACY_LOOKUPS_src
 ORDER BY EXT_SPECIALTY_PHARMACY_LOOKUPS_src.batch_id
SEGMENTED BY hash(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TB_CB_TRANSACTIONS_src_super_b0 /*+basename(EXT_TB_CB_TRANSACTIONS_src_super)*/ 
(
 ACCOUNT_ID,
 LOCATION_ID,
 SHIPMENT_DATE,
 NDC_CODE,
 PRODUCT_NAME,
 CONTRACT_ID,
 CHARGEBACK_UNITS,
 CHARGEBACK_DOLLARS,
 RECEIPT_DATE,
 DEBIT_MEMO_NUM,
 CREDIT_MEMO_DATE,
 CREDIT_MEMO_NUM,
 SETTLEMENT_DATE,
 CONTRACT_PRICE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TB_CB_TRANSACTIONS_src.ACCOUNT_ID,
        EXT_TB_CB_TRANSACTIONS_src.LOCATION_ID,
        EXT_TB_CB_TRANSACTIONS_src.SHIPMENT_DATE,
        EXT_TB_CB_TRANSACTIONS_src.NDC_CODE,
        EXT_TB_CB_TRANSACTIONS_src.PRODUCT_NAME,
        EXT_TB_CB_TRANSACTIONS_src.CONTRACT_ID,
        EXT_TB_CB_TRANSACTIONS_src.CHARGEBACK_UNITS,
        EXT_TB_CB_TRANSACTIONS_src.CHARGEBACK_DOLLARS,
        EXT_TB_CB_TRANSACTIONS_src.RECEIPT_DATE,
        EXT_TB_CB_TRANSACTIONS_src.DEBIT_MEMO_NUM,
        EXT_TB_CB_TRANSACTIONS_src.CREDIT_MEMO_DATE,
        EXT_TB_CB_TRANSACTIONS_src.CREDIT_MEMO_NUM,
        EXT_TB_CB_TRANSACTIONS_src.SETTLEMENT_DATE,
        EXT_TB_CB_TRANSACTIONS_src.CONTRACT_PRICE,
        EXT_TB_CB_TRANSACTIONS_src.batch_id,
        EXT_TB_CB_TRANSACTIONS_src.row_id,
        EXT_TB_CB_TRANSACTIONS_src.update_ts
 FROM teva_ingestion.EXT_TB_CB_TRANSACTIONS_src
 ORDER BY EXT_TB_CB_TRANSACTIONS_src.batch_id
SEGMENTED BY hash(EXT_TB_CB_TRANSACTIONS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TB_DS_ACCOUNTS_src_super_b0 /*+basename(EXT_TB_DS_ACCOUNTS_src_super)*/ 
(
 ACCOUNT_ID,
 LOCATION_ID,
 ACCOUNT_NAME,
 ACCOUNT_CLASS,
 ADDRESS_1,
 ADDRESS_2,
 CITY,
 STATE,
 ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TB_DS_ACCOUNTS_src.ACCOUNT_ID,
        EXT_TB_DS_ACCOUNTS_src.LOCATION_ID,
        EXT_TB_DS_ACCOUNTS_src.ACCOUNT_NAME,
        EXT_TB_DS_ACCOUNTS_src.ACCOUNT_CLASS,
        EXT_TB_DS_ACCOUNTS_src.ADDRESS_1,
        EXT_TB_DS_ACCOUNTS_src.ADDRESS_2,
        EXT_TB_DS_ACCOUNTS_src.CITY,
        EXT_TB_DS_ACCOUNTS_src.STATE,
        EXT_TB_DS_ACCOUNTS_src.ZIP,
        EXT_TB_DS_ACCOUNTS_src.batch_id,
        EXT_TB_DS_ACCOUNTS_src.row_id,
        EXT_TB_DS_ACCOUNTS_src.update_ts
 FROM teva_ingestion.EXT_TB_DS_ACCOUNTS_src
 ORDER BY EXT_TB_DS_ACCOUNTS_src.batch_id
SEGMENTED BY hash(EXT_TB_DS_ACCOUNTS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TB_DS_TRANSACTIONS_src_super_b0 /*+basename(EXT_TB_DS_TRANSACTIONS_src_super)*/ 
(
 ACCOUNT_ID,
 LOCATION_ID,
 SHIPMENT_DATE,
 NDC_CODE,
 PRODUCT_NAME,
 TRANSACTION_TYPE,
 DIRECT_SALES_UNITS,
 DIRECT_SALES_DOLLARS,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TB_DS_TRANSACTIONS_src.ACCOUNT_ID,
        EXT_TB_DS_TRANSACTIONS_src.LOCATION_ID,
        EXT_TB_DS_TRANSACTIONS_src.SHIPMENT_DATE,
        EXT_TB_DS_TRANSACTIONS_src.NDC_CODE,
        EXT_TB_DS_TRANSACTIONS_src.PRODUCT_NAME,
        EXT_TB_DS_TRANSACTIONS_src.TRANSACTION_TYPE,
        EXT_TB_DS_TRANSACTIONS_src.DIRECT_SALES_UNITS,
        EXT_TB_DS_TRANSACTIONS_src.DIRECT_SALES_DOLLARS,
        EXT_TB_DS_TRANSACTIONS_src.batch_id,
        EXT_TB_DS_TRANSACTIONS_src.row_id,
        EXT_TB_DS_TRANSACTIONS_src.update_ts
 FROM teva_ingestion.EXT_TB_DS_TRANSACTIONS_src
 ORDER BY EXT_TB_DS_TRANSACTIONS_src.batch_id
SEGMENTED BY hash(EXT_TB_DS_TRANSACTIONS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C_src_super_b0 /*+basename(EXT_TIME_OFF_TERRITORY_VOD__C_src_super)*/ 
(
 CREATEDBYID,
 CREATEDDATE,
 DATE_VOD__C,
 HOURS_OFF_VOD__C,
 HOURS_VOD__C,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTACTIVITYDATE,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 NAME,
 OWNERID,
 REASON_VOD__C,
 START_TIME_VOD__C,
 STATUS_VOD__C,
 SYSTEMMODSTAMP,
 TERRITORY_VOD__C,
 TIME_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDBYID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDDATE,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.DATE_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_OFF_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.ID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.ISDELETED,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.ISLOCKED,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTACTIVITYDATE,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDBYID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDDATE,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.MAYEDIT,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.NAME,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.OWNERID,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.REASON_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.START_TIME_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.STATUS_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.SYSTEMMODSTAMP,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.TERRITORY_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.TIME_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.batch_id,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.row_id,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C_src
 ORDER BY EXT_TIME_OFF_TERRITORY_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_TIME_OFF_TERRITORY_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TOUCHPOINT_CALL_src_super_b0 /*+basename(EXT_TOUCHPOINT_CALL_src_super)*/ 
(
 CALL_ID,
 CALL_ATTEMPT_ID,
 TOUCHPOINT_ID,
 CLIENT_ID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 CALL_TYPE,
 CALL_DATE,
 STATUS_CODE,
 STATUS_DESCRIPTION,
 REP_ID,
 REP_FIRST_NAME,
 REP_LAST_NAME,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TOUCHPOINT_CALL_src.CALL_ID,
        EXT_TOUCHPOINT_CALL_src.CALL_ATTEMPT_ID,
        EXT_TOUCHPOINT_CALL_src.TOUCHPOINT_ID,
        EXT_TOUCHPOINT_CALL_src.CLIENT_ID,
        EXT_TOUCHPOINT_CALL_src.IMS_ID,
        EXT_TOUCHPOINT_CALL_src.FIRST_NAME,
        EXT_TOUCHPOINT_CALL_src.LAST_NAME,
        EXT_TOUCHPOINT_CALL_src.CALL_TYPE,
        EXT_TOUCHPOINT_CALL_src.CALL_DATE,
        EXT_TOUCHPOINT_CALL_src.STATUS_CODE,
        EXT_TOUCHPOINT_CALL_src.STATUS_DESCRIPTION,
        EXT_TOUCHPOINT_CALL_src.REP_ID,
        EXT_TOUCHPOINT_CALL_src.REP_FIRST_NAME,
        EXT_TOUCHPOINT_CALL_src.REP_LAST_NAME,
        EXT_TOUCHPOINT_CALL_src.batch_id,
        EXT_TOUCHPOINT_CALL_src.row_id,
        EXT_TOUCHPOINT_CALL_src.update_ts
 FROM teva_ingestion.EXT_TOUCHPOINT_CALL_src
 ORDER BY EXT_TOUCHPOINT_CALL_src.batch_id
SEGMENTED BY hash(EXT_TOUCHPOINT_CALL_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_src_super_b0 /*+basename(EXT_TOUCHPOINT_PRESENTATION_src_super)*/ 
(
 CALL_ID,
 CALL_ATTEMPT_ID,
 PRESENTATION_ID,
 PRODUCT,
 "POSITION",
 ITEM_TYPE,
 ITEM_DESCRIPTION,
 QUANTITY,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TOUCHPOINT_PRESENTATION_src.CALL_ID,
        EXT_TOUCHPOINT_PRESENTATION_src.CALL_ATTEMPT_ID,
        EXT_TOUCHPOINT_PRESENTATION_src.PRESENTATION_ID,
        EXT_TOUCHPOINT_PRESENTATION_src.PRODUCT,
        EXT_TOUCHPOINT_PRESENTATION_src."POSITION",
        EXT_TOUCHPOINT_PRESENTATION_src.ITEM_TYPE,
        EXT_TOUCHPOINT_PRESENTATION_src.ITEM_DESCRIPTION,
        EXT_TOUCHPOINT_PRESENTATION_src.QUANTITY,
        EXT_TOUCHPOINT_PRESENTATION_src.batch_id,
        EXT_TOUCHPOINT_PRESENTATION_src.row_id,
        EXT_TOUCHPOINT_PRESENTATION_src.update_ts
 FROM teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_src
 ORDER BY EXT_TOUCHPOINT_PRESENTATION_src.batch_id
SEGMENTED BY hash(EXT_TOUCHPOINT_PRESENTATION_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TW_BIOLOGICS_SALES_src_super_b0 /*+basename(EXT_TW_BIOLOGICS_SALES_src_super)*/ 
(
 MRN,
 ORDER_NO,
 REFERRAL_DATE,
 REFERRAL_SOURCE,
 REFERRAL_METHOD,
 REFERRAL_TYPE,
 PATIENT_AUTH,
 STATUS,
 PLACEMENT_DATE,
 BILLING_METHOD,
 ICD_9,
 PHY_FIRST_NAME,
 PHY_LAST_NAME,
 PRACTICE_NAME,
 NPI,
 TAX_ID,
 PHY_NETWORK_STATUS,
 PHY_STREET,
 PHY_CITY,
 PHY_STATE,
 PHY_ZIP,
 PHY_PHONE,
 PHY_FAX,
 PAYOR,
 PAYOR_TYPE,
 PAYOR_PHONE,
 PAYOR_CONTACT,
 PAYOR_REFERENCE,
 BENEFIT_TYPE,
 PAYOR_RANK,
 EFFECTIVE_DATE,
 DEDUCTIBLE,
 DEDUCTIBLE_MET,
 AMOUNT_MET,
 OOP_MAX,
 OOP_MET,
 LIFETIME_MAX,
 ANNUAL_BENEFIT_CAP,
 LIMITATIONS_RESTRICTIONS,
 ASSIGNMENT_ALLOWED,
 CO_INSURANCE,
 COPAY,
 OFFICE_VISIT_COPAY,
 FOLLOW_UP_COVERAGE,
 FOLLOW_UP_COPAY,
 J7300_COVERAGE_STATUS,
 J7300_COVERAGE_TYPE,
 "58300_COVERAGE_STATUS",
 "58300_COVERAGE_TYPE",
 PA_REQUIRED,
 PA_TYPE,
 PA_CONTACT,
 PA_PHONE,
 PA_FAX,
 PA_TAT,
 J7300_REIMBURSEMENT,
 "58300_INSERTION",
 PBM,
 PBM_PHONE,
 PREFERRED_PHARMACY,
 PHARMACY_PHONE,
 PHARMACY_FAX,
 SP_COPAY,
 SP_NAME,
 TRIAGE_DATE,
 INVOICE_NUMBER,
 SP_SHIP_DATE,
 SHIP_TO_NAME,
 SHIP_TO_ADDRESS_1,
 SHIP_TO_ADDRESS_2,
 SHIP_TO_CITY,
 SHIP_TO_STATE,
 SHIP_TO_ZIP,
 CALL_DATE_1,
 PT_REACHED_1,
 WHO_WAS_REACHED_1,
 CALL_DATE_2,
 PT_REACHED_2,
 WHO_WAS_REACHED_2,
 CALL_DATE_3,
 PT_REACHED_3,
 WHO_WAS_REACHED_3,
 KEEPING_APPT,
 ALTERNATE_METHOD,
 ADDITIONAL_QUESTIONS,
 TRANSFERRED,
 TRANSFER_DESTINATION,
 DISCHARGE_REASON,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TW_BIOLOGICS_SALES_src.MRN,
        EXT_TW_BIOLOGICS_SALES_src.ORDER_NO,
        EXT_TW_BIOLOGICS_SALES_src.REFERRAL_DATE,
        EXT_TW_BIOLOGICS_SALES_src.REFERRAL_SOURCE,
        EXT_TW_BIOLOGICS_SALES_src.REFERRAL_METHOD,
        EXT_TW_BIOLOGICS_SALES_src.REFERRAL_TYPE,
        EXT_TW_BIOLOGICS_SALES_src.PATIENT_AUTH,
        EXT_TW_BIOLOGICS_SALES_src.STATUS,
        EXT_TW_BIOLOGICS_SALES_src.PLACEMENT_DATE,
        EXT_TW_BIOLOGICS_SALES_src.BILLING_METHOD,
        EXT_TW_BIOLOGICS_SALES_src.ICD_9,
        EXT_TW_BIOLOGICS_SALES_src.PHY_FIRST_NAME,
        EXT_TW_BIOLOGICS_SALES_src.PHY_LAST_NAME,
        EXT_TW_BIOLOGICS_SALES_src.PRACTICE_NAME,
        EXT_TW_BIOLOGICS_SALES_src.NPI,
        EXT_TW_BIOLOGICS_SALES_src.TAX_ID,
        EXT_TW_BIOLOGICS_SALES_src.PHY_NETWORK_STATUS,
        EXT_TW_BIOLOGICS_SALES_src.PHY_STREET,
        EXT_TW_BIOLOGICS_SALES_src.PHY_CITY,
        EXT_TW_BIOLOGICS_SALES_src.PHY_STATE,
        EXT_TW_BIOLOGICS_SALES_src.PHY_ZIP,
        EXT_TW_BIOLOGICS_SALES_src.PHY_PHONE,
        EXT_TW_BIOLOGICS_SALES_src.PHY_FAX,
        EXT_TW_BIOLOGICS_SALES_src.PAYOR,
        EXT_TW_BIOLOGICS_SALES_src.PAYOR_TYPE,
        EXT_TW_BIOLOGICS_SALES_src.PAYOR_PHONE,
        EXT_TW_BIOLOGICS_SALES_src.PAYOR_CONTACT,
        EXT_TW_BIOLOGICS_SALES_src.PAYOR_REFERENCE,
        EXT_TW_BIOLOGICS_SALES_src.BENEFIT_TYPE,
        EXT_TW_BIOLOGICS_SALES_src.PAYOR_RANK,
        EXT_TW_BIOLOGICS_SALES_src.EFFECTIVE_DATE,
        EXT_TW_BIOLOGICS_SALES_src.DEDUCTIBLE,
        EXT_TW_BIOLOGICS_SALES_src.DEDUCTIBLE_MET,
        EXT_TW_BIOLOGICS_SALES_src.AMOUNT_MET,
        EXT_TW_BIOLOGICS_SALES_src.OOP_MAX,
        EXT_TW_BIOLOGICS_SALES_src.OOP_MET,
        EXT_TW_BIOLOGICS_SALES_src.LIFETIME_MAX,
        EXT_TW_BIOLOGICS_SALES_src.ANNUAL_BENEFIT_CAP,
        EXT_TW_BIOLOGICS_SALES_src.LIMITATIONS_RESTRICTIONS,
        EXT_TW_BIOLOGICS_SALES_src.ASSIGNMENT_ALLOWED,
        EXT_TW_BIOLOGICS_SALES_src.CO_INSURANCE,
        EXT_TW_BIOLOGICS_SALES_src.COPAY,
        EXT_TW_BIOLOGICS_SALES_src.OFFICE_VISIT_COPAY,
        EXT_TW_BIOLOGICS_SALES_src.FOLLOW_UP_COVERAGE,
        EXT_TW_BIOLOGICS_SALES_src.FOLLOW_UP_COPAY,
        EXT_TW_BIOLOGICS_SALES_src.J7300_COVERAGE_STATUS,
        EXT_TW_BIOLOGICS_SALES_src.J7300_COVERAGE_TYPE,
        EXT_TW_BIOLOGICS_SALES_src."58300_COVERAGE_STATUS",
        EXT_TW_BIOLOGICS_SALES_src."58300_COVERAGE_TYPE",
        EXT_TW_BIOLOGICS_SALES_src.PA_REQUIRED,
        EXT_TW_BIOLOGICS_SALES_src.PA_TYPE,
        EXT_TW_BIOLOGICS_SALES_src.PA_CONTACT,
        EXT_TW_BIOLOGICS_SALES_src.PA_PHONE,
        EXT_TW_BIOLOGICS_SALES_src.PA_FAX,
        EXT_TW_BIOLOGICS_SALES_src.PA_TAT,
        EXT_TW_BIOLOGICS_SALES_src.J7300_REIMBURSEMENT,
        EXT_TW_BIOLOGICS_SALES_src."58300_INSERTION",
        EXT_TW_BIOLOGICS_SALES_src.PBM,
        EXT_TW_BIOLOGICS_SALES_src.PBM_PHONE,
        EXT_TW_BIOLOGICS_SALES_src.PREFERRED_PHARMACY,
        EXT_TW_BIOLOGICS_SALES_src.PHARMACY_PHONE,
        EXT_TW_BIOLOGICS_SALES_src.PHARMACY_FAX,
        EXT_TW_BIOLOGICS_SALES_src.SP_COPAY,
        EXT_TW_BIOLOGICS_SALES_src.SP_NAME,
        EXT_TW_BIOLOGICS_SALES_src.TRIAGE_DATE,
        EXT_TW_BIOLOGICS_SALES_src.INVOICE_NUMBER,
        EXT_TW_BIOLOGICS_SALES_src.SP_SHIP_DATE,
        EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_NAME,
        EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_ADDRESS_1,
        EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_ADDRESS_2,
        EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_CITY,
        EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_STATE,
        EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_ZIP,
        EXT_TW_BIOLOGICS_SALES_src.CALL_DATE_1,
        EXT_TW_BIOLOGICS_SALES_src.PT_REACHED_1,
        EXT_TW_BIOLOGICS_SALES_src.WHO_WAS_REACHED_1,
        EXT_TW_BIOLOGICS_SALES_src.CALL_DATE_2,
        EXT_TW_BIOLOGICS_SALES_src.PT_REACHED_2,
        EXT_TW_BIOLOGICS_SALES_src.WHO_WAS_REACHED_2,
        EXT_TW_BIOLOGICS_SALES_src.CALL_DATE_3,
        EXT_TW_BIOLOGICS_SALES_src.PT_REACHED_3,
        EXT_TW_BIOLOGICS_SALES_src.WHO_WAS_REACHED_3,
        EXT_TW_BIOLOGICS_SALES_src.KEEPING_APPT,
        EXT_TW_BIOLOGICS_SALES_src.ALTERNATE_METHOD,
        EXT_TW_BIOLOGICS_SALES_src.ADDITIONAL_QUESTIONS,
        EXT_TW_BIOLOGICS_SALES_src.TRANSFERRED,
        EXT_TW_BIOLOGICS_SALES_src.TRANSFER_DESTINATION,
        EXT_TW_BIOLOGICS_SALES_src.DISCHARGE_REASON,
        EXT_TW_BIOLOGICS_SALES_src.batch_id,
        EXT_TW_BIOLOGICS_SALES_src.row_id,
        EXT_TW_BIOLOGICS_SALES_src.update_ts
 FROM teva_ingestion.EXT_TW_BIOLOGICS_SALES_src
 ORDER BY EXT_TW_BIOLOGICS_SALES_src.batch_id
SEGMENTED BY hash(EXT_TW_BIOLOGICS_SALES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TW_HD_SMITH_SALES_src_super_b0 /*+basename(EXT_TW_HD_SMITH_SALES_src_super)*/ 
(
 MONTH,
 ORDER_DATE,
 SHIP_DATE,
 ORDER_NUM,
 INVOICE_NUM,
 ORDER_TYPE,
 ORDER_CATEGORY,
 RETURN_FLAG,
 SHIP_TO_CUSTOMER_NUM,
 SHIP_TO_CUSTOMER_NAME,
 SHIP_TO_ADDRESS_1,
 SHIP_TO_ADDRESS_2,
 SHIP_TO_CITY,
 SHIP_TO_STATE,
 SHIP_TO_ZIP,
 BILL_TO_CUSTOMER_NUM,
 BILL_TO_CUSTOMER_NAME,
 BILL_TO_ADDRESS_1,
 BILL_TO_ADDRESS_2,
 BILL_TO_CITY,
 BILL_TO_STATE,
 BILL_TO_ZIP,
 CLASS_OF_TRADE,
 CUSTOMER_DEA_NUM,
 CUSTOMER_340B_NUM,
 HEALTH_INDUSTRY_NUM,
 STATE_LICENSE_NUM,
 PLANT,
 VENDOR,
 MATERIAL_NUM,
 MATERIAL_DESC,
 PACK_SIZE,
 NDC,
 CONTRACT_NUM,
 QUANTITY,
 VALUE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TW_HD_SMITH_SALES_src.MONTH,
        EXT_TW_HD_SMITH_SALES_src.ORDER_DATE,
        EXT_TW_HD_SMITH_SALES_src.SHIP_DATE,
        EXT_TW_HD_SMITH_SALES_src.ORDER_NUM,
        EXT_TW_HD_SMITH_SALES_src.INVOICE_NUM,
        EXT_TW_HD_SMITH_SALES_src.ORDER_TYPE,
        EXT_TW_HD_SMITH_SALES_src.ORDER_CATEGORY,
        EXT_TW_HD_SMITH_SALES_src.RETURN_FLAG,
        EXT_TW_HD_SMITH_SALES_src.SHIP_TO_CUSTOMER_NUM,
        EXT_TW_HD_SMITH_SALES_src.SHIP_TO_CUSTOMER_NAME,
        EXT_TW_HD_SMITH_SALES_src.SHIP_TO_ADDRESS_1,
        EXT_TW_HD_SMITH_SALES_src.SHIP_TO_ADDRESS_2,
        EXT_TW_HD_SMITH_SALES_src.SHIP_TO_CITY,
        EXT_TW_HD_SMITH_SALES_src.SHIP_TO_STATE,
        EXT_TW_HD_SMITH_SALES_src.SHIP_TO_ZIP,
        EXT_TW_HD_SMITH_SALES_src.BILL_TO_CUSTOMER_NUM,
        EXT_TW_HD_SMITH_SALES_src.BILL_TO_CUSTOMER_NAME,
        EXT_TW_HD_SMITH_SALES_src.BILL_TO_ADDRESS_1,
        EXT_TW_HD_SMITH_SALES_src.BILL_TO_ADDRESS_2,
        EXT_TW_HD_SMITH_SALES_src.BILL_TO_CITY,
        EXT_TW_HD_SMITH_SALES_src.BILL_TO_STATE,
        EXT_TW_HD_SMITH_SALES_src.BILL_TO_ZIP,
        EXT_TW_HD_SMITH_SALES_src.CLASS_OF_TRADE,
        EXT_TW_HD_SMITH_SALES_src.CUSTOMER_DEA_NUM,
        EXT_TW_HD_SMITH_SALES_src.CUSTOMER_340B_NUM,
        EXT_TW_HD_SMITH_SALES_src.HEALTH_INDUSTRY_NUM,
        EXT_TW_HD_SMITH_SALES_src.STATE_LICENSE_NUM,
        EXT_TW_HD_SMITH_SALES_src.PLANT,
        EXT_TW_HD_SMITH_SALES_src.VENDOR,
        EXT_TW_HD_SMITH_SALES_src.MATERIAL_NUM,
        EXT_TW_HD_SMITH_SALES_src.MATERIAL_DESC,
        EXT_TW_HD_SMITH_SALES_src.PACK_SIZE,
        EXT_TW_HD_SMITH_SALES_src.NDC,
        EXT_TW_HD_SMITH_SALES_src.CONTRACT_NUM,
        EXT_TW_HD_SMITH_SALES_src.QUANTITY,
        EXT_TW_HD_SMITH_SALES_src.VALUE,
        EXT_TW_HD_SMITH_SALES_src.batch_id,
        EXT_TW_HD_SMITH_SALES_src.row_id,
        EXT_TW_HD_SMITH_SALES_src.update_ts
 FROM teva_ingestion.EXT_TW_HD_SMITH_SALES_src
 ORDER BY EXT_TW_HD_SMITH_SALES_src.batch_id
SEGMENTED BY hash(EXT_TW_HD_SMITH_SALES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_DMD_WEEKLY_SALES_src_super_b0 /*+basename(EXT_ONC_DMD_WEEKLY_SALES_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 IMS_OUTLET_CODE,
 SUBCATEGORY_CODE,
 ALT_SEQ_NUM,
 FILLER_01,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 DATA_DATE,
 QTY_WK01,
 QTY_WK02,
 QTY_WK03,
 QTY_WK04,
 QTY_WK05,
 QTY_WK06,
 QTY_WK07,
 QTY_WK08,
 QTY_WK09,
 QTY_WK10,
 QTY_WK11,
 QTY_WK12,
 QTY_WK13,
 QTY_WK14,
 QTY_WK15,
 QTY_WK16,
 QTY_WK17,
 QTY_WK18,
 QTY_WK19,
 QTY_WK20,
 QTY_WK21,
 QTY_WK22,
 QTY_WK23,
 QTY_WK24,
 QTY_WK25,
 QTY_WK26,
 QTY_WK27,
 QTY_WK28,
 QTY_WK29,
 QTY_WK30,
 QTY_WK31,
 QTY_WK32,
 QTY_WK33,
 QTY_WK34,
 QTY_WK35,
 QTY_WK36,
 QTY_WK37,
 QTY_WK38,
 QTY_WK39,
 QTY_WK40,
 QTY_WK41,
 QTY_WK42,
 QTY_WK43,
 QTY_WK44,
 QTY_WK45,
 QTY_WK46,
 QTY_WK47,
 QTY_WK48,
 QTY_WK49,
 QTY_WK50,
 QTY_WK51,
 QTY_WK52,
 QTY_WK53,
 QTY_WK54,
 QTY_WK55,
 QTY_WK56,
 QTY_WK57,
 QTY_WK58,
 QTY_WK59,
 QTY_WK60,
 QTY_WK61,
 QTY_WK62,
 QTY_WK63,
 QTY_WK64,
 QTY_WK65,
 QTY_WK66,
 QTY_WK67,
 QTY_WK68,
 QTY_WK69,
 QTY_WK70,
 QTY_WK71,
 QTY_WK72,
 QTY_WK73,
 QTY_WK74,
 QTY_WK75,
 QTY_WK76,
 QTY_WK77,
 QTY_WK78,
 QTY_WK79,
 QTY_WK80,
 QTY_WK81,
 QTY_WK82,
 QTY_WK83,
 QTY_WK84,
 QTY_WK85,
 QTY_WK86,
 QTY_WK87,
 QTY_WK88,
 QTY_WK89,
 QTY_WK90,
 QTY_WK91,
 QTY_WK92,
 QTY_WK93,
 QTY_WK94,
 QTY_WK95,
 QTY_WK96,
 QTY_WK97,
 QTY_WK98,
 QTY_WK99,
 QTY_WK100,
 QTY_WK101,
 QTY_WK102,
 QTY_WK103,
 QTY_WK104,
 QTY_WK105,
 QTY_WK106,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_DMD_WEEKLY_SALES_src.CLIENT_NUM,
        EXT_ONC_DMD_WEEKLY_SALES_src.REPORT_NUM,
        EXT_ONC_DMD_WEEKLY_SALES_src.IMS_OUTLET_CODE,
        EXT_ONC_DMD_WEEKLY_SALES_src.SUBCATEGORY_CODE,
        EXT_ONC_DMD_WEEKLY_SALES_src.ALT_SEQ_NUM,
        EXT_ONC_DMD_WEEKLY_SALES_src.FILLER_01,
        EXT_ONC_DMD_WEEKLY_SALES_src.CATEGORY_CODE,
        EXT_ONC_DMD_WEEKLY_SALES_src.IMS_PRODUCT_CODE,
        EXT_ONC_DMD_WEEKLY_SALES_src.DATA_DATE,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK01,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK02,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK03,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK04,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK05,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK06,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK07,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK08,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK09,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK10,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK11,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK12,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK13,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK14,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK15,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK16,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK17,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK18,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK19,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK20,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK21,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK22,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK23,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK24,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK25,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK26,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK27,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK28,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK29,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK30,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK31,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK32,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK33,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK34,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK35,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK36,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK37,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK38,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK39,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK40,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK41,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK42,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK43,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK44,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK45,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK46,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK47,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK48,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK49,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK50,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK51,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK52,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK53,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK54,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK55,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK56,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK57,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK58,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK59,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK60,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK61,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK62,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK63,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK64,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK65,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK66,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK67,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK68,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK69,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK70,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK71,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK72,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK73,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK74,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK75,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK76,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK77,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK78,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK79,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK80,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK81,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK82,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK83,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK84,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK85,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK86,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK87,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK88,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK89,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK90,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK91,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK92,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK93,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK94,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK95,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK96,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK97,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK98,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK99,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK100,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK101,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK102,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK103,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK104,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK105,
        EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK106,
        EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_NAME,
        EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_ADDRESS,
        EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_CITY,
        EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_STATE,
        EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_ZIP,
        EXT_ONC_DMD_WEEKLY_SALES_src.batch_id,
        EXT_ONC_DMD_WEEKLY_SALES_src.row_id,
        EXT_ONC_DMD_WEEKLY_SALES_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_WEEKLY_SALES_src
 ORDER BY EXT_ONC_DMD_WEEKLY_SALES_src.batch_id
SEGMENTED BY hash(EXT_ONC_DMD_WEEKLY_SALES_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CAREMARK_RX2_AOB_src_super_b0 /*+basename(EXT_CAREMARK_RX2_AOB_src_super)*/ 
(
 MD_ID,
 MD_LAST_NAME,
 MD_FIRST_NAME,
 PRESCRIBER_NPI,
 MD_ADDR1,
 MD_ADDR2,
 MD_CITY,
 MD_STATE,
 MD_ZIP,
 NDC_NUMBER,
 SHIP_DATE,
 QTY,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CAREMARK_RX2_AOB_src.MD_ID,
        EXT_CAREMARK_RX2_AOB_src.MD_LAST_NAME,
        EXT_CAREMARK_RX2_AOB_src.MD_FIRST_NAME,
        EXT_CAREMARK_RX2_AOB_src.PRESCRIBER_NPI,
        EXT_CAREMARK_RX2_AOB_src.MD_ADDR1,
        EXT_CAREMARK_RX2_AOB_src.MD_ADDR2,
        EXT_CAREMARK_RX2_AOB_src.MD_CITY,
        EXT_CAREMARK_RX2_AOB_src.MD_STATE,
        EXT_CAREMARK_RX2_AOB_src.MD_ZIP,
        EXT_CAREMARK_RX2_AOB_src.NDC_NUMBER,
        EXT_CAREMARK_RX2_AOB_src.SHIP_DATE,
        EXT_CAREMARK_RX2_AOB_src.QTY,
        EXT_CAREMARK_RX2_AOB_src.batch_id,
        EXT_CAREMARK_RX2_AOB_src.row_id,
        EXT_CAREMARK_RX2_AOB_src.update_ts
 FROM teva_ingestion.EXT_CAREMARK_RX2_AOB_src
 ORDER BY EXT_CAREMARK_RX2_AOB_src.batch_id
SEGMENTED BY hash(EXT_CAREMARK_RX2_AOB_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CAREMARK_RX2_MEDICARE_src_super_b0 /*+basename(EXT_CAREMARK_RX2_MEDICARE_src_super)*/ 
(
 MD_ID,
 MD_LAST_NAME,
 MD_FIRST_NAME,
 PRESCRIBER_NPI,
 MD_ADDR1,
 MD_ADDR2,
 MD_CITY,
 MD_STATE,
 MD_ZIP,
 NDC_NUMBER,
 SHIP_DATE,
 QTY,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CAREMARK_RX2_MEDICARE_src.MD_ID,
        EXT_CAREMARK_RX2_MEDICARE_src.MD_LAST_NAME,
        EXT_CAREMARK_RX2_MEDICARE_src.MD_FIRST_NAME,
        EXT_CAREMARK_RX2_MEDICARE_src.PRESCRIBER_NPI,
        EXT_CAREMARK_RX2_MEDICARE_src.MD_ADDR1,
        EXT_CAREMARK_RX2_MEDICARE_src.MD_ADDR2,
        EXT_CAREMARK_RX2_MEDICARE_src.MD_CITY,
        EXT_CAREMARK_RX2_MEDICARE_src.MD_STATE,
        EXT_CAREMARK_RX2_MEDICARE_src.MD_ZIP,
        EXT_CAREMARK_RX2_MEDICARE_src.NDC_NUMBER,
        EXT_CAREMARK_RX2_MEDICARE_src.SHIP_DATE,
        EXT_CAREMARK_RX2_MEDICARE_src.QTY,
        EXT_CAREMARK_RX2_MEDICARE_src.batch_id,
        EXT_CAREMARK_RX2_MEDICARE_src.row_id,
        EXT_CAREMARK_RX2_MEDICARE_src.update_ts
 FROM teva_ingestion.EXT_CAREMARK_RX2_MEDICARE_src
 ORDER BY EXT_CAREMARK_RX2_MEDICARE_src.batch_id
SEGMENTED BY hash(EXT_CAREMARK_RX2_MEDICARE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DDD_DOD_SALES_MS_src_super_b0 /*+basename(EXT_DDD_DOD_SALES_MS_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 filler_01,
 OUTLET_CODE,
 SUBCATEGORY_CODE,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 MTH_YYYYMM,
 DOL_MTH01,
 DOL_MTH02,
 DOL_MTH03,
 DOL_MTH04,
 DOL_MTH05,
 DOL_MTH06,
 DOL_MTH07,
 DOL_MTH08,
 DOL_MTH09,
 DOL_MTH10,
 DOL_MTH11,
 DOL_MTH12,
 DOL_MTH13,
 DOL_MTH14,
 DOL_MTH15,
 DOL_MTH16,
 DOL_MTH17,
 DOL_MTH18,
 DOL_MTH19,
 DOL_MTH20,
 DOL_MTH21,
 DOL_MTH22,
 DOL_MTH23,
 DOL_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DDD_DOD_SALES_MS_src.CLIENT_NUM,
        EXT_DDD_DOD_SALES_MS_src.REPORT_NUM,
        EXT_DDD_DOD_SALES_MS_src.filler_01,
        EXT_DDD_DOD_SALES_MS_src.OUTLET_CODE,
        EXT_DDD_DOD_SALES_MS_src.SUBCATEGORY_CODE,
        EXT_DDD_DOD_SALES_MS_src.CATEGORY_CODE,
        EXT_DDD_DOD_SALES_MS_src.IMS_PRODUCT_CODE,
        EXT_DDD_DOD_SALES_MS_src.MTH_YYYYMM,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH01,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH02,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH03,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH04,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH05,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH06,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH07,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH08,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH09,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH10,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH11,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH12,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH13,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH14,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH15,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH16,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH17,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH18,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH19,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH20,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH21,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH22,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH23,
        EXT_DDD_DOD_SALES_MS_src.DOL_MTH24,
        EXT_DDD_DOD_SALES_MS_src.OUTLET_NAME,
        EXT_DDD_DOD_SALES_MS_src.OUTLET_ADDRESS,
        EXT_DDD_DOD_SALES_MS_src.OUTLET_CITY,
        EXT_DDD_DOD_SALES_MS_src.OUTLET_STATE,
        EXT_DDD_DOD_SALES_MS_src.OUTLET_ZIP,
        EXT_DDD_DOD_SALES_MS_src.batch_id,
        EXT_DDD_DOD_SALES_MS_src.row_id,
        EXT_DDD_DOD_SALES_MS_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOD_SALES_MS_src
 ORDER BY EXT_DDD_DOD_SALES_MS_src.batch_id
SEGMENTED BY hash(EXT_DDD_DOD_SALES_MS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DDD_DOD_SALES_PD_src_super_b0 /*+basename(EXT_DDD_DOD_SALES_PD_src_super)*/ 
(
 CLIENT_NUM,
 REPORT_NUM,
 filler_01,
 OUTLET_CODE,
 SUBCATEGORY_CODE,
 CATEGORY_CODE,
 IMS_PRODUCT_CODE,
 MTH_YYYYMM,
 DOL_MTH01,
 DOL_MTH02,
 DOL_MTH03,
 DOL_MTH04,
 DOL_MTH05,
 DOL_MTH06,
 DOL_MTH07,
 DOL_MTH08,
 DOL_MTH09,
 DOL_MTH10,
 DOL_MTH11,
 DOL_MTH12,
 DOL_MTH13,
 DOL_MTH14,
 DOL_MTH15,
 DOL_MTH16,
 DOL_MTH17,
 DOL_MTH18,
 DOL_MTH19,
 DOL_MTH20,
 DOL_MTH21,
 DOL_MTH22,
 DOL_MTH23,
 DOL_MTH24,
 OUTLET_NAME,
 OUTLET_ADDRESS,
 OUTLET_CITY,
 OUTLET_STATE,
 OUTLET_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DDD_DOD_SALES_PD_src.CLIENT_NUM,
        EXT_DDD_DOD_SALES_PD_src.REPORT_NUM,
        EXT_DDD_DOD_SALES_PD_src.filler_01,
        EXT_DDD_DOD_SALES_PD_src.OUTLET_CODE,
        EXT_DDD_DOD_SALES_PD_src.SUBCATEGORY_CODE,
        EXT_DDD_DOD_SALES_PD_src.CATEGORY_CODE,
        EXT_DDD_DOD_SALES_PD_src.IMS_PRODUCT_CODE,
        EXT_DDD_DOD_SALES_PD_src.MTH_YYYYMM,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH01,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH02,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH03,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH04,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH05,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH06,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH07,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH08,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH09,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH10,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH11,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH12,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH13,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH14,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH15,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH16,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH17,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH18,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH19,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH20,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH21,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH22,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH23,
        EXT_DDD_DOD_SALES_PD_src.DOL_MTH24,
        EXT_DDD_DOD_SALES_PD_src.OUTLET_NAME,
        EXT_DDD_DOD_SALES_PD_src.OUTLET_ADDRESS,
        EXT_DDD_DOD_SALES_PD_src.OUTLET_CITY,
        EXT_DDD_DOD_SALES_PD_src.OUTLET_STATE,
        EXT_DDD_DOD_SALES_PD_src.OUTLET_ZIP,
        EXT_DDD_DOD_SALES_PD_src.batch_id,
        EXT_DDD_DOD_SALES_PD_src.row_id,
        EXT_DDD_DOD_SALES_PD_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOD_SALES_PD_src
 ORDER BY EXT_DDD_DOD_SALES_PD_src.batch_id
SEGMENTED BY hash(EXT_DDD_DOD_SALES_PD_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_I3_TYSABRI_RX_src_super_b0 /*+basename(EXT_I3_TYSABRI_RX_src_super)*/ 
(
 FULL_NAME,
 SPECIALTY,
 MD_ADDR1,
 MD_ADDR2,
 MD_CITY,
 MD_STATE,
 MD_ZIP,
 PRESCRIBER_NPI,
 DNC_FLAG,
 RX_12,
 RX_11,
 RX_10,
 RX_09,
 RX_08,
 RX_07,
 RX_06,
 RX_05,
 RX_04,
 RX_03,
 RX_02,
 RX_01,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_I3_TYSABRI_RX_src.FULL_NAME,
        EXT_I3_TYSABRI_RX_src.SPECIALTY,
        EXT_I3_TYSABRI_RX_src.MD_ADDR1,
        EXT_I3_TYSABRI_RX_src.MD_ADDR2,
        EXT_I3_TYSABRI_RX_src.MD_CITY,
        EXT_I3_TYSABRI_RX_src.MD_STATE,
        EXT_I3_TYSABRI_RX_src.MD_ZIP,
        EXT_I3_TYSABRI_RX_src.PRESCRIBER_NPI,
        EXT_I3_TYSABRI_RX_src.DNC_FLAG,
        EXT_I3_TYSABRI_RX_src.RX_12,
        EXT_I3_TYSABRI_RX_src.RX_11,
        EXT_I3_TYSABRI_RX_src.RX_10,
        EXT_I3_TYSABRI_RX_src.RX_09,
        EXT_I3_TYSABRI_RX_src.RX_08,
        EXT_I3_TYSABRI_RX_src.RX_07,
        EXT_I3_TYSABRI_RX_src.RX_06,
        EXT_I3_TYSABRI_RX_src.RX_05,
        EXT_I3_TYSABRI_RX_src.RX_04,
        EXT_I3_TYSABRI_RX_src.RX_03,
        EXT_I3_TYSABRI_RX_src.RX_02,
        EXT_I3_TYSABRI_RX_src.RX_01,
        EXT_I3_TYSABRI_RX_src.batch_id,
        EXT_I3_TYSABRI_RX_src.row_id,
        EXT_I3_TYSABRI_RX_src.update_ts
 FROM teva_ingestion.EXT_I3_TYSABRI_RX_src
 ORDER BY EXT_I3_TYSABRI_RX_src.batch_id
SEGMENTED BY hash(EXT_I3_TYSABRI_RX_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_DRM45_M_src_super_b0 /*+basename(EXT_IMS_DRM45_M_src_super)*/ 
(
 FILE_CODE,
 PRODUCT_GROUP,
 PRODUCT_NAME,
 MFG_NUM,
 STATUS,
 CMF,
 PRODUCT_DESCRIPTION,
 MFG_NAME,
 USC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_DRM45_M_src.FILE_CODE,
        EXT_IMS_DRM45_M_src.PRODUCT_GROUP,
        EXT_IMS_DRM45_M_src.PRODUCT_NAME,
        EXT_IMS_DRM45_M_src.MFG_NUM,
        EXT_IMS_DRM45_M_src.STATUS,
        EXT_IMS_DRM45_M_src.CMF,
        EXT_IMS_DRM45_M_src.PRODUCT_DESCRIPTION,
        EXT_IMS_DRM45_M_src.MFG_NAME,
        EXT_IMS_DRM45_M_src.USC,
        EXT_IMS_DRM45_M_src.batch_id,
        EXT_IMS_DRM45_M_src.row_id,
        EXT_IMS_DRM45_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_DRM45_M_src
 ORDER BY EXT_IMS_DRM45_M_src.batch_id
SEGMENTED BY hash(EXT_IMS_DRM45_M_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_DRM45_W_src_super_b0 /*+basename(EXT_IMS_DRM45_W_src_super)*/ 
(
 FILE_CODE,
 PRODUCT_GROUP,
 PRODUCT_NAME,
 MFG_NUM,
 STATUS,
 CMF,
 PRODUCT_DESCRIPTION,
 MFG_NAME,
 USC,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_DRM45_W_src.FILE_CODE,
        EXT_IMS_DRM45_W_src.PRODUCT_GROUP,
        EXT_IMS_DRM45_W_src.PRODUCT_NAME,
        EXT_IMS_DRM45_W_src.MFG_NUM,
        EXT_IMS_DRM45_W_src.STATUS,
        EXT_IMS_DRM45_W_src.CMF,
        EXT_IMS_DRM45_W_src.PRODUCT_DESCRIPTION,
        EXT_IMS_DRM45_W_src.MFG_NAME,
        EXT_IMS_DRM45_W_src.USC,
        EXT_IMS_DRM45_W_src.batch_id,
        EXT_IMS_DRM45_W_src.row_id,
        EXT_IMS_DRM45_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_DRM45_W_src
 ORDER BY EXT_IMS_DRM45_W_src.batch_id
SEGMENTED BY hash(EXT_IMS_DRM45_W_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_CNT_M_src_super_b0 /*+basename(EXT_IMS_MHJ_CNT_M_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_CNT_M_src.ims_client_num,
        EXT_IMS_MHJ_CNT_M_src.ims_report_num,
        EXT_IMS_MHJ_CNT_M_src.zip_other,
        EXT_IMS_MHJ_CNT_M_src.ims_id,
        EXT_IMS_MHJ_CNT_M_src.specialty,
        EXT_IMS_MHJ_CNT_M_src.plan_id,
        EXT_IMS_MHJ_CNT_M_src.sales_category,
        EXT_IMS_MHJ_CNT_M_src.rx_type,
        EXT_IMS_MHJ_CNT_M_src.ims_product_group_num,
        EXT_IMS_MHJ_CNT_M_src.filler_01,
        EXT_IMS_MHJ_CNT_M_src.me_num,
        EXT_IMS_MHJ_CNT_M_src.last_name,
        EXT_IMS_MHJ_CNT_M_src.first_name,
        EXT_IMS_MHJ_CNT_M_src.middle_name,
        EXT_IMS_MHJ_CNT_M_src.address,
        EXT_IMS_MHJ_CNT_M_src.city,
        EXT_IMS_MHJ_CNT_M_src.state,
        EXT_IMS_MHJ_CNT_M_src.zip,
        EXT_IMS_MHJ_CNT_M_src.supplemental_data,
        EXT_IMS_MHJ_CNT_M_src.plan_name,
        EXT_IMS_MHJ_CNT_M_src.data_date,
        EXT_IMS_MHJ_CNT_M_src.bucket_count,
        EXT_IMS_MHJ_CNT_M_src.nrx_001,
        EXT_IMS_MHJ_CNT_M_src.nrx_002,
        EXT_IMS_MHJ_CNT_M_src.nrx_003,
        EXT_IMS_MHJ_CNT_M_src.nrx_004,
        EXT_IMS_MHJ_CNT_M_src.nrx_005,
        EXT_IMS_MHJ_CNT_M_src.nrx_006,
        EXT_IMS_MHJ_CNT_M_src.nrx_007,
        EXT_IMS_MHJ_CNT_M_src.nrx_008,
        EXT_IMS_MHJ_CNT_M_src.nrx_009,
        EXT_IMS_MHJ_CNT_M_src.nrx_010,
        EXT_IMS_MHJ_CNT_M_src.nrx_011,
        EXT_IMS_MHJ_CNT_M_src.nrx_012,
        EXT_IMS_MHJ_CNT_M_src.nrx_013,
        EXT_IMS_MHJ_CNT_M_src.nrx_014,
        EXT_IMS_MHJ_CNT_M_src.nrx_015,
        EXT_IMS_MHJ_CNT_M_src.nrx_016,
        EXT_IMS_MHJ_CNT_M_src.nrx_017,
        EXT_IMS_MHJ_CNT_M_src.nrx_018,
        EXT_IMS_MHJ_CNT_M_src.nrx_019,
        EXT_IMS_MHJ_CNT_M_src.nrx_020,
        EXT_IMS_MHJ_CNT_M_src.nrx_021,
        EXT_IMS_MHJ_CNT_M_src.nrx_022,
        EXT_IMS_MHJ_CNT_M_src.nrx_023,
        EXT_IMS_MHJ_CNT_M_src.nrx_024,
        EXT_IMS_MHJ_CNT_M_src.trx_001,
        EXT_IMS_MHJ_CNT_M_src.trx_002,
        EXT_IMS_MHJ_CNT_M_src.trx_003,
        EXT_IMS_MHJ_CNT_M_src.trx_004,
        EXT_IMS_MHJ_CNT_M_src.trx_005,
        EXT_IMS_MHJ_CNT_M_src.trx_006,
        EXT_IMS_MHJ_CNT_M_src.trx_007,
        EXT_IMS_MHJ_CNT_M_src.trx_008,
        EXT_IMS_MHJ_CNT_M_src.trx_009,
        EXT_IMS_MHJ_CNT_M_src.trx_010,
        EXT_IMS_MHJ_CNT_M_src.trx_011,
        EXT_IMS_MHJ_CNT_M_src.trx_012,
        EXT_IMS_MHJ_CNT_M_src.trx_013,
        EXT_IMS_MHJ_CNT_M_src.trx_014,
        EXT_IMS_MHJ_CNT_M_src.trx_015,
        EXT_IMS_MHJ_CNT_M_src.trx_016,
        EXT_IMS_MHJ_CNT_M_src.trx_017,
        EXT_IMS_MHJ_CNT_M_src.trx_018,
        EXT_IMS_MHJ_CNT_M_src.trx_019,
        EXT_IMS_MHJ_CNT_M_src.trx_020,
        EXT_IMS_MHJ_CNT_M_src.trx_021,
        EXT_IMS_MHJ_CNT_M_src.trx_022,
        EXT_IMS_MHJ_CNT_M_src.trx_023,
        EXT_IMS_MHJ_CNT_M_src.trx_024,
        EXT_IMS_MHJ_CNT_M_src.batch_id,
        EXT_IMS_MHJ_CNT_M_src.row_id,
        EXT_IMS_MHJ_CNT_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_M_src
 ORDER BY EXT_IMS_MHJ_CNT_M_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_CNT_M_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_CNT_W_src_super_b0 /*+basename(EXT_IMS_MHJ_CNT_W_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 nrx_025,
 nrx_026,
 nrx_027,
 nrx_028,
 nrx_029,
 nrx_030,
 nrx_031,
 nrx_032,
 nrx_033,
 nrx_034,
 nrx_035,
 nrx_036,
 nrx_037,
 nrx_038,
 nrx_039,
 nrx_040,
 nrx_041,
 nrx_042,
 nrx_043,
 nrx_044,
 nrx_045,
 nrx_046,
 nrx_047,
 nrx_048,
 nrx_049,
 nrx_050,
 nrx_051,
 nrx_052,
 nrx_053,
 nrx_054,
 nrx_055,
 nrx_056,
 nrx_057,
 nrx_058,
 nrx_059,
 nrx_060,
 nrx_061,
 nrx_062,
 nrx_063,
 nrx_064,
 nrx_065,
 nrx_066,
 nrx_067,
 nrx_068,
 nrx_069,
 nrx_070,
 nrx_071,
 nrx_072,
 nrx_073,
 nrx_074,
 nrx_075,
 nrx_076,
 nrx_077,
 nrx_078,
 nrx_079,
 nrx_080,
 nrx_081,
 nrx_082,
 nrx_083,
 nrx_084,
 nrx_085,
 nrx_086,
 nrx_087,
 nrx_088,
 nrx_089,
 nrx_090,
 nrx_091,
 nrx_092,
 nrx_093,
 nrx_094,
 nrx_095,
 nrx_096,
 nrx_097,
 nrx_098,
 nrx_099,
 nrx_100,
 nrx_101,
 nrx_102,
 nrx_103,
 nrx_104,
 nrx_105,
 nrx_106,
 nrx_107,
 nrx_108,
 nrx_109,
 nrx_110,
 nrx_111,
 nrx_112,
 nrx_113,
 nrx_114,
 nrx_115,
 nrx_116,
 nrx_117,
 nrx_118,
 nrx_119,
 nrx_120,
 nrx_121,
 nrx_122,
 nrx_123,
 nrx_124,
 nrx_125,
 nrx_126,
 nrx_127,
 nrx_128,
 nrx_129,
 nrx_130,
 nrx_131,
 nrx_132,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 trx_025,
 trx_026,
 trx_027,
 trx_028,
 trx_029,
 trx_030,
 trx_031,
 trx_032,
 trx_033,
 trx_034,
 trx_035,
 trx_036,
 trx_037,
 trx_038,
 trx_039,
 trx_040,
 trx_041,
 trx_042,
 trx_043,
 trx_044,
 trx_045,
 trx_046,
 trx_047,
 trx_048,
 trx_049,
 trx_050,
 trx_051,
 trx_052,
 trx_053,
 trx_054,
 trx_055,
 trx_056,
 trx_057,
 trx_058,
 trx_059,
 trx_060,
 trx_061,
 trx_062,
 trx_063,
 trx_064,
 trx_065,
 trx_066,
 trx_067,
 trx_068,
 trx_069,
 trx_070,
 trx_071,
 trx_072,
 trx_073,
 trx_074,
 trx_075,
 trx_076,
 trx_077,
 trx_078,
 trx_079,
 trx_080,
 trx_081,
 trx_082,
 trx_083,
 trx_084,
 trx_085,
 trx_086,
 trx_087,
 trx_088,
 trx_089,
 trx_090,
 trx_091,
 trx_092,
 trx_093,
 trx_094,
 trx_095,
 trx_096,
 trx_097,
 trx_098,
 trx_099,
 trx_100,
 trx_101,
 trx_102,
 trx_103,
 trx_104,
 trx_105,
 trx_106,
 trx_107,
 trx_108,
 trx_109,
 trx_110,
 trx_111,
 trx_112,
 trx_113,
 trx_114,
 trx_115,
 trx_116,
 trx_117,
 trx_118,
 trx_119,
 trx_120,
 trx_121,
 trx_122,
 trx_123,
 trx_124,
 trx_125,
 trx_126,
 trx_127,
 trx_128,
 trx_129,
 trx_130,
 trx_131,
 trx_132,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_CNT_W_src.ims_client_num,
        EXT_IMS_MHJ_CNT_W_src.ims_report_num,
        EXT_IMS_MHJ_CNT_W_src.zip_other,
        EXT_IMS_MHJ_CNT_W_src.ims_id,
        EXT_IMS_MHJ_CNT_W_src.specialty,
        EXT_IMS_MHJ_CNT_W_src.plan_id,
        EXT_IMS_MHJ_CNT_W_src.sales_category,
        EXT_IMS_MHJ_CNT_W_src.rx_type,
        EXT_IMS_MHJ_CNT_W_src.ims_product_group_num,
        EXT_IMS_MHJ_CNT_W_src.filler_01,
        EXT_IMS_MHJ_CNT_W_src.me_num,
        EXT_IMS_MHJ_CNT_W_src.last_name,
        EXT_IMS_MHJ_CNT_W_src.first_name,
        EXT_IMS_MHJ_CNT_W_src.middle_name,
        EXT_IMS_MHJ_CNT_W_src.address,
        EXT_IMS_MHJ_CNT_W_src.city,
        EXT_IMS_MHJ_CNT_W_src.state,
        EXT_IMS_MHJ_CNT_W_src.zip,
        EXT_IMS_MHJ_CNT_W_src.supplemental_data,
        EXT_IMS_MHJ_CNT_W_src.plan_name,
        EXT_IMS_MHJ_CNT_W_src.data_date,
        EXT_IMS_MHJ_CNT_W_src.bucket_count,
        EXT_IMS_MHJ_CNT_W_src.nrx_001,
        EXT_IMS_MHJ_CNT_W_src.nrx_002,
        EXT_IMS_MHJ_CNT_W_src.nrx_003,
        EXT_IMS_MHJ_CNT_W_src.nrx_004,
        EXT_IMS_MHJ_CNT_W_src.nrx_005,
        EXT_IMS_MHJ_CNT_W_src.nrx_006,
        EXT_IMS_MHJ_CNT_W_src.nrx_007,
        EXT_IMS_MHJ_CNT_W_src.nrx_008,
        EXT_IMS_MHJ_CNT_W_src.nrx_009,
        EXT_IMS_MHJ_CNT_W_src.nrx_010,
        EXT_IMS_MHJ_CNT_W_src.nrx_011,
        EXT_IMS_MHJ_CNT_W_src.nrx_012,
        EXT_IMS_MHJ_CNT_W_src.nrx_013,
        EXT_IMS_MHJ_CNT_W_src.nrx_014,
        EXT_IMS_MHJ_CNT_W_src.nrx_015,
        EXT_IMS_MHJ_CNT_W_src.nrx_016,
        EXT_IMS_MHJ_CNT_W_src.nrx_017,
        EXT_IMS_MHJ_CNT_W_src.nrx_018,
        EXT_IMS_MHJ_CNT_W_src.nrx_019,
        EXT_IMS_MHJ_CNT_W_src.nrx_020,
        EXT_IMS_MHJ_CNT_W_src.nrx_021,
        EXT_IMS_MHJ_CNT_W_src.nrx_022,
        EXT_IMS_MHJ_CNT_W_src.nrx_023,
        EXT_IMS_MHJ_CNT_W_src.nrx_024,
        EXT_IMS_MHJ_CNT_W_src.nrx_025,
        EXT_IMS_MHJ_CNT_W_src.nrx_026,
        EXT_IMS_MHJ_CNT_W_src.nrx_027,
        EXT_IMS_MHJ_CNT_W_src.nrx_028,
        EXT_IMS_MHJ_CNT_W_src.nrx_029,
        EXT_IMS_MHJ_CNT_W_src.nrx_030,
        EXT_IMS_MHJ_CNT_W_src.nrx_031,
        EXT_IMS_MHJ_CNT_W_src.nrx_032,
        EXT_IMS_MHJ_CNT_W_src.nrx_033,
        EXT_IMS_MHJ_CNT_W_src.nrx_034,
        EXT_IMS_MHJ_CNT_W_src.nrx_035,
        EXT_IMS_MHJ_CNT_W_src.nrx_036,
        EXT_IMS_MHJ_CNT_W_src.nrx_037,
        EXT_IMS_MHJ_CNT_W_src.nrx_038,
        EXT_IMS_MHJ_CNT_W_src.nrx_039,
        EXT_IMS_MHJ_CNT_W_src.nrx_040,
        EXT_IMS_MHJ_CNT_W_src.nrx_041,
        EXT_IMS_MHJ_CNT_W_src.nrx_042,
        EXT_IMS_MHJ_CNT_W_src.nrx_043,
        EXT_IMS_MHJ_CNT_W_src.nrx_044,
        EXT_IMS_MHJ_CNT_W_src.nrx_045,
        EXT_IMS_MHJ_CNT_W_src.nrx_046,
        EXT_IMS_MHJ_CNT_W_src.nrx_047,
        EXT_IMS_MHJ_CNT_W_src.nrx_048,
        EXT_IMS_MHJ_CNT_W_src.nrx_049,
        EXT_IMS_MHJ_CNT_W_src.nrx_050,
        EXT_IMS_MHJ_CNT_W_src.nrx_051,
        EXT_IMS_MHJ_CNT_W_src.nrx_052,
        EXT_IMS_MHJ_CNT_W_src.nrx_053,
        EXT_IMS_MHJ_CNT_W_src.nrx_054,
        EXT_IMS_MHJ_CNT_W_src.nrx_055,
        EXT_IMS_MHJ_CNT_W_src.nrx_056,
        EXT_IMS_MHJ_CNT_W_src.nrx_057,
        EXT_IMS_MHJ_CNT_W_src.nrx_058,
        EXT_IMS_MHJ_CNT_W_src.nrx_059,
        EXT_IMS_MHJ_CNT_W_src.nrx_060,
        EXT_IMS_MHJ_CNT_W_src.nrx_061,
        EXT_IMS_MHJ_CNT_W_src.nrx_062,
        EXT_IMS_MHJ_CNT_W_src.nrx_063,
        EXT_IMS_MHJ_CNT_W_src.nrx_064,
        EXT_IMS_MHJ_CNT_W_src.nrx_065,
        EXT_IMS_MHJ_CNT_W_src.nrx_066,
        EXT_IMS_MHJ_CNT_W_src.nrx_067,
        EXT_IMS_MHJ_CNT_W_src.nrx_068,
        EXT_IMS_MHJ_CNT_W_src.nrx_069,
        EXT_IMS_MHJ_CNT_W_src.nrx_070,
        EXT_IMS_MHJ_CNT_W_src.nrx_071,
        EXT_IMS_MHJ_CNT_W_src.nrx_072,
        EXT_IMS_MHJ_CNT_W_src.nrx_073,
        EXT_IMS_MHJ_CNT_W_src.nrx_074,
        EXT_IMS_MHJ_CNT_W_src.nrx_075,
        EXT_IMS_MHJ_CNT_W_src.nrx_076,
        EXT_IMS_MHJ_CNT_W_src.nrx_077,
        EXT_IMS_MHJ_CNT_W_src.nrx_078,
        EXT_IMS_MHJ_CNT_W_src.nrx_079,
        EXT_IMS_MHJ_CNT_W_src.nrx_080,
        EXT_IMS_MHJ_CNT_W_src.nrx_081,
        EXT_IMS_MHJ_CNT_W_src.nrx_082,
        EXT_IMS_MHJ_CNT_W_src.nrx_083,
        EXT_IMS_MHJ_CNT_W_src.nrx_084,
        EXT_IMS_MHJ_CNT_W_src.nrx_085,
        EXT_IMS_MHJ_CNT_W_src.nrx_086,
        EXT_IMS_MHJ_CNT_W_src.nrx_087,
        EXT_IMS_MHJ_CNT_W_src.nrx_088,
        EXT_IMS_MHJ_CNT_W_src.nrx_089,
        EXT_IMS_MHJ_CNT_W_src.nrx_090,
        EXT_IMS_MHJ_CNT_W_src.nrx_091,
        EXT_IMS_MHJ_CNT_W_src.nrx_092,
        EXT_IMS_MHJ_CNT_W_src.nrx_093,
        EXT_IMS_MHJ_CNT_W_src.nrx_094,
        EXT_IMS_MHJ_CNT_W_src.nrx_095,
        EXT_IMS_MHJ_CNT_W_src.nrx_096,
        EXT_IMS_MHJ_CNT_W_src.nrx_097,
        EXT_IMS_MHJ_CNT_W_src.nrx_098,
        EXT_IMS_MHJ_CNT_W_src.nrx_099,
        EXT_IMS_MHJ_CNT_W_src.nrx_100,
        EXT_IMS_MHJ_CNT_W_src.nrx_101,
        EXT_IMS_MHJ_CNT_W_src.nrx_102,
        EXT_IMS_MHJ_CNT_W_src.nrx_103,
        EXT_IMS_MHJ_CNT_W_src.nrx_104,
        EXT_IMS_MHJ_CNT_W_src.nrx_105,
        EXT_IMS_MHJ_CNT_W_src.nrx_106,
        EXT_IMS_MHJ_CNT_W_src.nrx_107,
        EXT_IMS_MHJ_CNT_W_src.nrx_108,
        EXT_IMS_MHJ_CNT_W_src.nrx_109,
        EXT_IMS_MHJ_CNT_W_src.nrx_110,
        EXT_IMS_MHJ_CNT_W_src.nrx_111,
        EXT_IMS_MHJ_CNT_W_src.nrx_112,
        EXT_IMS_MHJ_CNT_W_src.nrx_113,
        EXT_IMS_MHJ_CNT_W_src.nrx_114,
        EXT_IMS_MHJ_CNT_W_src.nrx_115,
        EXT_IMS_MHJ_CNT_W_src.nrx_116,
        EXT_IMS_MHJ_CNT_W_src.nrx_117,
        EXT_IMS_MHJ_CNT_W_src.nrx_118,
        EXT_IMS_MHJ_CNT_W_src.nrx_119,
        EXT_IMS_MHJ_CNT_W_src.nrx_120,
        EXT_IMS_MHJ_CNT_W_src.nrx_121,
        EXT_IMS_MHJ_CNT_W_src.nrx_122,
        EXT_IMS_MHJ_CNT_W_src.nrx_123,
        EXT_IMS_MHJ_CNT_W_src.nrx_124,
        EXT_IMS_MHJ_CNT_W_src.nrx_125,
        EXT_IMS_MHJ_CNT_W_src.nrx_126,
        EXT_IMS_MHJ_CNT_W_src.nrx_127,
        EXT_IMS_MHJ_CNT_W_src.nrx_128,
        EXT_IMS_MHJ_CNT_W_src.nrx_129,
        EXT_IMS_MHJ_CNT_W_src.nrx_130,
        EXT_IMS_MHJ_CNT_W_src.nrx_131,
        EXT_IMS_MHJ_CNT_W_src.nrx_132,
        EXT_IMS_MHJ_CNT_W_src.trx_001,
        EXT_IMS_MHJ_CNT_W_src.trx_002,
        EXT_IMS_MHJ_CNT_W_src.trx_003,
        EXT_IMS_MHJ_CNT_W_src.trx_004,
        EXT_IMS_MHJ_CNT_W_src.trx_005,
        EXT_IMS_MHJ_CNT_W_src.trx_006,
        EXT_IMS_MHJ_CNT_W_src.trx_007,
        EXT_IMS_MHJ_CNT_W_src.trx_008,
        EXT_IMS_MHJ_CNT_W_src.trx_009,
        EXT_IMS_MHJ_CNT_W_src.trx_010,
        EXT_IMS_MHJ_CNT_W_src.trx_011,
        EXT_IMS_MHJ_CNT_W_src.trx_012,
        EXT_IMS_MHJ_CNT_W_src.trx_013,
        EXT_IMS_MHJ_CNT_W_src.trx_014,
        EXT_IMS_MHJ_CNT_W_src.trx_015,
        EXT_IMS_MHJ_CNT_W_src.trx_016,
        EXT_IMS_MHJ_CNT_W_src.trx_017,
        EXT_IMS_MHJ_CNT_W_src.trx_018,
        EXT_IMS_MHJ_CNT_W_src.trx_019,
        EXT_IMS_MHJ_CNT_W_src.trx_020,
        EXT_IMS_MHJ_CNT_W_src.trx_021,
        EXT_IMS_MHJ_CNT_W_src.trx_022,
        EXT_IMS_MHJ_CNT_W_src.trx_023,
        EXT_IMS_MHJ_CNT_W_src.trx_024,
        EXT_IMS_MHJ_CNT_W_src.trx_025,
        EXT_IMS_MHJ_CNT_W_src.trx_026,
        EXT_IMS_MHJ_CNT_W_src.trx_027,
        EXT_IMS_MHJ_CNT_W_src.trx_028,
        EXT_IMS_MHJ_CNT_W_src.trx_029,
        EXT_IMS_MHJ_CNT_W_src.trx_030,
        EXT_IMS_MHJ_CNT_W_src.trx_031,
        EXT_IMS_MHJ_CNT_W_src.trx_032,
        EXT_IMS_MHJ_CNT_W_src.trx_033,
        EXT_IMS_MHJ_CNT_W_src.trx_034,
        EXT_IMS_MHJ_CNT_W_src.trx_035,
        EXT_IMS_MHJ_CNT_W_src.trx_036,
        EXT_IMS_MHJ_CNT_W_src.trx_037,
        EXT_IMS_MHJ_CNT_W_src.trx_038,
        EXT_IMS_MHJ_CNT_W_src.trx_039,
        EXT_IMS_MHJ_CNT_W_src.trx_040,
        EXT_IMS_MHJ_CNT_W_src.trx_041,
        EXT_IMS_MHJ_CNT_W_src.trx_042,
        EXT_IMS_MHJ_CNT_W_src.trx_043,
        EXT_IMS_MHJ_CNT_W_src.trx_044,
        EXT_IMS_MHJ_CNT_W_src.trx_045,
        EXT_IMS_MHJ_CNT_W_src.trx_046,
        EXT_IMS_MHJ_CNT_W_src.trx_047,
        EXT_IMS_MHJ_CNT_W_src.trx_048,
        EXT_IMS_MHJ_CNT_W_src.trx_049,
        EXT_IMS_MHJ_CNT_W_src.trx_050,
        EXT_IMS_MHJ_CNT_W_src.trx_051,
        EXT_IMS_MHJ_CNT_W_src.trx_052,
        EXT_IMS_MHJ_CNT_W_src.trx_053,
        EXT_IMS_MHJ_CNT_W_src.trx_054,
        EXT_IMS_MHJ_CNT_W_src.trx_055,
        EXT_IMS_MHJ_CNT_W_src.trx_056,
        EXT_IMS_MHJ_CNT_W_src.trx_057,
        EXT_IMS_MHJ_CNT_W_src.trx_058,
        EXT_IMS_MHJ_CNT_W_src.trx_059,
        EXT_IMS_MHJ_CNT_W_src.trx_060,
        EXT_IMS_MHJ_CNT_W_src.trx_061,
        EXT_IMS_MHJ_CNT_W_src.trx_062,
        EXT_IMS_MHJ_CNT_W_src.trx_063,
        EXT_IMS_MHJ_CNT_W_src.trx_064,
        EXT_IMS_MHJ_CNT_W_src.trx_065,
        EXT_IMS_MHJ_CNT_W_src.trx_066,
        EXT_IMS_MHJ_CNT_W_src.trx_067,
        EXT_IMS_MHJ_CNT_W_src.trx_068,
        EXT_IMS_MHJ_CNT_W_src.trx_069,
        EXT_IMS_MHJ_CNT_W_src.trx_070,
        EXT_IMS_MHJ_CNT_W_src.trx_071,
        EXT_IMS_MHJ_CNT_W_src.trx_072,
        EXT_IMS_MHJ_CNT_W_src.trx_073,
        EXT_IMS_MHJ_CNT_W_src.trx_074,
        EXT_IMS_MHJ_CNT_W_src.trx_075,
        EXT_IMS_MHJ_CNT_W_src.trx_076,
        EXT_IMS_MHJ_CNT_W_src.trx_077,
        EXT_IMS_MHJ_CNT_W_src.trx_078,
        EXT_IMS_MHJ_CNT_W_src.trx_079,
        EXT_IMS_MHJ_CNT_W_src.trx_080,
        EXT_IMS_MHJ_CNT_W_src.trx_081,
        EXT_IMS_MHJ_CNT_W_src.trx_082,
        EXT_IMS_MHJ_CNT_W_src.trx_083,
        EXT_IMS_MHJ_CNT_W_src.trx_084,
        EXT_IMS_MHJ_CNT_W_src.trx_085,
        EXT_IMS_MHJ_CNT_W_src.trx_086,
        EXT_IMS_MHJ_CNT_W_src.trx_087,
        EXT_IMS_MHJ_CNT_W_src.trx_088,
        EXT_IMS_MHJ_CNT_W_src.trx_089,
        EXT_IMS_MHJ_CNT_W_src.trx_090,
        EXT_IMS_MHJ_CNT_W_src.trx_091,
        EXT_IMS_MHJ_CNT_W_src.trx_092,
        EXT_IMS_MHJ_CNT_W_src.trx_093,
        EXT_IMS_MHJ_CNT_W_src.trx_094,
        EXT_IMS_MHJ_CNT_W_src.trx_095,
        EXT_IMS_MHJ_CNT_W_src.trx_096,
        EXT_IMS_MHJ_CNT_W_src.trx_097,
        EXT_IMS_MHJ_CNT_W_src.trx_098,
        EXT_IMS_MHJ_CNT_W_src.trx_099,
        EXT_IMS_MHJ_CNT_W_src.trx_100,
        EXT_IMS_MHJ_CNT_W_src.trx_101,
        EXT_IMS_MHJ_CNT_W_src.trx_102,
        EXT_IMS_MHJ_CNT_W_src.trx_103,
        EXT_IMS_MHJ_CNT_W_src.trx_104,
        EXT_IMS_MHJ_CNT_W_src.trx_105,
        EXT_IMS_MHJ_CNT_W_src.trx_106,
        EXT_IMS_MHJ_CNT_W_src.trx_107,
        EXT_IMS_MHJ_CNT_W_src.trx_108,
        EXT_IMS_MHJ_CNT_W_src.trx_109,
        EXT_IMS_MHJ_CNT_W_src.trx_110,
        EXT_IMS_MHJ_CNT_W_src.trx_111,
        EXT_IMS_MHJ_CNT_W_src.trx_112,
        EXT_IMS_MHJ_CNT_W_src.trx_113,
        EXT_IMS_MHJ_CNT_W_src.trx_114,
        EXT_IMS_MHJ_CNT_W_src.trx_115,
        EXT_IMS_MHJ_CNT_W_src.trx_116,
        EXT_IMS_MHJ_CNT_W_src.trx_117,
        EXT_IMS_MHJ_CNT_W_src.trx_118,
        EXT_IMS_MHJ_CNT_W_src.trx_119,
        EXT_IMS_MHJ_CNT_W_src.trx_120,
        EXT_IMS_MHJ_CNT_W_src.trx_121,
        EXT_IMS_MHJ_CNT_W_src.trx_122,
        EXT_IMS_MHJ_CNT_W_src.trx_123,
        EXT_IMS_MHJ_CNT_W_src.trx_124,
        EXT_IMS_MHJ_CNT_W_src.trx_125,
        EXT_IMS_MHJ_CNT_W_src.trx_126,
        EXT_IMS_MHJ_CNT_W_src.trx_127,
        EXT_IMS_MHJ_CNT_W_src.trx_128,
        EXT_IMS_MHJ_CNT_W_src.trx_129,
        EXT_IMS_MHJ_CNT_W_src.trx_130,
        EXT_IMS_MHJ_CNT_W_src.trx_131,
        EXT_IMS_MHJ_CNT_W_src.trx_132,
        EXT_IMS_MHJ_CNT_W_src.batch_id,
        EXT_IMS_MHJ_CNT_W_src.row_id,
        EXT_IMS_MHJ_CNT_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_W_src
 ORDER BY EXT_IMS_MHJ_CNT_W_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_CNT_W_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_CONTROL_M_src_super_b0 /*+basename(EXT_IMS_MHJ_CONTROL_M_src_super)*/ 
(
 IMS_CLIENT_NUM,
 IMS_REPORT_NUM,
 SRA,
 SALES_CATEGORY,
 IMS_PRODUCT_GROUP_NUM,
 NRX001,
 NRX002,
 NRX003,
 NRX004,
 NRX005,
 NRX006,
 NRX007,
 NRX008,
 NRX009,
 NRX010,
 NRX011,
 NRX012,
 NRX013,
 NRX014,
 NRX015,
 NRX016,
 NRX017,
 NRX018,
 NRX019,
 NRX020,
 NRX021,
 NRX022,
 NRX023,
 NRX024,
 TRX001,
 TRX002,
 TRX003,
 TRX004,
 TRX005,
 TRX006,
 TRX007,
 TRX008,
 TRX009,
 TRX010,
 TRX011,
 TRX012,
 TRX013,
 TRX014,
 TRX015,
 TRX016,
 TRX017,
 TRX018,
 TRX019,
 TRX020,
 TRX021,
 TRX022,
 TRX023,
 TRX024,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_CONTROL_M_src.IMS_CLIENT_NUM,
        EXT_IMS_MHJ_CONTROL_M_src.IMS_REPORT_NUM,
        EXT_IMS_MHJ_CONTROL_M_src.SRA,
        EXT_IMS_MHJ_CONTROL_M_src.SALES_CATEGORY,
        EXT_IMS_MHJ_CONTROL_M_src.IMS_PRODUCT_GROUP_NUM,
        EXT_IMS_MHJ_CONTROL_M_src.NRX001,
        EXT_IMS_MHJ_CONTROL_M_src.NRX002,
        EXT_IMS_MHJ_CONTROL_M_src.NRX003,
        EXT_IMS_MHJ_CONTROL_M_src.NRX004,
        EXT_IMS_MHJ_CONTROL_M_src.NRX005,
        EXT_IMS_MHJ_CONTROL_M_src.NRX006,
        EXT_IMS_MHJ_CONTROL_M_src.NRX007,
        EXT_IMS_MHJ_CONTROL_M_src.NRX008,
        EXT_IMS_MHJ_CONTROL_M_src.NRX009,
        EXT_IMS_MHJ_CONTROL_M_src.NRX010,
        EXT_IMS_MHJ_CONTROL_M_src.NRX011,
        EXT_IMS_MHJ_CONTROL_M_src.NRX012,
        EXT_IMS_MHJ_CONTROL_M_src.NRX013,
        EXT_IMS_MHJ_CONTROL_M_src.NRX014,
        EXT_IMS_MHJ_CONTROL_M_src.NRX015,
        EXT_IMS_MHJ_CONTROL_M_src.NRX016,
        EXT_IMS_MHJ_CONTROL_M_src.NRX017,
        EXT_IMS_MHJ_CONTROL_M_src.NRX018,
        EXT_IMS_MHJ_CONTROL_M_src.NRX019,
        EXT_IMS_MHJ_CONTROL_M_src.NRX020,
        EXT_IMS_MHJ_CONTROL_M_src.NRX021,
        EXT_IMS_MHJ_CONTROL_M_src.NRX022,
        EXT_IMS_MHJ_CONTROL_M_src.NRX023,
        EXT_IMS_MHJ_CONTROL_M_src.NRX024,
        EXT_IMS_MHJ_CONTROL_M_src.TRX001,
        EXT_IMS_MHJ_CONTROL_M_src.TRX002,
        EXT_IMS_MHJ_CONTROL_M_src.TRX003,
        EXT_IMS_MHJ_CONTROL_M_src.TRX004,
        EXT_IMS_MHJ_CONTROL_M_src.TRX005,
        EXT_IMS_MHJ_CONTROL_M_src.TRX006,
        EXT_IMS_MHJ_CONTROL_M_src.TRX007,
        EXT_IMS_MHJ_CONTROL_M_src.TRX008,
        EXT_IMS_MHJ_CONTROL_M_src.TRX009,
        EXT_IMS_MHJ_CONTROL_M_src.TRX010,
        EXT_IMS_MHJ_CONTROL_M_src.TRX011,
        EXT_IMS_MHJ_CONTROL_M_src.TRX012,
        EXT_IMS_MHJ_CONTROL_M_src.TRX013,
        EXT_IMS_MHJ_CONTROL_M_src.TRX014,
        EXT_IMS_MHJ_CONTROL_M_src.TRX015,
        EXT_IMS_MHJ_CONTROL_M_src.TRX016,
        EXT_IMS_MHJ_CONTROL_M_src.TRX017,
        EXT_IMS_MHJ_CONTROL_M_src.TRX018,
        EXT_IMS_MHJ_CONTROL_M_src.TRX019,
        EXT_IMS_MHJ_CONTROL_M_src.TRX020,
        EXT_IMS_MHJ_CONTROL_M_src.TRX021,
        EXT_IMS_MHJ_CONTROL_M_src.TRX022,
        EXT_IMS_MHJ_CONTROL_M_src.TRX023,
        EXT_IMS_MHJ_CONTROL_M_src.TRX024,
        EXT_IMS_MHJ_CONTROL_M_src.batch_id,
        EXT_IMS_MHJ_CONTROL_M_src.row_id,
        EXT_IMS_MHJ_CONTROL_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CONTROL_M_src
 ORDER BY EXT_IMS_MHJ_CONTROL_M_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_CONTROL_M_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_CONTROL_W_src_super_b0 /*+basename(EXT_IMS_MHJ_CONTROL_W_src_super)*/ 
(
 IMS_CLIENT_NUM,
 IMS_REPORT_NUM,
 SRA,
 SALES_CATEGORY,
 IMS_PRODUCT_GROUP_NUM,
 NRX001,
 NRX002,
 NRX003,
 NRX004,
 NRX005,
 NRX006,
 NRX007,
 NRX008,
 NRX009,
 NRX010,
 NRX011,
 NRX012,
 NRX013,
 NRX014,
 NRX015,
 NRX016,
 NRX017,
 NRX018,
 NRX019,
 NRX020,
 NRX021,
 NRX022,
 NRX023,
 NRX024,
 NRX025,
 NRX026,
 NRX027,
 NRX028,
 NRX029,
 NRX030,
 NRX031,
 NRX032,
 NRX033,
 NRX034,
 NRX035,
 NRX036,
 NRX037,
 NRX038,
 NRX039,
 NRX040,
 NRX041,
 NRX042,
 NRX043,
 NRX044,
 NRX045,
 NRX046,
 NRX047,
 NRX048,
 NRX049,
 NRX050,
 NRX051,
 NRX052,
 NRX053,
 NRX054,
 NRX055,
 NRX056,
 NRX057,
 NRX058,
 NRX059,
 NRX060,
 NRX061,
 NRX062,
 NRX063,
 NRX064,
 NRX065,
 NRX066,
 NRX067,
 NRX068,
 NRX069,
 NRX070,
 NRX071,
 NRX072,
 NRX073,
 NRX074,
 NRX075,
 NRX076,
 NRX077,
 NRX078,
 NRX079,
 NRX080,
 NRX081,
 NRX082,
 NRX083,
 NRX084,
 NRX085,
 NRX086,
 NRX087,
 NRX088,
 NRX089,
 NRX090,
 NRX091,
 NRX092,
 NRX093,
 NRX094,
 NRX095,
 NRX096,
 NRX097,
 NRX098,
 NRX099,
 NRX100,
 NRX101,
 NRX102,
 NRX103,
 NRX104,
 NRX105,
 NRX106,
 NRX107,
 NRX108,
 NRX109,
 NRX110,
 NRX111,
 NRX112,
 NRX113,
 NRX114,
 NRX115,
 NRX116,
 NRX117,
 NRX118,
 NRX119,
 NRX120,
 NRX121,
 NRX122,
 NRX123,
 NRX124,
 NRX125,
 NRX126,
 NRX127,
 NRX128,
 NRX129,
 NRX130,
 NRX131,
 NRX132,
 TRX001,
 TRX002,
 TRX003,
 TRX004,
 TRX005,
 TRX006,
 TRX007,
 TRX008,
 TRX009,
 TRX010,
 TRX011,
 TRX012,
 TRX013,
 TRX014,
 TRX015,
 TRX016,
 TRX017,
 TRX018,
 TRX019,
 TRX020,
 TRX021,
 TRX022,
 TRX023,
 TRX024,
 TRX025,
 TRX026,
 TRX027,
 TRX028,
 TRX029,
 TRX030,
 TRX031,
 TRX032,
 TRX033,
 TRX034,
 TRX035,
 TRX036,
 TRX037,
 TRX038,
 TRX039,
 TRX040,
 TRX041,
 TRX042,
 TRX043,
 TRX044,
 TRX045,
 TRX046,
 TRX047,
 TRX048,
 TRX049,
 TRX050,
 TRX051,
 TRX052,
 TRX053,
 TRX054,
 TRX055,
 TRX056,
 TRX057,
 TRX058,
 TRX059,
 TRX060,
 TRX061,
 TRX062,
 TRX063,
 TRX064,
 TRX065,
 TRX066,
 TRX067,
 TRX068,
 TRX069,
 TRX070,
 TRX071,
 TRX072,
 TRX073,
 TRX074,
 TRX075,
 TRX076,
 TRX077,
 TRX078,
 TRX079,
 TRX080,
 TRX081,
 TRX082,
 TRX083,
 TRX084,
 TRX085,
 TRX086,
 TRX087,
 TRX088,
 TRX089,
 TRX090,
 TRX091,
 TRX092,
 TRX093,
 TRX094,
 TRX095,
 TRX096,
 TRX097,
 TRX098,
 TRX099,
 TRX100,
 TRX101,
 TRX102,
 TRX103,
 TRX104,
 TRX105,
 TRX106,
 TRX107,
 TRX108,
 TRX109,
 TRX110,
 TRX111,
 TRX112,
 TRX113,
 TRX114,
 TRX115,
 TRX116,
 TRX117,
 TRX118,
 TRX119,
 TRX120,
 TRX121,
 TRX122,
 TRX123,
 TRX124,
 TRX125,
 TRX126,
 TRX127,
 TRX128,
 TRX129,
 TRX130,
 TRX131,
 TRX132,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_CONTROL_W_src.IMS_CLIENT_NUM,
        EXT_IMS_MHJ_CONTROL_W_src.IMS_REPORT_NUM,
        EXT_IMS_MHJ_CONTROL_W_src.SRA,
        EXT_IMS_MHJ_CONTROL_W_src.SALES_CATEGORY,
        EXT_IMS_MHJ_CONTROL_W_src.IMS_PRODUCT_GROUP_NUM,
        EXT_IMS_MHJ_CONTROL_W_src.NRX001,
        EXT_IMS_MHJ_CONTROL_W_src.NRX002,
        EXT_IMS_MHJ_CONTROL_W_src.NRX003,
        EXT_IMS_MHJ_CONTROL_W_src.NRX004,
        EXT_IMS_MHJ_CONTROL_W_src.NRX005,
        EXT_IMS_MHJ_CONTROL_W_src.NRX006,
        EXT_IMS_MHJ_CONTROL_W_src.NRX007,
        EXT_IMS_MHJ_CONTROL_W_src.NRX008,
        EXT_IMS_MHJ_CONTROL_W_src.NRX009,
        EXT_IMS_MHJ_CONTROL_W_src.NRX010,
        EXT_IMS_MHJ_CONTROL_W_src.NRX011,
        EXT_IMS_MHJ_CONTROL_W_src.NRX012,
        EXT_IMS_MHJ_CONTROL_W_src.NRX013,
        EXT_IMS_MHJ_CONTROL_W_src.NRX014,
        EXT_IMS_MHJ_CONTROL_W_src.NRX015,
        EXT_IMS_MHJ_CONTROL_W_src.NRX016,
        EXT_IMS_MHJ_CONTROL_W_src.NRX017,
        EXT_IMS_MHJ_CONTROL_W_src.NRX018,
        EXT_IMS_MHJ_CONTROL_W_src.NRX019,
        EXT_IMS_MHJ_CONTROL_W_src.NRX020,
        EXT_IMS_MHJ_CONTROL_W_src.NRX021,
        EXT_IMS_MHJ_CONTROL_W_src.NRX022,
        EXT_IMS_MHJ_CONTROL_W_src.NRX023,
        EXT_IMS_MHJ_CONTROL_W_src.NRX024,
        EXT_IMS_MHJ_CONTROL_W_src.NRX025,
        EXT_IMS_MHJ_CONTROL_W_src.NRX026,
        EXT_IMS_MHJ_CONTROL_W_src.NRX027,
        EXT_IMS_MHJ_CONTROL_W_src.NRX028,
        EXT_IMS_MHJ_CONTROL_W_src.NRX029,
        EXT_IMS_MHJ_CONTROL_W_src.NRX030,
        EXT_IMS_MHJ_CONTROL_W_src.NRX031,
        EXT_IMS_MHJ_CONTROL_W_src.NRX032,
        EXT_IMS_MHJ_CONTROL_W_src.NRX033,
        EXT_IMS_MHJ_CONTROL_W_src.NRX034,
        EXT_IMS_MHJ_CONTROL_W_src.NRX035,
        EXT_IMS_MHJ_CONTROL_W_src.NRX036,
        EXT_IMS_MHJ_CONTROL_W_src.NRX037,
        EXT_IMS_MHJ_CONTROL_W_src.NRX038,
        EXT_IMS_MHJ_CONTROL_W_src.NRX039,
        EXT_IMS_MHJ_CONTROL_W_src.NRX040,
        EXT_IMS_MHJ_CONTROL_W_src.NRX041,
        EXT_IMS_MHJ_CONTROL_W_src.NRX042,
        EXT_IMS_MHJ_CONTROL_W_src.NRX043,
        EXT_IMS_MHJ_CONTROL_W_src.NRX044,
        EXT_IMS_MHJ_CONTROL_W_src.NRX045,
        EXT_IMS_MHJ_CONTROL_W_src.NRX046,
        EXT_IMS_MHJ_CONTROL_W_src.NRX047,
        EXT_IMS_MHJ_CONTROL_W_src.NRX048,
        EXT_IMS_MHJ_CONTROL_W_src.NRX049,
        EXT_IMS_MHJ_CONTROL_W_src.NRX050,
        EXT_IMS_MHJ_CONTROL_W_src.NRX051,
        EXT_IMS_MHJ_CONTROL_W_src.NRX052,
        EXT_IMS_MHJ_CONTROL_W_src.NRX053,
        EXT_IMS_MHJ_CONTROL_W_src.NRX054,
        EXT_IMS_MHJ_CONTROL_W_src.NRX055,
        EXT_IMS_MHJ_CONTROL_W_src.NRX056,
        EXT_IMS_MHJ_CONTROL_W_src.NRX057,
        EXT_IMS_MHJ_CONTROL_W_src.NRX058,
        EXT_IMS_MHJ_CONTROL_W_src.NRX059,
        EXT_IMS_MHJ_CONTROL_W_src.NRX060,
        EXT_IMS_MHJ_CONTROL_W_src.NRX061,
        EXT_IMS_MHJ_CONTROL_W_src.NRX062,
        EXT_IMS_MHJ_CONTROL_W_src.NRX063,
        EXT_IMS_MHJ_CONTROL_W_src.NRX064,
        EXT_IMS_MHJ_CONTROL_W_src.NRX065,
        EXT_IMS_MHJ_CONTROL_W_src.NRX066,
        EXT_IMS_MHJ_CONTROL_W_src.NRX067,
        EXT_IMS_MHJ_CONTROL_W_src.NRX068,
        EXT_IMS_MHJ_CONTROL_W_src.NRX069,
        EXT_IMS_MHJ_CONTROL_W_src.NRX070,
        EXT_IMS_MHJ_CONTROL_W_src.NRX071,
        EXT_IMS_MHJ_CONTROL_W_src.NRX072,
        EXT_IMS_MHJ_CONTROL_W_src.NRX073,
        EXT_IMS_MHJ_CONTROL_W_src.NRX074,
        EXT_IMS_MHJ_CONTROL_W_src.NRX075,
        EXT_IMS_MHJ_CONTROL_W_src.NRX076,
        EXT_IMS_MHJ_CONTROL_W_src.NRX077,
        EXT_IMS_MHJ_CONTROL_W_src.NRX078,
        EXT_IMS_MHJ_CONTROL_W_src.NRX079,
        EXT_IMS_MHJ_CONTROL_W_src.NRX080,
        EXT_IMS_MHJ_CONTROL_W_src.NRX081,
        EXT_IMS_MHJ_CONTROL_W_src.NRX082,
        EXT_IMS_MHJ_CONTROL_W_src.NRX083,
        EXT_IMS_MHJ_CONTROL_W_src.NRX084,
        EXT_IMS_MHJ_CONTROL_W_src.NRX085,
        EXT_IMS_MHJ_CONTROL_W_src.NRX086,
        EXT_IMS_MHJ_CONTROL_W_src.NRX087,
        EXT_IMS_MHJ_CONTROL_W_src.NRX088,
        EXT_IMS_MHJ_CONTROL_W_src.NRX089,
        EXT_IMS_MHJ_CONTROL_W_src.NRX090,
        EXT_IMS_MHJ_CONTROL_W_src.NRX091,
        EXT_IMS_MHJ_CONTROL_W_src.NRX092,
        EXT_IMS_MHJ_CONTROL_W_src.NRX093,
        EXT_IMS_MHJ_CONTROL_W_src.NRX094,
        EXT_IMS_MHJ_CONTROL_W_src.NRX095,
        EXT_IMS_MHJ_CONTROL_W_src.NRX096,
        EXT_IMS_MHJ_CONTROL_W_src.NRX097,
        EXT_IMS_MHJ_CONTROL_W_src.NRX098,
        EXT_IMS_MHJ_CONTROL_W_src.NRX099,
        EXT_IMS_MHJ_CONTROL_W_src.NRX100,
        EXT_IMS_MHJ_CONTROL_W_src.NRX101,
        EXT_IMS_MHJ_CONTROL_W_src.NRX102,
        EXT_IMS_MHJ_CONTROL_W_src.NRX103,
        EXT_IMS_MHJ_CONTROL_W_src.NRX104,
        EXT_IMS_MHJ_CONTROL_W_src.NRX105,
        EXT_IMS_MHJ_CONTROL_W_src.NRX106,
        EXT_IMS_MHJ_CONTROL_W_src.NRX107,
        EXT_IMS_MHJ_CONTROL_W_src.NRX108,
        EXT_IMS_MHJ_CONTROL_W_src.NRX109,
        EXT_IMS_MHJ_CONTROL_W_src.NRX110,
        EXT_IMS_MHJ_CONTROL_W_src.NRX111,
        EXT_IMS_MHJ_CONTROL_W_src.NRX112,
        EXT_IMS_MHJ_CONTROL_W_src.NRX113,
        EXT_IMS_MHJ_CONTROL_W_src.NRX114,
        EXT_IMS_MHJ_CONTROL_W_src.NRX115,
        EXT_IMS_MHJ_CONTROL_W_src.NRX116,
        EXT_IMS_MHJ_CONTROL_W_src.NRX117,
        EXT_IMS_MHJ_CONTROL_W_src.NRX118,
        EXT_IMS_MHJ_CONTROL_W_src.NRX119,
        EXT_IMS_MHJ_CONTROL_W_src.NRX120,
        EXT_IMS_MHJ_CONTROL_W_src.NRX121,
        EXT_IMS_MHJ_CONTROL_W_src.NRX122,
        EXT_IMS_MHJ_CONTROL_W_src.NRX123,
        EXT_IMS_MHJ_CONTROL_W_src.NRX124,
        EXT_IMS_MHJ_CONTROL_W_src.NRX125,
        EXT_IMS_MHJ_CONTROL_W_src.NRX126,
        EXT_IMS_MHJ_CONTROL_W_src.NRX127,
        EXT_IMS_MHJ_CONTROL_W_src.NRX128,
        EXT_IMS_MHJ_CONTROL_W_src.NRX129,
        EXT_IMS_MHJ_CONTROL_W_src.NRX130,
        EXT_IMS_MHJ_CONTROL_W_src.NRX131,
        EXT_IMS_MHJ_CONTROL_W_src.NRX132,
        EXT_IMS_MHJ_CONTROL_W_src.TRX001,
        EXT_IMS_MHJ_CONTROL_W_src.TRX002,
        EXT_IMS_MHJ_CONTROL_W_src.TRX003,
        EXT_IMS_MHJ_CONTROL_W_src.TRX004,
        EXT_IMS_MHJ_CONTROL_W_src.TRX005,
        EXT_IMS_MHJ_CONTROL_W_src.TRX006,
        EXT_IMS_MHJ_CONTROL_W_src.TRX007,
        EXT_IMS_MHJ_CONTROL_W_src.TRX008,
        EXT_IMS_MHJ_CONTROL_W_src.TRX009,
        EXT_IMS_MHJ_CONTROL_W_src.TRX010,
        EXT_IMS_MHJ_CONTROL_W_src.TRX011,
        EXT_IMS_MHJ_CONTROL_W_src.TRX012,
        EXT_IMS_MHJ_CONTROL_W_src.TRX013,
        EXT_IMS_MHJ_CONTROL_W_src.TRX014,
        EXT_IMS_MHJ_CONTROL_W_src.TRX015,
        EXT_IMS_MHJ_CONTROL_W_src.TRX016,
        EXT_IMS_MHJ_CONTROL_W_src.TRX017,
        EXT_IMS_MHJ_CONTROL_W_src.TRX018,
        EXT_IMS_MHJ_CONTROL_W_src.TRX019,
        EXT_IMS_MHJ_CONTROL_W_src.TRX020,
        EXT_IMS_MHJ_CONTROL_W_src.TRX021,
        EXT_IMS_MHJ_CONTROL_W_src.TRX022,
        EXT_IMS_MHJ_CONTROL_W_src.TRX023,
        EXT_IMS_MHJ_CONTROL_W_src.TRX024,
        EXT_IMS_MHJ_CONTROL_W_src.TRX025,
        EXT_IMS_MHJ_CONTROL_W_src.TRX026,
        EXT_IMS_MHJ_CONTROL_W_src.TRX027,
        EXT_IMS_MHJ_CONTROL_W_src.TRX028,
        EXT_IMS_MHJ_CONTROL_W_src.TRX029,
        EXT_IMS_MHJ_CONTROL_W_src.TRX030,
        EXT_IMS_MHJ_CONTROL_W_src.TRX031,
        EXT_IMS_MHJ_CONTROL_W_src.TRX032,
        EXT_IMS_MHJ_CONTROL_W_src.TRX033,
        EXT_IMS_MHJ_CONTROL_W_src.TRX034,
        EXT_IMS_MHJ_CONTROL_W_src.TRX035,
        EXT_IMS_MHJ_CONTROL_W_src.TRX036,
        EXT_IMS_MHJ_CONTROL_W_src.TRX037,
        EXT_IMS_MHJ_CONTROL_W_src.TRX038,
        EXT_IMS_MHJ_CONTROL_W_src.TRX039,
        EXT_IMS_MHJ_CONTROL_W_src.TRX040,
        EXT_IMS_MHJ_CONTROL_W_src.TRX041,
        EXT_IMS_MHJ_CONTROL_W_src.TRX042,
        EXT_IMS_MHJ_CONTROL_W_src.TRX043,
        EXT_IMS_MHJ_CONTROL_W_src.TRX044,
        EXT_IMS_MHJ_CONTROL_W_src.TRX045,
        EXT_IMS_MHJ_CONTROL_W_src.TRX046,
        EXT_IMS_MHJ_CONTROL_W_src.TRX047,
        EXT_IMS_MHJ_CONTROL_W_src.TRX048,
        EXT_IMS_MHJ_CONTROL_W_src.TRX049,
        EXT_IMS_MHJ_CONTROL_W_src.TRX050,
        EXT_IMS_MHJ_CONTROL_W_src.TRX051,
        EXT_IMS_MHJ_CONTROL_W_src.TRX052,
        EXT_IMS_MHJ_CONTROL_W_src.TRX053,
        EXT_IMS_MHJ_CONTROL_W_src.TRX054,
        EXT_IMS_MHJ_CONTROL_W_src.TRX055,
        EXT_IMS_MHJ_CONTROL_W_src.TRX056,
        EXT_IMS_MHJ_CONTROL_W_src.TRX057,
        EXT_IMS_MHJ_CONTROL_W_src.TRX058,
        EXT_IMS_MHJ_CONTROL_W_src.TRX059,
        EXT_IMS_MHJ_CONTROL_W_src.TRX060,
        EXT_IMS_MHJ_CONTROL_W_src.TRX061,
        EXT_IMS_MHJ_CONTROL_W_src.TRX062,
        EXT_IMS_MHJ_CONTROL_W_src.TRX063,
        EXT_IMS_MHJ_CONTROL_W_src.TRX064,
        EXT_IMS_MHJ_CONTROL_W_src.TRX065,
        EXT_IMS_MHJ_CONTROL_W_src.TRX066,
        EXT_IMS_MHJ_CONTROL_W_src.TRX067,
        EXT_IMS_MHJ_CONTROL_W_src.TRX068,
        EXT_IMS_MHJ_CONTROL_W_src.TRX069,
        EXT_IMS_MHJ_CONTROL_W_src.TRX070,
        EXT_IMS_MHJ_CONTROL_W_src.TRX071,
        EXT_IMS_MHJ_CONTROL_W_src.TRX072,
        EXT_IMS_MHJ_CONTROL_W_src.TRX073,
        EXT_IMS_MHJ_CONTROL_W_src.TRX074,
        EXT_IMS_MHJ_CONTROL_W_src.TRX075,
        EXT_IMS_MHJ_CONTROL_W_src.TRX076,
        EXT_IMS_MHJ_CONTROL_W_src.TRX077,
        EXT_IMS_MHJ_CONTROL_W_src.TRX078,
        EXT_IMS_MHJ_CONTROL_W_src.TRX079,
        EXT_IMS_MHJ_CONTROL_W_src.TRX080,
        EXT_IMS_MHJ_CONTROL_W_src.TRX081,
        EXT_IMS_MHJ_CONTROL_W_src.TRX082,
        EXT_IMS_MHJ_CONTROL_W_src.TRX083,
        EXT_IMS_MHJ_CONTROL_W_src.TRX084,
        EXT_IMS_MHJ_CONTROL_W_src.TRX085,
        EXT_IMS_MHJ_CONTROL_W_src.TRX086,
        EXT_IMS_MHJ_CONTROL_W_src.TRX087,
        EXT_IMS_MHJ_CONTROL_W_src.TRX088,
        EXT_IMS_MHJ_CONTROL_W_src.TRX089,
        EXT_IMS_MHJ_CONTROL_W_src.TRX090,
        EXT_IMS_MHJ_CONTROL_W_src.TRX091,
        EXT_IMS_MHJ_CONTROL_W_src.TRX092,
        EXT_IMS_MHJ_CONTROL_W_src.TRX093,
        EXT_IMS_MHJ_CONTROL_W_src.TRX094,
        EXT_IMS_MHJ_CONTROL_W_src.TRX095,
        EXT_IMS_MHJ_CONTROL_W_src.TRX096,
        EXT_IMS_MHJ_CONTROL_W_src.TRX097,
        EXT_IMS_MHJ_CONTROL_W_src.TRX098,
        EXT_IMS_MHJ_CONTROL_W_src.TRX099,
        EXT_IMS_MHJ_CONTROL_W_src.TRX100,
        EXT_IMS_MHJ_CONTROL_W_src.TRX101,
        EXT_IMS_MHJ_CONTROL_W_src.TRX102,
        EXT_IMS_MHJ_CONTROL_W_src.TRX103,
        EXT_IMS_MHJ_CONTROL_W_src.TRX104,
        EXT_IMS_MHJ_CONTROL_W_src.TRX105,
        EXT_IMS_MHJ_CONTROL_W_src.TRX106,
        EXT_IMS_MHJ_CONTROL_W_src.TRX107,
        EXT_IMS_MHJ_CONTROL_W_src.TRX108,
        EXT_IMS_MHJ_CONTROL_W_src.TRX109,
        EXT_IMS_MHJ_CONTROL_W_src.TRX110,
        EXT_IMS_MHJ_CONTROL_W_src.TRX111,
        EXT_IMS_MHJ_CONTROL_W_src.TRX112,
        EXT_IMS_MHJ_CONTROL_W_src.TRX113,
        EXT_IMS_MHJ_CONTROL_W_src.TRX114,
        EXT_IMS_MHJ_CONTROL_W_src.TRX115,
        EXT_IMS_MHJ_CONTROL_W_src.TRX116,
        EXT_IMS_MHJ_CONTROL_W_src.TRX117,
        EXT_IMS_MHJ_CONTROL_W_src.TRX118,
        EXT_IMS_MHJ_CONTROL_W_src.TRX119,
        EXT_IMS_MHJ_CONTROL_W_src.TRX120,
        EXT_IMS_MHJ_CONTROL_W_src.TRX121,
        EXT_IMS_MHJ_CONTROL_W_src.TRX122,
        EXT_IMS_MHJ_CONTROL_W_src.TRX123,
        EXT_IMS_MHJ_CONTROL_W_src.TRX124,
        EXT_IMS_MHJ_CONTROL_W_src.TRX125,
        EXT_IMS_MHJ_CONTROL_W_src.TRX126,
        EXT_IMS_MHJ_CONTROL_W_src.TRX127,
        EXT_IMS_MHJ_CONTROL_W_src.TRX128,
        EXT_IMS_MHJ_CONTROL_W_src.TRX129,
        EXT_IMS_MHJ_CONTROL_W_src.TRX130,
        EXT_IMS_MHJ_CONTROL_W_src.TRX131,
        EXT_IMS_MHJ_CONTROL_W_src.TRX132,
        EXT_IMS_MHJ_CONTROL_W_src.batch_id,
        EXT_IMS_MHJ_CONTROL_W_src.row_id,
        EXT_IMS_MHJ_CONTROL_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CONTROL_W_src
 ORDER BY EXT_IMS_MHJ_CONTROL_W_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_CONTROL_W_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_MHJ_QTY_M_src_super_b0 /*+basename(EXT_IMS_MHJ_QTY_M_src_super)*/ 
(
 ims_client_num,
 ims_report_num,
 zip_other,
 ims_id,
 specialty,
 plan_id,
 sales_category,
 rx_type,
 ims_product_group_num,
 filler_01,
 me_num,
 last_name,
 first_name,
 middle_name,
 address,
 city,
 state,
 zip,
 supplemental_data,
 plan_name,
 data_date,
 bucket_count,
 nrx_001,
 nrx_002,
 nrx_003,
 nrx_004,
 nrx_005,
 nrx_006,
 nrx_007,
 nrx_008,
 nrx_009,
 nrx_010,
 nrx_011,
 nrx_012,
 nrx_013,
 nrx_014,
 nrx_015,
 nrx_016,
 nrx_017,
 nrx_018,
 nrx_019,
 nrx_020,
 nrx_021,
 nrx_022,
 nrx_023,
 nrx_024,
 trx_001,
 trx_002,
 trx_003,
 trx_004,
 trx_005,
 trx_006,
 trx_007,
 trx_008,
 trx_009,
 trx_010,
 trx_011,
 trx_012,
 trx_013,
 trx_014,
 trx_015,
 trx_016,
 trx_017,
 trx_018,
 trx_019,
 trx_020,
 trx_021,
 trx_022,
 trx_023,
 trx_024,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_MHJ_QTY_M_src.ims_client_num,
        EXT_IMS_MHJ_QTY_M_src.ims_report_num,
        EXT_IMS_MHJ_QTY_M_src.zip_other,
        EXT_IMS_MHJ_QTY_M_src.ims_id,
        EXT_IMS_MHJ_QTY_M_src.specialty,
        EXT_IMS_MHJ_QTY_M_src.plan_id,
        EXT_IMS_MHJ_QTY_M_src.sales_category,
        EXT_IMS_MHJ_QTY_M_src.rx_type,
        EXT_IMS_MHJ_QTY_M_src.ims_product_group_num,
        EXT_IMS_MHJ_QTY_M_src.filler_01,
        EXT_IMS_MHJ_QTY_M_src.me_num,
        EXT_IMS_MHJ_QTY_M_src.last_name,
        EXT_IMS_MHJ_QTY_M_src.first_name,
        EXT_IMS_MHJ_QTY_M_src.middle_name,
        EXT_IMS_MHJ_QTY_M_src.address,
        EXT_IMS_MHJ_QTY_M_src.city,
        EXT_IMS_MHJ_QTY_M_src.state,
        EXT_IMS_MHJ_QTY_M_src.zip,
        EXT_IMS_MHJ_QTY_M_src.supplemental_data,
        EXT_IMS_MHJ_QTY_M_src.plan_name,
        EXT_IMS_MHJ_QTY_M_src.data_date,
        EXT_IMS_MHJ_QTY_M_src.bucket_count,
        EXT_IMS_MHJ_QTY_M_src.nrx_001,
        EXT_IMS_MHJ_QTY_M_src.nrx_002,
        EXT_IMS_MHJ_QTY_M_src.nrx_003,
        EXT_IMS_MHJ_QTY_M_src.nrx_004,
        EXT_IMS_MHJ_QTY_M_src.nrx_005,
        EXT_IMS_MHJ_QTY_M_src.nrx_006,
        EXT_IMS_MHJ_QTY_M_src.nrx_007,
        EXT_IMS_MHJ_QTY_M_src.nrx_008,
        EXT_IMS_MHJ_QTY_M_src.nrx_009,
        EXT_IMS_MHJ_QTY_M_src.nrx_010,
        EXT_IMS_MHJ_QTY_M_src.nrx_011,
        EXT_IMS_MHJ_QTY_M_src.nrx_012,
        EXT_IMS_MHJ_QTY_M_src.nrx_013,
        EXT_IMS_MHJ_QTY_M_src.nrx_014,
        EXT_IMS_MHJ_QTY_M_src.nrx_015,
        EXT_IMS_MHJ_QTY_M_src.nrx_016,
        EXT_IMS_MHJ_QTY_M_src.nrx_017,
        EXT_IMS_MHJ_QTY_M_src.nrx_018,
        EXT_IMS_MHJ_QTY_M_src.nrx_019,
        EXT_IMS_MHJ_QTY_M_src.nrx_020,
        EXT_IMS_MHJ_QTY_M_src.nrx_021,
        EXT_IMS_MHJ_QTY_M_src.nrx_022,
        EXT_IMS_MHJ_QTY_M_src.nrx_023,
        EXT_IMS_MHJ_QTY_M_src.nrx_024,
        EXT_IMS_MHJ_QTY_M_src.trx_001,
        EXT_IMS_MHJ_QTY_M_src.trx_002,
        EXT_IMS_MHJ_QTY_M_src.trx_003,
        EXT_IMS_MHJ_QTY_M_src.trx_004,
        EXT_IMS_MHJ_QTY_M_src.trx_005,
        EXT_IMS_MHJ_QTY_M_src.trx_006,
        EXT_IMS_MHJ_QTY_M_src.trx_007,
        EXT_IMS_MHJ_QTY_M_src.trx_008,
        EXT_IMS_MHJ_QTY_M_src.trx_009,
        EXT_IMS_MHJ_QTY_M_src.trx_010,
        EXT_IMS_MHJ_QTY_M_src.trx_011,
        EXT_IMS_MHJ_QTY_M_src.trx_012,
        EXT_IMS_MHJ_QTY_M_src.trx_013,
        EXT_IMS_MHJ_QTY_M_src.trx_014,
        EXT_IMS_MHJ_QTY_M_src.trx_015,
        EXT_IMS_MHJ_QTY_M_src.trx_016,
        EXT_IMS_MHJ_QTY_M_src.trx_017,
        EXT_IMS_MHJ_QTY_M_src.trx_018,
        EXT_IMS_MHJ_QTY_M_src.trx_019,
        EXT_IMS_MHJ_QTY_M_src.trx_020,
        EXT_IMS_MHJ_QTY_M_src.trx_021,
        EXT_IMS_MHJ_QTY_M_src.trx_022,
        EXT_IMS_MHJ_QTY_M_src.trx_023,
        EXT_IMS_MHJ_QTY_M_src.trx_024,
        EXT_IMS_MHJ_QTY_M_src.batch_id,
        EXT_IMS_MHJ_QTY_M_src.row_id,
        EXT_IMS_MHJ_QTY_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_M_src
 ORDER BY EXT_IMS_MHJ_QTY_M_src.batch_id
SEGMENTED BY hash(EXT_IMS_MHJ_QTY_M_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_ACCOUNTSHARE_src_super_b0 /*+basename(EXT_VV_ACCOUNTSHARE_src_super)*/ 
(
 ACCOUNTACCESSLEVEL,
 ACCOUNTID,
 CASEACCESSLEVEL,
 CONTACTACCESSLEVEL,
 ID,
 ISDELETED,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 OPPORTUNITYACCESSLEVEL,
 ROWCAUSE,
 USERORGROUPID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_ACCOUNTSHARE_src.ACCOUNTACCESSLEVEL,
        EXT_VV_ACCOUNTSHARE_src.ACCOUNTID,
        EXT_VV_ACCOUNTSHARE_src.CASEACCESSLEVEL,
        EXT_VV_ACCOUNTSHARE_src.CONTACTACCESSLEVEL,
        EXT_VV_ACCOUNTSHARE_src.ID,
        EXT_VV_ACCOUNTSHARE_src.ISDELETED,
        EXT_VV_ACCOUNTSHARE_src.LASTMODIFIEDBYID,
        EXT_VV_ACCOUNTSHARE_src.LASTMODIFIEDDATE,
        EXT_VV_ACCOUNTSHARE_src.OPPORTUNITYACCESSLEVEL,
        EXT_VV_ACCOUNTSHARE_src.ROWCAUSE,
        EXT_VV_ACCOUNTSHARE_src.USERORGROUPID,
        EXT_VV_ACCOUNTSHARE_src.batch_id,
        EXT_VV_ACCOUNTSHARE_src.row_id,
        EXT_VV_ACCOUNTSHARE_src.update_ts
 FROM teva_ingestion.EXT_VV_ACCOUNTSHARE_src
 ORDER BY EXT_VV_ACCOUNTSHARE_src.batch_id
SEGMENTED BY hash(EXT_VV_ACCOUNTSHARE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_ACCT_MERGE_HISTORY_VOD_src_super_b0 /*+basename(EXT_VV_ACCT_MERGE_HISTORY_VOD_src_super)*/ 
(
 ID,
 ISDELETED,
 NAME,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 ACCOUNT_VOD__C,
 PERSONCONTACTID_VOD__C,
 ACCOUNT_PERSONCONTACTID_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ID,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ISDELETED,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.NAME,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.CREATEDDATE,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.CREATEDBYID,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.LASTMODIFIEDDATE,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.LASTMODIFIEDBYID,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.SYSTEMMODSTAMP,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.MAYEDIT,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ISLOCKED,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ACCOUNT_VOD__C,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.PERSONCONTACTID_VOD__C,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ACCOUNT_PERSONCONTACTID_VOD__C,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.batch_id,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.row_id,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.update_ts
 FROM teva_ingestion.EXT_VV_ACCT_MERGE_HISTORY_VOD_src
 ORDER BY EXT_VV_ACCT_MERGE_HISTORY_VOD_src.batch_id
SEGMENTED BY hash(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_ADDRESS_VOD__C_src_super_b0 /*+basename(EXT_VV_ADDRESS_VOD__C_src_super)*/ 
(
 ID,
 ISDELETED,
 NAME,
 RECORDTYPEID,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 ACCOUNT_VOD__C,
 ADDRESS_LINE_2_VOD__C,
 CITY_VOD__C,
 EXTERNAL_ID_VOD__C,
 DEA_VOD__C,
 DEA_EXPIRATION_DATE_VOD__C,
 DEA_LICENSE_ADDRESS_VOD__C,
 PHONE_VOD__C,
 FAX_VOD__C,
 MAP_VOD__C,
 SHIPPING_VOD__C,
 PRIMARY_VOD__C,
 LICENSE_VOD__C,
 LICENSE_EXPIRATION_DATE_VOD__C,
 STAFF_NOTES_VOD__C,
 APPT_REQUIRED_VOD__C,
 OFFICE_NOTES_VOD__C,
 LICENSE_STATUS_VOD__C,
 ZIP_4_VOD__C,
 PHONE_2_VOD__C,
 FAX_2_VOD__C,
 LICENSE_VALID_TO_SAMPLE_VOD__C,
 SAMPLE_STATUS_VOD__C,
 INCLUDE_TERRITORY_ASSIGNMENT,
 MOBILE_ID_VOD__C,
 INACTIVE_VOD__C,
 LOCK_VOD__C,
 COUNTRY_VOD__C,
 LATITUDE_VOD__C,
 ZIP_VOD__C,
 BEST_TIMES_VOD__C,
 SOURCE_VOD__C,
 BRICK_VOD__C,
 ASSMCA_VOD__C,
 DEA_ADDRESS_VOD__C,
 DEA_SCHEDULE_VOD__C,
 BUSINESS_VOD__C,
 BILLING_VOD__C,
 HOME_VOD__C,
 MAILING_VOD__C,
 STATE_VOD__C,
 LONGITUDE_VOD__C,
 DEA_STATUS_VOD__C,
 ENTITY_REFERENCE_ID_VOD__C,
 CONTROLLING_ADDRESS_VOD__C,
 CONTROLLED_ADDRESS_VOD__C,
 NO_ADDRESS_COPY_VOD__C,
 ADDRESS_LINE_3_TVA__C,
 COUNTY_TVA__C,
 EXTERNAL_SLN_TVA__C,
 LICENSE_EXPIRATION_DATE_TVA__C,
 REP_ENTERED_SLN_TVA__C,
 DEA_CONTACT_TVA__C,
 MARK_FOR_DELETION_TVA__C,
 LICENSE_VALID_DATE_TVA__C,
 LICENSE_VALID_NUM_TVA__C,
 CM_ID_TVA__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_ADDRESS_VOD__C_src.ID,
        EXT_VV_ADDRESS_VOD__C_src.ISDELETED,
        EXT_VV_ADDRESS_VOD__C_src.NAME,
        EXT_VV_ADDRESS_VOD__C_src.RECORDTYPEID,
        EXT_VV_ADDRESS_VOD__C_src.CREATEDDATE,
        EXT_VV_ADDRESS_VOD__C_src.CREATEDBYID,
        EXT_VV_ADDRESS_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_ADDRESS_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_ADDRESS_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_ADDRESS_VOD__C_src.MAYEDIT,
        EXT_VV_ADDRESS_VOD__C_src.ISLOCKED,
        EXT_VV_ADDRESS_VOD__C_src.ACCOUNT_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.ADDRESS_LINE_2_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.CITY_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.EXTERNAL_ID_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.DEA_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.DEA_EXPIRATION_DATE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.DEA_LICENSE_ADDRESS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.PHONE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.FAX_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.MAP_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.SHIPPING_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.PRIMARY_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.LICENSE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.LICENSE_EXPIRATION_DATE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.STAFF_NOTES_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.APPT_REQUIRED_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.OFFICE_NOTES_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.LICENSE_STATUS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.ZIP_4_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.PHONE_2_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.FAX_2_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.LICENSE_VALID_TO_SAMPLE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.SAMPLE_STATUS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.INCLUDE_TERRITORY_ASSIGNMENT,
        EXT_VV_ADDRESS_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.INACTIVE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.LOCK_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.COUNTRY_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.LATITUDE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.ZIP_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.BEST_TIMES_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.SOURCE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.BRICK_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.ASSMCA_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.DEA_ADDRESS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.DEA_SCHEDULE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.BUSINESS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.BILLING_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.HOME_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.MAILING_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.STATE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.LONGITUDE_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.DEA_STATUS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.ENTITY_REFERENCE_ID_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.CONTROLLING_ADDRESS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.CONTROLLED_ADDRESS_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.NO_ADDRESS_COPY_VOD__C,
        EXT_VV_ADDRESS_VOD__C_src.ADDRESS_LINE_3_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.COUNTY_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.EXTERNAL_SLN_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.LICENSE_EXPIRATION_DATE_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.REP_ENTERED_SLN_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.DEA_CONTACT_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.MARK_FOR_DELETION_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.LICENSE_VALID_DATE_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.LICENSE_VALID_NUM_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.CM_ID_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.batch_id,
        EXT_VV_ADDRESS_VOD__C_src.row_id,
        EXT_VV_ADDRESS_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_ADDRESS_VOD__C_src
 ORDER BY EXT_VV_ADDRESS_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_ADDRESS_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_AFFILIATION_VOD__C_src_super_b0 /*+basename(EXT_VV_AFFILIATION_VOD__C_src_super)*/ 
(
 CHILD_AFFILIATION_VOD__C,
 CREATEDBYID,
 CREATEDDATE,
 DESTROY_VOD__C,
 DISABLE_TRIGGER_VOD__C,
 EXTERNAL_ID_VOD__C,
 FROM_ACCOUNT_VOD__C,
 FROM_CONTACT_VOD__C,
 ID,
 INFLUENCE_VOD__C,
 ISDELETED,
 ISLOCKED,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 NAME,
 OWNERID,
 PARENT_VOD__C,
 ROLE_VOD__C,
 SYSTEMMODSTAMP,
 TO_ACCOUNT_VOD__C,
 TO_CONTACT_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_AFFILIATION_VOD__C_src.CHILD_AFFILIATION_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.CREATEDBYID,
        EXT_VV_AFFILIATION_VOD__C_src.CREATEDDATE,
        EXT_VV_AFFILIATION_VOD__C_src.DESTROY_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.DISABLE_TRIGGER_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.EXTERNAL_ID_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.FROM_ACCOUNT_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.FROM_CONTACT_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.ID,
        EXT_VV_AFFILIATION_VOD__C_src.INFLUENCE_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.ISDELETED,
        EXT_VV_AFFILIATION_VOD__C_src.ISLOCKED,
        EXT_VV_AFFILIATION_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_AFFILIATION_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_AFFILIATION_VOD__C_src.MAYEDIT,
        EXT_VV_AFFILIATION_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.NAME,
        EXT_VV_AFFILIATION_VOD__C_src.OWNERID,
        EXT_VV_AFFILIATION_VOD__C_src.PARENT_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.ROLE_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_AFFILIATION_VOD__C_src.TO_ACCOUNT_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.TO_CONTACT_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.batch_id,
        EXT_VV_AFFILIATION_VOD__C_src.row_id,
        EXT_VV_AFFILIATION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_AFFILIATION_VOD__C_src
 ORDER BY EXT_VV_AFFILIATION_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_AFFILIATION_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_ASSESSMENT__C_src_super_b0 /*+basename(EXT_VV_ASSESSMENT__C_src_super)*/ 
(
 ACCOUNT__C,
 ASSESSMENT_DATE_TVA__C,
 CC_PATIENT_PROFILES__C,
 CC_STUDY_LEVERAGE__C,
 CML_Q1_TVA__C,
 CML_Q2_TVA__C,
 CML_Q3_TVA__C,
 CML_Q4_TVA__C,
 CML_Q5_1_TVA__C,
 CML_Q5_TVA__C,
 CML_Q6_TVA__C,
 CML_Q7_1_TVA__C,
 CML_Q7_TVA__C,
 COMMUNITY_ACTIVITY__C,
 CREATEDBYID,
 CREATEDDATE,
 HISTORICAL_ASSESSMENT_TVA__C,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 LN_PATIENT_PROFILES__C,
 LN_STUDY_LEVERAGE__C,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 NAME,
 ONCOLOGY_BOARD__C,
 PREFERRED_PATHOLOGIST__C,
 RECORDTYPEID,
 RESEARCH_FOCUS__C,
 RL_PATIENT_PROFILES__C,
 RL_STUDY_LEVERAGE__C,
 SYSTEMMODSTAMP,
 TREATMENT_PREFERENCES__C,
 TREATMENT_VOLUME__C,
 TUMOR_TYPES__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_ASSESSMENT__C_src.ACCOUNT__C,
        EXT_VV_ASSESSMENT__C_src.ASSESSMENT_DATE_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CC_PATIENT_PROFILES__C,
        EXT_VV_ASSESSMENT__C_src.CC_STUDY_LEVERAGE__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q1_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q2_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q3_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q4_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q5_1_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q5_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q6_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q7_1_TVA__C,
        EXT_VV_ASSESSMENT__C_src.CML_Q7_TVA__C,
        EXT_VV_ASSESSMENT__C_src.COMMUNITY_ACTIVITY__C,
        EXT_VV_ASSESSMENT__C_src.CREATEDBYID,
        EXT_VV_ASSESSMENT__C_src.CREATEDDATE,
        EXT_VV_ASSESSMENT__C_src.HISTORICAL_ASSESSMENT_TVA__C,
        EXT_VV_ASSESSMENT__C_src.ID,
        EXT_VV_ASSESSMENT__C_src.ISDELETED,
        EXT_VV_ASSESSMENT__C_src.ISLOCKED,
        EXT_VV_ASSESSMENT__C_src.LASTMODIFIEDBYID,
        EXT_VV_ASSESSMENT__C_src.LASTMODIFIEDDATE,
        EXT_VV_ASSESSMENT__C_src.LN_PATIENT_PROFILES__C,
        EXT_VV_ASSESSMENT__C_src.LN_STUDY_LEVERAGE__C,
        EXT_VV_ASSESSMENT__C_src.MAYEDIT,
        EXT_VV_ASSESSMENT__C_src.MOBILE_ID_VOD__C,
        EXT_VV_ASSESSMENT__C_src.NAME,
        EXT_VV_ASSESSMENT__C_src.ONCOLOGY_BOARD__C,
        EXT_VV_ASSESSMENT__C_src.PREFERRED_PATHOLOGIST__C,
        EXT_VV_ASSESSMENT__C_src.RECORDTYPEID,
        EXT_VV_ASSESSMENT__C_src.RESEARCH_FOCUS__C,
        EXT_VV_ASSESSMENT__C_src.RL_PATIENT_PROFILES__C,
        EXT_VV_ASSESSMENT__C_src.RL_STUDY_LEVERAGE__C,
        EXT_VV_ASSESSMENT__C_src.SYSTEMMODSTAMP,
        EXT_VV_ASSESSMENT__C_src.TREATMENT_PREFERENCES__C,
        EXT_VV_ASSESSMENT__C_src.TREATMENT_VOLUME__C,
        EXT_VV_ASSESSMENT__C_src.TUMOR_TYPES__C,
        EXT_VV_ASSESSMENT__C_src.batch_id,
        EXT_VV_ASSESSMENT__C_src.row_id,
        EXT_VV_ASSESSMENT__C_src.update_ts
 FROM teva_ingestion.EXT_VV_ASSESSMENT__C_src
 ORDER BY EXT_VV_ASSESSMENT__C_src.batch_id
SEGMENTED BY hash(EXT_VV_ASSESSMENT__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_CALL2_DETAIL_VOD__C_src_super_b0 /*+basename(EXT_VV_CALL2_DETAIL_VOD__C_src_super)*/ 
(
 id,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 is_parent_call_vod__c,
 call2_vod__c,
 product_vod__c,
 detail_priority_vod__c,
 mobile_id_vod__c,
 type_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_CALL2_DETAIL_VOD__C_src.id,
        EXT_VV_CALL2_DETAIL_VOD__C_src.isdeleted,
        EXT_VV_CALL2_DETAIL_VOD__C_src.name,
        EXT_VV_CALL2_DETAIL_VOD__C_src.createddate,
        EXT_VV_CALL2_DETAIL_VOD__C_src.createdbyid,
        EXT_VV_CALL2_DETAIL_VOD__C_src.lastmodifieddate,
        EXT_VV_CALL2_DETAIL_VOD__C_src.lastmodifiedbyid,
        EXT_VV_CALL2_DETAIL_VOD__C_src.systemmodstamp,
        EXT_VV_CALL2_DETAIL_VOD__C_src.mayedit,
        EXT_VV_CALL2_DETAIL_VOD__C_src.islocked,
        EXT_VV_CALL2_DETAIL_VOD__C_src.is_parent_call_vod__c,
        EXT_VV_CALL2_DETAIL_VOD__C_src.call2_vod__c,
        EXT_VV_CALL2_DETAIL_VOD__C_src.product_vod__c,
        EXT_VV_CALL2_DETAIL_VOD__C_src.detail_priority_vod__c,
        EXT_VV_CALL2_DETAIL_VOD__C_src.mobile_id_vod__c,
        EXT_VV_CALL2_DETAIL_VOD__C_src.type_vod__c,
        EXT_VV_CALL2_DETAIL_VOD__C_src.batch_id,
        EXT_VV_CALL2_DETAIL_VOD__C_src.row_id,
        EXT_VV_CALL2_DETAIL_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_DETAIL_VOD__C_src
 ORDER BY EXT_VV_CALL2_DETAIL_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_CALL2_DETAIL_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_CALL2_KEY_MESSAGE_VOD_src_super_b0 /*+basename(EXT_VV_CALL2_KEY_MESSAGE_VOD_src_super)*/ 
(
 id,
 isdeleted,
 name,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 account_vod__c,
 call2_vod__c,
 reaction_vod__c,
 product_vod__c,
 key_message_vod__c,
 mobile_id_vod__c,
 contact_vod__c,
 call_date_vod__c,
 user_vod__c,
 category_vod__c,
 vehicle_vod__c,
 is_parent_call_vod__c,
 clm_id_vod__c,
 slide_version_vod__c,
 duration_vod__c,
 presentation_id_vod__c,
 start_time_vod__c,
 attendee_type_vod__c,
 entity_reference_id_vod__c,
 segment_vod__c,
 display_order_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_CALL2_KEY_MESSAGE_VOD_src.id,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.isdeleted,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.name,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.createddate,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.createdbyid,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.lastmodifieddate,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.lastmodifiedbyid,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.systemmodstamp,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.mayedit,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.islocked,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.account_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.call2_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.reaction_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.product_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.key_message_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.mobile_id_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.contact_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.call_date_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.user_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.category_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.vehicle_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.is_parent_call_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.clm_id_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.slide_version_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.duration_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.presentation_id_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.start_time_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.attendee_type_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.entity_reference_id_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.segment_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.display_order_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.batch_id,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.row_id,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_KEY_MESSAGE_VOD_src
 ORDER BY EXT_VV_CALL2_KEY_MESSAGE_VOD_src.batch_id
SEGMENTED BY hash(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_CALL2_VOD__HISTORY_src_super_b0 /*+basename(EXT_VV_CALL2_VOD__HISTORY_src_super)*/ 
(
 ID,
 ISDELETED,
 PARENTID,
 CREATEDBYID,
 CREATEDDATE,
 FIELD,
 OLDVALUE,
 NEWVALUE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_CALL2_VOD__HISTORY_src.ID,
        EXT_VV_CALL2_VOD__HISTORY_src.ISDELETED,
        EXT_VV_CALL2_VOD__HISTORY_src.PARENTID,
        EXT_VV_CALL2_VOD__HISTORY_src.CREATEDBYID,
        EXT_VV_CALL2_VOD__HISTORY_src.CREATEDDATE,
        EXT_VV_CALL2_VOD__HISTORY_src.FIELD,
        EXT_VV_CALL2_VOD__HISTORY_src.OLDVALUE,
        EXT_VV_CALL2_VOD__HISTORY_src.NEWVALUE,
        EXT_VV_CALL2_VOD__HISTORY_src.batch_id,
        EXT_VV_CALL2_VOD__HISTORY_src.row_id,
        EXT_VV_CALL2_VOD__HISTORY_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_VOD__HISTORY_src
 ORDER BY EXT_VV_CALL2_VOD__HISTORY_src.batch_id
SEGMENTED BY hash(EXT_VV_CALL2_VOD__HISTORY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_CALL_GOAL_TVA__C_src_super_b0 /*+basename(EXT_VV_CALL_GOAL_TVA__C_src_super)*/ 
(
 ACCOUNT_TVA__C,
 ACTIVE_TVA__C,
 ACTUAL_REMAINING_TVA__C,
 ACTUAL_TVA__C,
 CREATEDBYID,
 CREATEDDATE,
 END_DATE_TVA__C,
 EXTERNAL_ID_TVA__C,
 GOAL_TVA__C,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTACTIVITYDATE,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYEDIT,
 NAME,
 OWNERID,
 PRIORITY_TVA__C,
 PRODUCT_CATALOG_TVA__C,
 REMAINING_TVA__C,
 SORT_ORDER_TVA__C,
 START_DATE_TVA__C,
 SYSTEMMODSTAMP,
 TERRITORY_TVA__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_CALL_GOAL_TVA__C_src.ACCOUNT_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.ACTIVE_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.ACTUAL_REMAINING_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.ACTUAL_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.CREATEDBYID,
        EXT_VV_CALL_GOAL_TVA__C_src.CREATEDDATE,
        EXT_VV_CALL_GOAL_TVA__C_src.END_DATE_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.EXTERNAL_ID_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.GOAL_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.ID,
        EXT_VV_CALL_GOAL_TVA__C_src.ISDELETED,
        EXT_VV_CALL_GOAL_TVA__C_src.ISLOCKED,
        EXT_VV_CALL_GOAL_TVA__C_src.LASTACTIVITYDATE,
        EXT_VV_CALL_GOAL_TVA__C_src.LASTMODIFIEDBYID,
        EXT_VV_CALL_GOAL_TVA__C_src.LASTMODIFIEDDATE,
        EXT_VV_CALL_GOAL_TVA__C_src.MAYEDIT,
        EXT_VV_CALL_GOAL_TVA__C_src.NAME,
        EXT_VV_CALL_GOAL_TVA__C_src.OWNERID,
        EXT_VV_CALL_GOAL_TVA__C_src.PRIORITY_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.PRODUCT_CATALOG_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.REMAINING_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.SORT_ORDER_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.START_DATE_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.SYSTEMMODSTAMP,
        EXT_VV_CALL_GOAL_TVA__C_src.TERRITORY_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.batch_id,
        EXT_VV_CALL_GOAL_TVA__C_src.row_id,
        EXT_VV_CALL_GOAL_TVA__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL_GOAL_TVA__C_src
 ORDER BY EXT_VV_CALL_GOAL_TVA__C_src.batch_id
SEGMENTED BY hash(EXT_VV_CALL_GOAL_TVA__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_DECILES_TVA__C_src_super_b0 /*+basename(EXT_VV_DECILES_TVA__C_src_super)*/ 
(
 ACCOUNT_VOD__C,
 CREATEDBYID,
 CREATEDDATE,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTACTIVITYDATE,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MARKET_TVA__C,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 NAME,
 SYSTEMMODSTAMP,
 VALUE_TVA__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_DECILES_TVA__C_src.ACCOUNT_VOD__C,
        EXT_VV_DECILES_TVA__C_src.CREATEDBYID,
        EXT_VV_DECILES_TVA__C_src.CREATEDDATE,
        EXT_VV_DECILES_TVA__C_src.ID,
        EXT_VV_DECILES_TVA__C_src.ISDELETED,
        EXT_VV_DECILES_TVA__C_src.ISLOCKED,
        EXT_VV_DECILES_TVA__C_src.LASTACTIVITYDATE,
        EXT_VV_DECILES_TVA__C_src.LASTMODIFIEDBYID,
        EXT_VV_DECILES_TVA__C_src.LASTMODIFIEDDATE,
        EXT_VV_DECILES_TVA__C_src.MARKET_TVA__C,
        EXT_VV_DECILES_TVA__C_src.MAYEDIT,
        EXT_VV_DECILES_TVA__C_src.MOBILE_ID_VOD__C,
        EXT_VV_DECILES_TVA__C_src.NAME,
        EXT_VV_DECILES_TVA__C_src.SYSTEMMODSTAMP,
        EXT_VV_DECILES_TVA__C_src.VALUE_TVA__C,
        EXT_VV_DECILES_TVA__C_src.batch_id,
        EXT_VV_DECILES_TVA__C_src.row_id,
        EXT_VV_DECILES_TVA__C_src.update_ts
 FROM teva_ingestion.EXT_VV_DECILES_TVA__C_src
 ORDER BY EXT_VV_DECILES_TVA__C_src.batch_id
SEGMENTED BY hash(EXT_VV_DECILES_TVA__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_GROUP_src_super_b0 /*+basename(EXT_VV_GROUP_src_super)*/ 
(
 CREATEDBYID,
 CREATEDDATE,
 DEVELOPERNAME,
 DOESINCLUDEBOSSES,
 DOESSENDEMAILTOMEMBERS,
 EMAIL,
 ID,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 NAME,
 OWNERID,
 RELATEDID,
 SYSTEMMODSTAMP,
 TYPE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_GROUP_src.CREATEDBYID,
        EXT_VV_GROUP_src.CREATEDDATE,
        EXT_VV_GROUP_src.DEVELOPERNAME,
        EXT_VV_GROUP_src.DOESINCLUDEBOSSES,
        EXT_VV_GROUP_src.DOESSENDEMAILTOMEMBERS,
        EXT_VV_GROUP_src.EMAIL,
        EXT_VV_GROUP_src.ID,
        EXT_VV_GROUP_src.LASTMODIFIEDBYID,
        EXT_VV_GROUP_src.LASTMODIFIEDDATE,
        EXT_VV_GROUP_src.NAME,
        EXT_VV_GROUP_src.OWNERID,
        EXT_VV_GROUP_src.RELATEDID,
        EXT_VV_GROUP_src.SYSTEMMODSTAMP,
        EXT_VV_GROUP_src.TYPE,
        EXT_VV_GROUP_src.batch_id,
        EXT_VV_GROUP_src.row_id,
        EXT_VV_GROUP_src.update_ts
 FROM teva_ingestion.EXT_VV_GROUP_src
 ORDER BY EXT_VV_GROUP_src.batch_id
SEGMENTED BY hash(EXT_VV_GROUP_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_MEDICAL_INQUIRY_VOD__C_src_super_b0 /*+basename(EXT_VV_MEDICAL_INQUIRY_VOD__C_src_super)*/ 
(
 ACCOUNT_VOD__C,
 ADDRESS_LINE_1_VOD__C,
 ADDRESS_LINE_2_VOD__C,
 CALL2_VOD__C,
 CITY_VOD__C,
 COUNTRY_VOD__C,
 CREATEDBYID,
 CREATEDDATE,
 DELIVERY_METHOD_VOD__C,
 DISCLAIMER_VOD__C,
 EMAIL_VOD__C,
 ENTITY_REFERENCE_ID_VOD__C,
 FAX_NUMBER_VOD__C,
 ID,
 INQUIRY_TEXT__C,
 ISDELETED,
 ISLOCKED,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 LOCK_VOD__C,
 MAYEDIT,
 MOBILE_ID_VOD__C,
 MSL_CONSULT__C,
 NAME,
 NEW_EMAIL_TVA__C,
 NEW_FAX_TVA__C,
 PHONE_NUMBER_VOD__C,
 PRODUCT__C,
 RECORDTYPEID,
 RUSH_DELIVERY__C,
 SIGNATURE_DATE_VOD__C,
 SIGNATURE_VOD__C,
 SOURCE__C,
 STATE_VOD__C,
 STATUS_VOD__C,
 SUBMITTED_BY_MOBILE_VOD__C,
 SYSTEMMODSTAMP,
 ZIP_VOD__C,
 ZVOD_DELIVERY_METHOD_VOD__C,
 ZVOD_DISCLAIMER_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ACCOUNT_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ADDRESS_LINE_1_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ADDRESS_LINE_2_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CALL2_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CITY_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.COUNTRY_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CREATEDBYID,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CREATEDDATE,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.DELIVERY_METHOD_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.DISCLAIMER_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.EMAIL_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ENTITY_REFERENCE_ID_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.FAX_NUMBER_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ID,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.INQUIRY_TEXT__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ISDELETED,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ISLOCKED,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.LOCK_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.MAYEDIT,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.MSL_CONSULT__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.NAME,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.NEW_EMAIL_TVA__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.NEW_FAX_TVA__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.PHONE_NUMBER_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.PRODUCT__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.RECORDTYPEID,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.RUSH_DELIVERY__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SIGNATURE_DATE_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SIGNATURE_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SOURCE__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.STATE_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.STATUS_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SUBMITTED_BY_MOBILE_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ZIP_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ZVOD_DELIVERY_METHOD_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ZVOD_DISCLAIMER_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.batch_id,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.row_id,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_MEDICAL_INQUIRY_VOD__C_src
 ORDER BY EXT_VV_MEDICAL_INQUIRY_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_PRODUCT_METRICS_VOD__C_src_super_b0 /*+basename(EXT_VV_PRODUCT_METRICS_VOD__C_src_super)*/ 
(
 ID,
 ISDELETED,
 NAME,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 ACCOUNT_VOD__C,
 AWARENESS__C,
 SELLING_STAGE__C,
 FORMULARY_STATUS__C,
 MOVEMENT__C,
 PRODUCTS_VOD__C,
 SEGMENT__C,
 X12_MO_TRX_CHG__C,
 SPEAKER_SKILLS__C,
 INVESTIGATOR_READINESS__C,
 ENGAGEMENTS__C,
 MOBILE_ID_VOD__C,
 EXTERNAL_ID_VOD__C,
 DECILE_VALUE_TVA__C,
 CURRENT_TVA__C,
 EXTERNAL_ID_TVA__C,
 MARKETING_TARGET_TVA__C,
 PRIOR_TVA__C,
 REP_TARGET_TVA__C,
 SBO_TARGET_TVA__C,
 TRX_3_MONTH_TVA__C,
 TRX_6_MONTH_TVA__C,
 TRX_YTD_TVA__C,
 CP_DECILE_TVA__C,
 BUSINESS_SEGMENT_TVA__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_PRODUCT_METRICS_VOD__C_src.ID,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.ISDELETED,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.NAME,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.CREATEDDATE,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.CREATEDBYID,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.MAYEDIT,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.ISLOCKED,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.ACCOUNT_VOD__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.AWARENESS__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.SELLING_STAGE__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.FORMULARY_STATUS__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.MOVEMENT__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.PRODUCTS_VOD__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.SEGMENT__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.X12_MO_TRX_CHG__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.SPEAKER_SKILLS__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.INVESTIGATOR_READINESS__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.ENGAGEMENTS__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.EXTERNAL_ID_VOD__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.DECILE_VALUE_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.CURRENT_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.EXTERNAL_ID_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.MARKETING_TARGET_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.PRIOR_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.REP_TARGET_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.SBO_TARGET_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_3_MONTH_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_6_MONTH_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_YTD_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.CP_DECILE_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.BUSINESS_SEGMENT_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.batch_id,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.row_id,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_PRODUCT_METRICS_VOD__C_src
 ORDER BY EXT_VV_PRODUCT_METRICS_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_PRODUCT_METRICS_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_QUESTION_RESPONSE_VOD_src_super_b0 /*+basename(EXT_VV_QUESTION_RESPONSE_VOD_src_super)*/ 
(
 ID,
 ISDELETED,
 NAME,
 RECORDTYPEID,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 SURVEY_TARGET_VOD__C,
 ANSWER_CHOICE_VOD__C,
 DATE_VOD__C,
 DATETIME_VOD__C,
 EXTERNAL_ID_VOD__C,
 MOBILE_ID_VOD__C,
 NUMBER_VOD__C,
 ORDER_VOD__C,
 QUESTION_TEXT_VOD__C,
 REQUIRED_VOD__C,
 RESPONSE_HASH_VOD__C,
 RESPONSE_VOD__C,
 SCORE_VOD__C,
 SURVEY_QUESTION_VOD__C,
 TEXT_VOD__C,
 TYPE_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_QUESTION_RESPONSE_VOD_src.ID,
        EXT_VV_QUESTION_RESPONSE_VOD_src.ISDELETED,
        EXT_VV_QUESTION_RESPONSE_VOD_src.NAME,
        EXT_VV_QUESTION_RESPONSE_VOD_src.RECORDTYPEID,
        EXT_VV_QUESTION_RESPONSE_VOD_src.CREATEDDATE,
        EXT_VV_QUESTION_RESPONSE_VOD_src.CREATEDBYID,
        EXT_VV_QUESTION_RESPONSE_VOD_src.LASTMODIFIEDDATE,
        EXT_VV_QUESTION_RESPONSE_VOD_src.LASTMODIFIEDBYID,
        EXT_VV_QUESTION_RESPONSE_VOD_src.SYSTEMMODSTAMP,
        EXT_VV_QUESTION_RESPONSE_VOD_src.MAYEDIT,
        EXT_VV_QUESTION_RESPONSE_VOD_src.ISLOCKED,
        EXT_VV_QUESTION_RESPONSE_VOD_src.SURVEY_TARGET_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.ANSWER_CHOICE_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.DATE_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.DATETIME_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.EXTERNAL_ID_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.MOBILE_ID_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.NUMBER_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.ORDER_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.QUESTION_TEXT_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.REQUIRED_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.RESPONSE_HASH_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.RESPONSE_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.SCORE_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.SURVEY_QUESTION_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.TEXT_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.TYPE_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.batch_id,
        EXT_VV_QUESTION_RESPONSE_VOD_src.row_id,
        EXT_VV_QUESTION_RESPONSE_VOD_src.update_ts
 FROM teva_ingestion.EXT_VV_QUESTION_RESPONSE_VOD_src
 ORDER BY EXT_VV_QUESTION_RESPONSE_VOD_src.batch_id
SEGMENTED BY hash(EXT_VV_QUESTION_RESPONSE_VOD_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_RECORDTYPE_src_super_b0 /*+basename(EXT_VV_RECORDTYPE_src_super)*/ 
(
 BUSINESSPROCESSID,
 CREATEDBYID,
 CREATEDDATE,
 DESCRIPTION,
 DEVELOPERNAME,
 ID,
 ISACTIVE,
 ISPERSONTYPE,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 NAME,
 NAMESPACEPREFIX,
 SOBJECTTYPE,
 SYSTEMMODSTAMP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_RECORDTYPE_src.BUSINESSPROCESSID,
        EXT_VV_RECORDTYPE_src.CREATEDBYID,
        EXT_VV_RECORDTYPE_src.CREATEDDATE,
        EXT_VV_RECORDTYPE_src.DESCRIPTION,
        EXT_VV_RECORDTYPE_src.DEVELOPERNAME,
        EXT_VV_RECORDTYPE_src.ID,
        EXT_VV_RECORDTYPE_src.ISACTIVE,
        EXT_VV_RECORDTYPE_src.ISPERSONTYPE,
        EXT_VV_RECORDTYPE_src.LASTMODIFIEDBYID,
        EXT_VV_RECORDTYPE_src.LASTMODIFIEDDATE,
        EXT_VV_RECORDTYPE_src.NAME,
        EXT_VV_RECORDTYPE_src.NAMESPACEPREFIX,
        EXT_VV_RECORDTYPE_src.SOBJECTTYPE,
        EXT_VV_RECORDTYPE_src.SYSTEMMODSTAMP,
        EXT_VV_RECORDTYPE_src.batch_id,
        EXT_VV_RECORDTYPE_src.row_id,
        EXT_VV_RECORDTYPE_src.update_ts
 FROM teva_ingestion.EXT_VV_RECORDTYPE_src
 ORDER BY EXT_VV_RECORDTYPE_src.batch_id
SEGMENTED BY hash(EXT_VV_RECORDTYPE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SURVEY_QUESTION_VOD__C_src_super_b0 /*+basename(EXT_VV_SURVEY_QUESTION_VOD__C_src_super)*/ 
(
 ID,
 ISDELETED,
 NAME,
 RECORDTYPEID,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 SURVEY_VOD__C,
 ANSWER_CHOICE_VOD__C,
 EXTERNAL_ID_VOD__C,
 MAX_SCORE_VOD__C,
 MIN_SCORE_VOD__C,
 ORDER_VOD__C,
 QUESTION_VOD__C,
 REQUIRED_VOD__C,
 TEXT_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_SURVEY_QUESTION_VOD__C_src.ID,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.ISDELETED,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.NAME,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.RECORDTYPEID,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.CREATEDDATE,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.CREATEDBYID,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.MAYEDIT,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.ISLOCKED,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.SURVEY_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.ANSWER_CHOICE_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.EXTERNAL_ID_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.MAX_SCORE_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.MIN_SCORE_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.ORDER_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.QUESTION_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.REQUIRED_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.TEXT_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.batch_id,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.row_id,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SURVEY_QUESTION_VOD__C_src
 ORDER BY EXT_VV_SURVEY_QUESTION_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SURVEY_QUESTION_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SURVEY_VOD__C_src_super_b0 /*+basename(EXT_VV_SURVEY_VOD__C_src_super)*/ 
(
 ID,
 OWNERID,
 ISDELETED,
 NAME,
 RECORDTYPEID,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 MAYEDIT,
 ISLOCKED,
 LASTVIEWEDDATE,
 LASTREFERENCEDDATE,
 ASSIGNMENT_TYPE_VOD__C,
 CHANNELS_VOD__C,
 END_DATE_VOD__C,
 EXPIRED_VOD__C,
 EXTERNAL_ID_VOD__C,
 LANGUAGE_VOD__C,
 LOCK_VOD__C,
 OPEN_VOD__C,
 PRODUCT_VOD__C,
 REGION_VOD__C,
 SEGMENT_VOD__C,
 START_DATE_VOD__C,
 STATUS_VOD__C,
 TERRITORY_VOD__C,
 ZVOD_QUESTIONS_VOD__C,
 ZVOD_SEGMENTS_VOD__C,
 ZVOD_TARGETS_VOD__C,
 MAX_SCORE_VOD__C,
 MIN_SCORE_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_SURVEY_VOD__C_src.ID,
        EXT_VV_SURVEY_VOD__C_src.OWNERID,
        EXT_VV_SURVEY_VOD__C_src.ISDELETED,
        EXT_VV_SURVEY_VOD__C_src.NAME,
        EXT_VV_SURVEY_VOD__C_src.RECORDTYPEID,
        EXT_VV_SURVEY_VOD__C_src.CREATEDDATE,
        EXT_VV_SURVEY_VOD__C_src.CREATEDBYID,
        EXT_VV_SURVEY_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_SURVEY_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_SURVEY_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_SURVEY_VOD__C_src.MAYEDIT,
        EXT_VV_SURVEY_VOD__C_src.ISLOCKED,
        EXT_VV_SURVEY_VOD__C_src.LASTVIEWEDDATE,
        EXT_VV_SURVEY_VOD__C_src.LASTREFERENCEDDATE,
        EXT_VV_SURVEY_VOD__C_src.ASSIGNMENT_TYPE_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.CHANNELS_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.END_DATE_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.EXPIRED_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.EXTERNAL_ID_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.LANGUAGE_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.LOCK_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.OPEN_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.PRODUCT_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.REGION_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.SEGMENT_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.START_DATE_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.STATUS_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.TERRITORY_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.ZVOD_QUESTIONS_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.ZVOD_SEGMENTS_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.ZVOD_TARGETS_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.MAX_SCORE_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.MIN_SCORE_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.batch_id,
        EXT_VV_SURVEY_VOD__C_src.row_id,
        EXT_VV_SURVEY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SURVEY_VOD__C_src
 ORDER BY EXT_VV_SURVEY_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SURVEY_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_SYNC_TRACKING_VOD__C_src_super_b0 /*+basename(EXT_VV_SYNC_TRACKING_VOD__C_src_super)*/ 
(
 CREATEDBYID,
 CREATEDDATE,
 DOWNLOAD_PROCESSED_VOD__C,
 ID,
 ISDELETED,
 ISLOCKED,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYEDIT,
 MEDIA_PROCESSED_VOD__C,
 MOBILE_ID_VOD__C,
 NAME,
 OWNERID,
 SUCCESSFUL_SYNC_VOD__C,
 SYNC_COMPLETED_DATETIME_VOD__C,
 SYNC_DURATION_VOD__C,
 SYNC_START_DATETIME_VOD__C,
 SYNC_TYPE_VOD__C,
 SYSTEMMODSTAMP,
 UPLOAD_PROCESSED_VOD__C,
 VERSION_VOD__C,
 VINSIGHTS_PROCESSED_VOD__C,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_SYNC_TRACKING_VOD__C_src.CREATEDBYID,
        EXT_VV_SYNC_TRACKING_VOD__C_src.CREATEDDATE,
        EXT_VV_SYNC_TRACKING_VOD__C_src.DOWNLOAD_PROCESSED_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.ID,
        EXT_VV_SYNC_TRACKING_VOD__C_src.ISDELETED,
        EXT_VV_SYNC_TRACKING_VOD__C_src.ISLOCKED,
        EXT_VV_SYNC_TRACKING_VOD__C_src.LASTMODIFIEDBYID,
        EXT_VV_SYNC_TRACKING_VOD__C_src.LASTMODIFIEDDATE,
        EXT_VV_SYNC_TRACKING_VOD__C_src.MAYEDIT,
        EXT_VV_SYNC_TRACKING_VOD__C_src.MEDIA_PROCESSED_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.MOBILE_ID_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.NAME,
        EXT_VV_SYNC_TRACKING_VOD__C_src.OWNERID,
        EXT_VV_SYNC_TRACKING_VOD__C_src.SUCCESSFUL_SYNC_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_COMPLETED_DATETIME_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_DURATION_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_START_DATETIME_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_TYPE_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.SYSTEMMODSTAMP,
        EXT_VV_SYNC_TRACKING_VOD__C_src.UPLOAD_PROCESSED_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.VERSION_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.VINSIGHTS_PROCESSED_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.batch_id,
        EXT_VV_SYNC_TRACKING_VOD__C_src.row_id,
        EXT_VV_SYNC_TRACKING_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SYNC_TRACKING_VOD__C_src
 ORDER BY EXT_VV_SYNC_TRACKING_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_SYNC_TRACKING_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_TERRITORY_src_super_b0 /*+basename(EXT_VV_TERRITORY_src_super)*/ 
(
 ACCOUNTACCESSLEVEL,
 CASEACCESSLEVEL,
 CONTACTACCESSLEVEL,
 DESCRIPTION,
 DEVELOPERNAME,
 FORECASTUSERID,
 ID,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYFORECASTMANAGERSHARE,
 NAME,
 OPPORTUNITYACCESSLEVEL,
 PARENTTERRITORYID,
 RESTRICTOPPORTUNITYTRANSFER,
 SYSTEMMODSTAMP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_TERRITORY_src.ACCOUNTACCESSLEVEL,
        EXT_VV_TERRITORY_src.CASEACCESSLEVEL,
        EXT_VV_TERRITORY_src.CONTACTACCESSLEVEL,
        EXT_VV_TERRITORY_src.DESCRIPTION,
        EXT_VV_TERRITORY_src.DEVELOPERNAME,
        EXT_VV_TERRITORY_src.FORECASTUSERID,
        EXT_VV_TERRITORY_src.ID,
        EXT_VV_TERRITORY_src.LASTMODIFIEDBYID,
        EXT_VV_TERRITORY_src.LASTMODIFIEDDATE,
        EXT_VV_TERRITORY_src.MAYFORECASTMANAGERSHARE,
        EXT_VV_TERRITORY_src.NAME,
        EXT_VV_TERRITORY_src.OPPORTUNITYACCESSLEVEL,
        EXT_VV_TERRITORY_src.PARENTTERRITORYID,
        EXT_VV_TERRITORY_src.RESTRICTOPPORTUNITYTRANSFER,
        EXT_VV_TERRITORY_src.SYSTEMMODSTAMP,
        EXT_VV_TERRITORY_src.batch_id,
        EXT_VV_TERRITORY_src.row_id,
        EXT_VV_TERRITORY_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY_src
 ORDER BY EXT_VV_TERRITORY_src.batch_id
SEGMENTED BY hash(EXT_VV_TERRITORY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_TSF_VOD__C_src_super_b0 /*+basename(EXT_VV_TSF_VOD__C_src_super)*/ 
(
 id,
 isdeleted,
 name,
 recordtypeid,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 systemmodstamp,
 mayedit,
 islocked,
 account_vod__c,
 address_vod__c,
 last_activity_date_vod__c,
 my_target_vod__c,
 route_vod__c,
 mobile_id_vod__c,
 external_id_vod__c,
 territory_vod__c,
 ytd_activity_vod__c,
 preferred_account_vod__c,
 allowed_products_vod__c,
 territory_status_tva__c,
 territory_specialty_tva__c,
 treats_es_osa_tva__c,
 osa_patients_tva__c,
 account_status_tva__c,
 dea_number_tva__c,
 synribo_target_tva__c,
 treanda_sbo_tva__c,
 trisenox_sbo_tva__c,
 appt_index_tva__c,
 merged_mvn__c,
 call_plan_designation_tva__c,
 campaign_tva__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts,
 detail_priority__c,
 cinqair_call_plan_target__c,
 digihaler_call_plan_target__c
)
AS
 SELECT EXT_VV_TSF_VOD__C_src.id,
        EXT_VV_TSF_VOD__C_src.isdeleted,
        EXT_VV_TSF_VOD__C_src.name,
        EXT_VV_TSF_VOD__C_src.recordtypeid,
        EXT_VV_TSF_VOD__C_src.createddate,
        EXT_VV_TSF_VOD__C_src.createdbyid,
        EXT_VV_TSF_VOD__C_src.lastmodifieddate,
        EXT_VV_TSF_VOD__C_src.lastmodifiedbyid,
        EXT_VV_TSF_VOD__C_src.systemmodstamp,
        EXT_VV_TSF_VOD__C_src.mayedit,
        EXT_VV_TSF_VOD__C_src.islocked,
        EXT_VV_TSF_VOD__C_src.account_vod__c,
        EXT_VV_TSF_VOD__C_src.address_vod__c,
        EXT_VV_TSF_VOD__C_src.last_activity_date_vod__c,
        EXT_VV_TSF_VOD__C_src.my_target_vod__c,
        EXT_VV_TSF_VOD__C_src.route_vod__c,
        EXT_VV_TSF_VOD__C_src.mobile_id_vod__c,
        EXT_VV_TSF_VOD__C_src.external_id_vod__c,
        EXT_VV_TSF_VOD__C_src.territory_vod__c,
        EXT_VV_TSF_VOD__C_src.ytd_activity_vod__c,
        EXT_VV_TSF_VOD__C_src.preferred_account_vod__c,
        EXT_VV_TSF_VOD__C_src.allowed_products_vod__c,
        EXT_VV_TSF_VOD__C_src.territory_status_tva__c,
        EXT_VV_TSF_VOD__C_src.territory_specialty_tva__c,
        EXT_VV_TSF_VOD__C_src.treats_es_osa_tva__c,
        EXT_VV_TSF_VOD__C_src.osa_patients_tva__c,
        EXT_VV_TSF_VOD__C_src.account_status_tva__c,
        EXT_VV_TSF_VOD__C_src.dea_number_tva__c,
        EXT_VV_TSF_VOD__C_src.synribo_target_tva__c,
        EXT_VV_TSF_VOD__C_src.treanda_sbo_tva__c,
        EXT_VV_TSF_VOD__C_src.trisenox_sbo_tva__c,
        EXT_VV_TSF_VOD__C_src.appt_index_tva__c,
        EXT_VV_TSF_VOD__C_src.merged_mvn__c,
        EXT_VV_TSF_VOD__C_src.call_plan_designation_tva__c,
        EXT_VV_TSF_VOD__C_src.campaign_tva__c,
        EXT_VV_TSF_VOD__C_src.batch_id,
        EXT_VV_TSF_VOD__C_src.row_id,
        EXT_VV_TSF_VOD__C_src.update_ts,
        EXT_VV_TSF_VOD__C_src.detail_priority__c,
        EXT_VV_TSF_VOD__C_src.cinqair_call_plan_target__c,
        EXT_VV_TSF_VOD__C_src.digihaler_call_plan_target__c
 FROM teva_ingestion.EXT_VV_TSF_VOD__C_src
 ORDER BY EXT_VV_TSF_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_TSF_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_USERROLE_src_super_b0 /*+basename(EXT_VV_USERROLE_src_super)*/ 
(
 CASEACCESSFORACCOUNTOWNER,
 CONTACTACCESSFORACCOUNTOWNER,
 DEVELOPERNAME,
 FORECASTUSERID,
 ID,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 MAYFORECASTMANAGERSHARE,
 NAME,
 OPPORTUNITYACCESSACCOUNTOWNER,
 PARENTROLEID,
 PORTALACCOUNTID,
 PORTALACCOUNTOWNERID,
 PORTALTYPE,
 ROLLUPDESCRIPTION,
 SYSTEMMODSTAMP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_USERROLE_src.CASEACCESSFORACCOUNTOWNER,
        EXT_VV_USERROLE_src.CONTACTACCESSFORACCOUNTOWNER,
        EXT_VV_USERROLE_src.DEVELOPERNAME,
        EXT_VV_USERROLE_src.FORECASTUSERID,
        EXT_VV_USERROLE_src.ID,
        EXT_VV_USERROLE_src.LASTMODIFIEDBYID,
        EXT_VV_USERROLE_src.LASTMODIFIEDDATE,
        EXT_VV_USERROLE_src.MAYFORECASTMANAGERSHARE,
        EXT_VV_USERROLE_src.NAME,
        EXT_VV_USERROLE_src.OPPORTUNITYACCESSACCOUNTOWNER,
        EXT_VV_USERROLE_src.PARENTROLEID,
        EXT_VV_USERROLE_src.PORTALACCOUNTID,
        EXT_VV_USERROLE_src.PORTALACCOUNTOWNERID,
        EXT_VV_USERROLE_src.PORTALTYPE,
        EXT_VV_USERROLE_src.ROLLUPDESCRIPTION,
        EXT_VV_USERROLE_src.SYSTEMMODSTAMP,
        EXT_VV_USERROLE_src.batch_id,
        EXT_VV_USERROLE_src.row_id,
        EXT_VV_USERROLE_src.update_ts
 FROM teva_ingestion.EXT_VV_USERROLE_src
 ORDER BY EXT_VV_USERROLE_src.batch_id
SEGMENTED BY hash(EXT_VV_USERROLE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_USERTERRITORY_src_super_b0 /*+basename(EXT_VV_USERTERRITORY_src_super)*/ 
(
 ID,
 ISACTIVE,
 LASTMODIFIEDBYID,
 LASTMODIFIEDDATE,
 SYSTEMMODSTAMP,
 TERRITORYID,
 USERID,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_USERTERRITORY_src.ID,
        EXT_VV_USERTERRITORY_src.ISACTIVE,
        EXT_VV_USERTERRITORY_src.LASTMODIFIEDBYID,
        EXT_VV_USERTERRITORY_src.LASTMODIFIEDDATE,
        EXT_VV_USERTERRITORY_src.SYSTEMMODSTAMP,
        EXT_VV_USERTERRITORY_src.TERRITORYID,
        EXT_VV_USERTERRITORY_src.USERID,
        EXT_VV_USERTERRITORY_src.batch_id,
        EXT_VV_USERTERRITORY_src.row_id,
        EXT_VV_USERTERRITORY_src.update_ts
 FROM teva_ingestion.EXT_VV_USERTERRITORY_src
 ORDER BY EXT_VV_USERTERRITORY_src.batch_id
SEGMENTED BY hash(EXT_VV_USERTERRITORY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.XX_TERR_ID_CHANGE_V_src_super_b0 /*+basename(XX_TERR_ID_CHANGE_V_src_super)*/ 
(
 EE_NBR,
 EE_NAME,
 TERR_ID_FROM,
 TERR_ID_TO,
 TERR_MOVE_DT,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT XX_TERR_ID_CHANGE_V_src.EE_NBR,
        XX_TERR_ID_CHANGE_V_src.EE_NAME,
        XX_TERR_ID_CHANGE_V_src.TERR_ID_FROM,
        XX_TERR_ID_CHANGE_V_src.TERR_ID_TO,
        XX_TERR_ID_CHANGE_V_src.TERR_MOVE_DT,
        XX_TERR_ID_CHANGE_V_src.batch_id,
        XX_TERR_ID_CHANGE_V_src.row_id,
        XX_TERR_ID_CHANGE_V_src.update_ts
 FROM teva_ingestion.XX_TERR_ID_CHANGE_V_src
 ORDER BY XX_TERR_ID_CHANGE_V_src.batch_id
SEGMENTED BY hash(XX_TERR_ID_CHANGE_V_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_time_off_territory_kc_veev_src_super_b0 /*+basename(ext_time_off_territory_kc_veev_src_super)*/ 
(
 ID,
 EVENT_ROW_ID,
 REP_ROW_ID,
 TERRITORY_NUM,
 TIME_OFF_DATE,
 TIME_ON_DATE,
 DESCRIPTION,
 COMMENTS,
 DURATION_IN_MINUTES,
 DURATION_IN_HOURS,
 DURATION_IN_DAYS,
 COMPANY,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_time_off_territory_kc_veev_src.ID,
        ext_time_off_territory_kc_veev_src.EVENT_ROW_ID,
        ext_time_off_territory_kc_veev_src.REP_ROW_ID,
        ext_time_off_territory_kc_veev_src.TERRITORY_NUM,
        ext_time_off_territory_kc_veev_src.TIME_OFF_DATE,
        ext_time_off_territory_kc_veev_src.TIME_ON_DATE,
        ext_time_off_territory_kc_veev_src.DESCRIPTION,
        ext_time_off_territory_kc_veev_src.COMMENTS,
        ext_time_off_territory_kc_veev_src.DURATION_IN_MINUTES,
        ext_time_off_territory_kc_veev_src.DURATION_IN_HOURS,
        ext_time_off_territory_kc_veev_src.DURATION_IN_DAYS,
        ext_time_off_territory_kc_veev_src.COMPANY,
        ext_time_off_territory_kc_veev_src.batch_id,
        ext_time_off_territory_kc_veev_src.row_id,
        ext_time_off_territory_kc_veev_src.update_ts
 FROM teva_ingestion.ext_time_off_territory_kc_veev_src
 ORDER BY ext_time_off_territory_kc_veev_src.batch_id
SEGMENTED BY hash(ext_time_off_territory_kc_veev_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_CALL_PLAN_TC_src_super_b0 /*+basename(EXT_ZS_CALL_PLAN_TC_src_super)*/ 
(
 VEEVA_ACCOUNT_ID,
 TVCMID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 SPECIALTY,
 TERRITORY_NUM,
 ADDRESS,
 CITY,
 STATE,
 ZIP,
 PRODUCT_NAME,
 P1,
 P2,
 P3,
 TARGET,
 SALES_FORCE_ID,
 PERIOD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ZS_CALL_PLAN_TC_src.VEEVA_ACCOUNT_ID,
        EXT_ZS_CALL_PLAN_TC_src.TVCMID,
        EXT_ZS_CALL_PLAN_TC_src.IMS_ID,
        EXT_ZS_CALL_PLAN_TC_src.FIRST_NAME,
        EXT_ZS_CALL_PLAN_TC_src.LAST_NAME,
        EXT_ZS_CALL_PLAN_TC_src.SPECIALTY,
        EXT_ZS_CALL_PLAN_TC_src.TERRITORY_NUM,
        EXT_ZS_CALL_PLAN_TC_src.ADDRESS,
        EXT_ZS_CALL_PLAN_TC_src.CITY,
        EXT_ZS_CALL_PLAN_TC_src.STATE,
        EXT_ZS_CALL_PLAN_TC_src.ZIP,
        EXT_ZS_CALL_PLAN_TC_src.PRODUCT_NAME,
        EXT_ZS_CALL_PLAN_TC_src.P1,
        EXT_ZS_CALL_PLAN_TC_src.P2,
        EXT_ZS_CALL_PLAN_TC_src.P3,
        EXT_ZS_CALL_PLAN_TC_src.TARGET,
        EXT_ZS_CALL_PLAN_TC_src.SALES_FORCE_ID,
        EXT_ZS_CALL_PLAN_TC_src.PERIOD,
        EXT_ZS_CALL_PLAN_TC_src.batch_id,
        EXT_ZS_CALL_PLAN_TC_src.row_id,
        EXT_ZS_CALL_PLAN_TC_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TC_src
 ORDER BY EXT_ZS_CALL_PLAN_TC_src.batch_id
SEGMENTED BY hash(EXT_ZS_CALL_PLAN_TC_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_CALL_PLAN_TN_src_super_b0 /*+basename(EXT_ZS_CALL_PLAN_TN_src_super)*/ 
(
 VEEVA_ACCOUNT_ID,
 TVCMID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 SPECIALTY,
 TERRITORY_NUM,
 ADDRESS,
 CITY,
 STATE,
 ZIP,
 PRODUCT_NAME,
 P1,
 P2,
 P3,
 TARGET,
 SALES_FORCE_ID,
 PERIOD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ZS_CALL_PLAN_TN_src.VEEVA_ACCOUNT_ID,
        EXT_ZS_CALL_PLAN_TN_src.TVCMID,
        EXT_ZS_CALL_PLAN_TN_src.IMS_ID,
        EXT_ZS_CALL_PLAN_TN_src.FIRST_NAME,
        EXT_ZS_CALL_PLAN_TN_src.LAST_NAME,
        EXT_ZS_CALL_PLAN_TN_src.SPECIALTY,
        EXT_ZS_CALL_PLAN_TN_src.TERRITORY_NUM,
        EXT_ZS_CALL_PLAN_TN_src.ADDRESS,
        EXT_ZS_CALL_PLAN_TN_src.CITY,
        EXT_ZS_CALL_PLAN_TN_src.STATE,
        EXT_ZS_CALL_PLAN_TN_src.ZIP,
        EXT_ZS_CALL_PLAN_TN_src.PRODUCT_NAME,
        EXT_ZS_CALL_PLAN_TN_src.P1,
        EXT_ZS_CALL_PLAN_TN_src.P2,
        EXT_ZS_CALL_PLAN_TN_src.P3,
        EXT_ZS_CALL_PLAN_TN_src.TARGET,
        EXT_ZS_CALL_PLAN_TN_src.SALES_FORCE_ID,
        EXT_ZS_CALL_PLAN_TN_src.PERIOD,
        EXT_ZS_CALL_PLAN_TN_src.batch_id,
        EXT_ZS_CALL_PLAN_TN_src.row_id,
        EXT_ZS_CALL_PLAN_TN_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TN_src
 ORDER BY EXT_ZS_CALL_PLAN_TN_src.batch_id
SEGMENTED BY hash(EXT_ZS_CALL_PLAN_TN_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_CALL_PLAN_TP_src_super_b0 /*+basename(EXT_ZS_CALL_PLAN_TP_src_super)*/ 
(
 VEEVA_ACCOUNT_ID,
 TVCMID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 SPECIALTY,
 TERRITORY_NUM,
 ADDRESS,
 CITY,
 STATE,
 ZIP,
 PRODUCT_NAME,
 P1,
 P2,
 P3,
 TARGET,
 SALES_FORCE_ID,
 PERIOD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ZS_CALL_PLAN_TP_src.VEEVA_ACCOUNT_ID,
        EXT_ZS_CALL_PLAN_TP_src.TVCMID,
        EXT_ZS_CALL_PLAN_TP_src.IMS_ID,
        EXT_ZS_CALL_PLAN_TP_src.FIRST_NAME,
        EXT_ZS_CALL_PLAN_TP_src.LAST_NAME,
        EXT_ZS_CALL_PLAN_TP_src.SPECIALTY,
        EXT_ZS_CALL_PLAN_TP_src.TERRITORY_NUM,
        EXT_ZS_CALL_PLAN_TP_src.ADDRESS,
        EXT_ZS_CALL_PLAN_TP_src.CITY,
        EXT_ZS_CALL_PLAN_TP_src.STATE,
        EXT_ZS_CALL_PLAN_TP_src.ZIP,
        EXT_ZS_CALL_PLAN_TP_src.PRODUCT_NAME,
        EXT_ZS_CALL_PLAN_TP_src.P1,
        EXT_ZS_CALL_PLAN_TP_src.P2,
        EXT_ZS_CALL_PLAN_TP_src.P3,
        EXT_ZS_CALL_PLAN_TP_src.TARGET,
        EXT_ZS_CALL_PLAN_TP_src.SALES_FORCE_ID,
        EXT_ZS_CALL_PLAN_TP_src.PERIOD,
        EXT_ZS_CALL_PLAN_TP_src.batch_id,
        EXT_ZS_CALL_PLAN_TP_src.row_id,
        EXT_ZS_CALL_PLAN_TP_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TP_src
 ORDER BY EXT_ZS_CALL_PLAN_TP_src.batch_id
SEGMENTED BY hash(EXT_ZS_CALL_PLAN_TP_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_CALL_PLAN_TR_src_super_b0 /*+basename(EXT_ZS_CALL_PLAN_TR_src_super)*/ 
(
 VEEVA_ACCOUNT_ID,
 TVCMID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 SPECIALTY,
 TERRITORY_NUM,
 ADDRESS,
 CITY,
 STATE,
 ZIP,
 PRODUCT_NAME,
 P1,
 P2,
 P3,
 TARGET,
 SALES_FORCE_ID,
 PERIOD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ZS_CALL_PLAN_TR_src.VEEVA_ACCOUNT_ID,
        EXT_ZS_CALL_PLAN_TR_src.TVCMID,
        EXT_ZS_CALL_PLAN_TR_src.IMS_ID,
        EXT_ZS_CALL_PLAN_TR_src.FIRST_NAME,
        EXT_ZS_CALL_PLAN_TR_src.LAST_NAME,
        EXT_ZS_CALL_PLAN_TR_src.SPECIALTY,
        EXT_ZS_CALL_PLAN_TR_src.TERRITORY_NUM,
        EXT_ZS_CALL_PLAN_TR_src.ADDRESS,
        EXT_ZS_CALL_PLAN_TR_src.CITY,
        EXT_ZS_CALL_PLAN_TR_src.STATE,
        EXT_ZS_CALL_PLAN_TR_src.ZIP,
        EXT_ZS_CALL_PLAN_TR_src.PRODUCT_NAME,
        EXT_ZS_CALL_PLAN_TR_src.P1,
        EXT_ZS_CALL_PLAN_TR_src.P2,
        EXT_ZS_CALL_PLAN_TR_src.P3,
        EXT_ZS_CALL_PLAN_TR_src.TARGET,
        EXT_ZS_CALL_PLAN_TR_src.SALES_FORCE_ID,
        EXT_ZS_CALL_PLAN_TR_src.PERIOD,
        EXT_ZS_CALL_PLAN_TR_src.batch_id,
        EXT_ZS_CALL_PLAN_TR_src.row_id,
        EXT_ZS_CALL_PLAN_TR_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TR_src
 ORDER BY EXT_ZS_CALL_PLAN_TR_src.batch_id
SEGMENTED BY hash(EXT_ZS_CALL_PLAN_TR_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_CALL_PLAN_TW_src_super_b0 /*+basename(EXT_ZS_CALL_PLAN_TW_src_super)*/ 
(
 VEEVA_ACCOUNT_ID,
 TVCMID,
 IMS_ID,
 FIRST_NAME,
 LAST_NAME,
 SPECIALTY,
 TERRITORY_NUM,
 ADDRESS,
 CITY,
 STATE,
 ZIP,
 PRODUCT_NAME,
 P1,
 P2,
 P3,
 TARGET,
 SALES_FORCE_ID,
 PERIOD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ZS_CALL_PLAN_TW_src.VEEVA_ACCOUNT_ID,
        EXT_ZS_CALL_PLAN_TW_src.TVCMID,
        EXT_ZS_CALL_PLAN_TW_src.IMS_ID,
        EXT_ZS_CALL_PLAN_TW_src.FIRST_NAME,
        EXT_ZS_CALL_PLAN_TW_src.LAST_NAME,
        EXT_ZS_CALL_PLAN_TW_src.SPECIALTY,
        EXT_ZS_CALL_PLAN_TW_src.TERRITORY_NUM,
        EXT_ZS_CALL_PLAN_TW_src.ADDRESS,
        EXT_ZS_CALL_PLAN_TW_src.CITY,
        EXT_ZS_CALL_PLAN_TW_src.STATE,
        EXT_ZS_CALL_PLAN_TW_src.ZIP,
        EXT_ZS_CALL_PLAN_TW_src.PRODUCT_NAME,
        EXT_ZS_CALL_PLAN_TW_src.P1,
        EXT_ZS_CALL_PLAN_TW_src.P2,
        EXT_ZS_CALL_PLAN_TW_src.P3,
        EXT_ZS_CALL_PLAN_TW_src.TARGET,
        EXT_ZS_CALL_PLAN_TW_src.SALES_FORCE_ID,
        EXT_ZS_CALL_PLAN_TW_src.PERIOD,
        EXT_ZS_CALL_PLAN_TW_src.batch_id,
        EXT_ZS_CALL_PLAN_TW_src.row_id,
        EXT_ZS_CALL_PLAN_TW_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TW_src
 ORDER BY EXT_ZS_CALL_PLAN_TW_src.batch_id
SEGMENTED BY hash(EXT_ZS_CALL_PLAN_TW_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ONC_MANUAL_FCRS_src_super_b0 /*+basename(EXT_ONC_MANUAL_FCRS_src_super)*/ 
(
 TIME_PERIOD,
 SALES_FORCE_ID,
 TERRITORY_NUM,
 REP_ID,
 CONTACT_DATE,
 DURATION_DAYS,
 SS_OPENING,
 SS_PROBING,
 SS_RESOURCES,
 SS_COMMITMENT,
 SS_TRANSITIONING,
 SS_ACUMEN,
 ARCHIVE_FLAG,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_ONC_MANUAL_FCRS_src.TIME_PERIOD,
        EXT_ONC_MANUAL_FCRS_src.SALES_FORCE_ID,
        EXT_ONC_MANUAL_FCRS_src.TERRITORY_NUM,
        EXT_ONC_MANUAL_FCRS_src.REP_ID,
        EXT_ONC_MANUAL_FCRS_src.CONTACT_DATE,
        EXT_ONC_MANUAL_FCRS_src.DURATION_DAYS,
        EXT_ONC_MANUAL_FCRS_src.SS_OPENING,
        EXT_ONC_MANUAL_FCRS_src.SS_PROBING,
        EXT_ONC_MANUAL_FCRS_src.SS_RESOURCES,
        EXT_ONC_MANUAL_FCRS_src.SS_COMMITMENT,
        EXT_ONC_MANUAL_FCRS_src.SS_TRANSITIONING,
        EXT_ONC_MANUAL_FCRS_src.SS_ACUMEN,
        EXT_ONC_MANUAL_FCRS_src.ARCHIVE_FLAG,
        EXT_ONC_MANUAL_FCRS_src.batch_id,
        EXT_ONC_MANUAL_FCRS_src.row_id,
        EXT_ONC_MANUAL_FCRS_src.update_ts
 FROM teva_ingestion.EXT_ONC_MANUAL_FCRS_src
 ORDER BY EXT_ONC_MANUAL_FCRS_src.batch_id
SEGMENTED BY hash(EXT_ONC_MANUAL_FCRS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DDD_445_CALENDAR_src_super_b0 /*+basename(EXT_DDD_445_CALENDAR_src_super)*/ 
(
 START_DATE,
 END_DATE,
 PERIOD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DDD_445_CALENDAR_src.START_DATE,
        EXT_DDD_445_CALENDAR_src.END_DATE,
        EXT_DDD_445_CALENDAR_src.PERIOD,
        EXT_DDD_445_CALENDAR_src.batch_id,
        EXT_DDD_445_CALENDAR_src.row_id,
        EXT_DDD_445_CALENDAR_src.update_ts
 FROM teva_ingestion.EXT_DDD_445_CALENDAR_src
 ORDER BY EXT_DDD_445_CALENDAR_src.batch_id
SEGMENTED BY hash(EXT_DDD_445_CALENDAR_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.tvcmid_hcp_demo_src_super_b0 /*+basename(tvcmid_hcp_demo_src_super)*/ 
(
 TVCMID,
 IMS_HCE_ID,
 IMS_ID,
 NPI,
 LAST_NAME,
 FIRST_NAME,
 MIDDLE_NAME,
 PERSONAL_SUFFIX,
 MEDICAL_SUFFIX,
 PRIMARY_SPECIALTY,
 ADDRESS_LINE1,
 ADDRESS_LINE2,
 CITY,
 STATE,
 ZIP,
 C_BO_HCE_ADDRESS__ADDRESS_ID,
 LEGACY_ADDRESS_ID,
 BUSINESS_PHONE,
 BUSINESS_EMAIL,
 HCE_STATUS_DESC,
 NP_PA_FLAG,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT tvcmid_hcp_demo_src.TVCMID,
        tvcmid_hcp_demo_src.IMS_HCE_ID,
        tvcmid_hcp_demo_src.IMS_ID,
        tvcmid_hcp_demo_src.NPI,
        tvcmid_hcp_demo_src.LAST_NAME,
        tvcmid_hcp_demo_src.FIRST_NAME,
        tvcmid_hcp_demo_src.MIDDLE_NAME,
        tvcmid_hcp_demo_src.PERSONAL_SUFFIX,
        tvcmid_hcp_demo_src.MEDICAL_SUFFIX,
        tvcmid_hcp_demo_src.PRIMARY_SPECIALTY,
        tvcmid_hcp_demo_src.ADDRESS_LINE1,
        tvcmid_hcp_demo_src.ADDRESS_LINE2,
        tvcmid_hcp_demo_src.CITY,
        tvcmid_hcp_demo_src.STATE,
        tvcmid_hcp_demo_src.ZIP,
        tvcmid_hcp_demo_src.C_BO_HCE_ADDRESS__ADDRESS_ID,
        tvcmid_hcp_demo_src.LEGACY_ADDRESS_ID,
        tvcmid_hcp_demo_src.BUSINESS_PHONE,
        tvcmid_hcp_demo_src.BUSINESS_EMAIL,
        tvcmid_hcp_demo_src.HCE_STATUS_DESC,
        tvcmid_hcp_demo_src.NP_PA_FLAG,
        tvcmid_hcp_demo_src.batch_id,
        tvcmid_hcp_demo_src.row_id,
        tvcmid_hcp_demo_src.update_ts
 FROM teva_ingestion.tvcmid_hcp_demo_src
 ORDER BY tvcmid_hcp_demo_src.batch_id
SEGMENTED BY hash(tvcmid_hcp_demo_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_hcos_ddd_xfer_src_super_b0 /*+basename(ext_hcos_ddd_xfer_src_super)*/ 
(
 IMS_ORG_ID,
 HCE_ID_PRFSNL,
 PROFESSIONAL_ID,
 IDENTIFIER_ID,
 IDENTIFIER,
 IDENTIFIER_ORDER,
 IDENTIFIER_CATEGORY,
 IDENTIFIER_STATE,
 SRC_STRT_DT,
 SRC_TRMTN_DT,
 SRC_TRMTN_CD,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_hcos_ddd_xfer_src.IMS_ORG_ID,
        ext_hcos_ddd_xfer_src.HCE_ID_PRFSNL,
        ext_hcos_ddd_xfer_src.PROFESSIONAL_ID,
        ext_hcos_ddd_xfer_src.IDENTIFIER_ID,
        ext_hcos_ddd_xfer_src.IDENTIFIER,
        ext_hcos_ddd_xfer_src.IDENTIFIER_ORDER,
        ext_hcos_ddd_xfer_src.IDENTIFIER_CATEGORY,
        ext_hcos_ddd_xfer_src.IDENTIFIER_STATE,
        ext_hcos_ddd_xfer_src.SRC_STRT_DT,
        ext_hcos_ddd_xfer_src.SRC_TRMTN_DT,
        ext_hcos_ddd_xfer_src.SRC_TRMTN_CD,
        ext_hcos_ddd_xfer_src.batch_id,
        ext_hcos_ddd_xfer_src.row_id,
        ext_hcos_ddd_xfer_src.update_ts
 FROM teva_ingestion.ext_hcos_ddd_xfer_src
 ORDER BY ext_hcos_ddd_xfer_src.batch_id
SEGMENTED BY hash(ext_hcos_ddd_xfer_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_tw_biologics_dispense_src_super_b0 /*+basename(ext_tw_biologics_dispense_src_super)*/ 
(
 SP_ID,
 HUB_ID,
 PAYOR,
 PAYOR_TYPE,
 COPAY,
 INVOICE_NUMBER,
 PHYSICIAN_NPI,
 PHYSICIAN_NAME,
 PHYSICIAN_ORG,
 SHIP_DATE,
 SHIP_NUM,
 REPLACEMENT_FLAG,
 MEDICAID_RETURN_DATE,
 SELF_PAY_REFUND_DATE,
 SHIP_ADDRESS,
 SHIP_CITY,
 SHIP_STATE,
 SHIP_ZIP,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_tw_biologics_dispense_src.SP_ID,
        ext_tw_biologics_dispense_src.HUB_ID,
        ext_tw_biologics_dispense_src.PAYOR,
        ext_tw_biologics_dispense_src.PAYOR_TYPE,
        ext_tw_biologics_dispense_src.COPAY,
        ext_tw_biologics_dispense_src.INVOICE_NUMBER,
        ext_tw_biologics_dispense_src.PHYSICIAN_NPI,
        ext_tw_biologics_dispense_src.PHYSICIAN_NAME,
        ext_tw_biologics_dispense_src.PHYSICIAN_ORG,
        ext_tw_biologics_dispense_src.SHIP_DATE,
        ext_tw_biologics_dispense_src.SHIP_NUM,
        ext_tw_biologics_dispense_src.REPLACEMENT_FLAG,
        ext_tw_biologics_dispense_src.MEDICAID_RETURN_DATE,
        ext_tw_biologics_dispense_src.SELF_PAY_REFUND_DATE,
        ext_tw_biologics_dispense_src.SHIP_ADDRESS,
        ext_tw_biologics_dispense_src.SHIP_CITY,
        ext_tw_biologics_dispense_src.SHIP_STATE,
        ext_tw_biologics_dispense_src.SHIP_ZIP,
        ext_tw_biologics_dispense_src.batch_id,
        ext_tw_biologics_dispense_src.row_id,
        ext_tw_biologics_dispense_src.update_ts
 FROM teva_ingestion.ext_tw_biologics_dispense_src
 ORDER BY ext_tw_biologics_dispense_src.batch_id
SEGMENTED BY hash(ext_tw_biologics_dispense_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_tw_biologics_referral_src_super_b0 /*+basename(ext_tw_biologics_referral_src_super)*/ 
(
 PATIENT_CREATE_DATE,
 MRN,
 PH_NPI,
 PHYSICIAN,
 REFERRAL_TYPE,
 PH_SPEC,
 PH_ORG,
 PH_ADDRESS,
 PH_CITY,
 PH_STATE,
 PH_ZIP,
 PH_PHONE,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_tw_biologics_referral_src.PATIENT_CREATE_DATE,
        ext_tw_biologics_referral_src.MRN,
        ext_tw_biologics_referral_src.PH_NPI,
        ext_tw_biologics_referral_src.PHYSICIAN,
        ext_tw_biologics_referral_src.REFERRAL_TYPE,
        ext_tw_biologics_referral_src.PH_SPEC,
        ext_tw_biologics_referral_src.PH_ORG,
        ext_tw_biologics_referral_src.PH_ADDRESS,
        ext_tw_biologics_referral_src.PH_CITY,
        ext_tw_biologics_referral_src.PH_STATE,
        ext_tw_biologics_referral_src.PH_ZIP,
        ext_tw_biologics_referral_src.PH_PHONE,
        ext_tw_biologics_referral_src.batch_id,
        ext_tw_biologics_referral_src.row_id,
        ext_tw_biologics_referral_src.update_ts
 FROM teva_ingestion.ext_tw_biologics_referral_src
 ORDER BY ext_tw_biologics_referral_src.batch_id
SEGMENTED BY hash(ext_tw_biologics_referral_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.ext_diplomat_rx_src_super_b0 /*+basename(ext_diplomat_rx_src_super)*/ 
(
 SPECIALTY_PHARMACY_NAME,
 SUB_SPECIALTY_PHARMACY_NAME,
 SPECIALTY_PHARMACY_HUB_ID,
 PHARMACY_NPI,
 NCPDP,
 PHARMACY_STORE_NUMBER,
 PHARMACY_ADDRESS_1,
 PHARMACY_ADDRESS_2,
 PHARMACY_CITY,
 PHARMACY_STATE,
 PHARMACY_ZIP,
 PHARMACY_PHONE,
 PHARMACY_FAX,
 DSP_PATIENT_ID,
 GENDER,
 AGE,
 PATIENT_STATE,
 PRIMARY_ICD9,
 SECONDARY_ICD9,
 PRESCRIBER_NPI,
 PRESCRIBER_DEA,
 PRESCRIBER_HUB_ID,
 PRESCRIBER_NAME_FIRST,
 PRESCIBER_NAME_LAST,
 PRESCRIBER_ADDRESS_1,
 PRESCRIBER_ADDRESS_2,
 PRESCRIBER_CITY,
 PRESCRIBER_STATE,
 PRESCRIBER_ZIP,
 PRESCRIBER_PHONE,
 PRESCRIBER_FAX,
 DRUG_NAME,
 DRUG_NDC_11,
 DRUG_STRENGTH,
 DRUG_FORM,
 PACKAGE_SIZE,
 DOSE_FORM,
 RX_NBR,
 REFILL_NUMBER,
 RX_REFILLS_WRITTEN,
 DISPENSE_QTY,
 DAYS_SUPPLY,
 RX_WRITTEN_DATE,
 RX_RECEIPT_DATE,
 FILL_DATE,
 RX_TYPE,
 COPAY,
 INGREDIENT_WAC_COST,
 TOTAL_PRICE_PAID,
 PRIMARY_PLAN_NAME,
 PRIMARY_BIN,
 PRIMARY_PCN,
 SECONDARY_PLAN_NAME,
 SECONDARY_BIN,
 SECONDARY_PCN,
 TERTIARY_PLAN_NAME,
 TERTIARY_BIN,
 TERTIARY_PCN,
 SHIP_DATE,
 SHIPPING_CARRIER,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT ext_diplomat_rx_src.SPECIALTY_PHARMACY_NAME,
        ext_diplomat_rx_src.SUB_SPECIALTY_PHARMACY_NAME,
        ext_diplomat_rx_src.SPECIALTY_PHARMACY_HUB_ID,
        ext_diplomat_rx_src.PHARMACY_NPI,
        ext_diplomat_rx_src.NCPDP,
        ext_diplomat_rx_src.PHARMACY_STORE_NUMBER,
        ext_diplomat_rx_src.PHARMACY_ADDRESS_1,
        ext_diplomat_rx_src.PHARMACY_ADDRESS_2,
        ext_diplomat_rx_src.PHARMACY_CITY,
        ext_diplomat_rx_src.PHARMACY_STATE,
        ext_diplomat_rx_src.PHARMACY_ZIP,
        ext_diplomat_rx_src.PHARMACY_PHONE,
        ext_diplomat_rx_src.PHARMACY_FAX,
        ext_diplomat_rx_src.DSP_PATIENT_ID,
        ext_diplomat_rx_src.GENDER,
        ext_diplomat_rx_src.AGE,
        ext_diplomat_rx_src.PATIENT_STATE,
        ext_diplomat_rx_src.PRIMARY_ICD9,
        ext_diplomat_rx_src.SECONDARY_ICD9,
        ext_diplomat_rx_src.PRESCRIBER_NPI,
        ext_diplomat_rx_src.PRESCRIBER_DEA,
        ext_diplomat_rx_src.PRESCRIBER_HUB_ID,
        ext_diplomat_rx_src.PRESCRIBER_NAME_FIRST,
        ext_diplomat_rx_src.PRESCIBER_NAME_LAST,
        ext_diplomat_rx_src.PRESCRIBER_ADDRESS_1,
        ext_diplomat_rx_src.PRESCRIBER_ADDRESS_2,
        ext_diplomat_rx_src.PRESCRIBER_CITY,
        ext_diplomat_rx_src.PRESCRIBER_STATE,
        ext_diplomat_rx_src.PRESCRIBER_ZIP,
        ext_diplomat_rx_src.PRESCRIBER_PHONE,
        ext_diplomat_rx_src.PRESCRIBER_FAX,
        ext_diplomat_rx_src.DRUG_NAME,
        ext_diplomat_rx_src.DRUG_NDC_11,
        ext_diplomat_rx_src.DRUG_STRENGTH,
        ext_diplomat_rx_src.DRUG_FORM,
        ext_diplomat_rx_src.PACKAGE_SIZE,
        ext_diplomat_rx_src.DOSE_FORM,
        ext_diplomat_rx_src.RX_NBR,
        ext_diplomat_rx_src.REFILL_NUMBER,
        ext_diplomat_rx_src.RX_REFILLS_WRITTEN,
        ext_diplomat_rx_src.DISPENSE_QTY,
        ext_diplomat_rx_src.DAYS_SUPPLY,
        ext_diplomat_rx_src.RX_WRITTEN_DATE,
        ext_diplomat_rx_src.RX_RECEIPT_DATE,
        ext_diplomat_rx_src.FILL_DATE,
        ext_diplomat_rx_src.RX_TYPE,
        ext_diplomat_rx_src.COPAY,
        ext_diplomat_rx_src.INGREDIENT_WAC_COST,
        ext_diplomat_rx_src.TOTAL_PRICE_PAID,
        ext_diplomat_rx_src.PRIMARY_PLAN_NAME,
        ext_diplomat_rx_src.PRIMARY_BIN,
        ext_diplomat_rx_src.PRIMARY_PCN,
        ext_diplomat_rx_src.SECONDARY_PLAN_NAME,
        ext_diplomat_rx_src.SECONDARY_BIN,
        ext_diplomat_rx_src.SECONDARY_PCN,
        ext_diplomat_rx_src.TERTIARY_PLAN_NAME,
        ext_diplomat_rx_src.TERTIARY_BIN,
        ext_diplomat_rx_src.TERTIARY_PCN,
        ext_diplomat_rx_src.SHIP_DATE,
        ext_diplomat_rx_src.SHIPPING_CARRIER,
        ext_diplomat_rx_src.batch_id,
        ext_diplomat_rx_src.row_id,
        ext_diplomat_rx_src.update_ts
 FROM teva_ingestion.ext_diplomat_rx_src
 ORDER BY ext_diplomat_rx_src.batch_id
SEGMENTED BY hash(ext_diplomat_rx_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_TW_ICS_ACCOUNT_src_super_b0 /*+basename(EXT_TW_ICS_ACCOUNT_src_super)*/ 
(
 PARENT_BP_CODE,
 PARENT_BP_NAME,
 ALT_ID,
 TAX_ID,
 ADDRESS,
 CITY,
 ZIP_CODE,
 STATE,
 PHONE,
 FAX,
 EMAIL,
 INVOICE_TO_BP_TYPE_CODE,
 BP_CODE,
 BP_NAME,
 BILL_TO_TAX_ID,
 BILL_TO_ADDRESS,
 BILL_TO_CITY,
 BILL_TO_ZIP_CODE,
 BILL_TO_STATE,
 BILL_TO_PHONE,
 BILL_TO_FAX,
 BILL_TO_EMAIL,
 DEA_LICENSE_NUM,
 HIN_NUM,
 CUSTOMER_340B,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_TW_ICS_ACCOUNT_src.PARENT_BP_CODE,
        EXT_TW_ICS_ACCOUNT_src.PARENT_BP_NAME,
        EXT_TW_ICS_ACCOUNT_src.ALT_ID,
        EXT_TW_ICS_ACCOUNT_src.TAX_ID,
        EXT_TW_ICS_ACCOUNT_src.ADDRESS,
        EXT_TW_ICS_ACCOUNT_src.CITY,
        EXT_TW_ICS_ACCOUNT_src.ZIP_CODE,
        EXT_TW_ICS_ACCOUNT_src.STATE,
        EXT_TW_ICS_ACCOUNT_src.PHONE,
        EXT_TW_ICS_ACCOUNT_src.FAX,
        EXT_TW_ICS_ACCOUNT_src.EMAIL,
        EXT_TW_ICS_ACCOUNT_src.INVOICE_TO_BP_TYPE_CODE,
        EXT_TW_ICS_ACCOUNT_src.BP_CODE,
        EXT_TW_ICS_ACCOUNT_src.BP_NAME,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_TAX_ID,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_ADDRESS,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_CITY,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_ZIP_CODE,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_STATE,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_PHONE,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_FAX,
        EXT_TW_ICS_ACCOUNT_src.BILL_TO_EMAIL,
        EXT_TW_ICS_ACCOUNT_src.DEA_LICENSE_NUM,
        EXT_TW_ICS_ACCOUNT_src.HIN_NUM,
        EXT_TW_ICS_ACCOUNT_src.CUSTOMER_340B,
        EXT_TW_ICS_ACCOUNT_src.batch_id,
        EXT_TW_ICS_ACCOUNT_src.row_id,
        EXT_TW_ICS_ACCOUNT_src.update_ts
 FROM teva_ingestion.EXT_TW_ICS_ACCOUNT_src
 ORDER BY EXT_TW_ICS_ACCOUNT_src.batch_id
SEGMENTED BY hash(EXT_TW_ICS_ACCOUNT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_BING_ADS_src_super_b0 /*+basename(EXT_BING_ADS_src_super)*/ 
(
 gregorian_date,
 account_name,
 campaign_name,
 ad_group,
 keyword,
 bid_match_type,
 ad_distribution,
 current_maximum_cpc,
 quality_score,
 impressions,
 clicks,
 ctr_percent,
 average_cpc,
 spend,
 avg_position,
 conversions,
 conversion_rate_percent,
 cpa,
 account_id,
 account_number,
 account_status,
 ad_group_id,
 ad_group_status,
 ad_id,
 landing_page_relevance,
 ad_type,
 final_app_url,
 bid_strategy_type,
 business_category,
 business_category_id,
 business_listing,
 business_listing_id,
 campaign_id,
 campaign_status,
 currency_code,
 custom_parameters,
 customer,
 customer_name,
 delivered_match_type,
 destination_url,
 device_os,
 device_type,
 keyword_relevance,
 final_url,
 keyword_id,
 keyword_match_type_id,
 keyword_status,
 landing_page_user_experience,
 language,
 final_mobile_url,
 network,
 pricing_method,
 quality_impact,
 top_vs_other,
 tracking_template,
 historic_quality_score,
 historic_keyword_relevance,
 historic_landing_page_relevance,
 historic_landing_page_user_experience,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_BING_ADS_src.gregorian_date,
        EXT_BING_ADS_src.account_name,
        EXT_BING_ADS_src.campaign_name,
        EXT_BING_ADS_src.ad_group,
        EXT_BING_ADS_src.keyword,
        EXT_BING_ADS_src.bid_match_type,
        EXT_BING_ADS_src.ad_distribution,
        EXT_BING_ADS_src.current_maximum_cpc,
        EXT_BING_ADS_src.quality_score,
        EXT_BING_ADS_src.impressions,
        EXT_BING_ADS_src.clicks,
        EXT_BING_ADS_src.ctr_percent,
        EXT_BING_ADS_src.average_cpc,
        EXT_BING_ADS_src.spend,
        EXT_BING_ADS_src.avg_position,
        EXT_BING_ADS_src.conversions,
        EXT_BING_ADS_src.conversion_rate_percent,
        EXT_BING_ADS_src.cpa,
        EXT_BING_ADS_src.account_id,
        EXT_BING_ADS_src.account_number,
        EXT_BING_ADS_src.account_status,
        EXT_BING_ADS_src.ad_group_id,
        EXT_BING_ADS_src.ad_group_status,
        EXT_BING_ADS_src.ad_id,
        EXT_BING_ADS_src.landing_page_relevance,
        EXT_BING_ADS_src.ad_type,
        EXT_BING_ADS_src.final_app_url,
        EXT_BING_ADS_src.bid_strategy_type,
        EXT_BING_ADS_src.business_category,
        EXT_BING_ADS_src.business_category_id,
        EXT_BING_ADS_src.business_listing,
        EXT_BING_ADS_src.business_listing_id,
        EXT_BING_ADS_src.campaign_id,
        EXT_BING_ADS_src.campaign_status,
        EXT_BING_ADS_src.currency_code,
        EXT_BING_ADS_src.custom_parameters,
        EXT_BING_ADS_src.customer,
        EXT_BING_ADS_src.customer_name,
        EXT_BING_ADS_src.delivered_match_type,
        EXT_BING_ADS_src.destination_url,
        EXT_BING_ADS_src.device_os,
        EXT_BING_ADS_src.device_type,
        EXT_BING_ADS_src.keyword_relevance,
        EXT_BING_ADS_src.final_url,
        EXT_BING_ADS_src.keyword_id,
        EXT_BING_ADS_src.keyword_match_type_id,
        EXT_BING_ADS_src.keyword_status,
        EXT_BING_ADS_src.landing_page_user_experience,
        EXT_BING_ADS_src.language,
        EXT_BING_ADS_src.final_mobile_url,
        EXT_BING_ADS_src.network,
        EXT_BING_ADS_src.pricing_method,
        EXT_BING_ADS_src.quality_impact,
        EXT_BING_ADS_src.top_vs_other,
        EXT_BING_ADS_src.tracking_template,
        EXT_BING_ADS_src.historic_quality_score,
        EXT_BING_ADS_src.historic_keyword_relevance,
        EXT_BING_ADS_src.historic_landing_page_relevance,
        EXT_BING_ADS_src.historic_landing_page_user_experience,
        EXT_BING_ADS_src.batch_id,
        EXT_BING_ADS_src.row_id,
        EXT_BING_ADS_src.update_ts
 FROM teva_ingestion.EXT_BING_ADS_src
 ORDER BY EXT_BING_ADS_src.batch_id
SEGMENTED BY hash(EXT_BING_ADS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DA_BROADCAST_DATA_src_super_b0 /*+basename(EXT_DA_BROADCAST_DATA_src_super)*/ 
(
 date,
 week_of,
 day,
 network,
 "time",
 program,
 length,
 isci_code,
 net_dollars,
 wm1834_imps,
 wm1834_grps,
 national_tv_spend_acutalized,
 national_tv_spend_planned,
 radio_spend_total,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DA_BROADCAST_DATA_src.date,
        EXT_DA_BROADCAST_DATA_src.week_of,
        EXT_DA_BROADCAST_DATA_src.day,
        EXT_DA_BROADCAST_DATA_src.network,
        EXT_DA_BROADCAST_DATA_src."time",
        EXT_DA_BROADCAST_DATA_src.program,
        EXT_DA_BROADCAST_DATA_src.length,
        EXT_DA_BROADCAST_DATA_src.isci_code,
        EXT_DA_BROADCAST_DATA_src.net_dollars,
        EXT_DA_BROADCAST_DATA_src.wm1834_imps,
        EXT_DA_BROADCAST_DATA_src.wm1834_grps,
        EXT_DA_BROADCAST_DATA_src.national_tv_spend_acutalized,
        EXT_DA_BROADCAST_DATA_src.national_tv_spend_planned,
        EXT_DA_BROADCAST_DATA_src.radio_spend_total,
        EXT_DA_BROADCAST_DATA_src.batch_id,
        EXT_DA_BROADCAST_DATA_src.row_id,
        EXT_DA_BROADCAST_DATA_src.update_ts
 FROM teva_ingestion.EXT_DA_BROADCAST_DATA_src
 ORDER BY EXT_DA_BROADCAST_DATA_src.batch_id
SEGMENTED BY hash(EXT_DA_BROADCAST_DATA_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DA_DIGITAL_SPEND_DATA_src_super_b0 /*+basename(EXT_DA_DIGITAL_SPEND_DATA_src_super)*/ 
(
 advertiser_code,
 ad_server_client,
 ad_server_client_name,
 ad_server_publisher_code,
 ad_server_publisher_name,
 advertiser_business_key,
 advertiser_name,
 agency_location,
 buy_category,
 buy_type,
 campaign_name,
 cost_method,
 creative_type,
 dimension,
 end_date,
 location,
 media_code,
 media_name,
 month_of_service,
 package_type,
 placement_ad_server,
 placement_ad_server_instance,
 placement_end_date,
 placement_name,
 placement_number,
 placement_positioning,
 served_by,
 placement_site_name,
 placement_start_date,
 placement_type,
 placement_user,
 product_business_key,
 product_code,
 product_name,
 public_id,
 rich_media_accepted,
 rich_media_included_in_rate,
 supplier_business_key,
 start_date,
 supplier_code,
 supplier_name,
 unit_type,
 ad_server_campaign_id,
 ad_server_placement_id,
 package_group_id,
 package_group_name,
 estimate_business_key,
 estimate_code,
 estimate_name,
 estimate_end_date,
 estimate_start_date,
 third_party_actions,
 third_party_clicks,
 third_party_delivered_cost,
 third_party_impressions,
 third_party_delivered_units,
 planned_actions,
 planned_amount,
 planned_clicks,
 planned_impressions,
 rate,
 measurable_impression,
 viewable_impressions,
 eligible_impressions,
 first_party_impressions,
 planned_units,
 planned_units_2,
 ordered,
 approved_amount,
 inventory_type,
 order_id,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DA_DIGITAL_SPEND_DATA_src.advertiser_code,
        EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_client,
        EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_client_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_publisher_code,
        EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_publisher_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.advertiser_business_key,
        EXT_DA_DIGITAL_SPEND_DATA_src.advertiser_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.agency_location,
        EXT_DA_DIGITAL_SPEND_DATA_src.buy_category,
        EXT_DA_DIGITAL_SPEND_DATA_src.buy_type,
        EXT_DA_DIGITAL_SPEND_DATA_src.campaign_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.cost_method,
        EXT_DA_DIGITAL_SPEND_DATA_src.creative_type,
        EXT_DA_DIGITAL_SPEND_DATA_src.dimension,
        EXT_DA_DIGITAL_SPEND_DATA_src.end_date,
        EXT_DA_DIGITAL_SPEND_DATA_src.location,
        EXT_DA_DIGITAL_SPEND_DATA_src.media_code,
        EXT_DA_DIGITAL_SPEND_DATA_src.media_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.month_of_service,
        EXT_DA_DIGITAL_SPEND_DATA_src.package_type,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_ad_server,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_ad_server_instance,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_end_date,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_number,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_positioning,
        EXT_DA_DIGITAL_SPEND_DATA_src.served_by,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_site_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_start_date,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_type,
        EXT_DA_DIGITAL_SPEND_DATA_src.placement_user,
        EXT_DA_DIGITAL_SPEND_DATA_src.product_business_key,
        EXT_DA_DIGITAL_SPEND_DATA_src.product_code,
        EXT_DA_DIGITAL_SPEND_DATA_src.product_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.public_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.rich_media_accepted,
        EXT_DA_DIGITAL_SPEND_DATA_src.rich_media_included_in_rate,
        EXT_DA_DIGITAL_SPEND_DATA_src.supplier_business_key,
        EXT_DA_DIGITAL_SPEND_DATA_src.start_date,
        EXT_DA_DIGITAL_SPEND_DATA_src.supplier_code,
        EXT_DA_DIGITAL_SPEND_DATA_src.supplier_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.unit_type,
        EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_campaign_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_placement_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.package_group_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.package_group_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.estimate_business_key,
        EXT_DA_DIGITAL_SPEND_DATA_src.estimate_code,
        EXT_DA_DIGITAL_SPEND_DATA_src.estimate_name,
        EXT_DA_DIGITAL_SPEND_DATA_src.estimate_end_date,
        EXT_DA_DIGITAL_SPEND_DATA_src.estimate_start_date,
        EXT_DA_DIGITAL_SPEND_DATA_src.third_party_actions,
        EXT_DA_DIGITAL_SPEND_DATA_src.third_party_clicks,
        EXT_DA_DIGITAL_SPEND_DATA_src.third_party_delivered_cost,
        EXT_DA_DIGITAL_SPEND_DATA_src.third_party_impressions,
        EXT_DA_DIGITAL_SPEND_DATA_src.third_party_delivered_units,
        EXT_DA_DIGITAL_SPEND_DATA_src.planned_actions,
        EXT_DA_DIGITAL_SPEND_DATA_src.planned_amount,
        EXT_DA_DIGITAL_SPEND_DATA_src.planned_clicks,
        EXT_DA_DIGITAL_SPEND_DATA_src.planned_impressions,
        EXT_DA_DIGITAL_SPEND_DATA_src.rate,
        EXT_DA_DIGITAL_SPEND_DATA_src.measurable_impression,
        EXT_DA_DIGITAL_SPEND_DATA_src.viewable_impressions,
        EXT_DA_DIGITAL_SPEND_DATA_src.eligible_impressions,
        EXT_DA_DIGITAL_SPEND_DATA_src.first_party_impressions,
        EXT_DA_DIGITAL_SPEND_DATA_src.planned_units,
        EXT_DA_DIGITAL_SPEND_DATA_src.planned_units_2,
        EXT_DA_DIGITAL_SPEND_DATA_src.ordered,
        EXT_DA_DIGITAL_SPEND_DATA_src.approved_amount,
        EXT_DA_DIGITAL_SPEND_DATA_src.inventory_type,
        EXT_DA_DIGITAL_SPEND_DATA_src.order_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.batch_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.row_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.update_ts
 FROM teva_ingestion.EXT_DA_DIGITAL_SPEND_DATA_src
 ORDER BY EXT_DA_DIGITAL_SPEND_DATA_src.batch_id
SEGMENTED BY hash(EXT_DA_DIGITAL_SPEND_DATA_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DA_PRINT_SPEND_DATA_src_super_b0 /*+basename(EXT_DA_PRINT_SPEND_DATA_src_super)*/ 
(
 advertiser_name,
 brand_name,
 media_billing_estimate,
 media_type_code,
 publisher_identifier,
 publisher_name,
 order_start_date,
 order_close_date,
 monthly_total_cost,
 number_of_insertions,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DA_PRINT_SPEND_DATA_src.advertiser_name,
        EXT_DA_PRINT_SPEND_DATA_src.brand_name,
        EXT_DA_PRINT_SPEND_DATA_src.media_billing_estimate,
        EXT_DA_PRINT_SPEND_DATA_src.media_type_code,
        EXT_DA_PRINT_SPEND_DATA_src.publisher_identifier,
        EXT_DA_PRINT_SPEND_DATA_src.publisher_name,
        EXT_DA_PRINT_SPEND_DATA_src.order_start_date,
        EXT_DA_PRINT_SPEND_DATA_src.order_close_date,
        EXT_DA_PRINT_SPEND_DATA_src.monthly_total_cost,
        EXT_DA_PRINT_SPEND_DATA_src.number_of_insertions,
        EXT_DA_PRINT_SPEND_DATA_src.batch_id,
        EXT_DA_PRINT_SPEND_DATA_src.row_id,
        EXT_DA_PRINT_SPEND_DATA_src.update_ts
 FROM teva_ingestion.EXT_DA_PRINT_SPEND_DATA_src
 ORDER BY EXT_DA_PRINT_SPEND_DATA_src.batch_id
SEGMENTED BY hash(EXT_DA_PRINT_SPEND_DATA_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DOUBLECLICK_DCM_src_super_b0 /*+basename(EXT_DOUBLECLICK_DCM_src_super)*/ 
(
 advertiser_id,
 advertiser_name,
 brand,
 target_audience,
 campaign_id,
 campaign_name,
 session_date,
 partner_site_id,
 partner_site_name,
 package_id,
 package_name,
 placement_id,
 placement_name,
 placement_pixel_size,
 placement_cost_structure,
 ad_id,
 ad_name,
 ad_type,
 creative_id,
 creative_name,
 creative_type,
 device_type,
 device_browser,
 click_thru_url,
 activity_group_id,
 activity_group_name,
 activity_id,
 activity_name,
 impressions,
 clicks,
 media_cost,
 total_conversions,
 click_thru_conversions,
 view_thru_conversions,
 conversion_id,
 keyword_id,
 user_id,
 country,
 state_region,
 city_id,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DOUBLECLICK_DCM_src.advertiser_id,
        EXT_DOUBLECLICK_DCM_src.advertiser_name,
        EXT_DOUBLECLICK_DCM_src.brand,
        EXT_DOUBLECLICK_DCM_src.target_audience,
        EXT_DOUBLECLICK_DCM_src.campaign_id,
        EXT_DOUBLECLICK_DCM_src.campaign_name,
        EXT_DOUBLECLICK_DCM_src.session_date,
        EXT_DOUBLECLICK_DCM_src.partner_site_id,
        EXT_DOUBLECLICK_DCM_src.partner_site_name,
        EXT_DOUBLECLICK_DCM_src.package_id,
        EXT_DOUBLECLICK_DCM_src.package_name,
        EXT_DOUBLECLICK_DCM_src.placement_id,
        EXT_DOUBLECLICK_DCM_src.placement_name,
        EXT_DOUBLECLICK_DCM_src.placement_pixel_size,
        EXT_DOUBLECLICK_DCM_src.placement_cost_structure,
        EXT_DOUBLECLICK_DCM_src.ad_id,
        EXT_DOUBLECLICK_DCM_src.ad_name,
        EXT_DOUBLECLICK_DCM_src.ad_type,
        EXT_DOUBLECLICK_DCM_src.creative_id,
        EXT_DOUBLECLICK_DCM_src.creative_name,
        EXT_DOUBLECLICK_DCM_src.creative_type,
        EXT_DOUBLECLICK_DCM_src.device_type,
        EXT_DOUBLECLICK_DCM_src.device_browser,
        EXT_DOUBLECLICK_DCM_src.click_thru_url,
        EXT_DOUBLECLICK_DCM_src.activity_group_id,
        EXT_DOUBLECLICK_DCM_src.activity_group_name,
        EXT_DOUBLECLICK_DCM_src.activity_id,
        EXT_DOUBLECLICK_DCM_src.activity_name,
        EXT_DOUBLECLICK_DCM_src.impressions,
        EXT_DOUBLECLICK_DCM_src.clicks,
        EXT_DOUBLECLICK_DCM_src.media_cost,
        EXT_DOUBLECLICK_DCM_src.total_conversions,
        EXT_DOUBLECLICK_DCM_src.click_thru_conversions,
        EXT_DOUBLECLICK_DCM_src.view_thru_conversions,
        EXT_DOUBLECLICK_DCM_src.conversion_id,
        EXT_DOUBLECLICK_DCM_src.keyword_id,
        EXT_DOUBLECLICK_DCM_src.user_id,
        EXT_DOUBLECLICK_DCM_src.country,
        EXT_DOUBLECLICK_DCM_src.state_region,
        EXT_DOUBLECLICK_DCM_src.city_id,
        EXT_DOUBLECLICK_DCM_src.batch_id,
        EXT_DOUBLECLICK_DCM_src.row_id,
        EXT_DOUBLECLICK_DCM_src.update_ts
 FROM teva_ingestion.EXT_DOUBLECLICK_DCM_src
 ORDER BY EXT_DOUBLECLICK_DCM_src.batch_id
SEGMENTED BY hash(EXT_DOUBLECLICK_DCM_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DOUBLECLICK_DS_ADS_src_super_b0 /*+basename(EXT_DOUBLECLICK_DS_ADS_src_super)*/ 
(
 session_date,
 brand,
 target_audience,
 search_engine,
 campaign_id,
 campaign_name,
 placement_id,
 placement_name,
 keyword_id,
 keyword_name,
 keyword_match_type,
 url_landing_page,
 device_type,
 impressions,
 clicks,
 media_cost,
 keyword_position,
 average_cpc,
 average_cpm,
 adwords_conversions,
 keyword_engine_id,
 keyword_engine_status,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DOUBLECLICK_DS_ADS_src.session_date,
        EXT_DOUBLECLICK_DS_ADS_src.brand,
        EXT_DOUBLECLICK_DS_ADS_src.target_audience,
        EXT_DOUBLECLICK_DS_ADS_src.search_engine,
        EXT_DOUBLECLICK_DS_ADS_src.campaign_id,
        EXT_DOUBLECLICK_DS_ADS_src.campaign_name,
        EXT_DOUBLECLICK_DS_ADS_src.placement_id,
        EXT_DOUBLECLICK_DS_ADS_src.placement_name,
        EXT_DOUBLECLICK_DS_ADS_src.keyword_id,
        EXT_DOUBLECLICK_DS_ADS_src.keyword_name,
        EXT_DOUBLECLICK_DS_ADS_src.keyword_match_type,
        EXT_DOUBLECLICK_DS_ADS_src.url_landing_page,
        EXT_DOUBLECLICK_DS_ADS_src.device_type,
        EXT_DOUBLECLICK_DS_ADS_src.impressions,
        EXT_DOUBLECLICK_DS_ADS_src.clicks,
        EXT_DOUBLECLICK_DS_ADS_src.media_cost,
        EXT_DOUBLECLICK_DS_ADS_src.keyword_position,
        EXT_DOUBLECLICK_DS_ADS_src.average_cpc,
        EXT_DOUBLECLICK_DS_ADS_src.average_cpm,
        EXT_DOUBLECLICK_DS_ADS_src.adwords_conversions,
        EXT_DOUBLECLICK_DS_ADS_src.keyword_engine_id,
        EXT_DOUBLECLICK_DS_ADS_src.keyword_engine_status,
        EXT_DOUBLECLICK_DS_ADS_src.batch_id,
        EXT_DOUBLECLICK_DS_ADS_src.row_id,
        EXT_DOUBLECLICK_DS_ADS_src.update_ts
 FROM teva_ingestion.EXT_DOUBLECLICK_DS_ADS_src
 ORDER BY EXT_DOUBLECLICK_DS_ADS_src.batch_id
SEGMENTED BY hash(EXT_DOUBLECLICK_DS_ADS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_DOUBLECLICK_DS_CONVERSIONS_src_super_b0 /*+basename(EXT_DOUBLECLICK_DS_CONVERSIONS_src_super)*/ 
(
 brand,
 target_audience,
 search_engine,
 campaign_id,
 campaign_name,
 placement_id,
 placement_name,
 keyword_id,
 keyword_name,
 keyword_match_type,
 device_type,
 activity_group_id,
 activity_group_name,
 activity_id,
 activity_name,
 total_conversions,
 conversion_date,
 visit_id,
 conversion_id,
 gclid,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_DOUBLECLICK_DS_CONVERSIONS_src.brand,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.target_audience,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.search_engine,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.campaign_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.campaign_name,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.placement_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.placement_name,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.keyword_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.keyword_name,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.keyword_match_type,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.device_type,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_group_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_group_name,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_name,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.total_conversions,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.conversion_date,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.visit_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.conversion_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.gclid,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.batch_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.row_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.update_ts
 FROM teva_ingestion.EXT_DOUBLECLICK_DS_CONVERSIONS_src
 ORDER BY EXT_DOUBLECLICK_DS_CONVERSIONS_src.batch_id
SEGMENTED BY hash(EXT_DOUBLECLICK_DS_CONVERSIONS_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_GOOGLE_ANALYTICS_360_src_super_b0 /*+basename(EXT_GOOGLE_ANALYTICS_360_src_super)*/ 
(
 dataset_id,
 full_visitor_id,
 visitor_id,
 user_id,
 visit_number,
 visit_id,
 visit_start_time,
 date,
 totals_visits,
 totals_hits,
 totals_page_views,
 totals_time_on_site,
 totals_bounces,
 totals_transactions,
 totals_transaction_revenue,
 totals_new_visits,
 totals_screen_views,
 totals_unique_screen_views,
 totals_time_on_screen,
 totals_total_transaction_revenue,
 traffic_source_referral_path,
 traffic_source_campaign,
 traffic_source_source,
 traffic_source_medium,
 traffic_source_keyword,
 traffic_source_ad_content,
 channel_grouping,
 social_engagement_type,
 traffic_source_adwords_click_info_campaign_id,
 traffic_source_adwords_click_info_ad_group_id,
 traffic_source_adwords_click_info_creative_id,
 traffic_source_adwords_click_info_criteria_id,
 traffic_source_adwords_click_info_page,
 traffic_source_adwords_click_info_slot,
 traffic_source_adwords_click_info_criteria_parameters,
 traffic_source_adwords_click_info_gcl_id,
 traffic_source_adwords_click_info_customer_id,
 traffic_source_adwords_click_info_ad_network_type,
 traffic_source_adwords_click_info_targeting_criteria_boom_user_list_id,
 traffic_source_adwords_click_info_is_video_ad,
 traffic_source_is_true_direct,
 traffic_source_campaign_code,
 device_browser,
 device_browser_version,
 device_browser_size,
 device_operating_system,
 device_operating_system_version,
 device_is_mobile,
 device_mobile_device_branding,
 device_mobile_device_model,
 device_mobile_input_selector,
 device_mobile_device_info,
 device_mobile_device_marketing_name,
 device_flash_version,
 device_java_enabled,
 device_language,
 device_screen_colors,
 device_screen_resolution,
 device_device_category,
 geonetwork_continent,
 geonetwork_subcontinent,
 geonetwork_country,
 geonetwork_region,
 geonetwork_metro,
 geonetwork_city,
 geonetwork_city_id,
 geonetwork_network_domain,
 geonetwork_latitude,
 geonetwork_longitude,
 geonetwork_network_location,
 custom_dimensions_index,
 custom_dimensions_value,
 hits_hit_number,
 hits_time,
 hits_hour,
 hits_minute,
 hits_is_secure,
 hits_is_interaction,
 hits_is_entrance,
 hits_is_exit,
 hits_referer,
 hits_page_page_path,
 hits_page_host_name,
 hits_page_page_title,
 hits_page_search_keyword,
 hits_page_search_category,
 hits_page_page_path_level_one,
 hits_page_page_path_level_two,
 hits_page_page_path_level_three,
 hits_page_page_path_level_four,
 hits_transaction_transaction_id,
 hits_transaction_transaction_revenue,
 hits_transaction_transaction_tax,
 hits_transaction_transaction_shipping,
 hits_transaction_affiliation,
 hits_transaction_currency_code,
 hits_transaction_local_transaction_revenue,
 hits_transaction_local_transaction_tax,
 hits_transaction_local_transaction_shipping,
 hits_transaction_transaction_coupon,
 hits_item_transaction_id,
 hits_item_product_name,
 hits_item_product_category,
 hits_item_product_sku,
 hits_item_item_quantity,
 hits_item_item_revenue,
 hits_item_currency_code,
 hits_item_local_item_revenue,
 hits_content_info_content_description,
 hits_app_info_name,
 hits_app_info_version,
 hits_app_info_id,
 hits_app_info_installer_id,
 hits_app_info_app_installer_id,
 hits_app_info_app_name,
 hits_app_info_app_version,
 hits_app_info_app_id,
 hits_app_info_screen_name,
 hits_app_info_landing_screen_name,
 hits_app_info_exit_screen_name,
 hits_app_info_screen_depth,
 hits_exception_info_description,
 hits_exception_info_is_fatal,
 hits_exception_info_exceptions,
 hits_exception_info_fatal_exceptions,
 hits_event_info_event_category,
 hits_event_info_event_action,
 hits_event_info_event_label,
 hits_event_info_event_value,
 hits_product_product_sku,
 hits_product_v_two_product_name,
 hits_product_v_two_product_category,
 hits_product_product_variant,
 hits_product_product_brand,
 hits_product_product_revenue,
 hits_product_local_product_revenue,
 hits_product_product_price,
 hits_product_local_product_price,
 hits_product_product_quantity,
 hits_product_product_refund_amount,
 hits_product_local_product_refund_amount,
 hits_product_is_impression,
 hits_product_is_click,
 hits_product_product_list_name,
 hits_product_product_list_position,
 hits_promotion_promo_id,
 hits_promotion_promo_name,
 hits_promotion_promo_creative,
 hits_promotion_promo_position,
 hits_promotion_action_info_promo_is_view,
 hits_promotion_action_info_promo_is_click,
 hits_refund_refund_amount,
 hits_refund_local_refund_amount,
 hits_ecommerce_action_action_type,
 hits_ecommerce_action_step,
 hits_ecommerce_action_option,
 hits_experiment_experiment_id,
 hits_experiment_experiment_variant,
 hits_publisher_dfp_clicks,
 hits_publisher_dfp_impressions,
 hits_publisher_dfp_matched_queries,
 hits_publisher_dfp_measurable_impressions,
 hits_publisher_dfp_queries,
 hits_publisher_dfp_revenue_cpm,
 hits_publisher_dfp_revenue_cpc,
 hits_publisher_dfp_viewable_impressions,
 hits_publisher_dfp_pages_viewed,
 hits_publisher_ad_sense_backfill_dfp_clicks,
 hits_publisher_ad_sense_backfill_dfp_impressions,
 hits_publisher_ad_sense_backfill_dfp_matched_queries,
 hits_publisher_ad_sense_backfill_dfp_measurable_impressions,
 hits_publisher_ad_sense_backfill_dfp_queries,
 hits_publisher_ad_sense_backfill_dfp_revenue_cpm,
 hits_publisher_ad_sense_backfill_dfp_revenue_cpc,
 hits_publisher_ad_sense_backfill_dfp_viewable_impressions,
 hits_publisher_ad_sense_backfill_dfp_pages_viewed,
 hits_publisher_adx_backfill_dfp_clicks,
 hits_publisher_adx_backfill_dfp_impressions,
 hits_publisher_adx_backfill_dfp_matched_queries,
 hits_publisher_adx_backfill_dfp_measurable_impressions,
 hits_publisher_adx_backfill_dfp_queries,
 hits_publisher_adx_backfill_dfp_revenue_cpm,
 hits_publisher_adx_backfill_dfp_revenue_cpc,
 hits_publisher_adx_backfill_dfp_viewable_impressions,
 hits_publisher_adx_backfill_dfp_pages_viewed,
 hits_publisher_adx_clicks,
 hits_publisher_adx_impressions,
 hits_publisher_adx_matched_queries,
 hits_publisher_adx_measurable_impressions,
 hits_publisher_adx_queries,
 hits_publisher_adx_revenue,
 hits_publisher_adx_viewable_impressions,
 hits_publisher_adx_pages_viewed,
 hits_publisher_ads_viewed,
 hits_publisher_ads_units_viewed,
 hits_publisher_ads_units_matched,
 hits_publisher_viewable_ads_viewed,
 hits_publisher_measurable_ads_viewed,
 hits_publisher_ads_pages_viewed,
 hits_publisher_ads_clicked,
 hits_publisher_ads_revenue,
 hits_publisher_dfp_ad_group,
 hits_publisher_dfp_ad_units,
 hits_publisher_dfp_network_id,
 hits_custom_variables_index,
 hits_custom_variables_custom_var_name,
 hits_custom_variables_custom_var_value,
 hits_custom_dimensions_index,
 hits_custom_dimensions_value,
 hits_custom_metrics_index,
 hits_custom_metrics_value,
 hits_type,
 hits_social_social_interaction_network,
 hits_social_social_interaction_action,
 hits_social_social_interactions,
 hits_social_social_interaction_target,
 hits_social_social_network,
 hits_social_unique_social_interactions,
 hits_social_has_social_source_referral,
 hits_social_social_interaction_network_action,
 hits_latency_tracking_pageload_sample,
 hits_latency_tracking_pageload_time,
 hits_latency_tracking_pagedown_load_time,
 hits_latency_tracking_redirection_time,
 hits_latency_tracking_speed_metrics_sample,
 hits_latency_tracking_domain_lookup_time,
 hits_latency_tracking_server_connection_time,
 hits_latency_tracking_server_response_time,
 hits_latency_tracking_dom_latency_metric_ssample,
 hits_latency_tracking_dom_interactive_time,
 hits_latency_tracking_dom_content_loaded_time,
 hits_latency_tracking_user_timing_value,
 hits_latency_tracking_user_timing_sample,
 hits_latency_tracking_user_timing_variable,
 hits_latency_tracking_user_timing_category,
 hits_latency_tracking_user_timing_label,
 hits_source_propertyinfo_source_property_display_name,
 hits_source_propertyinfo_source_property_tracking_id,
 hits_content_group_content_group_one,
 hits_content_group_content_group_two,
 hits_content_group_content_group_three,
 hits_content_group_content_group_four,
 hits_content_group_content_group_five,
 hits_content_group_previous_content_group_one,
 hits_content_group_previous_content_group_two,
 hits_content_group_previous_content_group_three,
 hits_content_group_previous_content_group_four,
 hits_content_group_previous_content_group_five,
 hits_content_group_content_group_unique_views_one,
 hits_content_group_content_group_unique_views_two,
 hits_content_group_content_group_unique_views_three,
 hits_content_group_content_group_unique_views_four,
 hits_content_group_content_group_unique_views_five,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_GOOGLE_ANALYTICS_360_src.dataset_id,
        EXT_GOOGLE_ANALYTICS_360_src.full_visitor_id,
        EXT_GOOGLE_ANALYTICS_360_src.visitor_id,
        EXT_GOOGLE_ANALYTICS_360_src.user_id,
        EXT_GOOGLE_ANALYTICS_360_src.visit_number,
        EXT_GOOGLE_ANALYTICS_360_src.visit_id,
        EXT_GOOGLE_ANALYTICS_360_src.visit_start_time,
        EXT_GOOGLE_ANALYTICS_360_src.date,
        EXT_GOOGLE_ANALYTICS_360_src.totals_visits,
        EXT_GOOGLE_ANALYTICS_360_src.totals_hits,
        EXT_GOOGLE_ANALYTICS_360_src.totals_page_views,
        EXT_GOOGLE_ANALYTICS_360_src.totals_time_on_site,
        EXT_GOOGLE_ANALYTICS_360_src.totals_bounces,
        EXT_GOOGLE_ANALYTICS_360_src.totals_transactions,
        EXT_GOOGLE_ANALYTICS_360_src.totals_transaction_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.totals_new_visits,
        EXT_GOOGLE_ANALYTICS_360_src.totals_screen_views,
        EXT_GOOGLE_ANALYTICS_360_src.totals_unique_screen_views,
        EXT_GOOGLE_ANALYTICS_360_src.totals_time_on_screen,
        EXT_GOOGLE_ANALYTICS_360_src.totals_total_transaction_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_referral_path,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_campaign,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_source,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_medium,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_keyword,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_ad_content,
        EXT_GOOGLE_ANALYTICS_360_src.channel_grouping,
        EXT_GOOGLE_ANALYTICS_360_src.social_engagement_type,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_campaign_id,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_ad_group_id,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_creative_id,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_criteria_id,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_page,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_slot,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_criteria_parameters,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_gcl_id,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_customer_id,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_ad_network_type,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_targeting_criteria_boom_user_list_id,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_is_video_ad,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_is_true_direct,
        EXT_GOOGLE_ANALYTICS_360_src.traffic_source_campaign_code,
        EXT_GOOGLE_ANALYTICS_360_src.device_browser,
        EXT_GOOGLE_ANALYTICS_360_src.device_browser_version,
        EXT_GOOGLE_ANALYTICS_360_src.device_browser_size,
        EXT_GOOGLE_ANALYTICS_360_src.device_operating_system,
        EXT_GOOGLE_ANALYTICS_360_src.device_operating_system_version,
        EXT_GOOGLE_ANALYTICS_360_src.device_is_mobile,
        EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_branding,
        EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_model,
        EXT_GOOGLE_ANALYTICS_360_src.device_mobile_input_selector,
        EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_info,
        EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_marketing_name,
        EXT_GOOGLE_ANALYTICS_360_src.device_flash_version,
        EXT_GOOGLE_ANALYTICS_360_src.device_java_enabled,
        EXT_GOOGLE_ANALYTICS_360_src.device_language,
        EXT_GOOGLE_ANALYTICS_360_src.device_screen_colors,
        EXT_GOOGLE_ANALYTICS_360_src.device_screen_resolution,
        EXT_GOOGLE_ANALYTICS_360_src.device_device_category,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_continent,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_subcontinent,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_country,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_region,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_metro,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_city,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_city_id,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_network_domain,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_latitude,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_longitude,
        EXT_GOOGLE_ANALYTICS_360_src.geonetwork_network_location,
        EXT_GOOGLE_ANALYTICS_360_src.custom_dimensions_index,
        EXT_GOOGLE_ANALYTICS_360_src.custom_dimensions_value,
        EXT_GOOGLE_ANALYTICS_360_src.hits_hit_number,
        EXT_GOOGLE_ANALYTICS_360_src.hits_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_hour,
        EXT_GOOGLE_ANALYTICS_360_src.hits_minute,
        EXT_GOOGLE_ANALYTICS_360_src.hits_is_secure,
        EXT_GOOGLE_ANALYTICS_360_src.hits_is_interaction,
        EXT_GOOGLE_ANALYTICS_360_src.hits_is_entrance,
        EXT_GOOGLE_ANALYTICS_360_src.hits_is_exit,
        EXT_GOOGLE_ANALYTICS_360_src.hits_referer,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_host_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_title,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_search_keyword,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_search_category,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_one,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_two,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_three,
        EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_four,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_tax,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_shipping,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_affiliation,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_currency_code,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_tax,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_shipping,
        EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_coupon,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_transaction_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_product_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_product_category,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_product_sku,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_item_quantity,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_item_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_currency_code,
        EXT_GOOGLE_ANALYTICS_360_src.hits_item_local_item_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_info_content_description,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_version,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_installer_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_installer_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_version,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_screen_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_landing_screen_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_exit_screen_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_screen_depth,
        EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_description,
        EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_is_fatal,
        EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_exceptions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_fatal_exceptions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_category,
        EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_action,
        EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_label,
        EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_value,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_sku,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_v_two_product_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_v_two_product_category,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_variant,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_brand,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_price,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_price,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_quantity,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_refund_amount,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_refund_amount,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_is_impression,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_is_click,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_list_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_list_position,
        EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_creative,
        EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_position,
        EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_action_info_promo_is_view,
        EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_action_info_promo_is_click,
        EXT_GOOGLE_ANALYTICS_360_src.hits_refund_refund_amount,
        EXT_GOOGLE_ANALYTICS_360_src.hits_refund_local_refund_amount,
        EXT_GOOGLE_ANALYTICS_360_src.hits_ecommerce_action_action_type,
        EXT_GOOGLE_ANALYTICS_360_src.hits_ecommerce_action_step,
        EXT_GOOGLE_ANALYTICS_360_src.hits_ecommerce_action_option,
        EXT_GOOGLE_ANALYTICS_360_src.hits_experiment_experiment_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_experiment_experiment_variant,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_clicks,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_matched_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_measurable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_revenue_cpm,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_revenue_cpc,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_viewable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_pages_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_clicks,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_matched_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_measurable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_revenue_cpm,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_revenue_cpc,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_viewable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_pages_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_clicks,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_matched_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_measurable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_revenue_cpm,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_revenue_cpc,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_viewable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_pages_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_clicks,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_matched_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_measurable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_queries,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_viewable_impressions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_pages_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_units_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_units_matched,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_viewable_ads_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_measurable_ads_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_pages_viewed,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_clicked,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_revenue,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_ad_group,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_ad_units,
        EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_network_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_custom_variables_index,
        EXT_GOOGLE_ANALYTICS_360_src.hits_custom_variables_custom_var_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_custom_variables_custom_var_value,
        EXT_GOOGLE_ANALYTICS_360_src.hits_custom_dimensions_index,
        EXT_GOOGLE_ANALYTICS_360_src.hits_custom_dimensions_value,
        EXT_GOOGLE_ANALYTICS_360_src.hits_custom_metrics_index,
        EXT_GOOGLE_ANALYTICS_360_src.hits_custom_metrics_value,
        EXT_GOOGLE_ANALYTICS_360_src.hits_type,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_network,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_action,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interactions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_target,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_network,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_unique_social_interactions,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_has_social_source_referral,
        EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_network_action,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pageload_sample,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pageload_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pagedown_load_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_redirection_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_speed_metrics_sample,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_domain_lookup_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_server_connection_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_server_response_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_latency_metric_ssample,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_interactive_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_content_loaded_time,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_value,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_sample,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_variable,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_category,
        EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_label,
        EXT_GOOGLE_ANALYTICS_360_src.hits_source_propertyinfo_source_property_display_name,
        EXT_GOOGLE_ANALYTICS_360_src.hits_source_propertyinfo_source_property_tracking_id,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_one,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_two,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_three,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_four,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_five,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_one,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_two,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_three,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_four,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_five,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_one,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_two,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_three,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_four,
        EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_five,
        EXT_GOOGLE_ANALYTICS_360_src.batch_id,
        EXT_GOOGLE_ANALYTICS_360_src.row_id,
        EXT_GOOGLE_ANALYTICS_360_src.update_ts
 FROM teva_ingestion.EXT_GOOGLE_ANALYTICS_360_src
 ORDER BY EXT_GOOGLE_ANALYTICS_360_src.batch_id
SEGMENTED BY hash(EXT_GOOGLE_ANALYTICS_360_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_INNOVID_DELIVERY_src_super_b0 /*+basename(EXT_INNOVID_DELIVERY_src_super)*/ 
(
 date,
 advertiser_name,
 advertiser_id,
 campaign_name,
 campaign_id,
 publisher,
 publisher_id,
 video_id,
 video_name,
 duration,
 placement_name,
 impressions,
 click_thrus,
 awareness,
 engagement_events,
 twenty_five_percent_completion,
 fifty_percent_completion,
 seventy_five_percent_completion,
 hundred_perent_completion,
 companion_impressions,
 companion_clicks,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_INNOVID_DELIVERY_src.date,
        EXT_INNOVID_DELIVERY_src.advertiser_name,
        EXT_INNOVID_DELIVERY_src.advertiser_id,
        EXT_INNOVID_DELIVERY_src.campaign_name,
        EXT_INNOVID_DELIVERY_src.campaign_id,
        EXT_INNOVID_DELIVERY_src.publisher,
        EXT_INNOVID_DELIVERY_src.publisher_id,
        EXT_INNOVID_DELIVERY_src.video_id,
        EXT_INNOVID_DELIVERY_src.video_name,
        EXT_INNOVID_DELIVERY_src.duration,
        EXT_INNOVID_DELIVERY_src.placement_name,
        EXT_INNOVID_DELIVERY_src.impressions,
        EXT_INNOVID_DELIVERY_src.click_thrus,
        EXT_INNOVID_DELIVERY_src.awareness,
        EXT_INNOVID_DELIVERY_src.engagement_events,
        EXT_INNOVID_DELIVERY_src.twenty_five_percent_completion,
        EXT_INNOVID_DELIVERY_src.fifty_percent_completion,
        EXT_INNOVID_DELIVERY_src.seventy_five_percent_completion,
        EXT_INNOVID_DELIVERY_src.hundred_perent_completion,
        EXT_INNOVID_DELIVERY_src.companion_impressions,
        EXT_INNOVID_DELIVERY_src.companion_clicks,
        EXT_INNOVID_DELIVERY_src.batch_id,
        EXT_INNOVID_DELIVERY_src.row_id,
        EXT_INNOVID_DELIVERY_src.update_ts
 FROM teva_ingestion.EXT_INNOVID_DELIVERY_src
 ORDER BY EXT_INNOVID_DELIVERY_src.batch_id
SEGMENTED BY hash(EXT_INNOVID_DELIVERY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_INNOVID_VIEWABILITY_src_super_b0 /*+basename(EXT_INNOVID_VIEWABILITY_src_super)*/ 
(
 date,
 advertiser_name,
 advertiser_id,
 campaign_name,
 campaign_id,
 publisher,
 publisher_id,
 format_type,
 video_id,
 video_name,
 placement_name,
 platform_name,
 impressions,
 click_thrus,
 awareness,
 engagement_events,
 twenty_five_percent_completion,
 fifty_percent_completion,
 seventy_five_percent_completion,
 hundred_perent_completion,
 companion_impressions,
 companion_clicks,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_INNOVID_VIEWABILITY_src.date,
        EXT_INNOVID_VIEWABILITY_src.advertiser_name,
        EXT_INNOVID_VIEWABILITY_src.advertiser_id,
        EXT_INNOVID_VIEWABILITY_src.campaign_name,
        EXT_INNOVID_VIEWABILITY_src.campaign_id,
        EXT_INNOVID_VIEWABILITY_src.publisher,
        EXT_INNOVID_VIEWABILITY_src.publisher_id,
        EXT_INNOVID_VIEWABILITY_src.format_type,
        EXT_INNOVID_VIEWABILITY_src.video_id,
        EXT_INNOVID_VIEWABILITY_src.video_name,
        EXT_INNOVID_VIEWABILITY_src.placement_name,
        EXT_INNOVID_VIEWABILITY_src.platform_name,
        EXT_INNOVID_VIEWABILITY_src.impressions,
        EXT_INNOVID_VIEWABILITY_src.click_thrus,
        EXT_INNOVID_VIEWABILITY_src.awareness,
        EXT_INNOVID_VIEWABILITY_src.engagement_events,
        EXT_INNOVID_VIEWABILITY_src.twenty_five_percent_completion,
        EXT_INNOVID_VIEWABILITY_src.fifty_percent_completion,
        EXT_INNOVID_VIEWABILITY_src.seventy_five_percent_completion,
        EXT_INNOVID_VIEWABILITY_src.hundred_perent_completion,
        EXT_INNOVID_VIEWABILITY_src.companion_impressions,
        EXT_INNOVID_VIEWABILITY_src.companion_clicks,
        EXT_INNOVID_VIEWABILITY_src.batch_id,
        EXT_INNOVID_VIEWABILITY_src.row_id,
        EXT_INNOVID_VIEWABILITY_src.update_ts
 FROM teva_ingestion.EXT_INNOVID_VIEWABILITY_src
 ORDER BY EXT_INNOVID_VIEWABILITY_src.batch_id
SEGMENTED BY hash(EXT_INNOVID_VIEWABILITY_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_INTEGRAL_AD_SCIENCE_src_super_b0 /*+basename(EXT_INTEGRAL_AD_SCIENCE_src_super)*/ 
(
 an_id,
 ext_advertiser_id,
 ext_campaign_id,
 ext_placement_id,
 ext_publisher_id,
 in_view_one_second,
 in_viewability_sample,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_INTEGRAL_AD_SCIENCE_src.an_id,
        EXT_INTEGRAL_AD_SCIENCE_src.ext_advertiser_id,
        EXT_INTEGRAL_AD_SCIENCE_src.ext_campaign_id,
        EXT_INTEGRAL_AD_SCIENCE_src.ext_placement_id,
        EXT_INTEGRAL_AD_SCIENCE_src.ext_publisher_id,
        EXT_INTEGRAL_AD_SCIENCE_src.in_view_one_second,
        EXT_INTEGRAL_AD_SCIENCE_src.in_viewability_sample,
        EXT_INTEGRAL_AD_SCIENCE_src.batch_id,
        EXT_INTEGRAL_AD_SCIENCE_src.row_id,
        EXT_INTEGRAL_AD_SCIENCE_src.update_ts
 FROM teva_ingestion.EXT_INTEGRAL_AD_SCIENCE_src
 ORDER BY EXT_INTEGRAL_AD_SCIENCE_src.batch_id
SEGMENTED BY hash(EXT_INTEGRAL_AD_SCIENCE_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_YAHOO_GEMINI_src_super_b0 /*+basename(EXT_YAHOO_GEMINI_src_super)*/ 
(
 advertiser_id,
 keyword_id,
 day,
 advertiser_name,
 advertiser_timezone,
 advertiser_currency,
 campaign_id,
 campaign_name,
 campaign_start_date,
 campaign_end_date,
 campaign_status,
 campaign_objective,
 budget,
 budget_type,
 ad_group_id,
 ad_id,
 keyword_value,
 keyword_status,
 keyword_match_type,
 impressions,
 clicks,
 ctr,
 conversions,
 spend,
 average_cpc,
 average_cost_per_install,
 average_cpm,
 pricing_type,
 source,
 average_position,
 max_bid,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_YAHOO_GEMINI_src.advertiser_id,
        EXT_YAHOO_GEMINI_src.keyword_id,
        EXT_YAHOO_GEMINI_src.day,
        EXT_YAHOO_GEMINI_src.advertiser_name,
        EXT_YAHOO_GEMINI_src.advertiser_timezone,
        EXT_YAHOO_GEMINI_src.advertiser_currency,
        EXT_YAHOO_GEMINI_src.campaign_id,
        EXT_YAHOO_GEMINI_src.campaign_name,
        EXT_YAHOO_GEMINI_src.campaign_start_date,
        EXT_YAHOO_GEMINI_src.campaign_end_date,
        EXT_YAHOO_GEMINI_src.campaign_status,
        EXT_YAHOO_GEMINI_src.campaign_objective,
        EXT_YAHOO_GEMINI_src.budget,
        EXT_YAHOO_GEMINI_src.budget_type,
        EXT_YAHOO_GEMINI_src.ad_group_id,
        EXT_YAHOO_GEMINI_src.ad_id,
        EXT_YAHOO_GEMINI_src.keyword_value,
        EXT_YAHOO_GEMINI_src.keyword_status,
        EXT_YAHOO_GEMINI_src.keyword_match_type,
        EXT_YAHOO_GEMINI_src.impressions,
        EXT_YAHOO_GEMINI_src.clicks,
        EXT_YAHOO_GEMINI_src.ctr,
        EXT_YAHOO_GEMINI_src.conversions,
        EXT_YAHOO_GEMINI_src.spend,
        EXT_YAHOO_GEMINI_src.average_cpc,
        EXT_YAHOO_GEMINI_src.average_cost_per_install,
        EXT_YAHOO_GEMINI_src.average_cpm,
        EXT_YAHOO_GEMINI_src.pricing_type,
        EXT_YAHOO_GEMINI_src.source,
        EXT_YAHOO_GEMINI_src.average_position,
        EXT_YAHOO_GEMINI_src.max_bid,
        EXT_YAHOO_GEMINI_src.batch_id,
        EXT_YAHOO_GEMINI_src.row_id,
        EXT_YAHOO_GEMINI_src.update_ts
 FROM teva_ingestion.EXT_YAHOO_GEMINI_src
 ORDER BY EXT_YAHOO_GEMINI_src.batch_id
SEGMENTED BY hash(EXT_YAHOO_GEMINI_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_FACT_V2_src_super_b0 /*+basename(EXT_IMS_FIA_FACT_V2_src_super)*/ 
(
 claim_id,
 patient_id,
 sequence_number,
 product_id,
 fill_date,
 claim_type,
 reject_code,
 days_supply,
 quantity,
 refill_code,
 plantrak_id,
 opc_ask,
 sec_plantrak_id,
 buy_down,
 opc_paid,
 prescriber_id,
 sob,
 sub_product_id,
 sub_opc,
 initial_claim_id,
 prev_product_id,
 daw_code,
 wrt_date,
 claim_status,
 copay_card_flg,
 zip_code,
 ecoup_flag,
 ecoup_offset_amt,
 standard_copay,
 standard_copay_yn,
 market_id,
 flexible_fld_1_char,
 flexible_fld_2_char,
 flexible_fld_3_char,
 flexible_fld_4_char,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_FACT_V2_src.claim_id,
        EXT_IMS_FIA_FACT_V2_src.patient_id,
        EXT_IMS_FIA_FACT_V2_src.sequence_number,
        EXT_IMS_FIA_FACT_V2_src.product_id,
        EXT_IMS_FIA_FACT_V2_src.fill_date,
        EXT_IMS_FIA_FACT_V2_src.claim_type,
        EXT_IMS_FIA_FACT_V2_src.reject_code,
        EXT_IMS_FIA_FACT_V2_src.days_supply,
        EXT_IMS_FIA_FACT_V2_src.quantity,
        EXT_IMS_FIA_FACT_V2_src.refill_code,
        EXT_IMS_FIA_FACT_V2_src.plantrak_id,
        EXT_IMS_FIA_FACT_V2_src.opc_ask,
        EXT_IMS_FIA_FACT_V2_src.sec_plantrak_id,
        EXT_IMS_FIA_FACT_V2_src.buy_down,
        EXT_IMS_FIA_FACT_V2_src.opc_paid,
        EXT_IMS_FIA_FACT_V2_src.prescriber_id,
        EXT_IMS_FIA_FACT_V2_src.sob,
        EXT_IMS_FIA_FACT_V2_src.sub_product_id,
        EXT_IMS_FIA_FACT_V2_src.sub_opc,
        EXT_IMS_FIA_FACT_V2_src.initial_claim_id,
        EXT_IMS_FIA_FACT_V2_src.prev_product_id,
        EXT_IMS_FIA_FACT_V2_src.daw_code,
        EXT_IMS_FIA_FACT_V2_src.wrt_date,
        EXT_IMS_FIA_FACT_V2_src.claim_status,
        EXT_IMS_FIA_FACT_V2_src.copay_card_flg,
        EXT_IMS_FIA_FACT_V2_src.zip_code,
        EXT_IMS_FIA_FACT_V2_src.ecoup_flag,
        EXT_IMS_FIA_FACT_V2_src.ecoup_offset_amt,
        EXT_IMS_FIA_FACT_V2_src.standard_copay,
        EXT_IMS_FIA_FACT_V2_src.standard_copay_yn,
        EXT_IMS_FIA_FACT_V2_src.market_id,
        EXT_IMS_FIA_FACT_V2_src.flexible_fld_1_char,
        EXT_IMS_FIA_FACT_V2_src.flexible_fld_2_char,
        EXT_IMS_FIA_FACT_V2_src.flexible_fld_3_char,
        EXT_IMS_FIA_FACT_V2_src.flexible_fld_4_char,
        EXT_IMS_FIA_FACT_V2_src.batch_id,
        EXT_IMS_FIA_FACT_V2_src.row_id,
        EXT_IMS_FIA_FACT_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_FACT_V2_src
 ORDER BY EXT_IMS_FIA_FACT_V2_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_FACT_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_V2_src_super_b0 /*+basename(EXT_IMS_FIA_GEOGRAPHY_V2_src_super)*/ 
(
 zip_code,
 cbsa_code,
 cbsa_description,
 state_code,
 flexible_fld_1_char,
 flexible_fld_2_char,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_GEOGRAPHY_V2_src.zip_code,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.cbsa_code,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.cbsa_description,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.state_code,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.flexible_fld_1_char,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.flexible_fld_2_char,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.batch_id,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.row_id,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_V2_src
 ORDER BY EXT_IMS_FIA_GEOGRAPHY_V2_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_GEOGRAPHY_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_PLAN_V2_src_super_b0 /*+basename(EXT_IMS_FIA_PLAN_V2_src_super)*/ 
(
 plantrak_id,
 payer_name,
 plan_name,
 pbm_name,
 pbm_id,
 method_of_payment,
 model_type,
 flexible_fld_1_char,
 flexible_fld_2_char,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_PLAN_V2_src.plantrak_id,
        EXT_IMS_FIA_PLAN_V2_src.payer_name,
        EXT_IMS_FIA_PLAN_V2_src.plan_name,
        EXT_IMS_FIA_PLAN_V2_src.pbm_name,
        EXT_IMS_FIA_PLAN_V2_src.pbm_id,
        EXT_IMS_FIA_PLAN_V2_src.method_of_payment,
        EXT_IMS_FIA_PLAN_V2_src.model_type,
        EXT_IMS_FIA_PLAN_V2_src.flexible_fld_1_char,
        EXT_IMS_FIA_PLAN_V2_src.flexible_fld_2_char,
        EXT_IMS_FIA_PLAN_V2_src.batch_id,
        EXT_IMS_FIA_PLAN_V2_src.row_id,
        EXT_IMS_FIA_PLAN_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PLAN_V2_src
 ORDER BY EXT_IMS_FIA_PLAN_V2_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_PLAN_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_PRODUCT_V2_src_super_b0 /*+basename(EXT_IMS_FIA_PRODUCT_V2_src_super)*/ 
(
 product_id,
 product_group,
 product_group_id,
 product_name,
 generic_name,
 brand_generic_flag,
 product_form,
 product_strength,
 package_size,
 manufacturer,
 cmf10,
 usc_code,
 fia_market_id,
 fia_market_desc,
 flexible_fld_1_char,
 flexible_fld_2_char,
 flexible_fld_3_char,
 flexible_fld_4_char,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_PRODUCT_V2_src.product_id,
        EXT_IMS_FIA_PRODUCT_V2_src.product_group,
        EXT_IMS_FIA_PRODUCT_V2_src.product_group_id,
        EXT_IMS_FIA_PRODUCT_V2_src.product_name,
        EXT_IMS_FIA_PRODUCT_V2_src.generic_name,
        EXT_IMS_FIA_PRODUCT_V2_src.brand_generic_flag,
        EXT_IMS_FIA_PRODUCT_V2_src.product_form,
        EXT_IMS_FIA_PRODUCT_V2_src.product_strength,
        EXT_IMS_FIA_PRODUCT_V2_src.package_size,
        EXT_IMS_FIA_PRODUCT_V2_src.manufacturer,
        EXT_IMS_FIA_PRODUCT_V2_src.cmf10,
        EXT_IMS_FIA_PRODUCT_V2_src.usc_code,
        EXT_IMS_FIA_PRODUCT_V2_src.fia_market_id,
        EXT_IMS_FIA_PRODUCT_V2_src.fia_market_desc,
        EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_1_char,
        EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_2_char,
        EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_3_char,
        EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_4_char,
        EXT_IMS_FIA_PRODUCT_V2_src.batch_id,
        EXT_IMS_FIA_PRODUCT_V2_src.row_id,
        EXT_IMS_FIA_PRODUCT_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PRODUCT_V2_src
 ORDER BY EXT_IMS_FIA_PRODUCT_V2_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_PRODUCT_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_REJECT_V2_src_super_b0 /*+basename(EXT_IMS_FIA_REJECT_V2_src_super)*/ 
(
 reject_code,
 reject_reason,
 reject_group,
 flexible_fld_1_char,
 flexible_fld_2_char,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_REJECT_V2_src.reject_code,
        EXT_IMS_FIA_REJECT_V2_src.reject_reason,
        EXT_IMS_FIA_REJECT_V2_src.reject_group,
        EXT_IMS_FIA_REJECT_V2_src.flexible_fld_1_char,
        EXT_IMS_FIA_REJECT_V2_src.flexible_fld_2_char,
        EXT_IMS_FIA_REJECT_V2_src.batch_id,
        EXT_IMS_FIA_REJECT_V2_src.row_id,
        EXT_IMS_FIA_REJECT_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_REJECT_V2_src
 ORDER BY EXT_IMS_FIA_REJECT_V2_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_REJECT_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_CONNECTIVERX_COUPON_V2_src_super_b0 /*+basename(EXT_CONNECTIVERX_COUPON_V2_src_super)*/ 
(
 redemption_type,
 transaction_type,
 claim_authorization_number,
 original_claim_authorization_number,
 date_of_fill,
 date_written,
 day_supply,
 ndc,
 daw,
 drug_title,
 drug_strength_and_form,
 new_refill_code,
 quantity,
 number_of_refills,
 other_coverage_code,
 group_num,
 member_id,
 patient_gender,
 age,
 date_processed,
 nabp,
 pharmacy_chain,
 pharmacy_npi,
 rx_num,
 pharmacy_name,
 pharmacy_address_1,
 pharmacy_address_2,
 pharmacy_city,
 pharmacy_state,
 pharmacy_zip,
 pharmacy_phone,
 hcp_npi,
 hcp_first_name,
 hcp_middle_name,
 hcp_last_name,
 hcp_suffix,
 hcp_designation,
 hcp_specialty_1,
 hcp_specialty_2,
 hcp_address_1,
 hcp_address_2,
 hcp_city,
 hcp_state,
 hcp_zip,
 submission_method,
 previous_payer_id,
 patient_expense,
 patient_benefit,
 patient_copay,
 patient_oop,
 pharmacy_fee,
 amount_due,
 create_date,
 occ_payment_type,
 calc_awp,
 admin_hcp_npi,
 admin_hcp_name,
 admin_hcp_address,
 admin_hcp_address2,
 admin_hcp_city,
 admin_hcp_state,
 admin_hcp_zip,
 claim_type,
 administration_flag,
 soc_name,
 soc_phone,
 soc_fax,
 soc_address,
 soc_city,
 soc_state,
 soc_zip,
 soc_id,
 soc_npi,
 payer_name,
 cpt_code,
 patient_type,
 primary_bin,
 primary_bin_description,
 reject_code,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_CONNECTIVERX_COUPON_V2_src.redemption_type,
        EXT_CONNECTIVERX_COUPON_V2_src.transaction_type,
        EXT_CONNECTIVERX_COUPON_V2_src.claim_authorization_number,
        EXT_CONNECTIVERX_COUPON_V2_src.original_claim_authorization_number,
        EXT_CONNECTIVERX_COUPON_V2_src.date_of_fill,
        EXT_CONNECTIVERX_COUPON_V2_src.date_written,
        EXT_CONNECTIVERX_COUPON_V2_src.day_supply,
        EXT_CONNECTIVERX_COUPON_V2_src.ndc,
        EXT_CONNECTIVERX_COUPON_V2_src.daw,
        EXT_CONNECTIVERX_COUPON_V2_src.drug_title,
        EXT_CONNECTIVERX_COUPON_V2_src.drug_strength_and_form,
        EXT_CONNECTIVERX_COUPON_V2_src.new_refill_code,
        EXT_CONNECTIVERX_COUPON_V2_src.quantity,
        EXT_CONNECTIVERX_COUPON_V2_src.number_of_refills,
        EXT_CONNECTIVERX_COUPON_V2_src.other_coverage_code,
        EXT_CONNECTIVERX_COUPON_V2_src.group_num,
        EXT_CONNECTIVERX_COUPON_V2_src.member_id,
        EXT_CONNECTIVERX_COUPON_V2_src.patient_gender,
        EXT_CONNECTIVERX_COUPON_V2_src.age,
        EXT_CONNECTIVERX_COUPON_V2_src.date_processed,
        EXT_CONNECTIVERX_COUPON_V2_src.nabp,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_chain,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_npi,
        EXT_CONNECTIVERX_COUPON_V2_src.rx_num,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_name,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_address_1,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_address_2,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_city,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_state,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_zip,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_phone,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_npi,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_first_name,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_middle_name,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_last_name,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_suffix,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_designation,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_specialty_1,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_specialty_2,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_address_1,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_address_2,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_city,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_state,
        EXT_CONNECTIVERX_COUPON_V2_src.hcp_zip,
        EXT_CONNECTIVERX_COUPON_V2_src.submission_method,
        EXT_CONNECTIVERX_COUPON_V2_src.previous_payer_id,
        EXT_CONNECTIVERX_COUPON_V2_src.patient_expense,
        EXT_CONNECTIVERX_COUPON_V2_src.patient_benefit,
        EXT_CONNECTIVERX_COUPON_V2_src.patient_copay,
        EXT_CONNECTIVERX_COUPON_V2_src.patient_oop,
        EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_fee,
        EXT_CONNECTIVERX_COUPON_V2_src.amount_due,
        EXT_CONNECTIVERX_COUPON_V2_src.create_date,
        EXT_CONNECTIVERX_COUPON_V2_src.occ_payment_type,
        EXT_CONNECTIVERX_COUPON_V2_src.calc_awp,
        EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_npi,
        EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_name,
        EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_address,
        EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_address2,
        EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_city,
        EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_state,
        EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_zip,
        EXT_CONNECTIVERX_COUPON_V2_src.claim_type,
        EXT_CONNECTIVERX_COUPON_V2_src.administration_flag,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_name,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_phone,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_fax,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_address,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_city,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_state,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_zip,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_id,
        EXT_CONNECTIVERX_COUPON_V2_src.soc_npi,
        EXT_CONNECTIVERX_COUPON_V2_src.payer_name,
        EXT_CONNECTIVERX_COUPON_V2_src.cpt_code,
        EXT_CONNECTIVERX_COUPON_V2_src.patient_type,
        EXT_CONNECTIVERX_COUPON_V2_src.primary_bin,
        EXT_CONNECTIVERX_COUPON_V2_src.primary_bin_description,
        EXT_CONNECTIVERX_COUPON_V2_src.reject_code,
        EXT_CONNECTIVERX_COUPON_V2_src.batch_id,
        EXT_CONNECTIVERX_COUPON_V2_src.row_id,
        EXT_CONNECTIVERX_COUPON_V2_src.update_ts
 FROM teva_ingestion.EXT_CONNECTIVERX_COUPON_V2_src
 ORDER BY EXT_CONNECTIVERX_COUPON_V2_src.batch_id
SEGMENTED BY hash(EXT_CONNECTIVERX_COUPON_V2_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src_super_b0 /*+basename(EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src_super)*/ 
(
 subcategory_code,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.subcategory_code,
        EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.batch_id,
        EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.row_id,
        EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.update_ts
 FROM teva_ingestion.EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src
 ORDER BY EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.batch_id
SEGMENTED BY hash(EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_REFERENCE_INCLUDE_867_COT_src_super_b0 /*+basename(EXT_REFERENCE_INCLUDE_867_COT_src_super)*/ 
(
 class_of_trade,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_REFERENCE_INCLUDE_867_COT_src.class_of_trade,
        EXT_REFERENCE_INCLUDE_867_COT_src.batch_id,
        EXT_REFERENCE_INCLUDE_867_COT_src.row_id,
        EXT_REFERENCE_INCLUDE_867_COT_src.update_ts
 FROM teva_ingestion.EXT_REFERENCE_INCLUDE_867_COT_src
 ORDER BY EXT_REFERENCE_INCLUDE_867_COT_src.batch_id
SEGMENTED BY hash(EXT_REFERENCE_INCLUDE_867_COT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src_super_b0 /*+basename(EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src_super)*/ 
(
 redemption_type,
 program_number,
 program_description,
 create_date,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.redemption_type,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.program_number,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.program_description,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.create_date,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.batch_id,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.row_id,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.update_ts
 FROM teva_ingestion.EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src
 ORDER BY EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.batch_id
SEGMENTED BY hash(EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_IMS_FIA_MPD_src_super_b0 /*+basename(EXT_IMS_FIA_MPD_src_super)*/ 
(
 patient_id,
 mpd_year,
 mpd_eligibility_class,
 deductible_start_date,
 copay_start_date,
 gap_start_date,
 catastrophic_start_date,
 mpd_panel_patient,
 flexible_fld_1_char,
 flexible_fld_2_char,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_IMS_FIA_MPD_src.patient_id,
        EXT_IMS_FIA_MPD_src.mpd_year,
        EXT_IMS_FIA_MPD_src.mpd_eligibility_class,
        EXT_IMS_FIA_MPD_src.deductible_start_date,
        EXT_IMS_FIA_MPD_src.copay_start_date,
        EXT_IMS_FIA_MPD_src.gap_start_date,
        EXT_IMS_FIA_MPD_src.catastrophic_start_date,
        EXT_IMS_FIA_MPD_src.mpd_panel_patient,
        EXT_IMS_FIA_MPD_src.flexible_fld_1_char,
        EXT_IMS_FIA_MPD_src.flexible_fld_2_char,
        EXT_IMS_FIA_MPD_src.batch_id,
        EXT_IMS_FIA_MPD_src.row_id,
        EXT_IMS_FIA_MPD_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_MPD_src
 ORDER BY EXT_IMS_FIA_MPD_src.batch_id
SEGMENTED BY hash(EXT_IMS_FIA_MPD_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_REMOTE_MEETING_VOD__C_src_super_b0 /*+basename(EXT_VV_REMOTE_MEETING_VOD__C_src_super)*/ 
(
 Id,
 OwnerId,
 IsDeleted,
 Name,
 RecordTypeId,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 SystemModstamp,
 MayEdit,
 IsLocked,
 Meeting_Id_vod__c,
 Meeting_Name_vod__c,
 Mobile_ID_vod__c,
 Scheduled_DateTime_vod__c,
 Scheduled_vod__c,
 Attendance_Report_Process_Status_vod__c,
 Latest_Meeting_Start_Datetime_vod__c,
 Meeting_Password_vod__c,
 Meeting_Outcome_Status_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_REMOTE_MEETING_VOD__C_src.Id,
        EXT_VV_REMOTE_MEETING_VOD__C_src.OwnerId,
        EXT_VV_REMOTE_MEETING_VOD__C_src.IsDeleted,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Name,
        EXT_VV_REMOTE_MEETING_VOD__C_src.RecordTypeId,
        EXT_VV_REMOTE_MEETING_VOD__C_src.CreatedDate,
        EXT_VV_REMOTE_MEETING_VOD__C_src.CreatedById,
        EXT_VV_REMOTE_MEETING_VOD__C_src.LastModifiedDate,
        EXT_VV_REMOTE_MEETING_VOD__C_src.LastModifiedById,
        EXT_VV_REMOTE_MEETING_VOD__C_src.SystemModstamp,
        EXT_VV_REMOTE_MEETING_VOD__C_src.MayEdit,
        EXT_VV_REMOTE_MEETING_VOD__C_src.IsLocked,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Id_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Name_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Mobile_ID_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Scheduled_DateTime_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Scheduled_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Attendance_Report_Process_Status_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Latest_Meeting_Start_Datetime_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Password_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Outcome_Status_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.batch_id,
        EXT_VV_REMOTE_MEETING_VOD__C_src.row_id,
        EXT_VV_REMOTE_MEETING_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_REMOTE_MEETING_VOD__C_src
 ORDER BY EXT_VV_REMOTE_MEETING_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_REMOTE_MEETING_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_ACCOUNT_src_b0 /*+basename(EXT_VV_ACCOUNT_src),createtype(L)*/ 
(
 ID,
 ISDELETED,
 MASTERRECORDID,
 NAME,
 LASTNAME,
 FIRSTNAME,
 SALUTATION,
 TYPE,
 RECORDTYPEID,
 PHONE,
 FAX,
 WEBSITE,
 NUMBEROFEMPLOYEES,
 OWNERSHIP,
 OWNERID,
 CREATEDDATE,
 CREATEDBYID,
 LASTMODIFIEDDATE,
 LASTMODIFIEDBYID,
 SYSTEMMODSTAMP,
 LASTACTIVITYDATE,
 MAYEDIT,
 ISLOCKED,
 LASTVIEWEDDATE,
 LASTREFERENCEDDATE,
 ISEXCLUDEDFROMREALIGN,
 PERSONCONTACTID,
 ISPERSONACCOUNT,
 PERSONMAILINGSTREET,
 PERSONMAILINGCITY,
 PERSONMAILINGSTATE,
 PERSONMAILINGPOSTALCODE,
 PERSONMAILINGCOUNTRY,
 PERSONMAILINGLATITUDE,
 PERSONMAILINGLONGITUDE,
 PERSONOTHERSTREET,
 PERSONOTHERCITY,
 PERSONOTHERSTATE,
 PERSONOTHERPOSTALCODE,
 PERSONOTHERCOUNTRY,
 PERSONOTHERLATITUDE,
 PERSONOTHERLONGITUDE,
 PERSONMOBILEPHONE,
 PERSONHOMEPHONE,
 PERSONOTHERPHONE,
 PERSONASSISTANTPHONE,
 PERSONEMAIL,
 PERSONTITLE,
 PERSONDEPARTMENT,
 PERSONASSISTANTNAME,
 PERSONBIRTHDATE,
 PERSONHASOPTEDOUTOFEMAIL,
 PERSONHASOPTEDOUTOFFAX,
 PERSONDONOTCALL,
 PERSONLASTCUREQUESTDATE,
 PERSONLASTCUUPDATEDATE,
 PERSONEMAILBOUNCEDREASON,
 PERSONEMAILBOUNCEDDATE,
 JIGSAW,
 JIGSAWCOMPANYID,
 ACCOUNTSOURCE,
 SICDESC,
 EXTERNAL_ID_VOD__C,
 CREDENTIALS_VOD__C,
 EXCLUDE_FROM_ZIP_TO_TERR_PROCE,
 GROUP_SPECIALTY_1_VOD__C,
 GROUP_SPECIALTY_2_VOD__C,
 SPECIALTY_1_VOD__C,
 SPECIALTY_2_VOD__C,
 FORMATTED_NAME_VOD__C,
 TERRITORY_TEST_VOD__C,
 MOBILE_ID_VOD__C,
 GENDER_VOD__C,
 ID_VOD__C,
 DO_NOT_SYNC_SALES_DATA_VOD__C,
 ID2_VOD__C,
 PREFERRED_NAME_VOD__C,
 SAMPLE_DEFAULT_VOD__C,
 SEGMENTATIONS_VOD__C,
 RESTRICTED_PRODUCTS_VOD__C,
 PAYER_ID_VOD__C,
 ACCOUNT_STATUS_TVA__C,
 DO_NOT_CALL_VOD__C,
 BEDS__C,
 SPEND_AMOUNT__C,
 PDRP_OPT_OUT_VOD__C,
 SPEND_STATUS_VALUE_VOD__C,
 PDRP_OPT_OUT_DATE_VOD__C,
 SPEND_STATUS_VOD__C,
 ENABLE_RESTRICTED_PRODUCTS,
 CALL_REMINDER_VOD__C,
 ACCOUNT_GROUP_VOD__C,
 PRIMARY_PARENT_VOD__C,
 COLOR_VOD__C,
 MIDDLE_VOD__C,
 SUFFIX_VOD__C,
 ACCOUNT_LOCATION_TVA__C,
 NO_ORDERS_VOD__C,
 ACCOUNT_MASTER_ID_TVA__C,
 ACCOUNT_EMAIL_TVA__C,
 ACCOUNT_SEARCH_FIRSTLAST,
 ACCOUNT_SEARCH_LASTFIRST,
 PERSON_PREFERRED_NAME_TVA__C,
 PRACTICE_AT_HOSPITAL_VOD__C,
 PRACTICE_NEAR_HOSPITAL_VOD__C,
 DO_NOT_CREATE_CHILD_ACCOUNT,
 TOTAL_MDS_DOS__C,
 AHA__C,
 ORDER_TYPE_VOD__C,
 NPI_VOD__C,
 ME__C,
 SPEAKER__C,
 INVESTIGATOR_VOD__C,
 DEFAULT_ORDER_TYPE_VOD__C,
 PERSON_DEGREE_TVA__C,
 TAX_STATUS__C,
 MODEL__C,
 OFFERINGS__C,
 DEPARTMENTS__C,
 ACCOUNT_TYPE__C,
 ACCOUNT_SEARCH_BUSINESS_VOD__C,
 BUSINESS_PROFESSIONAL_PERSON,
 NO_SPEND_TVA__C,
 HOSPITAL_TYPE_VOD__C,
 ACCOUNT_CLASS_VOD__C,
 FURIGANA_VOD__C,
 TIRF_REMS_TVA__C,
 FENTORA_APP_TVA__C,
 TOTAL_REVENUE_000__C,
 NET_INCOME_LOSS_000__C,
 PMPM_INCOME_LOSS_000__C,
 COMMERCIAL_PREMIUMS_PMPM__C,
 MEDICAL_LOSS_RATIO__C,
 MEDICAL_EXPENSES_PMPM__C,
 COMMERCIAL_PATIENT_DAYS_1000,
 HMO_MARKET_SHR__C,
 HMO__C,
 HMO_POS__C,
 PPO__C,
 PPO_POS__C,
 MEDICARE__C,
 MEDICAID__C,
 NUVIGIL_APP_TVA__C,
 MDS_STATUS_TVA__C,
 LIS_STATUS_TVA__C,
 DNC_PCS_TVA__C,
 DNC_CNS_TVA__C,
 SUFFIX_TVA__C,
 TYSABRI_STATUS_TVA__C,
 BUSINESS_DESCRIPTION__C,
 REGIONAL_STRATEGY__C,
 CONTRACTS_PROCESS__C,
 CML_PROFILED_TVA__C,
 CELL_PHONE_TVA__C,
 NO_CONTACT_TVA__C,
 OUTLET_ID_TVA__C,
 PMO_GPO_ACCOUNT_AFFILIATIONS,
 TERRITORY_STATUS_TVA__C,
 ZDEA_NUMBER_TVA__C,
 VEEVA_ID_TVA__C,
 TREANDA_LQ_TGT_TVA__C,
 TBO_FILGRASTIM_TARGET_TVA__C,
 SLN_RESCRUB_TVA__C,
 ACCOUNT_IDENTIFIER_VOD__C,
 TARGET__C,
 KOL_VOD__C,
 REMS_EXPIRATION_DATE_TEVA__C,
 ACCOUNT_DEMO_ID_TVA__C,
 TOTAL_LIVES__C,
 TOTAL_PHYSICIANS_ENROLLED__C,
 TIRF_REMS_EFF_DATE_TVA__C,
 BUSINESS_ASSOCIATE_AGREEMENT,
 DO_NOT_PROMOTE_TVA__C,
 ACCOUNT_DEA_TVA__C,
 BP_NUMBER__C,
 PARAGARD_SEGMENTATION_TVA__C,
 TELESALES_ACTIVITY_TVA__C,
 DESIGNATION_TVA__C,
 TOTAL_PHARMACISTS__C,
 COMP_PRICING_TVA__C,
 FORMULARY_TVA__C,
 GLN_TVA__C,
 GPO_CONTRACTS_TVA__C,
 HIN_TVA__C,
 MAX_ID_TVA__C,
 ONCOLOGY_SERVICES_TVA__C,
 PCP_PROGRAM_TVA__C,
 PHARMACY_LOCATION_TVA__C,
 PRIMARY_CREDENTIAL_TVA__C,
 PRIMARY_WHOLESALER_TVA__C,
 REP_CREDENTIALING_TVA__C,
 SECONDARY_CREDENTIAL_TVA__C,
 SIGN_IN_LOCATION_TVA__C,
 SPECIAL_TVA__C,
 SUB_TYPE_ID_TVA__C,
 SUB_TYPE_TVA__C,
 TEVA_CONTRACTS_TVA__C,
 IMS_ORG_ID_TVA__C,
 CM_ID_TVA__C,
 YEAR_OF_BIRTH_TVA__C,
 TEACHING_HOSPITAL_TVA__C,
 ACCOUNT_ARCHIVED_TVA__C,
 MOBILE_ID_VOD__PC,
 STAFF_EMAIL,
 COMPANY_MANAGED_EMAIL,
 ALTERNATE_EMAIL,
 batch_id,
 row_id,
 update_ts,
 ACCREDITATIONS_KAM__C,
 ADDL_SVCS_PATIENT_SVCS_OFFERING_KAM__C,
 ADDL_SERVICES_SALESFORCE_KAM__C,
 AGGREGATION_GROUP_KAM__C,
 ALVIMOPAN_ANDA_KAM__C,
 ALVIMOPAN_BRAND_USAGE_KAM__C,
 ALVIMOPAN_CONVERTED_KAM__C,
 ALVIMOPAN_REMS_KAM__C,
 ALVIMOPAN_USAGE_KAM__C,
 ANDA_ACCOUNT_KAM__C,
 GPO_IDN__C,
 GPO_OAKAM__C,
 GPO_AFFILIATIONS_KAM__C,
 HERZUMA_TARGET_KAM__C,
 IDN_KAM__C,
 IDN_SPECIALTY_PHARMACY__C,
 KAM_PRIMARY_CONTACT__C,
 LOC_KAM__C,
 PCP_KAM__C,
 PHARMACY_CLASSIFICATION_KAM__C,
 PHARMACY_TYPE_KAM__C,
 PREFERRED_WHOLESALER_KAM__C,
 PURCHASING_HERZUMA_KAM__C,
 PURCHASING_TRUXIMA_KAM__C,
 RA_TARGET_KAM__C,
 ROMIDEPSIN_CONVERTED_KAM__C,
 ROMIDEPSIN_TARGET_KAM__C,
 RX_NETWORKS_SUB_GROUP_KAM__C,
 SECONDARY_WHOLESALER_KAM__C,
 SPECIALTY_PHARMACY_NETWORK_AFFIL_KAM__C,
 STATES_IN_NETWORK_FOR_MEDICAID_KAM__C,
 STATES_LICENSED_TO_DISPENSE_KAM__C,
 THERAPEUTIC_FOCUS_CONDITIONS_SERVED_KAM__C,
 TRUXIMA_TARGET_KAM__C,
 WHOLESALER_KAM__C,
 buy_and_bill_tva__c,
 free_trial_program_established_tva__c,
 hcps_at_account_accept_samples_tva__c,
 pt_committee_approval_tva__c,
 type_of_account_tva__c,
 t22s2_rep_email_personemail_status_tva__c,
 t22s2_rep_email_staffemail_status_tva__c,
 t22s2_rep_email_status2_tva__c,
 co_mgd_email_exp_tva__c
)
AS
 SELECT EXT_VV_ACCOUNT_src.ID,
        EXT_VV_ACCOUNT_src.ISDELETED,
        EXT_VV_ACCOUNT_src.MASTERRECORDID,
        EXT_VV_ACCOUNT_src.NAME,
        EXT_VV_ACCOUNT_src.LASTNAME,
        EXT_VV_ACCOUNT_src.FIRSTNAME,
        EXT_VV_ACCOUNT_src.SALUTATION,
        EXT_VV_ACCOUNT_src.TYPE,
        EXT_VV_ACCOUNT_src.RECORDTYPEID,
        EXT_VV_ACCOUNT_src.PHONE,
        EXT_VV_ACCOUNT_src.FAX,
        EXT_VV_ACCOUNT_src.WEBSITE,
        EXT_VV_ACCOUNT_src.NUMBEROFEMPLOYEES,
        EXT_VV_ACCOUNT_src.OWNERSHIP,
        EXT_VV_ACCOUNT_src.OWNERID,
        EXT_VV_ACCOUNT_src.CREATEDDATE,
        EXT_VV_ACCOUNT_src.CREATEDBYID,
        EXT_VV_ACCOUNT_src.LASTMODIFIEDDATE,
        EXT_VV_ACCOUNT_src.LASTMODIFIEDBYID,
        EXT_VV_ACCOUNT_src.SYSTEMMODSTAMP,
        EXT_VV_ACCOUNT_src.LASTACTIVITYDATE,
        EXT_VV_ACCOUNT_src.MAYEDIT,
        EXT_VV_ACCOUNT_src.ISLOCKED,
        EXT_VV_ACCOUNT_src.LASTVIEWEDDATE,
        EXT_VV_ACCOUNT_src.LASTREFERENCEDDATE,
        EXT_VV_ACCOUNT_src.ISEXCLUDEDFROMREALIGN,
        EXT_VV_ACCOUNT_src.PERSONCONTACTID,
        EXT_VV_ACCOUNT_src.ISPERSONACCOUNT,
        EXT_VV_ACCOUNT_src.PERSONMAILINGSTREET,
        EXT_VV_ACCOUNT_src.PERSONMAILINGCITY,
        EXT_VV_ACCOUNT_src.PERSONMAILINGSTATE,
        EXT_VV_ACCOUNT_src.PERSONMAILINGPOSTALCODE,
        EXT_VV_ACCOUNT_src.PERSONMAILINGCOUNTRY,
        EXT_VV_ACCOUNT_src.PERSONMAILINGLATITUDE,
        EXT_VV_ACCOUNT_src.PERSONMAILINGLONGITUDE,
        EXT_VV_ACCOUNT_src.PERSONOTHERSTREET,
        EXT_VV_ACCOUNT_src.PERSONOTHERCITY,
        EXT_VV_ACCOUNT_src.PERSONOTHERSTATE,
        EXT_VV_ACCOUNT_src.PERSONOTHERPOSTALCODE,
        EXT_VV_ACCOUNT_src.PERSONOTHERCOUNTRY,
        EXT_VV_ACCOUNT_src.PERSONOTHERLATITUDE,
        EXT_VV_ACCOUNT_src.PERSONOTHERLONGITUDE,
        EXT_VV_ACCOUNT_src.PERSONMOBILEPHONE,
        EXT_VV_ACCOUNT_src.PERSONHOMEPHONE,
        EXT_VV_ACCOUNT_src.PERSONOTHERPHONE,
        EXT_VV_ACCOUNT_src.PERSONASSISTANTPHONE,
        EXT_VV_ACCOUNT_src.PERSONEMAIL,
        EXT_VV_ACCOUNT_src.PERSONTITLE,
        EXT_VV_ACCOUNT_src.PERSONDEPARTMENT,
        EXT_VV_ACCOUNT_src.PERSONASSISTANTNAME,
        EXT_VV_ACCOUNT_src.PERSONBIRTHDATE,
        EXT_VV_ACCOUNT_src.PERSONHASOPTEDOUTOFEMAIL,
        EXT_VV_ACCOUNT_src.PERSONHASOPTEDOUTOFFAX,
        EXT_VV_ACCOUNT_src.PERSONDONOTCALL,
        EXT_VV_ACCOUNT_src.PERSONLASTCUREQUESTDATE,
        EXT_VV_ACCOUNT_src.PERSONLASTCUUPDATEDATE,
        EXT_VV_ACCOUNT_src.PERSONEMAILBOUNCEDREASON,
        EXT_VV_ACCOUNT_src.PERSONEMAILBOUNCEDDATE,
        EXT_VV_ACCOUNT_src.JIGSAW,
        EXT_VV_ACCOUNT_src.JIGSAWCOMPANYID,
        EXT_VV_ACCOUNT_src.ACCOUNTSOURCE,
        EXT_VV_ACCOUNT_src.SICDESC,
        EXT_VV_ACCOUNT_src.EXTERNAL_ID_VOD__C,
        EXT_VV_ACCOUNT_src.CREDENTIALS_VOD__C,
        EXT_VV_ACCOUNT_src.EXCLUDE_FROM_ZIP_TO_TERR_PROCE,
        EXT_VV_ACCOUNT_src.GROUP_SPECIALTY_1_VOD__C,
        EXT_VV_ACCOUNT_src.GROUP_SPECIALTY_2_VOD__C,
        EXT_VV_ACCOUNT_src.SPECIALTY_1_VOD__C,
        EXT_VV_ACCOUNT_src.SPECIALTY_2_VOD__C,
        EXT_VV_ACCOUNT_src.FORMATTED_NAME_VOD__C,
        EXT_VV_ACCOUNT_src.TERRITORY_TEST_VOD__C,
        EXT_VV_ACCOUNT_src.MOBILE_ID_VOD__C,
        EXT_VV_ACCOUNT_src.GENDER_VOD__C,
        EXT_VV_ACCOUNT_src.ID_VOD__C,
        EXT_VV_ACCOUNT_src.DO_NOT_SYNC_SALES_DATA_VOD__C,
        EXT_VV_ACCOUNT_src.ID2_VOD__C,
        EXT_VV_ACCOUNT_src.PREFERRED_NAME_VOD__C,
        EXT_VV_ACCOUNT_src.SAMPLE_DEFAULT_VOD__C,
        EXT_VV_ACCOUNT_src.SEGMENTATIONS_VOD__C,
        EXT_VV_ACCOUNT_src.RESTRICTED_PRODUCTS_VOD__C,
        EXT_VV_ACCOUNT_src.PAYER_ID_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.DO_NOT_CALL_VOD__C,
        EXT_VV_ACCOUNT_src.BEDS__C,
        EXT_VV_ACCOUNT_src.SPEND_AMOUNT__C,
        EXT_VV_ACCOUNT_src.PDRP_OPT_OUT_VOD__C,
        EXT_VV_ACCOUNT_src.SPEND_STATUS_VALUE_VOD__C,
        EXT_VV_ACCOUNT_src.PDRP_OPT_OUT_DATE_VOD__C,
        EXT_VV_ACCOUNT_src.SPEND_STATUS_VOD__C,
        EXT_VV_ACCOUNT_src.ENABLE_RESTRICTED_PRODUCTS,
        EXT_VV_ACCOUNT_src.CALL_REMINDER_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_GROUP_VOD__C,
        EXT_VV_ACCOUNT_src.PRIMARY_PARENT_VOD__C,
        EXT_VV_ACCOUNT_src.COLOR_VOD__C,
        EXT_VV_ACCOUNT_src.MIDDLE_VOD__C,
        EXT_VV_ACCOUNT_src.SUFFIX_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_LOCATION_TVA__C,
        EXT_VV_ACCOUNT_src.NO_ORDERS_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_MASTER_ID_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_EMAIL_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_FIRSTLAST,
        EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_LASTFIRST,
        EXT_VV_ACCOUNT_src.PERSON_PREFERRED_NAME_TVA__C,
        EXT_VV_ACCOUNT_src.PRACTICE_AT_HOSPITAL_VOD__C,
        EXT_VV_ACCOUNT_src.PRACTICE_NEAR_HOSPITAL_VOD__C,
        EXT_VV_ACCOUNT_src.DO_NOT_CREATE_CHILD_ACCOUNT,
        EXT_VV_ACCOUNT_src.TOTAL_MDS_DOS__C,
        EXT_VV_ACCOUNT_src.AHA__C,
        EXT_VV_ACCOUNT_src.ORDER_TYPE_VOD__C,
        EXT_VV_ACCOUNT_src.NPI_VOD__C,
        EXT_VV_ACCOUNT_src.ME__C,
        EXT_VV_ACCOUNT_src.SPEAKER__C,
        EXT_VV_ACCOUNT_src.INVESTIGATOR_VOD__C,
        EXT_VV_ACCOUNT_src.DEFAULT_ORDER_TYPE_VOD__C,
        EXT_VV_ACCOUNT_src.PERSON_DEGREE_TVA__C,
        EXT_VV_ACCOUNT_src.TAX_STATUS__C,
        EXT_VV_ACCOUNT_src.MODEL__C,
        EXT_VV_ACCOUNT_src.OFFERINGS__C,
        EXT_VV_ACCOUNT_src.DEPARTMENTS__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_TYPE__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_BUSINESS_VOD__C,
        EXT_VV_ACCOUNT_src.BUSINESS_PROFESSIONAL_PERSON,
        EXT_VV_ACCOUNT_src.NO_SPEND_TVA__C,
        EXT_VV_ACCOUNT_src.HOSPITAL_TYPE_VOD__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_CLASS_VOD__C,
        EXT_VV_ACCOUNT_src.FURIGANA_VOD__C,
        EXT_VV_ACCOUNT_src.TIRF_REMS_TVA__C,
        EXT_VV_ACCOUNT_src.FENTORA_APP_TVA__C,
        EXT_VV_ACCOUNT_src.TOTAL_REVENUE_000__C,
        EXT_VV_ACCOUNT_src.NET_INCOME_LOSS_000__C,
        EXT_VV_ACCOUNT_src.PMPM_INCOME_LOSS_000__C,
        EXT_VV_ACCOUNT_src.COMMERCIAL_PREMIUMS_PMPM__C,
        EXT_VV_ACCOUNT_src.MEDICAL_LOSS_RATIO__C,
        EXT_VV_ACCOUNT_src.MEDICAL_EXPENSES_PMPM__C,
        EXT_VV_ACCOUNT_src.COMMERCIAL_PATIENT_DAYS_1000,
        EXT_VV_ACCOUNT_src.HMO_MARKET_SHR__C,
        EXT_VV_ACCOUNT_src.HMO__C,
        EXT_VV_ACCOUNT_src.HMO_POS__C,
        EXT_VV_ACCOUNT_src.PPO__C,
        EXT_VV_ACCOUNT_src.PPO_POS__C,
        EXT_VV_ACCOUNT_src.MEDICARE__C,
        EXT_VV_ACCOUNT_src.MEDICAID__C,
        EXT_VV_ACCOUNT_src.NUVIGIL_APP_TVA__C,
        EXT_VV_ACCOUNT_src.MDS_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.LIS_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.DNC_PCS_TVA__C,
        EXT_VV_ACCOUNT_src.DNC_CNS_TVA__C,
        EXT_VV_ACCOUNT_src.SUFFIX_TVA__C,
        EXT_VV_ACCOUNT_src.TYSABRI_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.BUSINESS_DESCRIPTION__C,
        EXT_VV_ACCOUNT_src.REGIONAL_STRATEGY__C,
        EXT_VV_ACCOUNT_src.CONTRACTS_PROCESS__C,
        EXT_VV_ACCOUNT_src.CML_PROFILED_TVA__C,
        EXT_VV_ACCOUNT_src.CELL_PHONE_TVA__C,
        EXT_VV_ACCOUNT_src.NO_CONTACT_TVA__C,
        EXT_VV_ACCOUNT_src.OUTLET_ID_TVA__C,
        EXT_VV_ACCOUNT_src.PMO_GPO_ACCOUNT_AFFILIATIONS,
        EXT_VV_ACCOUNT_src.TERRITORY_STATUS_TVA__C,
        EXT_VV_ACCOUNT_src.ZDEA_NUMBER_TVA__C,
        EXT_VV_ACCOUNT_src.VEEVA_ID_TVA__C,
        EXT_VV_ACCOUNT_src.TREANDA_LQ_TGT_TVA__C,
        EXT_VV_ACCOUNT_src.TBO_FILGRASTIM_TARGET_TVA__C,
        EXT_VV_ACCOUNT_src.SLN_RESCRUB_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_IDENTIFIER_VOD__C,
        EXT_VV_ACCOUNT_src.TARGET__C,
        EXT_VV_ACCOUNT_src.KOL_VOD__C,
        EXT_VV_ACCOUNT_src.REMS_EXPIRATION_DATE_TEVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_DEMO_ID_TVA__C,
        EXT_VV_ACCOUNT_src.TOTAL_LIVES__C,
        EXT_VV_ACCOUNT_src.TOTAL_PHYSICIANS_ENROLLED__C,
        EXT_VV_ACCOUNT_src.TIRF_REMS_EFF_DATE_TVA__C,
        EXT_VV_ACCOUNT_src.BUSINESS_ASSOCIATE_AGREEMENT,
        EXT_VV_ACCOUNT_src.DO_NOT_PROMOTE_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_DEA_TVA__C,
        EXT_VV_ACCOUNT_src.BP_NUMBER__C,
        EXT_VV_ACCOUNT_src.PARAGARD_SEGMENTATION_TVA__C,
        EXT_VV_ACCOUNT_src.TELESALES_ACTIVITY_TVA__C,
        EXT_VV_ACCOUNT_src.DESIGNATION_TVA__C,
        EXT_VV_ACCOUNT_src.TOTAL_PHARMACISTS__C,
        EXT_VV_ACCOUNT_src.COMP_PRICING_TVA__C,
        EXT_VV_ACCOUNT_src.FORMULARY_TVA__C,
        EXT_VV_ACCOUNT_src.GLN_TVA__C,
        EXT_VV_ACCOUNT_src.GPO_CONTRACTS_TVA__C,
        EXT_VV_ACCOUNT_src.HIN_TVA__C,
        EXT_VV_ACCOUNT_src.MAX_ID_TVA__C,
        EXT_VV_ACCOUNT_src.ONCOLOGY_SERVICES_TVA__C,
        EXT_VV_ACCOUNT_src.PCP_PROGRAM_TVA__C,
        EXT_VV_ACCOUNT_src.PHARMACY_LOCATION_TVA__C,
        EXT_VV_ACCOUNT_src.PRIMARY_CREDENTIAL_TVA__C,
        EXT_VV_ACCOUNT_src.PRIMARY_WHOLESALER_TVA__C,
        EXT_VV_ACCOUNT_src.REP_CREDENTIALING_TVA__C,
        EXT_VV_ACCOUNT_src.SECONDARY_CREDENTIAL_TVA__C,
        EXT_VV_ACCOUNT_src.SIGN_IN_LOCATION_TVA__C,
        EXT_VV_ACCOUNT_src.SPECIAL_TVA__C,
        EXT_VV_ACCOUNT_src.SUB_TYPE_ID_TVA__C,
        EXT_VV_ACCOUNT_src.SUB_TYPE_TVA__C,
        EXT_VV_ACCOUNT_src.TEVA_CONTRACTS_TVA__C,
        EXT_VV_ACCOUNT_src.IMS_ORG_ID_TVA__C,
        EXT_VV_ACCOUNT_src.CM_ID_TVA__C,
        EXT_VV_ACCOUNT_src.YEAR_OF_BIRTH_TVA__C,
        EXT_VV_ACCOUNT_src.TEACHING_HOSPITAL_TVA__C,
        EXT_VV_ACCOUNT_src.ACCOUNT_ARCHIVED_TVA__C,
        EXT_VV_ACCOUNT_src.MOBILE_ID_VOD__PC,
        EXT_VV_ACCOUNT_src.STAFF_EMAIL,
        EXT_VV_ACCOUNT_src.COMPANY_MANAGED_EMAIL,
        EXT_VV_ACCOUNT_src.ALTERNATE_EMAIL,
        EXT_VV_ACCOUNT_src.batch_id,
        EXT_VV_ACCOUNT_src.row_id,
        EXT_VV_ACCOUNT_src.update_ts,
        EXT_VV_ACCOUNT_src.ACCREDITATIONS_KAM__C,
        EXT_VV_ACCOUNT_src.ADDL_SVCS_PATIENT_SVCS_OFFERING_KAM__C,
        EXT_VV_ACCOUNT_src.ADDL_SERVICES_SALESFORCE_KAM__C,
        EXT_VV_ACCOUNT_src.AGGREGATION_GROUP_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_ANDA_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_BRAND_USAGE_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_CONVERTED_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_REMS_KAM__C,
        EXT_VV_ACCOUNT_src.ALVIMOPAN_USAGE_KAM__C,
        EXT_VV_ACCOUNT_src.ANDA_ACCOUNT_KAM__C,
        EXT_VV_ACCOUNT_src.GPO_IDN__C,
        EXT_VV_ACCOUNT_src.GPO_OAKAM__C,
        EXT_VV_ACCOUNT_src.GPO_AFFILIATIONS_KAM__C,
        EXT_VV_ACCOUNT_src.HERZUMA_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.IDN_KAM__C,
        EXT_VV_ACCOUNT_src.IDN_SPECIALTY_PHARMACY__C,
        EXT_VV_ACCOUNT_src.KAM_PRIMARY_CONTACT__C,
        EXT_VV_ACCOUNT_src.LOC_KAM__C,
        EXT_VV_ACCOUNT_src.PCP_KAM__C,
        EXT_VV_ACCOUNT_src.PHARMACY_CLASSIFICATION_KAM__C,
        EXT_VV_ACCOUNT_src.PHARMACY_TYPE_KAM__C,
        EXT_VV_ACCOUNT_src.PREFERRED_WHOLESALER_KAM__C,
        EXT_VV_ACCOUNT_src.PURCHASING_HERZUMA_KAM__C,
        EXT_VV_ACCOUNT_src.PURCHASING_TRUXIMA_KAM__C,
        EXT_VV_ACCOUNT_src.RA_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.ROMIDEPSIN_CONVERTED_KAM__C,
        EXT_VV_ACCOUNT_src.ROMIDEPSIN_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.RX_NETWORKS_SUB_GROUP_KAM__C,
        EXT_VV_ACCOUNT_src.SECONDARY_WHOLESALER_KAM__C,
        EXT_VV_ACCOUNT_src.SPECIALTY_PHARMACY_NETWORK_AFFIL_KAM__C,
        EXT_VV_ACCOUNT_src.STATES_IN_NETWORK_FOR_MEDICAID_KAM__C,
        EXT_VV_ACCOUNT_src.STATES_LICENSED_TO_DISPENSE_KAM__C,
        EXT_VV_ACCOUNT_src.THERAPEUTIC_FOCUS_CONDITIONS_SERVED_KAM__C,
        EXT_VV_ACCOUNT_src.TRUXIMA_TARGET_KAM__C,
        EXT_VV_ACCOUNT_src.WHOLESALER_KAM__C,
        EXT_VV_ACCOUNT_src.buy_and_bill_tva__c,
        EXT_VV_ACCOUNT_src.free_trial_program_established_tva__c,
        EXT_VV_ACCOUNT_src.hcps_at_account_accept_samples_tva__c,
        EXT_VV_ACCOUNT_src.pt_committee_approval_tva__c,
        EXT_VV_ACCOUNT_src.type_of_account_tva__c,
        EXT_VV_ACCOUNT_src.t22s2_rep_email_personemail_status_tva__c,
        EXT_VV_ACCOUNT_src.t22s2_rep_email_staffemail_status_tva__c,
        EXT_VV_ACCOUNT_src.t22s2_rep_email_status2_tva__c,
        EXT_VV_ACCOUNT_src.co_mgd_email_exp_tva__c
 FROM teva_ingestion.EXT_VV_ACCOUNT_src
 ORDER BY EXT_VV_ACCOUNT_src.batch_id
SEGMENTED BY hash(EXT_VV_ACCOUNT_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_EMAIL_ACTIVITY_VOD__C_src_super_b0 /*+basename(EXT_VV_EMAIL_ACTIVITY_VOD__C_src_super)*/ 
(
 Id,
 CreatedDate,
 CreatedById,
 LastModifiedDate,
 LastModifiedById,
 RecordTypeId,
 IsDeleted,
 SystemModstamp,
 Name,
 Event_type_vod__c,
 Activity_DateTime_vod__c,
 Event_Msg_vod__c,
 Approved_Document_vod__c,
 City_vod__c,
 Click_URL_vod__c,
 Client_Name_vod__c,
 Client_OS_vod__c,
 Client_Type_vod__c,
 Country_vod__c,
 Device_Type_vod__c,
 Vault_Doc_ID_vod__c,
 Vault_Doc_Name_vod__c,
 Vault_Document_Number_vod__c,
 Vault_Document_Title_vod__c,
 IP_Address_vod__c,
 Link_Name_vod__c,
 Vault_Document_Major_Version_vod__c,
 Vault_Document_Minor_Version_vod__c,
 Preference_Modification_vod__c,
 Region_vod__c,
 Sent_Email_vod__c,
 User_Agent_vod__c,
 Vault_Instance_ID_vod__c,
 batch_id ENCODING RLE,
 row_id ENCODING DELTAVAL,
 update_ts
)
AS
 SELECT EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Id,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.CreatedDate,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.CreatedById,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.LastModifiedDate,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.LastModifiedById,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.RecordTypeId,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.IsDeleted,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.SystemModstamp,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Name,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Event_type_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Activity_DateTime_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Event_Msg_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Approved_Document_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.City_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Click_URL_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Client_Name_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Client_OS_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Client_Type_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Country_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Device_Type_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Doc_ID_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Doc_Name_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Number_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Title_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.IP_Address_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Link_Name_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Major_Version_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Minor_Version_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Preference_Modification_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Region_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Sent_Email_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.User_Agent_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Instance_ID_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.batch_id,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.row_id,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_EMAIL_ACTIVITY_VOD__C_src
 ORDER BY EXT_VV_EMAIL_ACTIVITY_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_ZS_TEVA_PAYER_WRKBK_src_super_b0 /*+basename(EXT_ZS_TEVA_PAYER_WRKBK_src_super)*/ 
(
 plan_code,
 Final_Key_Controlling_Account,
 Key_Parent_Account,
 PBM,
 Payer,
 Plan,
 State_Code,
 AJOVY_TRx,
 Aimovig_TRx,
 Emgality_TRx,
 aCGRP_TRx,
 AJOVY_Share_Percent,
 Aimovig_Share_Percent,
 Emgality_Share_Percent,
 Latest_Mth_AJOVY_TRx,
 Latest_Mth_AJOVY_Share_Percent,
 Lives_Covered_Total,
 Ajovy_Formulary_Status,
 Aimovig_Formulary_Status,
 Emgality_Formulary_Status,
 Plan_Payment_Type,
 Priority_Account_flag,
 Justification,
 Plan_Mapping,
 batch_id,
 row_id,
 update_t,
 key_controlling_parent,
 pbm_payer_filter,
 gpo,
 refresh_month
)
AS
 SELECT EXT_ZS_TEVA_PAYER_WRKBK_src.plan_code,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Final_Key_Controlling_Account,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Key_Parent_Account,
        EXT_ZS_TEVA_PAYER_WRKBK_src.PBM,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Payer,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Plan,
        EXT_ZS_TEVA_PAYER_WRKBK_src.State_Code,
        EXT_ZS_TEVA_PAYER_WRKBK_src.AJOVY_TRx,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Aimovig_TRx,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Emgality_TRx,
        EXT_ZS_TEVA_PAYER_WRKBK_src.aCGRP_TRx,
        EXT_ZS_TEVA_PAYER_WRKBK_src.AJOVY_Share_Percent,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Aimovig_Share_Percent,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Emgality_Share_Percent,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Latest_Mth_AJOVY_TRx,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Latest_Mth_AJOVY_Share_Percent,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Lives_Covered_Total,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Ajovy_Formulary_Status,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Aimovig_Formulary_Status,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Emgality_Formulary_Status,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Plan_Payment_Type,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Priority_Account_flag,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Justification,
        EXT_ZS_TEVA_PAYER_WRKBK_src.Plan_Mapping,
        EXT_ZS_TEVA_PAYER_WRKBK_src.batch_id,
        EXT_ZS_TEVA_PAYER_WRKBK_src.row_id,
        EXT_ZS_TEVA_PAYER_WRKBK_src.update_ts AS update_t,
        EXT_ZS_TEVA_PAYER_WRKBK_src.key_controlling_parent,
        EXT_ZS_TEVA_PAYER_WRKBK_src.pbm_payer_filter,
        EXT_ZS_TEVA_PAYER_WRKBK_src.gpo,
        EXT_ZS_TEVA_PAYER_WRKBK_src.refresh_month
 FROM teva_ingestion.EXT_ZS_TEVA_PAYER_WRKBK_src
 ORDER BY EXT_ZS_TEVA_PAYER_WRKBK_src.batch_id
SEGMENTED BY hash(EXT_ZS_TEVA_PAYER_WRKBK_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.EXT_VV_REP_ROSTER_VOD__C_src_super_b0 /*+basename(EXT_VV_REP_ROSTER_VOD__C_src_super)*/ 
(
 id,
 createddate,
 createdbyid,
 lastmodifieddate,
 lastmodifiedbyid,
 ownerid,
 isdeleted,
 name,
 systemmodstamp,
 mayedit,
 islocked,
 territory_vod__c,
 address_line_1_vod__c,
 address_line_2_vod__c,
 address_line_3_tva__c,
 city_vod__c,
 state_vod__c,
 zip_vod__c,
 computer_asset_tag__c,
 fax_number__c,
 home_phone__c,
 mobile_number__c,
 organization_id__c,
 rep_type_tva__c,
 sampleflag_tva__c,
 ship_addr1_tva__c,
 ship_addr2_tva__c,
 ship_addr3_tva__c,
 ship_city_tva__c,
 ship_state_tva__c,
 ship_zip_tva__c,
 store_addr1_tva__c,
 store_addr2_tva__c,
 store_addr3_tva__c,
 store_city_tva__c,
 store_state_tva__c,
 store_zip_tva__c,
 username_external_id_vod__c,
 vin__c,
 lastvieweddate,
 lastreferenceddate,
 batch_id,
 row_id,
 update_ts,
 useremail,
 local_employee_id__c
)
AS
 SELECT EXT_VV_REP_ROSTER_VOD__C_src.id,
        EXT_VV_REP_ROSTER_VOD__C_src.createddate,
        EXT_VV_REP_ROSTER_VOD__C_src.createdbyid,
        EXT_VV_REP_ROSTER_VOD__C_src.lastmodifieddate,
        EXT_VV_REP_ROSTER_VOD__C_src.lastmodifiedbyid,
        EXT_VV_REP_ROSTER_VOD__C_src.ownerid,
        EXT_VV_REP_ROSTER_VOD__C_src.isdeleted,
        EXT_VV_REP_ROSTER_VOD__C_src.name,
        EXT_VV_REP_ROSTER_VOD__C_src.systemmodstamp,
        EXT_VV_REP_ROSTER_VOD__C_src.mayedit,
        EXT_VV_REP_ROSTER_VOD__C_src.islocked,
        EXT_VV_REP_ROSTER_VOD__C_src.territory_vod__c,
        EXT_VV_REP_ROSTER_VOD__C_src.address_line_1_vod__c,
        EXT_VV_REP_ROSTER_VOD__C_src.address_line_2_vod__c,
        EXT_VV_REP_ROSTER_VOD__C_src.address_line_3_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.city_vod__c,
        EXT_VV_REP_ROSTER_VOD__C_src.state_vod__c,
        EXT_VV_REP_ROSTER_VOD__C_src.zip_vod__c,
        EXT_VV_REP_ROSTER_VOD__C_src.computer_asset_tag__c,
        EXT_VV_REP_ROSTER_VOD__C_src.fax_number__c,
        EXT_VV_REP_ROSTER_VOD__C_src.home_phone__c,
        EXT_VV_REP_ROSTER_VOD__C_src.mobile_number__c,
        EXT_VV_REP_ROSTER_VOD__C_src.organization_id__c,
        EXT_VV_REP_ROSTER_VOD__C_src.rep_type_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.sampleflag_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.ship_addr1_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.ship_addr2_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.ship_addr3_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.ship_city_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.ship_state_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.ship_zip_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.store_addr1_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.store_addr2_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.store_addr3_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.store_city_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.store_state_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.store_zip_tva__c,
        EXT_VV_REP_ROSTER_VOD__C_src.username_external_id_vod__c,
        EXT_VV_REP_ROSTER_VOD__C_src.vin__c,
        EXT_VV_REP_ROSTER_VOD__C_src.lastvieweddate,
        EXT_VV_REP_ROSTER_VOD__C_src.lastreferenceddate,
        EXT_VV_REP_ROSTER_VOD__C_src.batch_id,
        EXT_VV_REP_ROSTER_VOD__C_src.row_id,
        EXT_VV_REP_ROSTER_VOD__C_src.update_ts,
        EXT_VV_REP_ROSTER_VOD__C_src.useremail,
        EXT_VV_REP_ROSTER_VOD__C_src.local_employee_id__c
 FROM teva_ingestion.EXT_VV_REP_ROSTER_VOD__C_src
 ORDER BY EXT_VV_REP_ROSTER_VOD__C_src.batch_id
SEGMENTED BY hash(EXT_VV_REP_ROSTER_VOD__C_src.row_id) ALL NODES;

CREATE PROJECTION teva_ingestion.teva_ingestion_control_temp_metadata_fix_b0 /*+basename(teva_ingestion_control_temp_metadata_fix),createtype(A)*/ 
(
 concat,
 batch_id,
 file_class,
 source_file_id,
 source_file,
 source_system,
 source_file_run_date,
 source_file_run_ts,
 message,
 data_from_ts,
 data_to_ts,
 job_start_ts,
 job_end_ts,
 update_ts,
 unique_file_id,
 original_source_system,
 original_source_system_path,
 original_source_system_modified_date,
 rows_loaded
)
AS
 SELECT teva_ingestion_control_temp_metadata_fix.concat,
        teva_ingestion_control_temp_metadata_fix.batch_id,
        teva_ingestion_control_temp_metadata_fix.file_class,
        teva_ingestion_control_temp_metadata_fix.source_file_id,
        teva_ingestion_control_temp_metadata_fix.source_file,
        teva_ingestion_control_temp_metadata_fix.source_system,
        teva_ingestion_control_temp_metadata_fix.source_file_run_date,
        teva_ingestion_control_temp_metadata_fix.source_file_run_ts,
        teva_ingestion_control_temp_metadata_fix.message,
        teva_ingestion_control_temp_metadata_fix.data_from_ts,
        teva_ingestion_control_temp_metadata_fix.data_to_ts,
        teva_ingestion_control_temp_metadata_fix.job_start_ts,
        teva_ingestion_control_temp_metadata_fix.job_end_ts,
        teva_ingestion_control_temp_metadata_fix.update_ts,
        teva_ingestion_control_temp_metadata_fix.unique_file_id,
        teva_ingestion_control_temp_metadata_fix.original_source_system,
        teva_ingestion_control_temp_metadata_fix.original_source_system_path,
        teva_ingestion_control_temp_metadata_fix.original_source_system_modified_date,
        teva_ingestion_control_temp_metadata_fix.rows_loaded
 FROM teva_ingestion.teva_ingestion_control_temp_metadata_fix
 ORDER BY teva_ingestion_control_temp_metadata_fix.batch_id,
          teva_ingestion_control_temp_metadata_fix.file_class,
          teva_ingestion_control_temp_metadata_fix.source_file_id,
          teva_ingestion_control_temp_metadata_fix.source_file,
          teva_ingestion_control_temp_metadata_fix.source_system,
          teva_ingestion_control_temp_metadata_fix.source_file_run_date,
          teva_ingestion_control_temp_metadata_fix.source_file_run_ts,
          teva_ingestion_control_temp_metadata_fix.message,
          teva_ingestion_control_temp_metadata_fix.data_from_ts,
          teva_ingestion_control_temp_metadata_fix.data_to_ts,
          teva_ingestion_control_temp_metadata_fix.job_start_ts,
          teva_ingestion_control_temp_metadata_fix.job_end_ts,
          teva_ingestion_control_temp_metadata_fix.update_ts
SEGMENTED BY hash(teva_ingestion_control_temp_metadata_fix.batch_id, teva_ingestion_control_temp_metadata_fix.source_file_id, teva_ingestion_control_temp_metadata_fix.source_file_run_date, teva_ingestion_control_temp_metadata_fix.source_file_run_ts, teva_ingestion_control_temp_metadata_fix.data_from_ts, teva_ingestion_control_temp_metadata_fix.data_to_ts, teva_ingestion_control_temp_metadata_fix.job_start_ts, teva_ingestion_control_temp_metadata_fix.job_end_ts, teva_ingestion_control_temp_metadata_fix.update_ts, teva_ingestion_control_temp_metadata_fix.file_class, teva_ingestion_control_temp_metadata_fix.source_system, teva_ingestion_control_temp_metadata_fix.message, teva_ingestion_control_temp_metadata_fix.source_file) ALL NODES;


CREATE  VIEW teva_ingestion.EXT_VV_CALL2_VOD__C_test AS
SELECT EXT_VV_CALL2_VOD__C_src.ID, EXT_VV_CALL2_VOD__C_src.OWNERID, EXT_VV_CALL2_VOD__C_src.ISDELETED, EXT_VV_CALL2_VOD__C_src.NAME, EXT_VV_CALL2_VOD__C_src.RECORDTYPEID, EXT_VV_CALL2_VOD__C_src.CREATEDDATE, EXT_VV_CALL2_VOD__C_src.CREATEDBYID, EXT_VV_CALL2_VOD__C_src.LASTMODIFIEDDATE, EXT_VV_CALL2_VOD__C_src.LASTMODIFIEDBYID, EXT_VV_CALL2_VOD__C_src.SYSTEMMODSTAMP, EXT_VV_CALL2_VOD__C_src.LASTACTIVITYDATE, EXT_VV_CALL2_VOD__C_src.MAYEDIT, EXT_VV_CALL2_VOD__C_src.ISLOCKED, EXT_VV_CALL2_VOD__C_src.LASTVIEWEDDATE, EXT_VV_CALL2_VOD__C_src.LASTREFERENCEDDATE, EXT_VV_CALL2_VOD__C_src.SAMPLE_CARD_VOD__C, EXT_VV_CALL2_VOD__C_src.ADD_DETAIL_VOD__C, (EXT_VV_CALL2_VOD__C_src.PROPERTY_VOD__C)::numeric(8,0) AS PROPERTY_VOD__C, EXT_VV_CALL2_VOD__C_src.ACCOUNT_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_PRODUCT_DISCUSSION_VOD__C, EXT_VV_CALL2_VOD__C_src.STATUS_VOD__C, EXT_VV_CALL2_VOD__C_src.PARENT_ADDRESS_VOD__C, EXT_VV_CALL2_VOD__C_src.ACCOUNT_PLAN_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_SAVENEW_VOD__C, EXT_VV_CALL2_VOD__C_src.NEXT_CALL_NOTES_VOD__C, EXT_VV_CALL2_VOD__C_src.MOBILE_ID_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_ACCOUNT_CREDENTIALS_VOD_C, EXT_VV_CALL2_VOD__C_src.ZVOD_ACCOUNT_PREFERRED_NAME_VO, EXT_VV_CALL2_VOD__C_src.ZVOD_ACCOUNT_SAMPLE_STATUS_VOD, EXT_VV_CALL2_VOD__C_src.ZVOD_ATTENDEES_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_KEY_MESSAGES_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_DETAILING_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_EXPENSES_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_FOLLOWUP_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_SAMPLES_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_SAVE_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_SUBMIT_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_DELETE_VOD__C, EXT_VV_CALL2_VOD__C_src.ACTIVITY_TYPE__C, EXT_VV_CALL2_VOD__C_src.SIGNIFICANT_EVENT__C, EXT_VV_CALL2_VOD__C_src.LOCATION_VOD__C, EXT_VV_CALL2_VOD__C_src.SUBJECT_VOD__C, EXT_VV_CALL2_VOD__C_src.UNLOCK_VOD__C, (EXT_VV_CALL2_VOD__C_src.CALL_DATETIME_VOD__C)::timestamptz AS CALL_DATETIME_VOD__C, EXT_VV_CALL2_VOD__C_src.DISBURSED_TO_VOD__C, EXT_VV_CALL2_VOD__C_src.REQUEST_RECEIPT_VOD__C, EXT_VV_CALL2_VOD__C_src.SIGNATURE_DATE_VOD__C, EXT_VV_CALL2_VOD__C_src.TERRITORY_VOD__C, EXT_VV_CALL2_VOD__C_src.SUBMITTED_BY_MOBILE_VOD__C, EXT_VV_CALL2_VOD__C_src.CALL_TYPE_VOD__C, EXT_VV_CALL2_VOD__C_src.ADD_KEY_MESSAGE_VOD__C, EXT_VV_CALL2_VOD__C_src.ADDRESS_VOD__C, (EXT_VV_CALL2_VOD__C_src.ATTENDEES_VOD__C)::numeric(3,0) AS ATTENDEES_VOD__C, EXT_VV_CALL2_VOD__C_src.ATTENDEE_TYPE_VOD__C, EXT_VV_CALL2_VOD__C_src.CALL_DATE_VOD__C, EXT_VV_CALL2_VOD__C_src.DETAILED_PRODUCTS_VOD__C, EXT_VV_CALL2_VOD__C_src.NO_DISBURSEMENT_VOD__C, EXT_VV_CALL2_VOD__C_src.PARENT_CALL_VOD__C, EXT_VV_CALL2_VOD__C_src.USER_VOD__C, EXT_VV_CALL2_VOD__C_src.CONTACT_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_ENTITY_VOD__C, EXT_VV_CALL2_VOD__C_src.MEDICAL_EVENT_VOD__C, EXT_VV_CALL2_VOD__C_src.MOBILE_CREATED_DATETIME_VOD__C, EXT_VV_CALL2_VOD__C_src.MOBILE_LAST_MODIFIED_DATETIME, EXT_VV_CALL2_VOD__C_src.LICENSE_VOD__C, (EXT_VV_CALL2_VOD__C_src.IS_PARENT_CALL_VOD__C)::numeric(18,0) AS IS_PARENT_CALL_VOD__C, EXT_VV_CALL2_VOD__C_src.ENTITY_DISPLAY_NAME_VOD__C, EXT_VV_CALL2_VOD__C_src.OVERRIDE_LOCK_VOD__C, EXT_VV_CALL2_VOD__C_src.LAST_DEVICE_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_ADDRESS_LINE_1_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_ADDRESS_LINE_2_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_CITY_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_COUNTRY_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_LICENSE_EXPIRATION_DATE, EXT_VV_CALL2_VOD__C_src.SHIP_LICENSE_STATUS_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_LICENSE_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_STATE_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_TO_ADDRESS_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_ZIP_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_TO_ADDRESS_TEXT_VOD__C, EXT_VV_CALL2_VOD__C_src.CLM_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_CLMDETAILS_VOD__C, EXT_VV_CALL2_VOD__C_src.IS_SAMPLED_CALL_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_SURVEYS_VOD__C, EXT_VV_CALL2_VOD__C_src.PRESENTATIONS_VOD__C, EXT_VV_CALL2_VOD__C_src.ENTITY_REFERENCE_ID_VOD__C, EXT_VV_CALL2_VOD__C_src.ERROR_REFERENCE_CALL_VOD__C, (EXT_VV_CALL2_VOD__C_src.DURATION_VOD__C)::numeric(18,0) AS DURATION_VOD__C, EXT_VV_CALL2_VOD__C_src.COLOR_VOD__C, EXT_VV_CALL2_VOD__C_src.ALLOWED_PRODUCTS_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_ATTACHMENTS_VOD__C, EXT_VV_CALL2_VOD__C_src.SAMPLE_CARD_REASON_VOD__C, EXT_VV_CALL2_VOD__C_src.ASSMCA_VOD__C, EXT_VV_CALL2_VOD__C_src.ADDRESS_LINE_1_VOD__C, EXT_VV_CALL2_VOD__C_src.ADDRESS_LINE_2_VOD__C, EXT_VV_CALL2_VOD__C_src.CITY_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_ADDRESS_LINE_1_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_ADDRESS_LINE_2_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_ADDRESS_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_CITY_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_EXPIRATION_DATE_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_STATE_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_ZIP_4_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_ZIP_VOD__C, EXT_VV_CALL2_VOD__C_src.DEA_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_ZIP_4_VOD__C, EXT_VV_CALL2_VOD__C_src.STATE_VOD__C, EXT_VV_CALL2_VOD__C_src.ZIP_4_VOD__C, EXT_VV_CALL2_VOD__C_src.ZIP_VOD__C, EXT_VV_CALL2_VOD__C_src.SAMPLE_SEND_CARD_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_ADDRESS_VOD_C_DEA_STATUS_, EXT_VV_CALL2_VOD__C_src.SIGNATURE_PAGE_IMAGE_VOD__C, EXT_VV_CALL2_VOD__C_src.CREDENTIALS_VOD__C, EXT_VV_CALL2_VOD__C_src.SALUTATION_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_ACCOUNT_CALL_REMINDER_VOD, EXT_VV_CALL2_VOD__C_src.SALES_ORG_TVA__C, EXT_VV_CALL2_VOD__C_src.ZVOD_BUSINESS_ACCOUNT_VOD__C, EXT_VV_CALL2_VOD__C_src.PRODUCT_PRIORITY_1_VOD__C, EXT_VV_CALL2_VOD__C_src.PRODUCT_PRIORITY_2_VOD__C, EXT_VV_CALL2_VOD__C_src.PRODUCT_PRIORITY_3_VOD__C, EXT_VV_CALL2_VOD__C_src.PRODUCT_PRIORITY_4_VOD__C, EXT_VV_CALL2_VOD__C_src.PRODUCT_PRIORITY_5_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_MORE_ACTIONS_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_CALL_CONFLICT_STATUS, (EXT_VV_CALL2_VOD__C_src.SIGNATURE_TIMESTAMP_VOD__C)::numeric(15,0) AS SIGNATURE_TIMESTAMP_VOD__C, (EXT_VV_CALL2_VOD__C_src.EXPENSE_AMOUNT_VOD__C)::numeric(18,0) AS EXPENSE_AMOUNT_VOD__C, (EXT_VV_CALL2_VOD__C_src.TOTAL_EXPENSE_ATTENDEES_COUNT)::numeric(5,0) AS TOTAL_EXPENSE_ATTENDEES_COUNT, EXT_VV_CALL2_VOD__C_src.ATTENDEE_LIST_VOD__C, EXT_VV_CALL2_VOD__C_src.EXPENSE_POST_STATUS_VOD__C, EXT_VV_CALL2_VOD__C_src.ATTENDEE_POST_STATUS_VOD__C, EXT_VV_CALL2_VOD__C_src.EXPENSE_SYSTEM_EXTERNAL_ID, EXT_VV_CALL2_VOD__C_src.INCURRED_EXPENSE_VOD__C, EXT_VV_CALL2_VOD__C_src.ASSIGNER_VOD__C, EXT_VV_CALL2_VOD__C_src.ASSIGNMENT_DATETIME_VOD__C, EXT_VV_CALL2_VOD__C_src.ZVOD_CALL_OBJECTIVE_VOD__C, (EXT_VV_CALL2_VOD__C_src.SIGNATURE_LOCATION_LONGITUDE)::numeric(15,6) AS SIGNATURE_LOCATION_LONGITUDE, (EXT_VV_CALL2_VOD__C_src.SIGNATURE_LOCATION_LATITUDE)::numeric(15,6) AS SIGNATURE_LOCATION_LATITUDE, EXT_VV_CALL2_VOD__C_src.LOCATION_SERVICES_STATUS, EXT_VV_CALL2_VOD__C_src.CREATED_BY_TIMEZONE_TVA__C, EXT_VV_CALL2_VOD__C_src.LICENSE_EXPIRATION_DATE_VOD__C, EXT_VV_CALL2_VOD__C_src.LICENSE_STATUS_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_ASSMCA_VOD__C, EXT_VV_CALL2_VOD__C_src.SHIP_DEA_EXPIRATION_DATE, EXT_VV_CALL2_VOD__C_src.SHIP_DEA_VOD__C, EXT_VV_CALL2_VOD__C_src.CALL_METHOD_TVA__C, EXT_VV_CALL2_VOD__C_src.batch_id, EXT_VV_CALL2_VOD__C_src.row_id, EXT_VV_CALL2_VOD__C_src.update_ts FROM teva_ingestion.EXT_VV_CALL2_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_WHOLESALE_867 AS
 SELECT btrim(EXT_WHOLESALE_867_src.TRADING_PARTNER) AS TRADING_PARTNER,
        btrim(EXT_WHOLESALE_867_src.PARTNER_DUNS) AS PARTNER_DUNS,
        btrim(EXT_WHOLESALE_867_src.PARTNER_DUNS_4) AS PARTNER_DUNS_4,
        btrim(EXT_WHOLESALE_867_src.PARTNER_DEA) AS PARTNER_DEA,
        btrim(EXT_WHOLESALE_867_src.PARTNER_HIN) AS PARTNER_HIN,
        btrim(EXT_WHOLESALE_867_src.PARTNER_SELLER_ASSIGNED_ID) AS PARTNER_SELLER_ASSIGNED_ID,
        btrim(EXT_WHOLESALE_867_src.PARTNER_BUYER_ASSIGNED_ID) AS PARTNER_BUYER_ASSIGNED_ID,
        btrim(EXT_WHOLESALE_867_src.CLIENT_NAME) AS CLIENT_NAME,
        btrim(EXT_WHOLESALE_867_src.ADDRESS1) AS ADDRESS1,
        btrim(EXT_WHOLESALE_867_src.ADDRESS2) AS ADDRESS2,
        btrim(EXT_WHOLESALE_867_src.CITY) AS CITY,
        btrim(EXT_WHOLESALE_867_src.STATE) AS STATE,
        btrim(EXT_WHOLESALE_867_src.ZIP) AS ZIP,
        btrim(EXT_WHOLESALE_867_src.CLIENT_DUNS) AS CLIENT_DUNS,
        btrim(EXT_WHOLESALE_867_src.CLIENT_DEA) AS CLIENT_DEA,
        btrim(EXT_WHOLESALE_867_src.CLIENT_HIN) AS CLIENT_HIN,
        btrim(EXT_WHOLESALE_867_src.CLIENT_SELLER_ASSIGNED_ID) AS CLIENT_SELLER_ASSIGNED_ID,
        btrim(EXT_WHOLESALE_867_src.CLIENT_BUYER_ASSIGNED_ID) AS CLIENT_BUYER_ASSIGNED_ID,
        btrim(EXT_WHOLESALE_867_src.NCPDP) AS NCPDP,
        btrim(EXT_WHOLESALE_867_src.NDC) AS NDC,
        btrim(EXT_WHOLESALE_867_src.ITEM) AS ITEM,
        btrim(EXT_WHOLESALE_867_src.SHIP_DATE) AS SHIP_DATE,
        btrim(EXT_WHOLESALE_867_src.QUANTITY_PURCHASED) AS QUANTITY_PURCHASED,
        btrim(EXT_WHOLESALE_867_src.QUANTITY_RETURNED) AS QUANTITY_RETURNED,
        btrim(EXT_WHOLESALE_867_src.UNIT_PRICE) AS UNIT_PRICE,
        btrim(EXT_WHOLESALE_867_src.GROSS_AMOUNT) AS GROSS_AMOUNT,
        btrim(EXT_WHOLESALE_867_src.DROP_SHIPMENTS) AS DROP_SHIPMENTS,
        EXT_WHOLESALE_867_src.batch_id,
        EXT_WHOLESALE_867_src.row_id,
        EXT_WHOLESALE_867_src.update_ts
 FROM teva_ingestion.EXT_WHOLESALE_867_src
 WHERE (EXT_WHOLESALE_867_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_WHOLESALE_867'::varchar(17))));

CREATE  VIEW teva_ingestion.EXT_VV_KEY_MESSAGE_VOD__C AS
 SELECT btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.id) AS id,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.ownerid) AS ownerid,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.name) AS name,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.createddate) AS createddate,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.createdbyid) AS createdbyid,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.lastvieweddate) AS lastvieweddate,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.lastreferenceddate) AS lastreferenceddate,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.description_vod__c) AS description_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.product_vod__c) AS product_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.product_strategy_vod__c) AS product_strategy_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.display_order_vod__c) AS display_order_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.active_vod__c) AS active_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.category_vod__c) AS category_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.vehicle_vod__c) AS vehicle_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.clm_id_vod__c) AS clm_id_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.custom_reaction_vod__c) AS custom_reaction_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.slide_version_vod__c) AS slide_version_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.language_vod__c) AS language_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.media_file_crc_vod__c) AS media_file_crc_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.media_file_name_vod__c) AS media_file_name_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.media_file_size_vod__c) AS media_file_size_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.segment_vod__c) AS segment_vod__c,
        btrim(EXT_VV_KEY_MESSAGE_VOD__C_src.group_to_share_to__c) AS group_to_share_to__c,
        EXT_VV_KEY_MESSAGE_VOD__C_src.batch_id,
        EXT_VV_KEY_MESSAGE_VOD__C_src.row_id,
        EXT_VV_KEY_MESSAGE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_KEY_MESSAGE_VOD__C_src
 WHERE (EXT_VV_KEY_MESSAGE_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_KEY_MESSAGE_VOD__C'::varchar(25))));

CREATE  VIEW teva_ingestion.MS_MTHLY_RX_QTY AS
SELECT CASE WHEN (MS_MTHLY_RX_QTY_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_QTY_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (MS_MTHLY_RX_QTY_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_QTY_src.ims_report_num))::int END AS ims_report_num, btrim(MS_MTHLY_RX_QTY_src.zip_other) AS zip_other, btrim(MS_MTHLY_RX_QTY_src.ims_id) AS ims_id, btrim(MS_MTHLY_RX_QTY_src.ndc) AS ndc, btrim(MS_MTHLY_RX_QTY_src.plan_id) AS plan_id, CASE WHEN (MS_MTHLY_RX_QTY_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_QTY_src.sales_category))::int END AS sales_category, btrim(MS_MTHLY_RX_QTY_src.rx_type) AS rx_type, CASE WHEN (MS_MTHLY_RX_QTY_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_QTY_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(MS_MTHLY_RX_QTY_src.filler_01) AS filler_01, btrim(MS_MTHLY_RX_QTY_src.me_num) AS me_num, btrim(MS_MTHLY_RX_QTY_src.last_name) AS last_name, btrim(MS_MTHLY_RX_QTY_src.first_name) AS first_name, btrim(MS_MTHLY_RX_QTY_src.middle_name) AS middle_name, btrim(MS_MTHLY_RX_QTY_src.address) AS address, btrim(MS_MTHLY_RX_QTY_src.city) AS city, btrim(MS_MTHLY_RX_QTY_src.state) AS state, btrim(MS_MTHLY_RX_QTY_src.zip) AS zip, btrim(MS_MTHLY_RX_QTY_src.specialty) AS specialty, btrim(MS_MTHLY_RX_QTY_src.plan_name) AS plan_name, btrim(MS_MTHLY_RX_QTY_src.ndc_description) AS ndc_description, btrim(MS_MTHLY_RX_QTY_src.data_date) AS data_date, CASE WHEN (MS_MTHLY_RX_QTY_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_QTY_src.bucket_count))::int END AS bucket_count, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (MS_MTHLY_RX_QTY_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (MS_MTHLY_RX_QTY_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_QTY_src.trx_024))::numeric(9,3) END AS trx_024, MS_MTHLY_RX_QTY_src.batch_id, MS_MTHLY_RX_QTY_src.row_id, MS_MTHLY_RX_QTY_src.update_ts FROM teva_ingestion.MS_MTHLY_RX_QTY_src;

CREATE  VIEW teva_ingestion.MS_WKLY_RX_QTY AS
SELECT CASE WHEN (MS_WKLY_RX_QTY_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_QTY_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (MS_WKLY_RX_QTY_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_QTY_src.ims_report_num))::int END AS ims_report_num, btrim(MS_WKLY_RX_QTY_src.zip_other) AS zip_other, btrim(MS_WKLY_RX_QTY_src.ims_id) AS ims_id, btrim(MS_WKLY_RX_QTY_src.ndc) AS ndc, btrim(MS_WKLY_RX_QTY_src.plan_id) AS plan_id, CASE WHEN (MS_WKLY_RX_QTY_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_QTY_src.sales_category))::int END AS sales_category, btrim(MS_WKLY_RX_QTY_src.rx_type) AS rx_type, CASE WHEN (MS_WKLY_RX_QTY_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_QTY_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(MS_WKLY_RX_QTY_src.filler_01) AS filler_01, btrim(MS_WKLY_RX_QTY_src.me_num) AS me_num, btrim(MS_WKLY_RX_QTY_src.last_name) AS last_name, btrim(MS_WKLY_RX_QTY_src.first_name) AS first_name, btrim(MS_WKLY_RX_QTY_src.middle_name) AS middle_name, btrim(MS_WKLY_RX_QTY_src.address) AS address, btrim(MS_WKLY_RX_QTY_src.city) AS city, btrim(MS_WKLY_RX_QTY_src.state) AS state, btrim(MS_WKLY_RX_QTY_src.zip) AS zip, btrim(MS_WKLY_RX_QTY_src.specialty) AS specialty, btrim(MS_WKLY_RX_QTY_src.plan_name) AS plan_name, btrim(MS_WKLY_RX_QTY_src.ndc_description) AS ndc_description, btrim(MS_WKLY_RX_QTY_src.data_date) AS data_date, CASE WHEN (MS_WKLY_RX_QTY_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_QTY_src.bucket_count))::int END AS bucket_count, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_025))::numeric(9,3) END AS nrx_025, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_026))::numeric(9,3) END AS nrx_026, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_027))::numeric(9,3) END AS nrx_027, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_028))::numeric(9,3) END AS nrx_028, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_029))::numeric(9,3) END AS nrx_029, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_030))::numeric(9,3) END AS nrx_030, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_031))::numeric(9,3) END AS nrx_031, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_032))::numeric(9,3) END AS nrx_032, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_033))::numeric(9,3) END AS nrx_033, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_034))::numeric(9,3) END AS nrx_034, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_035))::numeric(9,3) END AS nrx_035, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_036))::numeric(9,3) END AS nrx_036, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_037))::numeric(9,3) END AS nrx_037, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_038))::numeric(9,3) END AS nrx_038, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_039))::numeric(9,3) END AS nrx_039, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_040))::numeric(9,3) END AS nrx_040, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_041))::numeric(9,3) END AS nrx_041, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_042))::numeric(9,3) END AS nrx_042, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_043))::numeric(9,3) END AS nrx_043, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_044))::numeric(9,3) END AS nrx_044, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_045))::numeric(9,3) END AS nrx_045, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_046))::numeric(9,3) END AS nrx_046, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_047))::numeric(9,3) END AS nrx_047, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_048))::numeric(9,3) END AS nrx_048, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_049))::numeric(9,3) END AS nrx_049, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_050))::numeric(9,3) END AS nrx_050, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_051))::numeric(9,3) END AS nrx_051, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_052))::numeric(9,3) END AS nrx_052, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_053))::numeric(9,3) END AS nrx_053, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_054))::numeric(9,3) END AS nrx_054, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_055))::numeric(9,3) END AS nrx_055, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_056))::numeric(9,3) END AS nrx_056, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_057))::numeric(9,3) END AS nrx_057, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_058))::numeric(9,3) END AS nrx_058, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_059))::numeric(9,3) END AS nrx_059, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_060))::numeric(9,3) END AS nrx_060, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_061))::numeric(9,3) END AS nrx_061, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_062))::numeric(9,3) END AS nrx_062, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_063))::numeric(9,3) END AS nrx_063, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_064))::numeric(9,3) END AS nrx_064, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_065))::numeric(9,3) END AS nrx_065, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_066))::numeric(9,3) END AS nrx_066, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_067))::numeric(9,3) END AS nrx_067, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_068))::numeric(9,3) END AS nrx_068, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_069))::numeric(9,3) END AS nrx_069, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_070))::numeric(9,3) END AS nrx_070, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_071))::numeric(9,3) END AS nrx_071, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_072))::numeric(9,3) END AS nrx_072, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_073))::numeric(9,3) END AS nrx_073, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_074))::numeric(9,3) END AS nrx_074, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_075))::numeric(9,3) END AS nrx_075, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_076))::numeric(9,3) END AS nrx_076, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_077))::numeric(9,3) END AS nrx_077, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_078))::numeric(9,3) END AS nrx_078, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_079))::numeric(9,3) END AS nrx_079, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_080))::numeric(9,3) END AS nrx_080, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_081))::numeric(9,3) END AS nrx_081, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_082))::numeric(9,3) END AS nrx_082, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_083))::numeric(9,3) END AS nrx_083, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_084))::numeric(9,3) END AS nrx_084, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_085))::numeric(9,3) END AS nrx_085, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_086))::numeric(9,3) END AS nrx_086, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_087))::numeric(9,3) END AS nrx_087, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_088))::numeric(9,3) END AS nrx_088, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_089))::numeric(9,3) END AS nrx_089, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_090))::numeric(9,3) END AS nrx_090, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_091))::numeric(9,3) END AS nrx_091, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_092))::numeric(9,3) END AS nrx_092, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_093))::numeric(9,3) END AS nrx_093, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_094))::numeric(9,3) END AS nrx_094, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_095))::numeric(9,3) END AS nrx_095, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_096))::numeric(9,3) END AS nrx_096, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_097))::numeric(9,3) END AS nrx_097, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_098))::numeric(9,3) END AS nrx_098, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_099))::numeric(9,3) END AS nrx_099, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_100))::numeric(9,3) END AS nrx_100, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_101))::numeric(9,3) END AS nrx_101, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_102))::numeric(9,3) END AS nrx_102, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_103))::numeric(9,3) END AS nrx_103, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_104))::numeric(9,3) END AS nrx_104, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_105))::numeric(9,3) END AS nrx_105, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_106))::numeric(9,3) END AS nrx_106, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_107))::numeric(9,3) END AS nrx_107, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_108))::numeric(9,3) END AS nrx_108, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_109))::numeric(9,3) END AS nrx_109, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_110))::numeric(9,3) END AS nrx_110, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_111))::numeric(9,3) END AS nrx_111, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_112))::numeric(9,3) END AS nrx_112, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_113))::numeric(9,3) END AS nrx_113, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_114))::numeric(9,3) END AS nrx_114, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_115))::numeric(9,3) END AS nrx_115, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_116))::numeric(9,3) END AS nrx_116, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_117))::numeric(9,3) END AS nrx_117, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_118))::numeric(9,3) END AS nrx_118, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_119))::numeric(9,3) END AS nrx_119, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_120))::numeric(9,3) END AS nrx_120, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_121))::numeric(9,3) END AS nrx_121, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_122))::numeric(9,3) END AS nrx_122, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_123))::numeric(9,3) END AS nrx_123, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_124))::numeric(9,3) END AS nrx_124, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_125))::numeric(9,3) END AS nrx_125, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_126))::numeric(9,3) END AS nrx_126, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_127))::numeric(9,3) END AS nrx_127, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_128))::numeric(9,3) END AS nrx_128, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_129))::numeric(9,3) END AS nrx_129, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_130))::numeric(9,3) END AS nrx_130, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_131))::numeric(9,3) END AS nrx_131, CASE WHEN (MS_WKLY_RX_QTY_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.nrx_132))::numeric(9,3) END AS nrx_132, CASE WHEN (MS_WKLY_RX_QTY_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (MS_WKLY_RX_QTY_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (MS_WKLY_RX_QTY_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (MS_WKLY_RX_QTY_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (MS_WKLY_RX_QTY_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (MS_WKLY_RX_QTY_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (MS_WKLY_RX_QTY_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (MS_WKLY_RX_QTY_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (MS_WKLY_RX_QTY_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (MS_WKLY_RX_QTY_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (MS_WKLY_RX_QTY_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (MS_WKLY_RX_QTY_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (MS_WKLY_RX_QTY_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (MS_WKLY_RX_QTY_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (MS_WKLY_RX_QTY_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (MS_WKLY_RX_QTY_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (MS_WKLY_RX_QTY_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (MS_WKLY_RX_QTY_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (MS_WKLY_RX_QTY_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (MS_WKLY_RX_QTY_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (MS_WKLY_RX_QTY_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (MS_WKLY_RX_QTY_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (MS_WKLY_RX_QTY_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (MS_WKLY_RX_QTY_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_024))::numeric(9,3) END AS trx_024, CASE WHEN (MS_WKLY_RX_QTY_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_025))::numeric(9,3) END AS trx_025, CASE WHEN (MS_WKLY_RX_QTY_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_026))::numeric(9,3) END AS trx_026, CASE WHEN (MS_WKLY_RX_QTY_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_027))::numeric(9,3) END AS trx_027, CASE WHEN (MS_WKLY_RX_QTY_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_028))::numeric(9,3) END AS trx_028, CASE WHEN (MS_WKLY_RX_QTY_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_029))::numeric(9,3) END AS trx_029, CASE WHEN (MS_WKLY_RX_QTY_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_030))::numeric(9,3) END AS trx_030, CASE WHEN (MS_WKLY_RX_QTY_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_031))::numeric(9,3) END AS trx_031, CASE WHEN (MS_WKLY_RX_QTY_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_032))::numeric(9,3) END AS trx_032, CASE WHEN (MS_WKLY_RX_QTY_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_033))::numeric(9,3) END AS trx_033, CASE WHEN (MS_WKLY_RX_QTY_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_034))::numeric(9,3) END AS trx_034, CASE WHEN (MS_WKLY_RX_QTY_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_035))::numeric(9,3) END AS trx_035, CASE WHEN (MS_WKLY_RX_QTY_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_036))::numeric(9,3) END AS trx_036, CASE WHEN (MS_WKLY_RX_QTY_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_037))::numeric(9,3) END AS trx_037, CASE WHEN (MS_WKLY_RX_QTY_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_038))::numeric(9,3) END AS trx_038, CASE WHEN (MS_WKLY_RX_QTY_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_039))::numeric(9,3) END AS trx_039, CASE WHEN (MS_WKLY_RX_QTY_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_040))::numeric(9,3) END AS trx_040, CASE WHEN (MS_WKLY_RX_QTY_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_041))::numeric(9,3) END AS trx_041, CASE WHEN (MS_WKLY_RX_QTY_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_042))::numeric(9,3) END AS trx_042, CASE WHEN (MS_WKLY_RX_QTY_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_043))::numeric(9,3) END AS trx_043, CASE WHEN (MS_WKLY_RX_QTY_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_044))::numeric(9,3) END AS trx_044, CASE WHEN (MS_WKLY_RX_QTY_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_045))::numeric(9,3) END AS trx_045, CASE WHEN (MS_WKLY_RX_QTY_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_046))::numeric(9,3) END AS trx_046, CASE WHEN (MS_WKLY_RX_QTY_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_047))::numeric(9,3) END AS trx_047, CASE WHEN (MS_WKLY_RX_QTY_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_048))::numeric(9,3) END AS trx_048, CASE WHEN (MS_WKLY_RX_QTY_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_049))::numeric(9,3) END AS trx_049, CASE WHEN (MS_WKLY_RX_QTY_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_050))::numeric(9,3) END AS trx_050, CASE WHEN (MS_WKLY_RX_QTY_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_051))::numeric(9,3) END AS trx_051, CASE WHEN (MS_WKLY_RX_QTY_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_052))::numeric(9,3) END AS trx_052, CASE WHEN (MS_WKLY_RX_QTY_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_053))::numeric(9,3) END AS trx_053, CASE WHEN (MS_WKLY_RX_QTY_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_054))::numeric(9,3) END AS trx_054, CASE WHEN (MS_WKLY_RX_QTY_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_055))::numeric(9,3) END AS trx_055, CASE WHEN (MS_WKLY_RX_QTY_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_056))::numeric(9,3) END AS trx_056, CASE WHEN (MS_WKLY_RX_QTY_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_057))::numeric(9,3) END AS trx_057, CASE WHEN (MS_WKLY_RX_QTY_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_058))::numeric(9,3) END AS trx_058, CASE WHEN (MS_WKLY_RX_QTY_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_059))::numeric(9,3) END AS trx_059, CASE WHEN (MS_WKLY_RX_QTY_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_060))::numeric(9,3) END AS trx_060, CASE WHEN (MS_WKLY_RX_QTY_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_061))::numeric(9,3) END AS trx_061, CASE WHEN (MS_WKLY_RX_QTY_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_062))::numeric(9,3) END AS trx_062, CASE WHEN (MS_WKLY_RX_QTY_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_063))::numeric(9,3) END AS trx_063, CASE WHEN (MS_WKLY_RX_QTY_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_064))::numeric(9,3) END AS trx_064, CASE WHEN (MS_WKLY_RX_QTY_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_065))::numeric(9,3) END AS trx_065, CASE WHEN (MS_WKLY_RX_QTY_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_066))::numeric(9,3) END AS trx_066, CASE WHEN (MS_WKLY_RX_QTY_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_067))::numeric(9,3) END AS trx_067, CASE WHEN (MS_WKLY_RX_QTY_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_068))::numeric(9,3) END AS trx_068, CASE WHEN (MS_WKLY_RX_QTY_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_069))::numeric(9,3) END AS trx_069, CASE WHEN (MS_WKLY_RX_QTY_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_070))::numeric(9,3) END AS trx_070, CASE WHEN (MS_WKLY_RX_QTY_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_071))::numeric(9,3) END AS trx_071, CASE WHEN (MS_WKLY_RX_QTY_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_072))::numeric(9,3) END AS trx_072, CASE WHEN (MS_WKLY_RX_QTY_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_073))::numeric(9,3) END AS trx_073, CASE WHEN (MS_WKLY_RX_QTY_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_074))::numeric(9,3) END AS trx_074, CASE WHEN (MS_WKLY_RX_QTY_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_075))::numeric(9,3) END AS trx_075, CASE WHEN (MS_WKLY_RX_QTY_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_076))::numeric(9,3) END AS trx_076, CASE WHEN (MS_WKLY_RX_QTY_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_077))::numeric(9,3) END AS trx_077, CASE WHEN (MS_WKLY_RX_QTY_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_078))::numeric(9,3) END AS trx_078, CASE WHEN (MS_WKLY_RX_QTY_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_079))::numeric(9,3) END AS trx_079, CASE WHEN (MS_WKLY_RX_QTY_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_080))::numeric(9,3) END AS trx_080, CASE WHEN (MS_WKLY_RX_QTY_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_081))::numeric(9,3) END AS trx_081, CASE WHEN (MS_WKLY_RX_QTY_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_082))::numeric(9,3) END AS trx_082, CASE WHEN (MS_WKLY_RX_QTY_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_083))::numeric(9,3) END AS trx_083, CASE WHEN (MS_WKLY_RX_QTY_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_084))::numeric(9,3) END AS trx_084, CASE WHEN (MS_WKLY_RX_QTY_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_085))::numeric(9,3) END AS trx_085, CASE WHEN (MS_WKLY_RX_QTY_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_086))::numeric(9,3) END AS trx_086, CASE WHEN (MS_WKLY_RX_QTY_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_087))::numeric(9,3) END AS trx_087, CASE WHEN (MS_WKLY_RX_QTY_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_088))::numeric(9,3) END AS trx_088, CASE WHEN (MS_WKLY_RX_QTY_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_089))::numeric(9,3) END AS trx_089, CASE WHEN (MS_WKLY_RX_QTY_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_090))::numeric(9,3) END AS trx_090, CASE WHEN (MS_WKLY_RX_QTY_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_091))::numeric(9,3) END AS trx_091, CASE WHEN (MS_WKLY_RX_QTY_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_092))::numeric(9,3) END AS trx_092, CASE WHEN (MS_WKLY_RX_QTY_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_093))::numeric(9,3) END AS trx_093, CASE WHEN (MS_WKLY_RX_QTY_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_094))::numeric(9,3) END AS trx_094, CASE WHEN (MS_WKLY_RX_QTY_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_095))::numeric(9,3) END AS trx_095, CASE WHEN (MS_WKLY_RX_QTY_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_096))::numeric(9,3) END AS trx_096, CASE WHEN (MS_WKLY_RX_QTY_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_097))::numeric(9,3) END AS trx_097, CASE WHEN (MS_WKLY_RX_QTY_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_098))::numeric(9,3) END AS trx_098, CASE WHEN (MS_WKLY_RX_QTY_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_099))::numeric(9,3) END AS trx_099, CASE WHEN (MS_WKLY_RX_QTY_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_100))::numeric(9,3) END AS trx_100, CASE WHEN (MS_WKLY_RX_QTY_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_101))::numeric(9,3) END AS trx_101, CASE WHEN (MS_WKLY_RX_QTY_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_102))::numeric(9,3) END AS trx_102, CASE WHEN (MS_WKLY_RX_QTY_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_103))::numeric(9,3) END AS trx_103, CASE WHEN (MS_WKLY_RX_QTY_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_104))::numeric(9,3) END AS trx_104, CASE WHEN (MS_WKLY_RX_QTY_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_105))::numeric(9,3) END AS trx_105, CASE WHEN (MS_WKLY_RX_QTY_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_106))::numeric(9,3) END AS trx_106, CASE WHEN (MS_WKLY_RX_QTY_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_107))::numeric(9,3) END AS trx_107, CASE WHEN (MS_WKLY_RX_QTY_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_108))::numeric(9,3) END AS trx_108, CASE WHEN (MS_WKLY_RX_QTY_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_109))::numeric(9,3) END AS trx_109, CASE WHEN (MS_WKLY_RX_QTY_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_110))::numeric(9,3) END AS trx_110, CASE WHEN (MS_WKLY_RX_QTY_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_111))::numeric(9,3) END AS trx_111, CASE WHEN (MS_WKLY_RX_QTY_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_112))::numeric(9,3) END AS trx_112, CASE WHEN (MS_WKLY_RX_QTY_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_113))::numeric(9,3) END AS trx_113, CASE WHEN (MS_WKLY_RX_QTY_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_114))::numeric(9,3) END AS trx_114, CASE WHEN (MS_WKLY_RX_QTY_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_115))::numeric(9,3) END AS trx_115, CASE WHEN (MS_WKLY_RX_QTY_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_116))::numeric(9,3) END AS trx_116, CASE WHEN (MS_WKLY_RX_QTY_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_117))::numeric(9,3) END AS trx_117, CASE WHEN (MS_WKLY_RX_QTY_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_118))::numeric(9,3) END AS trx_118, CASE WHEN (MS_WKLY_RX_QTY_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_119))::numeric(9,3) END AS trx_119, CASE WHEN (MS_WKLY_RX_QTY_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_120))::numeric(9,3) END AS trx_120, CASE WHEN (MS_WKLY_RX_QTY_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_121))::numeric(9,3) END AS trx_121, CASE WHEN (MS_WKLY_RX_QTY_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_122))::numeric(9,3) END AS trx_122, CASE WHEN (MS_WKLY_RX_QTY_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_123))::numeric(9,3) END AS trx_123, CASE WHEN (MS_WKLY_RX_QTY_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_124))::numeric(9,3) END AS trx_124, CASE WHEN (MS_WKLY_RX_QTY_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_125))::numeric(9,3) END AS trx_125, CASE WHEN (MS_WKLY_RX_QTY_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_126))::numeric(9,3) END AS trx_126, CASE WHEN (MS_WKLY_RX_QTY_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_127))::numeric(9,3) END AS trx_127, CASE WHEN (MS_WKLY_RX_QTY_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_128))::numeric(9,3) END AS trx_128, CASE WHEN (MS_WKLY_RX_QTY_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_129))::numeric(9,3) END AS trx_129, CASE WHEN (MS_WKLY_RX_QTY_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_130))::numeric(9,3) END AS trx_130, CASE WHEN (MS_WKLY_RX_QTY_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_131))::numeric(9,3) END AS trx_131, CASE WHEN (MS_WKLY_RX_QTY_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_QTY_src.trx_132))::numeric(9,3) END AS trx_132, MS_WKLY_RX_QTY_src.batch_id, MS_WKLY_RX_QTY_src.row_id, MS_WKLY_RX_QTY_src.update_ts FROM teva_ingestion.MS_WKLY_RX_QTY_src;

CREATE  VIEW teva_ingestion.EXT_FTF_PREDOMINANT AS
 SELECT btrim(EXT_FTF_PREDOMINANT_src.IMS_PLAN_ID) AS IMS_PLAN_ID,
        btrim(EXT_FTF_PREDOMINANT_src.IMS_PLAN_NAME) AS IMS_PLAN_NAME,
        btrim(EXT_FTF_PREDOMINANT_src.FF_PLAN_ID) AS FF_PLAN_ID,
        btrim(EXT_FTF_PREDOMINANT_src.FF_PLAN_NAME) AS FF_PLAN_NAME,
        EXT_FTF_PREDOMINANT_src.batch_id,
        EXT_FTF_PREDOMINANT_src.row_id,
        EXT_FTF_PREDOMINANT_src.update_ts
 FROM teva_ingestion.EXT_FTF_PREDOMINANT_src
 WHERE (EXT_FTF_PREDOMINANT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_PREDOMINANT'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_ONC_MANUAL_FCRS AS
 SELECT btrim(EXT_ONC_MANUAL_FCRS_src.TIME_PERIOD) AS TIME_PERIOD,
        btrim(EXT_ONC_MANUAL_FCRS_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ONC_MANUAL_FCRS_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ONC_MANUAL_FCRS_src.REP_ID) AS REP_ID,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.CONTACT_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.CONTACT_DATE))::date END AS CONTACT_DATE,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.DURATION_DAYS = ''::varchar) THEN NULL::numeric(1,0) ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.DURATION_DAYS))::numeric(3,2) END AS DURATION_DAYS,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.SS_OPENING = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.SS_OPENING))::int END AS SS_OPENING,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.SS_PROBING = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.SS_PROBING))::int END AS SS_PROBING,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.SS_RESOURCES = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.SS_RESOURCES))::int END AS SS_RESOURCES,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.SS_COMMITMENT = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.SS_COMMITMENT))::int END AS SS_COMMITMENT,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.SS_TRANSITIONING = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.SS_TRANSITIONING))::int END AS SS_TRANSITIONING,
        CASE WHEN (EXT_ONC_MANUAL_FCRS_src.SS_ACUMEN = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_MANUAL_FCRS_src.SS_ACUMEN))::int END AS SS_ACUMEN,
        btrim(EXT_ONC_MANUAL_FCRS_src.ARCHIVE_FLAG) AS ARCHIVE_FLAG,
        EXT_ONC_MANUAL_FCRS_src.batch_id,
        EXT_ONC_MANUAL_FCRS_src.row_id,
        EXT_ONC_MANUAL_FCRS_src.update_ts
 FROM teva_ingestion.EXT_ONC_MANUAL_FCRS_src
 WHERE (EXT_ONC_MANUAL_FCRS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_MANUAL_FCRS'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_AHM_EVENT_COUNT AS
 SELECT btrim(EXT_AHM_EVENT_COUNT_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_EVENT_COUNT_src.EVENT_NUMBER) AS EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_COUNT_src.ATTENDEE_CATEGORY_CODE) AS ATTENDEE_CATEGORY_CODE,
        btrim(EXT_AHM_EVENT_COUNT_src.ATTENDEE_CATEGORY) AS ATTENDEE_CATEGORY,
        btrim(EXT_AHM_EVENT_COUNT_src.CNT) AS CNT,
        btrim(EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_EVENT_COUNT_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_EVENT_COUNT_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_EVENT_COUNT_src.batch_id,
        EXT_AHM_EVENT_COUNT_src.row_id,
        EXT_AHM_EVENT_COUNT_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_COUNT_src;

CREATE  VIEW teva_ingestion.EXT_AHM_EVENT AS
 SELECT btrim(EXT_AHM_EVENT_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_EVENT_src.EVENT_NUMBER) AS EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_src.PARENT_EVENT_NUMBER) AS PARENT_EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_src.EVENT_NAME) AS EVENT_NAME,
        btrim(EXT_AHM_EVENT_src.EVENT_STATUS_CODE) AS EVENT_STATUS_CODE,
        btrim(EXT_AHM_EVENT_src.EVENT_STATUS_DESCRIPTION) AS EVENT_STATUS_DESCRIPTION,
        btrim(EXT_AHM_EVENT_src.EVENT_STATUS_CHANGE_DATE) AS EVENT_STATUS_CHANGE_DATE,
        btrim(EXT_AHM_EVENT_src.EVENT_START_DATE) AS EVENT_START_DATE,
        btrim(EXT_AHM_EVENT_src.EVENT_END_DATE) AS EVENT_END_DATE,
        btrim(EXT_AHM_EVENT_src.EVENT_TIME_ZONE) AS EVENT_TIME_ZONE,
        btrim(EXT_AHM_EVENT_src.FUNDING_SOURCE) AS FUNDING_SOURCE,
        btrim(EXT_AHM_EVENT_src.EVENT_TYPE) AS EVENT_TYPE,
        btrim(EXT_AHM_EVENT_src.EVENT_TYPE_DESCRIPTION) AS EVENT_TYPE_DESCRIPTION,
        btrim(EXT_AHM_EVENT_src.EVENT_FORMAT) AS EVENT_FORMAT,
        btrim(EXT_AHM_EVENT_src.EVENT_LOCATION) AS EVENT_LOCATION,
        btrim(EXT_AHM_EVENT_src.PENDING_MGMNT_APPROVAL_DATE) AS PENDING_MGMNT_APPROVAL_DATE,
        btrim(EXT_AHM_EVENT_src.EVENT_APPROVAL_DATE) AS EVENT_APPROVAL_DATE,
        btrim(EXT_AHM_EVENT_src.EVENT_APPROVER_ID) AS EVENT_APPROVER_ID,
        btrim(EXT_AHM_EVENT_src.EVENT_SCHEDULE_DATE) AS EVENT_SCHEDULE_DATE,
        btrim(EXT_AHM_EVENT_src.ATTENDEE_CLOSEOUT_DATE) AS ATTENDEE_CLOSEOUT_DATE,
        btrim(EXT_AHM_EVENT_src.FINANCIAL_CLOSEOUT_DATE) AS FINANCIAL_CLOSEOUT_DATE,
        btrim(EXT_AHM_EVENT_src.CANCELLATION_DATE) AS CANCELLATION_DATE,
        btrim(EXT_AHM_EVENT_src.CANCELLATION_REASON) AS CANCELLATION_REASON,
        btrim(EXT_AHM_EVENT_src.CANCELLATION_SOURCE) AS CANCELLATION_SOURCE,
        btrim(EXT_AHM_EVENT_src.EVENT_VENUE_MIN_CNT_REQ_IND) AS EVENT_VENUE_MIN_CNT_REQ_IND,
        btrim(EXT_AHM_EVENT_src.EVENT_VENUE_MIN_COUNT) AS EVENT_VENUE_MIN_COUNT,
        btrim(EXT_AHM_EVENT_src.ESTIMATED_ATTENDANCE) AS ESTIMATED_ATTENDANCE,
        btrim(EXT_AHM_EVENT_src.VENUE_ID) AS VENUE_ID,
        btrim(EXT_AHM_EVENT_src.VENUE_FULL_NAME) AS VENUE_FULL_NAME,
        btrim(EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_1) AS VENUE_ADDRESS_LINE_1,
        btrim(EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_2) AS VENUE_ADDRESS_LINE_2,
        btrim(EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_3) AS VENUE_ADDRESS_LINE_3,
        btrim(EXT_AHM_EVENT_src.VENUE_ADDRESS_LINE_4) AS VENUE_ADDRESS_LINE_4,
        btrim(EXT_AHM_EVENT_src.VENUE_CITY) AS VENUE_CITY,
        btrim(EXT_AHM_EVENT_src.VENUE_STATE_PROVINCE) AS VENUE_STATE_PROVINCE,
        btrim(EXT_AHM_EVENT_src.VENUE_POSTAL_CODE) AS VENUE_POSTAL_CODE,
        btrim(EXT_AHM_EVENT_src.VENUE_POSTAL_EXTENDED_CODE) AS VENUE_POSTAL_EXTENDED_CODE,
        btrim(EXT_AHM_EVENT_src.VENUE_COUNTRY_CODE) AS VENUE_COUNTRY_CODE,
        btrim(EXT_AHM_EVENT_src.VENUE_CONTACT) AS VENUE_CONTACT,
        btrim(EXT_AHM_EVENT_src.VENUE_PHONE) AS VENUE_PHONE,
        btrim(EXT_AHM_EVENT_src.VENUE_FAX) AS VENUE_FAX,
        btrim(EXT_AHM_EVENT_src.VENUE_EMAIL) AS VENUE_EMAIL,
        btrim(EXT_AHM_EVENT_src.TRADE_SECRET_INDICATOR) AS TRADE_SECRET_INDICATOR,
        btrim(EXT_AHM_EVENT_src.TRADE_SECRET_REASON) AS TRADE_SECRET_REASON,
        btrim(EXT_AHM_EVENT_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_EVENT_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_EVENT_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_EVENT_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_EVENT_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_EVENT_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_EVENT_src.batch_id,
        EXT_AHM_EVENT_src.row_id,
        EXT_AHM_EVENT_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_src;

CREATE  VIEW teva_ingestion.EXT_IDS_CALL2_SAMPLE_VOD__C AS
 SELECT btrim(EXT_IDS_CALL2_SAMPLE_VOD__C_src.ID) AS ID,
        EXT_IDS_CALL2_SAMPLE_VOD__C_src.batch_id,
        EXT_IDS_CALL2_SAMPLE_VOD__C_src.row_id,
        EXT_IDS_CALL2_SAMPLE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_SAMPLE_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_IDS_CALL2_KEY_MESSAGE_VOD__C AS
 SELECT btrim(EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.ID) AS ID,
        EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.batch_id,
        EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.row_id,
        EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_KEY_MESSAGE_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_TB_CB_ACCOUNTS AS
 SELECT btrim(EXT_TB_CB_ACCOUNTS_src.ACCOUNT_ID) AS ACCOUNT_ID,
        btrim(EXT_TB_CB_ACCOUNTS_src.LOCATION_ID) AS LOCATION_ID,
        btrim(EXT_TB_CB_ACCOUNTS_src.DEA_NUMBER) AS DEA_NUMBER,
        btrim(EXT_TB_CB_ACCOUNTS_src.END_CUSTOMER) AS END_CUSTOMER,
        btrim(EXT_TB_CB_ACCOUNTS_src.ADDRESS_1) AS ADDRESS_1,
        btrim(EXT_TB_CB_ACCOUNTS_src.ADDRESS_2) AS ADDRESS_2,
        btrim(EXT_TB_CB_ACCOUNTS_src.CITY) AS CITY,
        btrim(EXT_TB_CB_ACCOUNTS_src.STATE) AS STATE,
        btrim(EXT_TB_CB_ACCOUNTS_src.ZIP) AS ZIP,
        btrim(EXT_TB_CB_ACCOUNTS_src.CONTRACT_TITLE) AS CONTRACT_TITLE,
        btrim(EXT_TB_CB_ACCOUNTS_src.CONTRACT_ID) AS CONTRACT_ID,
        btrim(EXT_TB_CB_ACCOUNTS_src.WHOLESALER_NAME) AS WHOLESALER_NAME,
        btrim(EXT_TB_CB_ACCOUNTS_src.HIN) AS HIN,
        btrim(EXT_TB_CB_ACCOUNTS_src.CONTRACT_ALIAS) AS CONTRACT_ALIAS,
        btrim(EXT_TB_CB_ACCOUNTS_src.WHOLESALER_DEA) AS WHOLESALER_DEA,
        btrim(EXT_TB_CB_ACCOUNTS_src.CLASS_OF_TRADE) AS CLASS_OF_TRADE,
        btrim(EXT_TB_CB_ACCOUNTS_src.COT_SOURCE) AS COT_SOURCE,
        EXT_TB_CB_ACCOUNTS_src.batch_id,
        EXT_TB_CB_ACCOUNTS_src.row_id,
        EXT_TB_CB_ACCOUNTS_src.update_ts
 FROM teva_ingestion.EXT_TB_CB_ACCOUNTS_src;

CREATE  VIEW teva_ingestion.EXT_ZIP_TO_TERR AS
 SELECT btrim(EXT_ZIP_TO_TERR_src.zip) AS zip,
        btrim(EXT_ZIP_TO_TERR_src.state) AS state,
        btrim(EXT_ZIP_TO_TERR_src.territory_1_id) AS territory_1_id,
        btrim(EXT_ZIP_TO_TERR_src.territory_name) AS territory_name,
        btrim(EXT_ZIP_TO_TERR_src.area_name) AS area_name,
        btrim(EXT_ZIP_TO_TERR_src.region_name) AS region_name,
        btrim(EXT_ZIP_TO_TERR_src.mirror_flag) AS mirror_flag,
        btrim(EXT_ZIP_TO_TERR_src.territory_2_id) AS territory_2_id,
        EXT_ZIP_TO_TERR_src.batch_id,
        EXT_ZIP_TO_TERR_src.row_id,
        EXT_ZIP_TO_TERR_src.update_ts
 FROM teva_ingestion.EXT_ZIP_TO_TERR_src;

CREATE  VIEW teva_ingestion.EXT_PSR_REPORT AS
 SELECT btrim(EXT_PSR_REPORT_src.prescriber_npi) AS prescriber_npi,
        btrim(EXT_PSR_REPORT_src.prescriber_name) AS prescriber_name,
        btrim(EXT_PSR_REPORT_src.prescriber_state) AS prescriber_state,
        btrim(EXT_PSR_REPORT_src.product) AS product,
        btrim(EXT_PSR_REPORT_src.month) AS month,
        btrim(EXT_PSR_REPORT_src.indication) AS indication,
        CASE WHEN (EXT_PSR_REPORT_src.in_progress = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PSR_REPORT_src.in_progress))::int END AS in_progress,
        CASE WHEN (EXT_PSR_REPORT_src.completed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PSR_REPORT_src.completed))::int END AS completed,
        CASE WHEN (EXT_PSR_REPORT_src.cancelled = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PSR_REPORT_src.cancelled))::int END AS cancelled,
        CASE WHEN (EXT_PSR_REPORT_src.psr_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PSR_REPORT_src.psr_count))::int END AS psr_count,
        EXT_PSR_REPORT_src.batch_id,
        EXT_PSR_REPORT_src.row_id,
        EXT_PSR_REPORT_src.update_ts
 FROM teva_ingestion.EXT_PSR_REPORT_src;

CREATE  VIEW teva_ingestion.EXT_IMS_SD809_TRANSACTION AS
 SELECT CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.patient_yob = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.patient_yob))::int END AS patient_yob,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.patient_gender = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.patient_gender))::int END AS patient_gender,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_surrogate_patient_id) AS ims_surrogate_patient_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.product_ndc) AS product_ndc,
        btrim(EXT_IMS_SD809_TRANSACTION_src.product_name) AS product_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.product_strength) AS product_strength,
        btrim(EXT_IMS_SD809_TRANSACTION_src.unit_of_measure) AS unit_of_measure,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.extended_wac_price = ''::varchar) THEN NULL::numeric(37,2) ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.extended_wac_price))::numeric(37,2) END AS extended_wac_price,
        btrim(EXT_IMS_SD809_TRANSACTION_src.transaction_id) AS transaction_id,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.patient_status_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.patient_status_date))::date END AS patient_status_date,
        btrim(EXT_IMS_SD809_TRANSACTION_src.patient_status_) AS patient_status_,
        btrim(EXT_IMS_SD809_TRANSACTION_src.patient_sub_status) AS patient_sub_status,
        btrim(EXT_IMS_SD809_TRANSACTION_src.specialty_pharmacy_patient_or_case_id) AS specialty_pharmacy_patient_or_case_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_icd_9) AS primary_icd_9,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_icd_10) AS primary_icd_10,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.script_reciept_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.script_reciept_date))::date END AS script_reciept_date,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_appeal_status) AS primary_appeal_status,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_copay_type) AS primary_copay_type,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_deductible) AS primary_deductible,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_pa_required) AS primary_pa_required,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.primary_copay_amount = ''::varchar) THEN NULL::numeric(37,2) ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.primary_copay_amount))::numeric(37,2) END AS primary_copay_amount,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_payer_name) AS primary_payer_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_plan_name) AS primary_plan_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_payer_type) AS primary_payer_type,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_plan_type) AS primary_plan_type,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_payer_reject_reason_code) AS primary_payer_reject_reason_code,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_reimbursement_status) AS primary_reimbursement_status,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.primary_reimbursement_status_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.primary_reimbursement_status_date))::date END AS primary_reimbursement_status_date,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_step_therapy_required) AS primary_step_therapy_required,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_copay_type) AS secondary_copay_type,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_deductible) AS secondary_deductible,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_pa_required) AS secondary_pa_required,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.secondary_copay_amount = ''::varchar) THEN NULL::numeric(37,2) ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_copay_amount))::numeric(37,2) END AS secondary_copay_amount,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_payer_name) AS secondary_payer_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_plan_name) AS secondary_plan_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_payer_type) AS secondary_payer_type,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_plan_type) AS secondary_plan_type,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_payer_reject_reason_code) AS secondary_payer_reject_reason_code,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_step_therapy_required) AS secondary_step_therapy_required,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ncpdp_number) AS ncpdp_number,
        btrim(EXT_IMS_SD809_TRANSACTION_src.pharmacy_name) AS pharmacy_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.pharmacy_zip) AS pharmacy_zip,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_first_name) AS prescribing_physician_first_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_last_name) AS prescribing_physician_last_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_middle_initial) AS prescribing_physician_middle_initial,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_dea_number) AS prescribing_physician_dea_number,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_me_number) AS prescribing_physician_me_number,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_npi_number) AS prescribing_physician_npi_number,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_address_1) AS prescribing_physician_address_1,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_address_2) AS prescribing_physician_address_2,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_city) AS prescribing_physician_city,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_state) AS prescribing_physician_state,
        btrim(EXT_IMS_SD809_TRANSACTION_src.prescribing_physician_zip) AS prescribing_physician_zip,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.number_of_fills_prescribed = ''::varchar) THEN NULL::numeric(37,2) ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.number_of_fills_prescribed))::numeric(37,2) END AS number_of_fills_prescribed,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.number_of_refills_remaining = ''::varchar) THEN NULL::numeric(37,2) ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.number_of_refills_remaining))::numeric(37,2) END AS number_of_refills_remaining,
        btrim(EXT_IMS_SD809_TRANSACTION_src.fill_type) AS fill_type,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.rx_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.rx_date))::date END AS rx_date,
        btrim(EXT_IMS_SD809_TRANSACTION_src.rx_number) AS rx_number,
        btrim(EXT_IMS_SD809_TRANSACTION_src.carrier) AS carrier,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.date_of_drug_receipt = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.date_of_drug_receipt))::date END AS date_of_drug_receipt,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.initial_ship_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.initial_ship_date))::date END AS initial_ship_date,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.quantity_shipped = ''::varchar) THEN NULL::numeric(37,2) ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.quantity_shipped))::numeric(37,2) END AS quantity_shipped,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.out_of_pocket_cost = ''::varchar) THEN NULL::numeric(37,2) ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.out_of_pocket_cost))::numeric(37,2) END AS out_of_pocket_cost,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.shipment_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.shipment_date))::date END AS shipment_date,
        btrim(EXT_IMS_SD809_TRANSACTION_src.product_lot_number) AS product_lot_number,
        btrim(EXT_IMS_SD809_TRANSACTION_src.program_dispense_type) AS program_dispense_type,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.days_supply_dispensed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.days_supply_dispensed))::int END AS days_supply_dispensed,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_payer_pa_outcome) AS primary_payer_pa_outcome,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_payer_pa_outcome) AS secondary_payer_pa_outcome,
        btrim(EXT_IMS_SD809_TRANSACTION_src.rx_communication_method) AS rx_communication_method,
        btrim(EXT_IMS_SD809_TRANSACTION_src.tertiary_icd_10) AS tertiary_icd_10,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_file_id) AS ims_file_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_transaction_id) AS ims_transaction_id,
        CASE WHEN (EXT_IMS_SD809_TRANSACTION_src.ims_cycle_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_SD809_TRANSACTION_src.ims_cycle_date))::date END AS ims_cycle_date,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_supplier_id) AS ims_supplier_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_supplier_name) AS ims_supplier_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_transaction_type_code) AS ims_transaction_type_code,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_duplicate_transaction) AS ims_duplicate_transaction,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_prescriber_id) AS ims_prescriber_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_phys_first_name) AS ims_phys_first_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_phys_last_name) AS ims_phys_last_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_phys_address) AS ims_phys_address,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_phys_city) AS ims_phys_city,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_phys_state) AS ims_phys_state,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_phys_zip) AS ims_phys_zip,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_phys_specialty) AS ims_phys_specialty,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_product_id) AS ims_product_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_product_description) AS ims_product_description,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_outlet_id) AS ims_outlet_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_outlet_name) AS ims_outlet_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_outlet_address) AS ims_outlet_address,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_outlet_city) AS ims_outlet_city,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_outlet_state) AS ims_outlet_state,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_outlet_zip) AS ims_outlet_zip,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_outlet_subcategory) AS ims_outlet_subcategory,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_plan_id) AS ims_plan_id,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_plan_name) AS ims_plan_name,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_plan_model) AS ims_plan_model,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_icd10_grouping) AS primary_icd10_grouping,
        btrim(EXT_IMS_SD809_TRANSACTION_src.primary_icd10_grouping_reason_code) AS primary_icd10_grouping_reason_code,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_icd10_grouping) AS secondary_icd10_grouping,
        btrim(EXT_IMS_SD809_TRANSACTION_src.secondary_icd10_grouping_reason_code) AS secondary_icd10_grouping_reason_code,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_ndc_flag) AS ims_ndc_flag,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_dispensed_date_flag) AS ims_dispensed_date_flag,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_dispensed_quantity_flag) AS ims_dispensed_quantity_flag,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_cost_flag) AS ims_cost_flag,
        btrim(EXT_IMS_SD809_TRANSACTION_src.ims_overall_flag) AS ims_overall_flag,
        EXT_IMS_SD809_TRANSACTION_src.batch_id,
        EXT_IMS_SD809_TRANSACTION_src.row_id,
        EXT_IMS_SD809_TRANSACTION_src.update_ts
 FROM teva_ingestion.EXT_IMS_SD809_TRANSACTION_src;

CREATE  VIEW teva_ingestion.MDM_MERGES AS
 SELECT CASE WHEN (MDM_MERGES_src.previous_tvcmid = ''::varchar) THEN NULL::int ELSE (btrim(MDM_MERGES_src.previous_tvcmid))::int END AS previous_tvcmid,
        CASE WHEN (MDM_MERGES_src.current_tvcmid = ''::varchar) THEN NULL::int ELSE (btrim(MDM_MERGES_src.current_tvcmid))::int END AS current_tvcmid,
        btrim(MDM_MERGES_src.merge_cycle) AS merge_cycle,
        MDM_MERGES_src.batch_id,
        MDM_MERGES_src.row_id,
        MDM_MERGES_src.update_ts
 FROM teva_ingestion.MDM_MERGES_src;

CREATE  VIEW teva_ingestion.EXT_ACTIVITY AS
 SELECT btrim(EXT_ACTIVITY_src.ACTIVITY_ID) AS ACTIVITY_ID,
        btrim(EXT_ACTIVITY_src.FEDERATION_ID) AS FEDERATION_ID,
        btrim(EXT_ACTIVITY_src.CONTACT) AS CONTACT,
        btrim(EXT_ACTIVITY_src.SOURCE_NAME) AS SOURCE_NAME,
        CASE WHEN (EXT_ACTIVITY_src."DATETIME" = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_ACTIVITY_src."DATETIME"))::timestamp END AS "DATETIME",
        btrim(EXT_ACTIVITY_src.TRACKBACK_ID) AS TRACKBACK_ID,
        btrim(EXT_ACTIVITY_src.PREVIOUS_ACTIVITY) AS PREVIOUS_ACTIVITY,
        btrim(EXT_ACTIVITY_src.LEVEL_NAME) AS LEVEL_NAME,
        btrim(EXT_ACTIVITY_src.ACTIVITY_ROLE_NAME) AS ACTIVITY_ROLE_NAME,
        btrim(EXT_ACTIVITY_src.TYPE_NAME) AS TYPE_NAME,
        btrim(EXT_ACTIVITY_src.NATIVE_TYPE) AS NATIVE_TYPE,
        btrim(EXT_ACTIVITY_src.DETAILS) AS DETAILS,
        CASE WHEN (EXT_ACTIVITY_src.BASKET_ID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ACTIVITY_src.BASKET_ID))::int END AS BASKET_ID,
        btrim(EXT_ACTIVITY_src.WEB_URL) AS WEB_URL,
        EXT_ACTIVITY_src.batch_id,
        EXT_ACTIVITY_src.row_id,
        EXT_ACTIVITY_src.update_ts
 FROM teva_ingestion.EXT_ACTIVITY_src;

CREATE  VIEW teva_ingestion.ext_tw_biologics_missing_info AS
 SELECT btrim(ext_tw_biologics_missing_info_src.FAX_DATE) AS FAX_DATE,
        btrim(ext_tw_biologics_missing_info_src.PH_STATE) AS PH_STATE,
        btrim(ext_tw_biologics_missing_info_src.PH_CITY) AS PH_CITY,
        btrim(ext_tw_biologics_missing_info_src.PHYSICIAN) AS PHYSICIAN,
        btrim(ext_tw_biologics_missing_info_src.PH_NPI) AS PH_NPI,
        btrim(ext_tw_biologics_missing_info_src.MRM) AS MRM,
        btrim(ext_tw_biologics_missing_info_src.PH_ZIP) AS PH_ZIP,
        ext_tw_biologics_missing_info_src.batch_id,
        ext_tw_biologics_missing_info_src.row_id,
        ext_tw_biologics_missing_info_src.update_ts
 FROM teva_ingestion.ext_tw_biologics_missing_info_src;

CREATE  VIEW teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS AS
 SELECT btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.id) AS id,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.ownerid) AS ownerid,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.isdeleted) AS isdeleted,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.name) AS name,
        CASE WHEN (EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.createddate))::timestamp END AS createddate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastmodifiedbyid) AS lastmodifiedbyid,
        CASE WHEN (EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.systemmodstamp))::timestamp END AS systemmodstamp,
        CASE WHEN (EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastactivitydate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastactivitydate))::timestamp END AS lastactivitydate,
        CASE WHEN (EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastvieweddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastvieweddate))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastreferenceddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.lastreferenceddate))::timestamp END AS lastreferenceddate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_end_date__c) AS assignment_end_date__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_start_date__c) AS assignment_start_date__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_status__c) AS assignment_status__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.assignment_type__c) AS assignment_type__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.global_employee_id__c) AS global_employee_id__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.rms_territory_name__c) AS rms_territory_name__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.rms_territory_number__c) AS rms_territory_number__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.employee__c) AS employee__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.batch_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.row_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_src;

CREATE  VIEW teva_ingestion.EXT_ONC_ACCOUNT_TARGETS AS
 SELECT CASE WHEN (EXT_ONC_ACCOUNT_TARGETS_src.TVCMID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_ACCOUNT_TARGETS_src.TVCMID))::int END AS TVCMID,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ONC_ACCOUNT_TARGETS_src.ACCT_DEMO_ID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_ACCOUNT_TARGETS_src.ACCT_DEMO_ID))::int END AS ACCT_DEMO_ID,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.TARGET_TYPE) AS TARGET_TYPE,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.TARGET_VALUE) AS TARGET_VALUE,
        CASE WHEN (EXT_ONC_ACCOUNT_TARGETS_src.APPLIES_FROM_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_ONC_ACCOUNT_TARGETS_src.APPLIES_FROM_DATE))::date END AS APPLIES_FROM_DATE,
        CASE WHEN (EXT_ONC_ACCOUNT_TARGETS_src.APPLIES_TO_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_ONC_ACCOUNT_TARGETS_src.APPLIES_TO_DATE))::date END AS APPLIES_TO_DATE,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.ACTIVE_IND) AS ACTIVE_IND,
        CASE WHEN (EXT_ONC_ACCOUNT_TARGETS_src.SYSTEM_START_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_ONC_ACCOUNT_TARGETS_src.SYSTEM_START_DATE))::date END AS SYSTEM_START_DATE,
        CASE WHEN (EXT_ONC_ACCOUNT_TARGETS_src.SYSTEM_END_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_ONC_ACCOUNT_TARGETS_src.SYSTEM_END_DATE))::date END AS SYSTEM_END_DATE,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.END_REASON) AS END_REASON,
        btrim(EXT_ONC_ACCOUNT_TARGETS_src.VEEVA_ACCOUNT_ID) AS VEEVA_ACCOUNT_ID,
        EXT_ONC_ACCOUNT_TARGETS_src.batch_id,
        EXT_ONC_ACCOUNT_TARGETS_src.row_id,
        EXT_ONC_ACCOUNT_TARGETS_src.update_ts
 FROM teva_ingestion.EXT_ONC_ACCOUNT_TARGETS_src;

CREATE  VIEW teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE AS
 SELECT btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.id) AS id,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ownerid) AS ownerid,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.isdeleted) AS isdeleted,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.name) AS name,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.createddate))::timestamp END AS createddate,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastmodifiedbyid) AS lastmodifiedbyid,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.systemmodstamp))::timestamp END AS systemmodstamp,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastactivitydate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastactivitydate))::timestamp END AS lastactivitydate,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastvieweddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastvieweddate))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastreferenceddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.lastreferenceddate))::timestamp END AS lastreferenceddate,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.birth_month_day__c) AS birth_month_day__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.business_mobile__c) AS business_mobile__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.business_phone__c) AS business_phone__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.cost_center_name__c) AS cost_center_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.demotion__c) AS demotion__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ec_creation_date__c) AS ec_creation_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ec_last_modified_date__c) AS ec_last_modified_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.ec_territory_id__c) AS ec_territory_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.email_address__c) AS email_address__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.employee_status__c) AS employee_status__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.first_name__c) AS first_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.full_part_time__c) AS full_part_time__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.global_employee_id__c) AS global_employee_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.hire_date__c) AS hire_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_address_1__c) AS home_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_address_2__c) AS home_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_address_3__c) AS home_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_city_municipality__c) AS home_city_municipality__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_country__c) AS home_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_phone__c) AS home_phone__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_postal_code__c) AS home_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.home_state_province__c) AS home_state_province__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.job_code__c) AS job_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.job_grade__c) AS job_grade__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.loa_end_date__c) AS loa_end_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.loa_start_date__c) AS loa_start_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.last_name__c) AS last_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.local_employee_id__c) AS local_employee_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_address_1__c) AS mailing_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_address_2__c) AS mailing_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_address_3__c) AS mailing_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_city__c) AS mailing_city__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_country__c) AS mailing_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_postal_code__c) AS mailing_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.mailing_state__c) AS mailing_state__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.middle_name__c) AS middle_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.name_suffix__c) AS name_suffix__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.oracle_string__c) AS oracle_string__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.payroll_id__c) AS payroll_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.position_title__c) AS position_title__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.preferred_name__c) AS preferred_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.promotion__c) AS promotion__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.reg_contract__c) AS reg_contract__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_eligibility_indicator__c) AS sample_eligibility_indicator__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_1__c) AS sample_shippingstorage_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_2__c) AS sample_shippingstorage_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_3__c) AS sample_shippingstorage_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_address_status__c) AS sample_shippingstorage_address_status__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_city__c) AS sample_shippingstorage_city__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_country__c) AS sample_shippingstorage_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_postal_code__c) AS sample_shippingstorage_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.sample_shippingstorage_state__c) AS sample_shippingstorage_state__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_address_1__c) AS shipping_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_address_2__c) AS shipping_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_address_3__c) AS shipping_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_city__c) AS shipping_city__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_country__c) AS shipping_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_postal_code__c) AS shipping_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.shipping_state__c) AS shipping_state__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.supervisor_global_employee_id__c) AS supervisor_global_employee_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.transfer_date__c) AS transfer_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.uid__c) AS uid__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.windows_logon_id__c) AS windows_logon_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.teva_id__c) AS teva_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.employee_status_effective_date__c) AS employee_status_effective_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.separation_date__c) AS separation_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.separation_reason__c) AS separation_reason__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.batch_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.row_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_src;

CREATE  VIEW teva_ingestion.EXT_PROGNOS_CINQAIR AS
 SELECT btrim(EXT_PROGNOS_CINQAIR_src.week_end_date) AS week_end_date,
        btrim(EXT_PROGNOS_CINQAIR_src.practice_name) AS practice_name,
        btrim(EXT_PROGNOS_CINQAIR_src.practice_address_line_1) AS practice_address_line_1,
        btrim(EXT_PROGNOS_CINQAIR_src.pracitce_address_line_2) AS pracitce_address_line_2,
        btrim(EXT_PROGNOS_CINQAIR_src.city) AS city,
        btrim(EXT_PROGNOS_CINQAIR_src.state) AS state,
        btrim(EXT_PROGNOS_CINQAIR_src.zip_code) AS zip_code,
        btrim(EXT_PROGNOS_CINQAIR_src.provider_first_name) AS provider_first_name,
        btrim(EXT_PROGNOS_CINQAIR_src.provider_last_name) AS provider_last_name,
        btrim(EXT_PROGNOS_CINQAIR_src.npi) AS npi,
        btrim(EXT_PROGNOS_CINQAIR_src.specialty_1) AS specialty_1,
        btrim(EXT_PROGNOS_CINQAIR_src.specialty_2) AS specialty_2,
        CASE WHEN (EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_0_149 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_0_149))::int END AS pts_with_moderate_severe_asthma_and_eosinophils_0_149,
        CASE WHEN (EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_150_399 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_150_399))::int END AS pts_with_moderate_severe_asthma_and_eosinophils_150_399,
        CASE WHEN (EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_src.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater))::int END AS pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
        CASE WHEN (EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_0_149 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_0_149))::int END AS pts_with_ao_asthma_and_eosinophils_0_149,
        CASE WHEN (EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_150_399 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_150_399))::int END AS pts_with_ao_asthma_and_eosinophils_150_399,
        CASE WHEN (EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_400_or_greater = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_src.pts_with_ao_asthma_and_eosinophils_400_or_greater))::int END AS pts_with_ao_asthma_and_eosinophils_400_or_greater,
        EXT_PROGNOS_CINQAIR_src.batch_id,
        EXT_PROGNOS_CINQAIR_src.row_id,
        EXT_PROGNOS_CINQAIR_src.update_ts
 FROM teva_ingestion.EXT_PROGNOS_CINQAIR_src;

CREATE  VIEW teva_ingestion.ext_tw_anda_sales AS
 SELECT btrim(ext_tw_anda_sales_src.YEAR) AS YEAR,
        btrim(ext_tw_anda_sales_src.SALES_MONTH) AS SALES_MONTH,
        btrim(ext_tw_anda_sales_src.SALES_DATE) AS SALES_DATE,
        btrim(ext_tw_anda_sales_src.CUSTOMER_NO) AS CUSTOMER_NO,
        btrim(ext_tw_anda_sales_src.CUSTOMER) AS CUSTOMER,
        btrim(ext_tw_anda_sales_src.CUSTOMER_ADDRESS_LINE1) AS CUSTOMER_ADDRESS_LINE1,
        btrim(ext_tw_anda_sales_src.CUSTOMER_ADDRESS_LINE2) AS CUSTOMER_ADDRESS_LINE2,
        btrim(ext_tw_anda_sales_src.CITY) AS CITY,
        btrim(ext_tw_anda_sales_src.STATE) AS STATE,
        btrim(ext_tw_anda_sales_src.ZIP) AS ZIP,
        btrim(ext_tw_anda_sales_src.BILL_CUSTOMER_NO) AS BILL_CUSTOMER_NO,
        btrim(ext_tw_anda_sales_src.BILL_ADDRESS_LINE1) AS BILL_ADDRESS_LINE1,
        btrim(ext_tw_anda_sales_src.BILL_ADDRESS_LINE2) AS BILL_ADDRESS_LINE2,
        btrim(ext_tw_anda_sales_src.BILL_CITY) AS BILL_CITY,
        btrim(ext_tw_anda_sales_src.BILL_STATE) AS BILL_STATE,
        btrim(ext_tw_anda_sales_src.BILL_ZIP) AS BILL_ZIP,
        btrim(ext_tw_anda_sales_src.CUSTOMER_TYPE_CD) AS CUSTOMER_TYPE_CD,
        btrim(ext_tw_anda_sales_src.CUSTOMER_TYPE) AS CUSTOMER_TYPE,
        btrim(ext_tw_anda_sales_src.PVP_340B_ID) AS PVP_340B_ID,
        btrim(ext_tw_anda_sales_src.TRADE_CLASS) AS TRADE_CLASS,
        btrim(ext_tw_anda_sales_src.HEALTH_INDUSTRY_NO) AS HEALTH_INDUSTRY_NO,
        btrim(ext_tw_anda_sales_src.DEA_REGISTRATION_NO) AS DEA_REGISTRATION_NO,
        btrim(ext_tw_anda_sales_src.DEA_REGISTRATION_EXPIRATION) AS DEA_REGISTRATION_EXPIRATION,
        btrim(ext_tw_anda_sales_src.STATE_LICENSE) AS STATE_LICENSE,
        btrim(ext_tw_anda_sales_src.STATE_LICENSE_EXPIRATION) AS STATE_LICENSE_EXPIRATION,
        btrim(ext_tw_anda_sales_src.ITEM_NO) AS ITEM_NO,
        btrim(ext_tw_anda_sales_src.NDC) AS NDC,
        btrim(ext_tw_anda_sales_src.BRAND) AS BRAND,
        btrim(ext_tw_anda_sales_src.PACKAGE_SIZE) AS PACKAGE_SIZE,
        btrim(ext_tw_anda_sales_src.VENDOR) AS VENDOR,
        btrim(ext_tw_anda_sales_src.DOCUMENT_NO) AS DOCUMENT_NO,
        btrim(ext_tw_anda_sales_src.ORDER_NO) AS ORDER_NO,
        btrim(ext_tw_anda_sales_src.UNITS_NET) AS UNITS_NET,
        btrim(ext_tw_anda_sales_src.NET_COST) AS NET_COST,
        btrim(ext_tw_anda_sales_src.NET_SALES_AMT) AS NET_SALES_AMT,
        ext_tw_anda_sales_src.batch_id,
        ext_tw_anda_sales_src.row_id,
        ext_tw_anda_sales_src.update_ts
 FROM teva_ingestion.ext_tw_anda_sales_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FR61 AS
 SELECT btrim(EXT_IMS_FR61_src.ddd_outlet_number) AS ddd_outlet_number,
        btrim(EXT_IMS_FR61_src.subcategory_code) AS subcategory_code,
        btrim(EXT_IMS_FR61_src.ddd_outlet_name) AS ddd_outlet_name,
        btrim(EXT_IMS_FR61_src.ddd_outlet_address) AS ddd_outlet_address,
        btrim(EXT_IMS_FR61_src.city) AS city,
        btrim(EXT_IMS_FR61_src.state) AS state,
        btrim(EXT_IMS_FR61_src.activity_date) AS activity_date,
        btrim(EXT_IMS_FR61_src.dea_number) AS dea_number,
        btrim(EXT_IMS_FR61_src.blank1) AS blank1,
        btrim(EXT_IMS_FR61_src.blank2) AS blank2,
        btrim(EXT_IMS_FR61_src.outlet_status) AS outlet_status,
        EXT_IMS_FR61_src.batch_id,
        EXT_IMS_FR61_src.row_id,
        EXT_IMS_FR61_src.update_ts
 FROM teva_ingestion.EXT_IMS_FR61_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_CNT_M_ADHOC AS
 SELECT CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.address) AS address,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.city) AS city,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.state) AS state,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_ADHOC_src.trx_024))::numeric(9,3) END AS trx_024,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.batch_id,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.row_id,
        EXT_IMS_MHJ_CNT_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_M_ADHOC_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_CNT_W_ADHOC AS
 SELECT CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.address) AS address,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.city) AS city,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.state) AS state,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_025))::numeric(9,3) END AS nrx_025,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_026))::numeric(9,3) END AS nrx_026,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_027))::numeric(9,3) END AS nrx_027,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_028))::numeric(9,3) END AS nrx_028,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_029))::numeric(9,3) END AS nrx_029,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_030))::numeric(9,3) END AS nrx_030,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_031))::numeric(9,3) END AS nrx_031,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_032))::numeric(9,3) END AS nrx_032,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_033))::numeric(9,3) END AS nrx_033,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_034))::numeric(9,3) END AS nrx_034,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_035))::numeric(9,3) END AS nrx_035,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_036))::numeric(9,3) END AS nrx_036,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_037))::numeric(9,3) END AS nrx_037,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_038))::numeric(9,3) END AS nrx_038,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_039))::numeric(9,3) END AS nrx_039,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_040))::numeric(9,3) END AS nrx_040,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_041))::numeric(9,3) END AS nrx_041,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_042))::numeric(9,3) END AS nrx_042,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_043))::numeric(9,3) END AS nrx_043,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_044))::numeric(9,3) END AS nrx_044,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_045))::numeric(9,3) END AS nrx_045,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_046))::numeric(9,3) END AS nrx_046,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_047))::numeric(9,3) END AS nrx_047,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_048))::numeric(9,3) END AS nrx_048,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_049))::numeric(9,3) END AS nrx_049,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_050))::numeric(9,3) END AS nrx_050,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_051))::numeric(9,3) END AS nrx_051,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_052))::numeric(9,3) END AS nrx_052,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_053))::numeric(9,3) END AS nrx_053,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_054))::numeric(9,3) END AS nrx_054,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_055))::numeric(9,3) END AS nrx_055,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_056))::numeric(9,3) END AS nrx_056,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_057))::numeric(9,3) END AS nrx_057,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_058))::numeric(9,3) END AS nrx_058,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_059))::numeric(9,3) END AS nrx_059,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_060))::numeric(9,3) END AS nrx_060,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_061))::numeric(9,3) END AS nrx_061,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_062))::numeric(9,3) END AS nrx_062,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_063))::numeric(9,3) END AS nrx_063,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_064))::numeric(9,3) END AS nrx_064,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_065))::numeric(9,3) END AS nrx_065,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_066))::numeric(9,3) END AS nrx_066,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_067))::numeric(9,3) END AS nrx_067,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_068))::numeric(9,3) END AS nrx_068,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_069))::numeric(9,3) END AS nrx_069,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_070))::numeric(9,3) END AS nrx_070,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_071))::numeric(9,3) END AS nrx_071,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_072))::numeric(9,3) END AS nrx_072,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_073))::numeric(9,3) END AS nrx_073,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_074))::numeric(9,3) END AS nrx_074,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_075))::numeric(9,3) END AS nrx_075,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_076))::numeric(9,3) END AS nrx_076,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_077))::numeric(9,3) END AS nrx_077,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_078))::numeric(9,3) END AS nrx_078,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_079))::numeric(9,3) END AS nrx_079,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_080))::numeric(9,3) END AS nrx_080,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_081))::numeric(9,3) END AS nrx_081,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_082))::numeric(9,3) END AS nrx_082,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_083))::numeric(9,3) END AS nrx_083,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_084))::numeric(9,3) END AS nrx_084,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_085))::numeric(9,3) END AS nrx_085,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_086))::numeric(9,3) END AS nrx_086,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_087))::numeric(9,3) END AS nrx_087,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_088))::numeric(9,3) END AS nrx_088,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_089))::numeric(9,3) END AS nrx_089,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_090))::numeric(9,3) END AS nrx_090,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_091))::numeric(9,3) END AS nrx_091,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_092))::numeric(9,3) END AS nrx_092,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_093))::numeric(9,3) END AS nrx_093,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_094))::numeric(9,3) END AS nrx_094,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_095))::numeric(9,3) END AS nrx_095,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_096))::numeric(9,3) END AS nrx_096,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_097))::numeric(9,3) END AS nrx_097,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_098))::numeric(9,3) END AS nrx_098,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_099))::numeric(9,3) END AS nrx_099,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_100))::numeric(9,3) END AS nrx_100,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_101))::numeric(9,3) END AS nrx_101,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_102))::numeric(9,3) END AS nrx_102,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_103))::numeric(9,3) END AS nrx_103,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_104))::numeric(9,3) END AS nrx_104,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_105))::numeric(9,3) END AS nrx_105,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_106))::numeric(9,3) END AS nrx_106,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_107))::numeric(9,3) END AS nrx_107,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_108))::numeric(9,3) END AS nrx_108,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_109))::numeric(9,3) END AS nrx_109,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_110))::numeric(9,3) END AS nrx_110,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_111))::numeric(9,3) END AS nrx_111,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_112))::numeric(9,3) END AS nrx_112,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_113))::numeric(9,3) END AS nrx_113,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_114))::numeric(9,3) END AS nrx_114,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_115))::numeric(9,3) END AS nrx_115,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_116))::numeric(9,3) END AS nrx_116,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_117))::numeric(9,3) END AS nrx_117,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_118))::numeric(9,3) END AS nrx_118,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_119))::numeric(9,3) END AS nrx_119,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_120))::numeric(9,3) END AS nrx_120,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_121))::numeric(9,3) END AS nrx_121,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_122))::numeric(9,3) END AS nrx_122,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_123))::numeric(9,3) END AS nrx_123,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_124))::numeric(9,3) END AS nrx_124,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_125))::numeric(9,3) END AS nrx_125,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_126))::numeric(9,3) END AS nrx_126,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_127))::numeric(9,3) END AS nrx_127,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_128))::numeric(9,3) END AS nrx_128,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_129))::numeric(9,3) END AS nrx_129,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_130))::numeric(9,3) END AS nrx_130,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_131))::numeric(9,3) END AS nrx_131,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.nrx_132))::numeric(9,3) END AS nrx_132,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_024))::numeric(9,3) END AS trx_024,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_025))::numeric(9,3) END AS trx_025,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_026))::numeric(9,3) END AS trx_026,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_027))::numeric(9,3) END AS trx_027,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_028))::numeric(9,3) END AS trx_028,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_029))::numeric(9,3) END AS trx_029,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_030))::numeric(9,3) END AS trx_030,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_031))::numeric(9,3) END AS trx_031,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_032))::numeric(9,3) END AS trx_032,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_033))::numeric(9,3) END AS trx_033,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_034))::numeric(9,3) END AS trx_034,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_035))::numeric(9,3) END AS trx_035,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_036))::numeric(9,3) END AS trx_036,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_037))::numeric(9,3) END AS trx_037,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_038))::numeric(9,3) END AS trx_038,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_039))::numeric(9,3) END AS trx_039,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_040))::numeric(9,3) END AS trx_040,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_041))::numeric(9,3) END AS trx_041,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_042))::numeric(9,3) END AS trx_042,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_043))::numeric(9,3) END AS trx_043,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_044))::numeric(9,3) END AS trx_044,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_045))::numeric(9,3) END AS trx_045,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_046))::numeric(9,3) END AS trx_046,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_047))::numeric(9,3) END AS trx_047,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_048))::numeric(9,3) END AS trx_048,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_049))::numeric(9,3) END AS trx_049,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_050))::numeric(9,3) END AS trx_050,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_051))::numeric(9,3) END AS trx_051,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_052))::numeric(9,3) END AS trx_052,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_053))::numeric(9,3) END AS trx_053,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_054))::numeric(9,3) END AS trx_054,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_055))::numeric(9,3) END AS trx_055,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_056))::numeric(9,3) END AS trx_056,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_057))::numeric(9,3) END AS trx_057,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_058))::numeric(9,3) END AS trx_058,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_059))::numeric(9,3) END AS trx_059,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_060))::numeric(9,3) END AS trx_060,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_061))::numeric(9,3) END AS trx_061,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_062))::numeric(9,3) END AS trx_062,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_063))::numeric(9,3) END AS trx_063,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_064))::numeric(9,3) END AS trx_064,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_065))::numeric(9,3) END AS trx_065,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_066))::numeric(9,3) END AS trx_066,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_067))::numeric(9,3) END AS trx_067,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_068))::numeric(9,3) END AS trx_068,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_069))::numeric(9,3) END AS trx_069,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_070))::numeric(9,3) END AS trx_070,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_071))::numeric(9,3) END AS trx_071,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_072))::numeric(9,3) END AS trx_072,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_073))::numeric(9,3) END AS trx_073,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_074))::numeric(9,3) END AS trx_074,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_075))::numeric(9,3) END AS trx_075,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_076))::numeric(9,3) END AS trx_076,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_077))::numeric(9,3) END AS trx_077,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_078))::numeric(9,3) END AS trx_078,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_079))::numeric(9,3) END AS trx_079,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_080))::numeric(9,3) END AS trx_080,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_081))::numeric(9,3) END AS trx_081,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_082))::numeric(9,3) END AS trx_082,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_083))::numeric(9,3) END AS trx_083,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_084))::numeric(9,3) END AS trx_084,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_085))::numeric(9,3) END AS trx_085,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_086))::numeric(9,3) END AS trx_086,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_087))::numeric(9,3) END AS trx_087,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_088))::numeric(9,3) END AS trx_088,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_089))::numeric(9,3) END AS trx_089,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_090))::numeric(9,3) END AS trx_090,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_091))::numeric(9,3) END AS trx_091,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_092))::numeric(9,3) END AS trx_092,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_093))::numeric(9,3) END AS trx_093,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_094))::numeric(9,3) END AS trx_094,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_095))::numeric(9,3) END AS trx_095,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_096))::numeric(9,3) END AS trx_096,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_097))::numeric(9,3) END AS trx_097,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_098))::numeric(9,3) END AS trx_098,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_099))::numeric(9,3) END AS trx_099,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_100))::numeric(9,3) END AS trx_100,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_101))::numeric(9,3) END AS trx_101,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_102))::numeric(9,3) END AS trx_102,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_103))::numeric(9,3) END AS trx_103,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_104))::numeric(9,3) END AS trx_104,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_105))::numeric(9,3) END AS trx_105,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_106))::numeric(9,3) END AS trx_106,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_107))::numeric(9,3) END AS trx_107,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_108))::numeric(9,3) END AS trx_108,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_109))::numeric(9,3) END AS trx_109,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_110))::numeric(9,3) END AS trx_110,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_111))::numeric(9,3) END AS trx_111,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_112))::numeric(9,3) END AS trx_112,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_113))::numeric(9,3) END AS trx_113,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_114))::numeric(9,3) END AS trx_114,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_115))::numeric(9,3) END AS trx_115,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_116))::numeric(9,3) END AS trx_116,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_117))::numeric(9,3) END AS trx_117,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_118))::numeric(9,3) END AS trx_118,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_119))::numeric(9,3) END AS trx_119,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_120))::numeric(9,3) END AS trx_120,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_121))::numeric(9,3) END AS trx_121,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_122))::numeric(9,3) END AS trx_122,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_123))::numeric(9,3) END AS trx_123,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_124))::numeric(9,3) END AS trx_124,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_125))::numeric(9,3) END AS trx_125,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_126))::numeric(9,3) END AS trx_126,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_127))::numeric(9,3) END AS trx_127,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_128))::numeric(9,3) END AS trx_128,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_129))::numeric(9,3) END AS trx_129,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_130))::numeric(9,3) END AS trx_130,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_131))::numeric(9,3) END AS trx_131,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_ADHOC_src.trx_132))::numeric(9,3) END AS trx_132,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.batch_id,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.row_id,
        EXT_IMS_MHJ_CNT_W_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_W_ADHOC_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_QTY_M_ADHOC AS
 SELECT CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.address) AS address,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.city) AS city,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.state) AS state,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_ADHOC_src.trx_024))::numeric(9,3) END AS trx_024,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.batch_id,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.row_id,
        EXT_IMS_MHJ_QTY_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_M_ADHOC_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_QTY_W_ADHOC AS
 SELECT CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.address) AS address,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.city) AS city,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.state) AS state,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_025))::numeric(9,3) END AS nrx_025,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_026))::numeric(9,3) END AS nrx_026,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_027))::numeric(9,3) END AS nrx_027,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_028))::numeric(9,3) END AS nrx_028,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_029))::numeric(9,3) END AS nrx_029,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_030))::numeric(9,3) END AS nrx_030,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_031))::numeric(9,3) END AS nrx_031,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_032))::numeric(9,3) END AS nrx_032,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_033))::numeric(9,3) END AS nrx_033,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_034))::numeric(9,3) END AS nrx_034,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_035))::numeric(9,3) END AS nrx_035,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_036))::numeric(9,3) END AS nrx_036,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_037))::numeric(9,3) END AS nrx_037,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_038))::numeric(9,3) END AS nrx_038,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_039))::numeric(9,3) END AS nrx_039,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_040))::numeric(9,3) END AS nrx_040,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_041))::numeric(9,3) END AS nrx_041,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_042))::numeric(9,3) END AS nrx_042,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_043))::numeric(9,3) END AS nrx_043,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_044))::numeric(9,3) END AS nrx_044,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_045))::numeric(9,3) END AS nrx_045,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_046))::numeric(9,3) END AS nrx_046,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_047))::numeric(9,3) END AS nrx_047,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_048))::numeric(9,3) END AS nrx_048,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_049))::numeric(9,3) END AS nrx_049,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_050))::numeric(9,3) END AS nrx_050,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_051))::numeric(9,3) END AS nrx_051,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_052))::numeric(9,3) END AS nrx_052,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_053))::numeric(9,3) END AS nrx_053,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_054))::numeric(9,3) END AS nrx_054,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_055))::numeric(9,3) END AS nrx_055,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_056))::numeric(9,3) END AS nrx_056,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_057))::numeric(9,3) END AS nrx_057,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_058))::numeric(9,3) END AS nrx_058,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_059))::numeric(9,3) END AS nrx_059,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_060))::numeric(9,3) END AS nrx_060,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_061))::numeric(9,3) END AS nrx_061,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_062))::numeric(9,3) END AS nrx_062,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_063))::numeric(9,3) END AS nrx_063,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_064))::numeric(9,3) END AS nrx_064,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_065))::numeric(9,3) END AS nrx_065,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_066))::numeric(9,3) END AS nrx_066,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_067))::numeric(9,3) END AS nrx_067,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_068))::numeric(9,3) END AS nrx_068,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_069))::numeric(9,3) END AS nrx_069,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_070))::numeric(9,3) END AS nrx_070,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_071))::numeric(9,3) END AS nrx_071,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_072))::numeric(9,3) END AS nrx_072,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_073))::numeric(9,3) END AS nrx_073,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_074))::numeric(9,3) END AS nrx_074,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_075))::numeric(9,3) END AS nrx_075,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_076))::numeric(9,3) END AS nrx_076,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_077))::numeric(9,3) END AS nrx_077,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_078))::numeric(9,3) END AS nrx_078,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_079))::numeric(9,3) END AS nrx_079,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_080))::numeric(9,3) END AS nrx_080,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_081))::numeric(9,3) END AS nrx_081,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_082))::numeric(9,3) END AS nrx_082,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_083))::numeric(9,3) END AS nrx_083,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_084))::numeric(9,3) END AS nrx_084,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_085))::numeric(9,3) END AS nrx_085,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_086))::numeric(9,3) END AS nrx_086,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_087))::numeric(9,3) END AS nrx_087,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_088))::numeric(9,3) END AS nrx_088,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_089))::numeric(9,3) END AS nrx_089,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_090))::numeric(9,3) END AS nrx_090,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_091))::numeric(9,3) END AS nrx_091,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_092))::numeric(9,3) END AS nrx_092,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_093))::numeric(9,3) END AS nrx_093,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_094))::numeric(9,3) END AS nrx_094,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_095))::numeric(9,3) END AS nrx_095,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_096))::numeric(9,3) END AS nrx_096,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_097))::numeric(9,3) END AS nrx_097,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_098))::numeric(9,3) END AS nrx_098,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_099))::numeric(9,3) END AS nrx_099,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_100))::numeric(9,3) END AS nrx_100,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_101))::numeric(9,3) END AS nrx_101,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_102))::numeric(9,3) END AS nrx_102,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_103))::numeric(9,3) END AS nrx_103,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_104))::numeric(9,3) END AS nrx_104,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_105))::numeric(9,3) END AS nrx_105,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_106))::numeric(9,3) END AS nrx_106,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_107))::numeric(9,3) END AS nrx_107,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_108))::numeric(9,3) END AS nrx_108,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_109))::numeric(9,3) END AS nrx_109,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_110))::numeric(9,3) END AS nrx_110,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_111))::numeric(9,3) END AS nrx_111,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_112))::numeric(9,3) END AS nrx_112,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_113))::numeric(9,3) END AS nrx_113,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_114))::numeric(9,3) END AS nrx_114,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_115))::numeric(9,3) END AS nrx_115,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_116))::numeric(9,3) END AS nrx_116,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_117))::numeric(9,3) END AS nrx_117,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_118))::numeric(9,3) END AS nrx_118,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_119))::numeric(9,3) END AS nrx_119,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_120))::numeric(9,3) END AS nrx_120,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_121))::numeric(9,3) END AS nrx_121,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_122))::numeric(9,3) END AS nrx_122,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_123))::numeric(9,3) END AS nrx_123,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_124))::numeric(9,3) END AS nrx_124,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_125))::numeric(9,3) END AS nrx_125,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_126))::numeric(9,3) END AS nrx_126,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_127))::numeric(9,3) END AS nrx_127,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_128))::numeric(9,3) END AS nrx_128,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_129))::numeric(9,3) END AS nrx_129,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_130))::numeric(9,3) END AS nrx_130,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_131))::numeric(9,3) END AS nrx_131,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.nrx_132))::numeric(9,3) END AS nrx_132,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_024))::numeric(9,3) END AS trx_024,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_025))::numeric(9,3) END AS trx_025,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_026))::numeric(9,3) END AS trx_026,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_027))::numeric(9,3) END AS trx_027,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_028))::numeric(9,3) END AS trx_028,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_029))::numeric(9,3) END AS trx_029,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_030))::numeric(9,3) END AS trx_030,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_031))::numeric(9,3) END AS trx_031,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_032))::numeric(9,3) END AS trx_032,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_033))::numeric(9,3) END AS trx_033,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_034))::numeric(9,3) END AS trx_034,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_035))::numeric(9,3) END AS trx_035,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_036))::numeric(9,3) END AS trx_036,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_037))::numeric(9,3) END AS trx_037,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_038))::numeric(9,3) END AS trx_038,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_039))::numeric(9,3) END AS trx_039,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_040))::numeric(9,3) END AS trx_040,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_041))::numeric(9,3) END AS trx_041,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_042))::numeric(9,3) END AS trx_042,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_043))::numeric(9,3) END AS trx_043,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_044))::numeric(9,3) END AS trx_044,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_045))::numeric(9,3) END AS trx_045,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_046))::numeric(9,3) END AS trx_046,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_047))::numeric(9,3) END AS trx_047,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_048))::numeric(9,3) END AS trx_048,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_049))::numeric(9,3) END AS trx_049,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_050))::numeric(9,3) END AS trx_050,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_051))::numeric(9,3) END AS trx_051,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_052))::numeric(9,3) END AS trx_052,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_053))::numeric(9,3) END AS trx_053,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_054))::numeric(9,3) END AS trx_054,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_055))::numeric(9,3) END AS trx_055,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_056))::numeric(9,3) END AS trx_056,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_057))::numeric(9,3) END AS trx_057,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_058))::numeric(9,3) END AS trx_058,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_059))::numeric(9,3) END AS trx_059,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_060))::numeric(9,3) END AS trx_060,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_061))::numeric(9,3) END AS trx_061,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_062))::numeric(9,3) END AS trx_062,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_063))::numeric(9,3) END AS trx_063,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_064))::numeric(9,3) END AS trx_064,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_065))::numeric(9,3) END AS trx_065,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_066))::numeric(9,3) END AS trx_066,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_067))::numeric(9,3) END AS trx_067,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_068))::numeric(9,3) END AS trx_068,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_069))::numeric(9,3) END AS trx_069,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_070))::numeric(9,3) END AS trx_070,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_071))::numeric(9,3) END AS trx_071,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_072))::numeric(9,3) END AS trx_072,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_073))::numeric(9,3) END AS trx_073,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_074))::numeric(9,3) END AS trx_074,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_075))::numeric(9,3) END AS trx_075,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_076))::numeric(9,3) END AS trx_076,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_077))::numeric(9,3) END AS trx_077,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_078))::numeric(9,3) END AS trx_078,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_079))::numeric(9,3) END AS trx_079,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_080))::numeric(9,3) END AS trx_080,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_081))::numeric(9,3) END AS trx_081,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_082))::numeric(9,3) END AS trx_082,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_083))::numeric(9,3) END AS trx_083,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_084))::numeric(9,3) END AS trx_084,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_085))::numeric(9,3) END AS trx_085,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_086))::numeric(9,3) END AS trx_086,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_087))::numeric(9,3) END AS trx_087,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_088))::numeric(9,3) END AS trx_088,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_089))::numeric(9,3) END AS trx_089,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_090))::numeric(9,3) END AS trx_090,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_091))::numeric(9,3) END AS trx_091,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_092))::numeric(9,3) END AS trx_092,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_093))::numeric(9,3) END AS trx_093,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_094))::numeric(9,3) END AS trx_094,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_095))::numeric(9,3) END AS trx_095,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_096))::numeric(9,3) END AS trx_096,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_097))::numeric(9,3) END AS trx_097,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_098))::numeric(9,3) END AS trx_098,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_099))::numeric(9,3) END AS trx_099,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_100))::numeric(9,3) END AS trx_100,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_101))::numeric(9,3) END AS trx_101,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_102))::numeric(9,3) END AS trx_102,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_103))::numeric(9,3) END AS trx_103,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_104))::numeric(9,3) END AS trx_104,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_105))::numeric(9,3) END AS trx_105,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_106))::numeric(9,3) END AS trx_106,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_107))::numeric(9,3) END AS trx_107,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_108))::numeric(9,3) END AS trx_108,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_109))::numeric(9,3) END AS trx_109,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_110))::numeric(9,3) END AS trx_110,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_111))::numeric(9,3) END AS trx_111,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_112))::numeric(9,3) END AS trx_112,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_113))::numeric(9,3) END AS trx_113,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_114))::numeric(9,3) END AS trx_114,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_115))::numeric(9,3) END AS trx_115,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_116))::numeric(9,3) END AS trx_116,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_117))::numeric(9,3) END AS trx_117,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_118))::numeric(9,3) END AS trx_118,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_119))::numeric(9,3) END AS trx_119,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_120))::numeric(9,3) END AS trx_120,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_121))::numeric(9,3) END AS trx_121,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_122))::numeric(9,3) END AS trx_122,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_123))::numeric(9,3) END AS trx_123,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_124))::numeric(9,3) END AS trx_124,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_125))::numeric(9,3) END AS trx_125,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_126))::numeric(9,3) END AS trx_126,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_127))::numeric(9,3) END AS trx_127,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_128))::numeric(9,3) END AS trx_128,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_129))::numeric(9,3) END AS trx_129,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_130))::numeric(9,3) END AS trx_130,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_131))::numeric(9,3) END AS trx_131,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_ADHOC_src.trx_132))::numeric(9,3) END AS trx_132,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.batch_id,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.row_id,
        EXT_IMS_MHJ_QTY_W_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_W_ADHOC_src;

CREATE  VIEW teva_ingestion.EXT_PSKW_GRANIX_COUPON_SAVINGS AS
 SELECT btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.transaction_type) AS transaction_type,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.claim_authorization_number) AS claim_authorization_number,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.original_claim_authorization_number) AS original_claim_authorization_number,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.rx_num) AS rx_num,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_of_fill = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_of_fill))::timestamp END AS date_of_fill,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_written = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_written))::timestamp END AS date_written,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.day_supply = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.day_supply))::int END AS day_supply,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.daw) AS daw,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.ndc) AS ndc,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.drug_desc) AS drug_desc,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.new_refill_code) AS new_refill_code,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.number_of_refills) AS number_of_refills,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.other_coverage_code) AS other_coverage_code,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.group_num) AS group_num,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.member_id) AS member_id,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_gender) AS patient_gender,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_processed = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.date_processed))::timestamp END AS date_processed,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.nabp) AS nabp,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_name) AS phm_name,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_add1) AS phm_add1,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_add2) AS phm_add2,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_city) AS phm_city,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_state) AS phm_state,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phm_zip) AS phm_zip,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.npi) AS npi,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_name) AS phy_name,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_fn) AS phy_fn,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_mi) AS phy_mi,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_ln) AS phy_ln,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_suffix) AS phy_suffix,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_prof_desg) AS phy_prof_desg,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.spec1) AS spec1,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.spec2) AS spec2,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_add1) AS phy_add1,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_add2) AS phy_add2,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_city) AS phy_city,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_state) AS phy_state,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.phy_zip) AS phy_zip,
        btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.submission_method) AS submission_method,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.quantity = ''::varchar) THEN NULL::float ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.quantity))::float END AS quantity,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_benefit = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_benefit))::numeric(9,2) END AS patient_benefit,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_copay_before_benefit_applied = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_copay_before_benefit_applied))::numeric(9,2) END AS patient_copay_before_benefit_applied,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_oop = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.patient_oop))::numeric(9,2) END AS patient_oop,
        CASE WHEN (EXT_PSKW_GRANIX_COUPON_SAVINGS_src.pharmacy_transaction_fee = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_PSKW_GRANIX_COUPON_SAVINGS_src.pharmacy_transaction_fee))::numeric(9,2) END AS pharmacy_transaction_fee,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.batch_id,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.row_id,
        EXT_PSKW_GRANIX_COUPON_SAVINGS_src.update_ts
 FROM teva_ingestion.EXT_PSKW_GRANIX_COUPON_SAVINGS_src;

CREATE  VIEW teva_ingestion.MDM_HCO AS
 SELECT btrim(MDM_HCO_src.TVCMID) AS TVCMID,
        btrim(MDM_HCO_src.IMS_ORGANIZATION_ID) AS IMS_ORGANIZATION_ID,
        btrim(MDM_HCO_src.DBA_NAME) AS DBA_NAME,
        btrim(MDM_HCO_src.BUSINESS_NAME) AS BUSINESS_NAME,
        btrim(MDM_HCO_src.CARE_OF_LOCATION) AS CARE_OF_LOCATION,
        btrim(MDM_HCO_src.RECORD_TYPE) AS RECORD_TYPE,
        btrim(MDM_HCO_src.RECORD_TYPE_NAME) AS RECORD_TYPE_NAME,
        btrim(MDM_HCO_src.SUB_TYPE) AS SUB_TYPE,
        btrim(MDM_HCO_src.SUB_TYPE_NAME) AS SUB_TYPE_NAME,
        btrim(MDM_HCO_src.OWNER_STATUS) AS OWNER_STATUS,
        btrim(MDM_HCO_src.PROFIT_STATUS) AS PROFIT_STATUS,
        CASE WHEN (MDM_HCO_src.CMI = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.CMI))::int END AS CMI,
        CASE WHEN (MDM_HCO_src.NO_OF_PROVIDERS = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.NO_OF_PROVIDERS))::int END AS NO_OF_PROVIDERS,
        CASE WHEN (MDM_HCO_src.PRIMARY_COT_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.PRIMARY_COT_ID))::int END AS PRIMARY_COT_ID,
        CASE WHEN (MDM_HCO_src.COT_CLASSIFICATION_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.COT_CLASSIFICATION_ID))::int END AS COT_CLASSIFICATION_ID,
        btrim(MDM_HCO_src.COT_CLASSIFICATION) AS COT_CLASSIFICATION,
        CASE WHEN (MDM_HCO_src.COT_FACILITY_TYPE_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.COT_FACILITY_TYPE_ID))::int END AS COT_FACILITY_TYPE_ID,
        btrim(MDM_HCO_src.COT_FACILITY_TYPE) AS COT_FACILITY_TYPE,
        CASE WHEN (MDM_HCO_src.COT_SPECIALTY_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.COT_SPECIALTY_ID))::int END AS COT_SPECIALTY_ID,
        btrim(MDM_HCO_src.COT_SPECIALTY) AS COT_SPECIALTY,
        CASE WHEN (MDM_HCO_src.TTL_LICENSE_BEDS = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.TTL_LICENSE_BEDS))::int END AS TTL_LICENSE_BEDS,
        CASE WHEN (MDM_HCO_src.TTL_CENSUS_BEDS = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.TTL_CENSUS_BEDS))::int END AS TTL_CENSUS_BEDS,
        CASE WHEN (MDM_HCO_src.TTL_STAFFED_BEDS = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCO_src.TTL_STAFFED_BEDS))::int END AS TTL_STAFFED_BEDS,
        btrim(MDM_HCO_src.TEACHING_HOSP) AS TEACHING_HOSP,
        btrim(MDM_HCO_src.COMMHOSP) AS COMMHOSP,
        btrim(MDM_HCO_src.FORMULARY) AS FORMULARY,
        btrim(MDM_HCO_src.ELECTRONIC_MEDICAL_RECORD) AS ELECTRONIC_MEDICAL_RECORD,
        btrim(MDM_HCO_src.EPRESCRIBE) AS EPRESCRIBE,
        btrim(MDM_HCO_src.PAYPERFORM) AS PAYPERFORM,
        btrim(MDM_HCO_src.GENFIRST) AS GENFIRST,
        btrim(MDM_HCO_src.SREP_ACCESS) AS SREP_ACCESS,
        btrim(MDM_HCO_src.PRACTICING_STATUS_CODE_HEALTHCARE_ORGANIZATION) AS PRACTICING_STATUS_CODE_HEALTHCARE_ORGANIZATION,
        btrim(MDM_HCO_src.MPN) AS MPN,
        btrim(MDM_HCO_src.MPN_ORDER) AS MPN_ORDER,
        btrim(MDM_HCO_src.STATUS_INDICATOR) AS STATUS_INDICATOR,
        btrim(MDM_HCO_src.STATUS_INDICATOR_NAME) AS STATUS_INDICATOR_NAME,
        btrim(MDM_HCO_src.DEACTIVATION_REASON) AS DEACTIVATION_REASON,
        btrim(MDM_HCO_src.LOGICAL_DELETION_DATE) AS LOGICAL_DELETION_DATE,
        btrim(MDM_HCO_src.HCE_INSERT_DATE) AS HCE_INSERT_DATE,
        btrim(MDM_HCO_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_HCO_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_HCO_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_HCO_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_HCO_src.batch_id,
        MDM_HCO_src.row_id,
        MDM_HCO_src.update_ts
 FROM teva_ingestion.MDM_HCO_src;

CREATE  VIEW teva_ingestion.EXT_CONNECTIVERX_COUPON AS
 SELECT btrim(EXT_CONNECTIVERX_COUPON_src.redemption_type) AS redemption_type,
        btrim(EXT_CONNECTIVERX_COUPON_src.transaction_type) AS transaction_type,
        btrim(EXT_CONNECTIVERX_COUPON_src.claim_authorization_number) AS claim_authorization_number,
        btrim(EXT_CONNECTIVERX_COUPON_src.original_claim_authorization_number) AS original_claim_authorization_number,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.date_of_fill = ''::varchar) THEN NULL::date ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.date_of_fill))::date END AS date_of_fill,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.date_written = ''::varchar) THEN NULL::date ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.date_written))::date END AS date_written,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.day_supply = ''::varchar) THEN NULL::int ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.day_supply))::int END AS day_supply,
        btrim(EXT_CONNECTIVERX_COUPON_src.ndc) AS ndc,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.daw = ''::varchar) THEN NULL::int ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.daw))::int END AS daw,
        btrim(EXT_CONNECTIVERX_COUPON_src.drug_title) AS drug_title,
        btrim(EXT_CONNECTIVERX_COUPON_src.drug_strength_and_form) AS drug_strength_and_form,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.new_refill_code = ''::varchar) THEN NULL::int ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.new_refill_code))::int END AS new_refill_code,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.quantity = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.quantity))::numeric(37,15) END AS quantity,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.number_of_refills = ''::varchar) THEN NULL::int ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.number_of_refills))::int END AS number_of_refills,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.other_coverage_code = ''::varchar) THEN NULL::int ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.other_coverage_code))::int END AS other_coverage_code,
        btrim(EXT_CONNECTIVERX_COUPON_src.group_num) AS group_num,
        btrim(EXT_CONNECTIVERX_COUPON_src.member_id) AS member_id,
        btrim(EXT_CONNECTIVERX_COUPON_src.patient_gender) AS patient_gender,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.age = ''::varchar) THEN NULL::int ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.age))::int END AS age,
        btrim(EXT_CONNECTIVERX_COUPON_src.date_processed) AS date_processed,
        btrim(EXT_CONNECTIVERX_COUPON_src.nabp) AS nabp,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_chain) AS pharmacy_chain,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_npi) AS pharmacy_npi,
        btrim(EXT_CONNECTIVERX_COUPON_src.rx_num) AS rx_num,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_name) AS pharmacy_name,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_address_1) AS pharmacy_address_1,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_address_2) AS pharmacy_address_2,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_city) AS pharmacy_city,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_state) AS pharmacy_state,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_zip) AS pharmacy_zip,
        btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_phone) AS pharmacy_phone,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_npi) AS hcp_npi,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_first_name) AS hcp_first_name,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_middle_name) AS hcp_middle_name,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_last_name) AS hcp_last_name,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_suffix) AS hcp_suffix,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_designation) AS hcp_designation,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_specialty_1) AS hcp_specialty_1,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_specialty_2) AS hcp_specialty_2,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_address_1) AS hcp_address_1,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_address_2) AS hcp_address_2,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_city) AS hcp_city,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_state) AS hcp_state,
        btrim(EXT_CONNECTIVERX_COUPON_src.hcp_zip) AS hcp_zip,
        btrim(EXT_CONNECTIVERX_COUPON_src.submission_method) AS submission_method,
        btrim(EXT_CONNECTIVERX_COUPON_src.previous_payer_id) AS previous_payer_id,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.patient_expense = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.patient_expense))::numeric(9,2) END AS patient_expense,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.patient_benefit = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.patient_benefit))::numeric(9,2) END AS patient_benefit,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.patient_copay = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.patient_copay))::numeric(37,15) END AS patient_copay,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.patient_oop = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.patient_oop))::numeric(37,15) END AS patient_oop,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.pharmacy_fee = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.pharmacy_fee))::numeric(37,15) END AS pharmacy_fee,
        CASE WHEN (EXT_CONNECTIVERX_COUPON_src.amount_due = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CONNECTIVERX_COUPON_src.amount_due))::numeric(37,15) END AS amount_due,
        btrim(EXT_CONNECTIVERX_COUPON_src.create_date) AS create_date,
        btrim(EXT_CONNECTIVERX_COUPON_src.occ_payment_type) AS occ_payment_type,
        btrim(EXT_CONNECTIVERX_COUPON_src.calc_awp) AS calc_awp,
        btrim(EXT_CONNECTIVERX_COUPON_src.admin_hcp_npi) AS admin_hcp_npi,
        btrim(EXT_CONNECTIVERX_COUPON_src.admin_hcp_name) AS admin_hcp_name,
        btrim(EXT_CONNECTIVERX_COUPON_src.admin_hcp_address) AS admin_hcp_address,
        btrim(EXT_CONNECTIVERX_COUPON_src.admin_hcp_address2) AS admin_hcp_address2,
        btrim(EXT_CONNECTIVERX_COUPON_src.admin_hcp_city) AS admin_hcp_city,
        btrim(EXT_CONNECTIVERX_COUPON_src.admin_hcp_state) AS admin_hcp_state,
        btrim(EXT_CONNECTIVERX_COUPON_src.admin_hcp_zip) AS admin_hcp_zip,
        btrim(EXT_CONNECTIVERX_COUPON_src.claim_type) AS claim_type,
        btrim(EXT_CONNECTIVERX_COUPON_src.administration_flag) AS administration_flag,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_name) AS soc_name,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_phone) AS soc_phone,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_fax) AS soc_fax,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_address) AS soc_address,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_city) AS soc_city,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_state) AS soc_state,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_zip) AS soc_zip,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_id) AS soc_id,
        btrim(EXT_CONNECTIVERX_COUPON_src.soc_npi) AS soc_npi,
        btrim(EXT_CONNECTIVERX_COUPON_src.payer_name) AS payer_name,
        btrim(EXT_CONNECTIVERX_COUPON_src.cpt_code) AS cpt_code,
        EXT_CONNECTIVERX_COUPON_src.batch_id,
        EXT_CONNECTIVERX_COUPON_src.row_id,
        EXT_CONNECTIVERX_COUPON_src.update_ts
 FROM teva_ingestion.EXT_CONNECTIVERX_COUPON_src;

CREATE  VIEW teva_ingestion.EXT_OPTUMRX_V2 AS
 SELECT btrim(EXT_OPTUMRX_V2_src.fill_month) AS fill_month,
        btrim(EXT_OPTUMRX_V2_src.npi) AS npi,
        btrim(EXT_OPTUMRX_V2_src.full_name) AS full_name,
        btrim(EXT_OPTUMRX_V2_src.specialty) AS specialty,
        btrim(EXT_OPTUMRX_V2_src.address_1) AS address_1,
        btrim(EXT_OPTUMRX_V2_src.address_2) AS address_2,
        btrim(EXT_OPTUMRX_V2_src.city) AS city,
        btrim(EXT_OPTUMRX_V2_src.state) AS state,
        btrim(EXT_OPTUMRX_V2_src.zip) AS zip,
        btrim(EXT_OPTUMRX_V2_src.ndc) AS ndc,
        btrim(EXT_OPTUMRX_V2_src.product_name) AS product_name,
        btrim(EXT_OPTUMRX_V2_src.trx_count) AS trx_count,
        btrim(EXT_OPTUMRX_V2_src.trx_quantity) AS trx_quantity,
        btrim(EXT_OPTUMRX_V2_src.payer_flag) AS payer_flag,
        btrim(EXT_OPTUMRX_V2_src.briova_flag) AS briova_flag,
        EXT_OPTUMRX_V2_src.batch_id,
        EXT_OPTUMRX_V2_src.row_id,
        EXT_OPTUMRX_V2_src.update_ts
 FROM teva_ingestion.EXT_OPTUMRX_V2_src;

CREATE  VIEW teva_ingestion.EXT_VV_CALL2_SAMPLE_VOD__C AS
 SELECT btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.id) AS id,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.name) AS name,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.createddate) AS createddate,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.createdbyid) AS createdbyid,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.lastactivitydate) AS lastactivitydate,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.lastvieweddate) AS lastvieweddate,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.lastreferenceddate) AS lastreferenceddate,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.account_vod__c) AS account_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.call_date_vod__c) AS call_date_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.is_parent_call_vod__c) AS is_parent_call_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.quantity_vod__c) AS quantity_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.lot_vod__c) AS lot_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.mobile_id_vod__c) AS mobile_id_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.call2_vod__c) AS call2_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.product_vod__c) AS product_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.distributor_vod__c) AS distributor_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.attendee_type_vod__c) AS attendee_type_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.entity_reference_id_vod__c) AS entity_reference_id_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.delivery_status_vod__c) AS delivery_status_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.apply_limit_vod__c) AS apply_limit_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.limit_applied_vod__c) AS limit_applied_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.manufacturer_vod__c) AS manufacturer_vod__c,
        btrim(EXT_VV_CALL2_SAMPLE_VOD__C_src.product_value_vod__c) AS product_value_vod__c,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.batch_id,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.row_id,
        EXT_VV_CALL2_SAMPLE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_SAMPLE_VOD__C_src;

CREATE  VIEW teva_ingestion.ext_ims_copay AS
 SELECT btrim(ext_ims_copay_src.group_number) AS group_number,
        btrim(ext_ims_copay_src.group_name) AS group_name,
        btrim(ext_ims_copay_src.claim_type) AS claim_type,
        btrim(ext_ims_copay_src.rx_number) AS rx_number,
        btrim(ext_ims_copay_src.date_of_fill) AS date_of_fill,
        btrim(ext_ims_copay_src.member_id) AS member_id,
        btrim(ext_ims_copay_src.other_coverage_code) AS other_coverage_code,
        btrim(ext_ims_copay_src.new_refill_code) AS new_refill_code,
        btrim(ext_ims_copay_src.basis_of_reimbursement) AS basis_of_reimbursement,
        btrim(ext_ims_copay_src.ndc) AS ndc,
        btrim(ext_ims_copay_src.drug_name) AS drug_name,
        btrim(ext_ims_copay_src.drug_form) AS drug_form,
        btrim(ext_ims_copay_src.drug_strength) AS drug_strength,
        btrim(ext_ims_copay_src.paid_quantity) AS paid_quantity,
        btrim(ext_ims_copay_src.days_supply) AS days_supply,
        btrim(ext_ims_copay_src.ingredient_cost_paid) AS ingredient_cost_paid,
        btrim(ext_ims_copay_src.dispensing_fee_paid) AS dispensing_fee_paid,
        btrim(ext_ims_copay_src.sales_tax_paid) AS sales_tax_paid,
        btrim(ext_ims_copay_src.copay_amount) AS copay_amount,
        btrim(ext_ims_copay_src.total_amount_paid) AS total_amount_paid,
        btrim(ext_ims_copay_src.usual_and_customary_amount) AS usual_and_customary_amount,
        btrim(ext_ims_copay_src.claim_number) AS claim_number,
        btrim(ext_ims_copay_src.adjusted_claim_number) AS adjusted_claim_number,
        btrim(ext_ims_copay_src.received_date) AS received_date,
        btrim(ext_ims_copay_src.pharmacy_nabp) AS pharmacy_nabp,
        btrim(ext_ims_copay_src.pharmacy_name) AS pharmacy_name,
        btrim(ext_ims_copay_src.pharamcy_address_1) AS pharamcy_address_1,
        btrim(ext_ims_copay_src.pharamcy_address_2) AS pharamcy_address_2,
        btrim(ext_ims_copay_src.pharamcy_city) AS pharamcy_city,
        btrim(ext_ims_copay_src.pharamcy_state) AS pharamcy_state,
        btrim(ext_ims_copay_src.pharamcy_zip) AS pharamcy_zip,
        btrim(ext_ims_copay_src.pharmacy_group_code) AS pharmacy_group_code,
        btrim(ext_ims_copay_src.prescriber_first_name) AS prescriber_first_name,
        btrim(ext_ims_copay_src.prescriber_middle_name) AS prescriber_middle_name,
        btrim(ext_ims_copay_src.prescriber_last_name) AS prescriber_last_name,
        btrim(ext_ims_copay_src.prescriber_address_1) AS prescriber_address_1,
        btrim(ext_ims_copay_src.prescriber_address_2) AS prescriber_address_2,
        btrim(ext_ims_copay_src.prescriber_city) AS prescriber_city,
        btrim(ext_ims_copay_src.prescriber_state) AS prescriber_state,
        btrim(ext_ims_copay_src.prescriber_zip) AS prescriber_zip,
        btrim(ext_ims_copay_src.prescriber_specialty) AS prescriber_specialty,
        btrim(ext_ims_copay_src.redemption) AS redemption,
        btrim(ext_ims_copay_src.mail_order_indicator) AS mail_order_indicator,
        btrim(ext_ims_copay_src.dea) AS dea,
        btrim(ext_ims_copay_src.npi) AS npi,
        btrim(ext_ims_copay_src.pdrp) AS pdrp,
        ext_ims_copay_src.batch_id,
        ext_ims_copay_src.row_id,
        ext_ims_copay_src.update_ts
 FROM teva_ingestion.ext_ims_copay_src;

CREATE  VIEW teva_ingestion.ext_vv_approved_document__c AS
 SELECT btrim(ext_vv_approved_document__c_src.id) AS id,
        btrim(ext_vv_approved_document__c_src.ownerid) AS ownerid,
        btrim(ext_vv_approved_document__c_src.isdeleted) AS isdeleted,
        btrim(ext_vv_approved_document__c_src.name) AS name,
        btrim(ext_vv_approved_document__c_src.recordtypeid) AS recordtypeid,
        btrim(ext_vv_approved_document__c_src.createddate) AS createddate,
        btrim(ext_vv_approved_document__c_src.createdbyid) AS createdbyid,
        btrim(ext_vv_approved_document__c_src.lastmodifieddate) AS lastmodifieddate,
        btrim(ext_vv_approved_document__c_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(ext_vv_approved_document__c_src.systemmodstamp) AS systemmodstamp,
        btrim(ext_vv_approved_document__c_src.lastactivitydate) AS lastactivitydate,
        btrim(ext_vv_approved_document__c_src.mayedit) AS mayedit,
        btrim(ext_vv_approved_document__c_src.islocked) AS islocked,
        btrim(ext_vv_approved_document__c_src.lastvieweddate) AS lastvieweddate,
        btrim(ext_vv_approved_document__c_src.lastreferenceddate) AS lastreferenceddate,
        btrim(ext_vv_approved_document__c_src.detail_group_vod__c) AS detail_group_vod__c,
        btrim(ext_vv_approved_document__c_src.document_description_vod__c) AS document_description_vod__c,
        btrim(ext_vv_approved_document__c_src.document_host_url_vod__c) AS document_host_url_vod__c,
        btrim(ext_vv_approved_document__c_src.document_id_vod__c) AS document_id_vod__c,
        btrim(ext_vv_approved_document__c_src.document_last_mod_datetime_vod__c) AS document_last_mod_datetime_vod__c,
        btrim(ext_vv_approved_document__c_src.email_allows_documents_vod__c) AS email_allows_documents_vod__c,
        btrim(ext_vv_approved_document__c_src.email_domain_vod__c) AS email_domain_vod__c,
        btrim(ext_vv_approved_document__c_src.email_from_address_vod__c) AS email_from_address_vod__c,
        btrim(ext_vv_approved_document__c_src.email_from_name_vod__c) AS email_from_name_vod__c,
        btrim(ext_vv_approved_document__c_src.email_replyto_address_vod__c) AS email_replyto_address_vod__c,
        btrim(ext_vv_approved_document__c_src.email_replyto_name_vod__c) AS email_replyto_name_vod__c,
        btrim(ext_vv_approved_document__c_src.email_subject_vod__c) AS email_subject_vod__c,
        btrim(ext_vv_approved_document__c_src.email_template_fragment_document_id_vod__c) AS email_template_fragment_document_id_vod__c,
        btrim(ext_vv_approved_document__c_src.isi_document_id_vod__c) AS isi_document_id_vod__c,
        btrim(ext_vv_approved_document__c_src.language_vod__c) AS language_vod__c,
        btrim(ext_vv_approved_document__c_src.other_document_id_list_vod__c) AS other_document_id_list_vod__c,
        btrim(ext_vv_approved_document__c_src.pi_document_id_vod__c) AS pi_document_id_vod__c,
        btrim(ext_vv_approved_document__c_src.piece_document_id_vod__c) AS piece_document_id_vod__c,
        btrim(ext_vv_approved_document__c_src.product_vod__c) AS product_vod__c,
        btrim(ext_vv_approved_document__c_src.status_vod__c) AS status_vod__c,
        btrim(ext_vv_approved_document__c_src.territory_vod__c) AS territory_vod__c,
        btrim(ext_vv_approved_document__c_src.vault_instance_id_vod__c) AS vault_instance_id_vod__c,
        btrim(ext_vv_approved_document__c_src.expiration_date_tva__c) AS expiration_date_tva__c,
        btrim(ext_vv_approved_document__c_src.group_to_share_to__c) AS group_to_share_to__c,
        btrim(ext_vv_approved_document__c_src.training_org_tva__c) AS training_org_tva__c,
        btrim(ext_vv_approved_document__c_src.unsub_svr_tva__c) AS unsub_svr_tva__c,
        ext_vv_approved_document__c_src.batch_id,
        ext_vv_approved_document__c_src.row_id,
        ext_vv_approved_document__c_src.update_ts
 FROM teva_ingestion.ext_vv_approved_document__c_src;

CREATE  VIEW teva_ingestion.EXT_WHOLESALE_867_V2 AS
 SELECT btrim(EXT_WHOLESALE_867_V2_src.ndc) AS ndc,
        btrim(EXT_WHOLESALE_867_V2_src.product_description) AS product_description,
        btrim(EXT_WHOLESALE_867_V2_src.product_name) AS product_name,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_name) AS trading_partner_name,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dea) AS trading_partner_dea,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_hin) AS trading_partner_hin,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_location_type) AS trading_partner_location_type,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_dea) AS trading_partner_dc_dea,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_hin) AS trading_partner_dc_hin,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_name) AS trading_partner_dc_name,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_address) AS trading_partner_dc_address,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_address_2) AS trading_partner_dc_address_2,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_city) AS trading_partner_dc_city,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_state) AS trading_partner_dc_state,
        btrim(EXT_WHOLESALE_867_V2_src.trading_partner_dc_zip) AS trading_partner_dc_zip,
        btrim(EXT_WHOLESALE_867_V2_src.class_of_trade) AS class_of_trade,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_location_name) AS outlet_location_name,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_dea) AS outlet_dea,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_hin) AS outlet_hin,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_340b) AS outlet_340b,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_ncpdp) AS outlet_ncpdp,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_npi) AS outlet_npi,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_location_address) AS outlet_location_address,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_location_address_2) AS outlet_location_address_2,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_location_city) AS outlet_location_city,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_location_state) AS outlet_location_state,
        btrim(EXT_WHOLESALE_867_V2_src.outlet_location_zip) AS outlet_location_zip,
        btrim(EXT_WHOLESALE_867_V2_src.reporting_date) AS reporting_date,
        btrim(EXT_WHOLESALE_867_V2_src.contract_number) AS contract_number,
        btrim(EXT_WHOLESALE_867_V2_src.contract_description) AS contract_description,
        btrim(EXT_WHOLESALE_867_V2_src.invoice_number) AS invoice_number,
        btrim(EXT_WHOLESALE_867_V2_src.invoice_date) AS invoice_date,
        btrim(EXT_WHOLESALE_867_V2_src.invoice_line_id) AS invoice_line_id,
        btrim(EXT_WHOLESALE_867_V2_src.quanitity_stock_sales_ss) AS quanitity_stock_sales_ss,
        btrim(EXT_WHOLESALE_867_V2_src.ds_sales_ds) AS ds_sales_ds,
        btrim(EXT_WHOLESALE_867_V2_src.summary_sales_su) AS summary_sales_su,
        btrim(EXT_WHOLESALE_867_V2_src.dock_to_dock_bq) AS dock_to_dock_bq,
        btrim(EXT_WHOLESALE_867_V2_src.interbranch_ib) AS interbranch_ib,
        btrim(EXT_WHOLESALE_867_V2_src.return_to_useable_ru) AS return_to_useable_ru,
        btrim(EXT_WHOLESALE_867_V2_src.return_to_vendor_rv) AS return_to_vendor_rv,
        btrim(EXT_WHOLESALE_867_V2_src.transfer_to_disposal_td) AS transfer_to_disposal_td,
        btrim(EXT_WHOLESALE_867_V2_src.adjusted_price) AS adjusted_price,
        btrim(EXT_WHOLESALE_867_V2_src.gross_amount) AS gross_amount,
        EXT_WHOLESALE_867_V2_src.batch_id,
        EXT_WHOLESALE_867_V2_src.row_id,
        EXT_WHOLESALE_867_V2_src.update_ts
 FROM teva_ingestion.EXT_WHOLESALE_867_V2_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_FACT AS
 SELECT CASE WHEN (EXT_IMS_FIA_FACT_src.claim_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_src.claim_id))::int END AS claim_id,
        CASE WHEN (EXT_IMS_FIA_FACT_src.patient_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_src.patient_id))::int END AS patient_id,
        CASE WHEN (EXT_IMS_FIA_FACT_src.sequence_number = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_src.sequence_number))::int END AS sequence_number,
        btrim(EXT_IMS_FIA_FACT_src.product_id) AS product_id,
        CASE WHEN (EXT_IMS_FIA_FACT_src.fill_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_FACT_src.fill_date))::date END AS fill_date,
        btrim(EXT_IMS_FIA_FACT_src.claim_type) AS claim_type,
        btrim(EXT_IMS_FIA_FACT_src.reject_code) AS reject_code,
        CASE WHEN (EXT_IMS_FIA_FACT_src.days_supply = ''::varchar) THEN NULL::numeric(10,6) ELSE (btrim(EXT_IMS_FIA_FACT_src.days_supply))::numeric(10,6) END AS days_supply,
        btrim(EXT_IMS_FIA_FACT_src.quantity) AS quantity,
        CASE WHEN (EXT_IMS_FIA_FACT_src.refill_code = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_src.refill_code))::int END AS refill_code,
        btrim(EXT_IMS_FIA_FACT_src.plantrak_id) AS plantrak_id,
        btrim(EXT_IMS_FIA_FACT_src.opc_ask) AS opc_ask,
        btrim(EXT_IMS_FIA_FACT_src.sec_plantrak_id) AS sec_plantrak_id,
        btrim(EXT_IMS_FIA_FACT_src.buy_down) AS buy_down,
        btrim(EXT_IMS_FIA_FACT_src.opc_paid) AS opc_paid,
        btrim(EXT_IMS_FIA_FACT_src.prescriber_id) AS prescriber_id,
        btrim(EXT_IMS_FIA_FACT_src.sob) AS sob,
        btrim(EXT_IMS_FIA_FACT_src.sub_product_id) AS sub_product_id,
        btrim(EXT_IMS_FIA_FACT_src.sub_opc) AS sub_opc,
        CASE WHEN (EXT_IMS_FIA_FACT_src.initial_claim_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_src.initial_claim_id))::int END AS initial_claim_id,
        btrim(EXT_IMS_FIA_FACT_src.prev_product_id) AS prev_product_id,
        btrim(EXT_IMS_FIA_FACT_src.daw_code) AS daw_code,
        CASE WHEN (EXT_IMS_FIA_FACT_src.wrt_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_FACT_src.wrt_date))::date END AS wrt_date,
        btrim(EXT_IMS_FIA_FACT_src.claim_status) AS claim_status,
        btrim(EXT_IMS_FIA_FACT_src.copay_card_flg) AS copay_card_flg,
        btrim(EXT_IMS_FIA_FACT_src.zip_code) AS zip_code,
        CASE WHEN (EXT_IMS_FIA_FACT_src.ecoup_flag = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_src.ecoup_flag))::int END AS ecoup_flag,
        CASE WHEN (EXT_IMS_FIA_FACT_src.ecoup_offset_amt = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_IMS_FIA_FACT_src.ecoup_offset_amt))::numeric(10,2) END AS ecoup_offset_amt,
        CASE WHEN (EXT_IMS_FIA_FACT_src.standard_copay = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_IMS_FIA_FACT_src.standard_copay))::numeric(10,2) END AS standard_copay,
        btrim(EXT_IMS_FIA_FACT_src.standard_copay_yn) AS standard_copay_yn,
        CASE WHEN (EXT_IMS_FIA_FACT_src.flexible_fld_1_nbr = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_IMS_FIA_FACT_src.flexible_fld_1_nbr))::numeric(10,2) END AS flexible_fld_1_nbr,
        CASE WHEN (EXT_IMS_FIA_FACT_src.flexible_fld_2_nbr = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_IMS_FIA_FACT_src.flexible_fld_2_nbr))::numeric(10,2) END AS flexible_fld_2_nbr,
        btrim(EXT_IMS_FIA_FACT_src.flexible_fld_3_char) AS flexible_fld_3_char,
        btrim(EXT_IMS_FIA_FACT_src.flexible_fld_4_char) AS flexible_fld_4_char,
        btrim(EXT_IMS_FIA_FACT_src.fia_market_id) AS fia_market_id,
        btrim(EXT_IMS_FIA_FACT_src.fia_market_desc) AS fia_market_desc,
        EXT_IMS_FIA_FACT_src.batch_id,
        EXT_IMS_FIA_FACT_src.row_id,
        EXT_IMS_FIA_FACT_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_FACT_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_GEOGRAPHY AS
 SELECT btrim(EXT_IMS_FIA_GEOGRAPHY_src.zip_code) AS zip_code,
        btrim(EXT_IMS_FIA_GEOGRAPHY_src.msa_code) AS msa_code,
        btrim(EXT_IMS_FIA_GEOGRAPHY_src.msa_description) AS msa_description,
        btrim(EXT_IMS_FIA_GEOGRAPHY_src.cbsa_code) AS cbsa_code,
        btrim(EXT_IMS_FIA_GEOGRAPHY_src.cbsa_description) AS cbsa_description,
        btrim(EXT_IMS_FIA_GEOGRAPHY_src.state_code) AS state_code,
        EXT_IMS_FIA_GEOGRAPHY_src.batch_id,
        EXT_IMS_FIA_GEOGRAPHY_src.row_id,
        EXT_IMS_FIA_GEOGRAPHY_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_PLAN AS
 SELECT btrim(EXT_IMS_FIA_PLAN_src.plantrak_id) AS plantrak_id,
        btrim(EXT_IMS_FIA_PLAN_src.payer_name) AS payer_name,
        btrim(EXT_IMS_FIA_PLAN_src.plan_name) AS plan_name,
        btrim(EXT_IMS_FIA_PLAN_src.pbm_name) AS pbm_name,
        btrim(EXT_IMS_FIA_PLAN_src.payment_type) AS payment_type,
        btrim(EXT_IMS_FIA_PLAN_src.model_type) AS model_type,
        EXT_IMS_FIA_PLAN_src.batch_id,
        EXT_IMS_FIA_PLAN_src.row_id,
        EXT_IMS_FIA_PLAN_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PLAN_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_PRODUCT AS
 SELECT btrim(EXT_IMS_FIA_PRODUCT_src.product_id) AS product_id,
        btrim(EXT_IMS_FIA_PRODUCT_src.product_group) AS product_group,
        btrim(EXT_IMS_FIA_PRODUCT_src.product_name) AS product_name,
        CASE WHEN (EXT_IMS_FIA_PRODUCT_src.product_group_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_PRODUCT_src.product_group_id))::int END AS product_group_id,
        btrim(EXT_IMS_FIA_PRODUCT_src.cmf10) AS cmf10,
        btrim(EXT_IMS_FIA_PRODUCT_src.fia_market_id) AS fia_market_id,
        btrim(EXT_IMS_FIA_PRODUCT_src.fia_market_desc) AS fia_market_desc,
        EXT_IMS_FIA_PRODUCT_src.batch_id,
        EXT_IMS_FIA_PRODUCT_src.row_id,
        EXT_IMS_FIA_PRODUCT_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PRODUCT_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_REJECT AS
 SELECT btrim(EXT_IMS_FIA_REJECT_src.reject_code) AS reject_code,
        btrim(EXT_IMS_FIA_REJECT_src.reject_reason) AS reject_reason,
        btrim(EXT_IMS_FIA_REJECT_src.reject_group) AS reject_group,
        EXT_IMS_FIA_REJECT_src.batch_id,
        EXT_IMS_FIA_REJECT_src.row_id,
        EXT_IMS_FIA_REJECT_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_REJECT_src;

CREATE  VIEW teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS AS
 SELECT btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.client_num) AS client_num,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.report_num) AS report_num,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.outlet_code) AS outlet_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.zip) AS zip,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.subcategory_code) AS subcategory_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.sra_4) AS sra_4,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.category_code) AS category_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.ims_product_code) AS ims_product_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.data_date) AS data_date,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth01) AS dol_mth01,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth02) AS dol_mth02,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth03) AS dol_mth03,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth04) AS dol_mth04,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth05) AS dol_mth05,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth06) AS dol_mth06,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth07) AS dol_mth07,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth08) AS dol_mth08,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth09) AS dol_mth09,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth10) AS dol_mth10,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth11) AS dol_mth11,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth12) AS dol_mth12,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth13) AS dol_mth13,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth14) AS dol_mth14,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth15) AS dol_mth15,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth16) AS dol_mth16,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth17) AS dol_mth17,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth18) AS dol_mth18,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth19) AS dol_mth19,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth20) AS dol_mth20,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth21) AS dol_mth21,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth22) AS dol_mth22,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth23) AS dol_mth23,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.dol_mth24) AS dol_mth24,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.city) AS city,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_src.state) AS state,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.row_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_src;

CREATE  VIEW teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY AS
 SELECT btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.client_num) AS client_num,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.report_num) AS report_num,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.outlet_code) AS outlet_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.zip) AS zip,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.subcategory_code) AS subcategory_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.sra_4) AS sra_4,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.category_code) AS category_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.ims_product_code) AS ims_product_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.data_date) AS data_date,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth01) AS qty_mth01,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth02) AS qty_mth02,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth03) AS qty_mth03,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth04) AS qty_mth04,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth05) AS qty_mth05,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth06) AS qty_mth06,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth07) AS qty_mth07,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth08) AS qty_mth08,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth09) AS qty_mth09,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth10) AS qty_mth10,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth11) AS qty_mth11,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth12) AS qty_mth12,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth13) AS qty_mth13,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth14) AS qty_mth14,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth15) AS qty_mth15,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth16) AS qty_mth16,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth17) AS qty_mth17,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth18) AS qty_mth18,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth19) AS qty_mth19,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth20) AS qty_mth20,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth21) AS qty_mth21,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth22) AS qty_mth22,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth23) AS qty_mth23,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.qty_mth24) AS qty_mth24,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.city) AS city,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_src.state) AS state,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.row_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_src;

CREATE  VIEW teva_ingestion.XPD_CORE_METRICS AS
 SELECT btrim(XPD_CORE_METRICS_src.ims_client_number) AS ims_client_number,
        btrim(XPD_CORE_METRICS_src.ims_report_number) AS ims_report_number,
        btrim(XPD_CORE_METRICS_src.channel_indicator) AS channel_indicator,
        btrim(XPD_CORE_METRICS_src.ims_id) AS ims_id,
        btrim(XPD_CORE_METRICS_src.filler_01) AS filler_01,
        btrim(XPD_CORE_METRICS_src.specialty) AS specialty,
        btrim(XPD_CORE_METRICS_src.flexible_field_2) AS flexible_field_2,
        btrim(XPD_CORE_METRICS_src.flexible_field_3) AS flexible_field_3,
        btrim(XPD_CORE_METRICS_src.flexible_field_4) AS flexible_field_4,
        btrim(XPD_CORE_METRICS_src.flexible_field_5) AS flexible_field_5,
        btrim(XPD_CORE_METRICS_src.flexible_field_6) AS flexible_field_6,
        btrim(XPD_CORE_METRICS_src.flexible_field_7) AS flexible_field_7,
        btrim(XPD_CORE_METRICS_src.flexible_field_8) AS flexible_field_8,
        btrim(XPD_CORE_METRICS_src.ims_product_group) AS ims_product_group,
        btrim(XPD_CORE_METRICS_src.month_ending) AS month_ending,
        btrim(XPD_CORE_METRICS_src.xpo_nrx) AS xpo_nrx,
        btrim(XPD_CORE_METRICS_src.xpo_trx) AS xpo_trx,
        btrim(XPD_CORE_METRICS_src.unknown_nrx) AS unknown_nrx,
        btrim(XPD_CORE_METRICS_src.unknown_trx) AS unknown_trx,
        btrim(XPD_CORE_METRICS_src.new_therapy_starts) AS new_therapy_starts,
        btrim(XPD_CORE_METRICS_src.continued_new) AS continued_new,
        btrim(XPD_CORE_METRICS_src.switch_to) AS switch_to,
        btrim(XPD_CORE_METRICS_src.add_on) AS add_on,
        btrim(XPD_CORE_METRICS_src.restart_same_new) AS restart_same_new,
        btrim(XPD_CORE_METRICS_src.restart_different) AS restart_different,
        btrim(XPD_CORE_METRICS_src.continued_refill) AS continued_refill,
        btrim(XPD_CORE_METRICS_src.restart_same_refill) AS restart_same_refill,
        btrim(XPD_CORE_METRICS_src.switch_from) AS switch_from,
        btrim(XPD_CORE_METRICS_src.restart_different_from) AS restart_different_from,
        btrim(XPD_CORE_METRICS_src.add_to) AS add_to,
        btrim(XPD_CORE_METRICS_src.market_new_to_brand_rx) AS market_new_to_brand_rx,
        btrim(XPD_CORE_METRICS_src.dynamic_capture_rx) AS dynamic_capture_rx,
        btrim(XPD_CORE_METRICS_src.filler_02) AS filler_02,
        XPD_CORE_METRICS_src.batch_id,
        XPD_CORE_METRICS_src.row_id,
        XPD_CORE_METRICS_src.update_ts
 FROM teva_ingestion.XPD_CORE_METRICS_src;

CREATE  VIEW teva_ingestion.XPD_DEMOGRAPHICS AS
 SELECT btrim(XPD_DEMOGRAPHICS_src.ims_client_number) AS ims_client_number,
        btrim(XPD_DEMOGRAPHICS_src.ims_report_number) AS ims_report_number,
        btrim(XPD_DEMOGRAPHICS_src.ims_id) AS ims_id,
        btrim(XPD_DEMOGRAPHICS_src.filler_01) AS filler_01,
        btrim(XPD_DEMOGRAPHICS_src.last_name) AS last_name,
        btrim(XPD_DEMOGRAPHICS_src.first_name) AS first_name,
        btrim(XPD_DEMOGRAPHICS_src.middle_name) AS middle_name,
        btrim(XPD_DEMOGRAPHICS_src.address_1) AS address_1,
        btrim(XPD_DEMOGRAPHICS_src.address_2) AS address_2,
        btrim(XPD_DEMOGRAPHICS_src.city) AS city,
        btrim(XPD_DEMOGRAPHICS_src.state) AS state,
        btrim(XPD_DEMOGRAPHICS_src.zip) AS zip,
        btrim(XPD_DEMOGRAPHICS_src.specialty) AS specialty,
        btrim(XPD_DEMOGRAPHICS_src.specialty_description) AS specialty_description,
        btrim(XPD_DEMOGRAPHICS_src.trx_decile_retail) AS trx_decile_retail,
        btrim(XPD_DEMOGRAPHICS_src.nrx_decile_retail) AS nrx_decile_retail,
        btrim(XPD_DEMOGRAPHICS_src.nbrx_decile_retail) AS nbrx_decile_retail,
        btrim(XPD_DEMOGRAPHICS_src.trx_decile_mail) AS trx_decile_mail,
        btrim(XPD_DEMOGRAPHICS_src.nrx_decile_mail) AS nrx_decile_mail,
        btrim(XPD_DEMOGRAPHICS_src.nbrx_decile_mail) AS nbrx_decile_mail,
        btrim(XPD_DEMOGRAPHICS_src.market_prescriber_reliability_retail) AS market_prescriber_reliability_retail,
        btrim(XPD_DEMOGRAPHICS_src.market_prescriber_reliability_mail) AS market_prescriber_reliability_mail,
        XPD_DEMOGRAPHICS_src.batch_id,
        XPD_DEMOGRAPHICS_src.row_id,
        XPD_DEMOGRAPHICS_src.update_ts
 FROM teva_ingestion.XPD_DEMOGRAPHICS_src;

CREATE  VIEW teva_ingestion.XPD_SWITCH_DETAILS AS
 SELECT btrim(XPD_SWITCH_DETAILS_src.ims_client_number) AS ims_client_number,
        btrim(XPD_SWITCH_DETAILS_src.ims_report_number) AS ims_report_number,
        btrim(XPD_SWITCH_DETAILS_src.channel_indicator) AS channel_indicator,
        btrim(XPD_SWITCH_DETAILS_src.ims_id) AS ims_id,
        btrim(XPD_SWITCH_DETAILS_src.filler_01) AS filler_01,
        btrim(XPD_SWITCH_DETAILS_src.specialty) AS specialty,
        btrim(XPD_SWITCH_DETAILS_src.flexible_field_2) AS flexible_field_2,
        btrim(XPD_SWITCH_DETAILS_src.flexible_field_3) AS flexible_field_3,
        btrim(XPD_SWITCH_DETAILS_src.flexible_field_4) AS flexible_field_4,
        btrim(XPD_SWITCH_DETAILS_src.flexible_field_5) AS flexible_field_5,
        btrim(XPD_SWITCH_DETAILS_src.flexible_field_6) AS flexible_field_6,
        btrim(XPD_SWITCH_DETAILS_src.flexible_field_7) AS flexible_field_7,
        btrim(XPD_SWITCH_DETAILS_src.flexible_field_8) AS flexible_field_8,
        btrim(XPD_SWITCH_DETAILS_src.switch_from_product_group_num) AS switch_from_product_group_num,
        btrim(XPD_SWITCH_DETAILS_src.switch_to_product_group_num) AS switch_to_product_group_num,
        btrim(XPD_SWITCH_DETAILS_src.month_ending) AS month_ending,
        btrim(XPD_SWITCH_DETAILS_src.rx) AS rx,
        XPD_SWITCH_DETAILS_src.batch_id,
        XPD_SWITCH_DETAILS_src.row_id,
        XPD_SWITCH_DETAILS_src.update_ts
 FROM teva_ingestion.XPD_SWITCH_DETAILS_src;

CREATE  VIEW teva_ingestion.EXT_AXTRIA_TERRITORY_HIERARCHY AS
 SELECT btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.id) AS id,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.ownerid) AS ownerid,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.isdeleted) AS isdeleted,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.name) AS name,
        CASE WHEN (EXT_AXTRIA_TERRITORY_HIERARCHY_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.createddate))::timestamp END AS createddate,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastmodifiedbyid) AS lastmodifiedbyid,
        CASE WHEN (EXT_AXTRIA_TERRITORY_HIERARCHY_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.systemmodstamp))::timestamp END AS systemmodstamp,
        CASE WHEN (EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastactivitydate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastactivitydate))::timestamp END AS lastactivitydate,
        CASE WHEN (EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastvieweddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastvieweddate))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastreferenceddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.lastreferenceddate))::timestamp END AS lastreferenceddate,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.business_unit_code__c) AS business_unit_code__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.business_unit_name__c) AS business_unit_name__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.credentialing_eligible__c) AS credentialing_eligible__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.fleet_eligibile__c) AS fleet_eligibile__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.parent_territory_number__c) AS parent_territory_number__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.sales_team_code__c) AS sales_team_code__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.sales_team_name__c) AS sales_team_name__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_end_date__c) AS territory_end_date__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_level__c) AS territory_level__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_name__c) AS territory_name__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_number__c) AS territory_number__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_sampling__c) AS territory_sampling__c,
        btrim(EXT_AXTRIA_TERRITORY_HIERARCHY_src.territory_start_date__c) AS territory_start_date__c,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.batch_id,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.row_id,
        EXT_AXTRIA_TERRITORY_HIERARCHY_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_TERRITORY_HIERARCHY_src;

CREATE  VIEW teva_ingestion.EXT_PROGNOS_CINQAIR_V2 AS
 SELECT btrim(EXT_PROGNOS_CINQAIR_V2_src.week_end_date) AS week_end_date,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.practice_name) AS practice_name,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.practice_address_line_1) AS practice_address_line_1,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.pracitce_address_line_2) AS pracitce_address_line_2,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.city) AS city,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.state) AS state,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.zip_code) AS zip_code,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.provider_first_name) AS provider_first_name,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.provider_last_name) AS provider_last_name,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.npi) AS npi,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.specialty_1) AS specialty_1,
        btrim(EXT_PROGNOS_CINQAIR_V2_src.specialty_2) AS specialty_2,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_0_149 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_0_149))::int END AS pts_with_moderate_severe_asthma_and_eosinophils_0_149,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_150_399 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_150_399))::int END AS pts_with_moderate_severe_asthma_and_eosinophils_150_399,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater))::int END AS pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_0_149 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_0_149))::int END AS pts_with_ao_asthma_and_eosinophils_0_149,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_150_399 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_150_399))::int END AS pts_with_ao_asthma_and_eosinophils_150_399,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_400_or_greater = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_ao_asthma_and_eosinophils_400_or_greater))::int END AS pts_with_ao_asthma_and_eosinophils_400_or_greater,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_has_eosinophils_300_499 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_has_eosinophils_300_499))::int END AS pts_with_moderate_severe_asthma_and_has_eosinophils_300_499,
        CASE WHEN (EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_CINQAIR_V2_src.pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater))::int END AS pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater,
        EXT_PROGNOS_CINQAIR_V2_src.batch_id,
        EXT_PROGNOS_CINQAIR_V2_src.row_id,
        EXT_PROGNOS_CINQAIR_V2_src.update_ts
 FROM teva_ingestion.EXT_PROGNOS_CINQAIR_V2_src;

CREATE  VIEW teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_V2 AS
 SELECT btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.client_num) AS client_num,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.report_num) AS report_num,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_code) AS outlet_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.zip) AS zip,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.subcategory_code) AS subcategory_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.sra_4) AS sra_4,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.category_code) AS category_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.ims_product_code) AS ims_product_code,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.data_date) AS data_date,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth01) AS dol_mth01,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth02) AS dol_mth02,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth03) AS dol_mth03,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth04) AS dol_mth04,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth05) AS dol_mth05,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth06) AS dol_mth06,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth07) AS dol_mth07,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth08) AS dol_mth08,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth09) AS dol_mth09,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth10) AS dol_mth10,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth11) AS dol_mth11,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth12) AS dol_mth12,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth13) AS dol_mth13,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth14) AS dol_mth14,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth15) AS dol_mth15,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth16) AS dol_mth16,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth17) AS dol_mth17,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth18) AS dol_mth18,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth19) AS dol_mth19,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth20) AS dol_mth20,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth21) AS dol_mth21,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth22) AS dol_mth22,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth23) AS dol_mth23,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.dol_mth24) AS dol_mth24,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_name) AS outlet_name,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_address) AS outlet_address,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_city) AS outlet_city,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_state) AS outlet_state,
        btrim(EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.outlet_zip) AS outlet_zip,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.row_id,
        EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_DOLLARS_V2_src;

CREATE  VIEW teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_V2 AS
 SELECT btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.client_num) AS client_num,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.report_num) AS report_num,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_code) AS outlet_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.zip) AS zip,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.subcategory_code) AS subcategory_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.sra_4) AS sra_4,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.category_code) AS category_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.ims_product_code) AS ims_product_code,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.data_date) AS data_date,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth01) AS qty_mth01,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth02) AS qty_mth02,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth03) AS qty_mth03,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth04) AS qty_mth04,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth05) AS qty_mth05,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth06) AS qty_mth06,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth07) AS qty_mth07,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth08) AS qty_mth08,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth09) AS qty_mth09,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth10) AS qty_mth10,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth11) AS qty_mth11,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth12) AS qty_mth12,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth13) AS qty_mth13,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth14) AS qty_mth14,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth15) AS qty_mth15,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth16) AS qty_mth16,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth17) AS qty_mth17,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth18) AS qty_mth18,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth19) AS qty_mth19,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth20) AS qty_mth20,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth21) AS qty_mth21,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth22) AS qty_mth22,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth23) AS qty_mth23,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.qty_mth24) AS qty_mth24,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_name) AS outlet_name,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_address) AS outlet_address,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_city) AS outlet_city,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_state) AS outlet_state,
        btrim(EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.outlet_zip) AS outlet_zip,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.batch_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.row_id,
        EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src.update_ts
 FROM teva_ingestion.EXT_ANTIMIGRAINE_DDD_QUANTITY_V2_src;

CREATE  VIEW teva_ingestion.ONC_SALES_ADJUSTMENT_LOAD AS
 SELECT btrim(ONC_SALES_ADJUSTMENT_LOAD_src.adj_code) AS adj_code,
        btrim(ONC_SALES_ADJUSTMENT_LOAD_src.adj_time_period) AS adj_time_period,
        CASE WHEN (ONC_SALES_ADJUSTMENT_LOAD_src.tvcmid = ''::varchar) THEN NULL::int ELSE (btrim(ONC_SALES_ADJUSTMENT_LOAD_src.tvcmid))::int END AS tvcmid,
        CASE WHEN (ONC_SALES_ADJUSTMENT_LOAD_src.basket_id = ''::varchar) THEN NULL::int ELSE (btrim(ONC_SALES_ADJUSTMENT_LOAD_src.basket_id))::int END AS basket_id,
        CASE WHEN (ONC_SALES_ADJUSTMENT_LOAD_src.adj_factor = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(ONC_SALES_ADJUSTMENT_LOAD_src.adj_factor))::numeric(10,2) END AS adj_factor,
        ONC_SALES_ADJUSTMENT_LOAD_src.batch_id,
        ONC_SALES_ADJUSTMENT_LOAD_src.row_id,
        ONC_SALES_ADJUSTMENT_LOAD_src.update_ts
 FROM teva_ingestion.ONC_SALES_ADJUSTMENT_LOAD_src;

CREATE  VIEW teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2 AS
 SELECT btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.id) AS id,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.ownerid) AS ownerid,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.isdeleted) AS isdeleted,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.name) AS name,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.createddate) AS createddate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.createdbyid) AS createdbyid,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastactivitydate) AS lastactivitydate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastvieweddate) AS lastvieweddate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.lastreferenceddate) AS lastreferenceddate,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_end_date__c) AS assignment_end_date__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_start_date__c) AS assignment_start_date__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_status__c) AS assignment_status__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.assignment_type__c) AS assignment_type__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.global_employee_id__c) AS global_employee_id__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.rms_territory_name__c) AS rms_territory_name__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.rms_territory_number__c) AS rms_territory_number__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.employee__c) AS employee__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.first_name__c) AS first_name__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.hire_date__c) AS hire_date__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.last_name__c) AS last_name__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.local_employee_id__c) AS local_employee_id__c,
        btrim(EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.middle_name__c) AS middle_name__c,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.batch_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.row_id,
        EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_EMPLOYEE_ASSIGNMENT_STATUS_V2_src;

CREATE  VIEW teva_ingestion.EXT_VV_USER AS
 SELECT btrim(EXT_VV_USER_src.id) AS id,
        btrim(EXT_VV_USER_src.username) AS username,
        btrim(EXT_VV_USER_src.lastname) AS lastname,
        btrim(EXT_VV_USER_src.firstname) AS firstname,
        btrim(EXT_VV_USER_src.name) AS name,
        btrim(EXT_VV_USER_src.companyname) AS companyname,
        btrim(EXT_VV_USER_src.division) AS division,
        btrim(EXT_VV_USER_src.department) AS department,
        btrim(EXT_VV_USER_src.title) AS title,
        btrim(EXT_VV_USER_src.street) AS street,
        btrim(EXT_VV_USER_src.city) AS city,
        btrim(EXT_VV_USER_src.state) AS state,
        btrim(EXT_VV_USER_src.postalcode) AS postalcode,
        btrim(EXT_VV_USER_src.country) AS country,
        btrim(EXT_VV_USER_src.latitude) AS latitude,
        btrim(EXT_VV_USER_src.longitude) AS longitude,
        btrim(EXT_VV_USER_src.email) AS email,
        btrim(EXT_VV_USER_src.emailpreferencesautobcc) AS emailpreferencesautobcc,
        btrim(EXT_VV_USER_src.emailpreferencesautobccstayint) AS emailpreferencesautobccstayint,
        btrim(EXT_VV_USER_src.emailpreferencesstayintouchrem) AS emailpreferencesstayintouchrem,
        btrim(EXT_VV_USER_src.senderemail) AS senderemail,
        btrim(EXT_VV_USER_src.sendername) AS sendername,
        btrim(EXT_VV_USER_src.signature) AS signature,
        btrim(EXT_VV_USER_src.stayintouchsubject) AS stayintouchsubject,
        btrim(EXT_VV_USER_src.stayintouchsignature) AS stayintouchsignature,
        btrim(EXT_VV_USER_src.stayintouchnote) AS stayintouchnote,
        btrim(EXT_VV_USER_src.phone) AS phone,
        btrim(EXT_VV_USER_src.fax) AS fax,
        btrim(EXT_VV_USER_src.mobilephone) AS mobilephone,
        btrim(EXT_VV_USER_src.alias) AS alias,
        btrim(EXT_VV_USER_src.communitynickname) AS communitynickname,
        btrim(EXT_VV_USER_src.isactive) AS isactive,
        btrim(EXT_VV_USER_src.timezonesidkey) AS timezonesidkey,
        btrim(EXT_VV_USER_src.userroleid) AS userroleid,
        btrim(EXT_VV_USER_src.localesidkey) AS localesidkey,
        btrim(EXT_VV_USER_src.receivesinfoemails) AS receivesinfoemails,
        btrim(EXT_VV_USER_src.receivesadmininfoemails) AS receivesadmininfoemails,
        btrim(EXT_VV_USER_src.emailencodingkey) AS emailencodingkey,
        btrim(EXT_VV_USER_src.usertype) AS usertype,
        btrim(EXT_VV_USER_src.languagelocalekey) AS languagelocalekey,
        btrim(EXT_VV_USER_src.employeenumber) AS employeenumber,
        btrim(EXT_VV_USER_src.delegatedapproverid) AS delegatedapproverid,
        btrim(EXT_VV_USER_src.managerid) AS managerid,
        btrim(EXT_VV_USER_src.lastlogindate) AS lastlogindate,
        btrim(EXT_VV_USER_src.createddate) AS createddate,
        btrim(EXT_VV_USER_src.createdbyid) AS createdbyid,
        btrim(EXT_VV_USER_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_VV_USER_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_USER_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_USER_src.offlinetrialexpirationdate) AS offlinetrialexpirationdate,
        btrim(EXT_VV_USER_src.offlinepdatrialexpirationdate) AS offlinepdatrialexpirationdate,
        btrim(EXT_VV_USER_src.userpermissionsmarketinguser) AS userpermissionsmarketinguser,
        btrim(EXT_VV_USER_src.userpermissionsofflineuser) AS userpermissionsofflineuser,
        btrim(EXT_VV_USER_src.userpermissionswirelessuser) AS userpermissionswirelessuser,
        btrim(EXT_VV_USER_src.userpermissionsavantgouser) AS userpermissionsavantgouser,
        btrim(EXT_VV_USER_src.userpermscallcenterautologin) AS userpermscallcenterautologin,
        btrim(EXT_VV_USER_src.userpermissionsmobileuser) AS userpermissionsmobileuser,
        btrim(EXT_VV_USER_src.userpermissionssfcontentuser) AS userpermissionssfcontentuser,
        btrim(EXT_VV_USER_src.userpermissionsinteractionuser) AS userpermissionsinteractionuser,
        btrim(EXT_VV_USER_src.userpermschatteranswersuser) AS userpermschatteranswersuser,
        btrim(EXT_VV_USER_src.forecastenabled) AS forecastenabled,
        btrim(EXT_VV_USER_src.userprefsactivityreminderspopu) AS userprefsactivityreminderspopu,
        btrim(EXT_VV_USER_src.userprefseventreminderscheckbo) AS userprefseventreminderscheckbo,
        btrim(EXT_VV_USER_src.userprefstaskreminderscheckbox) AS userprefstaskreminderscheckbox,
        btrim(EXT_VV_USER_src.userprefsremindersoundoff) AS userprefsremindersoundoff,
        btrim(EXT_VV_USER_src.userprefshidecsngetchattermobi) AS userprefshidecsngetchattermobi,
        btrim(EXT_VV_USER_src.userprefshidecsndesktoptask) AS userprefshidecsndesktoptask,
        btrim(EXT_VV_USER_src.userpreferencesoptoutoftouch) AS userpreferencesoptoutoftouch,
        btrim(EXT_VV_USER_src.userprefsshowtitletoexternalus) AS userprefsshowtitletoexternalus,
        btrim(EXT_VV_USER_src.userprefsshowmanagertoexternal) AS userprefsshowmanagertoexternal,
        btrim(EXT_VV_USER_src.userprefsshowemailtoexternalus) AS userprefsshowemailtoexternalus,
        btrim(EXT_VV_USER_src.userprefsshowworkphonetoextern) AS userprefsshowworkphonetoextern,
        btrim(EXT_VV_USER_src.userprefsshowmobilephonetoexte) AS userprefsshowmobilephonetoexte,
        btrim(EXT_VV_USER_src.userprefsshowfaxtoexternaluser) AS userprefsshowfaxtoexternaluser,
        btrim(EXT_VV_USER_src.userprefsshowstreetaddresstoex) AS userprefsshowstreetaddresstoex,
        btrim(EXT_VV_USER_src.userprefsshowcitytoexternaluse) AS userprefsshowcitytoexternaluse,
        btrim(EXT_VV_USER_src.userprefsshowstatetoexternalus) AS userprefsshowstatetoexternalus,
        btrim(EXT_VV_USER_src.userprefsshowpostalcodetoexter) AS userprefsshowpostalcodetoexter,
        btrim(EXT_VV_USER_src.userprefsshowcountrytoexternal) AS userprefsshowcountrytoexternal,
        btrim(EXT_VV_USER_src.userprefsshowprofilepictoguest) AS userprefsshowprofilepictoguest,
        btrim(EXT_VV_USER_src.userprefsshowtitletoguestusers) AS userprefsshowtitletoguestusers,
        btrim(EXT_VV_USER_src.userprefsshowcitytoguestusers) AS userprefsshowcitytoguestusers,
        btrim(EXT_VV_USER_src.userprefsshowstatetoguestusers) AS userprefsshowstatetoguestusers,
        btrim(EXT_VV_USER_src.userprefsshowpostalcodetoguest) AS userprefsshowpostalcodetoguest,
        btrim(EXT_VV_USER_src.userprefsshowcountrytoguestuse) AS userprefsshowcountrytoguestuse,
        btrim(EXT_VV_USER_src.contactid) AS contactid,
        btrim(EXT_VV_USER_src.accountid) AS accountid,
        btrim(EXT_VV_USER_src.callcenterid) AS callcenterid,
        btrim(EXT_VV_USER_src.extension) AS extension,
        btrim(EXT_VV_USER_src.federationidentifier) AS federationidentifier,
        btrim(EXT_VV_USER_src.lastvieweddate) AS lastvieweddate,
        btrim(EXT_VV_USER_src.lastreferenceddate) AS lastreferenceddate,
        btrim(EXT_VV_USER_src.last_mobile_connect_vod__c) AS last_mobile_connect_vod__c,
        btrim(EXT_VV_USER_src.last_tablet_connect_vod__c) AS last_tablet_connect_vod__c,
        btrim(EXT_VV_USER_src.last_mobile_connect_version) AS last_mobile_connect_version,
        btrim(EXT_VV_USER_src.last_tablet_connect_version) AS last_tablet_connect_version,
        btrim(EXT_VV_USER_src.last_mobile_sync_vod__c) AS last_mobile_sync_vod__c,
        btrim(EXT_VV_USER_src.last_tablet_sync_vod__c) AS last_tablet_sync_vod__c,
        btrim(EXT_VV_USER_src.raiselogginglevel_vod__c) AS raiselogginglevel_vod__c,
        btrim(EXT_VV_USER_src.senddetailedlog_vod__c) AS senddetailedlog_vod__c,
        btrim(EXT_VV_USER_src.last_blackberry_connect_vod__c) AS last_blackberry_connect_vod__c,
        btrim(EXT_VV_USER_src.last_blackberry_connect_versio) AS last_blackberry_connect_versio,
        btrim(EXT_VV_USER_src.last_blackberry_sync_vod__c) AS last_blackberry_sync_vod__c,
        btrim(EXT_VV_USER_src.force_full_refresh_vod__c) AS force_full_refresh_vod__c,
        btrim(EXT_VV_USER_src.override_systemmodstamp_timest) AS override_systemmodstamp_timest,
        btrim(EXT_VV_USER_src.facetime_email_vod__c) AS facetime_email_vod__c,
        btrim(EXT_VV_USER_src.facetime_phone_vod__c) AS facetime_phone_vod__c,
        btrim(EXT_VV_USER_src.product_expertise_vod__c) AS product_expertise_vod__c,
        btrim(EXT_VV_USER_src.available_vod__c) AS available_vod__c,
        btrim(EXT_VV_USER_src.available_last_update_vod__c) AS available_last_update_vod__c,
        btrim(EXT_VV_USER_src.last_ipad_connect_version) AS last_ipad_connect_version,
        btrim(EXT_VV_USER_src.last_ipad_connect_vod__c) AS last_ipad_connect_vod__c,
        btrim(EXT_VV_USER_src.last_ipad_sync_vod__c) AS last_ipad_sync_vod__c,
        btrim(EXT_VV_USER_src.inventory_order_allocation_gro) AS inventory_order_allocation_gro,
        btrim(EXT_VV_USER_src.concur_user_id_vod__c) AS concur_user_id_vod__c,
        btrim(EXT_VV_USER_src.external_id_tva__c) AS external_id_tva__c,
        btrim(EXT_VV_USER_src.last_ipad_ios_version_vod__c) AS last_ipad_ios_version_vod__c,
        btrim(EXT_VV_USER_src.veeva_id__c) AS veeva_id__c,
        btrim(EXT_VV_USER_src.login_id_tva__c) AS login_id_tva__c,
        btrim(EXT_VV_USER_src.primary_territory_vod__c) AS primary_territory_vod__c,
        btrim(EXT_VV_USER_src.analytics_admin_vod__c) AS analytics_admin_vod__c,
        btrim(EXT_VV_USER_src.content_admin_vod__c) AS content_admin_vod__c,
        btrim(EXT_VV_USER_src.upload_vtrans_vod__c) AS upload_vtrans_vod__c,
        btrim(EXT_VV_USER_src.can_sample_tva__c) AS can_sample_tva__c,
        btrim(EXT_VV_USER_src.do_not_modify_tva__c) AS do_not_modify_tva__c,
        btrim(EXT_VV_USER_src.profile_name_vod__c) AS profile_name_vod__c,
        btrim(EXT_VV_USER_src.Remote_Meeting_Host_Id_vod__c) AS Remote_Meeting_Host_Id_vod__c,
        btrim(EXT_VV_USER_src.Remote_Meeting_Host_Token_vod__c) AS Remote_Meeting_Host_Token_vod__c,
        btrim(EXT_VV_USER_src.Remote_Meeting_Start_From_CRM_Online_vod__c) AS Remote_Meeting_Start_From_CRM_Online_vod__c,
        EXT_VV_USER_src.batch_id,
        EXT_VV_USER_src.row_id,
        EXT_VV_USER_src.update_ts
 FROM teva_ingestion.EXT_VV_USER_src;

CREATE  VIEW teva_ingestion.EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C AS
 SELECT btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Id) AS ID,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Name) AS Name,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.RecordTypeId) AS RecordTypeId,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.CreatedDate) AS CreatedDate,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.CreatedById) AS CreatedById,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.LastModifiedDate) AS LastModifiedDate,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.LastModifiedById) AS LastModifiedById,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.SystemModstamp) AS SystemModstamp,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.MayEdit) AS MayEdit,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.IsLocked) AS IsLocked,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Remote_Meeting_vod__c) AS Remote_Meeting_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Call_vod__c) AS Call_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Join_Time_vod__c) AS Join_Time_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Leave_Time_vod__c) AS Leave_Time_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Meeting_End_Time_vod__c) AS Meeting_End_Time_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Meeting_Start_Time_vod__c) AS Meeting_Start_Time_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Name_vod__c) AS Name_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Participant_Id_vod__c) AS Participant_Id_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.VExternal_Id_vod__c) AS VExternal_Id_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Veeva_Remote_Meeting_Id_vod__c) AS Veeva_Remote_Meeting_Id_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Device_vod__c) AS Device_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.EM_Attendee_vod__c) AS EM_Attendee_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.EM_Event_Speaker_vod__c) AS EM_Event_Speaker_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Event_vod__c) AS Event_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Network_Type_vod__c) AS Network_Type_vod__c,
        CASE WHEN (EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Meeting_Duration_vod__c = ''::varchar) THEN NULL::float ELSE (btrim(EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.Meeting_Duration_vod__c))::float END AS Meeting_Duration_vod__c,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.batch_id,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.row_id,
        EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_REMOTE_MEETING_ATTENDEE_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_IMS_OCHL_W AS
 SELECT btrim(EXT_IMS_OCHL_W_src.Constant_CL) AS Constant_CL,
        btrim(EXT_IMS_OCHL_W_src.ddd_client_number) AS ddd_client_number,
        btrim(EXT_IMS_OCHL_W_src.blank1) AS blank1,
        btrim(EXT_IMS_OCHL_W_src.client_territory_number) AS client_territory_number,
        btrim(EXT_IMS_OCHL_W_src.ddd_outlet_number) AS ddd_outlet_number,
        btrim(EXT_IMS_OCHL_W_src.ddd_outlet_name) AS ddd_outlet_name,
        btrim(EXT_IMS_OCHL_W_src.ddd_outlet_address) AS ddd_outlet_address,
        btrim(EXT_IMS_OCHL_W_src.city) AS city,
        btrim(EXT_IMS_OCHL_W_src.state) AS state,
        btrim(EXT_IMS_OCHL_W_src.subcategory_code) AS subcategory_code,
        btrim(EXT_IMS_OCHL_W_src.action_code) AS action_code,
        EXT_IMS_OCHL_W_src.batch_id,
        EXT_IMS_OCHL_W_src.row_id,
        EXT_IMS_OCHL_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_OCHL_W_src;

CREATE  VIEW teva_ingestion.EXT_IMS_OCHL_M AS
 SELECT btrim(EXT_IMS_OCHL_M_src.Constant_CL) AS Constant_CL,
        btrim(EXT_IMS_OCHL_M_src.ddd_client_number) AS ddd_client_number,
        btrim(EXT_IMS_OCHL_M_src.blank1) AS blank1,
        btrim(EXT_IMS_OCHL_M_src.client_territory_number) AS client_territory_number,
        btrim(EXT_IMS_OCHL_M_src.ddd_outlet_number) AS ddd_outlet_number,
        btrim(EXT_IMS_OCHL_M_src.ddd_outlet_name) AS ddd_outlet_name,
        btrim(EXT_IMS_OCHL_M_src.ddd_outlet_address) AS ddd_outlet_address,
        btrim(EXT_IMS_OCHL_M_src.city) AS city,
        btrim(EXT_IMS_OCHL_M_src.state) AS state,
        btrim(EXT_IMS_OCHL_M_src.subcategory_code) AS subcategory_code,
        btrim(EXT_IMS_OCHL_M_src.action_code) AS action_code,
        EXT_IMS_OCHL_M_src.batch_id,
        EXT_IMS_OCHL_M_src.row_id,
        EXT_IMS_OCHL_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_OCHL_M_src;

CREATE  VIEW teva_ingestion.XPD_ADD_ON_DETAILS AS
 SELECT btrim(XPD_ADD_ON_DETAILS_src.ims_client_number) AS ims_client_number,
        btrim(XPD_ADD_ON_DETAILS_src.ims_report_number) AS ims_report_number,
        btrim(XPD_ADD_ON_DETAILS_src.channel_indicator) AS channel_indicator,
        btrim(XPD_ADD_ON_DETAILS_src.ims_id) AS ims_id,
        btrim(XPD_ADD_ON_DETAILS_src.filler_01) AS filler_01,
        btrim(XPD_ADD_ON_DETAILS_src.specialty) AS specialty,
        btrim(XPD_ADD_ON_DETAILS_src.flexible_field_2) AS flexible_field_2,
        btrim(XPD_ADD_ON_DETAILS_src.flexible_field_3) AS flexible_field_3,
        btrim(XPD_ADD_ON_DETAILS_src.flexible_field_4) AS flexible_field_4,
        btrim(XPD_ADD_ON_DETAILS_src.flexible_field_5) AS flexible_field_5,
        btrim(XPD_ADD_ON_DETAILS_src.flexible_field_6) AS flexible_field_6,
        btrim(XPD_ADD_ON_DETAILS_src.flexible_field_7) AS flexible_field_7,
        btrim(XPD_ADD_ON_DETAILS_src.flexible_field_8) AS flexible_field_8,
        btrim(XPD_ADD_ON_DETAILS_src.add_to_product_group) AS add_to_product_group,
        btrim(XPD_ADD_ON_DETAILS_src.add_On_product_group) AS add_On_product_group,
        btrim(XPD_ADD_ON_DETAILS_src.month_ending) AS month_ending,
        btrim(XPD_ADD_ON_DETAILS_src.add_on_rx) AS add_on_rx,
        XPD_ADD_ON_DETAILS_src.batch_id,
        XPD_ADD_ON_DETAILS_src.row_id,
        XPD_ADD_ON_DETAILS_src.update_ts
 FROM teva_ingestion.XPD_ADD_ON_DETAILS_src;

CREATE  VIEW teva_ingestion.XPD_RESTART_DIFF_DETAILS AS
 SELECT btrim(XPD_RESTART_DIFF_DETAILS_src.ims_client_number) AS ims_client_number,
        btrim(XPD_RESTART_DIFF_DETAILS_src.ims_report_number) AS ims_report_number,
        btrim(XPD_RESTART_DIFF_DETAILS_src.channel_indicator) AS channel_indicator,
        btrim(XPD_RESTART_DIFF_DETAILS_src.ims_id) AS ims_id,
        btrim(XPD_RESTART_DIFF_DETAILS_src.filler_01) AS filler_01,
        btrim(XPD_RESTART_DIFF_DETAILS_src.specialty) AS specialty,
        btrim(XPD_RESTART_DIFF_DETAILS_src.flexible_field_2) AS flexible_field_2,
        btrim(XPD_RESTART_DIFF_DETAILS_src.flexible_field_3) AS flexible_field_3,
        btrim(XPD_RESTART_DIFF_DETAILS_src.flexible_field_4) AS flexible_field_4,
        btrim(XPD_RESTART_DIFF_DETAILS_src.flexible_field_5) AS flexible_field_5,
        btrim(XPD_RESTART_DIFF_DETAILS_src.flexible_field_6) AS flexible_field_6,
        btrim(XPD_RESTART_DIFF_DETAILS_src.flexible_field_7) AS flexible_field_7,
        btrim(XPD_RESTART_DIFF_DETAILS_src.flexible_field_8) AS flexible_field_8,
        btrim(XPD_RESTART_DIFF_DETAILS_src.rdf_product_group) AS rdf_product_group,
        btrim(XPD_RESTART_DIFF_DETAILS_src.rd_product_group) AS rd_product_group,
        btrim(XPD_RESTART_DIFF_DETAILS_src.month_ending) AS month_ending,
        btrim(XPD_RESTART_DIFF_DETAILS_src.restart_diff_rx) AS restart_diff_rx,
        XPD_RESTART_DIFF_DETAILS_src.batch_id,
        XPD_RESTART_DIFF_DETAILS_src.row_id,
        XPD_RESTART_DIFF_DETAILS_src.update_ts
 FROM teva_ingestion.XPD_RESTART_DIFF_DETAILS_src;

CREATE  VIEW teva_ingestion.EXT_TRIALCARD_COUPON AS
 SELECT btrim(EXT_TRIALCARD_COUPON_src.redemption_type) AS redemption_type,
        btrim(EXT_TRIALCARD_COUPON_src.transaction_type) AS transaction_type,
        btrim(EXT_TRIALCARD_COUPON_src.claim_authorization_number) AS claim_authorization_number,
        btrim(EXT_TRIALCARD_COUPON_src.original_claim_authorization_number) AS original_claim_authorization_number,
        CASE WHEN (EXT_TRIALCARD_COUPON_src.date_of_fill = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_TRIALCARD_COUPON_src.date_of_fill))::timestamp END AS date_of_fill,
        CASE WHEN (EXT_TRIALCARD_COUPON_src.date_written = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_TRIALCARD_COUPON_src.date_written))::timestamp END AS date_written,
        btrim(EXT_TRIALCARD_COUPON_src.day_supply) AS day_supply,
        btrim(EXT_TRIALCARD_COUPON_src.ndc) AS ndc,
        btrim(EXT_TRIALCARD_COUPON_src.daw) AS daw,
        btrim(EXT_TRIALCARD_COUPON_src.drug_name) AS drug_name,
        btrim(EXT_TRIALCARD_COUPON_src.drug_description) AS drug_description,
        btrim(EXT_TRIALCARD_COUPON_src.new_refill_code) AS new_refill_code,
        btrim(EXT_TRIALCARD_COUPON_src.quantity) AS quantity,
        btrim(EXT_TRIALCARD_COUPON_src.number_of_refills) AS number_of_refills,
        btrim(EXT_TRIALCARD_COUPON_src.other_coverage_code) AS other_coverage_code,
        btrim(EXT_TRIALCARD_COUPON_src.group_num) AS group_num,
        btrim(EXT_TRIALCARD_COUPON_src.member_id) AS member_id,
        btrim(EXT_TRIALCARD_COUPON_src.patient_gender) AS patient_gender,
        btrim(EXT_TRIALCARD_COUPON_src.patient_age) AS patient_age,
        CASE WHEN (EXT_TRIALCARD_COUPON_src.date_processed = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_TRIALCARD_COUPON_src.date_processed))::timestamp END AS date_processed,
        btrim(EXT_TRIALCARD_COUPON_src.nabp) AS nabp,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_chain) AS pharmacy_chain,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_npi) AS pharmacy_npi,
        btrim(EXT_TRIALCARD_COUPON_src.rx_num) AS rx_num,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_name) AS pharmacy_name,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_address_1) AS pharmacy_address_1,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_address_2) AS pharmacy_address_2,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_state) AS pharmacy_state,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_zip) AS pharmacy_zip,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_phone) AS pharmacy_phone,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_npi) AS hcp_npi,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_first_name) AS hcp_first_name,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_middle_name) AS hcp_middle_name,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_last_name) AS hcp_last_name,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_suffix) AS hcp_suffix,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_designation) AS hcp_designation,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_specialty_1) AS hcp_specialty_1,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_specialty_2) AS hcp_specialty_2,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_address_1) AS hcp_address_1,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_address_2) AS hcp_address_2,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_city) AS hcp_city,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_state) AS hcp_state,
        btrim(EXT_TRIALCARD_COUPON_src.hcp_zip) AS hcp_zip,
        btrim(EXT_TRIALCARD_COUPON_src.submission_method) AS submission_method,
        btrim(EXT_TRIALCARD_COUPON_src.previous_payer_id) AS previous_payer_id,
        btrim(EXT_TRIALCARD_COUPON_src.patient_expense) AS patient_expense,
        btrim(EXT_TRIALCARD_COUPON_src.patient_benefit) AS patient_benefit,
        btrim(EXT_TRIALCARD_COUPON_src.patient_copay) AS patient_copay,
        btrim(EXT_TRIALCARD_COUPON_src.patient_oop) AS patient_oop,
        btrim(EXT_TRIALCARD_COUPON_src.pharmacy_fee) AS pharmacy_fee,
        btrim(EXT_TRIALCARD_COUPON_src.amount_due) AS amount_due,
        CASE WHEN (EXT_TRIALCARD_COUPON_src.create_date = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_TRIALCARD_COUPON_src.create_date))::timestamp END AS create_date,
        btrim(EXT_TRIALCARD_COUPON_src.occ_payment_type) AS occ_payment_type,
        btrim(EXT_TRIALCARD_COUPON_src.calc_awp) AS calc_awp,
        btrim(EXT_TRIALCARD_COUPON_src.admin_hcp_npi) AS admin_hcp_npi,
        btrim(EXT_TRIALCARD_COUPON_src.admin_hcp_name) AS admin_hcp_name,
        btrim(EXT_TRIALCARD_COUPON_src.admin_hcp_address) AS admin_hcp_address,
        btrim(EXT_TRIALCARD_COUPON_src.admin_hcp_address2) AS admin_hcp_address2,
        btrim(EXT_TRIALCARD_COUPON_src.admin_hcp_city) AS admin_hcp_city,
        btrim(EXT_TRIALCARD_COUPON_src.admin_hcp_state) AS admin_hcp_state,
        btrim(EXT_TRIALCARD_COUPON_src.admin_hcp_zip) AS admin_hcp_zip,
        btrim(EXT_TRIALCARD_COUPON_src.claim_type) AS claim_type,
        btrim(EXT_TRIALCARD_COUPON_src.administration_flag) AS administration_flag,
        btrim(EXT_TRIALCARD_COUPON_src.soc_name) AS soc_name,
        btrim(EXT_TRIALCARD_COUPON_src.soc_phone) AS soc_phone,
        btrim(EXT_TRIALCARD_COUPON_src.soc_fax) AS soc_fax,
        btrim(EXT_TRIALCARD_COUPON_src.soc_address) AS soc_address,
        btrim(EXT_TRIALCARD_COUPON_src.soc_city) AS soc_city,
        btrim(EXT_TRIALCARD_COUPON_src.soc_state) AS soc_state,
        btrim(EXT_TRIALCARD_COUPON_src.soc_zip) AS soc_zip,
        btrim(EXT_TRIALCARD_COUPON_src.soc_id) AS soc_id,
        btrim(EXT_TRIALCARD_COUPON_src.soc_npi) AS soc_npi,
        btrim(EXT_TRIALCARD_COUPON_src.payer_name) AS payer_name,
        btrim(EXT_TRIALCARD_COUPON_src.cpt_code) AS cpt_code,
        btrim(EXT_TRIALCARD_COUPON_src.patient_type) AS patient_type,
        btrim(EXT_TRIALCARD_COUPON_src.primary_bin) AS primary_bin,
        btrim(EXT_TRIALCARD_COUPON_src.primary_bin_description) AS primary_bin_description,
        btrim(EXT_TRIALCARD_COUPON_src.reject_code) AS reject_code,
        EXT_TRIALCARD_COUPON_src.batch_id,
        EXT_TRIALCARD_COUPON_src.row_id,
        EXT_TRIALCARD_COUPON_src.update_ts
 FROM teva_ingestion.EXT_TRIALCARD_COUPON_src;

CREATE  VIEW teva_ingestion.EXT_DDD_DOLLARS_M_ADHOC AS
 SELECT btrim(EXT_DDD_DOLLARS_M_ADHOC_src.client_num) AS client_num,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.report_num) AS report_num,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.outlet_code) AS outlet_code,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.zip) AS zip,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.subcategory_code) AS subcategory_code,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.sra_4) AS sra_4,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.category_code) AS category_code,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.ims_product_code) AS ims_product_code,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.data_date) AS data_date,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth01) AS dol_mth01,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth02) AS dol_mth02,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth03) AS dol_mth03,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth04) AS dol_mth04,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth05) AS dol_mth05,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth06) AS dol_mth06,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth07) AS dol_mth07,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth08) AS dol_mth08,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth09) AS dol_mth09,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth10) AS dol_mth10,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth11) AS dol_mth11,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth12) AS dol_mth12,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth13) AS dol_mth13,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth14) AS dol_mth14,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth15) AS dol_mth15,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth16) AS dol_mth16,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth17) AS dol_mth17,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth18) AS dol_mth18,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth19) AS dol_mth19,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth20) AS dol_mth20,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth21) AS dol_mth21,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth22) AS dol_mth22,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth23) AS dol_mth23,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.dol_mth24) AS dol_mth24,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.outlet_name) AS outlet_name,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.outlet_address) AS outlet_address,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.outlet_city) AS outlet_city,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.outlet_state) AS outlet_state,
        btrim(EXT_DDD_DOLLARS_M_ADHOC_src.outlet_zip) AS outlet_zip,
        EXT_DDD_DOLLARS_M_ADHOC_src.batch_id,
        EXT_DDD_DOLLARS_M_ADHOC_src.row_id,
        EXT_DDD_DOLLARS_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOLLARS_M_ADHOC_src;

CREATE  VIEW teva_ingestion.EXT_DDD_QUANTITY_M_ADHOC AS
 SELECT btrim(EXT_DDD_QUANTITY_M_ADHOC_src.client_num) AS client_num,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.report_num) AS report_num,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.outlet_code) AS outlet_code,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.zip) AS zip,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.subcategory_code) AS subcategory_code,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.sra_4) AS sra_4,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.category_code) AS category_code,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.ims_product_code) AS ims_product_code,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.data_date) AS data_date,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth01) AS qty_mth01,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth02) AS qty_mth02,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth03) AS qty_mth03,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth04) AS qty_mth04,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth05) AS qty_mth05,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth06) AS qty_mth06,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth07) AS qty_mth07,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth08) AS qty_mth08,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth09) AS qty_mth09,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth10) AS qty_mth10,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth11) AS qty_mth11,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth12) AS qty_mth12,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth13) AS qty_mth13,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth14) AS qty_mth14,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth15) AS qty_mth15,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth16) AS qty_mth16,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth17) AS qty_mth17,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth18) AS qty_mth18,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth19) AS qty_mth19,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth20) AS qty_mth20,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth21) AS qty_mth21,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth22) AS qty_mth22,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth23) AS qty_mth23,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.qty_mth24) AS qty_mth24,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.outlet_name) AS outlet_name,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.outlet_address) AS outlet_address,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.outlet_city) AS outlet_city,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.outlet_state) AS outlet_state,
        btrim(EXT_DDD_QUANTITY_M_ADHOC_src.outlet_zip) AS outlet_zip,
        EXT_DDD_QUANTITY_M_ADHOC_src.batch_id,
        EXT_DDD_QUANTITY_M_ADHOC_src.row_id,
        EXT_DDD_QUANTITY_M_ADHOC_src.update_ts
 FROM teva_ingestion.EXT_DDD_QUANTITY_M_ADHOC_src;

CREATE  VIEW teva_ingestion.EXT_RELIANCE AS
 SELECT btrim(EXT_RELIANCE_src.referral_number) AS referral_number,
        btrim(EXT_RELIANCE_src.hub_order_trans_number) AS hub_order_trans_number,
        btrim(EXT_RELIANCE_src.date_written) AS date_written,
        btrim(EXT_RELIANCE_src.referral_source) AS referral_source,
        btrim(EXT_RELIANCE_src.referral_date) AS referral_date,
        btrim(EXT_RELIANCE_src.patient_first_ship_date) AS patient_first_ship_date,
        btrim(EXT_RELIANCE_src.ship_date) AS ship_date,
        btrim(EXT_RELIANCE_src.full_product_name) AS full_product_name,
        btrim(EXT_RELIANCE_src.product_strength) AS product_strength,
        btrim(EXT_RELIANCE_src.product_form) AS product_form,
        btrim(EXT_RELIANCE_src.ndc_number) AS ndc_number,
        btrim(EXT_RELIANCE_src.quantity_shipped) AS quantity_shipped,
        btrim(EXT_RELIANCE_src.quantity_uom) AS quantity_uom,
        btrim(EXT_RELIANCE_src.days_supplied) AS days_supplied,
        btrim(EXT_RELIANCE_src.dosing_instructions) AS dosing_instructions,
        btrim(EXT_RELIANCE_src.frequency) AS frequency,
        btrim(EXT_RELIANCE_src.rx_number) AS rx_number,
        btrim(EXT_RELIANCE_src.rx_type) AS rx_type,
        btrim(EXT_RELIANCE_src.authorized_refills) AS authorized_refills,
        btrim(EXT_RELIANCE_src.fill_number) AS fill_number,
        btrim(EXT_RELIANCE_src.refills_remaining) AS refills_remaining,
        btrim(EXT_RELIANCE_src.primary_icd_codes) AS primary_icd_codes,
        btrim(EXT_RELIANCE_src.secondary_icd_codes) AS secondary_icd_codes,
        btrim(EXT_RELIANCE_src.ship_to_location_type) AS ship_to_location_type,
        btrim(EXT_RELIANCE_src.shipping_carrier) AS shipping_carrier,
        btrim(EXT_RELIANCE_src.npi) AS npi,
        btrim(EXT_RELIANCE_src.dea) AS dea,
        btrim(EXT_RELIANCE_src.spp_physician_id) AS spp_physician_id,
        btrim(EXT_RELIANCE_src.first_name) AS first_name,
        btrim(EXT_RELIANCE_src.middle_name) AS middle_name,
        btrim(EXT_RELIANCE_src.last_name) AS last_name,
        btrim(EXT_RELIANCE_src.suffix) AS suffix,
        btrim(EXT_RELIANCE_src.physician_address1) AS physician_address1,
        btrim(EXT_RELIANCE_src.physician_address2) AS physician_address2,
        btrim(EXT_RELIANCE_src.physician_city) AS physician_city,
        btrim(EXT_RELIANCE_src.physician_state) AS physician_state,
        btrim(EXT_RELIANCE_src.physician_zip) AS physician_zip,
        btrim(EXT_RELIANCE_src.physician_phone) AS physician_phone,
        btrim(EXT_RELIANCE_src.physician_fax) AS physician_fax,
        btrim(EXT_RELIANCE_src.primary_payer_bin) AS primary_payer_bin,
        btrim(EXT_RELIANCE_src.primary_payer_pcn) AS primary_payer_pcn,
        btrim(EXT_RELIANCE_src.primary_group_num) AS primary_group_num,
        btrim(EXT_RELIANCE_src.primary_payer_name) AS primary_payer_name,
        btrim(EXT_RELIANCE_src.primary_payer_type) AS primary_payer_type,
        btrim(EXT_RELIANCE_src.primary_benefit_type) AS primary_benefit_type,
        btrim(EXT_RELIANCE_src.primary_co_pay_amount) AS primary_co_pay_amount,
        btrim(EXT_RELIANCE_src.primary_pa_required) AS primary_pa_required,
        btrim(EXT_RELIANCE_src.primary_pa_exp_date) AS primary_pa_exp_date,
        btrim(EXT_RELIANCE_src.secondary_payer_bin) AS secondary_payer_bin,
        btrim(EXT_RELIANCE_src.secondary_payer_pcn) AS secondary_payer_pcn,
        btrim(EXT_RELIANCE_src.secondary_group_num) AS secondary_group_num,
        btrim(EXT_RELIANCE_src.secondary_payer_name) AS secondary_payer_name,
        btrim(EXT_RELIANCE_src.secondary_copay_amount) AS secondary_copay_amount,
        btrim(EXT_RELIANCE_src.encrypted_spp_patient_id) AS encrypted_spp_patient_id,
        btrim(EXT_RELIANCE_src.hub_identifier) AS hub_identifier,
        btrim(EXT_RELIANCE_src.patient_state) AS patient_state,
        btrim(EXT_RELIANCE_src.patient_yob) AS patient_yob,
        btrim(EXT_RELIANCE_src.patient_gender) AS patient_gender,
        btrim(EXT_RELIANCE_src.pharmacy_name) AS pharmacy_name,
        btrim(EXT_RELIANCE_src.pharmacy_location_name) AS pharmacy_location_name,
        btrim(EXT_RELIANCE_src.location_dea) AS location_dea,
        btrim(EXT_RELIANCE_src.location_npi_number) AS location_npi_number,
        btrim(EXT_RELIANCE_src.location_ncpdp_number) AS location_ncpdp_number,
        btrim(EXT_RELIANCE_src.reliance_record_id) AS reliance_record_id,
        btrim(EXT_RELIANCE_src.restatement_flag) AS restatement_flag,
        btrim(EXT_RELIANCE_src.physician_sln) AS physician_slN,
        EXT_RELIANCE_src.batch_id,
        EXT_RELIANCE_src.row_id,
        EXT_RELIANCE_src.update_ts
 FROM teva_ingestion.EXT_RELIANCE_src;

CREATE  VIEW teva_ingestion.EXT_ZIP_TO_TERR_V2 AS
 SELECT btrim(EXT_ZIP_TO_TERR_V2_src.zip) AS zip,
        btrim(EXT_ZIP_TO_TERR_V2_src.city) AS city,
        btrim(EXT_ZIP_TO_TERR_V2_src.state) AS state,
        btrim(EXT_ZIP_TO_TERR_V2_src.territory_1_id) AS territory_1_id,
        btrim(EXT_ZIP_TO_TERR_V2_src.territory_name) AS territory_name,
        btrim(EXT_ZIP_TO_TERR_V2_src.area_name) AS area_name,
        btrim(EXT_ZIP_TO_TERR_V2_src.region_name) AS region_name,
        btrim(EXT_ZIP_TO_TERR_V2_src.mirror_flag) AS mirror_flag,
        btrim(EXT_ZIP_TO_TERR_V2_src.territory_2_id) AS territory_2_id,
        EXT_ZIP_TO_TERR_V2_src.batch_id,
        EXT_ZIP_TO_TERR_V2_src.row_id,
        EXT_ZIP_TO_TERR_V2_src.update_ts
 FROM teva_ingestion.EXT_ZIP_TO_TERR_V2_src;

CREATE  VIEW teva_ingestion.EXT_VV_SUGGESTION_TAG_VOD__C AS
 SELECT btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.id) AS id,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.name) AS name,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.recordtypeid) AS recordtypeid,
        CASE WHEN (EXT_VV_SUGGESTION_TAG_VOD__C_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.createddate))::timestamp END AS createddate,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_VV_SUGGESTION_TAG_VOD__C_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        CASE WHEN (EXT_VV_SUGGESTION_TAG_VOD__C_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.systemmodstamp))::timestamp END AS systemmodstamp,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.suggestion_vod__c) AS suggestion_vod__c,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.detail_group_vod__c) AS detail_group_vod__c,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.driver_vod__c) AS driver_vod__c,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.email_fragment_order_vod__c) AS email_fragment_order_vod__c,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.email_fragment_vod__c) AS email_fragment_vod__c,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.external_id_vod__c) AS external_id_vod__c,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.product_vod__c) AS product_vod__c,
        btrim(EXT_VV_SUGGESTION_TAG_VOD__C_src.record_type_name_vod__c) AS record_type_name_vod__c,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.batch_id,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.row_id,
        EXT_VV_SUGGESTION_TAG_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SUGGESTION_TAG_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_VV_SUGGESTION_VOD__C AS
 SELECT btrim(EXT_VV_SUGGESTION_VOD__C_src.id) AS id,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.ownerid) AS ownerid,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.name) AS name,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.recordtypeid) AS recordtypeid,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.createddate))::timestamp END AS createddate,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.systemmodstamp))::timestamp END AS systemmodstamp,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.islocked) AS islocked,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.lastvieweddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.lastvieweddate))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.lastreferenceddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.lastreferenceddate))::timestamp END AS lastreferenceddate,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.account_priority_score_vod__c) AS account_priority_score_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.account_vod__c) AS account_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.action_count_vod__c) AS action_count_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.actioned_vod__c) AS actioned_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.call_objective_clm_id_vod__c) AS call_objective_clm_id_vod__c,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.call_objective_from_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.call_objective_from_date_vod__c))::timestamp END AS call_objective_from_date_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.call_objective_on_by_default_vod__c) AS call_objective_on_by_default_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.call_objective_record_type_vod__c) AS call_objective_record_type_vod__c,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.call_objective_to_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.call_objective_to_date_vod__c))::timestamp END AS call_objective_to_date_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.dismiss_count_vod__c) AS dismiss_count_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.dismissed_vod__c) AS dismissed_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.display_dismiss_vod__c) AS display_dismiss_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.display_mark_as_complete_vod__c) AS display_mark_as_complete_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.display_score_vod__c) AS display_score_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.email_template_id_vod__c) AS email_template_id_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.email_template_vault_id_vod__c) AS email_template_vault_id_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.email_template_vod__c) AS email_template_vod__c,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.expiration_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.expiration_date_vod__c))::timestamp END AS expiration_date_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.mark_complete_count_vod__c) AS mark_complete_count_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.marked_as_complete_vod__c) AS marked_as_complete_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.no_homepage_vod__c) AS no_homepage_vod__c,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.planned_call_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.planned_call_date_vod__c))::timestamp END AS planned_call_date_vod__c,
        CASE WHEN (EXT_VV_SUGGESTION_VOD__C_src.posted_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_VOD__C_src.posted_date_vod__c))::timestamp END AS posted_date_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.priority_vod__c) AS priority_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.reason_vod__c) AS reason_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.record_type_name_vod__c) AS record_type_name_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.suggestion_external_id_vod__c) AS suggestion_external_id_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.suppress_reason_vod__c) AS suppress_reason_vod__c,
        btrim(EXT_VV_SUGGESTION_VOD__C_src.title_vod__c) AS title_vod__c,
        EXT_VV_SUGGESTION_VOD__C_src.batch_id,
        EXT_VV_SUGGESTION_VOD__C_src.row_id,
        EXT_VV_SUGGESTION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SUGGESTION_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_VV_TSF_VOD__C AS
 SELECT btrim(EXT_VV_TSF_VOD__C_src.id) AS id,
        btrim(EXT_VV_TSF_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_TSF_VOD__C_src.name) AS name,
        btrim(EXT_VV_TSF_VOD__C_src.recordtypeid) AS recordtypeid,
        btrim(EXT_VV_TSF_VOD__C_src.createddate) AS createddate,
        btrim(EXT_VV_TSF_VOD__C_src.createdbyid) AS createdbyid,
        btrim(EXT_VV_TSF_VOD__C_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_VV_TSF_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_TSF_VOD__C_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_TSF_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_TSF_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_TSF_VOD__C_src.account_vod__c) AS account_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.address_vod__c) AS address_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.last_activity_date_vod__c) AS last_activity_date_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.my_target_vod__c) AS my_target_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.route_vod__c) AS route_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.mobile_id_vod__c) AS mobile_id_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.external_id_vod__c) AS external_id_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.territory_vod__c) AS territory_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.ytd_activity_vod__c) AS ytd_activity_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.preferred_account_vod__c) AS preferred_account_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.allowed_products_vod__c) AS allowed_products_vod__c,
        btrim(EXT_VV_TSF_VOD__C_src.territory_status_tva__c) AS territory_status_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.territory_specialty_tva__c) AS territory_specialty_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.treats_es_osa_tva__c) AS treats_es_osa_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.osa_patients_tva__c) AS osa_patients_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.account_status_tva__c) AS account_status_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.dea_number_tva__c) AS dea_number_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.synribo_target_tva__c) AS synribo_target_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.treanda_sbo_tva__c) AS treanda_sbo_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.trisenox_sbo_tva__c) AS trisenox_sbo_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.appt_index_tva__c) AS appt_index_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.merged_mvn__c) AS merged_mvn__c,
        btrim(EXT_VV_TSF_VOD__C_src.call_plan_designation_tva__c) AS call_plan_designation_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.campaign_tva__c) AS campaign_tva__c,
        btrim(EXT_VV_TSF_VOD__C_src.detail_priority__c) AS detail_priority__c,
        btrim(EXT_VV_TSF_VOD__C_src.cinqair_call_plan_target__c) AS cinqair_call_plan_target__c,
        btrim(EXT_VV_TSF_VOD__C_src.digihaler_call_plan_target__c) AS digihaler_call_plan_target__c,
        EXT_VV_TSF_VOD__C_src.batch_id,
        EXT_VV_TSF_VOD__C_src.row_id,
        EXT_VV_TSF_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_TSF_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_CC_TITRATION_DOSAGE AS
 SELECT EXT_CC_TITRATION_DOSAGE_src.tvcm_id,
        btrim(EXT_CC_TITRATION_DOSAGE_src.ims_id) AS ims_id,
        btrim(EXT_CC_TITRATION_DOSAGE_src.product_name) AS product_name,
        btrim(EXT_CC_TITRATION_DOSAGE_src.data_type) AS data_type,
        EXT_CC_TITRATION_DOSAGE_src.avg_td_daily_dose_new_patient,
        EXT_CC_TITRATION_DOSAGE_src.avg_td_daily_dose_cont_patient,
        EXT_CC_TITRATION_DOSAGE_src.data_ending_month,
        EXT_CC_TITRATION_DOSAGE_src.batch_id,
        EXT_CC_TITRATION_DOSAGE_src.row_id,
        EXT_CC_TITRATION_DOSAGE_src.update_ts
 FROM teva_ingestion.EXT_CC_TITRATION_DOSAGE_src;

CREATE  VIEW teva_ingestion.EXT_VV_PRODUCT_VOD__C AS
 SELECT btrim(EXT_VV_PRODUCT_VOD__C_src.ID) AS id,
        btrim(EXT_VV_PRODUCT_VOD__C_src.OWNERID) AS ownerid,
        btrim(EXT_VV_PRODUCT_VOD__C_src.ISDELETED) AS isdeleted,
        btrim(EXT_VV_PRODUCT_VOD__C_src.NAME) AS name,
        CASE WHEN (EXT_VV_PRODUCT_VOD__C_src.CREATEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_PRODUCT_VOD__C_src.CREATEDDATE))::timestamp END AS createddate,
        btrim(EXT_VV_PRODUCT_VOD__C_src.CREATEDBYID) AS createdbyid,
        CASE WHEN (EXT_VV_PRODUCT_VOD__C_src.LASTMODIFIEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_PRODUCT_VOD__C_src.LASTMODIFIEDDATE))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_PRODUCT_VOD__C_src.LASTMODIFIEDBYID) AS lastmodifiedbyid,
        btrim(EXT_VV_PRODUCT_VOD__C_src.SYSTEMMODSTAMP) AS systemmodstamp,
        btrim(EXT_VV_PRODUCT_VOD__C_src.MAYEDIT) AS mayedit,
        btrim(EXT_VV_PRODUCT_VOD__C_src.ISLOCKED) AS islocked,
        CASE WHEN (EXT_VV_PRODUCT_VOD__C_src.LASTVIEWEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_PRODUCT_VOD__C_src.LASTVIEWEDDATE))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_VV_PRODUCT_VOD__C_src.LASTREFERENCEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_PRODUCT_VOD__C_src.LASTREFERENCEDDATE))::timestamp END AS lastreferenceddate,
        btrim(EXT_VV_PRODUCT_VOD__C_src.CONSUMER_SITE__C) AS consumer_site__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.PRODUCT_INFO__C) AS product_info__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.THERAPEUTIC_CLASS_VOD__C) AS therapeutic_class_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.PARENT_PRODUCT_VOD__C) AS parent_product_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.THERAPEUTIC_AREA_VOD__C) AS therapeutic_area_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.PRODUCT_TYPE_VOD__C) AS product_type_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.REQUIRE_KEY_MESSAGE_VOD__C) AS require_key_message_vod__c,
        EXT_VV_PRODUCT_VOD__C_src.COST_VOD__C AS cost_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.EXTERNAL_ID_VOD__C) AS external_id_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.MANUFACTURER_VOD__C) AS manufacturer_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.COMPANY_PRODUCT_VOD__C) AS company_product_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.CONTROLLED_SUBSTANCE_VOD__C) AS controlled_substance_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.DESCRIPTION_VOD__C) AS description_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.SAMPLE_QUANTITY_PICKLIST_VOD__) AS sample_quantity_picklist_vod__,
        EXT_VV_PRODUCT_VOD__C_src.DISPLAY_ORDER_VOD__C AS display_order_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.NO_METRICS_VOD__C) AS no_metrics_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.DISTRIBUTOR_VOD__C) AS distributor_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.SAMPLE_QUANTITY_BOUND_VOD__C) AS sample_quantity_bound_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.SAMPLE_U_M_VOD__C) AS sample_u_m_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.NO_DETAILS_VOD__C) AS no_details_vod__c,
        EXT_VV_PRODUCT_VOD__C_src.QUANTITY_PER_CASE_VOD__C AS quantity_per_case_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.SCHEDULE_VOD__C) AS schedule_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.RESTRICTED_VOD__C) AS restricted_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.PRICING_RULE_QUANTITY_BOUND_VO) AS pricing_rule_quantity_bound_vo,
        btrim(EXT_VV_PRODUCT_VOD__C_src.NO_PROMO_ITEMS_VOD__C) AS no_promo_items_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.USER_ALIGNED_VOD__C) AS user_aligned_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.RESTRICTED_STATES_VOD__C) AS restricted_states_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.SORT_CODE_VOD__C) AS sort_code_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.NO_CYCLE_PLANS_VOD__C) AS no_cycle_plans_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.INVENTORY_ORDER_UOM_VOD__C) AS inventory_order_uom_vod__c,
        EXT_VV_PRODUCT_VOD__C_src.INVENTORY_QUANTITY_PER_CASE_VO AS inventory_quantity_per_case_vo,
        btrim(EXT_VV_PRODUCT_VOD__C_src.SUB_TYPE__C) AS sub_type__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.ORGANIZATION__C) AS organization__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.PRODUCT_ID_TEVA__C) AS product_id_teva__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.PRODUCT_LINE_TVA__C) AS product_line_tva__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.VEXTERNAL_ID_VOD__C) AS vexternal_id_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.PRODUCT_VALUE_VOD__C) AS product_value_vod__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.ENCRYPT_VEEVA_EXTERNAL_ID_TVA__C) AS encrypt_veeva_external_id_tva__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.AVAILABLE_QTY_TVA__C) AS available_qty_tva__c,
        CASE WHEN (EXT_VV_PRODUCT_VOD__C_src.EXPIRATION_DATE_TVA__C = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_PRODUCT_VOD__C_src.EXPIRATION_DATE_TVA__C))::timestamp END AS expiration_date_tva__c,
        btrim(EXT_VV_PRODUCT_VOD__C_src.t22s1_austedofrm__c) AS t22s1_austedofrm__c,
        EXT_VV_PRODUCT_VOD__C_src.batch_id,
        EXT_VV_PRODUCT_VOD__C_src.row_id,
        EXT_VV_PRODUCT_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_PRODUCT_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_PSRF_UTIL_RPT AS
 SELECT btrim(EXT_PSRF_UTIL_RPT_src.current_week_psrfs) AS current_week_psrfs,
        btrim(EXT_PSRF_UTIL_RPT_src.current_month_psrfs) AS current_month_psrfs,
        btrim(EXT_PSRF_UTIL_RPT_src.hcp_signature_yes) AS hcp_signature_yes,
        btrim(EXT_PSRF_UTIL_RPT_src.hcp_signature_no) AS hcp_signature_no,
        btrim(EXT_PSRF_UTIL_RPT_src.patient_auth_yes) AS patient_auth_yes,
        btrim(EXT_PSRF_UTIL_RPT_src.patient_auth_no) AS patient_auth_no,
        btrim(EXT_PSRF_UTIL_RPT_src.ytd_psrfs) AS ytd_psrfs,
        btrim(EXT_PSRF_UTIL_RPT_src.prescribernpi) AS prescribernpi,
        btrim(EXT_PSRF_UTIL_RPT_src.prescriberzip) AS prescriberzip,
        btrim(EXT_PSRF_UTIL_RPT_src.prescribercity) AS prescribercity,
        btrim(EXT_PSRF_UTIL_RPT_src.prescriberstate) AS prescriberstate,
        btrim(EXT_PSRF_UTIL_RPT_src.prescribername) AS prescribername,
        EXT_PSRF_UTIL_RPT_src.batch_id,
        EXT_PSRF_UTIL_RPT_src.row_id,
        EXT_PSRF_UTIL_RPT_src.update_ts
 FROM teva_ingestion.EXT_PSRF_UTIL_RPT_src;

CREATE  VIEW teva_ingestion.EXTERNAL_TABLE_CLEANUP AS
SELECT EXTERNAL_TABLE_CLEANUP_src.TABLE_NAME, EXTERNAL_TABLE_CLEANUP_src.ERROR_FLAG, CASE WHEN (EXTERNAL_TABLE_CLEANUP_src.NUM_ROWS = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXTERNAL_TABLE_CLEANUP_src.NUM_ROWS)::numeric(37,15) END AS NUM_ROWS, EXTERNAL_TABLE_CLEANUP_src.REMOVE, EXTERNAL_TABLE_CLEANUP_src.LOCATION, EXTERNAL_TABLE_CLEANUP_src.DIRECTORY_NAME, EXTERNAL_TABLE_CLEANUP_src.DIRECTORY_PATH, CASE WHEN (EXTERNAL_TABLE_CLEANUP_src.FILE_CREATE_DATE = ''::varchar) THEN NULL::timestamp ELSE (EXTERNAL_TABLE_CLEANUP_src.FILE_CREATE_DATE)::timestamp END AS FILE_CREATE_DATE, EXTERNAL_TABLE_CLEANUP_src.FILE_EXISTS, EXTERNAL_TABLE_CLEANUP_src.batch_id, EXTERNAL_TABLE_CLEANUP_src.row_id, EXTERNAL_TABLE_CLEANUP_src.update_ts FROM teva_ingestion.EXTERNAL_TABLE_CLEANUP_src WHERE (EXTERNAL_TABLE_CLEANUP_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXTERNAL_TABLE_CLEANUP'::varchar(22))));

CREATE  VIEW teva_ingestion.EXT_CAREMARK_RX2 AS
SELECT EXT_CAREMARK_RX2_src.MD_ID, EXT_CAREMARK_RX2_src.MD_LAST_NAME, EXT_CAREMARK_RX2_src.MD_FIRST_NAME, EXT_CAREMARK_RX2_src.PRESCRIBER_NPI, EXT_CAREMARK_RX2_src.MD_ADDR1, EXT_CAREMARK_RX2_src.MD_ADDR2, EXT_CAREMARK_RX2_src.MD_CITY, EXT_CAREMARK_RX2_src.MD_STATE, EXT_CAREMARK_RX2_src.MD_ZIP, EXT_CAREMARK_RX2_src.NDC_NUMBER, EXT_CAREMARK_RX2_src.SHIP_DATE, CASE WHEN (EXT_CAREMARK_RX2_src.QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CAREMARK_RX2_src.QTY)::numeric(37,15) END AS QTY, EXT_CAREMARK_RX2_src.batch_id, EXT_CAREMARK_RX2_src.row_id, EXT_CAREMARK_RX2_src.update_ts FROM teva_ingestion.EXT_CAREMARK_RX2_src WHERE (EXT_CAREMARK_RX2_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_CAREMARK_RX2'::varchar(16))));

CREATE  VIEW teva_ingestion.EXT_CMOP_RX_DATA_TEVA_HIST AS
SELECT EXT_CMOP_RX_DATA_TEVA_HIST_src.CMOP, EXT_CMOP_RX_DATA_TEVA_HIST_src.VISN, EXT_CMOP_RX_DATA_TEVA_HIST_src.STATION_NUMBER, EXT_CMOP_RX_DATA_TEVA_HIST_src.STATION, EXT_CMOP_RX_DATA_TEVA_HIST_src.VA_PRODUCT, CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201012_TOTAL_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201012_TOTAL_RXS")::numeric(37,15) END AS "201012_TOTAL_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201012_TOTAL_QTY" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201012_TOTAL_QTY")::numeric(37,15) END AS "201012_TOTAL_QTY", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201012_30_DAY_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201012_30_DAY_RXS")::numeric(37,15) END AS "201012_30_DAY_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201101_TOTAL_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201101_TOTAL_RXS")::numeric(37,15) END AS "201101_TOTAL_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201101_TOTAL_QTY" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201101_TOTAL_QTY")::numeric(37,15) END AS "201101_TOTAL_QTY", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201101_30_DAY_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201101_30_DAY_RXS")::numeric(37,15) END AS "201101_30_DAY_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201102_TOTAL_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201102_TOTAL_RXS")::numeric(37,15) END AS "201102_TOTAL_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201102_TOTAL_QTY" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201102_TOTAL_QTY")::numeric(37,15) END AS "201102_TOTAL_QTY", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201102_30_DAY_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201102_30_DAY_RXS")::numeric(37,15) END AS "201102_30_DAY_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201103_TOTAL_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201103_TOTAL_RXS")::numeric(37,15) END AS "201103_TOTAL_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201103_TOTAL_QTY" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201103_TOTAL_QTY")::numeric(37,15) END AS "201103_TOTAL_QTY", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201103_30_DAY_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201103_30_DAY_RXS")::numeric(37,15) END AS "201103_30_DAY_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201104_TOTAL_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201104_TOTAL_RXS")::numeric(37,15) END AS "201104_TOTAL_RXS", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201104_TOTAL_QTY" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201104_TOTAL_QTY")::numeric(37,15) END AS "201104_TOTAL_QTY", CASE WHEN (EXT_CMOP_RX_DATA_TEVA_HIST_src."201104_30_DAY_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_CMOP_RX_DATA_TEVA_HIST_src."201104_30_DAY_RXS")::numeric(37,15) END AS "201104_30_DAY_RXS", EXT_CMOP_RX_DATA_TEVA_HIST_src.ZIP, EXT_CMOP_RX_DATA_TEVA_HIST_src.batch_id, EXT_CMOP_RX_DATA_TEVA_HIST_src.row_id, EXT_CMOP_RX_DATA_TEVA_HIST_src.update_ts FROM teva_ingestion.EXT_CMOP_RX_DATA_TEVA_HIST_src WHERE (EXT_CMOP_RX_DATA_TEVA_HIST_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_CMOP_RX_DATA_TEVA_HIST'::varchar(26))));

CREATE  VIEW teva_ingestion.EXT_IMS_DEA AS
SELECT EXT_IMS_DEA_src.IMS_ID, EXT_IMS_DEA_src.FIRST_NAME, EXT_IMS_DEA_src.LAST_NAME, EXT_IMS_DEA_src.DEA_NUM, EXT_IMS_DEA_src.DEA_EXPIR_DATE, EXT_IMS_DEA_src.DEA_STATUS, EXT_IMS_DEA_src.NPI, EXT_IMS_DEA_src.batch_id, EXT_IMS_DEA_src.row_id, EXT_IMS_DEA_src.update_ts FROM teva_ingestion.EXT_IMS_DEA_src WHERE (EXT_IMS_DEA_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_IMS_DEA'::varchar(11))));

CREATE  VIEW teva_ingestion.EXT_NTIS AS
SELECT EXT_NTIS_src.DEA_NUM, EXT_NTIS_src.BUSINESS_ACTIVITY_CODE, EXT_NTIS_src.DRUG_SCHEDULES, EXT_NTIS_src.EXPIRATION_DATE, EXT_NTIS_src.COMPANY_NAME, EXT_NTIS_src.ADDRESS_LINE1, EXT_NTIS_src.ADDRESS_LINE2, EXT_NTIS_src.ADDRESS_LINE3, EXT_NTIS_src.CITY, EXT_NTIS_src.STATE, EXT_NTIS_src.ZIP_CODE, EXT_NTIS_src.BASC, EXT_NTIS_src.PAYMENT_INDICATOR, EXT_NTIS_src.CONTROLLED_SUBSTANCE_AUTH, EXT_NTIS_src.batch_id, EXT_NTIS_src.row_id, EXT_NTIS_src.update_ts FROM teva_ingestion.EXT_NTIS_src WHERE (EXT_NTIS_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_NTIS'::varchar(8))));

CREATE  VIEW teva_ingestion.EXT_SIEBEL_BUS_ACCTS_TO_VEEVA AS
SELECT EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.SIEBELID, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.VEEVA_ID, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.EXTERNAL_ID_VOD__C, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.NAME, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.RECORDTYPEID, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.TYPE, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.ACCOUNT_STATUS_TVA__C, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.ACCOUNT_LOCATION_TVA__C, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.ACCOUNT_MASTER_ID_TVA__C, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.ENDIT, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.batch_id, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.row_id, EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.update_ts FROM teva_ingestion.EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src WHERE (EXT_SIEBEL_BUS_ACCTS_TO_VEEVA_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_SIEBEL_BUS_ACCTS_TO_VEEVA'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA AS
SELECT EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.SIEBELID, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.EXTERNAL_ID_VOD__C, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.VEEVA_ID, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.INVEEVAALREADY, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.RECORDTYPEID, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.FIRSTNAME, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.LASTNAME, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.batch_id, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.row_id, EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.update_ts FROM teva_ingestion.EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src WHERE (EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_SIEBEL_PRSN_ACCTS_TO_VEEVA'::varchar(30))));

CREATE  VIEW teva_ingestion.EXT_TW_ICS_ASI AS
SELECT EXT_TW_ICS_ASI_src.BP_NUMBER, EXT_TW_ICS_ASI_src.HCP_ID, EXT_TW_ICS_ASI_src.TRANSACTION_DATE, EXT_TW_ICS_ASI_src.INVOICE_NUMBER, EXT_TW_ICS_ASI_src.ACCOUNT_TYPE, EXT_TW_ICS_ASI_src.CLASS_OF_TRADE, EXT_TW_ICS_ASI_src.TERRITORY_ID, EXT_TW_ICS_ASI_src.AREA_ID, EXT_TW_ICS_ASI_src.SHIP_TO_STREET, EXT_TW_ICS_ASI_src.SHIP_TO_CITY, EXT_TW_ICS_ASI_src.SHIP_TO_STATE, EXT_TW_ICS_ASI_src.SHIP_TO_ZIP, CASE WHEN (EXT_TW_ICS_ASI_src.DOLLARS_PARAGARD = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_TW_ICS_ASI_src.DOLLARS_PARAGARD)::numeric(37,15) END AS DOLLARS_PARAGARD, CASE WHEN (EXT_TW_ICS_ASI_src.UNITS_PARAGARD = ''::varchar) THEN NULL::numeric(37,15) ELSE (EXT_TW_ICS_ASI_src.UNITS_PARAGARD)::numeric(37,15) END AS UNITS_PARAGARD, EXT_TW_ICS_ASI_src.batch_id, EXT_TW_ICS_ASI_src.row_id, EXT_TW_ICS_ASI_src.update_ts FROM teva_ingestion.EXT_TW_ICS_ASI_src WHERE (EXT_TW_ICS_ASI_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_TW_ICS_ASI'::varchar(14))));

CREATE  VIEW teva_ingestion.addresses AS
 SELECT CASE WHEN (addresses_src.ADDR_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(addresses_src.ADDR_ID))::numeric(38,0) END AS ADDR_ID,
        btrim(addresses_src.LINE_1) AS LINE_1,
        btrim(addresses_src.LINE_2) AS LINE_2,
        btrim(addresses_src.LINE_3) AS LINE_3,
        btrim(addresses_src.CITY) AS CITY,
        btrim(addresses_src.ST_ABBR) AS ST_ABBR,
        btrim(addresses_src.POSTAL_CD) AS POSTAL_CD,
        btrim(addresses_src.CNTRY_ISO_ABBR) AS CNTRY_ISO_ABBR,
        btrim(addresses_src.CRT_USER) AS CRT_USER,
        CASE WHEN (addresses_src.CRT_DT = ''::varchar) THEN NULL::date ELSE (btrim(addresses_src.CRT_DT))::date END AS CRT_DT,
        btrim(addresses_src.UPD_USER) AS UPD_USER,
        CASE WHEN (addresses_src.UPD_DT = ''::varchar) THEN NULL::date ELSE (btrim(addresses_src.UPD_DT))::date END AS UPD_DT,
        addresses_src.batch_id,
        addresses_src.row_id,
        addresses_src.update_ts
 FROM teva_ingestion.addresses_src
 WHERE (addresses_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'ADDRESSES'::varchar(9))));

CREATE  VIEW teva_ingestion.associates AS
 SELECT btrim(associates_src.TEVA_ID) AS TEVA_ID,
        btrim(associates_src.HR_ID) AS HR_ID,
        btrim(associates_src.CRT_USER) AS CRT_USER,
        CASE WHEN (associates_src.CRT_DT = ''::varchar) THEN NULL::date ELSE (btrim(associates_src.CRT_DT))::date END AS CRT_DT,
        btrim(associates_src.UPD_USER) AS UPD_USER,
        CASE WHEN (associates_src.UPD_DT = ''::varchar) THEN NULL::date ELSE (btrim(associates_src.UPD_DT))::date END AS UPD_DT,
        CASE WHEN (associates_src.HIRE_DT = ''::varchar) THEN NULL::date ELSE (btrim(associates_src.HIRE_DT))::date END AS HIRE_DT,
        btrim(associates_src.LOGON_ID) AS LOGON_ID,
        btrim(associates_src.REPORTS_TO) AS REPORTS_TO,
        btrim(associates_src.STAT_CD) AS STAT_CD,
        btrim(associates_src.TYPE_CD) AS TYPE_CD,
        btrim(associates_src.FULL_TIME) AS FULL_TIME,
        btrim(associates_src.EEO_CAT) AS EEO_CAT,
        btrim(associates_src.EXEMPT) AS EXEMPT,
        btrim(associates_src.EXPENSE_COST_CTR) AS EXPENSE_COST_CTR,
        CASE WHEN (associates_src.HRS_PER_WK = ''::varchar) THEN NULL::numeric(5,2) ELSE (btrim(associates_src.HRS_PER_WK))::numeric(5,2) END AS HRS_PER_WK,
        btrim(associates_src.MARITAL_STAT) AS MARITAL_STAT,
        btrim(associates_src.RACE) AS RACE,
        btrim(associates_src.SSN) AS SSN,
        btrim(associates_src.EMAIL) AS EMAIL,
        CASE WHEN (associates_src.BIRTH_DT = ''::varchar) THEN NULL::date ELSE (btrim(associates_src.BIRTH_DT))::date END AS BIRTH_DT,
        btrim(associates_src.COUNTRY_ID) AS COUNTRY_ID,
        btrim(associates_src.DFLT_CURR_ID) AS DFLT_CURR_ID,
        btrim(associates_src.TERR_ID) AS TERR_ID,
        btrim(associates_src.OFFICE) AS OFFICE,
        CASE WHEN (associates_src.PRSN_SYS_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(associates_src.PRSN_SYS_ID))::numeric(38,0) END AS PRSN_SYS_ID,
        btrim(associates_src.LANGUAGE) AS LANGUAGE,
        btrim(associates_src."POSITION") AS "POSITION",
        CASE WHEN (associates_src.TERM_DT = ''::varchar) THEN NULL::date ELSE (btrim(associates_src.TERM_DT))::date END AS TERM_DT,
        CASE WHEN (associates_src.LAST_WRK_DT = ''::varchar) THEN NULL::date ELSE (btrim(associates_src.LAST_WRK_DT))::date END AS LAST_WRK_DT,
        CASE WHEN (associates_src.AUTH_LIMIT = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(associates_src.AUTH_LIMIT))::numeric(12,2) END AS AUTH_LIMIT,
        btrim(associates_src.VEHICLE) AS VEHICLE,
        CASE WHEN (associates_src.VACATION_DAYS = ''::varchar) THEN NULL::numeric(6,3) ELSE (btrim(associates_src.VACATION_DAYS))::numeric(6,3) END AS VACATION_DAYS,
        CASE WHEN (associates_src.CHK_REQ_LIMIT = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(associates_src.CHK_REQ_LIMIT))::numeric(12,2) END AS CHK_REQ_LIMIT,
        btrim(associates_src.EXPENSE_REPORT_APPROVER) AS EXPENSE_REPORT_APPROVER,
        btrim(associates_src.LOC_CD) AS LOC_CD,
        btrim(associates_src.PAY_CD) AS PAY_CD,
        btrim(associates_src.ED_CD) AS ED_CD,
        CASE WHEN (associates_src.ED_CD_DT = ''::varchar) THEN NULL::date ELSE (btrim(associates_src.ED_CD_DT))::date END AS ED_CD_DT,
        btrim(associates_src.JOB_CD) AS JOB_CD,
        btrim(associates_src.CNTRY_CITIZENSHIP) AS CNTRY_CITIZENSHIP,
        btrim(associates_src.DISABLED) AS DISABLED,
        btrim(associates_src.VIETNAM_VET) AS VIETNAM_VET,
        btrim(associates_src.EMERGENCY_CONTACT_NAME) AS EMERGENCY_CONTACT_NAME,
        btrim(associates_src.EMERGENCY_CONTACT_RELATIONSHIP) AS EMERGENCY_CONTACT_RELATIONSHIP,
        btrim(associates_src.EMERGENCY_CONTACT_PHONE) AS EMERGENCY_CONTACT_PHONE,
        btrim(associates_src.ADP_DEPT_NUM) AS ADP_DEPT_NUM,
        CASE WHEN (associates_src.VACATION_YR = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(associates_src.VACATION_YR))::numeric(4,0) END AS VACATION_YR,
        btrim(associates_src.FIN_AUTH_COMMENTS) AS FIN_AUTH_COMMENTS,
        btrim(associates_src.EEO_CAT_HR_UPDT) AS EEO_CAT_HR_UPDT,
        btrim(associates_src.EXPENSE_REPORTING) AS EXPENSE_REPORTING,
        btrim(associates_src.COMPANY_ID) AS COMPANY_ID,
        btrim(associates_src.CHECK_REQUEST_APPROVER) AS CHECK_REQUEST_APPROVER,
        btrim(associates_src.INVOICE_APPROVER) AS INVOICE_APPROVER,
        btrim(associates_src.PHANTOM_IND) AS PHANTOM_IND,
        btrim(associates_src.PAYROLL_COST_CTR) AS PAYROLL_COST_CTR,
        btrim(associates_src.SAMPLE_AUTH) AS SAMPLE_AUTH,
        btrim(associates_src.ORACLE_STRING) AS ORACLE_STRING,
        associates_src.batch_id,
        associates_src.row_id,
        associates_src.update_ts
 FROM teva_ingestion.associates_src
 WHERE (associates_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'ASSOCIATES'::varchar(10))));

CREATE  VIEW teva_ingestion.aud_associates AS
 SELECT btrim(aud_associates_src.TEVA_ID) AS TEVA_ID,
        btrim(aud_associates_src.HR_ID) AS HR_ID,
        btrim(aud_associates_src.CRT_USER) AS CRT_USER,
        CASE WHEN (aud_associates_src.CRT_DT = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src.CRT_DT))::date END AS CRT_DT,
        btrim(aud_associates_src.UPD_USER) AS UPD_USER,
        CASE WHEN (aud_associates_src.UPD_DT = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src.UPD_DT))::date END AS UPD_DT,
        CASE WHEN (aud_associates_src.HIRE_DT = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src.HIRE_DT))::date END AS HIRE_DT,
        btrim(aud_associates_src.LOGON_ID) AS LOGON_ID,
        btrim(aud_associates_src.REPORTS_TO) AS REPORTS_TO,
        btrim(aud_associates_src.STAT_CD) AS STAT_CD,
        btrim(aud_associates_src.TYPE_CD) AS TYPE_CD,
        btrim(aud_associates_src.FULL_TIME) AS FULL_TIME,
        btrim(aud_associates_src.EEO_CAT) AS EEO_CAT,
        btrim(aud_associates_src.EXEMPT) AS EXEMPT,
        btrim(aud_associates_src.EXPENSE_COST_CTR) AS EXPENSE_COST_CTR,
        CASE WHEN (aud_associates_src.HRS_PER_WK = ''::varchar) THEN NULL::numeric(5,2) ELSE (btrim(aud_associates_src.HRS_PER_WK))::numeric(5,2) END AS HRS_PER_WK,
        btrim(aud_associates_src.MARITAL_STAT) AS MARITAL_STAT,
        btrim(aud_associates_src.RACE) AS RACE,
        btrim(aud_associates_src.SSN) AS SSN,
        btrim(aud_associates_src.EMAIL) AS EMAIL,
        CASE WHEN (aud_associates_src.BIRTH_DT = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src.BIRTH_DT))::date END AS BIRTH_DT,
        btrim(aud_associates_src.COUNTRY_ID) AS COUNTRY_ID,
        btrim(aud_associates_src.DFLT_CURR_ID) AS DFLT_CURR_ID,
        btrim(aud_associates_src.TERR_ID) AS TERR_ID,
        btrim(aud_associates_src.OFFICE) AS OFFICE,
        CASE WHEN (aud_associates_src.PRSN_SYS_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(aud_associates_src.PRSN_SYS_ID))::numeric(38,0) END AS PRSN_SYS_ID,
        btrim(aud_associates_src.LANGUAGE) AS LANGUAGE,
        btrim(aud_associates_src."POSITION") AS "POSITION",
        CASE WHEN (aud_associates_src.TERM_DT = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src.TERM_DT))::date END AS TERM_DT,
        CASE WHEN (aud_associates_src.LAST_WRK_DT = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src.LAST_WRK_DT))::date END AS LAST_WRK_DT,
        CASE WHEN (aud_associates_src.AUTH_LIMIT = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(aud_associates_src.AUTH_LIMIT))::numeric(12,2) END AS AUTH_LIMIT,
        btrim(aud_associates_src.VEHICLE) AS VEHICLE,
        CASE WHEN (aud_associates_src.VACATION_DAYS = ''::varchar) THEN NULL::numeric(6,3) ELSE (btrim(aud_associates_src.VACATION_DAYS))::numeric(6,3) END AS VACATION_DAYS,
        CASE WHEN (aud_associates_src."TIMESTAMP" = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src."TIMESTAMP"))::date END AS "TIMESTAMP",
        btrim(aud_associates_src.ACTION) AS ACTION,
        CASE WHEN (aud_associates_src.CHK_REQ_LIMIT = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(aud_associates_src.CHK_REQ_LIMIT))::numeric(12,2) END AS CHK_REQ_LIMIT,
        btrim(aud_associates_src.EXPENSE_REPORT_APPROVER) AS EXPENSE_REPORT_APPROVER,
        btrim(aud_associates_src.LOC_CD) AS LOC_CD,
        btrim(aud_associates_src.PAY_CD) AS PAY_CD,
        btrim(aud_associates_src.ED_CD) AS ED_CD,
        CASE WHEN (aud_associates_src.ED_CD_DT = ''::varchar) THEN NULL::date ELSE (btrim(aud_associates_src.ED_CD_DT))::date END AS ED_CD_DT,
        btrim(aud_associates_src.JOB_CD) AS JOB_CD,
        btrim(aud_associates_src.CNTRY_CITIZENSHIP) AS CNTRY_CITIZENSHIP,
        btrim(aud_associates_src.DISABLED) AS DISABLED,
        btrim(aud_associates_src.VIETNAM_VET) AS VIETNAM_VET,
        btrim(aud_associates_src.EMERGENCY_CONTACT_NAME) AS EMERGENCY_CONTACT_NAME,
        btrim(aud_associates_src.EMERGENCY_CONTACT_RELATIONSHIP) AS EMERGENCY_CONTACT_RELATIONSHIP,
        btrim(aud_associates_src.EMERGENCY_CONTACT_PHONE) AS EMERGENCY_CONTACT_PHONE,
        btrim(aud_associates_src.ADP_DEPT_NUM) AS ADP_DEPT_NUM,
        btrim(aud_associates_src.EEO_CAT_HR_UPDT) AS EEO_CAT_HR_UPDT,
        btrim(aud_associates_src.COMPANY_ID) AS COMPANY_ID,
        btrim(aud_associates_src.EXPENSE_REPORTING) AS EXPENSE_REPORTING,
        btrim(aud_associates_src.PHANTOM_IND) AS PHANTOM_IND,
        btrim(aud_associates_src.CHECK_REQUEST_APPROVER) AS CHECK_REQUEST_APPROVER,
        btrim(aud_associates_src.INVOICE_APPROVER) AS INVOICE_APPROVER,
        CASE WHEN (aud_associates_src.VACATION_YR = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(aud_associates_src.VACATION_YR))::numeric(4,0) END AS VACATION_YR,
        btrim(aud_associates_src.FIN_AUTH_COMMENTS) AS FIN_AUTH_COMMENTS,
        btrim(aud_associates_src.PAYROLL_COST_CTR) AS PAYROLL_COST_CTR,
        btrim(aud_associates_src.SAMPLE_AUTH) AS SAMPLE_AUTH,
        btrim(aud_associates_src.ORACLE_STRING) AS ORACLE_STRING,
        aud_associates_src.batch_id,
        aud_associates_src.row_id,
        aud_associates_src.update_ts
 FROM teva_ingestion.aud_associates_src
 WHERE (aud_associates_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'AUD_ASSOCIATES'::varchar(14))));

CREATE  VIEW teva_ingestion.c_bo_hce_alt_identifier AS
 SELECT btrim((c_bo_hce_alt_identifier_src.ROWID_OBJECT)::varchar(14)) AS ROWID_OBJECT,
        btrim(c_bo_hce_alt_identifier_src.CREATOR) AS CREATOR,
        CASE WHEN (c_bo_hce_alt_identifier_src.CREATE_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(c_bo_hce_alt_identifier_src.CREATE_DATE))::timestamp END AS CREATE_DATE,
        btrim(c_bo_hce_alt_identifier_src.UPDATED_BY) AS UPDATED_BY,
        CASE WHEN (c_bo_hce_alt_identifier_src.LAST_UPDATE_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(c_bo_hce_alt_identifier_src.LAST_UPDATE_DATE))::timestamp END AS LAST_UPDATE_DATE,
        CASE WHEN (c_bo_hce_alt_identifier_src.CONSOLIDATION_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_hce_alt_identifier_src.CONSOLIDATION_IND))::int END AS CONSOLIDATION_IND,
        CASE WHEN (c_bo_hce_alt_identifier_src.DELETED_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_hce_alt_identifier_src.DELETED_IND))::int END AS DELETED_IND,
        btrim(c_bo_hce_alt_identifier_src.DELETED_BY) AS DELETED_BY,
        CASE WHEN (c_bo_hce_alt_identifier_src.DELETED_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(c_bo_hce_alt_identifier_src.DELETED_DATE))::timestamp END AS DELETED_DATE,
        btrim((c_bo_hce_alt_identifier_src.LAST_ROWID_SYSTEM)::varchar(14)) AS LAST_ROWID_SYSTEM,
        CASE WHEN (c_bo_hce_alt_identifier_src.DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_hce_alt_identifier_src.DIRTY_IND))::int END AS DIRTY_IND,
        CASE WHEN (c_bo_hce_alt_identifier_src.INTERACTION_ID = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_hce_alt_identifier_src.INTERACTION_ID))::int END AS INTERACTION_ID,
        CASE WHEN (c_bo_hce_alt_identifier_src.HUB_STATE_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_hce_alt_identifier_src.HUB_STATE_IND))::int END AS HUB_STATE_IND,
        CASE WHEN (c_bo_hce_alt_identifier_src.CM_DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_hce_alt_identifier_src.CM_DIRTY_IND))::int END AS CM_DIRTY_IND,
        btrim((c_bo_hce_alt_identifier_src.TVCMID)::varchar(14)) AS TVCMID,
        btrim(c_bo_hce_alt_identifier_src.ALTERNATE_ID_VALUE) AS ALTERNATE_ID_VALUE,
        btrim(c_bo_hce_alt_identifier_src.ALTERNATE_ID_TYPE) AS ALTERNATE_ID_TYPE,
        btrim((c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_CODE)::varchar(1)) AS SOURCE_DEACT_REASON_CODE,
        btrim(c_bo_hce_alt_identifier_src.SOURCE_DEACT_REASON_DESC) AS SOURCE_DEACT_REASON_DESC,
        btrim(c_bo_hce_alt_identifier_src.IDENTIFIER_CAT) AS IDENTIFIER_CAT,
        btrim(c_bo_hce_alt_identifier_src.STATUS) AS STATUS,
        btrim(c_bo_hce_alt_identifier_src.STATE) AS STATE,
        c_bo_hce_alt_identifier_src.batch_id,
        c_bo_hce_alt_identifier_src.row_id,
        c_bo_hce_alt_identifier_src.update_ts
 FROM teva_ingestion.c_bo_hce_alt_identifier_src
 WHERE (c_bo_hce_alt_identifier_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'C_BO_HCE_ALT_IDENTIFIER'::varchar(23))));

CREATE  VIEW teva_ingestion.C_BO_HCE_RAW_DEA AS
 SELECT btrim((C_BO_HCE_RAW_DEA_src.ROWID_OBJECT)::varchar(14)) AS ROWID_OBJECT,
        btrim(C_BO_HCE_RAW_DEA_src.CREATOR) AS CREATOR,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.CREATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_HCE_RAW_DEA_src.CREATE_DATE))::timestamp END AS CREATE_DATE,
        btrim(C_BO_HCE_RAW_DEA_src.UPDATED_BY) AS UPDATED_BY,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.LAST_UPDATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_HCE_RAW_DEA_src.LAST_UPDATE_DATE))::timestamp END AS LAST_UPDATE_DATE,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.CONSOLIDATION_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCE_RAW_DEA_src.CONSOLIDATION_IND))::int END AS CONSOLIDATION_IND,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.DELETED_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCE_RAW_DEA_src.DELETED_IND))::int END AS DELETED_IND,
        btrim(C_BO_HCE_RAW_DEA_src.DELETED_BY) AS DELETED_BY,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.DELETED_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_HCE_RAW_DEA_src.DELETED_DATE))::timestamp END AS DELETED_DATE,
        btrim((C_BO_HCE_RAW_DEA_src.LAST_ROWID_SYSTEM)::varchar(14)) AS LAST_ROWID_SYSTEM,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCE_RAW_DEA_src.DIRTY_IND))::int END AS DIRTY_IND,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.INTERACTION_ID = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCE_RAW_DEA_src.INTERACTION_ID))::int END AS INTERACTION_ID,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.HUB_STATE_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCE_RAW_DEA_src.HUB_STATE_IND))::int END AS HUB_STATE_IND,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.CM_DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCE_RAW_DEA_src.CM_DIRTY_IND))::int END AS CM_DIRTY_IND,
        btrim((C_BO_HCE_RAW_DEA_src.TVCMID)::varchar(14)) AS TVCMID,
        btrim(C_BO_HCE_RAW_DEA_src.IMS_ID) AS IMS_ID,
        btrim(C_BO_HCE_RAW_DEA_src.DEA_NUMBER) AS DEA_NUMBER,
        btrim(C_BO_HCE_RAW_DEA_src.NAME) AS NAME,
        btrim(C_BO_HCE_RAW_DEA_src.ADDITIONAL_COMPANY_INFO) AS ADDITIONAL_COMPANY_INFO,
        btrim(C_BO_HCE_RAW_DEA_src.ADDRESS_LINE1) AS ADDRESS_LINE1,
        btrim(C_BO_HCE_RAW_DEA_src.ADDRESS_LINE2) AS ADDRESS_LINE2,
        btrim(C_BO_HCE_RAW_DEA_src.CITY) AS CITY,
        btrim(C_BO_HCE_RAW_DEA_src.STATE) AS STATE,
        btrim(C_BO_HCE_RAW_DEA_src.ZIP) AS ZIP,
        btrim((C_BO_HCE_RAW_DEA_src.BUSINESS_ACTIVITY_CODE)::varchar(1)) AS BUSINESS_ACTIVITY_CODE,
        btrim(C_BO_HCE_RAW_DEA_src.DRUG_SCHEDULES) AS DRUG_SCHEDULES,
        CASE WHEN (C_BO_HCE_RAW_DEA_src.EXPIRATION_DATE = ''::varchar) THEN NULL::date ELSE (btrim(C_BO_HCE_RAW_DEA_src.EXPIRATION_DATE))::date END AS EXPIRATION_DATE,
        btrim((C_BO_HCE_RAW_DEA_src.BUSINESS_ACTIVITY_SUB_CODE)::varchar(1)) AS BUSINESS_ACTIVITY_SUB_CODE,
        C_BO_HCE_RAW_DEA_src.batch_id,
        C_BO_HCE_RAW_DEA_src.row_id,
        C_BO_HCE_RAW_DEA_src.update_ts
 FROM teva_ingestion.C_BO_HCE_RAW_DEA_src
 WHERE (C_BO_HCE_RAW_DEA_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'C_BO_HCE_RAW_DEA'::varchar(16))));

CREATE  VIEW teva_ingestion.C_BO_HCP_DETAIL AS
 SELECT btrim((C_BO_HCP_DETAIL_src.ROWID_OBJECT)::varchar(14)) AS ROWID_OBJECT,
        btrim(C_BO_HCP_DETAIL_src.CREATOR) AS CREATOR,
        CASE WHEN (C_BO_HCP_DETAIL_src.CREATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_HCP_DETAIL_src.CREATE_DATE))::timestamp END AS CREATE_DATE,
        btrim(C_BO_HCP_DETAIL_src.UPDATED_BY) AS UPDATED_BY,
        CASE WHEN (C_BO_HCP_DETAIL_src.LAST_UPDATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_HCP_DETAIL_src.LAST_UPDATE_DATE))::timestamp END AS LAST_UPDATE_DATE,
        CASE WHEN (C_BO_HCP_DETAIL_src.CONSOLIDATION_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCP_DETAIL_src.CONSOLIDATION_IND))::int END AS CONSOLIDATION_IND,
        CASE WHEN (C_BO_HCP_DETAIL_src.DELETED_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCP_DETAIL_src.DELETED_IND))::int END AS DELETED_IND,
        btrim(C_BO_HCP_DETAIL_src.DELETED_BY) AS DELETED_BY,
        CASE WHEN (C_BO_HCP_DETAIL_src.DELETED_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_HCP_DETAIL_src.DELETED_DATE))::timestamp END AS DELETED_DATE,
        btrim((C_BO_HCP_DETAIL_src.LAST_ROWID_SYSTEM)::varchar(14)) AS LAST_ROWID_SYSTEM,
        CASE WHEN (C_BO_HCP_DETAIL_src.DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCP_DETAIL_src.DIRTY_IND))::int END AS DIRTY_IND,
        CASE WHEN (C_BO_HCP_DETAIL_src.INTERACTION_ID = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCP_DETAIL_src.INTERACTION_ID))::int END AS INTERACTION_ID,
        CASE WHEN (C_BO_HCP_DETAIL_src.HUB_STATE_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCP_DETAIL_src.HUB_STATE_IND))::int END AS HUB_STATE_IND,
        CASE WHEN (C_BO_HCP_DETAIL_src.CM_DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_HCP_DETAIL_src.CM_DIRTY_IND))::int END AS CM_DIRTY_IND,
        btrim((C_BO_HCP_DETAIL_src.TVCMID)::varchar(14)) AS TVCMID,
        btrim(C_BO_HCP_DETAIL_src.IMS_PRESCRIBER_ID) AS IMS_PRESCRIBER_ID,
        btrim(C_BO_HCP_DETAIL_src.PREFIX) AS PREFIX,
        btrim(C_BO_HCP_DETAIL_src.FIRST_NAME) AS FIRST_NAME,
        btrim(C_BO_HCP_DETAIL_src.LAST_NAME) AS LAST_NAME,
        btrim(C_BO_HCP_DETAIL_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(C_BO_HCP_DETAIL_src.SUFFIX) AS SUFFIX,
        btrim(C_BO_HCP_DETAIL_src.HEALTHCARE_PROF_STATUS_CD) AS HEALTHCARE_PROF_STATUS_CD,
        CASE WHEN (C_BO_HCP_DETAIL_src.YEAR_OF_BIRTH = ''::varchar) THEN NULL::date ELSE (btrim(C_BO_HCP_DETAIL_src.YEAR_OF_BIRTH))::date END AS YEAR_OF_BIRTH,
        CASE WHEN (C_BO_HCP_DETAIL_src.DATE_OF_DEATH = ''::varchar) THEN NULL::date ELSE (btrim(C_BO_HCP_DETAIL_src.DATE_OF_DEATH))::date END AS DATE_OF_DEATH,
        btrim(C_BO_HCP_DETAIL_src.GENDER_CODE) AS GENDER_CODE,
        btrim(C_BO_HCP_DETAIL_src.TEVA_SPECIALTY_CODE) AS TEVA_SPECIALTY_CODE,
        C_BO_HCP_DETAIL_src.batch_id,
        C_BO_HCP_DETAIL_src.row_id,
        C_BO_HCP_DETAIL_src.update_ts
 FROM teva_ingestion.C_BO_HCP_DETAIL_src
 WHERE (C_BO_HCP_DETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'C_BO_HCP_DETAIL'::varchar(15))));

CREATE  VIEW teva_ingestion.C_BO_IMS_FLAG AS
 SELECT btrim((C_BO_IMS_FLAG_src.ROWID_OBJECT)::varchar(14)) AS ROWID_OBJECT,
        btrim(C_BO_IMS_FLAG_src.CREATOR) AS CREATOR,
        CASE WHEN (C_BO_IMS_FLAG_src.CREATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_IMS_FLAG_src.CREATE_DATE))::timestamp END AS CREATE_DATE,
        btrim(C_BO_IMS_FLAG_src.UPDATED_BY) AS UPDATED_BY,
        CASE WHEN (C_BO_IMS_FLAG_src.LAST_UPDATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_IMS_FLAG_src.LAST_UPDATE_DATE))::timestamp END AS LAST_UPDATE_DATE,
        CASE WHEN (C_BO_IMS_FLAG_src.CONSOLIDATION_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_IMS_FLAG_src.CONSOLIDATION_IND))::int END AS CONSOLIDATION_IND,
        CASE WHEN (C_BO_IMS_FLAG_src.DELETED_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_IMS_FLAG_src.DELETED_IND))::int END AS DELETED_IND,
        btrim(C_BO_IMS_FLAG_src.DELETED_BY) AS DELETED_BY,
        CASE WHEN (C_BO_IMS_FLAG_src.DELETED_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_IMS_FLAG_src.DELETED_DATE))::timestamp END AS DELETED_DATE,
        btrim((C_BO_IMS_FLAG_src.LAST_ROWID_SYSTEM)::varchar(14)) AS LAST_ROWID_SYSTEM,
        CASE WHEN (C_BO_IMS_FLAG_src.DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_IMS_FLAG_src.DIRTY_IND))::int END AS DIRTY_IND,
        CASE WHEN (C_BO_IMS_FLAG_src.INTERACTION_ID = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_IMS_FLAG_src.INTERACTION_ID))::int END AS INTERACTION_ID,
        CASE WHEN (C_BO_IMS_FLAG_src.HUB_STATE_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_IMS_FLAG_src.HUB_STATE_IND))::int END AS HUB_STATE_IND,
        CASE WHEN (C_BO_IMS_FLAG_src.CM_DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_IMS_FLAG_src.CM_DIRTY_IND))::int END AS CM_DIRTY_IND,
        btrim(C_BO_IMS_FLAG_src.FLAG_TYPE) AS FLAG_TYPE,
        btrim((C_BO_IMS_FLAG_src.FLAG_VALUE)::varchar(1)) AS FLAG_VALUE,
        CASE WHEN (C_BO_IMS_FLAG_src.EFFECTIVE_DATE = ''::varchar) THEN NULL::date ELSE (btrim(C_BO_IMS_FLAG_src.EFFECTIVE_DATE))::date END AS EFFECTIVE_DATE,
        btrim((C_BO_IMS_FLAG_src.HCP_DETAIL_ID)::varchar(14)) AS HCP_DETAIL_ID,
        C_BO_IMS_FLAG_src.batch_id,
        C_BO_IMS_FLAG_src.row_id,
        C_BO_IMS_FLAG_src.update_ts
 FROM teva_ingestion.C_BO_IMS_FLAG_src
 WHERE (C_BO_IMS_FLAG_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'C_BO_IMS_FLAG'::varchar(13))));

CREATE  VIEW teva_ingestion.C_BO_TEVA_FLAG AS
 SELECT btrim((C_BO_TEVA_FLAG_src.ROWID_OBJECT)::varchar(14)) AS ROWID_OBJECT,
        btrim(C_BO_TEVA_FLAG_src.CREATOR) AS CREATOR,
        CASE WHEN (C_BO_TEVA_FLAG_src.CREATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_TEVA_FLAG_src.CREATE_DATE))::timestamp END AS CREATE_DATE,
        btrim(C_BO_TEVA_FLAG_src.UPDATED_BY) AS UPDATED_BY,
        CASE WHEN (C_BO_TEVA_FLAG_src.LAST_UPDATE_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_TEVA_FLAG_src.LAST_UPDATE_DATE))::timestamp END AS LAST_UPDATE_DATE,
        CASE WHEN (C_BO_TEVA_FLAG_src.CONSOLIDATION_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_TEVA_FLAG_src.CONSOLIDATION_IND))::int END AS CONSOLIDATION_IND,
        CASE WHEN (C_BO_TEVA_FLAG_src.DELETED_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_TEVA_FLAG_src.DELETED_IND))::int END AS DELETED_IND,
        btrim(C_BO_TEVA_FLAG_src.DELETED_BY) AS DELETED_BY,
        CASE WHEN (C_BO_TEVA_FLAG_src.DELETED_DATE = ''::varchar) THEN NULL::timestamp(6) ELSE (btrim(C_BO_TEVA_FLAG_src.DELETED_DATE))::timestamp END AS DELETED_DATE,
        btrim((C_BO_TEVA_FLAG_src.LAST_ROWID_SYSTEM)::varchar(14)) AS LAST_ROWID_SYSTEM,
        CASE WHEN (C_BO_TEVA_FLAG_src.DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_TEVA_FLAG_src.DIRTY_IND))::int END AS DIRTY_IND,
        CASE WHEN (C_BO_TEVA_FLAG_src.INTERACTION_ID = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_TEVA_FLAG_src.INTERACTION_ID))::int END AS INTERACTION_ID,
        CASE WHEN (C_BO_TEVA_FLAG_src.HUB_STATE_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_TEVA_FLAG_src.HUB_STATE_IND))::int END AS HUB_STATE_IND,
        CASE WHEN (C_BO_TEVA_FLAG_src.CM_DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(C_BO_TEVA_FLAG_src.CM_DIRTY_IND))::int END AS CM_DIRTY_IND,
        btrim(C_BO_TEVA_FLAG_src.FLAG_TYPE) AS FLAG_TYPE,
        btrim(C_BO_TEVA_FLAG_src.FLAG_VALUE) AS FLAG_VALUE,
        CASE WHEN (C_BO_TEVA_FLAG_src.EFFECTIVE_DATE = ''::varchar) THEN NULL::date ELSE (btrim(C_BO_TEVA_FLAG_src.EFFECTIVE_DATE))::date END AS EFFECTIVE_DATE,
        btrim((C_BO_TEVA_FLAG_src.HCP_DETAIL_ID)::varchar(14)) AS HCP_DETAIL_ID,
        C_BO_TEVA_FLAG_src.batch_id,
        C_BO_TEVA_FLAG_src.row_id,
        C_BO_TEVA_FLAG_src.update_ts
 FROM teva_ingestion.C_BO_TEVA_FLAG_src
 WHERE (C_BO_TEVA_FLAG_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'C_BO_TEVA_FLAG'::varchar(14))));

CREATE  VIEW teva_ingestion.c_bo_teva_sample_elig AS
 SELECT btrim((c_bo_teva_sample_elig_src.ROWID_OBJECT)::varchar(14)) AS ROWID_OBJECT,
        btrim(c_bo_teva_sample_elig_src.CREATOR) AS CREATOR,
        CASE WHEN (c_bo_teva_sample_elig_src.CREATE_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(c_bo_teva_sample_elig_src.CREATE_DATE))::timestamp END AS CREATE_DATE,
        btrim(c_bo_teva_sample_elig_src.UPDATED_BY) AS UPDATED_BY,
        CASE WHEN (c_bo_teva_sample_elig_src.LAST_UPDATE_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(c_bo_teva_sample_elig_src.LAST_UPDATE_DATE))::timestamp END AS LAST_UPDATE_DATE,
        CASE WHEN (c_bo_teva_sample_elig_src.CONSOLIDATION_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_teva_sample_elig_src.CONSOLIDATION_IND))::int END AS CONSOLIDATION_IND,
        CASE WHEN (c_bo_teva_sample_elig_src.DELETED_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_teva_sample_elig_src.DELETED_IND))::int END AS DELETED_IND,
        btrim(c_bo_teva_sample_elig_src.DELETED_BY) AS DELETED_BY,
        CASE WHEN (c_bo_teva_sample_elig_src.DELETED_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(c_bo_teva_sample_elig_src.DELETED_DATE))::timestamp END AS DELETED_DATE,
        btrim((c_bo_teva_sample_elig_src.LAST_ROWID_SYSTEM)::varchar(14)) AS LAST_ROWID_SYSTEM,
        CASE WHEN (c_bo_teva_sample_elig_src.DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_teva_sample_elig_src.DIRTY_IND))::int END AS DIRTY_IND,
        CASE WHEN (c_bo_teva_sample_elig_src.INTERACTION_ID = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_teva_sample_elig_src.INTERACTION_ID))::int END AS INTERACTION_ID,
        CASE WHEN (c_bo_teva_sample_elig_src.HUB_STATE_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_teva_sample_elig_src.HUB_STATE_IND))::int END AS HUB_STATE_IND,
        CASE WHEN (c_bo_teva_sample_elig_src.CM_DIRTY_IND = ''::varchar) THEN NULL::int ELSE (btrim(c_bo_teva_sample_elig_src.CM_DIRTY_IND))::int END AS CM_DIRTY_IND,
        btrim((c_bo_teva_sample_elig_src.TVCMID)::varchar(14)) AS TVCMID,
        btrim(c_bo_teva_sample_elig_src.CERTIFICATION_DESC) AS CERTIFICATION_DESC,
        btrim(c_bo_teva_sample_elig_src.SLN) AS SLN,
        btrim(c_bo_teva_sample_elig_src.SLN_STATE) AS SLN_STATE,
        CASE WHEN (c_bo_teva_sample_elig_src.SLN_EXPIRATION_DATE = ''::varchar) THEN NULL::date ELSE (btrim(c_bo_teva_sample_elig_src.SLN_EXPIRATION_DATE))::date END AS SLN_EXPIRATION_DATE,
        btrim(c_bo_teva_sample_elig_src.SLN_STATUS_CODE) AS SLN_STATUS_CODE,
        btrim(c_bo_teva_sample_elig_src.SLN_STATUS_DESC) AS SLN_STATUS_DESC,
        btrim(c_bo_teva_sample_elig_src.TEVA_SAMPLE_ELIG_FLAG) AS TEVA_SAMPLE_ELIG_FLAG,
        btrim(c_bo_teva_sample_elig_src.TEVA_SCHED_IV_ELIG_FLAG) AS TEVA_SCHED_IV_ELIG_FLAG,
        btrim(c_bo_teva_sample_elig_src.TEVA_SCHED_V_ELIG_FLAG) AS TEVA_SCHED_V_ELIG_FLAG,
        btrim(c_bo_teva_sample_elig_src.PROFESSION_SHORT_DESC) AS PROFESSION_SHORT_DESC,
        btrim(c_bo_teva_sample_elig_src.TEVA_SPECIALTY_CODE) AS TEVA_SPECIALTY_CODE,
        btrim(c_bo_teva_sample_elig_src.CERTIFICATION_CODE) AS CERTIFICATION_CODE,
        c_bo_teva_sample_elig_src.batch_id,
        c_bo_teva_sample_elig_src.row_id,
        c_bo_teva_sample_elig_src.update_ts
 FROM teva_ingestion.c_bo_teva_sample_elig_src
 WHERE (c_bo_teva_sample_elig_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'C_BO_TEVA_SAMPLE_ELIG'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_AHM_EVENT_ATTENDEE AS
 SELECT btrim(EXT_AHM_EVENT_ATTENDEE_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.EVENT_NUMBER) AS EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.EMPLOYEE_ID) AS EMPLOYEE_ID,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.CUSTOMER_ID) AS CUSTOMER_ID,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ID) AS ATTENDEE_ID,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_LAST_NAME) AS ATTENDEE_LAST_NAME,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_FIRST_NAME) AS ATTENDEE_FIRST_NAME,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_MIDDLE_NAME) AS ATTENDEE_MIDDLE_NAME,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_TITLE) AS ATTENDEE_TITLE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_SPECIALTY) AS ATTENDEE_SPECIALTY,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_DEGREE) AS ATTENDEE_DEGREE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_1) AS ATTENDEE_ADDRESS_LINE_1,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_2) AS ATTENDEE_ADDRESS_LINE_2,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_3) AS ATTENDEE_ADDRESS_LINE_3,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_ADDRESS_LINE_4) AS ATTENDEE_ADDRESS_LINE_4,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_CITY) AS ATTENDEE_CITY,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_STATE_PROVINCE) AS ATTENDEE_STATE_PROVINCE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_POSTAL_CODE) AS ATTENDEE_POSTAL_CODE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_POSTAL_EXTENDED_CODE) AS ATTENDEE_POSTAL_EXTENDED_CODE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_COUNTRY_CODE) AS ATTENDEE_COUNTRY_CODE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_PHONE) AS ATTENDEE_PHONE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_FAX) AS ATTENDEE_FAX,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_EMAIL) AS ATTENDEE_EMAIL,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.DEA_NUMBER) AS DEA_NUMBER,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.IMS_NUMBER) AS IMS_NUMBER,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ME_NUMBER) AS ME_NUMBER,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.NPI_NUMBER) AS NPI_NUMBER,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDEE_CATEGORY_CODE) AS ATTENDEE_CATEGORY_CODE,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.ATTENDED) AS ATTENDED,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.MEAL) AS MEAL,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.NON_HCP_COUNT) AS NON_HCP_COUNT,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.OTHER_HCP_COUNT) AS OTHER_HCP_COUNT,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_EVENT_ATTENDEE_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_EVENT_ATTENDEE_src.batch_id,
        EXT_AHM_EVENT_ATTENDEE_src.row_id,
        EXT_AHM_EVENT_ATTENDEE_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_ATTENDEE_src
 WHERE (EXT_AHM_EVENT_ATTENDEE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_EVENT_ATTENDEE'::varchar(22))));

CREATE  VIEW teva_ingestion.EXT_AHM_EVENT_EXPENSE AS
 SELECT btrim(EXT_AHM_EVENT_EXPENSE_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_EVENT_EXPENSE_src.EVENT_NUMBER) AS EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_EXPENSE_src.PAYMENT_ID) AS PAYMENT_ID,
        btrim(EXT_AHM_EVENT_EXPENSE_src.EXPENSE_CATEGORY) AS EXPENSE_CATEGORY,
        CASE WHEN (EXT_AHM_EVENT_EXPENSE_src.AMOUNT = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_AHM_EVENT_EXPENSE_src.AMOUNT))::numeric(10,2) END AS AMOUNT,
        btrim(EXT_AHM_EVENT_EXPENSE_src.REMIT_TO_ID) AS REMIT_TO_ID,
        btrim(EXT_AHM_EVENT_EXPENSE_src.RECIPIENT_ID) AS RECIPIENT_ID,
        btrim(EXT_AHM_EVENT_EXPENSE_src.CHECK_NUMBER) AS CHECK_NUMBER,
        CASE WHEN (EXT_AHM_EVENT_EXPENSE_src.CHECK_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AHM_EVENT_EXPENSE_src.CHECK_DATE))::timestamp END AS CHECK_DATE,
        btrim(EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_EVENT_EXPENSE_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_EVENT_EXPENSE_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_EVENT_EXPENSE_src.batch_id,
        EXT_AHM_EVENT_EXPENSE_src.row_id,
        EXT_AHM_EVENT_EXPENSE_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_EXPENSE_src
 WHERE (EXT_AHM_EVENT_EXPENSE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_EVENT_EXPENSE'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_AHM_EVENT_HOST AS
 SELECT btrim(EXT_AHM_EVENT_HOST_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_EVENT_HOST_src.EVENT_NUMBER) AS EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_HOST_src.EMPLOYEE_ID) AS EMPLOYEE_ID,
        btrim(EXT_AHM_EVENT_HOST_src.TERRITORY) AS TERRITORY,
        btrim(EXT_AHM_EVENT_HOST_src.ORDINAL) AS ORDINAL,
        btrim(EXT_AHM_EVENT_HOST_src.BUDGET_PERCENT) AS BUDGET_PERCENT,
        btrim(EXT_AHM_EVENT_HOST_src.BUDGET_POOL) AS BUDGET_POOL,
        btrim(EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_EVENT_HOST_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_EVENT_HOST_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_EVENT_HOST_src.batch_id,
        EXT_AHM_EVENT_HOST_src.row_id,
        EXT_AHM_EVENT_HOST_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_HOST_src
 WHERE (EXT_AHM_EVENT_HOST_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_EVENT_HOST'::varchar(18))));

CREATE  VIEW teva_ingestion.EXT_AHM_EVENT_PRODUCT AS
 SELECT btrim(EXT_AHM_EVENT_PRODUCT_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_EVENT_PRODUCT_src.EVENT_NUMBER) AS EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_PRODUCT_src.PRODUCT_ID) AS PRODUCT_ID,
        btrim(EXT_AHM_EVENT_PRODUCT_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_AHM_EVENT_PRODUCT_src.TOPIC_ID) AS TOPIC_ID,
        btrim(EXT_AHM_EVENT_PRODUCT_src.TOPIC_NAME) AS TOPIC_NAME,
        btrim(EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_EVENT_PRODUCT_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_EVENT_PRODUCT_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_EVENT_PRODUCT_src.batch_id,
        EXT_AHM_EVENT_PRODUCT_src.row_id,
        EXT_AHM_EVENT_PRODUCT_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_PRODUCT_src
 WHERE (EXT_AHM_EVENT_PRODUCT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_EVENT_PRODUCT'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_AHM_EVENT_SPEAKER AS
 SELECT btrim(EXT_AHM_EVENT_SPEAKER_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_EVENT_SPEAKER_src.EVENT_NUMBER) AS EVENT_NUMBER,
        btrim(EXT_AHM_EVENT_SPEAKER_src.EVENT_SPEAKER_STATUS) AS EVENT_SPEAKER_STATUS,
        btrim(EXT_AHM_EVENT_SPEAKER_src.SPEAKER_ID) AS SPEAKER_ID,
        btrim(EXT_AHM_EVENT_SPEAKER_src.PRODUCT_ID) AS PRODUCT_ID,
        btrim(EXT_AHM_EVENT_SPEAKER_src.TOPIC_ID) AS TOPIC_ID,
        btrim(EXT_AHM_EVENT_SPEAKER_src.CANCELLATION_REASON) AS CANCELLATION_REASON,
        btrim(EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_EVENT_SPEAKER_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_EVENT_SPEAKER_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_EVENT_SPEAKER_src.batch_id,
        EXT_AHM_EVENT_SPEAKER_src.row_id,
        EXT_AHM_EVENT_SPEAKER_src.update_ts
 FROM teva_ingestion.EXT_AHM_EVENT_SPEAKER_src
 WHERE (EXT_AHM_EVENT_SPEAKER_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_EVENT_SPEAKER'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_AHM_ORGANIZATION AS
 SELECT btrim(EXT_AHM_ORGANIZATION_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_ORGANIZATION_src.AHM_ORG_ID) AS AHM_ORG_ID,
        btrim(EXT_AHM_ORGANIZATION_src.NAME) AS NAME,
        btrim(EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_1) AS ADDRESS_LINE_1,
        btrim(EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_2) AS ADDRESS_LINE_2,
        btrim(EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_3) AS ADDRESS_LINE_3,
        btrim(EXT_AHM_ORGANIZATION_src.ADDRESS_LINE_4) AS ADDRESS_LINE_4,
        btrim(EXT_AHM_ORGANIZATION_src.CITY) AS CITY,
        btrim(EXT_AHM_ORGANIZATION_src.STATE_PROVINCE) AS STATE_PROVINCE,
        btrim(EXT_AHM_ORGANIZATION_src.POSTAL_CODE) AS POSTAL_CODE,
        btrim(EXT_AHM_ORGANIZATION_src.POSTAL_EXTENDED_CODE) AS POSTAL_EXTENDED_CODE,
        btrim(EXT_AHM_ORGANIZATION_src.COUNTRY_CODE) AS COUNTRY_CODE,
        btrim(EXT_AHM_ORGANIZATION_src.PHONE) AS PHONE,
        btrim(EXT_AHM_ORGANIZATION_src.FAX) AS FAX,
        btrim(EXT_AHM_ORGANIZATION_src.EMAIL) AS EMAIL,
        btrim(EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_ORGANIZATION_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_ORGANIZATION_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_ORGANIZATION_src.batch_id,
        EXT_AHM_ORGANIZATION_src.row_id,
        EXT_AHM_ORGANIZATION_src.update_ts
 FROM teva_ingestion.EXT_AHM_ORGANIZATION_src
 WHERE (EXT_AHM_ORGANIZATION_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_ORGANIZATION'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_AHM_SPEAKER_CONTRACT AS
 SELECT btrim(EXT_AHM_SPEAKER_CONTRACT_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.SPEAKER_ID) AS SPEAKER_ID,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_TYPE_CODE) AS CONTRACT_TYPE_CODE,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_TYPE_NAME) AS CONTRACT_TYPE_NAME,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_EFFECTIVE_DATE) AS CONTRACT_EFFECTIVE_DATE,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_EXPIRATION_DATE) AS CONTRACT_EXPIRATION_DATE,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CONTRACT_SIGNED_DATE) AS CONTRACT_SIGNED_DATE,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_SPEAKER_CONTRACT_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_SPEAKER_CONTRACT_src.batch_id,
        EXT_AHM_SPEAKER_CONTRACT_src.row_id,
        EXT_AHM_SPEAKER_CONTRACT_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_CONTRACT_src
 WHERE (EXT_AHM_SPEAKER_CONTRACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_SPEAKER_CONTRACT'::varchar(24))));

CREATE  VIEW teva_ingestion.EXT_AHM_SPEAKER_LICENSE AS
 SELECT btrim(EXT_AHM_SPEAKER_LICENSE_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.SPEAKER_ID) AS SPEAKER_ID,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.STATE_CODE) AS STATE_CODE,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_NUMBER) AS STATE_LICENSE_NUMBER,
        CASE WHEN (EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_EFFECTIVE_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_EFFECTIVE_DATE))::timestamp END AS STATE_LICENSE_EFFECTIVE_DATE,
        CASE WHEN (EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_EXPIRATION_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AHM_SPEAKER_LICENSE_src.STATE_LICENSE_EXPIRATION_DATE))::timestamp END AS STATE_LICENSE_EXPIRATION_DATE,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.DEBARMENT_INDICATOR) AS DEBARMENT_INDICATOR,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_SPEAKER_LICENSE_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_SPEAKER_LICENSE_src.batch_id,
        EXT_AHM_SPEAKER_LICENSE_src.row_id,
        EXT_AHM_SPEAKER_LICENSE_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_LICENSE_src
 WHERE (EXT_AHM_SPEAKER_LICENSE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_SPEAKER_LICENSE'::varchar(23))));

CREATE  VIEW teva_ingestion.EXT_AHM_SPEAKER_PROFILE AS
 SELECT btrim(EXT_AHM_SPEAKER_PROFILE_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.SPEAKER_ID) AS SPEAKER_ID,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.TITLE) AS TITLE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_1) AS ADDRESS_LINE_1,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_2) AS ADDRESS_LINE_2,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_3) AS ADDRESS_LINE_3,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.ADDRESS_LINE_4) AS ADDRESS_LINE_4,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CITY) AS CITY,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.STATE_PROVINCE) AS STATE_PROVINCE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.POSTAL_CODE) AS POSTAL_CODE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.POSTAL_EXTENDED_CODE) AS POSTAL_EXTENDED_CODE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.COUNTRY_CODE) AS COUNTRY_CODE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.BUSINESS_PHONE) AS BUSINESS_PHONE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.BUSINESS_PHONE_EXTENSION) AS BUSINESS_PHONE_EXTENSION,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.HOME_PHONE) AS HOME_PHONE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.MOBILE_PHONE) AS MOBILE_PHONE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.BUSINESS_FAX) AS BUSINESS_FAX,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.HOME_FAX) AS HOME_FAX,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.EMAIL) AS EMAIL,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.PERSONAL_SUFFIX) AS PERSONAL_SUFFIX,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.DEGREE) AS DEGREE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.ME_NUMBER) AS ME_NUMBER,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.IMS_NUMBER) AS IMS_NUMBER,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.DEA_NUMBER) AS DEA_NUMBER,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.NPI_NUMBER) AS NPI_NUMBER,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CLINICAL_AFFILIATION) AS CLINICAL_AFFILIATION,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CLINICAL_TITLE) AS CLINICAL_TITLE,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.ACADEMIC_AFFILIATION) AS ACADEMIC_AFFILIATION,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.OTHER_AFFILIATION) AS OTHER_AFFILIATION,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.FEDERAL_EMPLOYEE_INDICATOR) AS FEDERAL_EMPLOYEE_INDICATOR,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.STATE_EMPLOYEE_INDICATOR) AS STATE_EMPLOYEE_INDICATOR,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.LOCAL_EMPLOYEE_INDICATOR) AS LOCAL_EMPLOYEE_INDICATOR,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.FDA_DEBARMENT_INDICATOR) AS FDA_DEBARMENT_INDICATOR,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.OFAC_DEBARMENT_INDICATOR) AS OFAC_DEBARMENT_INDICATOR,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.OIG_EXCLUSION_INDICATOR) AS OIG_EXCLUSION_INDICATOR,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.SPEAKER_BIOGRAPHY) AS SPEAKER_BIOGRAPHY,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_SPEAKER_PROFILE_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_SPEAKER_PROFILE_src.batch_id,
        EXT_AHM_SPEAKER_PROFILE_src.row_id,
        EXT_AHM_SPEAKER_PROFILE_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_PROFILE_src
 WHERE (EXT_AHM_SPEAKER_PROFILE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_SPEAKER_PROFILE'::varchar(23))));

CREATE  VIEW teva_ingestion.EXT_AHM_SPEAKER_TRAINING AS
 SELECT btrim(EXT_AHM_SPEAKER_TRAINING_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.SPEAKER_ID) AS SPEAKER_ID,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.TOPIC_ID) AS TOPIC_ID,
        CASE WHEN (EXT_AHM_SPEAKER_TRAINING_src.EFFECTIVE_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AHM_SPEAKER_TRAINING_src.EFFECTIVE_DATE))::timestamp END AS EFFECTIVE_DATE,
        CASE WHEN (EXT_AHM_SPEAKER_TRAINING_src.EXPIRATION_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AHM_SPEAKER_TRAINING_src.EXPIRATION_DATE))::timestamp END AS EXPIRATION_DATE,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_SPEAKER_TRAINING_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_SPEAKER_TRAINING_src.batch_id,
        EXT_AHM_SPEAKER_TRAINING_src.row_id,
        EXT_AHM_SPEAKER_TRAINING_src.update_ts
 FROM teva_ingestion.EXT_AHM_SPEAKER_TRAINING_src
 WHERE (EXT_AHM_SPEAKER_TRAINING_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_SPEAKER_TRAINING'::varchar(24))));

CREATE  VIEW teva_ingestion.EXT_AHM_TOPIC_PRODUCT AS
 SELECT btrim(EXT_AHM_TOPIC_PRODUCT_src.SOURCE_SYSTEM_NAME) AS SOURCE_SYSTEM_NAME,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.TOPIC_ID) AS TOPIC_ID,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.TOPIC_NAME) AS TOPIC_NAME,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.PRODUCT_ID) AS PRODUCT_ID,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_AHM_TOPIC_PRODUCT_src.EFFECTIVE_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AHM_TOPIC_PRODUCT_src.EFFECTIVE_DATE))::timestamp END AS EFFECTIVE_DATE,
        CASE WHEN (EXT_AHM_TOPIC_PRODUCT_src.EXPIRATION_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AHM_TOPIC_PRODUCT_src.EXPIRATION_DATE))::timestamp END AS EXPIRATION_DATE,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_1) AS CUSTOM_FIELD_1,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_2) AS CUSTOM_FIELD_2,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_3) AS CUSTOM_FIELD_3,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_4) AS CUSTOM_FIELD_4,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.CUSTOM_FIELD_5) AS CUSTOM_FIELD_5,
        btrim(EXT_AHM_TOPIC_PRODUCT_src.REC_STAT_CD) AS REC_STAT_CD,
        EXT_AHM_TOPIC_PRODUCT_src.batch_id,
        EXT_AHM_TOPIC_PRODUCT_src.row_id,
        EXT_AHM_TOPIC_PRODUCT_src.update_ts
 FROM teva_ingestion.EXT_AHM_TOPIC_PRODUCT_src
 WHERE (EXT_AHM_TOPIC_PRODUCT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_AHM_TOPIC_PRODUCT'::varchar(21))));

CREATE  VIEW teva_ingestion.ext_anda_sales AS
 SELECT btrim(EXT_ANDA_SALES_src.TRANSACTION_ID) AS TRANSACTION_ID,
        btrim(EXT_ANDA_SALES_src.INVOICE_DATE) AS INVOICE_DATE,
        btrim(EXT_ANDA_SALES_src.PRODUCT_BRAND) AS PRODUCT_BRAND,
        btrim(EXT_ANDA_SALES_src.PRODUCT_NDC) AS PRODUCT_NDC,
        btrim(EXT_ANDA_SALES_src.PRODUCT_DESC) AS PRODUCT_DESC,
        CASE WHEN (EXT_ANDA_SALES_src.INVOICE_QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ANDA_SALES_src.INVOICE_QTY))::numeric(37,15) END AS INVOICE_QTY,
        CASE WHEN (EXT_ANDA_SALES_src.INVOICE_UNITS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ANDA_SALES_src.INVOICE_UNITS))::numeric(37,15) END AS INVOICE_UNITS,
        CASE WHEN (EXT_ANDA_SALES_src.INVOICE_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ANDA_SALES_src.INVOICE_COST))::numeric(37,15) END AS INVOICE_COST,
        CASE WHEN (EXT_ANDA_SALES_src.INVOICE_PACK_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ANDA_SALES_src.INVOICE_PACK_COST))::numeric(37,15) END AS INVOICE_PACK_COST,
        CASE WHEN (EXT_ANDA_SALES_src.INVOICE_UNIT_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ANDA_SALES_src.INVOICE_UNIT_COST))::numeric(37,15) END AS INVOICE_UNIT_COST,
        CASE WHEN (EXT_ANDA_SALES_src.CONTRACT_PACK_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ANDA_SALES_src.CONTRACT_PACK_COST))::numeric(37,15) END AS CONTRACT_PACK_COST,
        CASE WHEN (EXT_ANDA_SALES_src.CONTRACT_PURCHASES = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ANDA_SALES_src.CONTRACT_PURCHASES))::numeric(37,15) END AS CONTRACT_PURCHASES,
        btrim(EXT_ANDA_SALES_src.CONTRACT_NUMBER) AS CONTRACT_NUMBER,
        btrim(EXT_ANDA_SALES_src.DISPENSING_LOCATION) AS DISPENSING_LOCATION,
        btrim(EXT_ANDA_SALES_src.DL_ADDRESS_1) AS DL_ADDRESS_1,
        btrim(EXT_ANDA_SALES_src.DL_ADDRESS_2) AS DL_ADDRESS_2,
        btrim(EXT_ANDA_SALES_src.DL_CITY) AS DL_CITY,
        btrim(EXT_ANDA_SALES_src.DL_STATE) AS DL_STATE,
        btrim(EXT_ANDA_SALES_src.DL_ZIP) AS DL_ZIP,
        btrim(EXT_ANDA_SALES_src.DL_DEA_NUM) AS DL_DEA_NUM,
        btrim(EXT_ANDA_SALES_src.DEPOT_LOCATION) AS DEPOT_LOCATION,
        btrim(EXT_ANDA_SALES_src.DEP_ADDRESS_1) AS DEP_ADDRESS_1,
        btrim(EXT_ANDA_SALES_src.DEP_ADDRESS_2) AS DEP_ADDRESS_2,
        btrim(EXT_ANDA_SALES_src.DEP_CITY) AS DEP_CITY,
        btrim(EXT_ANDA_SALES_src.DEP_STATE) AS DEP_STATE,
        btrim(EXT_ANDA_SALES_src.DEP_ZIP) AS DEP_ZIP,
        btrim(EXT_ANDA_SALES_src.DEP_DEA_NUM) AS DEP_DEA_NUM,
        EXT_ANDA_SALES_src.batch_id,
        EXT_ANDA_SALES_src.row_id,
        EXT_ANDA_SALES_src.update_ts
 FROM teva_ingestion.EXT_ANDA_SALES_src
 WHERE (EXT_ANDA_SALES_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ANDA_SALES'::varchar(14))));

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY AS
 SELECT btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.TRANS_TYPE) AS TRANS_TYPE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.ORIG_ASI_TXN_ID) AS ORIG_ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.RX_NUM) AS RX_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.RX_DATE) AS RX_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.DATE_WRITTEN) AS DATE_WRITTEN,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_src.DAYS_SUPPLY = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.DAYS_SUPPLY))::int END AS DAYS_SUPPLY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.NDC_CODE) AS NDC_CODE,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_src.DAW = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.DAW))::int END AS DAW,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.DRUG_NAME) AS DRUG_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.DRUG_DESC) AS DRUG_DESC,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_src.NEW_REFILL = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.NEW_REFILL))::int END AS NEW_REFILL,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_src.REFILLS = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.REFILLS))::int END AS REFILLS,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_src.OTHER_COVERAGE_CODE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.OTHER_COVERAGE_CODE))::int END AS OTHER_COVERAGE_CODE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.GROUP_NUM) AS GROUP_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.COUPON_NUM) AS COUPON_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.SEX) AS SEX,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.AGE_AT_REDEMPTION) AS AGE_AT_REDEMPTION,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_PROCESS_DATE) AS PHARMACY_PROCESS_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_CHAIN_NUM) AS PHARMACY_CHAIN_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.NABP) AS NABP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_CHAIN) AS PHARMACY_CHAIN,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_ADDRESS) AS PHARMACY_ADDRESS,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_ADDRESS2) AS PHARMACY_ADDRESS2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_PHONE) AS PHARMACY_PHONE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_NPI_NUM) AS PHARMACY_NPI_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PRINCIPLE_PHYS_DEA_NUM) AS PRINCIPLE_PHYS_DEA_NUM,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_src.PHYS_NPI = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHYS_NPI))::int END AS PHYS_NPI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHYSICIAN_NAME) AS PHYSICIAN_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_ADDRESS1) AS ASI_PHYS_ADDRESS1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_ADDRESS2) AS ASI_PHYS_ADDRESS2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_CITY) AS ASI_PHYS_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_STATE) AS ASI_PHYS_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.ASI_PHYS_ZIP) AS ASI_PHYS_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.REBATE_AMOUNT) AS REBATE_AMOUNT,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.MEMBER_CASH_EXPENSE) AS MEMBER_CASH_EXPENSE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.SUBMITTED_COST) AS SUBMITTED_COST,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.PHARMACY_FEE) AS PHARMACY_FEE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.TOTAL_AMOUNT_DUE) AS TOTAL_AMOUNT_DUE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.CALC_AWP) AS CALC_AWP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.CREATE_DATE) AS CREATE_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_src.OCC_PAYMENT_TYPE) AS OCC_PAYMENT_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_src
 WHERE (EXT_ASI_COPAY_DETAIL_WKLY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_COPAY_DETAIL_WKLY'::varchar(25))));

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_CGD AS
 SELECT btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.TRANSACTION_TYPE) AS TRANSACTION_TYPE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DATE_FILLED) AS DATE_FILLED,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DATE_WRITTEN) AS DATE_WRITTEN,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DAYS_SUPPLY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DAYS_SUPPLY))::numeric(37,15) END AS DAYS_SUPPLY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PRODUCT_SERVICE_CODE) AS PRODUCT_SERVICE_CODE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DRUG_DESCRIPTION) AS DRUG_DESCRIPTION,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.NEW_REFILL_INDICATOR) AS NEW_REFILL_INDICATOR,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.QUANTITY_DISPENSED) AS QUANTITY_DISPENSED,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.REFILLS_AUTHORIZED) AS REFILLS_AUTHORIZED,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PATIENT_PAID_AMOUNT = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PATIENT_PAID_AMOUNT))::numeric(37,15) END AS PATIENT_PAID_AMOUNT,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PATIENT_PAID_AMOUNT_QUALIFIER) AS PATIENT_PAID_AMOUNT_QUALIFIER,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.STATUS) AS STATUS,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.OTHER_COVERAGE) AS OTHER_COVERAGE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.GROUP_NUMBER) AS GROUP_NUMBER,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.MEMBER_NUMBER) AS MEMBER_NUMBER,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.TIME_STAMP) AS TIME_STAMP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_NABP) AS PHARMACY_NABP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ADDRESS_LINE_1) AS PHARMACY_ADDRESS_LINE_1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ADDRESS_LINE_2) AS PHARMACY_ADDRESS_LINE_2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ADDRESS_LINE_3) AS PHARMACY_ADDRESS_LINE_3,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_DEA) AS DOCTOR_DEA,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.TOTAL_AMOUNT_AUTHORIZED) AS TOTAL_AMOUNT_AUTHORIZED,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.FEE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.FEE))::numeric(37,15) END AS FEE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PROVIDER_REIMB) AS PROVIDER_REIMB,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.COPAY) AS COPAY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.COUPON_AMOUNT = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.COUPON_AMOUNT))::numeric(37,15) END AS COUPON_AMOUNT,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_CITY) AS DOCTOR_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_STATE) AS DOCTOR_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ZIP) AS DOCTOR_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.CUSTOMER_PHYSICIAN_ID) AS CUSTOMER_PHYSICIAN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_LAST_NAME) AS DOCTOR_LAST_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_FIRST_NAME) AS DOCTOR_FIRST_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_MIDDLE_NAME) AS DOCTOR_MIDDLE_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_TITLE_CODE) AS DOCTOR_TITLE_CODE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ADDRESS_LINE_1) AS DOCTOR_ADDRESS_LINE_1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ADDRESS_LINE_2) AS DOCTOR_ADDRESS_LINE_2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_ADDRESS_LINE_3) AS DOCTOR_ADDRESS_LINE_3,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_STATE_LICENSE_NUMBER) AS DOCTOR_STATE_LICENSE_NUMBER,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.SLN_STATE) AS SLN_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PROGRAM_NAME) AS PROGRAM_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.BRAND) AS BRAND,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.PHARMACY_COMPANY) AS PHARMACY_COMPANY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.DOCTOR_NPI) AS DOCTOR_NPI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.LINKED_CARDS) AS LINKED_CARDS,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_CGD_src
 WHERE (EXT_ASI_COPAY_DETAIL_WKLY_CGD_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_COPAY_DETAIL_WKLY_CGD'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2 AS
 SELECT btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.TRANS_TYPE) AS TRANS_TYPE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ORIG_ASI_TXN_ID) AS ORIG_ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.RX_NUM) AS RX_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.RX_DATE) AS RX_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DATE_WRITTEN) AS DATE_WRITTEN,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DAYS_SUPPLY = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DAYS_SUPPLY))::int END AS DAYS_SUPPLY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.NDC_CODE) AS NDC_CODE,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DAW = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DAW))::int END AS DAW,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DRUG_NAME) AS DRUG_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.DRUG_DESC) AS DRUG_DESC,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.NEW_REFILL = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.NEW_REFILL))::int END AS NEW_REFILL,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.REFILLS = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.REFILLS))::int END AS REFILLS,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.OTHER_COVERAGE_CODE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.OTHER_COVERAGE_CODE))::int END AS OTHER_COVERAGE_CODE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.GROUP_NUM) AS GROUP_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.COUPON_NUM) AS COUPON_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.SEX) AS SEX,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.AGE_AT_REDEMPTION) AS AGE_AT_REDEMPTION,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_PROCESS_DATE) AS PHARMACY_PROCESS_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_CHAIN_NUM) AS PHARMACY_CHAIN_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.NABP) AS NABP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_CHAIN) AS PHARMACY_CHAIN,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_ADDRESS) AS PHARMACY_ADDRESS,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_ADDRESS2) AS PHARMACY_ADDRESS2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_PHONE) AS PHARMACY_PHONE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_NPI_NUM) AS PHARMACY_NPI_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PRINCIPLE_PHYS_DEA_NUM) AS PRINCIPLE_PHYS_DEA_NUM,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHYS_NPI = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHYS_NPI))::int END AS PHYS_NPI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHYSICIAN_NAME) AS PHYSICIAN_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_ADDRESS1) AS ASI_PHYS_ADDRESS1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_ADDRESS2) AS ASI_PHYS_ADDRESS2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_CITY) AS ASI_PHYS_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_STATE) AS ASI_PHYS_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.ASI_PHYS_ZIP) AS ASI_PHYS_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.REBATE_AMOUNT) AS REBATE_AMOUNT,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.MEMBER_CASH_EXPENSE) AS MEMBER_CASH_EXPENSE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.SUBMITTED_COST) AS SUBMITTED_COST,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.PHARMACY_FEE) AS PHARMACY_FEE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.TOTAL_AMOUNT_DUE) AS TOTAL_AMOUNT_DUE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.CALC_AWP) AS CALC_AWP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.CREATE_DATE) AS CREATE_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.OCC_PAYMENT_TYPE) AS OCC_PAYMENT_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src
 WHERE (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_COPAY_DETAIL_WKLY_COMBO_2'::varchar(33))));

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3 AS
 SELECT btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.TRANS_TYPE) AS TRANS_TYPE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ORIG_ASI_TXN_ID) AS ORIG_ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.RX_NUM) AS RX_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.RX_DATE) AS RX_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DATE_WRITTEN) AS DATE_WRITTEN,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DAYS_SUPPLY = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DAYS_SUPPLY))::int END AS DAYS_SUPPLY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.NDC_CODE) AS NDC_CODE,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DAW = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DAW))::int END AS DAW,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DRUG_NAME) AS DRUG_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.DRUG_DESC) AS DRUG_DESC,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.NEW_REFILL = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.NEW_REFILL))::int END AS NEW_REFILL,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.REFILLS = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.REFILLS))::int END AS REFILLS,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.OTHER_COVERAGE_CODE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.OTHER_COVERAGE_CODE))::int END AS OTHER_COVERAGE_CODE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.GROUP_NUM) AS GROUP_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.COUPON_NUM) AS COUPON_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.SEX) AS SEX,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.AGE_AT_REDEMPTION) AS AGE_AT_REDEMPTION,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_PROCESS_DATE) AS PHARMACY_PROCESS_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_CHAIN_NUM) AS PHARMACY_CHAIN_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.NABP) AS NABP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_CHAIN) AS PHARMACY_CHAIN,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_ADDRESS) AS PHARMACY_ADDRESS,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_ADDRESS2) AS PHARMACY_ADDRESS2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_PHONE) AS PHARMACY_PHONE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_NPI_NUM) AS PHARMACY_NPI_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PRINCIPLE_PHYS_DEA_NUM) AS PRINCIPLE_PHYS_DEA_NUM,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHYS_NPI = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHYS_NPI))::int END AS PHYS_NPI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHYSICIAN_NAME) AS PHYSICIAN_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_ADDRESS1) AS ASI_PHYS_ADDRESS1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_ADDRESS2) AS ASI_PHYS_ADDRESS2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_CITY) AS ASI_PHYS_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_STATE) AS ASI_PHYS_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.ASI_PHYS_ZIP) AS ASI_PHYS_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.REBATE_AMOUNT) AS REBATE_AMOUNT,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.MEMBER_CASH_EXPENSE) AS MEMBER_CASH_EXPENSE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.SUBMITTED_COST) AS SUBMITTED_COST,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.PHARMACY_FEE) AS PHARMACY_FEE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.TOTAL_AMOUNT_DUE) AS TOTAL_AMOUNT_DUE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.CALC_AWP) AS CALC_AWP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.CREATE_DATE) AS CREATE_DATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.OCC_PAYMENT_TYPE) AS OCC_PAYMENT_TYPE,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src
 WHERE (EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_COPAY_DETAIL_WKLY_COMBO_3'::varchar(33))));

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_PSKW AS
 SELECT btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.TRANS_TYPE) AS TRANS_TYPE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.ORIG_ASI_TXN_ID) AS ORIG_ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.RX_NUM) AS RX_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DATE_OF_FILL) AS DATE_OF_FILL,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DATE_WRITTEN) AS DATE_WRITTEN,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DAY_SUPPLY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DAY_SUPPLY))::numeric(37,15) END AS DAY_SUPPLY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DAW) AS DAW,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NDC) AS NDC,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DRUG_DESC) AS DRUG_DESC,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NEW_REFILL_CODE) AS NEW_REFILL_CODE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NUMBER_OF_REFILLS) AS NUMBER_OF_REFILLS,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.OTHER_COVERAGE_CODE) AS OTHER_COVERAGE_CODE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.GROUP_NUM) AS GROUP_NUM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.MEMBER_ID) AS MEMBER_ID,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_GENDER) AS PATIENT_GENDER,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_AGE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_AGE))::numeric(37,15) END AS PATIENT_AGE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DATE_PROCESSED) AS DATE_PROCESSED,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NABP) AS NABP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_NAME) AS PHM_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_ADD1) AS PHM_ADD1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_ADD2) AS PHM_ADD2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_CITY) AS PHM_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_STATE) AS PHM_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHM_ZIP) AS PHM_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHARMACY_NPI) AS PHARMACY_NPI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.NPI) AS NPI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.DEA) AS DEA,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_NAME) AS PHY_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_FN) AS PHY_FN,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_MI) AS PHY_MI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_LN) AS PHY_LN,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_SUFFIX) AS PHY_SUFFIX,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_PROF_DESG) AS PHY_PROF_DESG,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.SPEC1) AS SPEC1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.SPEC2) AS SPEC2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_ADD1) AS PHY_ADD1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_ADD2) AS PHY_ADD2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_CITY) AS PHY_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_STATE) AS PHY_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHY_ZIP) AS PHY_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.SUBMISSION_METHOD) AS SUBMISSION_METHOD,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_BENEFIT = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_BENEFIT))::numeric(37,15) END AS PATIENT_BENEFIT,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_COPAY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_COPAY))::numeric(37,15) END AS PATIENT_COPAY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_OOP = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PATIENT_OOP))::numeric(37,15) END AS PATIENT_OOP,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHARMACY_TRANSACTION_FEE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.PHARMACY_TRANSACTION_FEE))::numeric(37,15) END AS PHARMACY_TRANSACTION_FEE,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src
 WHERE (EXT_ASI_COPAY_DETAIL_WKLY_PSKW_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_COPAY_DETAIL_WKLY_PSKW'::varchar(30))));

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_REDEMPTIONS AS
 SELECT btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PROGRAM_NUM) AS PROGRAM_NUM,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.CLAIM_CERT_NUM) AS CLAIM_CERT_NUM,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.RX_DATE) AS RX_DATE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.NDC_CODE) AS NDC_CODE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.QUANTITY) AS QUANTITY,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.SUBMITTED_COST) AS SUBMITTED_COST,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.REBATE_AMOUNT) AS REBATE_AMOUNT,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.MEMBER_CASH_EXPENSE) AS MEMBER_CASH_EXPENSE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_FEE) AS PHARMACY_FEE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.TOTAL_AMOUNT_DUE) AS TOTAL_AMOUNT_DUE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.DOB) AS DOB,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.SEX) AS SEX,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_ADDRESS) AS PHARMACY_ADDRESS,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PRINCIPAL_PHYS_LAST_NAME) AS PRINCIPAL_PHYS_LAST_NAME,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PRINCIPAL_PHYS_FIRST_NAME) AS PRINCIPAL_PHYS_FIRST_NAME,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.PRINCIPAL_PHYS_DEA_NUM) AS PRINCIPAL_PHYS_DEA_NUM,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_LAST_NAME) AS COMPANY_PHYS_LAST_NAME,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_FIRST_NAME) AS COMPANY_PHYS_FIRST_NAME,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS1) AS COMPANY_PHYS_ADDRESS1,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS2) AS COMPANY_PHYS_ADDRESS2,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_CITY) AS COMPANY_PHYS_CITY,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_STATE) AS COMPANY_PHYS_STATE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.COMPANY_PHYS_ZIP) AS COMPANY_PHYS_ZIP,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_LAST_NAME) AS ASI_PHYS_LAST_NAME,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_FIRST_NAME) AS ASI_PHYS_FIRST_NAME,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_ADDRESS1) AS ASI_PHYS_ADDRESS1,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_ADDRESS2) AS ASI_PHYS_ADDRESS2,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_CITY) AS ASI_PHYS_CITY,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_STATE) AS ASI_PHYS_STATE,
        btrim(EXT_ASI_COPAY_REDEMPTIONS_src.ASI_PHYS_ZIP) AS ASI_PHYS_ZIP,
        CASE WHEN (EXT_ASI_COPAY_REDEMPTIONS_src.NPI = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_REDEMPTIONS_src.NPI))::numeric(37,15) END AS NPI,
        CASE WHEN (EXT_ASI_COPAY_REDEMPTIONS_src.OTHER_COVERAGE_CODE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_COPAY_REDEMPTIONS_src.OTHER_COVERAGE_CODE))::numeric(37,15) END AS OTHER_COVERAGE_CODE,
        EXT_ASI_COPAY_REDEMPTIONS_src.batch_id,
        EXT_ASI_COPAY_REDEMPTIONS_src.row_id,
        EXT_ASI_COPAY_REDEMPTIONS_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_REDEMPTIONS_src
 WHERE (EXT_ASI_COPAY_REDEMPTIONS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_COPAY_REDEMPTIONS'::varchar(25))));

CREATE  VIEW teva_ingestion.EXT_ASI_REDEMPTIONS AS
 SELECT btrim(EXT_ASI_REDEMPTIONS_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_REDEMPTIONS_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ASI_REDEMPTIONS_src.PROGRAM_NUM) AS PROGRAM_NUM,
        btrim(EXT_ASI_REDEMPTIONS_src.CLAIM_CERT_NUM) AS CLAIM_CERT_NUM,
        btrim(EXT_ASI_REDEMPTIONS_src.RX_DATE) AS RX_DATE,
        btrim(EXT_ASI_REDEMPTIONS_src.NDC_CODE) AS NDC_CODE,
        btrim(EXT_ASI_REDEMPTIONS_src.QUANTITY) AS QUANTITY,
        btrim(EXT_ASI_REDEMPTIONS_src.DOB) AS DOB,
        btrim(EXT_ASI_REDEMPTIONS_src.SEX) AS SEX,
        btrim(EXT_ASI_REDEMPTIONS_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_REDEMPTIONS_src.PHARMACY_ADDRESS) AS PHARMACY_ADDRESS,
        btrim(EXT_ASI_REDEMPTIONS_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_REDEMPTIONS_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_REDEMPTIONS_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_REDEMPTIONS_src.PRINCIPAL_PHYS_LAST_NAME) AS PRINCIPAL_PHYS_LAST_NAME,
        btrim(EXT_ASI_REDEMPTIONS_src.PRINCIPAL_PHYS_FIRST_NAME) AS PRINCIPAL_PHYS_FIRST_NAME,
        btrim(EXT_ASI_REDEMPTIONS_src.PRINCIPAL_PHYS_DEA_NUM) AS PRINCIPAL_PHYS_DEA_NUM,
        btrim(EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_LAST_NAME) AS COMPANY_PHYS_LAST_NAME,
        btrim(EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_FIRST_NAME) AS COMPANY_PHYS_FIRST_NAME,
        btrim(EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS1) AS COMPANY_PHYS_ADDRESS1,
        btrim(EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_ADDRESS2) AS COMPANY_PHYS_ADDRESS2,
        btrim(EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_CITY) AS COMPANY_PHYS_CITY,
        btrim(EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_STATE) AS COMPANY_PHYS_STATE,
        btrim(EXT_ASI_REDEMPTIONS_src.COMPANY_PHYS_ZIP) AS COMPANY_PHYS_ZIP,
        btrim(EXT_ASI_REDEMPTIONS_src.ASI_PHYS_LAST_NAME) AS ASI_PHYS_LAST_NAME,
        btrim(EXT_ASI_REDEMPTIONS_src.ASI_PHYS_FIRST_NAME) AS ASI_PHYS_FIRST_NAME,
        btrim(EXT_ASI_REDEMPTIONS_src.ASI_PHYS_ADDRESS1) AS ASI_PHYS_ADDRESS1,
        btrim(EXT_ASI_REDEMPTIONS_src.ASI_PHYS_ADDRESS2) AS ASI_PHYS_ADDRESS2,
        btrim(EXT_ASI_REDEMPTIONS_src.ASI_PHYS_CITY) AS ASI_PHYS_CITY,
        btrim(EXT_ASI_REDEMPTIONS_src.ASI_PHYS_STATE) AS ASI_PHYS_STATE,
        btrim(EXT_ASI_REDEMPTIONS_src.ASI_PHYS_ZIP) AS ASI_PHYS_ZIP,
        CASE WHEN (EXT_ASI_REDEMPTIONS_src.NPI = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_REDEMPTIONS_src.NPI))::numeric(37,15) END AS NPI,
        CASE WHEN (EXT_ASI_REDEMPTIONS_src.OTHER_COVERAGE_CODE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_REDEMPTIONS_src.OTHER_COVERAGE_CODE))::numeric(37,15) END AS OTHER_COVERAGE_CODE,
        EXT_ASI_REDEMPTIONS_src.batch_id,
        EXT_ASI_REDEMPTIONS_src.row_id,
        EXT_ASI_REDEMPTIONS_src.update_ts
 FROM teva_ingestion.EXT_ASI_REDEMPTIONS_src
 WHERE (EXT_ASI_REDEMPTIONS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_REDEMPTIONS'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1 AS
 SELECT btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.TRANS_TYPE) AS TRANS_TYPE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ORIG_ASI_TXN_ID) AS ORIG_ASI_TXN_ID,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.RX_NUM) AS RX_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.RX_DATE) AS RX_DATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DATE_WRITTEN) AS DATE_WRITTEN,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DAYS_SUPPLY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DAYS_SUPPLY))::numeric(37,15) END AS DAYS_SUPPLY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.NDC_CODE) AS NDC_CODE,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DAW = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DAW))::numeric(37,15) END AS DAW,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DRUG_NAME) AS DRUG_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.DRUG_DESC) AS DRUG_DESC,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.NEW_REFILL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.NEW_REFILL))::numeric(37,15) END AS NEW_REFILL,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.REFILLS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.REFILLS))::numeric(37,15) END AS REFILLS,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.OTHER_COVERAGE_CODE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.OTHER_COVERAGE_CODE))::numeric(37,15) END AS OTHER_COVERAGE_CODE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.GROUP_NUM) AS GROUP_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.COUPON_NUM) AS COUPON_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.SEX) AS SEX,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.AGE_AT_REDEMPTION) AS AGE_AT_REDEMPTION,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_PROCESS_DATE) AS PHARMACY_PROCESS_DATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_CHAIN_NUM) AS PHARMACY_CHAIN_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.NABP) AS NABP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_CHAIN) AS PHARMACY_CHAIN,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_ADDRESS) AS PHARMACY_ADDRESS,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_ADDRESS2) AS PHARMACY_ADDRESS2,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_PHONE) AS PHARMACY_PHONE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_NPI_NUM) AS PHARMACY_NPI_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PRINCIPLE_PHYS_DEA_NUM) AS PRINCIPLE_PHYS_DEA_NUM,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHYS_NPI = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHYS_NPI))::numeric(37,15) END AS PHYS_NPI,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHYSICIAN_NAME) AS PHYSICIAN_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_ADDRESS1) AS ASI_PHYS_ADDRESS1,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_ADDRESS2) AS ASI_PHYS_ADDRESS2,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_CITY) AS ASI_PHYS_CITY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_STATE) AS ASI_PHYS_STATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.ASI_PHYS_ZIP) AS ASI_PHYS_ZIP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.REBATE_AMOUNT) AS REBATE_AMOUNT,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.MEMBER_CASH_EXPENSE) AS MEMBER_CASH_EXPENSE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.SUBMITTED_COST) AS SUBMITTED_COST,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.PHARMACY_FEE) AS PHARMACY_FEE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.TOTAL_AMOUNT_DUE) AS TOTAL_AMOUNT_DUE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.CALC_AWP) AS CALC_AWP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.CREATE_DATE) AS CREATE_DATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.OCC_PAYMENT_TYPE) AS OCC_PAYMENT_TYPE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.batch_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.row_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.update_ts
 FROM teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src
 WHERE (EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_VOUCHER_DETAIL_WKLY_COMBO_1'::varchar(35))));

CREATE  VIEW teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER AS
 SELECT btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.TRANS_TYPE) AS TRANS_TYPE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_TXN_ID) AS ASI_TXN_ID,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ORIG_ASI_TXN_ID) AS ORIG_ASI_TXN_ID,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.RX_NUM) AS RX_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.RX_DATE) AS RX_DATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DATE_WRITTEN) AS DATE_WRITTEN,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DAYS_SUPPLY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DAYS_SUPPLY))::numeric(37,15) END AS DAYS_SUPPLY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.NDC_CODE) AS NDC_CODE,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DAW = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DAW))::numeric(37,15) END AS DAW,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DRUG_NAME) AS DRUG_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.DRUG_DESC) AS DRUG_DESC,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.NEW_REFILL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.NEW_REFILL))::numeric(37,15) END AS NEW_REFILL,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.REFILLS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.REFILLS))::numeric(37,15) END AS REFILLS,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.OTHER_COVERAGE_CODE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.OTHER_COVERAGE_CODE))::numeric(37,15) END AS OTHER_COVERAGE_CODE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.GROUP_NUM) AS GROUP_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.COUPON_NUM) AS COUPON_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.SEX) AS SEX,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.AGE_AT_REDEMPTION) AS AGE_AT_REDEMPTION,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_PROCESS_DATE) AS PHARMACY_PROCESS_DATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_CHAIN_NUM) AS PHARMACY_CHAIN_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.NABP) AS NABP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_CHAIN) AS PHARMACY_CHAIN,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_ADDRESS) AS PHARMACY_ADDRESS,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_ADDRESS2) AS PHARMACY_ADDRESS2,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_PHONE) AS PHARMACY_PHONE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_NPI_NUM) AS PHARMACY_NPI_NUM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PRINCIPLE_PHYS_DEA_NUM) AS PRINCIPLE_PHYS_DEA_NUM,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHYS_NPI = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHYS_NPI))::numeric(37,15) END AS PHYS_NPI,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHYSICIAN_NAME) AS PHYSICIAN_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_ADDRESS1) AS ASI_PHYS_ADDRESS1,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_ADDRESS2) AS ASI_PHYS_ADDRESS2,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_CITY) AS ASI_PHYS_CITY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_STATE) AS ASI_PHYS_STATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.ASI_PHYS_ZIP) AS ASI_PHYS_ZIP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.REBATE_AMOUNT) AS REBATE_AMOUNT,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.MEMBER_CASH_EXPENSE) AS MEMBER_CASH_EXPENSE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.SUBMITTED_COST) AS SUBMITTED_COST,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.PHARMACY_FEE) AS PHARMACY_FEE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.TOTAL_AMOUNT_DUE) AS TOTAL_AMOUNT_DUE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.CALC_AWP) AS CALC_AWP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.CREATE_DATE) AS CREATE_DATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.OCC_PAYMENT_TYPE) AS OCC_PAYMENT_TYPE,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.batch_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.row_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.update_ts
 FROM teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src
 WHERE (EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_VOUCHER_DETAIL_WKLY_VOUCHER'::varchar(35))));

CREATE  VIEW teva_ingestion.ext_call_goals_kc AS
 SELECT CASE WHEN (ext_call_goals_kc_src.ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(ext_call_goals_kc_src.ID))::numeric(38,0) END AS ID,
        btrim(ext_call_goals_kc_src.SFA_ID) AS SFA_ID,
        btrim(ext_call_goals_kc_src.IMS_ID) AS IMS_ID,
        btrim(ext_call_goals_kc_src.TERRITORY_NUM) AS TERRITORY_NUM,
        CASE WHEN (ext_call_goals_kc_src.PRIORITY = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(ext_call_goals_kc_src.PRIORITY))::numeric(3,0) END AS PRIORITY,
        btrim(ext_call_goals_kc_src.PRODUCT) AS PRODUCT,
        CASE WHEN (ext_call_goals_kc_src.GOAL = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(ext_call_goals_kc_src.GOAL))::numeric(3,0) END AS GOAL,
        CASE WHEN (ext_call_goals_kc_src.ACTUAL = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(ext_call_goals_kc_src.ACTUAL))::numeric(3,0) END AS ACTUAL,
        btrim(ext_call_goals_kc_src.MARKETING_SEGMENT) AS MARKETING_SEGMENT,
        btrim(ext_call_goals_kc_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(ext_call_goals_kc_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        ext_call_goals_kc_src.batch_id,
        ext_call_goals_kc_src.row_id,
        ext_call_goals_kc_src.update_ts
 FROM teva_ingestion.ext_call_goals_kc_src
 WHERE (ext_call_goals_kc_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CALL_GOALS_KC'::varchar(17))));

CREATE  VIEW teva_ingestion.EXT_CAREMARK_RX2_AOB AS
 SELECT btrim(EXT_CAREMARK_RX2_AOB_src.MD_ID) AS MD_ID,
        btrim(EXT_CAREMARK_RX2_AOB_src.MD_LAST_NAME) AS MD_LAST_NAME,
        btrim(EXT_CAREMARK_RX2_AOB_src.MD_FIRST_NAME) AS MD_FIRST_NAME,
        btrim(EXT_CAREMARK_RX2_AOB_src.PRESCRIBER_NPI) AS PRESCRIBER_NPI,
        btrim(EXT_CAREMARK_RX2_AOB_src.MD_ADDR1) AS MD_ADDR1,
        btrim(EXT_CAREMARK_RX2_AOB_src.MD_ADDR2) AS MD_ADDR2,
        btrim(EXT_CAREMARK_RX2_AOB_src.MD_CITY) AS MD_CITY,
        btrim(EXT_CAREMARK_RX2_AOB_src.MD_STATE) AS MD_STATE,
        btrim(EXT_CAREMARK_RX2_AOB_src.MD_ZIP) AS MD_ZIP,
        btrim(EXT_CAREMARK_RX2_AOB_src.NDC_NUMBER) AS NDC_NUMBER,
        btrim(EXT_CAREMARK_RX2_AOB_src.SHIP_DATE) AS SHIP_DATE,
        CASE WHEN (EXT_CAREMARK_RX2_AOB_src.QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CAREMARK_RX2_AOB_src.QTY))::numeric(37,15) END AS QTY,
        EXT_CAREMARK_RX2_AOB_src.batch_id,
        EXT_CAREMARK_RX2_AOB_src.row_id,
        EXT_CAREMARK_RX2_AOB_src.update_ts
 FROM teva_ingestion.EXT_CAREMARK_RX2_AOB_src
 WHERE (EXT_CAREMARK_RX2_AOB_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CAREMARK_RX2_AOB'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_CAREMARK_RX2_MEDICARE AS
 SELECT btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_ID) AS MD_ID,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_LAST_NAME) AS MD_LAST_NAME,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_FIRST_NAME) AS MD_FIRST_NAME,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.PRESCRIBER_NPI) AS PRESCRIBER_NPI,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_ADDR1) AS MD_ADDR1,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_ADDR2) AS MD_ADDR2,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_CITY) AS MD_CITY,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_STATE) AS MD_STATE,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.MD_ZIP) AS MD_ZIP,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.NDC_NUMBER) AS NDC_NUMBER,
        btrim(EXT_CAREMARK_RX2_MEDICARE_src.SHIP_DATE) AS SHIP_DATE,
        CASE WHEN (EXT_CAREMARK_RX2_MEDICARE_src.QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CAREMARK_RX2_MEDICARE_src.QTY))::numeric(37,15) END AS QTY,
        EXT_CAREMARK_RX2_MEDICARE_src.batch_id,
        EXT_CAREMARK_RX2_MEDICARE_src.row_id,
        EXT_CAREMARK_RX2_MEDICARE_src.update_ts
 FROM teva_ingestion.EXT_CAREMARK_RX2_MEDICARE_src
 WHERE (EXT_CAREMARK_RX2_MEDICARE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CAREMARK_RX2_MEDICARE'::varchar(25))));

CREATE  VIEW teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC AS
 SELECT btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.ID) AS ID,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.ISDELETED) AS ISDELETED,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.NAME) AS NAME,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.CLM_PRESENTATION_VOD__C) AS CLM_PRESENTATION_VOD__C,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.KEY_MESSAGE_VOD__C) AS KEY_MESSAGE_VOD__C,
        CASE WHEN (EXT_CLM_PRESENTATION_SLIDE_VC_src.DISPLAY_ORDER_VOD__C = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.DISPLAY_ORDER_VOD__C))::numeric(4,0) END AS DISPLAY_ORDER_VOD__C,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.SUB_PRESENTATION_VOD__C) AS SUB_PRESENTATION_VOD__C,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_CLM_PRESENTATION_SLIDE_VC_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.batch_id,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.row_id,
        EXT_CLM_PRESENTATION_SLIDE_VC_src.update_ts
 FROM teva_ingestion.EXT_CLM_PRESENTATION_SLIDE_VC_src
 WHERE (EXT_CLM_PRESENTATION_SLIDE_VC_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CLM_PRESENTATION_SLIDE_VC'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_CLM_PRESENTATION_VOD__C AS
 SELECT btrim(EXT_CLM_PRESENTATION_VOD__C_src.APPROVED_VOD__C) AS APPROVED_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.COPIED_FROM_VOD__C) AS COPIED_FROM_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.COPY_DATE_VOD__C) AS COPY_DATE_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.DEFAULT_PRESENTATION_VOD__C) AS DEFAULT_PRESENTATION_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.GROUP_TO_SHARE_TO__C) AS GROUP_TO_SHARE_TO__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.HIDDEN_VOD__C) AS HIDDEN_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.ID) AS ID,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.NAME) AS NAME,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.ORIGINAL_RECORD_ID_VOD__C) AS ORIGINAL_RECORD_ID_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.OWNERID) AS OWNERID,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.PARENTID_VOD__C) AS PARENTID_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.PRESENTATION_ID_VOD__C) AS PRESENTATION_ID_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.PRODUCT_VOD__C) AS PRODUCT_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.TRAINING_VOD__C) AS TRAINING_VOD__C,
        btrim(EXT_CLM_PRESENTATION_VOD__C_src.TYPE_VOD__C) AS TYPE_VOD__C,
        EXT_CLM_PRESENTATION_VOD__C_src.batch_id,
        EXT_CLM_PRESENTATION_VOD__C_src.row_id,
        EXT_CLM_PRESENTATION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_CLM_PRESENTATION_VOD__C_src
 WHERE (EXT_CLM_PRESENTATION_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CLM_PRESENTATION_VOD__C'::varchar(27))));

CREATE  VIEW teva_ingestion.EXT_CLOZAPINE_UNIT_AP AS
 SELECT btrim(EXT_CLOZAPINE_UNIT_AP_src.NDC_CODE) AS NDC_CODE,
        btrim(EXT_CLOZAPINE_UNIT_AP_src.DESCRIPTION) AS DESCRIPTION,
        CASE WHEN (EXT_CLOZAPINE_UNIT_AP_src.UNIT_AP = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CLOZAPINE_UNIT_AP_src.UNIT_AP))::numeric(37,15) END AS UNIT_AP,
        EXT_CLOZAPINE_UNIT_AP_src.batch_id,
        EXT_CLOZAPINE_UNIT_AP_src.row_id,
        EXT_CLOZAPINE_UNIT_AP_src.update_ts
 FROM teva_ingestion.EXT_CLOZAPINE_UNIT_AP_src
 WHERE (EXT_CLOZAPINE_UNIT_AP_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CLOZAPINE_UNIT_AP'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_CMOP_RX_DATA_TEVA AS
 SELECT btrim(EXT_CMOP_RX_DATA_TEVA_src.MONTH) AS MONTH,
        btrim(EXT_CMOP_RX_DATA_TEVA_src.CMOP) AS CMOP,
        btrim(EXT_CMOP_RX_DATA_TEVA_src.VISN) AS VISN,
        btrim(EXT_CMOP_RX_DATA_TEVA_src.STATION_NUMBER) AS STATION_NUMBER,
        btrim(EXT_CMOP_RX_DATA_TEVA_src.STATION) AS STATION,
        btrim(EXT_CMOP_RX_DATA_TEVA_src.VA_PRODUCT) AS VA_PRODUCT,
        CASE WHEN (EXT_CMOP_RX_DATA_TEVA_src.TOTAL_RXS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CMOP_RX_DATA_TEVA_src.TOTAL_RXS))::numeric(37,15) END AS TOTAL_RXS,
        CASE WHEN (EXT_CMOP_RX_DATA_TEVA_src.CMOP_RXS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CMOP_RX_DATA_TEVA_src.CMOP_RXS))::numeric(37,15) END AS CMOP_RXS,
        CASE WHEN (EXT_CMOP_RX_DATA_TEVA_src.TOTAL_QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CMOP_RX_DATA_TEVA_src.TOTAL_QTY))::numeric(37,15) END AS TOTAL_QTY,
        CASE WHEN (EXT_CMOP_RX_DATA_TEVA_src.CMOP_QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CMOP_RX_DATA_TEVA_src.CMOP_QTY))::numeric(37,15) END AS CMOP_QTY,
        CASE WHEN (EXT_CMOP_RX_DATA_TEVA_src."30_DAY_RXS" = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_CMOP_RX_DATA_TEVA_src."30_DAY_RXS"))::numeric(37,15) END AS "30_DAY_RXS",
        btrim(EXT_CMOP_RX_DATA_TEVA_src.ZIP) AS ZIP,
        btrim(EXT_CMOP_RX_DATA_TEVA_src.ID) AS ID,
        EXT_CMOP_RX_DATA_TEVA_src.batch_id,
        EXT_CMOP_RX_DATA_TEVA_src.row_id,
        EXT_CMOP_RX_DATA_TEVA_src.update_ts
 FROM teva_ingestion.EXT_CMOP_RX_DATA_TEVA_src
 WHERE (EXT_CMOP_RX_DATA_TEVA_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CMOP_RX_DATA_TEVA'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_DDD_DOD_QTY AS
 SELECT btrim(EXT_DDD_DOD_QTY_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_DDD_DOD_QTY_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_DDD_DOD_QTY_src.filler_01) AS filler_01,
        btrim(EXT_DDD_DOD_QTY_src.OUTLET_CODE) AS OUTLET_CODE,
        btrim(EXT_DDD_DOD_QTY_src.SUBCATEGORY_CODE) AS SUBCATEGORY_CODE,
        btrim(EXT_DDD_DOD_QTY_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_DDD_DOD_QTY_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        btrim(EXT_DDD_DOD_QTY_src.MTH_YYYYMM) AS MTH_YYYYMM,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH01 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH01))::numeric(37,15) END AS QTY_MTH01,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH02 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH02))::numeric(37,15) END AS QTY_MTH02,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH03 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH03))::numeric(37,15) END AS QTY_MTH03,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH04 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH04))::numeric(37,15) END AS QTY_MTH04,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH05 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH05))::numeric(37,15) END AS QTY_MTH05,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH06 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH06))::numeric(37,15) END AS QTY_MTH06,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH07 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH07))::numeric(37,15) END AS QTY_MTH07,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH08 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH08))::numeric(37,15) END AS QTY_MTH08,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH09 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH09))::numeric(37,15) END AS QTY_MTH09,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH10 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH10))::numeric(37,15) END AS QTY_MTH10,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH11 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH11))::numeric(37,15) END AS QTY_MTH11,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH12 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH12))::numeric(37,15) END AS QTY_MTH12,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH13 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH13))::numeric(37,15) END AS QTY_MTH13,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH14 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH14))::numeric(37,15) END AS QTY_MTH14,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH15 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH15))::numeric(37,15) END AS QTY_MTH15,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH16 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH16))::numeric(37,15) END AS QTY_MTH16,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH17 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH17))::numeric(37,15) END AS QTY_MTH17,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH18 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH18))::numeric(37,15) END AS QTY_MTH18,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH19 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH19))::numeric(37,15) END AS QTY_MTH19,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH20 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH20))::numeric(37,15) END AS QTY_MTH20,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH21 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH21))::numeric(37,15) END AS QTY_MTH21,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH22 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH22))::numeric(37,15) END AS QTY_MTH22,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH23 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH23))::numeric(37,15) END AS QTY_MTH23,
        CASE WHEN (EXT_DDD_DOD_QTY_src.QTY_MTH24 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_QTY_src.QTY_MTH24))::numeric(37,15) END AS QTY_MTH24,
        btrim(EXT_DDD_DOD_QTY_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_DDD_DOD_QTY_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_DDD_DOD_QTY_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_DDD_DOD_QTY_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_DDD_DOD_QTY_src.OUTLET_ZIP) AS OUTLET_ZIP,
        EXT_DDD_DOD_QTY_src.batch_id,
        EXT_DDD_DOD_QTY_src.row_id,
        EXT_DDD_DOD_QTY_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOD_QTY_src
 WHERE (EXT_DDD_DOD_QTY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_DDD_DOD_QTY'::varchar(15))));

CREATE  VIEW teva_ingestion.EXT_DDD_DOD_SALES_MS AS
 SELECT btrim(EXT_DDD_DOD_SALES_MS_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_DDD_DOD_SALES_MS_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_DDD_DOD_SALES_MS_src.filler_01) AS filler_01,
        btrim(EXT_DDD_DOD_SALES_MS_src.OUTLET_CODE) AS OUTLET_CODE,
        btrim(EXT_DDD_DOD_SALES_MS_src.SUBCATEGORY_CODE) AS SUBCATEGORY_CODE,
        btrim(EXT_DDD_DOD_SALES_MS_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_DDD_DOD_SALES_MS_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        btrim(EXT_DDD_DOD_SALES_MS_src.MTH_YYYYMM) AS MTH_YYYYMM,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH01 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH01))::numeric(37,15) END AS DOL_MTH01,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH02 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH02))::numeric(37,15) END AS DOL_MTH02,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH03 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH03))::numeric(37,15) END AS DOL_MTH03,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH04 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH04))::numeric(37,15) END AS DOL_MTH04,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH05 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH05))::numeric(37,15) END AS DOL_MTH05,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH06 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH06))::numeric(37,15) END AS DOL_MTH06,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH07 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH07))::numeric(37,15) END AS DOL_MTH07,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH08 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH08))::numeric(37,15) END AS DOL_MTH08,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH09 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH09))::numeric(37,15) END AS DOL_MTH09,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH10 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH10))::numeric(37,15) END AS DOL_MTH10,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH11 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH11))::numeric(37,15) END AS DOL_MTH11,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH12 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH12))::numeric(37,15) END AS DOL_MTH12,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH13 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH13))::numeric(37,15) END AS DOL_MTH13,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH14 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH14))::numeric(37,15) END AS DOL_MTH14,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH15 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH15))::numeric(37,15) END AS DOL_MTH15,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH16 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH16))::numeric(37,15) END AS DOL_MTH16,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH17 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH17))::numeric(37,15) END AS DOL_MTH17,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH18 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH18))::numeric(37,15) END AS DOL_MTH18,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH19 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH19))::numeric(37,15) END AS DOL_MTH19,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH20 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH20))::numeric(37,15) END AS DOL_MTH20,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH21 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH21))::numeric(37,15) END AS DOL_MTH21,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH22 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH22))::numeric(37,15) END AS DOL_MTH22,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH23 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH23))::numeric(37,15) END AS DOL_MTH23,
        CASE WHEN (EXT_DDD_DOD_SALES_MS_src.DOL_MTH24 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_MS_src.DOL_MTH24))::numeric(37,15) END AS DOL_MTH24,
        btrim(EXT_DDD_DOD_SALES_MS_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_DDD_DOD_SALES_MS_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_DDD_DOD_SALES_MS_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_DDD_DOD_SALES_MS_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_DDD_DOD_SALES_MS_src.OUTLET_ZIP) AS OUTLET_ZIP,
        EXT_DDD_DOD_SALES_MS_src.batch_id,
        EXT_DDD_DOD_SALES_MS_src.row_id,
        EXT_DDD_DOD_SALES_MS_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOD_SALES_MS_src
 WHERE (EXT_DDD_DOD_SALES_MS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_DDD_DOD_SALES_MS'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_DDD_DOD_SALES_PD AS
 SELECT btrim(EXT_DDD_DOD_SALES_PD_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_DDD_DOD_SALES_PD_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_DDD_DOD_SALES_PD_src.filler_01) AS filler_01,
        btrim(EXT_DDD_DOD_SALES_PD_src.OUTLET_CODE) AS OUTLET_CODE,
        btrim(EXT_DDD_DOD_SALES_PD_src.SUBCATEGORY_CODE) AS SUBCATEGORY_CODE,
        btrim(EXT_DDD_DOD_SALES_PD_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_DDD_DOD_SALES_PD_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        btrim(EXT_DDD_DOD_SALES_PD_src.MTH_YYYYMM) AS MTH_YYYYMM,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH01 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH01))::numeric(37,15) END AS DOL_MTH01,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH02 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH02))::numeric(37,15) END AS DOL_MTH02,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH03 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH03))::numeric(37,15) END AS DOL_MTH03,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH04 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH04))::numeric(37,15) END AS DOL_MTH04,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH05 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH05))::numeric(37,15) END AS DOL_MTH05,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH06 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH06))::numeric(37,15) END AS DOL_MTH06,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH07 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH07))::numeric(37,15) END AS DOL_MTH07,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH08 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH08))::numeric(37,15) END AS DOL_MTH08,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH09 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH09))::numeric(37,15) END AS DOL_MTH09,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH10 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH10))::numeric(37,15) END AS DOL_MTH10,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH11 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH11))::numeric(37,15) END AS DOL_MTH11,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH12 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH12))::numeric(37,15) END AS DOL_MTH12,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH13 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH13))::numeric(37,15) END AS DOL_MTH13,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH14 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH14))::numeric(37,15) END AS DOL_MTH14,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH15 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH15))::numeric(37,15) END AS DOL_MTH15,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH16 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH16))::numeric(37,15) END AS DOL_MTH16,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH17 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH17))::numeric(37,15) END AS DOL_MTH17,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH18 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH18))::numeric(37,15) END AS DOL_MTH18,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH19 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH19))::numeric(37,15) END AS DOL_MTH19,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH20 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH20))::numeric(37,15) END AS DOL_MTH20,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH21 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH21))::numeric(37,15) END AS DOL_MTH21,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH22 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH22))::numeric(37,15) END AS DOL_MTH22,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH23 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH23))::numeric(37,15) END AS DOL_MTH23,
        CASE WHEN (EXT_DDD_DOD_SALES_PD_src.DOL_MTH24 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_DDD_DOD_SALES_PD_src.DOL_MTH24))::numeric(37,15) END AS DOL_MTH24,
        btrim(EXT_DDD_DOD_SALES_PD_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_DDD_DOD_SALES_PD_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_DDD_DOD_SALES_PD_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_DDD_DOD_SALES_PD_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_DDD_DOD_SALES_PD_src.OUTLET_ZIP) AS OUTLET_ZIP,
        EXT_DDD_DOD_SALES_PD_src.batch_id,
        EXT_DDD_DOD_SALES_PD_src.row_id,
        EXT_DDD_DOD_SALES_PD_src.update_ts
 FROM teva_ingestion.EXT_DDD_DOD_SALES_PD_src
 WHERE (EXT_DDD_DOD_SALES_PD_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_DDD_DOD_SALES_PD'::varchar(20))));

CREATE  VIEW teva_ingestion.ext_diplomat_enrollment AS
 SELECT btrim(ext_diplomat_enrollment_src.PATIENT_ID) AS PATIENT_ID,
        btrim(ext_diplomat_enrollment_src.RX_RECEIVED_DATE) AS RX_RECEIVED_DATE,
        btrim(ext_diplomat_enrollment_src.INSURANCE_INFORMATION) AS INSURANCE_INFORMATION,
        btrim(ext_diplomat_enrollment_src.MOST_RECENT_CML_TREATMENT) AS MOST_RECENT_CML_TREATMENT,
        btrim(ext_diplomat_enrollment_src.DATE_OF_DISCONTINUATION) AS DATE_OF_DISCONTINUATION,
        btrim(ext_diplomat_enrollment_src.REASON_FOR_DISCONTINUATION) AS REASON_FOR_DISCONTINUATION,
        btrim(ext_diplomat_enrollment_src.PHYSICIAN_LAST_NAME) AS PHYSICIAN_LAST_NAME,
        btrim(ext_diplomat_enrollment_src.PHYSICIAN_FIRST_NAME) AS PHYSICIAN_FIRST_NAME,
        btrim(ext_diplomat_enrollment_src.PHYSICIAN_ADDRESS) AS PHYSICIAN_ADDRESS,
        btrim(ext_diplomat_enrollment_src.PHYSICIAN_CITY) AS PHYSICIAN_CITY,
        btrim(ext_diplomat_enrollment_src.PHYSICIAN_STATE) AS PHYSICIAN_STATE,
        btrim(ext_diplomat_enrollment_src.PHYSICIAN_ZIP) AS PHYSICIAN_ZIP,
        ext_diplomat_enrollment_src.batch_id,
        ext_diplomat_enrollment_src.row_id,
        ext_diplomat_enrollment_src.update_ts
 FROM teva_ingestion.ext_diplomat_enrollment_src
 WHERE (ext_diplomat_enrollment_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_DIPLOMAT_ENROLLMENT'::varchar(23))));

CREATE  VIEW teva_ingestion.EXT_F60Q AS
 SELECT btrim(EXT_F60Q_src."CLI#") AS "CLI#",
        btrim(EXT_F60Q_src.SUFFIX) AS SUFFIX,
        btrim(EXT_F60Q_src."TERR#") AS "TERR#",
        btrim(EXT_F60Q_src.BLANK1) AS BLANK1,
        btrim(EXT_F60Q_src."OUTLET#") AS "OUTLET#",
        btrim(EXT_F60Q_src.NAME) AS NAME,
        btrim(EXT_F60Q_src.ADDRESS) AS ADDRESS,
        btrim(EXT_F60Q_src.CITY) AS CITY,
        btrim(EXT_F60Q_src.STATE) AS STATE,
        btrim(EXT_F60Q_src.RPT_TYPE) AS RPT_TYPE,
        btrim(EXT_F60Q_src.BLANK2) AS BLANK2,
        btrim(EXT_F60Q_src.STATUS) AS STATUS,
        btrim(EXT_F60Q_src.BLANK3) AS BLANK3,
        btrim(EXT_F60Q_src.SUBCAT) AS SUBCAT,
        btrim(EXT_F60Q_src.STATE_CODE) AS STATE_CODE,
        btrim(EXT_F60Q_src.COUNTY_CODE) AS COUNTY_CODE,
        btrim(EXT_F60Q_src.REC_TYPE) AS REC_TYPE,
        EXT_F60Q_src.batch_id,
        EXT_F60Q_src.row_id,
        EXT_F60Q_src.update_ts
 FROM teva_ingestion.EXT_F60Q_src
 WHERE (EXT_F60Q_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_F60Q'::varchar(8))));

CREATE  VIEW teva_ingestion.EXT_FACTORY_SALES_852 AS
 SELECT btrim(EXT_FACTORY_SALES_852_src.TRADING_PARTNER) AS TRADING_PARTNER,
        btrim(EXT_FACTORY_SALES_852_src.DISTRIB_CENTER) AS DISTRIB_CENTER,
        btrim(EXT_FACTORY_SALES_852_src.DISTRIB_CENTER_DEA_NUM) AS DISTRIB_CENTER_DEA_NUM,
        btrim(EXT_FACTORY_SALES_852_src.REPORTING_DATE) AS REPORTING_DATE,
        btrim(EXT_FACTORY_SALES_852_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_FACTORY_SALES_852_src.DESCRIPTION) AS DESCRIPTION,
        btrim(EXT_FACTORY_SALES_852_src.NDC) AS NDC,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_RECEIVED = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_RECEIVED))::numeric(37,15) END AS QTY_RECEIVED,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_RECEIVED_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_RECEIVED_DOLLARS))::numeric(37,15) END AS QTY_RECEIVED_DOLLARS,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_SOLD = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_SOLD))::numeric(37,15) END AS QTY_SOLD,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_SOLD_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_SOLD_DOLLARS))::numeric(37,15) END AS QTY_SOLD_DOLLARS,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_OMIT = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_OMIT))::numeric(37,15) END AS QTY_OMIT,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_OMIT_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_OMIT_DOLLARS))::numeric(37,15) END AS QTY_OMIT_DOLLARS,
        CASE WHEN (EXT_FACTORY_SALES_852_src.MTH_END_QTY_ON_HAND = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.MTH_END_QTY_ON_HAND))::numeric(37,15) END AS MTH_END_QTY_ON_HAND,
        CASE WHEN (EXT_FACTORY_SALES_852_src.MTH_END_QTY_ON_HAND_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.MTH_END_QTY_ON_HAND_DOLLARS))::numeric(37,15) END AS MTH_END_QTY_ON_HAND_DOLLARS,
        CASE WHEN (EXT_FACTORY_SALES_852_src.MTH_END_COMMITTED = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.MTH_END_COMMITTED))::numeric(37,15) END AS MTH_END_COMMITTED,
        CASE WHEN (EXT_FACTORY_SALES_852_src.MTH_END_COMMITTED_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.MTH_END_COMMITTED_DOLLARS))::numeric(37,15) END AS MTH_END_COMMITTED_DOLLARS,
        CASE WHEN (EXT_FACTORY_SALES_852_src.MTH_END_RESERVED = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.MTH_END_RESERVED))::numeric(37,15) END AS MTH_END_RESERVED,
        CASE WHEN (EXT_FACTORY_SALES_852_src.MTH_END_RESERVED_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.MTH_END_RESERVED_DOLLARS))::numeric(37,15) END AS MTH_END_RESERVED_DOLLARS,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_RETURN = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_RETURN))::numeric(37,15) END AS QTY_RETURN,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_RETURN_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_RETURN_DOLLARS))::numeric(37,15) END AS QTY_RETURN_DOLLARS,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_CUSTOMER_RETURN = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_CUSTOMER_RETURN))::numeric(37,15) END AS QTY_CUSTOMER_RETURN,
        CASE WHEN (EXT_FACTORY_SALES_852_src.QTY_CUSTOMER_RETURN_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_FACTORY_SALES_852_src.QTY_CUSTOMER_RETURN_DOLLARS))::numeric(37,15) END AS QTY_CUSTOMER_RETURN_DOLLARS,
        EXT_FACTORY_SALES_852_src.batch_id,
        EXT_FACTORY_SALES_852_src.row_id,
        EXT_FACTORY_SALES_852_src.update_ts
 FROM teva_ingestion.EXT_FACTORY_SALES_852_src
 WHERE (EXT_FACTORY_SALES_852_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FACTORY_SALES_852'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_HCOS_ACO_DETAIL AS
 SELECT CASE WHEN (EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_ID))::numeric(37,15) END AS ACO_DETAIL_ID,
        btrim(EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_CODE) AS ACO_DETAIL_CODE,
        btrim(EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_DESC) AS ACO_DETAIL_DESC,
        btrim(EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_GROUP_CODE) AS ACO_DETAIL_GROUP_CODE,
        btrim(EXT_HCOS_ACO_DETAIL_src.ACO_DETAIL_GROUP_DESC) AS ACO_DETAIL_GROUP_DESC,
        EXT_HCOS_ACO_DETAIL_src.batch_id,
        EXT_HCOS_ACO_DETAIL_src.row_id,
        EXT_HCOS_ACO_DETAIL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_DETAIL_src
 WHERE (EXT_HCOS_ACO_DETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_ACO_DETAIL'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_HCOS_ACO_DETAIL_FACT AS
 SELECT btrim(EXT_HCOS_ACO_DETAIL_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_ACO_DETAIL_FACT_src.ACO_TYPE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_DETAIL_FACT_src.ACO_TYPE_ID))::numeric(37,15) END AS ACO_TYPE_ID,
        CASE WHEN (EXT_HCOS_ACO_DETAIL_FACT_src.ACO_DETAIL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_DETAIL_FACT_src.ACO_DETAIL_ID))::numeric(37,15) END AS ACO_DETAIL_ID,
        btrim(EXT_HCOS_ACO_DETAIL_FACT_src.ACO_VAL) AS ACO_VAL,
        EXT_HCOS_ACO_DETAIL_FACT_src.batch_id,
        EXT_HCOS_ACO_DETAIL_FACT_src.row_id,
        EXT_HCOS_ACO_DETAIL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_DETAIL_FACT_src
 WHERE (EXT_HCOS_ACO_DETAIL_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_ACO_DETAIL_FACT'::varchar(24))));

CREATE  VIEW teva_ingestion.EXT_HCOS_ACO_ORG_FACT AS
 SELECT btrim(EXT_HCOS_ACO_ORG_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_ACO_ORG_FACT_src.ACO_TYPE_DESC = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_ORG_FACT_src.ACO_TYPE_DESC))::numeric(37,15) END AS ACO_TYPE_DESC,
        EXT_HCOS_ACO_ORG_FACT_src.batch_id,
        EXT_HCOS_ACO_ORG_FACT_src.row_id,
        EXT_HCOS_ACO_ORG_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_ORG_FACT_src
 WHERE (EXT_HCOS_ACO_ORG_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_ACO_ORG_FACT'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_HCOS_ACO_PROFESSIONAL_RSTR AS
 SELECT btrim(EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.ACO_TYPE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.ACO_TYPE_ID))::numeric(37,15) END AS ACO_TYPE_ID,
        CASE WHEN (EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.HCE_ID_PRFSNL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.HCE_ID_PRFSNL))::numeric(37,15) END AS HCE_ID_PRFSNL,
        CASE WHEN (EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.PROFESSIONAL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.PROFESSIONAL_ID))::numeric(37,15) END AS PROFESSIONAL_ID,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.batch_id,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.row_id,
        EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_PROFESSIONAL_RSTR_src
 WHERE (EXT_HCOS_ACO_PROFESSIONAL_RSTR_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_ACO_PROFESSIONAL_RSTR'::varchar(30))));

CREATE  VIEW teva_ingestion.ext_hcos_aco_type AS
 SELECT CASE WHEN (EXT_HCOS_ACO_TYPE_src.ACO_TYPE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_ACO_TYPE_src.ACO_TYPE_ID))::numeric(37,15) END AS ACO_TYPE_ID,
        btrim(EXT_HCOS_ACO_TYPE_src.ACO_TYPE_DESC) AS ACO_TYPE_DESC,
        btrim(EXT_HCOS_ACO_TYPE_src.ACO_TYPE_CATG) AS ACO_TYPE_CATG,
        btrim(EXT_HCOS_ACO_TYPE_src.ACO_MODEL) AS ACO_MODEL,
        EXT_HCOS_ACO_TYPE_src.batch_id,
        EXT_HCOS_ACO_TYPE_src.row_id,
        EXT_HCOS_ACO_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_ACO_TYPE_src
 WHERE (EXT_HCOS_ACO_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_ACO_TYPE'::varchar(17))));

CREATE  VIEW teva_ingestion.ext_hcos_affiliation_type AS
 SELECT CASE WHEN (EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_TYPE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_TYPE_ID))::numeric(37,15) END AS AFFIL_TYPE_ID,
        btrim(EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_TYPE_CODE) AS AFFIL_TYPE_CODE,
        btrim(EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_TYPE_DESC) AS AFFIL_TYPE_DESC,
        btrim(EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_GROUP_CODE) AS AFFIL_GROUP_CODE,
        btrim(EXT_HCOS_AFFILIATION_TYPE_src.AFFIL_GROUP_DESC) AS AFFIL_GROUP_DESC,
        EXT_HCOS_AFFILIATION_TYPE_src.batch_id,
        EXT_HCOS_AFFILIATION_TYPE_src.row_id,
        EXT_HCOS_AFFILIATION_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_AFFILIATION_TYPE_src
 WHERE (EXT_HCOS_AFFILIATION_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_AFFILIATION_TYPE'::varchar(25))));

CREATE  VIEW teva_ingestion.ext_hcos_bed_cluster_type AS
 SELECT CASE WHEN (EXT_HCOS_BED_CLUSTER_TYPE_src.BED_CLUSTER_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BED_CLUSTER_TYPE_src.BED_CLUSTER_ID))::numeric(37,15) END AS BED_CLUSTER_ID,
        btrim(EXT_HCOS_BED_CLUSTER_TYPE_src.BED_CLUSTER_DESC) AS BED_CLUSTER_DESC,
        EXT_HCOS_BED_CLUSTER_TYPE_src.batch_id,
        EXT_HCOS_BED_CLUSTER_TYPE_src.row_id,
        EXT_HCOS_BED_CLUSTER_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BED_CLUSTER_TYPE_src
 WHERE (EXT_HCOS_BED_CLUSTER_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_BED_CLUSTER_TYPE'::varchar(25))));

CREATE  VIEW teva_ingestion.ext_hcos_bed_fact AS
 SELECT btrim(EXT_HCOS_BED_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_BED_FACT_src.BED_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BED_FACT_src.BED_ID))::numeric(37,15) END AS BED_ID,
        CASE WHEN (EXT_HCOS_BED_FACT_src.LICENSE_BEDS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BED_FACT_src.LICENSE_BEDS))::numeric(37,15) END AS LICENSE_BEDS,
        CASE WHEN (EXT_HCOS_BED_FACT_src.CENSUS_BEDS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BED_FACT_src.CENSUS_BEDS))::numeric(37,15) END AS CENSUS_BEDS,
        CASE WHEN (EXT_HCOS_BED_FACT_src.STAFFED_BEDS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BED_FACT_src.STAFFED_BEDS))::numeric(37,15) END AS STAFFED_BEDS,
        EXT_HCOS_BED_FACT_src.batch_id,
        EXT_HCOS_BED_FACT_src.row_id,
        EXT_HCOS_BED_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BED_FACT_src
 WHERE (EXT_HCOS_BED_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_BED_FACT'::varchar(17))));

CREATE  VIEW teva_ingestion.ext_hcos_bed_type AS
 SELECT CASE WHEN (EXT_HCOS_BED_TYPE_src.BED_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BED_TYPE_src.BED_ID))::numeric(37,15) END AS BED_ID,
        btrim(EXT_HCOS_BED_TYPE_src.BED_CODE) AS BED_CODE,
        btrim(EXT_HCOS_BED_TYPE_src.BED_DESC) AS BED_DESC,
        EXT_HCOS_BED_TYPE_src.batch_id,
        EXT_HCOS_BED_TYPE_src.row_id,
        EXT_HCOS_BED_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BED_TYPE_src
 WHERE (EXT_HCOS_BED_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_BED_TYPE'::varchar(17))));

CREATE  VIEW teva_ingestion.ext_hcos_business AS
 SELECT btrim(EXT_HCOS_BUSINESS_src.IMS_ORG_ID) AS IMS_ORG_ID,
        btrim(EXT_HCOS_BUSINESS_src.BUSINESS_NAME) AS BUSINESS_NAME,
        btrim(EXT_HCOS_BUSINESS_src.DBA_NAME) AS DBA_NAME,
        btrim(EXT_HCOS_BUSINESS_src.CARE_OF_LOCATION) AS CARE_OF_LOCATION,
        btrim(EXT_HCOS_BUSINESS_src.ADDRESS_ID) AS ADDRESS_ID,
        btrim(EXT_HCOS_BUSINESS_src.STF_ID) AS STF_ID,
        btrim(EXT_HCOS_BUSINESS_src.PHYSICAL_ADDR_1) AS PHYSICAL_ADDR_1,
        btrim(EXT_HCOS_BUSINESS_src.PHYSICAL_ADDR_2) AS PHYSICAL_ADDR_2,
        btrim(EXT_HCOS_BUSINESS_src.PHYSICAL_CITY) AS PHYSICAL_CITY,
        btrim(EXT_HCOS_BUSINESS_src.PHYSICAL_STATE) AS PHYSICAL_STATE,
        btrim(EXT_HCOS_BUSINESS_src.PHYSICAL_ZIP) AS PHYSICAL_ZIP,
        btrim(EXT_HCOS_BUSINESS_src.POSTAL_ADDR_1) AS POSTAL_ADDR_1,
        btrim(EXT_HCOS_BUSINESS_src.POSTAL_ADDR_2) AS POSTAL_ADDR_2,
        btrim(EXT_HCOS_BUSINESS_src.POSTAL_CITY) AS POSTAL_CITY,
        btrim(EXT_HCOS_BUSINESS_src.POSTAL_STATE) AS POSTAL_STATE,
        btrim(EXT_HCOS_BUSINESS_src.POSTAL_ZIP) AS POSTAL_ZIP,
        btrim(EXT_HCOS_BUSINESS_src.PHONE) AS PHONE,
        btrim(EXT_HCOS_BUSINESS_src.FAX) AS FAX,
        btrim(EXT_HCOS_BUSINESS_src.WEBSITE) AS WEBSITE,
        CASE WHEN (EXT_HCOS_BUSINESS_src.LATITUDE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.LATITUDE))::numeric(37,15) END AS LATITUDE,
        CASE WHEN (EXT_HCOS_BUSINESS_src.LONGITUDE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.LONGITUDE))::numeric(37,15) END AS LONGITUDE,
        btrim(EXT_HCOS_BUSINESS_src.OWNER_STATUS) AS OWNER_STATUS,
        btrim(EXT_HCOS_BUSINESS_src.PROFIT_STATUS) AS PROFIT_STATUS,
        CASE WHEN (EXT_HCOS_BUSINESS_src.CMI = ''::varchar) THEN NULL::numeric(6,4) ELSE (btrim(EXT_HCOS_BUSINESS_src.CMI))::numeric(6,4) END AS CMI,
        CASE WHEN (EXT_HCOS_BUSINESS_src.PRIMARY_COT_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.PRIMARY_COT_ID))::numeric(37,15) END AS PRIMARY_COT_ID,
        CASE WHEN (EXT_HCOS_BUSINESS_src.COT_CLASSIFICATION_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.COT_CLASSIFICATION_ID))::numeric(37,15) END AS COT_CLASSIFICATION_ID,
        btrim(EXT_HCOS_BUSINESS_src.COT_CLASSIFICATION) AS COT_CLASSIFICATION,
        CASE WHEN (EXT_HCOS_BUSINESS_src.COT_FACILITY_TYPE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.COT_FACILITY_TYPE_ID))::numeric(37,15) END AS COT_FACILITY_TYPE_ID,
        btrim(EXT_HCOS_BUSINESS_src.COT_FACILITY_TYPE) AS COT_FACILITY_TYPE,
        CASE WHEN (EXT_HCOS_BUSINESS_src.COT_SPECIALTY_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.COT_SPECIALTY_ID))::numeric(37,15) END AS COT_SPECIALTY_ID,
        btrim(EXT_HCOS_BUSINESS_src.COT_SPECIALTY) AS COT_SPECIALTY,
        btrim(EXT_HCOS_BUSINESS_src.RECORD_TYPE) AS RECORD_TYPE,
        CASE WHEN (EXT_HCOS_BUSINESS_src.BED_CLUSTER_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.BED_CLUSTER_ID))::numeric(37,15) END AS BED_CLUSTER_ID,
        CASE WHEN (EXT_HCOS_BUSINESS_src.TTL_LICENSE_BEDS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.TTL_LICENSE_BEDS))::numeric(37,15) END AS TTL_LICENSE_BEDS,
        CASE WHEN (EXT_HCOS_BUSINESS_src.TTL_CENSUS_BEDS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.TTL_CENSUS_BEDS))::numeric(37,15) END AS TTL_CENSUS_BEDS,
        CASE WHEN (EXT_HCOS_BUSINESS_src.TTL_STAFFED_BEDS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.TTL_STAFFED_BEDS))::numeric(37,15) END AS TTL_STAFFED_BEDS,
        btrim((EXT_HCOS_BUSINESS_src.TEACHING_HOSP)::varchar(1)) AS TEACHING_HOSP,
        btrim(EXT_HCOS_BUSINESS_src.COMMHOSP) AS COMMHOSP,
        btrim(EXT_HCOS_BUSINESS_src.ALL_DDD) AS ALL_DDD,
        btrim(EXT_HCOS_BUSINESS_src.ALL_NPI) AS ALL_NPI,
        btrim(EXT_HCOS_BUSINESS_src.HIN) AS HIN,
        btrim(EXT_HCOS_BUSINESS_src.DEA) AS DEA,
        btrim(EXT_HCOS_BUSINESS_src.MPN) AS MPN,
        btrim(EXT_HCOS_BUSINESS_src.MPN_ORDER) AS MPN_ORDER,
        btrim(EXT_HCOS_BUSINESS_src.MSA) AS MSA,
        btrim(EXT_HCOS_BUSINESS_src.FIPS_STATE) AS FIPS_STATE,
        btrim(EXT_HCOS_BUSINESS_src.FIPS_COUNTY) AS FIPS_COUNTY,
        CASE WHEN (EXT_HCOS_BUSINESS_src.NUM_OF_PROVIDERS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_src.NUM_OF_PROVIDERS))::numeric(37,15) END AS NUM_OF_PROVIDERS,
        btrim(EXT_HCOS_BUSINESS_src.CORP_PARENT_IMS_ORG_ID) AS CORP_PARENT_IMS_ORG_ID,
        btrim(EXT_HCOS_BUSINESS_src.CORP_PARENT_NAME) AS CORP_PARENT_NAME,
        btrim(EXT_HCOS_BUSINESS_src.OWNER_SUB_IMS_ORG_ID) AS OWNER_SUB_IMS_ORG_ID,
        btrim(EXT_HCOS_BUSINESS_src.OWNER_SUB_NAME) AS OWNER_SUB_NAME,
        btrim(EXT_HCOS_BUSINESS_src.GPO_PHARMA_IMS_ORG_ID) AS GPO_PHARMA_IMS_ORG_ID,
        btrim(EXT_HCOS_BUSINESS_src.GPO_PHARMA_NAME) AS GPO_PHARMA_NAME,
        btrim(EXT_HCOS_BUSINESS_src.GPO_MEDSURG_IMS_ORG_ID) AS GPO_MEDSURG_IMS_ORG_ID,
        btrim(EXT_HCOS_BUSINESS_src.GPO_MEDSURG_NAME) AS GPO_MEDSURG_NAME,
        btrim(EXT_HCOS_BUSINESS_src.PHARMA_PROV_IMS_ORG_ID) AS PHARMA_PROV_IMS_ORG_ID,
        btrim(EXT_HCOS_BUSINESS_src.PHARMA_PROV_NAME) AS PHARMA_PROV_NAME,
        btrim(EXT_HCOS_BUSINESS_src.FORMULARY) AS FORMULARY,
        btrim(EXT_HCOS_BUSINESS_src.ELECTRONIC_MED_REC) AS ELECTRONIC_MED_REC,
        btrim(EXT_HCOS_BUSINESS_src.EPRESCRIBE) AS EPRESCRIBE,
        btrim(EXT_HCOS_BUSINESS_src.PAYPERFORM) AS PAYPERFORM,
        btrim(EXT_HCOS_BUSINESS_src.GENFIRST) AS GENFIRST,
        btrim(EXT_HCOS_BUSINESS_src.SREP_ACCESS) AS SREP_ACCESS,
        btrim(EXT_HCOS_BUSINESS_src.DEACTIVATION_REASON) AS DEACTIVATION_REASON,
        btrim(EXT_HCOS_BUSINESS_src.REFERBACK_IMS_ORG_ID) AS REFERBACK_IMS_ORG_ID,
        btrim(EXT_HCOS_BUSINESS_src.STATUS_INDICATOR) AS STATUS_INDICATOR,
        EXT_HCOS_BUSINESS_src.batch_id,
        EXT_HCOS_BUSINESS_src.row_id,
        EXT_HCOS_BUSINESS_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BUSINESS_src
 WHERE (EXT_HCOS_BUSINESS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_BUSINESS'::varchar(17))));

CREATE  VIEW teva_ingestion.ext_hcos_business_detail AS
 SELECT CASE WHEN (EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_ID))::numeric(37,15) END AS DETAIL_ID,
        btrim(EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_CODE) AS DETAIL_CODE,
        btrim(EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_DESC) AS DETAIL_DESC,
        btrim(EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_GROUP_CODE) AS DETAIL_GROUP_CODE,
        btrim(EXT_HCOS_BUSINESS_DETAIL_src.DETAIL_GROUP_CODE_DESC) AS DETAIL_GROUP_CODE_DESC,
        EXT_HCOS_BUSINESS_DETAIL_src.batch_id,
        EXT_HCOS_BUSINESS_DETAIL_src.row_id,
        EXT_HCOS_BUSINESS_DETAIL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_src
 WHERE (EXT_HCOS_BUSINESS_DETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_BUSINESS_DETAIL'::varchar(24))));

CREATE  VIEW teva_ingestion.ext_hcos_business_detail_fact AS
 SELECT btrim(EXT_HCOS_BUSINESS_DETAIL_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_ID))::numeric(37,15) END AS DETAIL_ID,
        btrim(EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_VALUE) AS DETAIL_VALUE,
        CASE WHEN (EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_COUNT = ''::varchar) THEN NULL::numeric(12,4) ELSE (btrim(EXT_HCOS_BUSINESS_DETAIL_FACT_src.DETAIL_COUNT))::numeric(12,4) END AS DETAIL_COUNT,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.batch_id,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.row_id,
        EXT_HCOS_BUSINESS_DETAIL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_BUSINESS_DETAIL_FACT_src
 WHERE (EXT_HCOS_BUSINESS_DETAIL_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_BUSINESS_DETAIL_FACT'::varchar(29))));

CREATE  VIEW teva_ingestion.ext_hcos_class_of_trade AS
 SELECT CASE WHEN (EXT_HCOS_CLASS_OF_TRADE_src.COT_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLASS_OF_TRADE_src.COT_ID))::numeric(37,15) END AS COT_ID,
        CASE WHEN (EXT_HCOS_CLASS_OF_TRADE_src.CLASSIFICATION_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLASS_OF_TRADE_src.CLASSIFICATION_ID))::numeric(37,15) END AS CLASSIFICATION_ID,
        btrim(EXT_HCOS_CLASS_OF_TRADE_src.CLASSIFICATION) AS CLASSIFICATION,
        CASE WHEN (EXT_HCOS_CLASS_OF_TRADE_src.FACILITY_TYPE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLASS_OF_TRADE_src.FACILITY_TYPE_ID))::numeric(37,15) END AS FACILITY_TYPE_ID,
        btrim(EXT_HCOS_CLASS_OF_TRADE_src.FACILITY_TYPE) AS FACILITY_TYPE,
        CASE WHEN (EXT_HCOS_CLASS_OF_TRADE_src.SPECIALTY_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLASS_OF_TRADE_src.SPECIALTY_ID))::numeric(37,15) END AS SPECIALTY_ID,
        btrim(EXT_HCOS_CLASS_OF_TRADE_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_HCOS_CLASS_OF_TRADE_src.RECORD_TYPE) AS RECORD_TYPE,
        EXT_HCOS_CLASS_OF_TRADE_src.batch_id,
        EXT_HCOS_CLASS_OF_TRADE_src.row_id,
        EXT_HCOS_CLASS_OF_TRADE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLASS_OF_TRADE_src
 WHERE (EXT_HCOS_CLASS_OF_TRADE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_CLASS_OF_TRADE'::varchar(23))));

CREATE  VIEW teva_ingestion.ext_hcos_clinical_code AS
 SELECT CASE WHEN (EXT_HCOS_CLINICAL_CODE_src.CODE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_CODE_src.CODE_ID))::numeric(37,15) END AS CODE_ID,
        btrim(EXT_HCOS_CLINICAL_CODE_src.CLIN_CODE) AS CLIN_CODE,
        btrim(EXT_HCOS_CLINICAL_CODE_src.CLIN_CODE_DESC) AS CLIN_CODE_DESC,
        CASE WHEN (EXT_HCOS_CLINICAL_CODE_src.CCS_CODE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_CODE_src.CCS_CODE))::numeric(37,15) END AS CCS_CODE,
        btrim(EXT_HCOS_CLINICAL_CODE_src.CCS_DESC) AS CCS_DESC,
        CASE WHEN (EXT_HCOS_CLINICAL_CODE_src.MDC_CODE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_CODE_src.MDC_CODE))::numeric(37,15) END AS MDC_CODE,
        btrim(EXT_HCOS_CLINICAL_CODE_src.MDC_DESC) AS MDC_DESC,
        btrim(EXT_HCOS_CLINICAL_CODE_src.CODE_CATEGORY) AS CODE_CATEGORY,
        btrim((EXT_HCOS_CLINICAL_CODE_src.SURGICAL_CODE)::varchar(1)) AS SURGICAL_CODE,
        btrim((EXT_HCOS_CLINICAL_CODE_src.OR_CODE)::varchar(1)) AS OR_CODE,
        EXT_HCOS_CLINICAL_CODE_src.batch_id,
        EXT_HCOS_CLINICAL_CODE_src.row_id,
        EXT_HCOS_CLINICAL_CODE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLINICAL_CODE_src
 WHERE (EXT_HCOS_CLINICAL_CODE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_CLINICAL_CODE'::varchar(22))));

CREATE  VIEW teva_ingestion.ext_hcos_clinical_fact AS
 SELECT btrim(EXT_HCOS_CLINICAL_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.CODE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.CODE_ID))::numeric(37,15) END AS CODE_ID,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.DATA_YEAR = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.DATA_YEAR))::numeric(4,0) END AS DATA_YEAR,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.INPAT_VOL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.INPAT_VOL))::numeric(37,15) END AS INPAT_VOL,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.OUTPAT_VOL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.OUTPAT_VOL))::numeric(37,15) END AS OUTPAT_VOL,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.TTL_VOL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.TTL_VOL))::numeric(37,15) END AS TTL_VOL,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.DECILE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.DECILE))::numeric(37,15) END AS DECILE,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.AVG_LOS = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.AVG_LOS))::numeric(9,2) END AS AVG_LOS,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_src.AVG_COS = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_src.AVG_COS))::numeric(9,2) END AS AVG_COS,
        btrim(EXT_HCOS_CLINICAL_FACT_src.CODE_ORDER) AS CODE_ORDER,
        btrim(EXT_HCOS_CLINICAL_FACT_src.GPO_VIEW) AS GPO_VIEW,
        btrim(EXT_HCOS_CLINICAL_FACT_src.USE_FOR_AGG) AS USE_FOR_AGG,
        EXT_HCOS_CLINICAL_FACT_src.batch_id,
        EXT_HCOS_CLINICAL_FACT_src.row_id,
        EXT_HCOS_CLINICAL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLINICAL_FACT_src
 WHERE (EXT_HCOS_CLINICAL_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_CLINICAL_FACT'::varchar(22))));

CREATE  VIEW teva_ingestion.ext_hcos_clinical_fact_national AS
 SELECT CASE WHEN (ext_hcos_clinical_fact_national_src.CODE_ID = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_clinical_fact_national_src.CODE_ID))::int END AS CODE_ID,
        CASE WHEN (ext_hcos_clinical_fact_national_src.DATA_YEAR = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_clinical_fact_national_src.DATA_YEAR))::int END AS DATA_YEAR,
        CASE WHEN (ext_hcos_clinical_fact_national_src.INPAT_VOL = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_clinical_fact_national_src.INPAT_VOL))::int END AS INPAT_VOL,
        CASE WHEN (ext_hcos_clinical_fact_national_src.OUTPAT_VOL = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_clinical_fact_national_src.OUTPAT_VOL))::int END AS OUTPAT_VOL,
        CASE WHEN (ext_hcos_clinical_fact_national_src.TTL_VOL = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_clinical_fact_national_src.TTL_VOL))::int END AS TTL_VOL,
        CASE WHEN (ext_hcos_clinical_fact_national_src.AVG_LOS = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(ext_hcos_clinical_fact_national_src.AVG_LOS))::numeric(9,2) END AS AVG_LOS,
        CASE WHEN (ext_hcos_clinical_fact_national_src.AVG_COS = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(ext_hcos_clinical_fact_national_src.AVG_COS))::numeric(9,2) END AS AVG_COS,
        CASE WHEN (ext_hcos_clinical_fact_national_src.TREND = ''::varchar) THEN NULL::numeric(5,2) ELSE (btrim(ext_hcos_clinical_fact_national_src.TREND))::numeric(5,2) END AS TREND,
        btrim(ext_hcos_clinical_fact_national_src.CODE_ORDER) AS CODE_ORDER,
        ext_hcos_clinical_fact_national_src.batch_id,
        ext_hcos_clinical_fact_national_src.row_id,
        ext_hcos_clinical_fact_national_src.update_ts
 FROM teva_ingestion.ext_hcos_clinical_fact_national_src
 WHERE (ext_hcos_clinical_fact_national_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_CLINICAL_FACT_NATIONAL'::varchar(31))));

CREATE  VIEW teva_ingestion.ext_hcos_clinical_fact_state AS
 SELECT CASE WHEN (EXT_HCOS_CLINICAL_FACT_STATE_src.CODE_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.CODE_ID))::numeric(37,15) END AS CODE_ID,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_STATE_src.DATA_YEAR = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.DATA_YEAR))::numeric(4,0) END AS DATA_YEAR,
        btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.STATE) AS STATE,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_STATE_src.INPAT_VOL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.INPAT_VOL))::numeric(37,15) END AS INPAT_VOL,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_STATE_src.OUTPAT_VOL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.OUTPAT_VOL))::numeric(37,15) END AS OUTPAT_VOL,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_STATE_src.TTL_VOL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.TTL_VOL))::numeric(37,15) END AS TTL_VOL,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_STATE_src.AVG_LOS = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.AVG_LOS))::numeric(9,2) END AS AVG_LOS,
        CASE WHEN (EXT_HCOS_CLINICAL_FACT_STATE_src.AVG_COS = ''::varchar) THEN NULL::numeric(9,2) ELSE (btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.AVG_COS))::numeric(9,2) END AS AVG_COS,
        btrim(EXT_HCOS_CLINICAL_FACT_STATE_src.CODE_ORDER) AS CODE_ORDER,
        EXT_HCOS_CLINICAL_FACT_STATE_src.batch_id,
        EXT_HCOS_CLINICAL_FACT_STATE_src.row_id,
        EXT_HCOS_CLINICAL_FACT_STATE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CLINICAL_FACT_STATE_src
 WHERE (EXT_HCOS_CLINICAL_FACT_STATE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_CLINICAL_FACT_STATE'::varchar(28))));

CREATE  VIEW teva_ingestion.ext_hcos_contact_affiltn_fact AS
 SELECT btrim(EXT_HCOS_CONTACT_AFFILTN_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_CONTACT_AFFILTN_FACT_src.HCE_ID_PRFSNL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CONTACT_AFFILTN_FACT_src.HCE_ID_PRFSNL))::numeric(37,15) END AS HCE_ID_PRFSNL,
        CASE WHEN (EXT_HCOS_CONTACT_AFFILTN_FACT_src.PROFESSIONAL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_CONTACT_AFFILTN_FACT_src.PROFESSIONAL_ID))::numeric(37,15) END AS PROFESSIONAL_ID,
        btrim(EXT_HCOS_CONTACT_AFFILTN_FACT_src.TITLE_GROUP_CODE) AS TITLE_GROUP_CODE,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.batch_id,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.row_id,
        EXT_HCOS_CONTACT_AFFILTN_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_CONTACT_AFFILTN_FACT_src
 WHERE (EXT_HCOS_CONTACT_AFFILTN_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_CONTACT_AFFILTN_FACT'::varchar(29))));

CREATE  VIEW teva_ingestion.ext_hcos_cot_fact AS
 SELECT btrim(EXT_HCOS_COT_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_COT_FACT_src.COT_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_COT_FACT_src.COT_ID))::numeric(37,15) END AS COT_ID,
        CASE WHEN (EXT_HCOS_COT_FACT_src.COT_ORDER = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_COT_FACT_src.COT_ORDER))::numeric(37,15) END AS COT_ORDER,
        EXT_HCOS_COT_FACT_src.batch_id,
        EXT_HCOS_COT_FACT_src.row_id,
        EXT_HCOS_COT_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_COT_FACT_src
 WHERE (EXT_HCOS_COT_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_COT_FACT'::varchar(17))));

CREATE  VIEW teva_ingestion.ext_hcos_financial_fact AS
 SELECT btrim(EXT_HCOS_FINANCIAL_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.DATA_YEAR = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.DATA_YEAR))::numeric(4,0) END AS DATA_YEAR,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.INPAT_REV = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.INPAT_REV))::numeric(37,15) END AS INPAT_REV,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.OUTPAT_REV = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.OUTPAT_REV))::numeric(37,15) END AS OUTPAT_REV,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.TTL_PAT_REV = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.TTL_PAT_REV))::numeric(37,15) END AS TTL_PAT_REV,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.NET_PAT_REV = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.NET_PAT_REV))::numeric(37,15) END AS NET_PAT_REV,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.OP_EXP = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.OP_EXP))::numeric(37,15) END AS OP_EXP,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.OTH_EXP = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.OTH_EXP))::numeric(37,15) END AS OTH_EXP,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.TTL_EXP = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.TTL_EXP))::numeric(37,15) END AS TTL_EXP,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.SUPPLY_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.SUPPLY_COST))::numeric(37,15) END AS SUPPLY_COST,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.DRUG_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.DRUG_COST))::numeric(37,15) END AS DRUG_COST,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.TTL_SALARIES = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.TTL_SALARIES))::numeric(37,15) END AS TTL_SALARIES,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.NET_INC_PAT = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.NET_INC_PAT))::numeric(37,15) END AS NET_INC_PAT,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.NET_INC = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.NET_INC))::numeric(37,15) END AS NET_INC,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.COST_PER_BED = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.COST_PER_BED))::numeric(37,15) END AS COST_PER_BED,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.TTL_ASSETS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.TTL_ASSETS))::numeric(37,15) END AS TTL_ASSETS,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.FTE_EMP = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.FTE_EMP))::numeric(37,15) END AS FTE_EMP,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.CURR_ASSETS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.CURR_ASSETS))::numeric(37,15) END AS CURR_ASSETS,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.CURR_LIAB = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.CURR_LIAB))::numeric(37,15) END AS CURR_LIAB,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.FIX_ASSETS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.FIX_ASSETS))::numeric(37,15) END AS FIX_ASSETS,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.FRINGE_BENEFITS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.FRINGE_BENEFITS))::numeric(37,15) END AS FRINGE_BENEFITS,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.FUND_BAL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.FUND_BAL))::numeric(37,15) END AS FUND_BAL,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.GOV_APPR = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.GOV_APPR))::numeric(37,15) END AS GOV_APPR,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.H_IN_REV = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.H_IN_REV))::numeric(37,15) END AS H_IN_REV,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.L_T_LIAB = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.L_T_LIAB))::numeric(37,15) END AS L_T_LIAB,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.NON_PAT_REV = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.NON_PAT_REV))::numeric(37,15) END AS NON_PAT_REV,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.OTH_ASSETS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.OTH_ASSETS))::numeric(37,15) END AS OTH_ASSETS,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.OTH_INCOME = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.OTH_INCOME))::numeric(37,15) END AS OTH_INCOME,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.H_OUT_REV = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.H_OUT_REV))::numeric(37,15) END AS H_OUT_REV,
        CASE WHEN (EXT_HCOS_FINANCIAL_FACT_src.TOT_LIAB = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_FINANCIAL_FACT_src.TOT_LIAB))::numeric(37,15) END AS TOT_LIAB,
        EXT_HCOS_FINANCIAL_FACT_src.batch_id,
        EXT_HCOS_FINANCIAL_FACT_src.row_id,
        EXT_HCOS_FINANCIAL_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_FINANCIAL_FACT_src
 WHERE (EXT_HCOS_FINANCIAL_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_FINANCIAL_FACT'::varchar(23))));

CREATE  VIEW teva_ingestion.ext_hcos_identifier_fact AS
 SELECT btrim(EXT_HCOS_IDENTIFIER_FACT_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (EXT_HCOS_IDENTIFIER_FACT_src.HCE_ID_PRFSNL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_IDENTIFIER_FACT_src.HCE_ID_PRFSNL))::numeric(37,15) END AS HCE_ID_PRFSNL,
        CASE WHEN (EXT_HCOS_IDENTIFIER_FACT_src.PROFESSIONAL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_IDENTIFIER_FACT_src.PROFESSIONAL_ID))::numeric(37,15) END AS PROFESSIONAL_ID,
        CASE WHEN (EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_ID))::numeric(37,15) END AS IDENTIFIER_ID,
        btrim(EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER) AS IDENTIFIER,
        btrim(EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_ORDER) AS IDENTIFIER_ORDER,
        btrim(EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_CATEGORY) AS IDENTIFIER_CATEGORY,
        btrim(EXT_HCOS_IDENTIFIER_FACT_src.IDENTIFIER_STATE) AS IDENTIFIER_STATE,
        btrim(EXT_HCOS_IDENTIFIER_FACT_src.SRC_STRT_DT) AS SRC_STRT_DT,
        btrim(EXT_HCOS_IDENTIFIER_FACT_src.SRC_TRMTN_DT) AS SRC_TRMTN_DT,
        btrim(EXT_HCOS_IDENTIFIER_FACT_src.SRC_TRMTN_CD) AS SRC_TRMTN_CD,
        EXT_HCOS_IDENTIFIER_FACT_src.batch_id,
        EXT_HCOS_IDENTIFIER_FACT_src.row_id,
        EXT_HCOS_IDENTIFIER_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_IDENTIFIER_FACT_src
 WHERE (EXT_HCOS_IDENTIFIER_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_IDENTIFIER_FACT'::varchar(24))));

CREATE  VIEW teva_ingestion.ext_hcos_identifier_type AS
 SELECT CASE WHEN (EXT_HCOS_IDENTIFIER_TYPE_src.IDENTIFIER_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_IDENTIFIER_TYPE_src.IDENTIFIER_ID))::numeric(37,15) END AS IDENTIFIER_ID,
        btrim(EXT_HCOS_IDENTIFIER_TYPE_src.IDENTIFIER_CODE) AS IDENTIFIER_CODE,
        btrim(EXT_HCOS_IDENTIFIER_TYPE_src.IDENTIFIER_DESC) AS IDENTIFIER_DESC,
        EXT_HCOS_IDENTIFIER_TYPE_src.batch_id,
        EXT_HCOS_IDENTIFIER_TYPE_src.row_id,
        EXT_HCOS_IDENTIFIER_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_IDENTIFIER_TYPE_src
 WHERE (EXT_HCOS_IDENTIFIER_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_IDENTIFIER_TYPE'::varchar(24))));

CREATE  VIEW teva_ingestion.ext_hcos_indentifier_cat_type AS
 SELECT CASE WHEN (EXT_HCOS_INDENTIFIER_CAT_TYPE_src.IDENTIFIER_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_INDENTIFIER_CAT_TYPE_src.IDENTIFIER_ID))::numeric(37,15) END AS IDENTIFIER_ID,
        btrim(EXT_HCOS_INDENTIFIER_CAT_TYPE_src.IDENTIFIER_CATEGORY) AS IDENTIFIER_CATEGORY,
        btrim(EXT_HCOS_INDENTIFIER_CAT_TYPE_src.IDENTIFIER_CATEGORY_DESC) AS IDENTIFIER_CATEGORY_DESC,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.batch_id,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.row_id,
        EXT_HCOS_INDENTIFIER_CAT_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_INDENTIFIER_CAT_TYPE_src
 WHERE (EXT_HCOS_INDENTIFIER_CAT_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_INDENTIFIER_CAT_TYPE'::varchar(29))));

CREATE  VIEW teva_ingestion.ext_hcos_indentifier_term_type AS
 SELECT CASE WHEN (EXT_HCOS_INDENTIFIER_TERM_TYPE_src.IDENTIFIER_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_INDENTIFIER_TERM_TYPE_src.IDENTIFIER_ID))::numeric(37,15) END AS IDENTIFIER_ID,
        btrim(EXT_HCOS_INDENTIFIER_TERM_TYPE_src.SRC_TRMTN_CD) AS SRC_TRMTN_CD,
        btrim(EXT_HCOS_INDENTIFIER_TERM_TYPE_src.SRC_TRMTN_DESC) AS SRC_TRMTN_DESC,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.batch_id,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.row_id,
        EXT_HCOS_INDENTIFIER_TERM_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_INDENTIFIER_TERM_TYPE_src
 WHERE (EXT_HCOS_INDENTIFIER_TERM_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_INDENTIFIER_TERM_TYPE'::varchar(30))));

CREATE  VIEW teva_ingestion.ext_hcos_professional AS
 SELECT CASE WHEN (EXT_HCOS_PROFESSIONAL_src.HCE_ID_PRFSNL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_PROFESSIONAL_src.HCE_ID_PRFSNL))::numeric(37,15) END AS HCE_ID_PRFSNL,
        CASE WHEN (EXT_HCOS_PROFESSIONAL_src.PROFESSIONAL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_PROFESSIONAL_src.PROFESSIONAL_ID))::numeric(37,15) END AS PROFESSIONAL_ID,
        btrim(EXT_HCOS_PROFESSIONAL_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_HCOS_PROFESSIONAL_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(EXT_HCOS_PROFESSIONAL_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_HCOS_PROFESSIONAL_src.GEN_SUFFIX) AS GEN_SUFFIX,
        btrim(EXT_HCOS_PROFESSIONAL_src.DESIGNATION) AS DESIGNATION,
        btrim(EXT_HCOS_PROFESSIONAL_src.GENDER) AS GENDER,
        btrim((EXT_HCOS_PROFESSIONAL_src.ROLE)::varchar(1)) AS ROLE,
        btrim(EXT_HCOS_PROFESSIONAL_src.PRIMARY_SPEC) AS PRIMARY_SPEC,
        btrim(EXT_HCOS_PROFESSIONAL_src.SECONDARY_SPEC) AS SECONDARY_SPEC,
        btrim(EXT_HCOS_PROFESSIONAL_src.TERTIARY_SPEC) AS TERTIARY_SPEC,
        btrim(EXT_HCOS_PROFESSIONAL_src.PRIMARY_PROF_CODE) AS PRIMARY_PROF_CODE,
        btrim(EXT_HCOS_PROFESSIONAL_src.PRIMARY_PROF_DESC) AS PRIMARY_PROF_DESC,
        btrim(EXT_HCOS_PROFESSIONAL_src.IMS_ID) AS IMS_ID,
        btrim(EXT_HCOS_PROFESSIONAL_src.UPIN) AS UPIN,
        btrim(EXT_HCOS_PROFESSIONAL_src.ME) AS ME,
        btrim(EXT_HCOS_PROFESSIONAL_src.ALL_DEA) AS ALL_DEA,
        btrim(EXT_HCOS_PROFESSIONAL_src.NPI) AS NPI,
        btrim(EXT_HCOS_PROFESSIONAL_src.STATUS_DESC) AS STATUS_DESC,
        EXT_HCOS_PROFESSIONAL_src.batch_id,
        EXT_HCOS_PROFESSIONAL_src.row_id,
        EXT_HCOS_PROFESSIONAL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_PROFESSIONAL_src
 WHERE (EXT_HCOS_PROFESSIONAL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_PROFESSIONAL'::varchar(21))));

CREATE  VIEW teva_ingestion.ext_hcos_professional_detail AS
 SELECT CASE WHEN (EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_ID))::numeric(37,15) END AS DETAIL_ID,
        btrim(EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_CODE) AS DETAIL_CODE,
        btrim(EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_DESC) AS DETAIL_DESC,
        btrim(EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_GROUP_CODE) AS DETAIL_GROUP_CODE,
        btrim(EXT_HCOS_PROFESSIONAL_DETAIL_src.DETAIL_GROUP_DESC) AS DETAIL_GROUP_DESC,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.batch_id,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.row_id,
        EXT_HCOS_PROFESSIONAL_DETAIL_src.update_ts
 FROM teva_ingestion.EXT_HCOS_PROFESSIONAL_DETAIL_src
 WHERE (EXT_HCOS_PROFESSIONAL_DETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_PROFESSIONAL_DETAIL'::varchar(28))));

CREATE  VIEW teva_ingestion.ext_hcos_professional_detail_fact AS
 SELECT CASE WHEN (ext_hcos_professional_detail_fact_src.HCE_ID_PRFSNL = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_detail_fact_src.HCE_ID_PRFSNL))::int END AS HCE_ID_PRFSNL,
        CASE WHEN (ext_hcos_professional_detail_fact_src.PROFESSIONAL_ID = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_detail_fact_src.PROFESSIONAL_ID))::int END AS PROFESSIONAL_ID,
        CASE WHEN (ext_hcos_professional_detail_fact_src.DETAIL_ID = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_detail_fact_src.DETAIL_ID))::int END AS DETAIL_ID,
        btrim(ext_hcos_professional_detail_fact_src.DETAIL_VALUE) AS DETAIL_VALUE,
        CASE WHEN (ext_hcos_professional_detail_fact_src.DETAIL_COUNT = ''::varchar) THEN NULL::numeric(12,4) ELSE (btrim(ext_hcos_professional_detail_fact_src.DETAIL_COUNT))::numeric(12,4) END AS DETAIL_COUNT,
        ext_hcos_professional_detail_fact_src.batch_id,
        ext_hcos_professional_detail_fact_src.row_id,
        ext_hcos_professional_detail_fact_src.update_ts
 FROM teva_ingestion.ext_hcos_professional_detail_fact_src
 WHERE (ext_hcos_professional_detail_fact_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_PROFESSIONAL_DETAIL_FACT'::varchar(33))));

CREATE  VIEW teva_ingestion.ext_hcos_professional_specialty AS
 SELECT btrim(ext_hcos_professional_specialty_src.SPEC_CODE) AS SPEC_CODE,
        btrim(ext_hcos_professional_specialty_src.SPEC_DESC) AS SPEC_DESC,
        CASE WHEN (ext_hcos_professional_specialty_src.SPEC_SUB_GROUP_CODE = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_specialty_src.SPEC_SUB_GROUP_CODE))::int END AS SPEC_SUB_GROUP_CODE,
        btrim(ext_hcos_professional_specialty_src.SPEC_SUB_GROUP_DESC) AS SPEC_SUB_GROUP_DESC,
        btrim(ext_hcos_professional_specialty_src.SPEC_GROUP_CODE) AS SPEC_GROUP_CODE,
        btrim(ext_hcos_professional_specialty_src.SPEC_GROUP_DESC) AS SPEC_GROUP_DESC,
        CASE WHEN (ext_hcos_professional_specialty_src.ALTERNATE_SUB_GROUP_CODE = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_specialty_src.ALTERNATE_SUB_GROUP_CODE))::int END AS ALTERNATE_SUB_GROUP_CODE,
        btrim(ext_hcos_professional_specialty_src.ALTERNATE_SUB_GROUP_DESC) AS ALTERNATE_SUB_GROUP_DESC,
        ext_hcos_professional_specialty_src.batch_id,
        ext_hcos_professional_specialty_src.row_id,
        ext_hcos_professional_specialty_src.update_ts
 FROM teva_ingestion.ext_hcos_professional_specialty_src
 WHERE (ext_hcos_professional_specialty_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_PROFESSIONAL_SPECIALTY'::varchar(31))));

CREATE  VIEW teva_ingestion.ext_hcos_professional_spec_fact AS
 SELECT CASE WHEN (ext_hcos_professional_spec_fact_src.HCE_ID_PRFSNL = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_spec_fact_src.HCE_ID_PRFSNL))::int END AS HCE_ID_PRFSNL,
        CASE WHEN (ext_hcos_professional_spec_fact_src.PROFESSIONAL_ID = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_spec_fact_src.PROFESSIONAL_ID))::int END AS PROFESSIONAL_ID,
        btrim(ext_hcos_professional_spec_fact_src.SPEC_CODE) AS SPEC_CODE,
        CASE WHEN (ext_hcos_professional_spec_fact_src.SPEC_RANKING = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_professional_spec_fact_src.SPEC_RANKING))::int END AS SPEC_RANKING,
        btrim(ext_hcos_professional_spec_fact_src.SPEC_RANK_DESC) AS SPEC_RANK_DESC,
        ext_hcos_professional_spec_fact_src.batch_id,
        ext_hcos_professional_spec_fact_src.row_id,
        ext_hcos_professional_spec_fact_src.update_ts
 FROM teva_ingestion.ext_hcos_professional_spec_fact_src
 WHERE (ext_hcos_professional_spec_fact_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_PROFESSIONAL_SPEC_FACT'::varchar(31))));

CREATE  VIEW teva_ingestion.ext_hcos_professional_title AS
 SELECT btrim(EXT_HCOS_PROFESSIONAL_TITLE_src.TITLE_GROUP_CODE) AS TITLE_GROUP_CODE,
        btrim(EXT_HCOS_PROFESSIONAL_TITLE_src.TITLE_GROUP_DESC) AS TITLE_GROUP_DESC,
        EXT_HCOS_PROFESSIONAL_TITLE_src.batch_id,
        EXT_HCOS_PROFESSIONAL_TITLE_src.row_id,
        EXT_HCOS_PROFESSIONAL_TITLE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_PROFESSIONAL_TITLE_src
 WHERE (EXT_HCOS_PROFESSIONAL_TITLE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_PROFESSIONAL_TITLE'::varchar(27))));

CREATE  VIEW teva_ingestion.ext_hcos_provider_affiliation_fact AS
 SELECT btrim(ext_hcos_provider_affiliation_fact_src.IMS_ORG_ID) AS IMS_ORG_ID,
        CASE WHEN (ext_hcos_provider_affiliation_fact_src.HCE_ID_PRFSNL = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_provider_affiliation_fact_src.HCE_ID_PRFSNL))::int END AS HCE_ID_PRFSNL,
        CASE WHEN (ext_hcos_provider_affiliation_fact_src.PROFESSIONAL_ID = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_provider_affiliation_fact_src.PROFESSIONAL_ID))::int END AS PROFESSIONAL_ID,
        CASE WHEN (ext_hcos_provider_affiliation_fact_src.AFFIL_TYPE_ID = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_provider_affiliation_fact_src.AFFIL_TYPE_ID))::int END AS AFFIL_TYPE_ID,
        btrim(ext_hcos_provider_affiliation_fact_src.DEA) AS DEA,
        btrim(ext_hcos_provider_affiliation_fact_src.AFFIL_IND) AS AFFIL_IND,
        CASE WHEN (ext_hcos_provider_affiliation_fact_src.AFFIL_RANK = ''::varchar) THEN NULL::int ELSE (btrim(ext_hcos_provider_affiliation_fact_src.AFFIL_RANK))::int END AS AFFIL_RANK,
        ext_hcos_provider_affiliation_fact_src.batch_id,
        ext_hcos_provider_affiliation_fact_src.row_id,
        ext_hcos_provider_affiliation_fact_src.update_ts
 FROM teva_ingestion.ext_hcos_provider_affiliation_fact_src
 WHERE (ext_hcos_provider_affiliation_fact_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_PROVIDER_AFFILIATION_FACT'::varchar(34))));

CREATE  VIEW teva_ingestion.ext_hcos_relationship_fact AS
 SELECT btrim(EXT_HCOS_RELATIONSHIP_FACT_src.IMS_ORG_ID_PARENT) AS IMS_ORG_ID_PARENT,
        btrim(EXT_HCOS_RELATIONSHIP_FACT_src.IMS_ORG_ID_CHILD) AS IMS_ORG_ID_CHILD,
        CASE WHEN (EXT_HCOS_RELATIONSHIP_FACT_src.REL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_RELATIONSHIP_FACT_src.REL_ID))::numeric(37,15) END AS REL_ID,
        CASE WHEN (EXT_HCOS_RELATIONSHIP_FACT_src.REL_ORDER = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_RELATIONSHIP_FACT_src.REL_ORDER))::numeric(37,15) END AS REL_ORDER,
        EXT_HCOS_RELATIONSHIP_FACT_src.batch_id,
        EXT_HCOS_RELATIONSHIP_FACT_src.row_id,
        EXT_HCOS_RELATIONSHIP_FACT_src.update_ts
 FROM teva_ingestion.EXT_HCOS_RELATIONSHIP_FACT_src
 WHERE (EXT_HCOS_RELATIONSHIP_FACT_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_RELATIONSHIP_FACT'::varchar(26))));

CREATE  VIEW teva_ingestion.ext_hcos_relationship_type AS
 SELECT CASE WHEN (EXT_HCOS_RELATIONSHIP_TYPE_src.REL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_HCOS_RELATIONSHIP_TYPE_src.REL_ID))::numeric(37,15) END AS REL_ID,
        btrim(EXT_HCOS_RELATIONSHIP_TYPE_src.REL_CODE) AS REL_CODE,
        btrim(EXT_HCOS_RELATIONSHIP_TYPE_src.REL_DESC) AS REL_DESC,
        btrim(EXT_HCOS_RELATIONSHIP_TYPE_src.REL_GROUP_CODE) AS REL_GROUP_CODE,
        btrim(EXT_HCOS_RELATIONSHIP_TYPE_src.REL_GROUP_DESC) AS REL_GROUP_DESC,
        btrim(EXT_HCOS_RELATIONSHIP_TYPE_src.REL_CATEGORY_CODE) AS REL_CATEGORY_CODE,
        btrim(EXT_HCOS_RELATIONSHIP_TYPE_src.REL_CATEGORY_DESC) AS REL_CATEGORY_DESC,
        EXT_HCOS_RELATIONSHIP_TYPE_src.batch_id,
        EXT_HCOS_RELATIONSHIP_TYPE_src.row_id,
        EXT_HCOS_RELATIONSHIP_TYPE_src.update_ts
 FROM teva_ingestion.EXT_HCOS_RELATIONSHIP_TYPE_src
 WHERE (EXT_HCOS_RELATIONSHIP_TYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_HCOS_RELATIONSHIP_TYPE'::varchar(26))));

CREATE  VIEW teva_ingestion.EXT_I3_RX AS
 SELECT btrim(EXT_I3_RX_src.FULL_NAME) AS FULL_NAME,
        btrim(EXT_I3_RX_src.SPECIALTY) AS SPECIALTY,
        CASE WHEN (EXT_I3_RX_src.RANK = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.RANK))::numeric(37,15) END AS RANK,
        CASE WHEN (EXT_I3_RX_src.TOTAL = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.TOTAL))::numeric(37,15) END AS TOTAL,
        CASE WHEN (EXT_I3_RX_src.AUBAGIO = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.AUBAGIO))::numeric(37,15) END AS AUBAGIO,
        CASE WHEN (EXT_I3_RX_src.AVONEX = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.AVONEX))::numeric(37,15) END AS AVONEX,
        CASE WHEN (EXT_I3_RX_src.BETASERON = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.BETASERON))::numeric(37,15) END AS BETASERON,
        CASE WHEN (EXT_I3_RX_src.COPAXONE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.COPAXONE))::numeric(37,15) END AS COPAXONE,
        CASE WHEN (EXT_I3_RX_src.EXTAVIA = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.EXTAVIA))::numeric(37,15) END AS EXTAVIA,
        CASE WHEN (EXT_I3_RX_src.GILENYA = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.GILENYA))::numeric(37,15) END AS GILENYA,
        CASE WHEN (EXT_I3_RX_src.REBIF = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.REBIF))::numeric(37,15) END AS REBIF,
        CASE WHEN (EXT_I3_RX_src.TECFIDERA = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.TECFIDERA))::numeric(37,15) END AS TECFIDERA,
        btrim(EXT_I3_RX_src.MD_ADDR1) AS MD_ADDR1,
        btrim(EXT_I3_RX_src.MD_ADDR2) AS MD_ADDR2,
        btrim(EXT_I3_RX_src.MD_CITY) AS MD_CITY,
        btrim(EXT_I3_RX_src.MD_STATE) AS MD_STATE,
        btrim(EXT_I3_RX_src.MD_ZIP) AS MD_ZIP,
        btrim(EXT_I3_RX_src.PRESCRIBER_NPI) AS PRESCRIBER_NPI,
        CASE WHEN (EXT_I3_RX_src.DNC_FLAG = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_I3_RX_src.DNC_FLAG))::numeric(37,15) END AS DNC_FLAG,
        EXT_I3_RX_src.batch_id,
        EXT_I3_RX_src.row_id,
        EXT_I3_RX_src.update_ts
 FROM teva_ingestion.EXT_I3_RX_src
 WHERE (EXT_I3_RX_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_I3_RX'::varchar(9))));

CREATE  VIEW teva_ingestion.EXT_I3_TYSABRI_RX AS
 SELECT btrim(EXT_I3_TYSABRI_RX_src.FULL_NAME) AS FULL_NAME,
        btrim(EXT_I3_TYSABRI_RX_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_I3_TYSABRI_RX_src.MD_ADDR1) AS MD_ADDR1,
        btrim(EXT_I3_TYSABRI_RX_src.MD_ADDR2) AS MD_ADDR2,
        btrim(EXT_I3_TYSABRI_RX_src.MD_CITY) AS MD_CITY,
        btrim(EXT_I3_TYSABRI_RX_src.MD_STATE) AS MD_STATE,
        btrim(EXT_I3_TYSABRI_RX_src.MD_ZIP) AS MD_ZIP,
        btrim(EXT_I3_TYSABRI_RX_src.PRESCRIBER_NPI) AS PRESCRIBER_NPI,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.DNC_FLAG = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.DNC_FLAG))::int END AS DNC_FLAG,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_12 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_12))::int END AS RX_12,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_11 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_11))::int END AS RX_11,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_10 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_10))::int END AS RX_10,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_09 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_09))::int END AS RX_09,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_08 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_08))::int END AS RX_08,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_07 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_07))::int END AS RX_07,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_06 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_06))::int END AS RX_06,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_05 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_05))::int END AS RX_05,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_04 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_04))::int END AS RX_04,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_03 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_03))::int END AS RX_03,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_02 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_02))::int END AS RX_02,
        CASE WHEN (EXT_I3_TYSABRI_RX_src.RX_01 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_TYSABRI_RX_src.RX_01))::int END AS RX_01,
        EXT_I3_TYSABRI_RX_src.batch_id,
        EXT_I3_TYSABRI_RX_src.row_id,
        EXT_I3_TYSABRI_RX_src.update_ts
 FROM teva_ingestion.EXT_I3_TYSABRI_RX_src
 WHERE (EXT_I3_TYSABRI_RX_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_I3_TYSABRI_RX'::varchar(17))));

CREATE  VIEW teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C AS
 SELECT btrim(EXT_IDS_CALL2_DETAIL_VOD__C_src.ID) AS ID,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.batch_id,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.row_id,
        EXT_IDS_CALL2_DETAIL_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_DETAIL_VOD__C_src
 WHERE (EXT_IDS_CALL2_DETAIL_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_IDS_CALL2_DETAIL_VOD__C'::varchar(27))));

CREATE  VIEW teva_ingestion.EXT_IDS_CALL2_VOD__C AS
 SELECT btrim(EXT_IDS_CALL2_VOD__C_src.ID) AS ID,
        EXT_IDS_CALL2_VOD__C_src.batch_id,
        EXT_IDS_CALL2_VOD__C_src.row_id,
        EXT_IDS_CALL2_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_IDS_CALL2_VOD__C_src
 WHERE (EXT_IDS_CALL2_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_IDS_CALL2_VOD__C'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_IMS_DDD_CHANGE_LOG AS
SELECT btrim(EXT_IMS_DDD_CHANGE_LOG_src.CONSTANT) AS CONSTANT, btrim(EXT_IMS_DDD_CHANGE_LOG_src.CLI_SFX) AS CLI_SFX, btrim(EXT_IMS_DDD_CHANGE_LOG_src.NOT_USED) AS NOT_USED, btrim(EXT_IMS_DDD_CHANGE_LOG_src."TERR#") AS "TERR#", btrim(EXT_IMS_DDD_CHANGE_LOG_src."OUTLET#") AS "OUTLET#", btrim(EXT_IMS_DDD_CHANGE_LOG_src.OUTLET_NAME) AS OUTLET_NAME, btrim(EXT_IMS_DDD_CHANGE_LOG_src.ADDRESS) AS ADDRESS, btrim(EXT_IMS_DDD_CHANGE_LOG_src.CITY) AS CITY, btrim(EXT_IMS_DDD_CHANGE_LOG_src.STATE) AS STATE, btrim(EXT_IMS_DDD_CHANGE_LOG_src.SUBCAT) AS SUBCAT, btrim(EXT_IMS_DDD_CHANGE_LOG_src.CODE) AS CODE, EXT_IMS_DDD_CHANGE_LOG_src.batch_id, EXT_IMS_DDD_CHANGE_LOG_src.row_id, EXT_IMS_DDD_CHANGE_LOG_src.update_ts FROM teva_ingestion.EXT_IMS_DDD_CHANGE_LOG_src WHERE (EXT_IMS_DDD_CHANGE_LOG_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_IMS_DDD_CHANGE_LOG'::varchar(22))));

CREATE  VIEW teva_ingestion.EXT_IMS_DRM45_M AS
 SELECT btrim(EXT_IMS_DRM45_M_src.FILE_CODE) AS FILE_CODE,
        btrim(EXT_IMS_DRM45_M_src.PRODUCT_GROUP) AS PRODUCT_GROUP,
        btrim(EXT_IMS_DRM45_M_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_IMS_DRM45_M_src.MFG_NUM) AS MFG_NUM,
        btrim(EXT_IMS_DRM45_M_src.STATUS) AS STATUS,
        btrim(EXT_IMS_DRM45_M_src.CMF) AS CMF,
        btrim(EXT_IMS_DRM45_M_src.PRODUCT_DESCRIPTION) AS PRODUCT_DESCRIPTION,
        btrim(EXT_IMS_DRM45_M_src.MFG_NAME) AS MFG_NAME,
        btrim(EXT_IMS_DRM45_M_src.USC) AS USC,
        EXT_IMS_DRM45_M_src.batch_id,
        EXT_IMS_DRM45_M_src.row_id,
        EXT_IMS_DRM45_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_DRM45_M_src;

CREATE  VIEW teva_ingestion.EXT_IMS_DRM45_W AS
 SELECT btrim(EXT_IMS_DRM45_W_src.FILE_CODE) AS FILE_CODE,
        btrim(EXT_IMS_DRM45_W_src.PRODUCT_GROUP) AS PRODUCT_GROUP,
        btrim(EXT_IMS_DRM45_W_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_IMS_DRM45_W_src.MFG_NUM) AS MFG_NUM,
        btrim(EXT_IMS_DRM45_W_src.STATUS) AS STATUS,
        btrim(EXT_IMS_DRM45_W_src.CMF) AS CMF,
        btrim(EXT_IMS_DRM45_W_src.PRODUCT_DESCRIPTION) AS PRODUCT_DESCRIPTION,
        btrim(EXT_IMS_DRM45_W_src.MFG_NAME) AS MFG_NAME,
        btrim(EXT_IMS_DRM45_W_src.USC) AS USC,
        EXT_IMS_DRM45_W_src.batch_id,
        EXT_IMS_DRM45_W_src.row_id,
        EXT_IMS_DRM45_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_DRM45_W_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_CNT_M AS
 SELECT CASE WHEN (EXT_IMS_MHJ_CNT_M_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_CNT_M_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_CNT_M_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_CNT_M_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_CNT_M_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_CNT_M_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_CNT_M_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_CNT_M_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_CNT_M_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_CNT_M_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_CNT_M_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_CNT_M_src.address) AS address,
        btrim(EXT_IMS_MHJ_CNT_M_src.city) AS city,
        btrim(EXT_IMS_MHJ_CNT_M_src.state) AS state,
        btrim(EXT_IMS_MHJ_CNT_M_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_CNT_M_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_CNT_M_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_CNT_M_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_M_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_M_src.trx_024))::numeric(9,3) END AS trx_024,
        EXT_IMS_MHJ_CNT_M_src.batch_id,
        EXT_IMS_MHJ_CNT_M_src.row_id,
        EXT_IMS_MHJ_CNT_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_M_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_CNT_W AS
 SELECT CASE WHEN (EXT_IMS_MHJ_CNT_W_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_CNT_W_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_CNT_W_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_CNT_W_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_CNT_W_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_CNT_W_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_CNT_W_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_CNT_W_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_CNT_W_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_CNT_W_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_CNT_W_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_CNT_W_src.address) AS address,
        btrim(EXT_IMS_MHJ_CNT_W_src.city) AS city,
        btrim(EXT_IMS_MHJ_CNT_W_src.state) AS state,
        btrim(EXT_IMS_MHJ_CNT_W_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_CNT_W_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_CNT_W_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_CNT_W_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_025))::numeric(9,3) END AS nrx_025,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_026))::numeric(9,3) END AS nrx_026,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_027))::numeric(9,3) END AS nrx_027,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_028))::numeric(9,3) END AS nrx_028,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_029))::numeric(9,3) END AS nrx_029,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_030))::numeric(9,3) END AS nrx_030,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_031))::numeric(9,3) END AS nrx_031,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_032))::numeric(9,3) END AS nrx_032,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_033))::numeric(9,3) END AS nrx_033,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_034))::numeric(9,3) END AS nrx_034,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_035))::numeric(9,3) END AS nrx_035,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_036))::numeric(9,3) END AS nrx_036,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_037))::numeric(9,3) END AS nrx_037,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_038))::numeric(9,3) END AS nrx_038,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_039))::numeric(9,3) END AS nrx_039,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_040))::numeric(9,3) END AS nrx_040,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_041))::numeric(9,3) END AS nrx_041,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_042))::numeric(9,3) END AS nrx_042,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_043))::numeric(9,3) END AS nrx_043,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_044))::numeric(9,3) END AS nrx_044,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_045))::numeric(9,3) END AS nrx_045,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_046))::numeric(9,3) END AS nrx_046,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_047))::numeric(9,3) END AS nrx_047,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_048))::numeric(9,3) END AS nrx_048,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_049))::numeric(9,3) END AS nrx_049,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_050))::numeric(9,3) END AS nrx_050,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_051))::numeric(9,3) END AS nrx_051,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_052))::numeric(9,3) END AS nrx_052,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_053))::numeric(9,3) END AS nrx_053,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_054))::numeric(9,3) END AS nrx_054,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_055))::numeric(9,3) END AS nrx_055,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_056))::numeric(9,3) END AS nrx_056,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_057))::numeric(9,3) END AS nrx_057,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_058))::numeric(9,3) END AS nrx_058,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_059))::numeric(9,3) END AS nrx_059,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_060))::numeric(9,3) END AS nrx_060,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_061))::numeric(9,3) END AS nrx_061,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_062))::numeric(9,3) END AS nrx_062,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_063))::numeric(9,3) END AS nrx_063,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_064))::numeric(9,3) END AS nrx_064,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_065))::numeric(9,3) END AS nrx_065,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_066))::numeric(9,3) END AS nrx_066,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_067))::numeric(9,3) END AS nrx_067,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_068))::numeric(9,3) END AS nrx_068,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_069))::numeric(9,3) END AS nrx_069,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_070))::numeric(9,3) END AS nrx_070,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_071))::numeric(9,3) END AS nrx_071,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_072))::numeric(9,3) END AS nrx_072,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_073))::numeric(9,3) END AS nrx_073,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_074))::numeric(9,3) END AS nrx_074,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_075))::numeric(9,3) END AS nrx_075,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_076))::numeric(9,3) END AS nrx_076,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_077))::numeric(9,3) END AS nrx_077,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_078))::numeric(9,3) END AS nrx_078,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_079))::numeric(9,3) END AS nrx_079,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_080))::numeric(9,3) END AS nrx_080,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_081))::numeric(9,3) END AS nrx_081,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_082))::numeric(9,3) END AS nrx_082,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_083))::numeric(9,3) END AS nrx_083,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_084))::numeric(9,3) END AS nrx_084,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_085))::numeric(9,3) END AS nrx_085,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_086))::numeric(9,3) END AS nrx_086,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_087))::numeric(9,3) END AS nrx_087,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_088))::numeric(9,3) END AS nrx_088,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_089))::numeric(9,3) END AS nrx_089,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_090))::numeric(9,3) END AS nrx_090,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_091))::numeric(9,3) END AS nrx_091,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_092))::numeric(9,3) END AS nrx_092,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_093))::numeric(9,3) END AS nrx_093,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_094))::numeric(9,3) END AS nrx_094,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_095))::numeric(9,3) END AS nrx_095,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_096))::numeric(9,3) END AS nrx_096,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_097))::numeric(9,3) END AS nrx_097,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_098))::numeric(9,3) END AS nrx_098,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_099))::numeric(9,3) END AS nrx_099,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_100))::numeric(9,3) END AS nrx_100,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_101))::numeric(9,3) END AS nrx_101,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_102))::numeric(9,3) END AS nrx_102,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_103))::numeric(9,3) END AS nrx_103,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_104))::numeric(9,3) END AS nrx_104,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_105))::numeric(9,3) END AS nrx_105,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_106))::numeric(9,3) END AS nrx_106,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_107))::numeric(9,3) END AS nrx_107,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_108))::numeric(9,3) END AS nrx_108,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_109))::numeric(9,3) END AS nrx_109,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_110))::numeric(9,3) END AS nrx_110,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_111))::numeric(9,3) END AS nrx_111,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_112))::numeric(9,3) END AS nrx_112,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_113))::numeric(9,3) END AS nrx_113,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_114))::numeric(9,3) END AS nrx_114,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_115))::numeric(9,3) END AS nrx_115,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_116))::numeric(9,3) END AS nrx_116,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_117))::numeric(9,3) END AS nrx_117,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_118))::numeric(9,3) END AS nrx_118,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_119))::numeric(9,3) END AS nrx_119,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_120))::numeric(9,3) END AS nrx_120,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_121))::numeric(9,3) END AS nrx_121,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_122))::numeric(9,3) END AS nrx_122,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_123))::numeric(9,3) END AS nrx_123,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_124))::numeric(9,3) END AS nrx_124,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_125))::numeric(9,3) END AS nrx_125,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_126))::numeric(9,3) END AS nrx_126,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_127))::numeric(9,3) END AS nrx_127,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_128))::numeric(9,3) END AS nrx_128,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_129))::numeric(9,3) END AS nrx_129,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_130))::numeric(9,3) END AS nrx_130,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_131))::numeric(9,3) END AS nrx_131,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.nrx_132))::numeric(9,3) END AS nrx_132,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_024))::numeric(9,3) END AS trx_024,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_025))::numeric(9,3) END AS trx_025,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_026))::numeric(9,3) END AS trx_026,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_027))::numeric(9,3) END AS trx_027,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_028))::numeric(9,3) END AS trx_028,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_029))::numeric(9,3) END AS trx_029,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_030))::numeric(9,3) END AS trx_030,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_031))::numeric(9,3) END AS trx_031,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_032))::numeric(9,3) END AS trx_032,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_033))::numeric(9,3) END AS trx_033,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_034))::numeric(9,3) END AS trx_034,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_035))::numeric(9,3) END AS trx_035,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_036))::numeric(9,3) END AS trx_036,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_037))::numeric(9,3) END AS trx_037,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_038))::numeric(9,3) END AS trx_038,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_039))::numeric(9,3) END AS trx_039,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_040))::numeric(9,3) END AS trx_040,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_041))::numeric(9,3) END AS trx_041,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_042))::numeric(9,3) END AS trx_042,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_043))::numeric(9,3) END AS trx_043,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_044))::numeric(9,3) END AS trx_044,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_045))::numeric(9,3) END AS trx_045,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_046))::numeric(9,3) END AS trx_046,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_047))::numeric(9,3) END AS trx_047,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_048))::numeric(9,3) END AS trx_048,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_049))::numeric(9,3) END AS trx_049,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_050))::numeric(9,3) END AS trx_050,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_051))::numeric(9,3) END AS trx_051,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_052))::numeric(9,3) END AS trx_052,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_053))::numeric(9,3) END AS trx_053,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_054))::numeric(9,3) END AS trx_054,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_055))::numeric(9,3) END AS trx_055,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_056))::numeric(9,3) END AS trx_056,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_057))::numeric(9,3) END AS trx_057,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_058))::numeric(9,3) END AS trx_058,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_059))::numeric(9,3) END AS trx_059,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_060))::numeric(9,3) END AS trx_060,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_061))::numeric(9,3) END AS trx_061,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_062))::numeric(9,3) END AS trx_062,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_063))::numeric(9,3) END AS trx_063,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_064))::numeric(9,3) END AS trx_064,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_065))::numeric(9,3) END AS trx_065,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_066))::numeric(9,3) END AS trx_066,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_067))::numeric(9,3) END AS trx_067,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_068))::numeric(9,3) END AS trx_068,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_069))::numeric(9,3) END AS trx_069,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_070))::numeric(9,3) END AS trx_070,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_071))::numeric(9,3) END AS trx_071,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_072))::numeric(9,3) END AS trx_072,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_073))::numeric(9,3) END AS trx_073,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_074))::numeric(9,3) END AS trx_074,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_075))::numeric(9,3) END AS trx_075,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_076))::numeric(9,3) END AS trx_076,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_077))::numeric(9,3) END AS trx_077,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_078))::numeric(9,3) END AS trx_078,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_079))::numeric(9,3) END AS trx_079,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_080))::numeric(9,3) END AS trx_080,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_081))::numeric(9,3) END AS trx_081,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_082))::numeric(9,3) END AS trx_082,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_083))::numeric(9,3) END AS trx_083,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_084))::numeric(9,3) END AS trx_084,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_085))::numeric(9,3) END AS trx_085,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_086))::numeric(9,3) END AS trx_086,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_087))::numeric(9,3) END AS trx_087,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_088))::numeric(9,3) END AS trx_088,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_089))::numeric(9,3) END AS trx_089,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_090))::numeric(9,3) END AS trx_090,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_091))::numeric(9,3) END AS trx_091,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_092))::numeric(9,3) END AS trx_092,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_093))::numeric(9,3) END AS trx_093,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_094))::numeric(9,3) END AS trx_094,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_095))::numeric(9,3) END AS trx_095,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_096))::numeric(9,3) END AS trx_096,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_097))::numeric(9,3) END AS trx_097,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_098))::numeric(9,3) END AS trx_098,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_099))::numeric(9,3) END AS trx_099,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_100))::numeric(9,3) END AS trx_100,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_101))::numeric(9,3) END AS trx_101,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_102))::numeric(9,3) END AS trx_102,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_103))::numeric(9,3) END AS trx_103,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_104))::numeric(9,3) END AS trx_104,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_105))::numeric(9,3) END AS trx_105,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_106))::numeric(9,3) END AS trx_106,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_107))::numeric(9,3) END AS trx_107,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_108))::numeric(9,3) END AS trx_108,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_109))::numeric(9,3) END AS trx_109,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_110))::numeric(9,3) END AS trx_110,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_111))::numeric(9,3) END AS trx_111,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_112))::numeric(9,3) END AS trx_112,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_113))::numeric(9,3) END AS trx_113,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_114))::numeric(9,3) END AS trx_114,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_115))::numeric(9,3) END AS trx_115,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_116))::numeric(9,3) END AS trx_116,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_117))::numeric(9,3) END AS trx_117,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_118))::numeric(9,3) END AS trx_118,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_119))::numeric(9,3) END AS trx_119,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_120))::numeric(9,3) END AS trx_120,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_121))::numeric(9,3) END AS trx_121,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_122))::numeric(9,3) END AS trx_122,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_123))::numeric(9,3) END AS trx_123,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_124))::numeric(9,3) END AS trx_124,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_125))::numeric(9,3) END AS trx_125,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_126))::numeric(9,3) END AS trx_126,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_127))::numeric(9,3) END AS trx_127,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_128))::numeric(9,3) END AS trx_128,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_129))::numeric(9,3) END AS trx_129,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_130))::numeric(9,3) END AS trx_130,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_131))::numeric(9,3) END AS trx_131,
        CASE WHEN (EXT_IMS_MHJ_CNT_W_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_CNT_W_src.trx_132))::numeric(9,3) END AS trx_132,
        EXT_IMS_MHJ_CNT_W_src.batch_id,
        EXT_IMS_MHJ_CNT_W_src.row_id,
        EXT_IMS_MHJ_CNT_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CNT_W_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_CONTROL_M AS
 SELECT CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.IMS_CLIENT_NUM = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.IMS_CLIENT_NUM))::numeric(3,0) END AS IMS_CLIENT_NUM,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.IMS_REPORT_NUM = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.IMS_REPORT_NUM))::numeric(3,0) END AS IMS_REPORT_NUM,
        btrim(EXT_IMS_MHJ_CONTROL_M_src.SRA) AS SRA,
        btrim(EXT_IMS_MHJ_CONTROL_M_src.SALES_CATEGORY) AS SALES_CATEGORY,
        btrim(EXT_IMS_MHJ_CONTROL_M_src.IMS_PRODUCT_GROUP_NUM) AS IMS_PRODUCT_GROUP_NUM,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX001 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX001))::numeric(37,15) END AS NRX001,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX002 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX002))::numeric(37,15) END AS NRX002,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX003 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX003))::numeric(37,15) END AS NRX003,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX004 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX004))::numeric(37,15) END AS NRX004,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX005 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX005))::numeric(37,15) END AS NRX005,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX006 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX006))::numeric(37,15) END AS NRX006,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX007 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX007))::numeric(37,15) END AS NRX007,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX008 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX008))::numeric(37,15) END AS NRX008,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX009 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX009))::numeric(37,15) END AS NRX009,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX010 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX010))::numeric(37,15) END AS NRX010,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX011 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX011))::numeric(37,15) END AS NRX011,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX012 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX012))::numeric(37,15) END AS NRX012,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX013 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX013))::numeric(37,15) END AS NRX013,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX014 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX014))::numeric(37,15) END AS NRX014,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX015 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX015))::numeric(37,15) END AS NRX015,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX016 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX016))::numeric(37,15) END AS NRX016,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX017 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX017))::numeric(37,15) END AS NRX017,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX018 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX018))::numeric(37,15) END AS NRX018,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX019 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX019))::numeric(37,15) END AS NRX019,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX020 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX020))::numeric(37,15) END AS NRX020,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX021 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX021))::numeric(37,15) END AS NRX021,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX022 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX022))::numeric(37,15) END AS NRX022,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX023 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX023))::numeric(37,15) END AS NRX023,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.NRX024 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.NRX024))::numeric(37,15) END AS NRX024,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX001 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX001))::numeric(37,15) END AS TRX001,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX002 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX002))::numeric(37,15) END AS TRX002,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX003 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX003))::numeric(37,15) END AS TRX003,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX004 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX004))::numeric(37,15) END AS TRX004,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX005 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX005))::numeric(37,15) END AS TRX005,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX006 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX006))::numeric(37,15) END AS TRX006,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX007 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX007))::numeric(37,15) END AS TRX007,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX008 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX008))::numeric(37,15) END AS TRX008,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX009 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX009))::numeric(37,15) END AS TRX009,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX010 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX010))::numeric(37,15) END AS TRX010,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX011 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX011))::numeric(37,15) END AS TRX011,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX012 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX012))::numeric(37,15) END AS TRX012,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX013 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX013))::numeric(37,15) END AS TRX013,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX014 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX014))::numeric(37,15) END AS TRX014,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX015 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX015))::numeric(37,15) END AS TRX015,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX016 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX016))::numeric(37,15) END AS TRX016,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX017 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX017))::numeric(37,15) END AS TRX017,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX018 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX018))::numeric(37,15) END AS TRX018,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX019 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX019))::numeric(37,15) END AS TRX019,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX020 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX020))::numeric(37,15) END AS TRX020,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX021 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX021))::numeric(37,15) END AS TRX021,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX022 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX022))::numeric(37,15) END AS TRX022,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX023 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX023))::numeric(37,15) END AS TRX023,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_M_src.TRX024 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_M_src.TRX024))::numeric(37,15) END AS TRX024,
        EXT_IMS_MHJ_CONTROL_M_src.batch_id,
        EXT_IMS_MHJ_CONTROL_M_src.row_id,
        EXT_IMS_MHJ_CONTROL_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CONTROL_M_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_CONTROL_W AS
 SELECT CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.IMS_CLIENT_NUM = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.IMS_CLIENT_NUM))::numeric(3,0) END AS IMS_CLIENT_NUM,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.IMS_REPORT_NUM = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.IMS_REPORT_NUM))::numeric(3,0) END AS IMS_REPORT_NUM,
        btrim(EXT_IMS_MHJ_CONTROL_W_src.SRA) AS SRA,
        btrim(EXT_IMS_MHJ_CONTROL_W_src.SALES_CATEGORY) AS SALES_CATEGORY,
        btrim(EXT_IMS_MHJ_CONTROL_W_src.IMS_PRODUCT_GROUP_NUM) AS IMS_PRODUCT_GROUP_NUM,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX001 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX001))::numeric(37,15) END AS NRX001,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX002 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX002))::numeric(37,15) END AS NRX002,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX003 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX003))::numeric(37,15) END AS NRX003,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX004 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX004))::numeric(37,15) END AS NRX004,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX005 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX005))::numeric(37,15) END AS NRX005,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX006 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX006))::numeric(37,15) END AS NRX006,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX007 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX007))::numeric(37,15) END AS NRX007,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX008 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX008))::numeric(37,15) END AS NRX008,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX009 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX009))::numeric(37,15) END AS NRX009,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX010 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX010))::numeric(37,15) END AS NRX010,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX011 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX011))::numeric(37,15) END AS NRX011,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX012 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX012))::numeric(37,15) END AS NRX012,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX013 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX013))::numeric(37,15) END AS NRX013,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX014 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX014))::numeric(37,15) END AS NRX014,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX015 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX015))::numeric(37,15) END AS NRX015,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX016 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX016))::numeric(37,15) END AS NRX016,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX017 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX017))::numeric(37,15) END AS NRX017,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX018 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX018))::numeric(37,15) END AS NRX018,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX019 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX019))::numeric(37,15) END AS NRX019,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX020 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX020))::numeric(37,15) END AS NRX020,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX021 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX021))::numeric(37,15) END AS NRX021,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX022 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX022))::numeric(37,15) END AS NRX022,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX023 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX023))::numeric(37,15) END AS NRX023,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX024 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX024))::numeric(37,15) END AS NRX024,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX025 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX025))::numeric(37,15) END AS NRX025,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX026 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX026))::numeric(37,15) END AS NRX026,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX027 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX027))::numeric(37,15) END AS NRX027,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX028 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX028))::numeric(37,15) END AS NRX028,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX029 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX029))::numeric(37,15) END AS NRX029,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX030 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX030))::numeric(37,15) END AS NRX030,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX031 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX031))::numeric(37,15) END AS NRX031,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX032 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX032))::numeric(37,15) END AS NRX032,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX033 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX033))::numeric(37,15) END AS NRX033,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX034 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX034))::numeric(37,15) END AS NRX034,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX035 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX035))::numeric(37,15) END AS NRX035,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX036 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX036))::numeric(37,15) END AS NRX036,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX037 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX037))::numeric(37,15) END AS NRX037,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX038 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX038))::numeric(37,15) END AS NRX038,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX039 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX039))::numeric(37,15) END AS NRX039,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX040 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX040))::numeric(37,15) END AS NRX040,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX041 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX041))::numeric(37,15) END AS NRX041,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX042 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX042))::numeric(37,15) END AS NRX042,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX043 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX043))::numeric(37,15) END AS NRX043,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX044 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX044))::numeric(37,15) END AS NRX044,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX045 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX045))::numeric(37,15) END AS NRX045,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX046 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX046))::numeric(37,15) END AS NRX046,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX047 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX047))::numeric(37,15) END AS NRX047,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX048 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX048))::numeric(37,15) END AS NRX048,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX049 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX049))::numeric(37,15) END AS NRX049,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX050 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX050))::numeric(37,15) END AS NRX050,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX051 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX051))::numeric(37,15) END AS NRX051,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX052 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX052))::numeric(37,15) END AS NRX052,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX053 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX053))::numeric(37,15) END AS NRX053,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX054 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX054))::numeric(37,15) END AS NRX054,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX055 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX055))::numeric(37,15) END AS NRX055,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX056 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX056))::numeric(37,15) END AS NRX056,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX057 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX057))::numeric(37,15) END AS NRX057,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX058 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX058))::numeric(37,15) END AS NRX058,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX059 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX059))::numeric(37,15) END AS NRX059,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX060 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX060))::numeric(37,15) END AS NRX060,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX061 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX061))::numeric(37,15) END AS NRX061,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX062 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX062))::numeric(37,15) END AS NRX062,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX063 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX063))::numeric(37,15) END AS NRX063,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX064 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX064))::numeric(37,15) END AS NRX064,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX065 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX065))::numeric(37,15) END AS NRX065,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX066 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX066))::numeric(37,15) END AS NRX066,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX067 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX067))::numeric(37,15) END AS NRX067,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX068 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX068))::numeric(37,15) END AS NRX068,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX069 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX069))::numeric(37,15) END AS NRX069,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX070 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX070))::numeric(37,15) END AS NRX070,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX071 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX071))::numeric(37,15) END AS NRX071,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX072 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX072))::numeric(37,15) END AS NRX072,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX073 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX073))::numeric(37,15) END AS NRX073,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX074 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX074))::numeric(37,15) END AS NRX074,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX075 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX075))::numeric(37,15) END AS NRX075,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX076 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX076))::numeric(37,15) END AS NRX076,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX077 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX077))::numeric(37,15) END AS NRX077,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX078 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX078))::numeric(37,15) END AS NRX078,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX079 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX079))::numeric(37,15) END AS NRX079,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX080 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX080))::numeric(37,15) END AS NRX080,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX081 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX081))::numeric(37,15) END AS NRX081,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX082 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX082))::numeric(37,15) END AS NRX082,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX083 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX083))::numeric(37,15) END AS NRX083,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX084 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX084))::numeric(37,15) END AS NRX084,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX085 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX085))::numeric(37,15) END AS NRX085,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX086 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX086))::numeric(37,15) END AS NRX086,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX087 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX087))::numeric(37,15) END AS NRX087,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX088 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX088))::numeric(37,15) END AS NRX088,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX089 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX089))::numeric(37,15) END AS NRX089,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX090 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX090))::numeric(37,15) END AS NRX090,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX091 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX091))::numeric(37,15) END AS NRX091,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX092 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX092))::numeric(37,15) END AS NRX092,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX093 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX093))::numeric(37,15) END AS NRX093,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX094 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX094))::numeric(37,15) END AS NRX094,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX095 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX095))::numeric(37,15) END AS NRX095,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX096 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX096))::numeric(37,15) END AS NRX096,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX097 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX097))::numeric(37,15) END AS NRX097,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX098 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX098))::numeric(37,15) END AS NRX098,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX099 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX099))::numeric(37,15) END AS NRX099,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX100 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX100))::numeric(37,15) END AS NRX100,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX101 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX101))::numeric(37,15) END AS NRX101,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX102 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX102))::numeric(37,15) END AS NRX102,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX103 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX103))::numeric(37,15) END AS NRX103,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX104 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX104))::numeric(37,15) END AS NRX104,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX105 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX105))::numeric(37,15) END AS NRX105,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX106 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX106))::numeric(37,15) END AS NRX106,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX107 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX107))::numeric(37,15) END AS NRX107,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX108 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX108))::numeric(37,15) END AS NRX108,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX109 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX109))::numeric(37,15) END AS NRX109,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX110 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX110))::numeric(37,15) END AS NRX110,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX111 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX111))::numeric(37,15) END AS NRX111,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX112 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX112))::numeric(37,15) END AS NRX112,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX113 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX113))::numeric(37,15) END AS NRX113,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX114 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX114))::numeric(37,15) END AS NRX114,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX115 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX115))::numeric(37,15) END AS NRX115,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX116 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX116))::numeric(37,15) END AS NRX116,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX117 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX117))::numeric(37,15) END AS NRX117,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX118 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX118))::numeric(37,15) END AS NRX118,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX119 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX119))::numeric(37,15) END AS NRX119,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX120 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX120))::numeric(37,15) END AS NRX120,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX121 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX121))::numeric(37,15) END AS NRX121,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX122 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX122))::numeric(37,15) END AS NRX122,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX123 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX123))::numeric(37,15) END AS NRX123,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX124 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX124))::numeric(37,15) END AS NRX124,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX125 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX125))::numeric(37,15) END AS NRX125,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX126 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX126))::numeric(37,15) END AS NRX126,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX127 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX127))::numeric(37,15) END AS NRX127,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX128 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX128))::numeric(37,15) END AS NRX128,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX129 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX129))::numeric(37,15) END AS NRX129,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX130 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX130))::numeric(37,15) END AS NRX130,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX131 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX131))::numeric(37,15) END AS NRX131,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.NRX132 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.NRX132))::numeric(37,15) END AS NRX132,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX001 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX001))::numeric(37,15) END AS TRX001,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX002 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX002))::numeric(37,15) END AS TRX002,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX003 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX003))::numeric(37,15) END AS TRX003,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX004 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX004))::numeric(37,15) END AS TRX004,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX005 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX005))::numeric(37,15) END AS TRX005,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX006 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX006))::numeric(37,15) END AS TRX006,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX007 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX007))::numeric(37,15) END AS TRX007,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX008 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX008))::numeric(37,15) END AS TRX008,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX009 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX009))::numeric(37,15) END AS TRX009,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX010 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX010))::numeric(37,15) END AS TRX010,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX011 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX011))::numeric(37,15) END AS TRX011,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX012 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX012))::numeric(37,15) END AS TRX012,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX013 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX013))::numeric(37,15) END AS TRX013,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX014 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX014))::numeric(37,15) END AS TRX014,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX015 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX015))::numeric(37,15) END AS TRX015,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX016 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX016))::numeric(37,15) END AS TRX016,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX017 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX017))::numeric(37,15) END AS TRX017,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX018 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX018))::numeric(37,15) END AS TRX018,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX019 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX019))::numeric(37,15) END AS TRX019,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX020 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX020))::numeric(37,15) END AS TRX020,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX021 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX021))::numeric(37,15) END AS TRX021,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX022 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX022))::numeric(37,15) END AS TRX022,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX023 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX023))::numeric(37,15) END AS TRX023,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX024 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX024))::numeric(37,15) END AS TRX024,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX025 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX025))::numeric(37,15) END AS TRX025,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX026 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX026))::numeric(37,15) END AS TRX026,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX027 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX027))::numeric(37,15) END AS TRX027,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX028 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX028))::numeric(37,15) END AS TRX028,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX029 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX029))::numeric(37,15) END AS TRX029,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX030 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX030))::numeric(37,15) END AS TRX030,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX031 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX031))::numeric(37,15) END AS TRX031,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX032 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX032))::numeric(37,15) END AS TRX032,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX033 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX033))::numeric(37,15) END AS TRX033,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX034 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX034))::numeric(37,15) END AS TRX034,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX035 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX035))::numeric(37,15) END AS TRX035,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX036 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX036))::numeric(37,15) END AS TRX036,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX037 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX037))::numeric(37,15) END AS TRX037,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX038 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX038))::numeric(37,15) END AS TRX038,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX039 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX039))::numeric(37,15) END AS TRX039,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX040 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX040))::numeric(37,15) END AS TRX040,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX041 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX041))::numeric(37,15) END AS TRX041,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX042 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX042))::numeric(37,15) END AS TRX042,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX043 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX043))::numeric(37,15) END AS TRX043,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX044 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX044))::numeric(37,15) END AS TRX044,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX045 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX045))::numeric(37,15) END AS TRX045,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX046 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX046))::numeric(37,15) END AS TRX046,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX047 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX047))::numeric(37,15) END AS TRX047,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX048 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX048))::numeric(37,15) END AS TRX048,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX049 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX049))::numeric(37,15) END AS TRX049,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX050 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX050))::numeric(37,15) END AS TRX050,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX051 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX051))::numeric(37,15) END AS TRX051,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX052 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX052))::numeric(37,15) END AS TRX052,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX053 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX053))::numeric(37,15) END AS TRX053,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX054 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX054))::numeric(37,15) END AS TRX054,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX055 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX055))::numeric(37,15) END AS TRX055,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX056 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX056))::numeric(37,15) END AS TRX056,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX057 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX057))::numeric(37,15) END AS TRX057,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX058 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX058))::numeric(37,15) END AS TRX058,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX059 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX059))::numeric(37,15) END AS TRX059,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX060 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX060))::numeric(37,15) END AS TRX060,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX061 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX061))::numeric(37,15) END AS TRX061,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX062 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX062))::numeric(37,15) END AS TRX062,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX063 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX063))::numeric(37,15) END AS TRX063,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX064 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX064))::numeric(37,15) END AS TRX064,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX065 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX065))::numeric(37,15) END AS TRX065,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX066 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX066))::numeric(37,15) END AS TRX066,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX067 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX067))::numeric(37,15) END AS TRX067,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX068 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX068))::numeric(37,15) END AS TRX068,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX069 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX069))::numeric(37,15) END AS TRX069,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX070 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX070))::numeric(37,15) END AS TRX070,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX071 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX071))::numeric(37,15) END AS TRX071,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX072 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX072))::numeric(37,15) END AS TRX072,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX073 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX073))::numeric(37,15) END AS TRX073,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX074 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX074))::numeric(37,15) END AS TRX074,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX075 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX075))::numeric(37,15) END AS TRX075,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX076 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX076))::numeric(37,15) END AS TRX076,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX077 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX077))::numeric(37,15) END AS TRX077,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX078 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX078))::numeric(37,15) END AS TRX078,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX079 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX079))::numeric(37,15) END AS TRX079,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX080 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX080))::numeric(37,15) END AS TRX080,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX081 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX081))::numeric(37,15) END AS TRX081,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX082 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX082))::numeric(37,15) END AS TRX082,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX083 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX083))::numeric(37,15) END AS TRX083,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX084 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX084))::numeric(37,15) END AS TRX084,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX085 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX085))::numeric(37,15) END AS TRX085,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX086 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX086))::numeric(37,15) END AS TRX086,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX087 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX087))::numeric(37,15) END AS TRX087,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX088 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX088))::numeric(37,15) END AS TRX088,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX089 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX089))::numeric(37,15) END AS TRX089,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX090 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX090))::numeric(37,15) END AS TRX090,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX091 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX091))::numeric(37,15) END AS TRX091,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX092 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX092))::numeric(37,15) END AS TRX092,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX093 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX093))::numeric(37,15) END AS TRX093,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX094 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX094))::numeric(37,15) END AS TRX094,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX095 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX095))::numeric(37,15) END AS TRX095,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX096 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX096))::numeric(37,15) END AS TRX096,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX097 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX097))::numeric(37,15) END AS TRX097,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX098 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX098))::numeric(37,15) END AS TRX098,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX099 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX099))::numeric(37,15) END AS TRX099,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX100 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX100))::numeric(37,15) END AS TRX100,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX101 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX101))::numeric(37,15) END AS TRX101,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX102 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX102))::numeric(37,15) END AS TRX102,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX103 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX103))::numeric(37,15) END AS TRX103,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX104 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX104))::numeric(37,15) END AS TRX104,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX105 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX105))::numeric(37,15) END AS TRX105,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX106 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX106))::numeric(37,15) END AS TRX106,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX107 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX107))::numeric(37,15) END AS TRX107,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX108 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX108))::numeric(37,15) END AS TRX108,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX109 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX109))::numeric(37,15) END AS TRX109,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX110 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX110))::numeric(37,15) END AS TRX110,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX111 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX111))::numeric(37,15) END AS TRX111,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX112 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX112))::numeric(37,15) END AS TRX112,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX113 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX113))::numeric(37,15) END AS TRX113,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX114 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX114))::numeric(37,15) END AS TRX114,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX115 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX115))::numeric(37,15) END AS TRX115,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX116 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX116))::numeric(37,15) END AS TRX116,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX117 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX117))::numeric(37,15) END AS TRX117,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX118 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX118))::numeric(37,15) END AS TRX118,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX119 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX119))::numeric(37,15) END AS TRX119,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX120 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX120))::numeric(37,15) END AS TRX120,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX121 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX121))::numeric(37,15) END AS TRX121,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX122 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX122))::numeric(37,15) END AS TRX122,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX123 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX123))::numeric(37,15) END AS TRX123,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX124 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX124))::numeric(37,15) END AS TRX124,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX125 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX125))::numeric(37,15) END AS TRX125,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX126 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX126))::numeric(37,15) END AS TRX126,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX127 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX127))::numeric(37,15) END AS TRX127,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX128 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX128))::numeric(37,15) END AS TRX128,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX129 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX129))::numeric(37,15) END AS TRX129,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX130 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX130))::numeric(37,15) END AS TRX130,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX131 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX131))::numeric(37,15) END AS TRX131,
        CASE WHEN (EXT_IMS_MHJ_CONTROL_W_src.TRX132 = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_IMS_MHJ_CONTROL_W_src.TRX132))::numeric(37,15) END AS TRX132,
        EXT_IMS_MHJ_CONTROL_W_src.batch_id,
        EXT_IMS_MHJ_CONTROL_W_src.row_id,
        EXT_IMS_MHJ_CONTROL_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_CONTROL_W_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_QTY_M AS
 SELECT CASE WHEN (EXT_IMS_MHJ_QTY_M_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_QTY_M_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_QTY_M_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_QTY_M_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_QTY_M_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_QTY_M_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_QTY_M_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_QTY_M_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_QTY_M_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_QTY_M_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_QTY_M_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_QTY_M_src.address) AS address,
        btrim(EXT_IMS_MHJ_QTY_M_src.city) AS city,
        btrim(EXT_IMS_MHJ_QTY_M_src.state) AS state,
        btrim(EXT_IMS_MHJ_QTY_M_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_QTY_M_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_QTY_M_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_QTY_M_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_M_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_M_src.trx_024))::numeric(9,3) END AS trx_024,
        EXT_IMS_MHJ_QTY_M_src.batch_id,
        EXT_IMS_MHJ_QTY_M_src.row_id,
        EXT_IMS_MHJ_QTY_M_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_M_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHJ_QTY_W AS
 SELECT CASE WHEN (EXT_IMS_MHJ_QTY_W_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.ims_client_num))::int END AS ims_client_num,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.ims_report_num))::int END AS ims_report_num,
        btrim(EXT_IMS_MHJ_QTY_W_src.zip_other) AS zip_other,
        btrim(EXT_IMS_MHJ_QTY_W_src.ims_id) AS ims_id,
        btrim(EXT_IMS_MHJ_QTY_W_src.specialty) AS specialty,
        btrim(EXT_IMS_MHJ_QTY_W_src.plan_id) AS plan_id,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.sales_category))::int END AS sales_category,
        btrim(EXT_IMS_MHJ_QTY_W_src.rx_type) AS rx_type,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.ims_product_group_num))::int END AS ims_product_group_num,
        btrim(EXT_IMS_MHJ_QTY_W_src.filler_01) AS filler_01,
        btrim(EXT_IMS_MHJ_QTY_W_src.me_num) AS me_num,
        btrim(EXT_IMS_MHJ_QTY_W_src.last_name) AS last_name,
        btrim(EXT_IMS_MHJ_QTY_W_src.first_name) AS first_name,
        btrim(EXT_IMS_MHJ_QTY_W_src.middle_name) AS middle_name,
        btrim(EXT_IMS_MHJ_QTY_W_src.address) AS address,
        btrim(EXT_IMS_MHJ_QTY_W_src.city) AS city,
        btrim(EXT_IMS_MHJ_QTY_W_src.state) AS state,
        btrim(EXT_IMS_MHJ_QTY_W_src.zip) AS zip,
        btrim(EXT_IMS_MHJ_QTY_W_src.supplemental_data) AS supplemental_data,
        btrim(EXT_IMS_MHJ_QTY_W_src.plan_name) AS plan_name,
        btrim(EXT_IMS_MHJ_QTY_W_src.data_date) AS data_date,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.bucket_count))::int END AS bucket_count,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_001))::numeric(9,3) END AS nrx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_002))::numeric(9,3) END AS nrx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_003))::numeric(9,3) END AS nrx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_004))::numeric(9,3) END AS nrx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_005))::numeric(9,3) END AS nrx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_006))::numeric(9,3) END AS nrx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_007))::numeric(9,3) END AS nrx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_008))::numeric(9,3) END AS nrx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_009))::numeric(9,3) END AS nrx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_010))::numeric(9,3) END AS nrx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_011))::numeric(9,3) END AS nrx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_012))::numeric(9,3) END AS nrx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_013))::numeric(9,3) END AS nrx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_014))::numeric(9,3) END AS nrx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_015))::numeric(9,3) END AS nrx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_016))::numeric(9,3) END AS nrx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_017))::numeric(9,3) END AS nrx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_018))::numeric(9,3) END AS nrx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_019))::numeric(9,3) END AS nrx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_020))::numeric(9,3) END AS nrx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_021))::numeric(9,3) END AS nrx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_022))::numeric(9,3) END AS nrx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_023))::numeric(9,3) END AS nrx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_024))::numeric(9,3) END AS nrx_024,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_025))::numeric(9,3) END AS nrx_025,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_026))::numeric(9,3) END AS nrx_026,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_027))::numeric(9,3) END AS nrx_027,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_028))::numeric(9,3) END AS nrx_028,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_029))::numeric(9,3) END AS nrx_029,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_030))::numeric(9,3) END AS nrx_030,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_031))::numeric(9,3) END AS nrx_031,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_032))::numeric(9,3) END AS nrx_032,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_033))::numeric(9,3) END AS nrx_033,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_034))::numeric(9,3) END AS nrx_034,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_035))::numeric(9,3) END AS nrx_035,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_036))::numeric(9,3) END AS nrx_036,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_037))::numeric(9,3) END AS nrx_037,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_038))::numeric(9,3) END AS nrx_038,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_039))::numeric(9,3) END AS nrx_039,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_040))::numeric(9,3) END AS nrx_040,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_041))::numeric(9,3) END AS nrx_041,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_042))::numeric(9,3) END AS nrx_042,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_043))::numeric(9,3) END AS nrx_043,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_044))::numeric(9,3) END AS nrx_044,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_045))::numeric(9,3) END AS nrx_045,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_046))::numeric(9,3) END AS nrx_046,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_047))::numeric(9,3) END AS nrx_047,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_048))::numeric(9,3) END AS nrx_048,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_049))::numeric(9,3) END AS nrx_049,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_050))::numeric(9,3) END AS nrx_050,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_051))::numeric(9,3) END AS nrx_051,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_052))::numeric(9,3) END AS nrx_052,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_053))::numeric(9,3) END AS nrx_053,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_054))::numeric(9,3) END AS nrx_054,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_055))::numeric(9,3) END AS nrx_055,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_056))::numeric(9,3) END AS nrx_056,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_057))::numeric(9,3) END AS nrx_057,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_058))::numeric(9,3) END AS nrx_058,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_059))::numeric(9,3) END AS nrx_059,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_060))::numeric(9,3) END AS nrx_060,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_061))::numeric(9,3) END AS nrx_061,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_062))::numeric(9,3) END AS nrx_062,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_063))::numeric(9,3) END AS nrx_063,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_064))::numeric(9,3) END AS nrx_064,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_065))::numeric(9,3) END AS nrx_065,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_066))::numeric(9,3) END AS nrx_066,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_067))::numeric(9,3) END AS nrx_067,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_068))::numeric(9,3) END AS nrx_068,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_069))::numeric(9,3) END AS nrx_069,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_070))::numeric(9,3) END AS nrx_070,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_071))::numeric(9,3) END AS nrx_071,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_072))::numeric(9,3) END AS nrx_072,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_073))::numeric(9,3) END AS nrx_073,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_074))::numeric(9,3) END AS nrx_074,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_075))::numeric(9,3) END AS nrx_075,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_076))::numeric(9,3) END AS nrx_076,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_077))::numeric(9,3) END AS nrx_077,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_078))::numeric(9,3) END AS nrx_078,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_079))::numeric(9,3) END AS nrx_079,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_080))::numeric(9,3) END AS nrx_080,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_081))::numeric(9,3) END AS nrx_081,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_082))::numeric(9,3) END AS nrx_082,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_083))::numeric(9,3) END AS nrx_083,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_084))::numeric(9,3) END AS nrx_084,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_085))::numeric(9,3) END AS nrx_085,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_086))::numeric(9,3) END AS nrx_086,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_087))::numeric(9,3) END AS nrx_087,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_088))::numeric(9,3) END AS nrx_088,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_089))::numeric(9,3) END AS nrx_089,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_090))::numeric(9,3) END AS nrx_090,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_091))::numeric(9,3) END AS nrx_091,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_092))::numeric(9,3) END AS nrx_092,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_093))::numeric(9,3) END AS nrx_093,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_094))::numeric(9,3) END AS nrx_094,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_095))::numeric(9,3) END AS nrx_095,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_096))::numeric(9,3) END AS nrx_096,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_097))::numeric(9,3) END AS nrx_097,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_098))::numeric(9,3) END AS nrx_098,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_099))::numeric(9,3) END AS nrx_099,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_100))::numeric(9,3) END AS nrx_100,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_101))::numeric(9,3) END AS nrx_101,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_102))::numeric(9,3) END AS nrx_102,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_103))::numeric(9,3) END AS nrx_103,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_104))::numeric(9,3) END AS nrx_104,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_105))::numeric(9,3) END AS nrx_105,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_106))::numeric(9,3) END AS nrx_106,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_107))::numeric(9,3) END AS nrx_107,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_108))::numeric(9,3) END AS nrx_108,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_109))::numeric(9,3) END AS nrx_109,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_110))::numeric(9,3) END AS nrx_110,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_111))::numeric(9,3) END AS nrx_111,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_112))::numeric(9,3) END AS nrx_112,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_113))::numeric(9,3) END AS nrx_113,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_114))::numeric(9,3) END AS nrx_114,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_115))::numeric(9,3) END AS nrx_115,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_116))::numeric(9,3) END AS nrx_116,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_117))::numeric(9,3) END AS nrx_117,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_118))::numeric(9,3) END AS nrx_118,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_119))::numeric(9,3) END AS nrx_119,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_120))::numeric(9,3) END AS nrx_120,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_121))::numeric(9,3) END AS nrx_121,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_122))::numeric(9,3) END AS nrx_122,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_123))::numeric(9,3) END AS nrx_123,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_124))::numeric(9,3) END AS nrx_124,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_125))::numeric(9,3) END AS nrx_125,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_126))::numeric(9,3) END AS nrx_126,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_127))::numeric(9,3) END AS nrx_127,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_128))::numeric(9,3) END AS nrx_128,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_129))::numeric(9,3) END AS nrx_129,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_130))::numeric(9,3) END AS nrx_130,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_131))::numeric(9,3) END AS nrx_131,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.nrx_132))::numeric(9,3) END AS nrx_132,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_001))::numeric(9,3) END AS trx_001,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_002))::numeric(9,3) END AS trx_002,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_003))::numeric(9,3) END AS trx_003,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_004))::numeric(9,3) END AS trx_004,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_005))::numeric(9,3) END AS trx_005,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_006))::numeric(9,3) END AS trx_006,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_007))::numeric(9,3) END AS trx_007,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_008))::numeric(9,3) END AS trx_008,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_009))::numeric(9,3) END AS trx_009,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_010))::numeric(9,3) END AS trx_010,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_011))::numeric(9,3) END AS trx_011,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_012))::numeric(9,3) END AS trx_012,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_013))::numeric(9,3) END AS trx_013,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_014))::numeric(9,3) END AS trx_014,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_015))::numeric(9,3) END AS trx_015,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_016))::numeric(9,3) END AS trx_016,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_017))::numeric(9,3) END AS trx_017,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_018))::numeric(9,3) END AS trx_018,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_019))::numeric(9,3) END AS trx_019,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_020))::numeric(9,3) END AS trx_020,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_021))::numeric(9,3) END AS trx_021,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_022))::numeric(9,3) END AS trx_022,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_023))::numeric(9,3) END AS trx_023,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_024))::numeric(9,3) END AS trx_024,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_025))::numeric(9,3) END AS trx_025,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_026))::numeric(9,3) END AS trx_026,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_027))::numeric(9,3) END AS trx_027,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_028))::numeric(9,3) END AS trx_028,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_029))::numeric(9,3) END AS trx_029,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_030))::numeric(9,3) END AS trx_030,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_031))::numeric(9,3) END AS trx_031,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_032))::numeric(9,3) END AS trx_032,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_033))::numeric(9,3) END AS trx_033,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_034))::numeric(9,3) END AS trx_034,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_035))::numeric(9,3) END AS trx_035,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_036))::numeric(9,3) END AS trx_036,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_037))::numeric(9,3) END AS trx_037,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_038))::numeric(9,3) END AS trx_038,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_039))::numeric(9,3) END AS trx_039,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_040))::numeric(9,3) END AS trx_040,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_041))::numeric(9,3) END AS trx_041,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_042))::numeric(9,3) END AS trx_042,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_043))::numeric(9,3) END AS trx_043,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_044))::numeric(9,3) END AS trx_044,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_045))::numeric(9,3) END AS trx_045,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_046))::numeric(9,3) END AS trx_046,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_047))::numeric(9,3) END AS trx_047,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_048))::numeric(9,3) END AS trx_048,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_049))::numeric(9,3) END AS trx_049,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_050))::numeric(9,3) END AS trx_050,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_051))::numeric(9,3) END AS trx_051,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_052))::numeric(9,3) END AS trx_052,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_053))::numeric(9,3) END AS trx_053,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_054))::numeric(9,3) END AS trx_054,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_055))::numeric(9,3) END AS trx_055,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_056))::numeric(9,3) END AS trx_056,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_057))::numeric(9,3) END AS trx_057,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_058))::numeric(9,3) END AS trx_058,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_059))::numeric(9,3) END AS trx_059,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_060))::numeric(9,3) END AS trx_060,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_061))::numeric(9,3) END AS trx_061,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_062))::numeric(9,3) END AS trx_062,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_063))::numeric(9,3) END AS trx_063,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_064))::numeric(9,3) END AS trx_064,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_065))::numeric(9,3) END AS trx_065,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_066))::numeric(9,3) END AS trx_066,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_067))::numeric(9,3) END AS trx_067,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_068))::numeric(9,3) END AS trx_068,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_069))::numeric(9,3) END AS trx_069,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_070))::numeric(9,3) END AS trx_070,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_071))::numeric(9,3) END AS trx_071,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_072))::numeric(9,3) END AS trx_072,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_073))::numeric(9,3) END AS trx_073,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_074))::numeric(9,3) END AS trx_074,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_075))::numeric(9,3) END AS trx_075,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_076))::numeric(9,3) END AS trx_076,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_077))::numeric(9,3) END AS trx_077,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_078))::numeric(9,3) END AS trx_078,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_079))::numeric(9,3) END AS trx_079,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_080))::numeric(9,3) END AS trx_080,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_081))::numeric(9,3) END AS trx_081,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_082))::numeric(9,3) END AS trx_082,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_083))::numeric(9,3) END AS trx_083,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_084))::numeric(9,3) END AS trx_084,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_085))::numeric(9,3) END AS trx_085,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_086))::numeric(9,3) END AS trx_086,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_087))::numeric(9,3) END AS trx_087,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_088))::numeric(9,3) END AS trx_088,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_089))::numeric(9,3) END AS trx_089,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_090))::numeric(9,3) END AS trx_090,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_091))::numeric(9,3) END AS trx_091,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_092))::numeric(9,3) END AS trx_092,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_093))::numeric(9,3) END AS trx_093,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_094))::numeric(9,3) END AS trx_094,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_095))::numeric(9,3) END AS trx_095,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_096))::numeric(9,3) END AS trx_096,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_097))::numeric(9,3) END AS trx_097,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_098))::numeric(9,3) END AS trx_098,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_099))::numeric(9,3) END AS trx_099,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_100))::numeric(9,3) END AS trx_100,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_101))::numeric(9,3) END AS trx_101,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_102))::numeric(9,3) END AS trx_102,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_103))::numeric(9,3) END AS trx_103,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_104))::numeric(9,3) END AS trx_104,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_105))::numeric(9,3) END AS trx_105,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_106))::numeric(9,3) END AS trx_106,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_107))::numeric(9,3) END AS trx_107,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_108))::numeric(9,3) END AS trx_108,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_109))::numeric(9,3) END AS trx_109,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_110))::numeric(9,3) END AS trx_110,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_111))::numeric(9,3) END AS trx_111,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_112))::numeric(9,3) END AS trx_112,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_113))::numeric(9,3) END AS trx_113,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_114))::numeric(9,3) END AS trx_114,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_115))::numeric(9,3) END AS trx_115,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_116))::numeric(9,3) END AS trx_116,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_117))::numeric(9,3) END AS trx_117,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_118))::numeric(9,3) END AS trx_118,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_119))::numeric(9,3) END AS trx_119,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_120))::numeric(9,3) END AS trx_120,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_121))::numeric(9,3) END AS trx_121,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_122))::numeric(9,3) END AS trx_122,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_123))::numeric(9,3) END AS trx_123,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_124))::numeric(9,3) END AS trx_124,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_125))::numeric(9,3) END AS trx_125,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_126))::numeric(9,3) END AS trx_126,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_127))::numeric(9,3) END AS trx_127,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_128))::numeric(9,3) END AS trx_128,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_129))::numeric(9,3) END AS trx_129,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_130))::numeric(9,3) END AS trx_130,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_131))::numeric(9,3) END AS trx_131,
        CASE WHEN (EXT_IMS_MHJ_QTY_W_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHJ_QTY_W_src.trx_132))::numeric(9,3) END AS trx_132,
        EXT_IMS_MHJ_QTY_W_src.batch_id,
        EXT_IMS_MHJ_QTY_W_src.row_id,
        EXT_IMS_MHJ_QTY_W_src.update_ts
 FROM teva_ingestion.EXT_IMS_MHJ_QTY_W_src;

CREATE  VIEW teva_ingestion.ext_ims_pbm_xref AS
 SELECT btrim(EXT_IMS_PBM_XREF_src.PBM_NAME) AS PBM_NAME,
        btrim(EXT_IMS_PBM_XREF_src.PAYER_PLAN_NUM) AS PAYER_PLAN_NUM,
        btrim(EXT_IMS_PBM_XREF_src.XREF_TO_PAYER_PLAN_NUM) AS XREF_TO_PAYER_PLAN_NUM,
        btrim(EXT_IMS_PBM_XREF_src.IPD_ID) AS IPD_ID,
        btrim(EXT_IMS_PBM_XREF_src.IPD_TYPE) AS IPD_TYPE,
        btrim(EXT_IMS_PBM_XREF_src.PLAN_NAME) AS PLAN_NAME,
        btrim(EXT_IMS_PBM_XREF_src.PBM_NUM) AS PBM_NUM,
        btrim(EXT_IMS_PBM_XREF_src.IMS_PROCESSOR_NUM) AS IMS_PROCESSOR_NUM,
        EXT_IMS_PBM_XREF_src.batch_id,
        EXT_IMS_PBM_XREF_src.row_id,
        EXT_IMS_PBM_XREF_src.update_ts
 FROM teva_ingestion.EXT_IMS_PBM_XREF_src
 WHERE (EXT_IMS_PBM_XREF_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_IMS_PBM_XREF'::varchar(16))));

CREATE  VIEW teva_ingestion.EXT_IMS_PDRP AS
SELECT btrim(EXT_IMS_PDRP_src.IMS_ID) AS IMS_ID, btrim(EXT_IMS_PDRP_src.FILLER_01) AS FILLER_01, btrim(EXT_IMS_PDRP_src.FILLER_02) AS FILLER_02, btrim(EXT_IMS_PDRP_src.ME_NBR) AS ME_NBR, btrim(EXT_IMS_PDRP_src.LAST_NAME) AS LAST_NAME, btrim(EXT_IMS_PDRP_src.FIRST_NAME) AS FIRST_NAME, btrim(EXT_IMS_PDRP_src.MIDDLE) AS MIDDLE, btrim(EXT_IMS_PDRP_src.FILLER_03) AS FILLER_03, CASE WHEN (EXT_IMS_PDRP_src.PDRP_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_IMS_PDRP_src.PDRP_DATE))::timestamp END AS PDRP_DATE, EXT_IMS_PDRP_src.batch_id, EXT_IMS_PDRP_src.row_id, EXT_IMS_PDRP_src.update_ts FROM teva_ingestion.EXT_IMS_PDRP_src WHERE (EXT_IMS_PDRP_src.batch_id = (SELECT max(teva_ingestion_control.batch_id) AS max FROM teva_ingestion.teva_ingestion_control WHERE (teva_ingestion_control.file_class = 'EXT_IMS_PDRP'::varchar(12))));

CREATE  VIEW teva_ingestion.ext_ims_plan_xref AS
 SELECT btrim(EXT_IMS_PLAN_XREF_src.PAYER_NUM) AS PAYER_NUM,
        btrim(EXT_IMS_PLAN_XREF_src.PAYER_NAME) AS PAYER_NAME,
        btrim(EXT_IMS_PLAN_XREF_src.PLAN_NUM) AS PLAN_NUM,
        btrim(EXT_IMS_PLAN_XREF_src.PAYER_PLAN_NUM) AS PAYER_PLAN_NUM,
        btrim(EXT_IMS_PLAN_XREF_src.PLAN_NAME) AS PLAN_NAME,
        btrim(EXT_IMS_PLAN_XREF_src.MODEL) AS MODEL,
        btrim(EXT_IMS_PLAN_XREF_src.CITY) AS CITY,
        btrim(EXT_IMS_PLAN_XREF_src.HQ_STATE) AS HQ_STATE,
        btrim(EXT_IMS_PLAN_XREF_src.OPERATING_STATE) AS OPERATING_STATE,
        btrim(EXT_IMS_PLAN_XREF_src.MONTHS_WITH_DATA) AS MONTHS_WITH_DATA,
        EXT_IMS_PLAN_XREF_src.batch_id,
        EXT_IMS_PLAN_XREF_src.row_id,
        EXT_IMS_PLAN_XREF_src.update_ts
 FROM teva_ingestion.EXT_IMS_PLAN_XREF_src
 WHERE (EXT_IMS_PLAN_XREF_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_IMS_PLAN_XREF'::varchar(17))));

CREATE  VIEW teva_ingestion.ext_ims_plan_xref_accelerated AS
 SELECT btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NUM) AS PAYER_NUM,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_NAME) AS PAYER_NAME,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NUM) AS PLAN_NUM,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.PAYER_PLAN_NUM) AS PAYER_PLAN_NUM,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.PLAN_NAME) AS PLAN_NAME,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.MODEL) AS MODEL,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.CITY) AS CITY,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.HQ_STATE) AS HQ_STATE,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.OPERATING_STATE) AS OPERATING_STATE,
        btrim(EXT_IMS_PLAN_XREF_ACCELERATED_src.MONTHS_WITH_DATA) AS MONTHS_WITH_DATA,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.batch_id,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.row_id,
        EXT_IMS_PLAN_XREF_ACCELERATED_src.update_ts
 FROM teva_ingestion.EXT_IMS_PLAN_XREF_ACCELERATED_src
 WHERE (EXT_IMS_PLAN_XREF_ACCELERATED_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_IMS_PLAN_XREF_ACCELERATED'::varchar(29))));

CREATE  VIEW teva_ingestion.ext_ims_sln_xref_kc AS
 SELECT btrim(ext_ims_sln_xref_kc_src.IMS_ID) AS IMS_ID,
        btrim(ext_ims_sln_xref_kc_src.STATE_LICENSE_NUMBER) AS STATE_LICENSE_NUMBER,
        btrim(ext_ims_sln_xref_kc_src.STATE_LICENSE_STATE) AS STATE_LICENSE_STATE,
        ext_ims_sln_xref_kc_src.batch_id,
        ext_ims_sln_xref_kc_src.row_id,
        ext_ims_sln_xref_kc_src.update_ts
 FROM teva_ingestion.ext_ims_sln_xref_kc_src
 WHERE (ext_ims_sln_xref_kc_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_IMS_SLN_XREF_KC'::varchar(19))));

CREATE  VIEW teva_ingestion.ext_kc_zip_to_territory AS
 SELECT btrim(ext_kc_zip_to_territory_src.ZIP) AS ZIP,
        btrim(ext_kc_zip_to_territory_src.CITY) AS CITY,
        btrim(ext_kc_zip_to_territory_src.STATE) AS STATE,
        btrim(ext_kc_zip_to_territory_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(ext_kc_zip_to_territory_src.TERRITORY_NAME) AS TERRITORY_NAME,
        btrim(ext_kc_zip_to_territory_src.AREA_NAME) AS AREA_NAME,
        btrim(ext_kc_zip_to_territory_src.REGION_NAME) AS REGION_NAME,
        btrim(ext_kc_zip_to_territory_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(ext_kc_zip_to_territory_src.ORGANIZATION_CODE) AS ORGANIZATION_CODE,
        CASE WHEN (ext_kc_zip_to_territory_src.INACTIVE_FLAG = ''::varchar) THEN NULL::numeric(1,0) ELSE (btrim(ext_kc_zip_to_territory_src.INACTIVE_FLAG))::numeric(1,0) END AS INACTIVE_FLAG,
        btrim(ext_kc_zip_to_territory_src.COMMENTS) AS COMMENTS,
        CASE WHEN (ext_kc_zip_to_territory_src.MIRROR_FLAG = ''::varchar) THEN NULL::numeric(1,0) ELSE (btrim(ext_kc_zip_to_territory_src.MIRROR_FLAG))::numeric(1,0) END AS MIRROR_FLAG,
        btrim(ext_kc_zip_to_territory_src.MIRROR_TERRITORY_NUM) AS MIRROR_TERRITORY_NUM,
        ext_kc_zip_to_territory_src.batch_id,
        ext_kc_zip_to_territory_src.row_id,
        ext_kc_zip_to_territory_src.update_ts
 FROM teva_ingestion.ext_kc_zip_to_territory_src
 WHERE (ext_kc_zip_to_territory_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_KC_ZIP_TO_TERRITORY'::varchar(23))));

CREATE  VIEW teva_ingestion.ext_knipper_samples_shipped AS
 SELECT btrim(ext_knipper_samples_shipped_src.CLIENT_PRAC_ID) AS CLIENT_PRAC_ID,
        btrim(ext_knipper_samples_shipped_src.TERR_CODE) AS TERR_CODE,
        btrim(ext_knipper_samples_shipped_src.SAMPLE_PROD_CODE) AS SAMPLE_PROD_CODE,
        btrim(ext_knipper_samples_shipped_src.SAMPLE_DATE) AS SAMPLE_DATE,
        CASE WHEN (ext_knipper_samples_shipped_src.SAMPLE_QTY = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(ext_knipper_samples_shipped_src.SAMPLE_QTY))::numeric(38,0) END AS SAMPLE_QTY,
        btrim(ext_knipper_samples_shipped_src.REQUEST_DATE) AS REQUEST_DATE,
        CASE WHEN (ext_knipper_samples_shipped_src.REQUEST_QTY = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(ext_knipper_samples_shipped_src.REQUEST_QTY))::numeric(38,0) END AS REQUEST_QTY,
        ext_knipper_samples_shipped_src.batch_id,
        ext_knipper_samples_shipped_src.row_id,
        ext_knipper_samples_shipped_src.update_ts
 FROM teva_ingestion.ext_knipper_samples_shipped_src
 WHERE (ext_knipper_samples_shipped_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_KNIPPER_SAMPLES_SHIPPED'::varchar(27))));

CREATE  VIEW teva_ingestion.EXT_MM_RAM_TO_STATE AS
 SELECT btrim(EXT_MM_RAM_TO_STATE_src.MM_RAM) AS MM_RAM,
        btrim(EXT_MM_RAM_TO_STATE_src.STATE) AS STATE,
        EXT_MM_RAM_TO_STATE_src.batch_id,
        EXT_MM_RAM_TO_STATE_src.row_id,
        EXT_MM_RAM_TO_STATE_src.update_ts
 FROM teva_ingestion.EXT_MM_RAM_TO_STATE_src
 WHERE (EXT_MM_RAM_TO_STATE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_MM_RAM_TO_STATE'::varchar(19))));

CREATE  VIEW teva_ingestion.ext_omnicare_sales AS
 SELECT btrim(EXT_OMNICARE_SALES_src.TRANSACTION_ID) AS TRANSACTION_ID,
        btrim(EXT_OMNICARE_SALES_src.INVOICE_DATE) AS INVOICE_DATE,
        btrim(EXT_OMNICARE_SALES_src.PRODUCT_BRAND) AS PRODUCT_BRAND,
        btrim(EXT_OMNICARE_SALES_src.PRODUCT_NDC) AS PRODUCT_NDC,
        btrim(EXT_OMNICARE_SALES_src.PRODUCT_DESC) AS PRODUCT_DESC,
        CASE WHEN (EXT_OMNICARE_SALES_src.INVOICE_QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_OMNICARE_SALES_src.INVOICE_QTY))::numeric(37,15) END AS INVOICE_QTY,
        CASE WHEN (EXT_OMNICARE_SALES_src.INVOICE_UNITS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_OMNICARE_SALES_src.INVOICE_UNITS))::numeric(37,15) END AS INVOICE_UNITS,
        CASE WHEN (EXT_OMNICARE_SALES_src.INVOICE_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_OMNICARE_SALES_src.INVOICE_COST))::numeric(37,15) END AS INVOICE_COST,
        CASE WHEN (EXT_OMNICARE_SALES_src.INVOICE_PACK_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_OMNICARE_SALES_src.INVOICE_PACK_COST))::numeric(37,15) END AS INVOICE_PACK_COST,
        CASE WHEN (EXT_OMNICARE_SALES_src.INVOICE_UNIT_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_OMNICARE_SALES_src.INVOICE_UNIT_COST))::numeric(37,15) END AS INVOICE_UNIT_COST,
        CASE WHEN (EXT_OMNICARE_SALES_src.CONTRACT_PACK_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_OMNICARE_SALES_src.CONTRACT_PACK_COST))::numeric(37,15) END AS CONTRACT_PACK_COST,
        CASE WHEN (EXT_OMNICARE_SALES_src.CONTRACT_PURCHASES = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_OMNICARE_SALES_src.CONTRACT_PURCHASES))::numeric(37,15) END AS CONTRACT_PURCHASES,
        btrim(EXT_OMNICARE_SALES_src.CONTRACT_NUMBER) AS CONTRACT_NUMBER,
        btrim(EXT_OMNICARE_SALES_src.DISPENSING_LOCATION) AS DISPENSING_LOCATION,
        btrim(EXT_OMNICARE_SALES_src.DL_ADDRESS_1) AS DL_ADDRESS_1,
        btrim(EXT_OMNICARE_SALES_src.DL_ADDRESS_2) AS DL_ADDRESS_2,
        btrim(EXT_OMNICARE_SALES_src.DL_CITY) AS DL_CITY,
        btrim(EXT_OMNICARE_SALES_src.DL_STATE) AS DL_STATE,
        btrim(EXT_OMNICARE_SALES_src.DL_ZIP) AS DL_ZIP,
        btrim(EXT_OMNICARE_SALES_src.DL_DEA_NUM) AS DL_DEA_NUM,
        btrim(EXT_OMNICARE_SALES_src.DEPOT_LOCATION) AS DEPOT_LOCATION,
        btrim(EXT_OMNICARE_SALES_src.DEP_ADDRESS_1) AS DEP_ADDRESS_1,
        btrim(EXT_OMNICARE_SALES_src.DEP_ADDRESS_2) AS DEP_ADDRESS_2,
        btrim(EXT_OMNICARE_SALES_src.DEP_CITY) AS DEP_CITY,
        btrim(EXT_OMNICARE_SALES_src.DEP_STATE) AS DEP_STATE,
        btrim(EXT_OMNICARE_SALES_src.DEP_ZIP) AS DEP_ZIP,
        btrim(EXT_OMNICARE_SALES_src.DEP_DEA_NUM) AS DEP_DEA_NUM,
        EXT_OMNICARE_SALES_src.batch_id,
        EXT_OMNICARE_SALES_src.row_id,
        EXT_OMNICARE_SALES_src.update_ts
 FROM teva_ingestion.EXT_OMNICARE_SALES_src
 WHERE (EXT_OMNICARE_SALES_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_OMNICARE_SALES'::varchar(18))));

CREATE  VIEW teva_ingestion.EXT_ONC_DDD_MONTHLY_RETAIL AS
 SELECT btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.sra_1) AS sra_1,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.ZIP) AS ZIP,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.sra_3) AS sra_3,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.sra_4) AS sra_4,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.DATA_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.DATA_DATE))::timestamp END AS DATA_DATE,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH01 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH01))::numeric(19,0) END AS QTY_MTH01,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH02 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH02))::numeric(19,0) END AS QTY_MTH02,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH03 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH03))::numeric(19,0) END AS QTY_MTH03,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH04 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH04))::numeric(19,0) END AS QTY_MTH04,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH05 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH05))::numeric(19,0) END AS QTY_MTH05,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH06 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH06))::numeric(19,0) END AS QTY_MTH06,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH07 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH07))::numeric(19,0) END AS QTY_MTH07,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH08 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH08))::numeric(19,0) END AS QTY_MTH08,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH09 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH09))::numeric(19,0) END AS QTY_MTH09,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH10 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH10))::numeric(19,0) END AS QTY_MTH10,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH11 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH11))::numeric(19,0) END AS QTY_MTH11,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH12 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH12))::numeric(19,0) END AS QTY_MTH12,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH13 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH13))::numeric(19,0) END AS QTY_MTH13,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH14 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH14))::numeric(19,0) END AS QTY_MTH14,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH15 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH15))::numeric(19,0) END AS QTY_MTH15,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH16 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH16))::numeric(19,0) END AS QTY_MTH16,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH17 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH17))::numeric(19,0) END AS QTY_MTH17,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH18 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH18))::numeric(19,0) END AS QTY_MTH18,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH19 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH19))::numeric(19,0) END AS QTY_MTH19,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH20 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH20))::numeric(19,0) END AS QTY_MTH20,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH21 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH21))::numeric(19,0) END AS QTY_MTH21,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH22 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH22))::numeric(19,0) END AS QTY_MTH22,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH23 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH23))::numeric(19,0) END AS QTY_MTH23,
        CASE WHEN (EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH24 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.QTY_MTH24))::numeric(19,0) END AS QTY_MTH24,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.CITY) AS CITY,
        btrim(EXT_ONC_DDD_MONTHLY_RETAIL_src.STATE) AS STATE,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.batch_id,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.row_id,
        EXT_ONC_DDD_MONTHLY_RETAIL_src.update_ts
 FROM teva_ingestion.EXT_ONC_DDD_MONTHLY_RETAIL_src
 WHERE (EXT_ONC_DDD_MONTHLY_RETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DDD_MONTHLY_RETAIL'::varchar(26))));

CREATE  VIEW teva_ingestion.EXT_ONC_DDD_WEEKLY_RETAIL AS
 SELECT btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.ZIP) AS ZIP,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.sra_2) AS sra_2,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.sra_3) AS sra_3,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.sra_4) AS sra_4,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.DATA_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.DATA_DATE))::timestamp END AS DATA_DATE,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK01 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK01))::numeric(19,0) END AS QTY_WK01,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK02 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK02))::numeric(19,0) END AS QTY_WK02,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK03 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK03))::numeric(19,0) END AS QTY_WK03,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK04 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK04))::numeric(19,0) END AS QTY_WK04,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK05 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK05))::numeric(19,0) END AS QTY_WK05,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK06 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK06))::numeric(19,0) END AS QTY_WK06,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK07 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK07))::numeric(19,0) END AS QTY_WK07,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK08 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK08))::numeric(19,0) END AS QTY_WK08,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK09 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK09))::numeric(19,0) END AS QTY_WK09,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK10 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK10))::numeric(19,0) END AS QTY_WK10,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK11 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK11))::numeric(19,0) END AS QTY_WK11,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK12 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK12))::numeric(19,0) END AS QTY_WK12,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK13 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK13))::numeric(19,0) END AS QTY_WK13,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK14 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK14))::numeric(19,0) END AS QTY_WK14,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK15 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK15))::numeric(19,0) END AS QTY_WK15,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK16 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK16))::numeric(19,0) END AS QTY_WK16,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK17 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK17))::numeric(19,0) END AS QTY_WK17,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK18 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK18))::numeric(19,0) END AS QTY_WK18,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK19 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK19))::numeric(19,0) END AS QTY_WK19,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK20 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK20))::numeric(19,0) END AS QTY_WK20,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK21 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK21))::numeric(19,0) END AS QTY_WK21,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK22 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK22))::numeric(19,0) END AS QTY_WK22,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK23 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK23))::numeric(19,0) END AS QTY_WK23,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK24 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK24))::numeric(19,0) END AS QTY_WK24,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK25 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK25))::numeric(19,0) END AS QTY_WK25,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK26 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK26))::numeric(19,0) END AS QTY_WK26,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK27 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK27))::numeric(19,0) END AS QTY_WK27,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK28 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK28))::numeric(19,0) END AS QTY_WK28,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK29 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK29))::numeric(19,0) END AS QTY_WK29,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK30 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK30))::numeric(19,0) END AS QTY_WK30,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK31 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK31))::numeric(19,0) END AS QTY_WK31,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK32 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK32))::numeric(19,0) END AS QTY_WK32,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK33 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK33))::numeric(19,0) END AS QTY_WK33,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK34 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK34))::numeric(19,0) END AS QTY_WK34,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK35 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK35))::numeric(19,0) END AS QTY_WK35,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK36 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK36))::numeric(19,0) END AS QTY_WK36,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK37 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK37))::numeric(19,0) END AS QTY_WK37,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK38 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK38))::numeric(19,0) END AS QTY_WK38,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK39 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK39))::numeric(19,0) END AS QTY_WK39,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK40 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK40))::numeric(19,0) END AS QTY_WK40,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK41 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK41))::numeric(19,0) END AS QTY_WK41,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK42 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK42))::numeric(19,0) END AS QTY_WK42,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK43 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK43))::numeric(19,0) END AS QTY_WK43,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK44 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK44))::numeric(19,0) END AS QTY_WK44,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK45 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK45))::numeric(19,0) END AS QTY_WK45,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK46 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK46))::numeric(19,0) END AS QTY_WK46,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK47 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK47))::numeric(19,0) END AS QTY_WK47,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK48 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK48))::numeric(19,0) END AS QTY_WK48,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK49 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK49))::numeric(19,0) END AS QTY_WK49,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK50 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK50))::numeric(19,0) END AS QTY_WK50,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK51 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK51))::numeric(19,0) END AS QTY_WK51,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK52 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK52))::numeric(19,0) END AS QTY_WK52,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK53 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK53))::numeric(19,0) END AS QTY_WK53,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK54 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK54))::numeric(19,0) END AS QTY_WK54,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK55 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK55))::numeric(19,0) END AS QTY_WK55,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK56 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK56))::numeric(19,0) END AS QTY_WK56,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK57 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK57))::numeric(19,0) END AS QTY_WK57,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK58 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK58))::numeric(19,0) END AS QTY_WK58,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK59 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK59))::numeric(19,0) END AS QTY_WK59,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK60 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK60))::numeric(19,0) END AS QTY_WK60,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK61 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK61))::numeric(19,0) END AS QTY_WK61,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK62 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK62))::numeric(19,0) END AS QTY_WK62,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK63 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK63))::numeric(19,0) END AS QTY_WK63,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK64 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK64))::numeric(19,0) END AS QTY_WK64,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK65 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK65))::numeric(19,0) END AS QTY_WK65,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK66 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK66))::numeric(19,0) END AS QTY_WK66,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK67 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK67))::numeric(19,0) END AS QTY_WK67,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK68 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK68))::numeric(19,0) END AS QTY_WK68,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK69 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK69))::numeric(19,0) END AS QTY_WK69,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK70 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK70))::numeric(19,0) END AS QTY_WK70,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK71 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK71))::numeric(19,0) END AS QTY_WK71,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK72 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK72))::numeric(19,0) END AS QTY_WK72,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK73 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK73))::numeric(19,0) END AS QTY_WK73,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK74 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK74))::numeric(19,0) END AS QTY_WK74,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK75 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK75))::numeric(19,0) END AS QTY_WK75,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK76 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK76))::numeric(19,0) END AS QTY_WK76,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK77 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK77))::numeric(19,0) END AS QTY_WK77,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK78 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK78))::numeric(19,0) END AS QTY_WK78,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK79 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK79))::numeric(19,0) END AS QTY_WK79,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK80 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK80))::numeric(19,0) END AS QTY_WK80,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK81 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK81))::numeric(19,0) END AS QTY_WK81,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK82 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK82))::numeric(19,0) END AS QTY_WK82,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK83 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK83))::numeric(19,0) END AS QTY_WK83,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK84 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK84))::numeric(19,0) END AS QTY_WK84,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK85 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK85))::numeric(19,0) END AS QTY_WK85,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK86 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK86))::numeric(19,0) END AS QTY_WK86,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK87 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK87))::numeric(19,0) END AS QTY_WK87,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK88 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK88))::numeric(19,0) END AS QTY_WK88,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK89 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK89))::numeric(19,0) END AS QTY_WK89,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK90 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK90))::numeric(19,0) END AS QTY_WK90,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK91 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK91))::numeric(19,0) END AS QTY_WK91,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK92 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK92))::numeric(19,0) END AS QTY_WK92,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK93 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK93))::numeric(19,0) END AS QTY_WK93,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK94 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK94))::numeric(19,0) END AS QTY_WK94,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK95 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK95))::numeric(19,0) END AS QTY_WK95,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK96 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK96))::numeric(19,0) END AS QTY_WK96,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK97 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK97))::numeric(19,0) END AS QTY_WK97,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK98 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK98))::numeric(19,0) END AS QTY_WK98,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK99 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK99))::numeric(19,0) END AS QTY_WK99,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK100 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK100))::numeric(19,0) END AS QTY_WK100,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK101 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK101))::numeric(19,0) END AS QTY_WK101,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK102 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK102))::numeric(19,0) END AS QTY_WK102,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK103 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK103))::numeric(19,0) END AS QTY_WK103,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK104 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK104))::numeric(19,0) END AS QTY_WK104,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK105 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK105))::numeric(19,0) END AS QTY_WK105,
        CASE WHEN (EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK106 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.QTY_WK106))::numeric(19,0) END AS QTY_WK106,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.CITY) AS CITY,
        btrim(EXT_ONC_DDD_WEEKLY_RETAIL_src.STATE) AS STATE,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.batch_id,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.row_id,
        EXT_ONC_DDD_WEEKLY_RETAIL_src.update_ts
 FROM teva_ingestion.EXT_ONC_DDD_WEEKLY_RETAIL_src
 WHERE (EXT_ONC_DDD_WEEKLY_RETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DDD_WEEKLY_RETAIL'::varchar(25))));

CREATE  VIEW teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL AS
 SELECT btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_FACILITY_NUMBER) AS IMS_FACILITY_NUMBER,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.IMS_PRESCRIBER_NUMBER) AS IMS_PRESCRIBER_NUMBER,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.OUTLET_ZIP) AS OUTLET_ZIP,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_NAME) AS FACILITY_PRESCRIBER_NAME,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS1) AS FACILITY_PRESCRIBER_ADDRESS1,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS2) AS FACILITY_PRESCRIBER_ADDRESS2,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS3) AS FACILITY_PRESCRIBER_ADDRESS3,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ADDRESS4) AS FACILITY_PRESCRIBER_ADDRESS4,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_CITY) AS FACILITY_PRESCRIBER_CITY,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_STATE) AS FACILITY_PRESCRIBER_STATE,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.FACILITY_PRESCRIBER_ZIP) AS FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.row_id,
        EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_DOL_src
 WHERE (EXT_ONC_DMD_MONTHLY_DEMO_DOL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DMD_MONTHLY_DEMO_DOL'::varchar(28))));

CREATE  VIEW teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY AS
 SELECT btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_FACILITY_NUMBER) AS IMS_FACILITY_NUMBER,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.IMS_PRESCRIBER_NUMBER) AS IMS_PRESCRIBER_NUMBER,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.OUTLET_ZIP) AS OUTLET_ZIP,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_NAME) AS FACILITY_PRESCRIBER_NAME,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS1) AS FACILITY_PRESCRIBER_ADDRESS1,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS2) AS FACILITY_PRESCRIBER_ADDRESS2,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS3) AS FACILITY_PRESCRIBER_ADDRESS3,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ADDRESS4) AS FACILITY_PRESCRIBER_ADDRESS4,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_CITY) AS FACILITY_PRESCRIBER_CITY,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_STATE) AS FACILITY_PRESCRIBER_STATE,
        btrim(EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.FACILITY_PRESCRIBER_ZIP) AS FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.row_id,
        EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DEMO_QTY_src
 WHERE (EXT_ONC_DMD_MONTHLY_DEMO_QTY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DMD_MONTHLY_DEMO_QTY'::varchar(28))));

CREATE  VIEW teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS AS
 SELECT btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.SUBCATEGORY_CODE) AS SUBCATEGORY_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.ALT_SEQ_NUM) AS ALT_SEQ_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DATA_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DATA_DATE))::timestamp END AS DATA_DATE,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH01 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH01))::numeric(19,0) END AS DOL_MTH01,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH02 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH02))::numeric(19,0) END AS DOL_MTH02,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH03 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH03))::numeric(19,0) END AS DOL_MTH03,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH04 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH04))::numeric(19,0) END AS DOL_MTH04,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH05 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH05))::numeric(19,0) END AS DOL_MTH05,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH06 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH06))::numeric(19,0) END AS DOL_MTH06,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH07 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH07))::numeric(19,0) END AS DOL_MTH07,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH08 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH08))::numeric(19,0) END AS DOL_MTH08,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH09 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH09))::numeric(19,0) END AS DOL_MTH09,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH10 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH10))::numeric(19,0) END AS DOL_MTH10,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH11 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH11))::numeric(19,0) END AS DOL_MTH11,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH12 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH12))::numeric(19,0) END AS DOL_MTH12,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH13 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH13))::numeric(19,0) END AS DOL_MTH13,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH14 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH14))::numeric(19,0) END AS DOL_MTH14,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH15 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH15))::numeric(19,0) END AS DOL_MTH15,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH16 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH16))::numeric(19,0) END AS DOL_MTH16,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH17 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH17))::numeric(19,0) END AS DOL_MTH17,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH18 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH18))::numeric(19,0) END AS DOL_MTH18,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH19 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH19))::numeric(19,0) END AS DOL_MTH19,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH20 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH20))::numeric(19,0) END AS DOL_MTH20,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH21 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH21))::numeric(19,0) END AS DOL_MTH21,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH22 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH22))::numeric(19,0) END AS DOL_MTH22,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH23 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH23))::numeric(19,0) END AS DOL_MTH23,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH24 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.DOL_MTH24))::numeric(19,0) END AS DOL_MTH24,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_ONC_DMD_MONTHLY_DOLLARS_src.OUTLET_ZIP) AS OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.batch_id,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.row_id,
        EXT_ONC_DMD_MONTHLY_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_DOLLARS_src
 WHERE (EXT_ONC_DMD_MONTHLY_DOLLARS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DMD_MONTHLY_DOLLARS'::varchar(27))));

CREATE  VIEW teva_ingestion.EXT_ONC_DMD_MONTHLY_QUANTITY AS
 SELECT btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.FILLER_01) AS FILLER_01,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.SUBCATEGORY_CODE) AS SUBCATEGORY_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.ALT_SEQ_NUM) AS ALT_SEQ_NUM,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.DATA_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.DATA_DATE))::timestamp END AS DATA_DATE,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH01 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH01))::numeric(19,0) END AS QTY_MTH01,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH02 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH02))::numeric(19,0) END AS QTY_MTH02,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH03 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH03))::numeric(19,0) END AS QTY_MTH03,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH04 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH04))::numeric(19,0) END AS QTY_MTH04,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH05 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH05))::numeric(19,0) END AS QTY_MTH05,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH06 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH06))::numeric(19,0) END AS QTY_MTH06,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH07 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH07))::numeric(19,0) END AS QTY_MTH07,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH08 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH08))::numeric(19,0) END AS QTY_MTH08,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH09 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH09))::numeric(19,0) END AS QTY_MTH09,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH10 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH10))::numeric(19,0) END AS QTY_MTH10,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH11 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH11))::numeric(19,0) END AS QTY_MTH11,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH12 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH12))::numeric(19,0) END AS QTY_MTH12,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH13 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH13))::numeric(19,0) END AS QTY_MTH13,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH14 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH14))::numeric(19,0) END AS QTY_MTH14,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH15 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH15))::numeric(19,0) END AS QTY_MTH15,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH16 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH16))::numeric(19,0) END AS QTY_MTH16,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH17 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH17))::numeric(19,0) END AS QTY_MTH17,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH18 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH18))::numeric(19,0) END AS QTY_MTH18,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH19 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH19))::numeric(19,0) END AS QTY_MTH19,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH20 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH20))::numeric(19,0) END AS QTY_MTH20,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH21 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH21))::numeric(19,0) END AS QTY_MTH21,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH22 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH22))::numeric(19,0) END AS QTY_MTH22,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH23 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH23))::numeric(19,0) END AS QTY_MTH23,
        CASE WHEN (EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH24 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.QTY_MTH24))::numeric(19,0) END AS QTY_MTH24,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_ONC_DMD_MONTHLY_QUANTITY_src.OUTLET_ZIP) AS OUTLET_ZIP,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.batch_id,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.row_id,
        EXT_ONC_DMD_MONTHLY_QUANTITY_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_MONTHLY_QUANTITY_src
 WHERE (EXT_ONC_DMD_MONTHLY_QUANTITY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DMD_MONTHLY_QUANTITY'::varchar(28))));

CREATE  VIEW teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO AS
 SELECT btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_FACILITY_NUMBER) AS IMS_FACILITY_NUMBER,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.IMS_PRESCRIBER_NUMBER) AS IMS_PRESCRIBER_NUMBER,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.OUTLET_ZIP) AS OUTLET_ZIP,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_NAME) AS FACILITY_PRESCRIBER_NAME,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS1) AS FACILITY_PRESCRIBER_ADDRESS1,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS2) AS FACILITY_PRESCRIBER_ADDRESS2,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS3) AS FACILITY_PRESCRIBER_ADDRESS3,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ADDRESS4) AS FACILITY_PRESCRIBER_ADDRESS4,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_CITY) AS FACILITY_PRESCRIBER_CITY,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_STATE) AS FACILITY_PRESCRIBER_STATE,
        btrim(EXT_ONC_DMD_WEEKLY_DEMO_src.FACILITY_PRESCRIBER_ZIP) AS FACILITY_PRESCRIBER_ZIP,
        EXT_ONC_DMD_WEEKLY_DEMO_src.batch_id,
        EXT_ONC_DMD_WEEKLY_DEMO_src.row_id,
        EXT_ONC_DMD_WEEKLY_DEMO_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_WEEKLY_DEMO_src
 WHERE (EXT_ONC_DMD_WEEKLY_DEMO_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DMD_WEEKLY_DEMO'::varchar(23))));

CREATE  VIEW teva_ingestion.EXT_ONC_DMD_WEEKLY_SALES AS
 SELECT btrim(EXT_ONC_DMD_WEEKLY_SALES_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.SUBCATEGORY_CODE) AS SUBCATEGORY_CODE,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.ALT_SEQ_NUM) AS ALT_SEQ_NUM,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.FILLER_01) AS FILLER_01,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.DATA_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.DATA_DATE))::timestamp END AS DATA_DATE,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK01 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK01))::numeric(19,0) END AS QTY_WK01,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK02 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK02))::numeric(19,0) END AS QTY_WK02,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK03 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK03))::numeric(19,0) END AS QTY_WK03,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK04 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK04))::numeric(19,0) END AS QTY_WK04,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK05 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK05))::numeric(19,0) END AS QTY_WK05,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK06 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK06))::numeric(19,0) END AS QTY_WK06,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK07 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK07))::numeric(19,0) END AS QTY_WK07,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK08 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK08))::numeric(19,0) END AS QTY_WK08,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK09 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK09))::numeric(19,0) END AS QTY_WK09,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK10 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK10))::numeric(19,0) END AS QTY_WK10,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK11 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK11))::numeric(19,0) END AS QTY_WK11,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK12 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK12))::numeric(19,0) END AS QTY_WK12,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK13 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK13))::numeric(19,0) END AS QTY_WK13,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK14 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK14))::numeric(19,0) END AS QTY_WK14,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK15 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK15))::numeric(19,0) END AS QTY_WK15,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK16 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK16))::numeric(19,0) END AS QTY_WK16,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK17 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK17))::numeric(19,0) END AS QTY_WK17,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK18 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK18))::numeric(19,0) END AS QTY_WK18,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK19 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK19))::numeric(19,0) END AS QTY_WK19,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK20 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK20))::numeric(19,0) END AS QTY_WK20,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK21 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK21))::numeric(19,0) END AS QTY_WK21,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK22 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK22))::numeric(19,0) END AS QTY_WK22,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK23 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK23))::numeric(19,0) END AS QTY_WK23,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK24 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK24))::numeric(19,0) END AS QTY_WK24,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK25 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK25))::numeric(19,0) END AS QTY_WK25,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK26 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK26))::numeric(19,0) END AS QTY_WK26,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK27 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK27))::numeric(19,0) END AS QTY_WK27,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK28 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK28))::numeric(19,0) END AS QTY_WK28,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK29 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK29))::numeric(19,0) END AS QTY_WK29,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK30 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK30))::numeric(19,0) END AS QTY_WK30,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK31 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK31))::numeric(19,0) END AS QTY_WK31,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK32 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK32))::numeric(19,0) END AS QTY_WK32,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK33 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK33))::numeric(19,0) END AS QTY_WK33,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK34 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK34))::numeric(19,0) END AS QTY_WK34,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK35 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK35))::numeric(19,0) END AS QTY_WK35,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK36 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK36))::numeric(19,0) END AS QTY_WK36,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK37 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK37))::numeric(19,0) END AS QTY_WK37,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK38 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK38))::numeric(19,0) END AS QTY_WK38,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK39 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK39))::numeric(19,0) END AS QTY_WK39,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK40 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK40))::numeric(19,0) END AS QTY_WK40,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK41 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK41))::numeric(19,0) END AS QTY_WK41,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK42 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK42))::numeric(19,0) END AS QTY_WK42,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK43 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK43))::numeric(19,0) END AS QTY_WK43,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK44 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK44))::numeric(19,0) END AS QTY_WK44,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK45 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK45))::numeric(19,0) END AS QTY_WK45,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK46 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK46))::numeric(19,0) END AS QTY_WK46,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK47 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK47))::numeric(19,0) END AS QTY_WK47,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK48 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK48))::numeric(19,0) END AS QTY_WK48,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK49 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK49))::numeric(19,0) END AS QTY_WK49,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK50 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK50))::numeric(19,0) END AS QTY_WK50,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK51 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK51))::numeric(19,0) END AS QTY_WK51,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK52 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK52))::numeric(19,0) END AS QTY_WK52,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK53 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK53))::numeric(19,0) END AS QTY_WK53,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK54 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK54))::numeric(19,0) END AS QTY_WK54,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK55 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK55))::numeric(19,0) END AS QTY_WK55,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK56 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK56))::numeric(19,0) END AS QTY_WK56,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK57 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK57))::numeric(19,0) END AS QTY_WK57,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK58 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK58))::numeric(19,0) END AS QTY_WK58,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK59 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK59))::numeric(19,0) END AS QTY_WK59,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK60 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK60))::numeric(19,0) END AS QTY_WK60,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK61 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK61))::numeric(19,0) END AS QTY_WK61,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK62 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK62))::numeric(19,0) END AS QTY_WK62,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK63 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK63))::numeric(19,0) END AS QTY_WK63,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK64 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK64))::numeric(19,0) END AS QTY_WK64,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK65 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK65))::numeric(19,0) END AS QTY_WK65,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK66 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK66))::numeric(19,0) END AS QTY_WK66,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK67 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK67))::numeric(19,0) END AS QTY_WK67,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK68 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK68))::numeric(19,0) END AS QTY_WK68,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK69 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK69))::numeric(19,0) END AS QTY_WK69,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK70 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK70))::numeric(19,0) END AS QTY_WK70,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK71 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK71))::numeric(19,0) END AS QTY_WK71,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK72 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK72))::numeric(19,0) END AS QTY_WK72,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK73 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK73))::numeric(19,0) END AS QTY_WK73,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK74 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK74))::numeric(19,0) END AS QTY_WK74,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK75 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK75))::numeric(19,0) END AS QTY_WK75,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK76 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK76))::numeric(19,0) END AS QTY_WK76,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK77 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK77))::numeric(19,0) END AS QTY_WK77,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK78 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK78))::numeric(19,0) END AS QTY_WK78,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK79 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK79))::numeric(19,0) END AS QTY_WK79,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK80 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK80))::numeric(19,0) END AS QTY_WK80,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK81 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK81))::numeric(19,0) END AS QTY_WK81,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK82 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK82))::numeric(19,0) END AS QTY_WK82,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK83 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK83))::numeric(19,0) END AS QTY_WK83,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK84 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK84))::numeric(19,0) END AS QTY_WK84,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK85 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK85))::numeric(19,0) END AS QTY_WK85,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK86 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK86))::numeric(19,0) END AS QTY_WK86,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK87 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK87))::numeric(19,0) END AS QTY_WK87,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK88 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK88))::numeric(19,0) END AS QTY_WK88,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK89 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK89))::numeric(19,0) END AS QTY_WK89,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK90 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK90))::numeric(19,0) END AS QTY_WK90,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK91 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK91))::numeric(19,0) END AS QTY_WK91,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK92 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK92))::numeric(19,0) END AS QTY_WK92,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK93 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK93))::numeric(19,0) END AS QTY_WK93,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK94 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK94))::numeric(19,0) END AS QTY_WK94,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK95 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK95))::numeric(19,0) END AS QTY_WK95,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK96 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK96))::numeric(19,0) END AS QTY_WK96,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK97 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK97))::numeric(19,0) END AS QTY_WK97,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK98 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK98))::numeric(19,0) END AS QTY_WK98,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK99 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK99))::numeric(19,0) END AS QTY_WK99,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK100 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK100))::numeric(19,0) END AS QTY_WK100,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK101 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK101))::numeric(19,0) END AS QTY_WK101,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK102 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK102))::numeric(19,0) END AS QTY_WK102,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK103 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK103))::numeric(19,0) END AS QTY_WK103,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK104 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK104))::numeric(19,0) END AS QTY_WK104,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK105 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK105))::numeric(19,0) END AS QTY_WK105,
        CASE WHEN (EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK106 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_ONC_DMD_WEEKLY_SALES_src.QTY_WK106))::numeric(19,0) END AS QTY_WK106,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_ONC_DMD_WEEKLY_SALES_src.OUTLET_ZIP) AS OUTLET_ZIP,
        EXT_ONC_DMD_WEEKLY_SALES_src.batch_id,
        EXT_ONC_DMD_WEEKLY_SALES_src.row_id,
        EXT_ONC_DMD_WEEKLY_SALES_src.update_ts
 FROM teva_ingestion.EXT_ONC_DMD_WEEKLY_SALES_src
 WHERE (EXT_ONC_DMD_WEEKLY_SALES_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_DMD_WEEKLY_SALES'::varchar(24))));

CREATE  VIEW teva_ingestion.EXT_PCS_DDD_NONRETAIL AS
 SELECT btrim(EXT_PCS_DDD_NONRETAIL_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_PCS_DDD_NONRETAIL_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_PCS_DDD_NONRETAIL_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_PCS_DDD_NONRETAIL_src.OUTLET_CODE) AS OUTLET_CODE,
        btrim(EXT_PCS_DDD_NONRETAIL_src.SUBCATEGORY_CODE) AS SUBCATEGORY_CODE,
        btrim(EXT_PCS_DDD_NONRETAIL_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_PCS_DDD_NONRETAIL_src.IMS_PRODUCT_CODE) AS IMS_PRODUCT_CODE,
        btrim(EXT_PCS_DDD_NONRETAIL_src.MTH_YYYYMM) AS MTH_YYYYMM,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH01 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH01))::numeric(19,0) END AS QTY_MTH01,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH02 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH02))::numeric(19,0) END AS QTY_MTH02,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH03 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH03))::numeric(19,0) END AS QTY_MTH03,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH04 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH04))::numeric(19,0) END AS QTY_MTH04,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH05 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH05))::numeric(19,0) END AS QTY_MTH05,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH06 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH06))::numeric(19,0) END AS QTY_MTH06,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH07 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH07))::numeric(19,0) END AS QTY_MTH07,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH08 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH08))::numeric(19,0) END AS QTY_MTH08,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH09 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH09))::numeric(19,0) END AS QTY_MTH09,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH10 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH10))::numeric(19,0) END AS QTY_MTH10,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH11 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH11))::numeric(19,0) END AS QTY_MTH11,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH12 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH12))::numeric(19,0) END AS QTY_MTH12,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH13 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH13))::numeric(19,0) END AS QTY_MTH13,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH14 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH14))::numeric(19,0) END AS QTY_MTH14,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH15 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH15))::numeric(19,0) END AS QTY_MTH15,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH16 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH16))::numeric(19,0) END AS QTY_MTH16,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH17 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH17))::numeric(19,0) END AS QTY_MTH17,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH18 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH18))::numeric(19,0) END AS QTY_MTH18,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH19 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH19))::numeric(19,0) END AS QTY_MTH19,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH20 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH20))::numeric(19,0) END AS QTY_MTH20,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH21 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH21))::numeric(19,0) END AS QTY_MTH21,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH22 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH22))::numeric(19,0) END AS QTY_MTH22,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH23 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH23))::numeric(19,0) END AS QTY_MTH23,
        CASE WHEN (EXT_PCS_DDD_NONRETAIL_src.QTY_MTH24 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_NONRETAIL_src.QTY_MTH24))::numeric(19,0) END AS QTY_MTH24,
        btrim(EXT_PCS_DDD_NONRETAIL_src.OUTLET_NAME) AS OUTLET_NAME,
        btrim(EXT_PCS_DDD_NONRETAIL_src.OUTLET_ADDRESS) AS OUTLET_ADDRESS,
        btrim(EXT_PCS_DDD_NONRETAIL_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_PCS_DDD_NONRETAIL_src.OUTLET_STATE) AS OUTLET_STATE,
        btrim(EXT_PCS_DDD_NONRETAIL_src.OUTLET_ZIP) AS OUTLET_ZIP,
        EXT_PCS_DDD_NONRETAIL_src.batch_id,
        EXT_PCS_DDD_NONRETAIL_src.row_id,
        EXT_PCS_DDD_NONRETAIL_src.update_ts
 FROM teva_ingestion.EXT_PCS_DDD_NONRETAIL_src
 WHERE (EXT_PCS_DDD_NONRETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_PCS_DDD_NONRETAIL'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_PCS_DDD_RETAIL AS
 SELECT btrim(EXT_PCS_DDD_RETAIL_src.CLIENT_NUM) AS CLIENT_NUM,
        btrim(EXT_PCS_DDD_RETAIL_src.REPORT_NUM) AS REPORT_NUM,
        btrim(EXT_PCS_DDD_RETAIL_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_PCS_DDD_RETAIL_src.OUTLET_ZIP) AS OUTLET_ZIP,
        btrim(EXT_PCS_DDD_RETAIL_src.SRA3) AS SRA3,
        btrim(EXT_PCS_DDD_RETAIL_src.SRA4) AS SRA4,
        btrim(EXT_PCS_DDD_RETAIL_src.CATEGORY_CODE) AS CATEGORY_CODE,
        btrim(EXT_PCS_DDD_RETAIL_src.PRODUCT_GROUP) AS PRODUCT_GROUP,
        btrim(EXT_PCS_DDD_RETAIL_src.MTH_YYYYMM) AS MTH_YYYYMM,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH01 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH01))::numeric(19,0) END AS QTY_MTH01,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH02 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH02))::numeric(19,0) END AS QTY_MTH02,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH03 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH03))::numeric(19,0) END AS QTY_MTH03,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH04 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH04))::numeric(19,0) END AS QTY_MTH04,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH05 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH05))::numeric(19,0) END AS QTY_MTH05,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH06 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH06))::numeric(19,0) END AS QTY_MTH06,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH07 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH07))::numeric(19,0) END AS QTY_MTH07,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH08 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH08))::numeric(19,0) END AS QTY_MTH08,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH09 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH09))::numeric(19,0) END AS QTY_MTH09,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH10 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH10))::numeric(19,0) END AS QTY_MTH10,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH11 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH11))::numeric(19,0) END AS QTY_MTH11,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH12 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH12))::numeric(19,0) END AS QTY_MTH12,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH13 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH13))::numeric(19,0) END AS QTY_MTH13,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH14 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH14))::numeric(19,0) END AS QTY_MTH14,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH15 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH15))::numeric(19,0) END AS QTY_MTH15,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH16 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH16))::numeric(19,0) END AS QTY_MTH16,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH17 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH17))::numeric(19,0) END AS QTY_MTH17,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH18 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH18))::numeric(19,0) END AS QTY_MTH18,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH19 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH19))::numeric(19,0) END AS QTY_MTH19,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH20 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH20))::numeric(19,0) END AS QTY_MTH20,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH21 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH21))::numeric(19,0) END AS QTY_MTH21,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH22 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH22))::numeric(19,0) END AS QTY_MTH22,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH23 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH23))::numeric(19,0) END AS QTY_MTH23,
        CASE WHEN (EXT_PCS_DDD_RETAIL_src.QTY_MTH24 = ''::varchar) THEN NULL::numeric(19,0) ELSE (btrim(EXT_PCS_DDD_RETAIL_src.QTY_MTH24))::numeric(19,0) END AS QTY_MTH24,
        btrim(EXT_PCS_DDD_RETAIL_src.OUTLET_CITY) AS OUTLET_CITY,
        btrim(EXT_PCS_DDD_RETAIL_src.OUTLET_STATE) AS OUTLET_STATE,
        EXT_PCS_DDD_RETAIL_src.batch_id,
        EXT_PCS_DDD_RETAIL_src.row_id,
        EXT_PCS_DDD_RETAIL_src.update_ts
 FROM teva_ingestion.EXT_PCS_DDD_RETAIL_src
 WHERE (EXT_PCS_DDD_RETAIL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_PCS_DDD_RETAIL'::varchar(18))));

CREATE  VIEW teva_ingestion.EXT_PRIME_RX AS
 SELECT btrim(EXT_PRIME_RX_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_PRIME_RX_src.MD_LAST_NAME) AS MD_LAST_NAME,
        btrim(EXT_PRIME_RX_src.MD_FIRST_NAME) AS MD_FIRST_NAME,
        btrim(EXT_PRIME_RX_src.PRESCRIBER_NPI) AS PRESCRIBER_NPI,
        btrim(EXT_PRIME_RX_src.MD_ADDR1) AS MD_ADDR1,
        btrim(EXT_PRIME_RX_src.MD_ADDR2) AS MD_ADDR2,
        btrim(EXT_PRIME_RX_src.MD_CITY) AS MD_CITY,
        btrim(EXT_PRIME_RX_src.MD_STATE) AS MD_STATE,
        btrim(EXT_PRIME_RX_src.MD_ZIP) AS MD_ZIP,
        btrim(EXT_PRIME_RX_src.MD_PHONE) AS MD_PHONE,
        btrim(EXT_PRIME_RX_src.SHIP_DATE) AS SHIP_DATE,
        btrim(EXT_PRIME_RX_src.NDC_NUMBER) AS NDC_NUMBER,
        btrim(EXT_PRIME_RX_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_PRIME_RX_src.FILL_NUMBER = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_PRIME_RX_src.FILL_NUMBER))::numeric(37,15) END AS FILL_NUMBER,
        CASE WHEN (EXT_PRIME_RX_src.QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_PRIME_RX_src.QTY))::numeric(37,15) END AS QTY,
        EXT_PRIME_RX_src.batch_id,
        EXT_PRIME_RX_src.row_id,
        EXT_PRIME_RX_src.update_ts
 FROM teva_ingestion.EXT_PRIME_RX_src
 WHERE (EXT_PRIME_RX_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_PRIME_RX'::varchar(12))));

CREATE  VIEW teva_ingestion.EXT_REMS_FACILITY AS
 SELECT CASE WHEN (EXT_REMS_FACILITY_src.PROGRAM_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_REMS_FACILITY_src.PROGRAM_ID))::numeric(37,15) END AS PROGRAM_ID,
        btrim(EXT_REMS_FACILITY_src.PROGRAM_NAME) AS PROGRAM_NAME,
        btrim(EXT_REMS_FACILITY_src.CHANNEL_INITIATED) AS CHANNEL_INITIATED,
        btrim(EXT_REMS_FACILITY_src.ENROLLMENT_ID) AS ENROLLMENT_ID,
        btrim(EXT_REMS_FACILITY_src.HEALTHCARE_FACILITY_TYPE) AS HEALTHCARE_FACILITY_TYPE,
        btrim(EXT_REMS_FACILITY_src.SITE_NAME) AS SITE_NAME,
        btrim(EXT_REMS_FACILITY_src.ADDRESS_1) AS ADDRESS_1,
        btrim(EXT_REMS_FACILITY_src.ADDRESS_2) AS ADDRESS_2,
        btrim(EXT_REMS_FACILITY_src.CITY) AS CITY,
        btrim(EXT_REMS_FACILITY_src.STATE) AS STATE,
        btrim(EXT_REMS_FACILITY_src.ZIP_CODE) AS ZIP_CODE,
        btrim(EXT_REMS_FACILITY_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_REMS_FACILITY_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(EXT_REMS_FACILITY_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_REMS_FACILITY_src.STATUS_DESCRIPTION) AS STATUS_DESCRIPTION,
        btrim(EXT_REMS_FACILITY_src.IN_PROGRESS_STEP) AS IN_PROGRESS_STEP,
        btrim(EXT_REMS_FACILITY_src.PHONE_NUMBER) AS PHONE_NUMBER,
        btrim(EXT_REMS_FACILITY_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(EXT_REMS_FACILITY_src.EXPIRATION_DATE) AS EXPIRATION_DATE,
        btrim(EXT_REMS_FACILITY_src.NCPDP) AS NCPDP,
        btrim(EXT_REMS_FACILITY_src.NPI) AS NPI,
        btrim(EXT_REMS_FACILITY_src.DEA) AS DEA,
        btrim(EXT_REMS_FACILITY_src.OBSOLESCENCE_DATE) AS OBSOLESCENCE_DATE,
        btrim(EXT_REMS_FACILITY_src.OBSOLESCENCE_REASON) AS OBSOLESCENCE_REASON,
        EXT_REMS_FACILITY_src.batch_id,
        EXT_REMS_FACILITY_src.row_id,
        EXT_REMS_FACILITY_src.update_ts
 FROM teva_ingestion.EXT_REMS_FACILITY_src
 WHERE (EXT_REMS_FACILITY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_REMS_FACILITY'::varchar(17))));

CREATE  VIEW teva_ingestion.EXT_REMS_PHARMACY AS
 SELECT CASE WHEN (EXT_REMS_PHARMACY_src.PROGRAM_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_REMS_PHARMACY_src.PROGRAM_ID))::numeric(37,15) END AS PROGRAM_ID,
        btrim(EXT_REMS_PHARMACY_src.PROGRAM_NAME) AS PROGRAM_NAME,
        btrim(EXT_REMS_PHARMACY_src.CHANNEL) AS CHANNEL,
        btrim(EXT_REMS_PHARMACY_src.ENROLLMENT_ID) AS ENROLLMENT_ID,
        btrim(EXT_REMS_PHARMACY_src.PHARMACY_TYPE) AS PHARMACY_TYPE,
        btrim(EXT_REMS_PHARMACY_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_REMS_PHARMACY_src.ADDRESS1) AS ADDRESS1,
        btrim(EXT_REMS_PHARMACY_src.ADDRESS2) AS ADDRESS2,
        btrim(EXT_REMS_PHARMACY_src.CITY) AS CITY,
        btrim(EXT_REMS_PHARMACY_src.STATE) AS STATE,
        btrim(EXT_REMS_PHARMACY_src.ZIP) AS ZIP,
        btrim(EXT_REMS_PHARMACY_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_REMS_PHARMACY_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(EXT_REMS_PHARMACY_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_REMS_PHARMACY_src.STATUS) AS STATUS,
        btrim(EXT_REMS_PHARMACY_src.IN_PROGRESS_STEP) AS IN_PROGRESS_STEP,
        btrim(EXT_REMS_PHARMACY_src.PHONE) AS PHONE,
        btrim(EXT_REMS_PHARMACY_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(EXT_REMS_PHARMACY_src.EXPIRATION_DATE) AS EXPIRATION_DATE,
        btrim(EXT_REMS_PHARMACY_src.NCPDP) AS NCPDP,
        btrim(EXT_REMS_PHARMACY_src.NPI) AS NPI,
        btrim(EXT_REMS_PHARMACY_src.DEA_NUM) AS DEA_NUM,
        btrim(EXT_REMS_PHARMACY_src.LICENSE_NUMBER) AS LICENSE_NUMBER,
        btrim(EXT_REMS_PHARMACY_src.OBSOLESCENCE_DATE) AS OBSOLESCENCE_DATE,
        btrim(EXT_REMS_PHARMACY_src.OBSOLESCENCE_REASON) AS OBSOLESCENCE_REASON,
        EXT_REMS_PHARMACY_src.batch_id,
        EXT_REMS_PHARMACY_src.row_id,
        EXT_REMS_PHARMACY_src.update_ts
 FROM teva_ingestion.EXT_REMS_PHARMACY_src
 WHERE (EXT_REMS_PHARMACY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_REMS_PHARMACY'::varchar(17))));

CREATE  VIEW teva_ingestion.EXT_REMS_PRESCRIBER AS
 SELECT CASE WHEN (EXT_REMS_PRESCRIBER_src.PROGRAM_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_REMS_PRESCRIBER_src.PROGRAM_ID))::numeric(37,15) END AS PROGRAM_ID,
        btrim(EXT_REMS_PRESCRIBER_src.PROGRAM_NAME) AS PROGRAM_NAME,
        btrim(EXT_REMS_PRESCRIBER_src.CHANNEL) AS CHANNEL,
        btrim(EXT_REMS_PRESCRIBER_src.ENROLLMENT_ID) AS ENROLLMENT_ID,
        btrim(EXT_REMS_PRESCRIBER_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_REMS_PRESCRIBER_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(EXT_REMS_PRESCRIBER_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_REMS_PRESCRIBER_src.CREDENTIAL) AS CREDENTIAL,
        btrim(EXT_REMS_PRESCRIBER_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_REMS_PRESCRIBER_src.SITE_NAME) AS SITE_NAME,
        btrim(EXT_REMS_PRESCRIBER_src.ADDRESS1) AS ADDRESS1,
        btrim(EXT_REMS_PRESCRIBER_src.ADDRESS2) AS ADDRESS2,
        btrim(EXT_REMS_PRESCRIBER_src.CITY) AS CITY,
        btrim(EXT_REMS_PRESCRIBER_src.STATE) AS STATE,
        btrim(EXT_REMS_PRESCRIBER_src.ZIP) AS ZIP,
        btrim(EXT_REMS_PRESCRIBER_src.STATUS) AS STATUS,
        btrim(EXT_REMS_PRESCRIBER_src.IN_PROGRESS_STEP) AS IN_PROGRESS_STEP,
        btrim(EXT_REMS_PRESCRIBER_src.PHONE) AS PHONE,
        btrim(EXT_REMS_PRESCRIBER_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(EXT_REMS_PRESCRIBER_src.EXPIRATION_DATE) AS EXPIRATION_DATE,
        btrim(EXT_REMS_PRESCRIBER_src.NPI) AS NPI,
        btrim(EXT_REMS_PRESCRIBER_src.DEA_NUM) AS DEA_NUM,
        btrim(EXT_REMS_PRESCRIBER_src.OBSOLESCENCE_DATE) AS OBSOLESCENCE_DATE,
        btrim(EXT_REMS_PRESCRIBER_src.OBSOLESCENCE_REASON) AS OBSOLESCENCE_REASON,
        CASE WHEN (EXT_REMS_PRESCRIBER_src.PPAF_COUNT = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_REMS_PRESCRIBER_src.PPAF_COUNT))::numeric(37,15) END AS PPAF_COUNT,
        EXT_REMS_PRESCRIBER_src.batch_id,
        EXT_REMS_PRESCRIBER_src.row_id,
        EXT_REMS_PRESCRIBER_src.update_ts
 FROM teva_ingestion.EXT_REMS_PRESCRIBER_src
 WHERE (EXT_REMS_PRESCRIBER_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_REMS_PRESCRIBER'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_SPECIALTY_PHARMACY_CM_LKUP AS
 SELECT btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.SOURCE_KEY) AS SOURCE_KEY,
        btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.SOURCE_NAME) AS SOURCE_NAME,
        btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.FILE_NAME) AS FILE_NAME,
        btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.ROWID_OBJECT_MATCHED) AS ROWID_OBJECT_MATCHED,
        CASE WHEN (EXT_SPECIALTY_PHARMACY_CM_LKUP_src.RULE_NO = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.RULE_NO))::numeric(37,15) END AS RULE_NO,
        btrim((EXT_SPECIALTY_PHARMACY_CM_LKUP_src.ROWID_MATCH_RULE)::varchar(14)) AS ROWID_MATCH_RULE,
        CASE WHEN (EXT_SPECIALTY_PHARMACY_CM_LKUP_src.AUTOMERGE_IND = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.AUTOMERGE_IND))::numeric(37,15) END AS AUTOMERGE_IND,
        btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.CREATOR) AS CREATOR,
        btrim(EXT_SPECIALTY_PHARMACY_CM_LKUP_src.CREATE_DATE) AS CREATE_DATE,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.batch_id,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.row_id,
        EXT_SPECIALTY_PHARMACY_CM_LKUP_src.update_ts
 FROM teva_ingestion.EXT_SPECIALTY_PHARMACY_CM_LKUP_src
 WHERE (EXT_SPECIALTY_PHARMACY_CM_LKUP_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_SPECIALTY_PHARMACY_CM_LKUP'::varchar(30))));

CREATE  VIEW teva_ingestion.EXT_SPECIALTY_PHARMACY_LOOKUPS AS
 SELECT btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.SOURCE_ID) AS SOURCE_ID,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.NPI) AS NPI,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.ADDRESS1) AS ADDRESS1,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.ADDRESS2) AS ADDRESS2,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.CITY) AS CITY,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.STATE) AS STATE,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.ZIP) AS ZIP,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.IMS_ID) AS IMS_ID,
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src."MATCH") AS "MATCH",
        btrim(EXT_SPECIALTY_PHARMACY_LOOKUPS_src.HCE_ID) AS HCE_ID,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.batch_id,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.row_id,
        EXT_SPECIALTY_PHARMACY_LOOKUPS_src.update_ts
 FROM teva_ingestion.EXT_SPECIALTY_PHARMACY_LOOKUPS_src
 WHERE (EXT_SPECIALTY_PHARMACY_LOOKUPS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_SPECIALTY_PHARMACY_LOOKUPS'::varchar(30))));

CREATE  VIEW teva_ingestion.EXT_TB_CB_TRANSACTIONS AS
 SELECT btrim(EXT_TB_CB_TRANSACTIONS_src.ACCOUNT_ID) AS ACCOUNT_ID,
        btrim(EXT_TB_CB_TRANSACTIONS_src.LOCATION_ID) AS LOCATION_ID,
        btrim(EXT_TB_CB_TRANSACTIONS_src.SHIPMENT_DATE) AS SHIPMENT_DATE,
        btrim(EXT_TB_CB_TRANSACTIONS_src.NDC_CODE) AS NDC_CODE,
        btrim(EXT_TB_CB_TRANSACTIONS_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_TB_CB_TRANSACTIONS_src.CONTRACT_ID) AS CONTRACT_ID,
        CASE WHEN (EXT_TB_CB_TRANSACTIONS_src.CHARGEBACK_UNITS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TB_CB_TRANSACTIONS_src.CHARGEBACK_UNITS))::numeric(37,15) END AS CHARGEBACK_UNITS,
        CASE WHEN (EXT_TB_CB_TRANSACTIONS_src.CHARGEBACK_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TB_CB_TRANSACTIONS_src.CHARGEBACK_DOLLARS))::numeric(37,15) END AS CHARGEBACK_DOLLARS,
        btrim(EXT_TB_CB_TRANSACTIONS_src.RECEIPT_DATE) AS RECEIPT_DATE,
        btrim(EXT_TB_CB_TRANSACTIONS_src.DEBIT_MEMO_NUM) AS DEBIT_MEMO_NUM,
        btrim(EXT_TB_CB_TRANSACTIONS_src.CREDIT_MEMO_DATE) AS CREDIT_MEMO_DATE,
        btrim(EXT_TB_CB_TRANSACTIONS_src.CREDIT_MEMO_NUM) AS CREDIT_MEMO_NUM,
        btrim(EXT_TB_CB_TRANSACTIONS_src.SETTLEMENT_DATE) AS SETTLEMENT_DATE,
        CASE WHEN (EXT_TB_CB_TRANSACTIONS_src.CONTRACT_PRICE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TB_CB_TRANSACTIONS_src.CONTRACT_PRICE))::numeric(37,15) END AS CONTRACT_PRICE,
        EXT_TB_CB_TRANSACTIONS_src.batch_id,
        EXT_TB_CB_TRANSACTIONS_src.row_id,
        EXT_TB_CB_TRANSACTIONS_src.update_ts
 FROM teva_ingestion.EXT_TB_CB_TRANSACTIONS_src
 WHERE (EXT_TB_CB_TRANSACTIONS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TB_CB_TRANSACTIONS'::varchar(22))));

CREATE  VIEW teva_ingestion.EXT_TB_DS_ACCOUNTS AS
 SELECT btrim(EXT_TB_DS_ACCOUNTS_src.ACCOUNT_ID) AS ACCOUNT_ID,
        btrim(EXT_TB_DS_ACCOUNTS_src.LOCATION_ID) AS LOCATION_ID,
        btrim(EXT_TB_DS_ACCOUNTS_src.ACCOUNT_NAME) AS ACCOUNT_NAME,
        btrim(EXT_TB_DS_ACCOUNTS_src.ACCOUNT_CLASS) AS ACCOUNT_CLASS,
        btrim(EXT_TB_DS_ACCOUNTS_src.ADDRESS_1) AS ADDRESS_1,
        btrim(EXT_TB_DS_ACCOUNTS_src.ADDRESS_2) AS ADDRESS_2,
        btrim(EXT_TB_DS_ACCOUNTS_src.CITY) AS CITY,
        btrim(EXT_TB_DS_ACCOUNTS_src.STATE) AS STATE,
        btrim(EXT_TB_DS_ACCOUNTS_src.ZIP) AS ZIP,
        EXT_TB_DS_ACCOUNTS_src.batch_id,
        EXT_TB_DS_ACCOUNTS_src.row_id,
        EXT_TB_DS_ACCOUNTS_src.update_ts
 FROM teva_ingestion.EXT_TB_DS_ACCOUNTS_src
 WHERE (EXT_TB_DS_ACCOUNTS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TB_DS_ACCOUNTS'::varchar(18))));

CREATE  VIEW teva_ingestion.EXT_TB_DS_TRANSACTIONS AS
 SELECT btrim(EXT_TB_DS_TRANSACTIONS_src.ACCOUNT_ID) AS ACCOUNT_ID,
        btrim(EXT_TB_DS_TRANSACTIONS_src.LOCATION_ID) AS LOCATION_ID,
        btrim(EXT_TB_DS_TRANSACTIONS_src.SHIPMENT_DATE) AS SHIPMENT_DATE,
        btrim(EXT_TB_DS_TRANSACTIONS_src.NDC_CODE) AS NDC_CODE,
        btrim(EXT_TB_DS_TRANSACTIONS_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_TB_DS_TRANSACTIONS_src.TRANSACTION_TYPE) AS TRANSACTION_TYPE,
        CASE WHEN (EXT_TB_DS_TRANSACTIONS_src.DIRECT_SALES_UNITS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TB_DS_TRANSACTIONS_src.DIRECT_SALES_UNITS))::numeric(37,15) END AS DIRECT_SALES_UNITS,
        CASE WHEN (EXT_TB_DS_TRANSACTIONS_src.DIRECT_SALES_DOLLARS = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TB_DS_TRANSACTIONS_src.DIRECT_SALES_DOLLARS))::numeric(37,15) END AS DIRECT_SALES_DOLLARS,
        EXT_TB_DS_TRANSACTIONS_src.batch_id,
        EXT_TB_DS_TRANSACTIONS_src.row_id,
        EXT_TB_DS_TRANSACTIONS_src.update_ts
 FROM teva_ingestion.EXT_TB_DS_TRANSACTIONS_src
 WHERE (EXT_TB_DS_TRANSACTIONS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TB_DS_TRANSACTIONS'::varchar(22))));

CREATE  VIEW teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C AS
 SELECT btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.DATE_VOD__C) AS DATE_VOD__C,
        CASE WHEN (EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_OFF_VOD__C = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_OFF_VOD__C))::numeric(3,0) END AS HOURS_OFF_VOD__C,
        CASE WHEN (EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_VOD__C = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.HOURS_VOD__C))::numeric(3,0) END AS HOURS_VOD__C,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.ID) AS ID,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTACTIVITYDATE) AS LASTACTIVITYDATE,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.NAME) AS NAME,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.OWNERID) AS OWNERID,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.REASON_VOD__C) AS REASON_VOD__C,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.START_TIME_VOD__C) AS START_TIME_VOD__C,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.STATUS_VOD__C) AS STATUS_VOD__C,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.TERRITORY_VOD__C) AS TERRITORY_VOD__C,
        btrim(EXT_TIME_OFF_TERRITORY_VOD__C_src.TIME_VOD__C) AS TIME_VOD__C,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.batch_id,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.row_id,
        EXT_TIME_OFF_TERRITORY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_TIME_OFF_TERRITORY_VOD__C_src
 WHERE (EXT_TIME_OFF_TERRITORY_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TIME_OFF_TERRITORY_VOD__C'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_TOUCHPOINT_CALL AS
 SELECT CASE WHEN (EXT_TOUCHPOINT_CALL_src.CALL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_CALL_src.CALL_ID))::numeric(37,15) END AS CALL_ID,
        CASE WHEN (EXT_TOUCHPOINT_CALL_src.CALL_ATTEMPT_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_CALL_src.CALL_ATTEMPT_ID))::numeric(37,15) END AS CALL_ATTEMPT_ID,
        CASE WHEN (EXT_TOUCHPOINT_CALL_src.TOUCHPOINT_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_CALL_src.TOUCHPOINT_ID))::numeric(37,15) END AS TOUCHPOINT_ID,
        btrim(EXT_TOUCHPOINT_CALL_src.CLIENT_ID) AS CLIENT_ID,
        btrim(EXT_TOUCHPOINT_CALL_src.IMS_ID) AS IMS_ID,
        btrim(EXT_TOUCHPOINT_CALL_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_TOUCHPOINT_CALL_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_TOUCHPOINT_CALL_src.CALL_TYPE) AS CALL_TYPE,
        CASE WHEN (EXT_TOUCHPOINT_CALL_src.CALL_DATE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_CALL_src.CALL_DATE))::numeric(37,15) END AS CALL_DATE,
        btrim(EXT_TOUCHPOINT_CALL_src.STATUS_CODE) AS STATUS_CODE,
        btrim(EXT_TOUCHPOINT_CALL_src.STATUS_DESCRIPTION) AS STATUS_DESCRIPTION,
        CASE WHEN (EXT_TOUCHPOINT_CALL_src.REP_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_CALL_src.REP_ID))::numeric(37,15) END AS REP_ID,
        btrim(EXT_TOUCHPOINT_CALL_src.REP_FIRST_NAME) AS REP_FIRST_NAME,
        btrim(EXT_TOUCHPOINT_CALL_src.REP_LAST_NAME) AS REP_LAST_NAME,
        EXT_TOUCHPOINT_CALL_src.batch_id,
        EXT_TOUCHPOINT_CALL_src.row_id,
        EXT_TOUCHPOINT_CALL_src.update_ts
 FROM teva_ingestion.EXT_TOUCHPOINT_CALL_src
 WHERE (EXT_TOUCHPOINT_CALL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TOUCHPOINT_CALL'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_TOUCHPOINT_PRESENTATION AS
 SELECT CASE WHEN (EXT_TOUCHPOINT_PRESENTATION_src.CALL_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_PRESENTATION_src.CALL_ID))::numeric(37,15) END AS CALL_ID,
        CASE WHEN (EXT_TOUCHPOINT_PRESENTATION_src.CALL_ATTEMPT_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_PRESENTATION_src.CALL_ATTEMPT_ID))::numeric(37,15) END AS CALL_ATTEMPT_ID,
        CASE WHEN (EXT_TOUCHPOINT_PRESENTATION_src.PRESENTATION_ID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_PRESENTATION_src.PRESENTATION_ID))::numeric(37,15) END AS PRESENTATION_ID,
        btrim(EXT_TOUCHPOINT_PRESENTATION_src.PRODUCT) AS PRODUCT,
        CASE WHEN (EXT_TOUCHPOINT_PRESENTATION_src."POSITION" = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_PRESENTATION_src."POSITION"))::numeric(37,15) END AS "POSITION",
        btrim(EXT_TOUCHPOINT_PRESENTATION_src.ITEM_TYPE) AS ITEM_TYPE,
        btrim(EXT_TOUCHPOINT_PRESENTATION_src.ITEM_DESCRIPTION) AS ITEM_DESCRIPTION,
        CASE WHEN (EXT_TOUCHPOINT_PRESENTATION_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TOUCHPOINT_PRESENTATION_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        EXT_TOUCHPOINT_PRESENTATION_src.batch_id,
        EXT_TOUCHPOINT_PRESENTATION_src.row_id,
        EXT_TOUCHPOINT_PRESENTATION_src.update_ts
 FROM teva_ingestion.EXT_TOUCHPOINT_PRESENTATION_src
 WHERE (EXT_TOUCHPOINT_PRESENTATION_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TOUCHPOINT_PRESENTATION'::varchar(27))));

CREATE  VIEW teva_ingestion.ext_tw_biologics_sales AS
 SELECT btrim(EXT_TW_BIOLOGICS_SALES_src.MRN) AS MRN,
        btrim(EXT_TW_BIOLOGICS_SALES_src.ORDER_NO) AS ORDER_NO,
        btrim(EXT_TW_BIOLOGICS_SALES_src.REFERRAL_DATE) AS REFERRAL_DATE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.REFERRAL_SOURCE) AS REFERRAL_SOURCE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.REFERRAL_METHOD) AS REFERRAL_METHOD,
        btrim(EXT_TW_BIOLOGICS_SALES_src.REFERRAL_TYPE) AS REFERRAL_TYPE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PATIENT_AUTH) AS PATIENT_AUTH,
        btrim(EXT_TW_BIOLOGICS_SALES_src.STATUS) AS STATUS,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PLACEMENT_DATE) AS PLACEMENT_DATE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.BILLING_METHOD) AS BILLING_METHOD,
        btrim(EXT_TW_BIOLOGICS_SALES_src.ICD_9) AS ICD_9,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_FIRST_NAME) AS PHY_FIRST_NAME,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_LAST_NAME) AS PHY_LAST_NAME,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PRACTICE_NAME) AS PRACTICE_NAME,
        btrim(EXT_TW_BIOLOGICS_SALES_src.NPI) AS NPI,
        btrim(EXT_TW_BIOLOGICS_SALES_src.TAX_ID) AS TAX_ID,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_NETWORK_STATUS) AS PHY_NETWORK_STATUS,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_STREET) AS PHY_STREET,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_CITY) AS PHY_CITY,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_STATE) AS PHY_STATE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_ZIP) AS PHY_ZIP,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_PHONE) AS PHY_PHONE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHY_FAX) AS PHY_FAX,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PAYOR) AS PAYOR,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PAYOR_TYPE) AS PAYOR_TYPE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PAYOR_PHONE) AS PAYOR_PHONE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PAYOR_CONTACT) AS PAYOR_CONTACT,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PAYOR_REFERENCE) AS PAYOR_REFERENCE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.BENEFIT_TYPE) AS BENEFIT_TYPE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PAYOR_RANK) AS PAYOR_RANK,
        btrim(EXT_TW_BIOLOGICS_SALES_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.DEDUCTIBLE) AS DEDUCTIBLE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.DEDUCTIBLE_MET) AS DEDUCTIBLE_MET,
        btrim(EXT_TW_BIOLOGICS_SALES_src.AMOUNT_MET) AS AMOUNT_MET,
        btrim(EXT_TW_BIOLOGICS_SALES_src.OOP_MAX) AS OOP_MAX,
        btrim(EXT_TW_BIOLOGICS_SALES_src.OOP_MET) AS OOP_MET,
        btrim(EXT_TW_BIOLOGICS_SALES_src.LIFETIME_MAX) AS LIFETIME_MAX,
        btrim(EXT_TW_BIOLOGICS_SALES_src.ANNUAL_BENEFIT_CAP) AS ANNUAL_BENEFIT_CAP,
        btrim(EXT_TW_BIOLOGICS_SALES_src.LIMITATIONS_RESTRICTIONS) AS LIMITATIONS_RESTRICTIONS,
        btrim(EXT_TW_BIOLOGICS_SALES_src.ASSIGNMENT_ALLOWED) AS ASSIGNMENT_ALLOWED,
        btrim(EXT_TW_BIOLOGICS_SALES_src.CO_INSURANCE) AS CO_INSURANCE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.COPAY) AS COPAY,
        btrim(EXT_TW_BIOLOGICS_SALES_src.OFFICE_VISIT_COPAY) AS OFFICE_VISIT_COPAY,
        btrim(EXT_TW_BIOLOGICS_SALES_src.FOLLOW_UP_COVERAGE) AS FOLLOW_UP_COVERAGE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.FOLLOW_UP_COPAY) AS FOLLOW_UP_COPAY,
        btrim(EXT_TW_BIOLOGICS_SALES_src.J7300_COVERAGE_STATUS) AS J7300_COVERAGE_STATUS,
        btrim(EXT_TW_BIOLOGICS_SALES_src.J7300_COVERAGE_TYPE) AS J7300_COVERAGE_TYPE,
        btrim(EXT_TW_BIOLOGICS_SALES_src."58300_COVERAGE_STATUS") AS "58300_COVERAGE_STATUS",
        btrim(EXT_TW_BIOLOGICS_SALES_src."58300_COVERAGE_TYPE") AS "58300_COVERAGE_TYPE",
        btrim(EXT_TW_BIOLOGICS_SALES_src.PA_REQUIRED) AS PA_REQUIRED,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PA_TYPE) AS PA_TYPE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PA_CONTACT) AS PA_CONTACT,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PA_PHONE) AS PA_PHONE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PA_FAX) AS PA_FAX,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PA_TAT) AS PA_TAT,
        btrim(EXT_TW_BIOLOGICS_SALES_src.J7300_REIMBURSEMENT) AS J7300_REIMBURSEMENT,
        btrim(EXT_TW_BIOLOGICS_SALES_src."58300_INSERTION") AS "58300_INSERTION",
        btrim(EXT_TW_BIOLOGICS_SALES_src.PBM) AS PBM,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PBM_PHONE) AS PBM_PHONE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PREFERRED_PHARMACY) AS PREFERRED_PHARMACY,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHARMACY_PHONE) AS PHARMACY_PHONE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PHARMACY_FAX) AS PHARMACY_FAX,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SP_COPAY) AS SP_COPAY,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SP_NAME) AS SP_NAME,
        btrim(EXT_TW_BIOLOGICS_SALES_src.TRIAGE_DATE) AS TRIAGE_DATE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.INVOICE_NUMBER) AS INVOICE_NUMBER,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SP_SHIP_DATE) AS SP_SHIP_DATE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_NAME) AS SHIP_TO_NAME,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_ADDRESS_1) AS SHIP_TO_ADDRESS_1,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_ADDRESS_2) AS SHIP_TO_ADDRESS_2,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_CITY) AS SHIP_TO_CITY,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_STATE) AS SHIP_TO_STATE,
        btrim(EXT_TW_BIOLOGICS_SALES_src.SHIP_TO_ZIP) AS SHIP_TO_ZIP,
        btrim(EXT_TW_BIOLOGICS_SALES_src.CALL_DATE_1) AS CALL_DATE_1,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PT_REACHED_1) AS PT_REACHED_1,
        btrim(EXT_TW_BIOLOGICS_SALES_src.WHO_WAS_REACHED_1) AS WHO_WAS_REACHED_1,
        btrim(EXT_TW_BIOLOGICS_SALES_src.CALL_DATE_2) AS CALL_DATE_2,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PT_REACHED_2) AS PT_REACHED_2,
        btrim(EXT_TW_BIOLOGICS_SALES_src.WHO_WAS_REACHED_2) AS WHO_WAS_REACHED_2,
        btrim(EXT_TW_BIOLOGICS_SALES_src.CALL_DATE_3) AS CALL_DATE_3,
        btrim(EXT_TW_BIOLOGICS_SALES_src.PT_REACHED_3) AS PT_REACHED_3,
        btrim(EXT_TW_BIOLOGICS_SALES_src.WHO_WAS_REACHED_3) AS WHO_WAS_REACHED_3,
        btrim(EXT_TW_BIOLOGICS_SALES_src.KEEPING_APPT) AS KEEPING_APPT,
        btrim(EXT_TW_BIOLOGICS_SALES_src.ALTERNATE_METHOD) AS ALTERNATE_METHOD,
        btrim(EXT_TW_BIOLOGICS_SALES_src.ADDITIONAL_QUESTIONS) AS ADDITIONAL_QUESTIONS,
        btrim(EXT_TW_BIOLOGICS_SALES_src.TRANSFERRED) AS TRANSFERRED,
        btrim(EXT_TW_BIOLOGICS_SALES_src.TRANSFER_DESTINATION) AS TRANSFER_DESTINATION,
        btrim(EXT_TW_BIOLOGICS_SALES_src.DISCHARGE_REASON) AS DISCHARGE_REASON,
        EXT_TW_BIOLOGICS_SALES_src.batch_id,
        EXT_TW_BIOLOGICS_SALES_src.row_id,
        EXT_TW_BIOLOGICS_SALES_src.update_ts
 FROM teva_ingestion.EXT_TW_BIOLOGICS_SALES_src
 WHERE (EXT_TW_BIOLOGICS_SALES_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TW_BIOLOGICS_SALES'::varchar(22))));

CREATE  VIEW teva_ingestion.ext_tw_hd_smith_sales AS
 SELECT btrim(EXT_TW_HD_SMITH_SALES_src.MONTH) AS MONTH,
        btrim(EXT_TW_HD_SMITH_SALES_src.ORDER_DATE) AS ORDER_DATE,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_DATE) AS SHIP_DATE,
        btrim(EXT_TW_HD_SMITH_SALES_src.ORDER_NUM) AS ORDER_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.INVOICE_NUM) AS INVOICE_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.ORDER_TYPE) AS ORDER_TYPE,
        btrim(EXT_TW_HD_SMITH_SALES_src.ORDER_CATEGORY) AS ORDER_CATEGORY,
        btrim(EXT_TW_HD_SMITH_SALES_src.RETURN_FLAG) AS RETURN_FLAG,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_TO_CUSTOMER_NUM) AS SHIP_TO_CUSTOMER_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_TO_CUSTOMER_NAME) AS SHIP_TO_CUSTOMER_NAME,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_TO_ADDRESS_1) AS SHIP_TO_ADDRESS_1,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_TO_ADDRESS_2) AS SHIP_TO_ADDRESS_2,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_TO_CITY) AS SHIP_TO_CITY,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_TO_STATE) AS SHIP_TO_STATE,
        btrim(EXT_TW_HD_SMITH_SALES_src.SHIP_TO_ZIP) AS SHIP_TO_ZIP,
        btrim(EXT_TW_HD_SMITH_SALES_src.BILL_TO_CUSTOMER_NUM) AS BILL_TO_CUSTOMER_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.BILL_TO_CUSTOMER_NAME) AS BILL_TO_CUSTOMER_NAME,
        btrim(EXT_TW_HD_SMITH_SALES_src.BILL_TO_ADDRESS_1) AS BILL_TO_ADDRESS_1,
        btrim(EXT_TW_HD_SMITH_SALES_src.BILL_TO_ADDRESS_2) AS BILL_TO_ADDRESS_2,
        btrim(EXT_TW_HD_SMITH_SALES_src.BILL_TO_CITY) AS BILL_TO_CITY,
        btrim(EXT_TW_HD_SMITH_SALES_src.BILL_TO_STATE) AS BILL_TO_STATE,
        btrim(EXT_TW_HD_SMITH_SALES_src.BILL_TO_ZIP) AS BILL_TO_ZIP,
        btrim(EXT_TW_HD_SMITH_SALES_src.CLASS_OF_TRADE) AS CLASS_OF_TRADE,
        btrim(EXT_TW_HD_SMITH_SALES_src.CUSTOMER_DEA_NUM) AS CUSTOMER_DEA_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.CUSTOMER_340B_NUM) AS CUSTOMER_340B_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.HEALTH_INDUSTRY_NUM) AS HEALTH_INDUSTRY_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.STATE_LICENSE_NUM) AS STATE_LICENSE_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.PLANT) AS PLANT,
        btrim(EXT_TW_HD_SMITH_SALES_src.VENDOR) AS VENDOR,
        btrim(EXT_TW_HD_SMITH_SALES_src.MATERIAL_NUM) AS MATERIAL_NUM,
        btrim(EXT_TW_HD_SMITH_SALES_src.MATERIAL_DESC) AS MATERIAL_DESC,
        CASE WHEN (EXT_TW_HD_SMITH_SALES_src.PACK_SIZE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TW_HD_SMITH_SALES_src.PACK_SIZE))::numeric(37,15) END AS PACK_SIZE,
        btrim(EXT_TW_HD_SMITH_SALES_src.NDC) AS NDC,
        btrim(EXT_TW_HD_SMITH_SALES_src.CONTRACT_NUM) AS CONTRACT_NUM,
        CASE WHEN (EXT_TW_HD_SMITH_SALES_src.QUANTITY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TW_HD_SMITH_SALES_src.QUANTITY))::numeric(37,15) END AS QUANTITY,
        CASE WHEN (EXT_TW_HD_SMITH_SALES_src.VALUE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_TW_HD_SMITH_SALES_src.VALUE))::numeric(37,15) END AS VALUE,
        EXT_TW_HD_SMITH_SALES_src.batch_id,
        EXT_TW_HD_SMITH_SALES_src.row_id,
        EXT_TW_HD_SMITH_SALES_src.update_ts
 FROM teva_ingestion.EXT_TW_HD_SMITH_SALES_src
 WHERE (EXT_TW_HD_SMITH_SALES_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TW_HD_SMITH_SALES'::varchar(21))));

CREATE  VIEW teva_ingestion.job_title_defs AS
 SELECT btrim(job_title_defs_src.JOB_CD) AS JOB_CD,
        btrim(job_title_defs_src.CD_DESC) AS CD_DESC,
        btrim(job_title_defs_src.ADP_JOB_CD) AS ADP_JOB_CD,
        CASE WHEN (job_title_defs_src.CRT_DT = ''::varchar) THEN NULL::date ELSE (btrim(job_title_defs_src.CRT_DT))::date END AS CRT_DT,
        btrim(job_title_defs_src.CRT_USER) AS CRT_USER,
        CASE WHEN (job_title_defs_src.UPD_DT = ''::varchar) THEN NULL::date ELSE (btrim(job_title_defs_src.UPD_DT))::date END AS UPD_DT,
        btrim(job_title_defs_src.UPD_USER) AS UPD_USER,
        CASE WHEN (job_title_defs_src.DISPLAY_SEQ = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(job_title_defs_src.DISPLAY_SEQ))::numeric(4,0) END AS DISPLAY_SEQ,
        btrim(job_title_defs_src.COMPANY_ID) AS COMPANY_ID,
        CASE WHEN (job_title_defs_src.EFF_DT = ''::varchar) THEN NULL::date ELSE (btrim(job_title_defs_src.EFF_DT))::date END AS EFF_DT,
        CASE WHEN (job_title_defs_src.EXP_DT = ''::varchar) THEN NULL::date ELSE (btrim(job_title_defs_src.EXP_DT))::date END AS EXP_DT,
        job_title_defs_src.batch_id,
        job_title_defs_src.row_id,
        job_title_defs_src.update_ts
 FROM teva_ingestion.job_title_defs_src
 WHERE (job_title_defs_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'JOB_TITLE_DEFS'::varchar(14))));

CREATE  VIEW teva_ingestion.people AS
 SELECT CASE WHEN (people_src.SYS_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_src.SYS_ID))::numeric(38,0) END AS SYS_ID,
        CASE WHEN (people_src.CRT_DT = ''::varchar) THEN NULL::date ELSE (btrim(people_src.CRT_DT))::date END AS CRT_DT,
        btrim(people_src.CRT_USER) AS CRT_USER,
        CASE WHEN (people_src.UPD_DT = ''::varchar) THEN NULL::date ELSE (btrim(people_src.UPD_DT))::date END AS UPD_DT,
        btrim(people_src.UPD_USER) AS UPD_USER,
        btrim(people_src.LAST_NAME) AS LAST_NAME,
        btrim(people_src.FIRST_NAME) AS FIRST_NAME,
        btrim(people_src.STAT_CD) AS STAT_CD,
        btrim(people_src.GENDER) AS GENDER,
        btrim(people_src.MID_NAME) AS MID_NAME,
        btrim(people_src.NAME_SUFFIX) AS NAME_SUFFIX,
        btrim(people_src.PRSN_TITLE) AS PRSN_TITLE,
        btrim(people_src.PROF_TITLE) AS PROF_TITLE,
        btrim(people_src.EMAIL) AS EMAIL,
        btrim(people_src.PREF_NAME) AS PREF_NAME,
        btrim(people_src.PREV_LAST_NAME) AS PREV_LAST_NAME,
        people_src.batch_id,
        people_src.row_id,
        people_src.update_ts
 FROM teva_ingestion.people_src
 WHERE (people_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'PEOPLE'::varchar(6))));

CREATE  VIEW teva_ingestion.people_addresses AS
 SELECT CASE WHEN (people_addresses_src.PRSN_SYS_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_addresses_src.PRSN_SYS_ID))::numeric(38,0) END AS PRSN_SYS_ID,
        CASE WHEN (people_addresses_src.ADDR_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_addresses_src.ADDR_ID))::numeric(38,0) END AS ADDR_ID,
        btrim(people_addresses_src.ATD_CD) AS ATD_CD,
        CASE WHEN (people_addresses_src.PRIORITY = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_addresses_src.PRIORITY))::numeric(38,0) END AS PRIORITY,
        btrim(people_addresses_src.MAIL_STOP) AS MAIL_STOP,
        CASE WHEN (people_addresses_src.EFF_DT = ''::varchar) THEN NULL::date ELSE (btrim(people_addresses_src.EFF_DT))::date END AS EFF_DT,
        CASE WHEN (people_addresses_src.END_DT = ''::varchar) THEN NULL::date ELSE (btrim(people_addresses_src.END_DT))::date END AS END_DT,
        people_addresses_src.batch_id,
        people_addresses_src.row_id,
        people_addresses_src.update_ts
 FROM teva_ingestion.people_addresses_src
 WHERE (people_addresses_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'PEOPLE_ADDRESSES'::varchar(16))));

CREATE  VIEW teva_ingestion.people_phones AS
 SELECT CASE WHEN (people_phones_src.PRSN_SYS_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_phones_src.PRSN_SYS_ID))::numeric(38,0) END AS PRSN_SYS_ID,
        CASE WHEN (people_phones_src.PHN_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_phones_src.PHN_ID))::numeric(38,0) END AS PHN_ID,
        btrim(people_phones_src.PTD_CD) AS PTD_CD,
        CASE WHEN (people_phones_src.PRIORITY = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_phones_src.PRIORITY))::numeric(38,0) END AS PRIORITY,
        CASE WHEN (people_phones_src.EXT = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_phones_src.EXT))::numeric(38,0) END AS EXT,
        CASE WHEN (people_phones_src.VMAIL = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_phones_src.VMAIL))::numeric(38,0) END AS VMAIL,
        CASE WHEN (people_phones_src.ADDR_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(people_phones_src.ADDR_ID))::numeric(38,0) END AS ADDR_ID,
        btrim(people_phones_src.PRVDR_CD) AS PRVDR_CD,
        people_phones_src.batch_id,
        people_phones_src.row_id,
        people_phones_src.update_ts
 FROM teva_ingestion.people_phones_src
 WHERE (people_phones_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'PEOPLE_PHONES'::varchar(13))));

CREATE  VIEW teva_ingestion.phones AS
 SELECT CASE WHEN (phones_src.PHN_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(phones_src.PHN_ID))::numeric(38,0) END AS PHN_ID,
        CASE WHEN (phones_src.CNTRY_DIAL_CD = ''::varchar) THEN NULL::numeric(3,0) ELSE (btrim(phones_src.CNTRY_DIAL_CD))::numeric(3,0) END AS CNTRY_DIAL_CD,
        btrim(phones_src.AREA_CD) AS AREA_CD,
        CASE WHEN (phones_src.PHN_NUMBER = ''::varchar) THEN NULL::numeric(20,0) ELSE (btrim(phones_src.PHN_NUMBER))::numeric(20,0) END AS PHN_NUMBER,
        btrim(phones_src.CRT_USER) AS CRT_USER,
        CASE WHEN (phones_src.CRT_DT = ''::varchar) THEN NULL::date ELSE (btrim(phones_src.CRT_DT))::date END AS CRT_DT,
        btrim(phones_src.UPD_USER) AS UPD_USER,
        CASE WHEN (phones_src.UPD_DT = ''::varchar) THEN NULL::date ELSE (btrim(phones_src.UPD_DT))::date END AS UPD_DT,
        phones_src.batch_id,
        phones_src.row_id,
        phones_src.update_ts
 FROM teva_ingestion.phones_src
 WHERE (phones_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'PHONES'::varchar(6))));

CREATE  VIEW teva_ingestion.territories AS
 SELECT btrim(territories_src.TERR_ID) AS TERR_ID,
        btrim(territories_src.NAME) AS NAME,
        btrim(territories_src.DESC_TEXT) AS DESC_TEXT,
        btrim(territories_src.COMPANY_CD) AS COMPANY_CD,
        btrim(territories_src.TERR_TYPE) AS TERR_TYPE,
        btrim(territories_src.TEAM) AS TEAM,
        btrim(territories_src.SAMPLE_DIST) AS SAMPLE_DIST,
        btrim(territories_src.COMMENTS) AS COMMENTS,
        btrim(territories_src.FLEET_ELIG) AS FLEET_ELIG,
        btrim(territories_src.REP_TYPE) AS REP_TYPE,
        territories_src.batch_id,
        territories_src.row_id,
        territories_src.update_ts
 FROM teva_ingestion.territories_src
 WHERE (territories_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'TERRITORIES'::varchar(11))));

CREATE  VIEW teva_ingestion.tvcmid_hco_demo AS
 SELECT CASE WHEN (tvcmid_hco_demo_src.TVCMID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(tvcmid_hco_demo_src.TVCMID))::numeric(38,0) END AS TVCMID,
        btrim(tvcmid_hco_demo_src.IMS_ORG_ID) AS IMS_ORG_ID,
        btrim(tvcmid_hco_demo_src.NPI) AS NPI,
        btrim(tvcmid_hco_demo_src.HIN) AS HIN,
        btrim(tvcmid_hco_demo_src.IMS_OUTLET_CODE) AS IMS_OUTLET_CODE,
        btrim(tvcmid_hco_demo_src.BUSINESS_NAME) AS BUSINESS_NAME,
        btrim(tvcmid_hco_demo_src.ADDRESS_LINE1) AS ADDRESS_LINE1,
        btrim(tvcmid_hco_demo_src.ADDRESS_LINE2) AS ADDRESS_LINE2,
        btrim(tvcmid_hco_demo_src.CITY) AS CITY,
        btrim(tvcmid_hco_demo_src.STATE) AS STATE,
        btrim(tvcmid_hco_demo_src.ZIP) AS ZIP,
        btrim((tvcmid_hco_demo_src.C_BO_HCE_ADDRESS__ADDRESS_ID)::varchar(14)) AS C_BO_HCE_ADDRESS__ADDRESS_ID,
        btrim(tvcmid_hco_demo_src.COT_CLASSIFICATION) AS COT_CLASSIFICATION,
        btrim(tvcmid_hco_demo_src.COT_FACILITY_TYPE) AS COT_FACILITY_TYPE,
        btrim(tvcmid_hco_demo_src.COT_SPECIALTY) AS COT_SPECIALTY,
        tvcmid_hco_demo_src.batch_id,
        tvcmid_hco_demo_src.row_id,
        tvcmid_hco_demo_src.update_ts
 FROM teva_ingestion.tvcmid_hco_demo_src
 WHERE (tvcmid_hco_demo_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'TVCMID_HCO_DEMO'::varchar(15))));

CREATE  VIEW teva_ingestion.tvcmid_merges AS
 SELECT CASE WHEN (tvcmid_merges_src.PREVIOUS_TVCMID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(tvcmid_merges_src.PREVIOUS_TVCMID))::numeric(38,0) END AS PREVIOUS_TVCMID,
        CASE WHEN (tvcmid_merges_src.CURRENT_TVCMID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(tvcmid_merges_src.CURRENT_TVCMID))::numeric(38,0) END AS CURRENT_TVCMID,
        btrim((tvcmid_merges_src.MERGE_CYCLE)::varchar(1)) AS MERGE_CYCLE,
        tvcmid_merges_src.batch_id,
        tvcmid_merges_src.row_id,
        tvcmid_merges_src.update_ts
 FROM teva_ingestion.tvcmid_merges_src
 WHERE (tvcmid_merges_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'TVCMID_MERGES'::varchar(13))));

CREATE  VIEW teva_ingestion.tvcmid_xref AS
 SELECT CASE WHEN (tvcmid_xref_src.TVCMID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(tvcmid_xref_src.TVCMID))::numeric(38,0) END AS TVCMID,
        btrim(tvcmid_xref_src.ID_NUM) AS ID_NUM,
        btrim(tvcmid_xref_src.ID_TYPE) AS ID_TYPE,
        btrim(tvcmid_xref_src.STATE) AS STATE,
        CASE WHEN (tvcmid_xref_src.EXPIRATION_DATE = ''::varchar) THEN NULL::date ELSE (btrim(tvcmid_xref_src.EXPIRATION_DATE))::date END AS EXPIRATION_DATE,
        tvcmid_xref_src.batch_id,
        tvcmid_xref_src.row_id,
        tvcmid_xref_src.update_ts
 FROM teva_ingestion.tvcmid_xref_src
 WHERE (tvcmid_xref_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'TVCMID_XREF'::varchar(11))));

CREATE  VIEW teva_ingestion.XX_SALES_LOA_MV AS
 SELECT btrim(XX_SALES_LOA_MV_src.FILE_NBR) AS FILE_NBR,
        btrim(XX_SALES_LOA_MV_src.NAME) AS NAME,
        btrim(XX_SALES_LOA_MV_src.JOB_TITLE) AS JOB_TITLE,
        btrim(XX_SALES_LOA_MV_src.COST_CENTER_NAME) AS COST_CENTER_NAME,
        btrim(XX_SALES_LOA_MV_src.DEPARTMENT) AS DEPARTMENT,
        btrim(XX_SALES_LOA_MV_src.EE_STATUS) AS EE_STATUS,
        btrim(XX_SALES_LOA_MV_src.LEAVE_DT) AS LEAVE_DT,
        btrim(XX_SALES_LOA_MV_src.RETURN_DT) AS RETURN_DT,
        CASE WHEN (XX_SALES_LOA_MV_src.LEAVE_DAYS = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(XX_SALES_LOA_MV_src.LEAVE_DAYS))::numeric(38,0) END AS LEAVE_DAYS,
        XX_SALES_LOA_MV_src.batch_id,
        XX_SALES_LOA_MV_src.row_id,
        XX_SALES_LOA_MV_src.update_ts
 FROM teva_ingestion.XX_SALES_LOA_MV_src
 WHERE (XX_SALES_LOA_MV_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'XX_SALES_LOA_MV'::varchar(15))));

CREATE  VIEW teva_ingestion.XX_SALES_MV AS
 SELECT btrim(XX_SALES_MV_src.FILE_NBR) AS FILE_NBR,
        btrim(XX_SALES_MV_src.NAME) AS NAME,
        btrim(XX_SALES_MV_src.JOB_TITLE) AS JOB_TITLE,
        btrim(XX_SALES_MV_src.COST_CENTER_NAME) AS COST_CENTER_NAME,
        btrim(XX_SALES_MV_src.DEPARTMENT) AS DEPARTMENT,
        btrim(XX_SALES_MV_src.JOB_ENTRY_DT) AS JOB_ENTRY_DT,
        btrim(XX_SALES_MV_src.MANAGER_LEVEL) AS MANAGER_LEVEL,
        btrim(XX_SALES_MV_src.EE_STATUS) AS EE_STATUS,
        btrim(XX_SALES_MV_src.WORK_LOCATION) AS WORK_LOCATION,
        btrim(XX_SALES_MV_src.WORK_LOCATION_NAME) AS WORK_LOCATION_NAME,
        btrim(XX_SALES_MV_src.ORIG_HIRE_DT) AS ORIG_HIRE_DT,
        btrim(XX_SALES_MV_src.SERVICE_DT) AS SERVICE_DT,
        btrim(XX_SALES_MV_src.REHIRE_DT) AS REHIRE_DT,
        btrim(XX_SALES_MV_src.TERMINATION_DT) AS TERMINATION_DT,
        btrim(XX_SALES_MV_src.DIRECT_MANAGER) AS DIRECT_MANAGER,
        btrim(XX_SALES_MV_src.HOME_ADDRESS_LINE1) AS HOME_ADDRESS_LINE1,
        btrim(XX_SALES_MV_src.HOME_ADDRESS_LINE2) AS HOME_ADDRESS_LINE2,
        btrim(XX_SALES_MV_src.HOME_CITY) AS HOME_CITY,
        btrim(XX_SALES_MV_src.HOME_STATE) AS HOME_STATE,
        btrim(XX_SALES_MV_src.HOME_POSTAL_CODE) AS HOME_POSTAL_CODE,
        btrim(XX_SALES_MV_src.HOME_PHONE) AS HOME_PHONE,
        btrim(XX_SALES_MV_src.CELL_PHONE) AS CELL_PHONE,
        btrim(XX_SALES_MV_src.EMAIL_ADDRESS) AS EMAIL_ADDRESS,
        XX_SALES_MV_src.batch_id,
        XX_SALES_MV_src.row_id,
        XX_SALES_MV_src.update_ts
 FROM teva_ingestion.XX_SALES_MV_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHK_CNT_M AS
SELECT CASE WHEN (EXT_IMS_MHK_CNT_M_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_M_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (EXT_IMS_MHK_CNT_M_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_M_src.ims_report_num))::int END AS ims_report_num, btrim(EXT_IMS_MHK_CNT_M_src.zip_other) AS zip_other, btrim(EXT_IMS_MHK_CNT_M_src.ims_id) AS ims_id, btrim(EXT_IMS_MHK_CNT_M_src.ndc) AS ndc, btrim(EXT_IMS_MHK_CNT_M_src.plan_id) AS plan_id, CASE WHEN (EXT_IMS_MHK_CNT_M_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_M_src.sales_category))::int END AS sales_category, btrim(EXT_IMS_MHK_CNT_M_src.rx_type) AS rx_type, CASE WHEN (EXT_IMS_MHK_CNT_M_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_M_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(EXT_IMS_MHK_CNT_M_src.filler_01) AS filler_01, btrim(EXT_IMS_MHK_CNT_M_src.me_num) AS me_num, btrim(EXT_IMS_MHK_CNT_M_src.last_name) AS last_name, btrim(EXT_IMS_MHK_CNT_M_src.first_name) AS first_name, btrim(EXT_IMS_MHK_CNT_M_src.middle_name) AS middle_name, btrim(EXT_IMS_MHK_CNT_M_src.address) AS address, btrim(EXT_IMS_MHK_CNT_M_src.city) AS city, btrim(EXT_IMS_MHK_CNT_M_src.state) AS state, btrim(EXT_IMS_MHK_CNT_M_src.zip) AS zip, btrim(EXT_IMS_MHK_CNT_M_src.specialty) AS specialty, btrim(EXT_IMS_MHK_CNT_M_src.plan_name) AS plan_name, btrim(EXT_IMS_MHK_CNT_M_src.ndc_description) AS ndc_description, btrim(EXT_IMS_MHK_CNT_M_src.data_date) AS data_date, CASE WHEN (EXT_IMS_MHK_CNT_M_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_M_src.bucket_count))::int END AS bucket_count, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (EXT_IMS_MHK_CNT_M_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (EXT_IMS_MHK_CNT_M_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_M_src.trx_024))::numeric(9,3) END AS trx_024, EXT_IMS_MHK_CNT_M_src.batch_id, EXT_IMS_MHK_CNT_M_src.row_id, EXT_IMS_MHK_CNT_M_src.update_ts FROM teva_ingestion.EXT_IMS_MHK_CNT_M_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHK_CNT_W AS
SELECT CASE WHEN (EXT_IMS_MHK_CNT_W_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_W_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (EXT_IMS_MHK_CNT_W_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_W_src.ims_report_num))::int END AS ims_report_num, btrim(EXT_IMS_MHK_CNT_W_src.zip_other) AS zip_other, btrim(EXT_IMS_MHK_CNT_W_src.ims_id) AS ims_id, btrim(EXT_IMS_MHK_CNT_W_src.ndc) AS ndc, btrim(EXT_IMS_MHK_CNT_W_src.plan_id) AS plan_id, CASE WHEN (EXT_IMS_MHK_CNT_W_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_W_src.sales_category))::int END AS sales_category, btrim(EXT_IMS_MHK_CNT_W_src.rx_type) AS rx_type, CASE WHEN (EXT_IMS_MHK_CNT_W_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_W_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(EXT_IMS_MHK_CNT_W_src.filler_01) AS filler_01, btrim(EXT_IMS_MHK_CNT_W_src.me_num) AS me_num, btrim(EXT_IMS_MHK_CNT_W_src.last_name) AS last_name, btrim(EXT_IMS_MHK_CNT_W_src.first_name) AS first_name, btrim(EXT_IMS_MHK_CNT_W_src.middle_name) AS middle_name, btrim(EXT_IMS_MHK_CNT_W_src.address) AS address, btrim(EXT_IMS_MHK_CNT_W_src.city) AS city, btrim(EXT_IMS_MHK_CNT_W_src.state) AS state, btrim(EXT_IMS_MHK_CNT_W_src.zip) AS zip, btrim(EXT_IMS_MHK_CNT_W_src.specialty) AS specialty, btrim(EXT_IMS_MHK_CNT_W_src.plan_name) AS plan_name, btrim(EXT_IMS_MHK_CNT_W_src.ndc_description) AS ndc_description, btrim(EXT_IMS_MHK_CNT_W_src.data_date) AS data_date, CASE WHEN (EXT_IMS_MHK_CNT_W_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_CNT_W_src.bucket_count))::int END AS bucket_count, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_025))::numeric(9,3) END AS nrx_025, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_026))::numeric(9,3) END AS nrx_026, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_027))::numeric(9,3) END AS nrx_027, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_028))::numeric(9,3) END AS nrx_028, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_029))::numeric(9,3) END AS nrx_029, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_030))::numeric(9,3) END AS nrx_030, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_031))::numeric(9,3) END AS nrx_031, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_032))::numeric(9,3) END AS nrx_032, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_033))::numeric(9,3) END AS nrx_033, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_034))::numeric(9,3) END AS nrx_034, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_035))::numeric(9,3) END AS nrx_035, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_036))::numeric(9,3) END AS nrx_036, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_037))::numeric(9,3) END AS nrx_037, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_038))::numeric(9,3) END AS nrx_038, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_039))::numeric(9,3) END AS nrx_039, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_040))::numeric(9,3) END AS nrx_040, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_041))::numeric(9,3) END AS nrx_041, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_042))::numeric(9,3) END AS nrx_042, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_043))::numeric(9,3) END AS nrx_043, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_044))::numeric(9,3) END AS nrx_044, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_045))::numeric(9,3) END AS nrx_045, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_046))::numeric(9,3) END AS nrx_046, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_047))::numeric(9,3) END AS nrx_047, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_048))::numeric(9,3) END AS nrx_048, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_049))::numeric(9,3) END AS nrx_049, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_050))::numeric(9,3) END AS nrx_050, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_051))::numeric(9,3) END AS nrx_051, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_052))::numeric(9,3) END AS nrx_052, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_053))::numeric(9,3) END AS nrx_053, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_054))::numeric(9,3) END AS nrx_054, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_055))::numeric(9,3) END AS nrx_055, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_056))::numeric(9,3) END AS nrx_056, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_057))::numeric(9,3) END AS nrx_057, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_058))::numeric(9,3) END AS nrx_058, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_059))::numeric(9,3) END AS nrx_059, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_060))::numeric(9,3) END AS nrx_060, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_061))::numeric(9,3) END AS nrx_061, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_062))::numeric(9,3) END AS nrx_062, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_063))::numeric(9,3) END AS nrx_063, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_064))::numeric(9,3) END AS nrx_064, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_065))::numeric(9,3) END AS nrx_065, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_066))::numeric(9,3) END AS nrx_066, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_067))::numeric(9,3) END AS nrx_067, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_068))::numeric(9,3) END AS nrx_068, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_069))::numeric(9,3) END AS nrx_069, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_070))::numeric(9,3) END AS nrx_070, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_071))::numeric(9,3) END AS nrx_071, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_072))::numeric(9,3) END AS nrx_072, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_073))::numeric(9,3) END AS nrx_073, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_074))::numeric(9,3) END AS nrx_074, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_075))::numeric(9,3) END AS nrx_075, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_076))::numeric(9,3) END AS nrx_076, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_077))::numeric(9,3) END AS nrx_077, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_078))::numeric(9,3) END AS nrx_078, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_079))::numeric(9,3) END AS nrx_079, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_080))::numeric(9,3) END AS nrx_080, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_081))::numeric(9,3) END AS nrx_081, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_082))::numeric(9,3) END AS nrx_082, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_083))::numeric(9,3) END AS nrx_083, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_084))::numeric(9,3) END AS nrx_084, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_085))::numeric(9,3) END AS nrx_085, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_086))::numeric(9,3) END AS nrx_086, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_087))::numeric(9,3) END AS nrx_087, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_088))::numeric(9,3) END AS nrx_088, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_089))::numeric(9,3) END AS nrx_089, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_090))::numeric(9,3) END AS nrx_090, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_091))::numeric(9,3) END AS nrx_091, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_092))::numeric(9,3) END AS nrx_092, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_093))::numeric(9,3) END AS nrx_093, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_094))::numeric(9,3) END AS nrx_094, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_095))::numeric(9,3) END AS nrx_095, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_096))::numeric(9,3) END AS nrx_096, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_097))::numeric(9,3) END AS nrx_097, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_098))::numeric(9,3) END AS nrx_098, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_099))::numeric(9,3) END AS nrx_099, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_100))::numeric(9,3) END AS nrx_100, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_101))::numeric(9,3) END AS nrx_101, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_102))::numeric(9,3) END AS nrx_102, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_103))::numeric(9,3) END AS nrx_103, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_104))::numeric(9,3) END AS nrx_104, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_105))::numeric(9,3) END AS nrx_105, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_106))::numeric(9,3) END AS nrx_106, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_107))::numeric(9,3) END AS nrx_107, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_108))::numeric(9,3) END AS nrx_108, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_109))::numeric(9,3) END AS nrx_109, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_110))::numeric(9,3) END AS nrx_110, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_111))::numeric(9,3) END AS nrx_111, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_112))::numeric(9,3) END AS nrx_112, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_113))::numeric(9,3) END AS nrx_113, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_114))::numeric(9,3) END AS nrx_114, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_115))::numeric(9,3) END AS nrx_115, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_116))::numeric(9,3) END AS nrx_116, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_117))::numeric(9,3) END AS nrx_117, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_118))::numeric(9,3) END AS nrx_118, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_119))::numeric(9,3) END AS nrx_119, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_120))::numeric(9,3) END AS nrx_120, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_121))::numeric(9,3) END AS nrx_121, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_122))::numeric(9,3) END AS nrx_122, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_123))::numeric(9,3) END AS nrx_123, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_124))::numeric(9,3) END AS nrx_124, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_125))::numeric(9,3) END AS nrx_125, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_126))::numeric(9,3) END AS nrx_126, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_127))::numeric(9,3) END AS nrx_127, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_128))::numeric(9,3) END AS nrx_128, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_129))::numeric(9,3) END AS nrx_129, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_130))::numeric(9,3) END AS nrx_130, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_131))::numeric(9,3) END AS nrx_131, CASE WHEN (EXT_IMS_MHK_CNT_W_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.nrx_132))::numeric(9,3) END AS nrx_132, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_024))::numeric(9,3) END AS trx_024, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_025))::numeric(9,3) END AS trx_025, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_026))::numeric(9,3) END AS trx_026, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_027))::numeric(9,3) END AS trx_027, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_028))::numeric(9,3) END AS trx_028, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_029))::numeric(9,3) END AS trx_029, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_030))::numeric(9,3) END AS trx_030, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_031))::numeric(9,3) END AS trx_031, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_032))::numeric(9,3) END AS trx_032, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_033))::numeric(9,3) END AS trx_033, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_034))::numeric(9,3) END AS trx_034, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_035))::numeric(9,3) END AS trx_035, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_036))::numeric(9,3) END AS trx_036, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_037))::numeric(9,3) END AS trx_037, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_038))::numeric(9,3) END AS trx_038, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_039))::numeric(9,3) END AS trx_039, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_040))::numeric(9,3) END AS trx_040, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_041))::numeric(9,3) END AS trx_041, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_042))::numeric(9,3) END AS trx_042, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_043))::numeric(9,3) END AS trx_043, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_044))::numeric(9,3) END AS trx_044, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_045))::numeric(9,3) END AS trx_045, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_046))::numeric(9,3) END AS trx_046, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_047))::numeric(9,3) END AS trx_047, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_048))::numeric(9,3) END AS trx_048, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_049))::numeric(9,3) END AS trx_049, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_050))::numeric(9,3) END AS trx_050, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_051))::numeric(9,3) END AS trx_051, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_052))::numeric(9,3) END AS trx_052, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_053))::numeric(9,3) END AS trx_053, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_054))::numeric(9,3) END AS trx_054, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_055))::numeric(9,3) END AS trx_055, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_056))::numeric(9,3) END AS trx_056, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_057))::numeric(9,3) END AS trx_057, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_058))::numeric(9,3) END AS trx_058, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_059))::numeric(9,3) END AS trx_059, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_060))::numeric(9,3) END AS trx_060, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_061))::numeric(9,3) END AS trx_061, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_062))::numeric(9,3) END AS trx_062, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_063))::numeric(9,3) END AS trx_063, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_064))::numeric(9,3) END AS trx_064, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_065))::numeric(9,3) END AS trx_065, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_066))::numeric(9,3) END AS trx_066, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_067))::numeric(9,3) END AS trx_067, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_068))::numeric(9,3) END AS trx_068, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_069))::numeric(9,3) END AS trx_069, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_070))::numeric(9,3) END AS trx_070, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_071))::numeric(9,3) END AS trx_071, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_072))::numeric(9,3) END AS trx_072, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_073))::numeric(9,3) END AS trx_073, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_074))::numeric(9,3) END AS trx_074, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_075))::numeric(9,3) END AS trx_075, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_076))::numeric(9,3) END AS trx_076, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_077))::numeric(9,3) END AS trx_077, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_078))::numeric(9,3) END AS trx_078, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_079))::numeric(9,3) END AS trx_079, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_080))::numeric(9,3) END AS trx_080, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_081))::numeric(9,3) END AS trx_081, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_082))::numeric(9,3) END AS trx_082, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_083))::numeric(9,3) END AS trx_083, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_084))::numeric(9,3) END AS trx_084, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_085))::numeric(9,3) END AS trx_085, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_086))::numeric(9,3) END AS trx_086, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_087))::numeric(9,3) END AS trx_087, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_088))::numeric(9,3) END AS trx_088, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_089))::numeric(9,3) END AS trx_089, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_090))::numeric(9,3) END AS trx_090, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_091))::numeric(9,3) END AS trx_091, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_092))::numeric(9,3) END AS trx_092, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_093))::numeric(9,3) END AS trx_093, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_094))::numeric(9,3) END AS trx_094, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_095))::numeric(9,3) END AS trx_095, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_096))::numeric(9,3) END AS trx_096, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_097))::numeric(9,3) END AS trx_097, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_098))::numeric(9,3) END AS trx_098, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_099))::numeric(9,3) END AS trx_099, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_100))::numeric(9,3) END AS trx_100, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_101))::numeric(9,3) END AS trx_101, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_102))::numeric(9,3) END AS trx_102, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_103))::numeric(9,3) END AS trx_103, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_104))::numeric(9,3) END AS trx_104, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_105))::numeric(9,3) END AS trx_105, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_106))::numeric(9,3) END AS trx_106, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_107))::numeric(9,3) END AS trx_107, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_108))::numeric(9,3) END AS trx_108, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_109))::numeric(9,3) END AS trx_109, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_110))::numeric(9,3) END AS trx_110, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_111))::numeric(9,3) END AS trx_111, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_112))::numeric(9,3) END AS trx_112, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_113))::numeric(9,3) END AS trx_113, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_114))::numeric(9,3) END AS trx_114, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_115))::numeric(9,3) END AS trx_115, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_116))::numeric(9,3) END AS trx_116, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_117))::numeric(9,3) END AS trx_117, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_118))::numeric(9,3) END AS trx_118, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_119))::numeric(9,3) END AS trx_119, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_120))::numeric(9,3) END AS trx_120, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_121))::numeric(9,3) END AS trx_121, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_122))::numeric(9,3) END AS trx_122, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_123))::numeric(9,3) END AS trx_123, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_124))::numeric(9,3) END AS trx_124, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_125))::numeric(9,3) END AS trx_125, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_126))::numeric(9,3) END AS trx_126, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_127))::numeric(9,3) END AS trx_127, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_128))::numeric(9,3) END AS trx_128, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_129))::numeric(9,3) END AS trx_129, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_130))::numeric(9,3) END AS trx_130, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_131))::numeric(9,3) END AS trx_131, CASE WHEN (EXT_IMS_MHK_CNT_W_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_CNT_W_src.trx_132))::numeric(9,3) END AS trx_132, EXT_IMS_MHK_CNT_W_src.batch_id, EXT_IMS_MHK_CNT_W_src.row_id, EXT_IMS_MHK_CNT_W_src.update_ts FROM teva_ingestion.EXT_IMS_MHK_CNT_W_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHK_QTY_M AS
SELECT CASE WHEN (EXT_IMS_MHK_QTY_M_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_M_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (EXT_IMS_MHK_QTY_M_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_M_src.ims_report_num))::int END AS ims_report_num, btrim(EXT_IMS_MHK_QTY_M_src.zip_other) AS zip_other, btrim(EXT_IMS_MHK_QTY_M_src.ims_id) AS ims_id, btrim(EXT_IMS_MHK_QTY_M_src.ndc) AS ndc, btrim(EXT_IMS_MHK_QTY_M_src.plan_id) AS plan_id, CASE WHEN (EXT_IMS_MHK_QTY_M_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_M_src.sales_category))::int END AS sales_category, btrim(EXT_IMS_MHK_QTY_M_src.rx_type) AS rx_type, CASE WHEN (EXT_IMS_MHK_QTY_M_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_M_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(EXT_IMS_MHK_QTY_M_src.filler_01) AS filler_01, btrim(EXT_IMS_MHK_QTY_M_src.me_num) AS me_num, btrim(EXT_IMS_MHK_QTY_M_src.last_name) AS last_name, btrim(EXT_IMS_MHK_QTY_M_src.first_name) AS first_name, btrim(EXT_IMS_MHK_QTY_M_src.middle_name) AS middle_name, btrim(EXT_IMS_MHK_QTY_M_src.address) AS address, btrim(EXT_IMS_MHK_QTY_M_src.city) AS city, btrim(EXT_IMS_MHK_QTY_M_src.state) AS state, btrim(EXT_IMS_MHK_QTY_M_src.zip) AS zip, btrim(EXT_IMS_MHK_QTY_M_src.specialty) AS specialty, btrim(EXT_IMS_MHK_QTY_M_src.plan_name) AS plan_name, btrim(EXT_IMS_MHK_QTY_M_src.ndc_description) AS ndc_description, btrim(EXT_IMS_MHK_QTY_M_src.data_date) AS data_date, CASE WHEN (EXT_IMS_MHK_QTY_M_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_M_src.bucket_count))::int END AS bucket_count, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (EXT_IMS_MHK_QTY_M_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (EXT_IMS_MHK_QTY_M_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_M_src.trx_024))::numeric(9,3) END AS trx_024, EXT_IMS_MHK_QTY_M_src.batch_id, EXT_IMS_MHK_QTY_M_src.row_id, EXT_IMS_MHK_QTY_M_src.update_ts FROM teva_ingestion.EXT_IMS_MHK_QTY_M_src;

CREATE  VIEW teva_ingestion.EXT_IMS_MHK_QTY_W AS
SELECT CASE WHEN (EXT_IMS_MHK_QTY_W_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_W_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (EXT_IMS_MHK_QTY_W_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_W_src.ims_report_num))::int END AS ims_report_num, btrim(EXT_IMS_MHK_QTY_W_src.zip_other) AS zip_other, btrim(EXT_IMS_MHK_QTY_W_src.ims_id) AS ims_id, btrim(EXT_IMS_MHK_QTY_W_src.ndc) AS ndc, btrim(EXT_IMS_MHK_QTY_W_src.plan_id) AS plan_id, CASE WHEN (EXT_IMS_MHK_QTY_W_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_W_src.sales_category))::int END AS sales_category, btrim(EXT_IMS_MHK_QTY_W_src.rx_type) AS rx_type, CASE WHEN (EXT_IMS_MHK_QTY_W_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_W_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(EXT_IMS_MHK_QTY_W_src.filler_01) AS filler_01, btrim(EXT_IMS_MHK_QTY_W_src.me_num) AS me_num, btrim(EXT_IMS_MHK_QTY_W_src.last_name) AS last_name, btrim(EXT_IMS_MHK_QTY_W_src.first_name) AS first_name, btrim(EXT_IMS_MHK_QTY_W_src.middle_name) AS middle_name, btrim(EXT_IMS_MHK_QTY_W_src.address) AS address, btrim(EXT_IMS_MHK_QTY_W_src.city) AS city, btrim(EXT_IMS_MHK_QTY_W_src.state) AS state, btrim(EXT_IMS_MHK_QTY_W_src.zip) AS zip, btrim(EXT_IMS_MHK_QTY_W_src.specialty) AS specialty, btrim(EXT_IMS_MHK_QTY_W_src.plan_name) AS plan_name, btrim(EXT_IMS_MHK_QTY_W_src.ndc_description) AS ndc_description, btrim(EXT_IMS_MHK_QTY_W_src.data_date) AS data_date, CASE WHEN (EXT_IMS_MHK_QTY_W_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_MHK_QTY_W_src.bucket_count))::int END AS bucket_count, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_025))::numeric(9,3) END AS nrx_025, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_026))::numeric(9,3) END AS nrx_026, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_027))::numeric(9,3) END AS nrx_027, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_028))::numeric(9,3) END AS nrx_028, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_029))::numeric(9,3) END AS nrx_029, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_030))::numeric(9,3) END AS nrx_030, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_031))::numeric(9,3) END AS nrx_031, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_032))::numeric(9,3) END AS nrx_032, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_033))::numeric(9,3) END AS nrx_033, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_034))::numeric(9,3) END AS nrx_034, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_035))::numeric(9,3) END AS nrx_035, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_036))::numeric(9,3) END AS nrx_036, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_037))::numeric(9,3) END AS nrx_037, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_038))::numeric(9,3) END AS nrx_038, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_039))::numeric(9,3) END AS nrx_039, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_040))::numeric(9,3) END AS nrx_040, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_041))::numeric(9,3) END AS nrx_041, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_042))::numeric(9,3) END AS nrx_042, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_043))::numeric(9,3) END AS nrx_043, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_044))::numeric(9,3) END AS nrx_044, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_045))::numeric(9,3) END AS nrx_045, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_046))::numeric(9,3) END AS nrx_046, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_047))::numeric(9,3) END AS nrx_047, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_048))::numeric(9,3) END AS nrx_048, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_049))::numeric(9,3) END AS nrx_049, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_050))::numeric(9,3) END AS nrx_050, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_051))::numeric(9,3) END AS nrx_051, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_052))::numeric(9,3) END AS nrx_052, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_053))::numeric(9,3) END AS nrx_053, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_054))::numeric(9,3) END AS nrx_054, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_055))::numeric(9,3) END AS nrx_055, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_056))::numeric(9,3) END AS nrx_056, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_057))::numeric(9,3) END AS nrx_057, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_058))::numeric(9,3) END AS nrx_058, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_059))::numeric(9,3) END AS nrx_059, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_060))::numeric(9,3) END AS nrx_060, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_061))::numeric(9,3) END AS nrx_061, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_062))::numeric(9,3) END AS nrx_062, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_063))::numeric(9,3) END AS nrx_063, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_064))::numeric(9,3) END AS nrx_064, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_065))::numeric(9,3) END AS nrx_065, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_066))::numeric(9,3) END AS nrx_066, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_067))::numeric(9,3) END AS nrx_067, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_068))::numeric(9,3) END AS nrx_068, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_069))::numeric(9,3) END AS nrx_069, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_070))::numeric(9,3) END AS nrx_070, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_071))::numeric(9,3) END AS nrx_071, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_072))::numeric(9,3) END AS nrx_072, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_073))::numeric(9,3) END AS nrx_073, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_074))::numeric(9,3) END AS nrx_074, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_075))::numeric(9,3) END AS nrx_075, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_076))::numeric(9,3) END AS nrx_076, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_077))::numeric(9,3) END AS nrx_077, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_078))::numeric(9,3) END AS nrx_078, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_079))::numeric(9,3) END AS nrx_079, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_080))::numeric(9,3) END AS nrx_080, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_081))::numeric(9,3) END AS nrx_081, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_082))::numeric(9,3) END AS nrx_082, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_083))::numeric(9,3) END AS nrx_083, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_084))::numeric(9,3) END AS nrx_084, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_085))::numeric(9,3) END AS nrx_085, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_086))::numeric(9,3) END AS nrx_086, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_087))::numeric(9,3) END AS nrx_087, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_088))::numeric(9,3) END AS nrx_088, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_089))::numeric(9,3) END AS nrx_089, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_090))::numeric(9,3) END AS nrx_090, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_091))::numeric(9,3) END AS nrx_091, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_092))::numeric(9,3) END AS nrx_092, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_093))::numeric(9,3) END AS nrx_093, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_094))::numeric(9,3) END AS nrx_094, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_095))::numeric(9,3) END AS nrx_095, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_096))::numeric(9,3) END AS nrx_096, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_097))::numeric(9,3) END AS nrx_097, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_098))::numeric(9,3) END AS nrx_098, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_099))::numeric(9,3) END AS nrx_099, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_100))::numeric(9,3) END AS nrx_100, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_101))::numeric(9,3) END AS nrx_101, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_102))::numeric(9,3) END AS nrx_102, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_103))::numeric(9,3) END AS nrx_103, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_104))::numeric(9,3) END AS nrx_104, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_105))::numeric(9,3) END AS nrx_105, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_106))::numeric(9,3) END AS nrx_106, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_107))::numeric(9,3) END AS nrx_107, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_108))::numeric(9,3) END AS nrx_108, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_109))::numeric(9,3) END AS nrx_109, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_110))::numeric(9,3) END AS nrx_110, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_111))::numeric(9,3) END AS nrx_111, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_112))::numeric(9,3) END AS nrx_112, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_113))::numeric(9,3) END AS nrx_113, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_114))::numeric(9,3) END AS nrx_114, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_115))::numeric(9,3) END AS nrx_115, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_116))::numeric(9,3) END AS nrx_116, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_117))::numeric(9,3) END AS nrx_117, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_118))::numeric(9,3) END AS nrx_118, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_119))::numeric(9,3) END AS nrx_119, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_120))::numeric(9,3) END AS nrx_120, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_121))::numeric(9,3) END AS nrx_121, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_122))::numeric(9,3) END AS nrx_122, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_123))::numeric(9,3) END AS nrx_123, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_124))::numeric(9,3) END AS nrx_124, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_125))::numeric(9,3) END AS nrx_125, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_126))::numeric(9,3) END AS nrx_126, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_127))::numeric(9,3) END AS nrx_127, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_128))::numeric(9,3) END AS nrx_128, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_129))::numeric(9,3) END AS nrx_129, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_130))::numeric(9,3) END AS nrx_130, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_131))::numeric(9,3) END AS nrx_131, CASE WHEN (EXT_IMS_MHK_QTY_W_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.nrx_132))::numeric(9,3) END AS nrx_132, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_024))::numeric(9,3) END AS trx_024, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_025))::numeric(9,3) END AS trx_025, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_026))::numeric(9,3) END AS trx_026, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_027))::numeric(9,3) END AS trx_027, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_028))::numeric(9,3) END AS trx_028, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_029))::numeric(9,3) END AS trx_029, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_030))::numeric(9,3) END AS trx_030, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_031))::numeric(9,3) END AS trx_031, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_032))::numeric(9,3) END AS trx_032, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_033))::numeric(9,3) END AS trx_033, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_034))::numeric(9,3) END AS trx_034, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_035))::numeric(9,3) END AS trx_035, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_036))::numeric(9,3) END AS trx_036, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_037))::numeric(9,3) END AS trx_037, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_038))::numeric(9,3) END AS trx_038, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_039))::numeric(9,3) END AS trx_039, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_040))::numeric(9,3) END AS trx_040, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_041))::numeric(9,3) END AS trx_041, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_042))::numeric(9,3) END AS trx_042, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_043))::numeric(9,3) END AS trx_043, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_044))::numeric(9,3) END AS trx_044, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_045))::numeric(9,3) END AS trx_045, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_046))::numeric(9,3) END AS trx_046, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_047))::numeric(9,3) END AS trx_047, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_048))::numeric(9,3) END AS trx_048, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_049))::numeric(9,3) END AS trx_049, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_050))::numeric(9,3) END AS trx_050, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_051))::numeric(9,3) END AS trx_051, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_052))::numeric(9,3) END AS trx_052, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_053))::numeric(9,3) END AS trx_053, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_054))::numeric(9,3) END AS trx_054, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_055))::numeric(9,3) END AS trx_055, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_056))::numeric(9,3) END AS trx_056, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_057))::numeric(9,3) END AS trx_057, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_058))::numeric(9,3) END AS trx_058, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_059))::numeric(9,3) END AS trx_059, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_060))::numeric(9,3) END AS trx_060, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_061))::numeric(9,3) END AS trx_061, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_062))::numeric(9,3) END AS trx_062, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_063))::numeric(9,3) END AS trx_063, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_064))::numeric(9,3) END AS trx_064, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_065))::numeric(9,3) END AS trx_065, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_066))::numeric(9,3) END AS trx_066, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_067))::numeric(9,3) END AS trx_067, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_068))::numeric(9,3) END AS trx_068, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_069))::numeric(9,3) END AS trx_069, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_070))::numeric(9,3) END AS trx_070, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_071))::numeric(9,3) END AS trx_071, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_072))::numeric(9,3) END AS trx_072, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_073))::numeric(9,3) END AS trx_073, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_074))::numeric(9,3) END AS trx_074, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_075))::numeric(9,3) END AS trx_075, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_076))::numeric(9,3) END AS trx_076, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_077))::numeric(9,3) END AS trx_077, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_078))::numeric(9,3) END AS trx_078, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_079))::numeric(9,3) END AS trx_079, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_080))::numeric(9,3) END AS trx_080, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_081))::numeric(9,3) END AS trx_081, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_082))::numeric(9,3) END AS trx_082, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_083))::numeric(9,3) END AS trx_083, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_084))::numeric(9,3) END AS trx_084, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_085))::numeric(9,3) END AS trx_085, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_086))::numeric(9,3) END AS trx_086, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_087))::numeric(9,3) END AS trx_087, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_088))::numeric(9,3) END AS trx_088, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_089))::numeric(9,3) END AS trx_089, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_090))::numeric(9,3) END AS trx_090, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_091))::numeric(9,3) END AS trx_091, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_092))::numeric(9,3) END AS trx_092, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_093))::numeric(9,3) END AS trx_093, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_094))::numeric(9,3) END AS trx_094, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_095))::numeric(9,3) END AS trx_095, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_096))::numeric(9,3) END AS trx_096, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_097))::numeric(9,3) END AS trx_097, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_098))::numeric(9,3) END AS trx_098, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_099))::numeric(9,3) END AS trx_099, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_100))::numeric(9,3) END AS trx_100, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_101))::numeric(9,3) END AS trx_101, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_102))::numeric(9,3) END AS trx_102, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_103))::numeric(9,3) END AS trx_103, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_104))::numeric(9,3) END AS trx_104, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_105))::numeric(9,3) END AS trx_105, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_106))::numeric(9,3) END AS trx_106, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_107))::numeric(9,3) END AS trx_107, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_108))::numeric(9,3) END AS trx_108, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_109))::numeric(9,3) END AS trx_109, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_110))::numeric(9,3) END AS trx_110, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_111))::numeric(9,3) END AS trx_111, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_112))::numeric(9,3) END AS trx_112, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_113))::numeric(9,3) END AS trx_113, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_114))::numeric(9,3) END AS trx_114, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_115))::numeric(9,3) END AS trx_115, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_116))::numeric(9,3) END AS trx_116, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_117))::numeric(9,3) END AS trx_117, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_118))::numeric(9,3) END AS trx_118, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_119))::numeric(9,3) END AS trx_119, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_120))::numeric(9,3) END AS trx_120, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_121))::numeric(9,3) END AS trx_121, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_122))::numeric(9,3) END AS trx_122, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_123))::numeric(9,3) END AS trx_123, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_124))::numeric(9,3) END AS trx_124, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_125))::numeric(9,3) END AS trx_125, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_126))::numeric(9,3) END AS trx_126, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_127))::numeric(9,3) END AS trx_127, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_128))::numeric(9,3) END AS trx_128, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_129))::numeric(9,3) END AS trx_129, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_130))::numeric(9,3) END AS trx_130, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_131))::numeric(9,3) END AS trx_131, CASE WHEN (EXT_IMS_MHK_QTY_W_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(EXT_IMS_MHK_QTY_W_src.trx_132))::numeric(9,3) END AS trx_132, EXT_IMS_MHK_QTY_W_src.batch_id, EXT_IMS_MHK_QTY_W_src.row_id, EXT_IMS_MHK_QTY_W_src.update_ts FROM teva_ingestion.EXT_IMS_MHK_QTY_W_src;

CREATE  VIEW teva_ingestion.EXT_VV_CALL2_VOD__HISTORY_HPS AS
 SELECT src.ID,
        src.ISDELETED,
        src.PARENTID,
        src.CREATEDBYID,
        src.CREATEDDATE,
        src.FIELD,
        src.OLDVALUE,
        src.NEWVALUE,
        src.row_id AS record_id,
        ctl.unique_file_id AS file_id
 FROM (teva_ingestion.EXT_VV_CALL2_VOD__HISTORY_src src JOIN teva_ingestion.teva_ingestion_control ctl ON (((ctl.batch_id = src.batch_id) AND (ctl.file_class = 'EXT_VV_CALL2_VOD__HISTORY'::varchar(25)))));

CREATE  VIEW teva_ingestion.EXT_FTF_ACCOUNTS AS
 SELECT btrim(EXT_FTF_ACCOUNTS_src.ID) AS ID,
        btrim(EXT_FTF_ACCOUNTS_src.PROVIDER_ID) AS PROVIDER_ID,
        btrim(EXT_FTF_ACCOUNTS_src.SITE_ID) AS SITE_ID,
        btrim(EXT_FTF_ACCOUNTS_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_FTF_ACCOUNTS_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_FTF_ACCOUNTS_src.TITLE) AS TITLE,
        btrim(EXT_FTF_ACCOUNTS_src.ADDRESS_LINE_1) AS ADDRESS_LINE_1,
        btrim(EXT_FTF_ACCOUNTS_src.ADDRESS_LINE_2) AS ADDRESS_LINE_2,
        btrim(EXT_FTF_ACCOUNTS_src.CITY) AS CITY,
        btrim(EXT_FTF_ACCOUNTS_src.STATE) AS STATE,
        btrim(EXT_FTF_ACCOUNTS_src.POSTAL_CODE) AS POSTAL_CODE,
        btrim(EXT_FTF_ACCOUNTS_src.PHONE_1) AS PHONE_1,
        btrim(EXT_FTF_ACCOUNTS_src.PHONE_2) AS PHONE_2,
        btrim(EXT_FTF_ACCOUNTS_src.PHONE_MOBILE) AS PHONE_MOBILE,
        btrim(EXT_FTF_ACCOUNTS_src.PHONE_FAX) AS PHONE_FAX,
        btrim(EXT_FTF_ACCOUNTS_src.EMAIL) AS EMAIL,
        EXT_FTF_ACCOUNTS_src.batch_id,
        EXT_FTF_ACCOUNTS_src.row_id,
        EXT_FTF_ACCOUNTS_src.update_ts
 FROM teva_ingestion.EXT_FTF_ACCOUNTS_src
 WHERE (EXT_FTF_ACCOUNTS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_ACCOUNTS'::varchar(16))));

CREATE  VIEW teva_ingestion.EXT_FTF_CONTROL AS
 SELECT btrim(EXT_FTF_CONTROL_src.FILE_NAME) AS FILE_NAME,
        btrim(EXT_FTF_CONTROL_src.RECORDS) AS RECORDS,
        btrim(EXT_FTF_CONTROL_src.CREATED_AT) AS CREATED_AT,
        EXT_FTF_CONTROL_src.batch_id,
        EXT_FTF_CONTROL_src.row_id,
        EXT_FTF_CONTROL_src.update_ts
 FROM teva_ingestion.EXT_FTF_CONTROL_src
 WHERE (EXT_FTF_CONTROL_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_CONTROL'::varchar(15))));

CREATE  VIEW teva_ingestion.EXT_FTF_COPAYS AS
 SELECT btrim(EXT_FTF_COPAYS_src.HEALTH_PLAN_ID) AS HEALTH_PLAN_ID,
        CASE WHEN (EXT_FTF_COPAYS_src.TIER = ''::varchar) THEN NULL::int ELSE (btrim(EXT_FTF_COPAYS_src.TIER))::int END AS TIER,
        btrim(EXT_FTF_COPAYS_src.RETAIL_COPAY) AS RETAIL_COPAY,
        btrim(EXT_FTF_COPAYS_src.RETAIL_COINSURANCE) AS RETAIL_COINSURANCE,
        btrim(EXT_FTF_COPAYS_src.MAIL_ORDER_COPAY) AS MAIL_ORDER_COPAY,
        btrim(EXT_FTF_COPAYS_src.MAIL_ORDER_COINSURANCE) AS MAIL_ORDER_COINSURANCE,
        EXT_FTF_COPAYS_src.batch_id,
        EXT_FTF_COPAYS_src.row_id,
        EXT_FTF_COPAYS_src.update_ts
 FROM teva_ingestion.EXT_FTF_COPAYS_src
 WHERE (EXT_FTF_COPAYS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_COPAYS'::varchar(14))));

CREATE  VIEW teva_ingestion.EXT_FTF_DRUGS AS
 SELECT btrim(EXT_FTF_DRUGS_src.DRUG_CLASS_ID) AS DRUG_CLASS_ID,
        btrim(EXT_FTF_DRUGS_src.DRUG_CLASS) AS DRUG_CLASS,
        btrim(EXT_FTF_DRUGS_src.DRUG_ID) AS DRUG_ID,
        btrim(EXT_FTF_DRUGS_src.DRUG) AS DRUG,
        btrim(EXT_FTF_DRUGS_src.GENERIC) AS GENERIC,
        btrim(EXT_FTF_DRUGS_src.MANUFACTURER) AS MANUFACTURER,
        EXT_FTF_DRUGS_src.batch_id,
        EXT_FTF_DRUGS_src.row_id,
        EXT_FTF_DRUGS_src.update_ts
 FROM teva_ingestion.EXT_FTF_DRUGS_src
 WHERE (EXT_FTF_DRUGS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_DRUGS'::varchar(13))));

CREATE  VIEW teva_ingestion.EXT_FTF_DRUG_CLASS_THRPTC_AREA AS
 SELECT btrim(EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.DRUG_CLASS_ID) AS DRUG_CLASS_ID,
        btrim(EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.THERAPEUTIC_AREA_ID) AS THERAPEUTIC_AREA_ID,
        btrim(EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.THERAPEUTIC_AREA) AS THERAPEUTIC_AREA,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.batch_id,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.row_id,
        EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.update_ts
 FROM teva_ingestion.EXT_FTF_DRUG_CLASS_THRPTC_AREA_src
 WHERE (EXT_FTF_DRUG_CLASS_THRPTC_AREA_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_DRUG_CLASS_THRPTC_AREA'::varchar(30))));

CREATE  VIEW teva_ingestion.EXT_FTF_HEALTH_PLANS AS
 SELECT btrim(EXT_FTF_HEALTH_PLANS_src.FORMULARYF_ID) AS FORMULARYF_ID,
        btrim(EXT_FTF_HEALTH_PLANS_src.PROVIDER_ID) AS PROVIDER_ID,
        btrim(EXT_FTF_HEALTH_PLANS_src.PROVIDER) AS PROVIDER,
        btrim(EXT_FTF_HEALTH_PLANS_src.HEALTH_PLAN_ID) AS HEALTH_PLAN_ID,
        btrim(EXT_FTF_HEALTH_PLANS_src.HEALTH_PLAN) AS HEALTH_PLAN,
        btrim(EXT_FTF_HEALTH_PLANS_src.PARENT_ID) AS PARENT_ID,
        btrim(EXT_FTF_HEALTH_PLANS_src.PARENT) AS PARENT,
        CASE WHEN (EXT_FTF_HEALTH_PLANS_src.NATIONAL_LIVES_COUNT = ''::varchar) THEN NULL::int ELSE (btrim(EXT_FTF_HEALTH_PLANS_src.NATIONAL_LIVES_COUNT))::int END AS NATIONAL_LIVES_COUNT,
        btrim(EXT_FTF_HEALTH_PLANS_src.PLAN_TYPE_NAME) AS PLAN_TYPE_NAME,
        CASE WHEN (EXT_FTF_HEALTH_PLANS_src.PREFERRED_BRAND_TIER = ''::varchar) THEN NULL::int ELSE (btrim(EXT_FTF_HEALTH_PLANS_src.PREFERRED_BRAND_TIER))::int END AS PREFERRED_BRAND_TIER,
        EXT_FTF_HEALTH_PLANS_src.batch_id,
        EXT_FTF_HEALTH_PLANS_src.row_id,
        EXT_FTF_HEALTH_PLANS_src.update_ts
 FROM teva_ingestion.EXT_FTF_HEALTH_PLANS_src
 WHERE (EXT_FTF_HEALTH_PLANS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_HEALTH_PLANS'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_FTF_HEALTH_PLAN_GEOGRAPHY AS
 SELECT btrim(EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.HEALTH_PLAN_ID) AS HEALTH_PLAN_ID,
        btrim(EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.OPERATING_STATE) AS OPERATING_STATE,
        CASE WHEN (EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.LIVES_COVERAGE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.LIVES_COVERAGE))::int END AS LIVES_COVERAGE,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.batch_id,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.row_id,
        EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.update_ts
 FROM teva_ingestion.EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src
 WHERE (EXT_FTF_HEALTH_PLAN_GEOGRAPHY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_HEALTH_PLAN_GEOGRAPHY'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_FTF_IMS_BRIDGE AS
 SELECT btrim(EXT_FTF_IMS_BRIDGE_src.PAYER_NAME) AS PAYER_NAME,
        btrim(EXT_FTF_IMS_BRIDGE_src.CODE) AS CODE,
        btrim(EXT_FTF_IMS_BRIDGE_src.NAME) AS NAME,
        btrim(EXT_FTF_IMS_BRIDGE_src.STATE) AS STATE,
        btrim(EXT_FTF_IMS_BRIDGE_src.COMMENTS) AS COMMENTS,
        btrim(EXT_FTF_IMS_BRIDGE_src.PLAN_ID) AS PLAN_ID,
        btrim(EXT_FTF_IMS_BRIDGE_src.PLAN_NAME) AS PLAN_NAME,
        btrim(EXT_FTF_IMS_BRIDGE_src.PROVIDER_NAME) AS PROVIDER_NAME,
        btrim(EXT_FTF_IMS_BRIDGE_src.PLAN_TYPE_NAME) AS PLAN_TYPE_NAME,
        EXT_FTF_IMS_BRIDGE_src.batch_id,
        EXT_FTF_IMS_BRIDGE_src.row_id,
        EXT_FTF_IMS_BRIDGE_src.update_ts
 FROM teva_ingestion.EXT_FTF_IMS_BRIDGE_src
 WHERE (EXT_FTF_IMS_BRIDGE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_IMS_BRIDGE'::varchar(18))));

CREATE  VIEW teva_ingestion.EXT_FTF_PBMS AS
 SELECT btrim(EXT_FTF_PBMS_src.HEALTH_PLAN_ID) AS HEALTH_PLAN_ID,
        btrim(EXT_FTF_PBMS_src.PBM_ID) AS PBM_ID,
        btrim(EXT_FTF_PBMS_src.PBM) AS PBM,
        btrim(EXT_FTF_PBMS_src.PBM_FUNCTION_ID) AS PBM_FUNCTION_ID,
        btrim(EXT_FTF_PBMS_src.PBM_FUNCTION) AS PBM_FUNCTION,
        EXT_FTF_PBMS_src.batch_id,
        EXT_FTF_PBMS_src.row_id,
        EXT_FTF_PBMS_src.update_ts
 FROM teva_ingestion.EXT_FTF_PBMS_src
 WHERE (EXT_FTF_PBMS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_PBMS'::varchar(12))));

CREATE  VIEW teva_ingestion.EXT_FTF_RESTRICTIONS AS
 SELECT btrim(EXT_FTF_RESTRICTIONS_src.HEALTH_PLAN_ID) AS HEALTH_PLAN_ID,
        btrim(EXT_FTF_RESTRICTIONS_src.DRUG_ID) AS DRUG_ID,
        btrim(EXT_FTF_RESTRICTIONS_src.RESTRICTION_DETAIL_ID) AS RESTRICTION_DETAIL_ID,
        btrim(EXT_FTF_RESTRICTIONS_src.RESTRICTION_CODE) AS RESTRICTION_CODE,
        btrim(EXT_FTF_RESTRICTIONS_src.FORMULARY_ENTRY_RESTRICTION_ID) AS FORMULARY_ENTRY_RESTRICTION_ID,
        btrim(EXT_FTF_RESTRICTIONS_src.RESTRICTION_DETAIL_TEXT) AS RESTRICTION_DETAIL_TEXT,
        btrim(EXT_FTF_RESTRICTIONS_src.RESTRICTION_ADDTNL_INFORMATION_1) AS RESTRICTION_ADDTNL_INFORMATION_1,
        btrim(EXT_FTF_RESTRICTIONS_src.RESTRICTION_ADDTNL_INFORMATION_2) AS RESTRICTION_ADDTNL_INFORMATION_2,
        EXT_FTF_RESTRICTIONS_src.batch_id,
        EXT_FTF_RESTRICTIONS_src.row_id,
        EXT_FTF_RESTRICTIONS_src.update_ts
 FROM teva_ingestion.EXT_FTF_RESTRICTIONS_src
 WHERE (EXT_FTF_RESTRICTIONS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_RESTRICTIONS'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_FTF_TEVA_WK_BRIDGE AS
 SELECT btrim(EXT_FTF_TEVA_WK_BRIDGE_src.NAME) AS NAME,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.AMC_NUMBER) AS AMC_NUMBER,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.PBM_AMC_NUMBER) AS PBM_AMC_NUMBER,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.PLAN_TYPE_CODE) AS PLAN_TYPE_CODE,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.ZIP_CODE) AS ZIP_CODE,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.COMMENTS) AS COMMENTS,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.FF_PLAN_ID) AS FF_PLAN_ID,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.FF_PLAN_NAME) AS FF_PLAN_NAME,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.FF_PROVIDER_NAME) AS FF_PROVIDER_NAME,
        btrim(EXT_FTF_TEVA_WK_BRIDGE_src.FF_PLAN_TYPE) AS FF_PLAN_TYPE,
        EXT_FTF_TEVA_WK_BRIDGE_src.batch_id,
        EXT_FTF_TEVA_WK_BRIDGE_src.row_id,
        EXT_FTF_TEVA_WK_BRIDGE_src.update_ts
 FROM teva_ingestion.EXT_FTF_TEVA_WK_BRIDGE_src
 WHERE (EXT_FTF_TEVA_WK_BRIDGE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_TEVA_WK_BRIDGE'::varchar(22))));

CREATE  VIEW teva_ingestion.EXT_FTF_TIERS AS
 SELECT CASE WHEN (EXT_FTF_TIERS_src.ID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_FTF_TIERS_src.ID))::int END AS ID,
        btrim(EXT_FTF_TIERS_src.NAME) AS NAME,
        btrim(EXT_FTF_TIERS_src.CODE_NAME) AS CODE_NAME,
        btrim(EXT_FTF_TIERS_src.EXPLANATION_TEXT) AS EXPLANATION_TEXT,
        EXT_FTF_TIERS_src.batch_id,
        EXT_FTF_TIERS_src.row_id,
        EXT_FTF_TIERS_src.update_ts
 FROM teva_ingestion.EXT_FTF_TIERS_src
 WHERE (EXT_FTF_TIERS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_TIERS'::varchar(13))));

CREATE  VIEW teva_ingestion.EXT_ONC_CALL_DETAIL_GOALS AS
 SELECT btrim(EXT_ONC_CALL_DETAIL_GOALS_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ONC_CALL_DETAIL_GOALS_src.TIME_PERIOD) AS TIME_PERIOD,
        btrim(EXT_ONC_CALL_DETAIL_GOALS_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ONC_CALL_DETAIL_GOALS_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ONC_CALL_DETAIL_GOALS_src.P1 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_CALL_DETAIL_GOALS_src.P1))::int END AS P1,
        CASE WHEN (EXT_ONC_CALL_DETAIL_GOALS_src.P2 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_CALL_DETAIL_GOALS_src.P2))::int END AS P2,
        CASE WHEN (EXT_ONC_CALL_DETAIL_GOALS_src.P3 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_CALL_DETAIL_GOALS_src.P3))::int END AS P3,
        EXT_ONC_CALL_DETAIL_GOALS_src.batch_id,
        EXT_ONC_CALL_DETAIL_GOALS_src.row_id,
        EXT_ONC_CALL_DETAIL_GOALS_src.update_ts
 FROM teva_ingestion.EXT_ONC_CALL_DETAIL_GOALS_src
 WHERE (EXT_ONC_CALL_DETAIL_GOALS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ONC_CALL_DETAIL_GOALS'::varchar(25))));

CREATE  VIEW teva_ingestion.EXT_CUSTOMER_FLAGS AS
 SELECT CASE WHEN (EXT_CUSTOMER_FLAGS_src.TVCMID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_CUSTOMER_FLAGS_src.TVCMID))::int END AS TVCMID,
        btrim(EXT_CUSTOMER_FLAGS_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_CUSTOMER_FLAGS_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_CUSTOMER_FLAGS_src.TERRITORY_NUMBER) AS TERRITORY_NUMBER,
        btrim(EXT_CUSTOMER_FLAGS_src.FLAG_TYPE) AS FLAG_TYPE,
        btrim(EXT_CUSTOMER_FLAGS_src.FLAG_VALUE) AS FLAG_VALUE,
        CASE WHEN (EXT_CUSTOMER_FLAGS_src.EFF_START_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_CUSTOMER_FLAGS_src.EFF_START_DATE))::date END AS EFF_START_DATE,
        CASE WHEN (EXT_CUSTOMER_FLAGS_src.EFF_END_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_CUSTOMER_FLAGS_src.EFF_END_DATE))::date END AS EFF_END_DATE,
        EXT_CUSTOMER_FLAGS_src.batch_id,
        EXT_CUSTOMER_FLAGS_src.row_id,
        EXT_CUSTOMER_FLAGS_src.update_ts
 FROM teva_ingestion.EXT_CUSTOMER_FLAGS_src
 WHERE (EXT_CUSTOMER_FLAGS_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_CUSTOMER_FLAGS'::varchar(18))));

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_MCK AS
 SELECT btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.GROUP_NUMBER) AS GROUP_NUMBER,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.GROUP_NAME) AS GROUP_NAME,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.CLAIM_TYPE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.CLAIM_TYPE))::int END AS CLAIM_TYPE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.RX_NUMBER) AS RX_NUMBER,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DATE_OF_FILL) AS DATE_OF_FILL,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.CARD_ID_NUMBER) AS CARD_ID_NUMBER,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PATIENT_AGE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PATIENT_AGE))::int END AS PATIENT_AGE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PATIENT_GENDER) AS PATIENT_GENDER,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.OTHER_COVERAGE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.OTHER_COVERAGE))::int END AS OTHER_COVERAGE,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.NEW_REFILL_CODE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.NEW_REFILL_CODE))::int END AS NEW_REFILL_CODE,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.REFILLS = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.REFILLS))::int END AS REFILLS,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.NDC) AS NDC,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DRUG_NAME) AS DRUG_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DRUG_DOSAGE_FORM) AS DRUG_DOSAGE_FORM,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DRUG_STRENGTH) AS DRUG_STRENGTH,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PAID_QUANTITY = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PAID_QUANTITY))::numeric(12,2) END AS PAID_QUANTITY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DAYS_SUPPLY = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DAYS_SUPPLY))::int END AS DAYS_SUPPLY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.INGREDIENT_COST_PAID = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.INGREDIENT_COST_PAID))::numeric(12,2) END AS INGREDIENT_COST_PAID,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.SALES_TAX_PAID = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.SALES_TAX_PAID))::numeric(12,2) END AS SALES_TAX_PAID,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.SUBMITTED_COST = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.SUBMITTED_COST))::numeric(12,2) END AS SUBMITTED_COST,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.COPAY_AMOUNT = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.COPAY_AMOUNT))::numeric(12,2) END AS COPAY_AMOUNT,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.TOTAL_AMOUNT_PAID = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.TOTAL_AMOUNT_PAID))::numeric(12,2) END AS TOTAL_AMOUNT_PAID,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.USUAL_AND_CUSTOMARY = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.USUAL_AND_CUSTOMARY))::numeric(12,2) END AS USUAL_AND_CUSTOMARY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.CLAIM_NUMBER) AS CLAIM_NUMBER,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_NPI) AS PHARMACY_NPI,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_NABP) AS PHARMACY_NABP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_ADDRESS1) AS PHARMACY_ADDRESS1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_ADDRESS2) AS PHARMACY_ADDRESS2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_FIRST) AS PRESCRIBER_FIRST,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_MIDDLE) AS PRESCRIBER_MIDDLE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_LAST) AS PRESCRIBER_LAST,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_ADDRESS_1) AS PRESCRIBER_ADDRESS_1,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_ADDRESS_2) AS PRESCRIBER_ADDRESS_2,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_CITY) AS PRESCRIBER_CITY,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_STATE) AS PRESCRIBER_STATE,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_ZIP) AS PRESCRIBER_ZIP,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.PRESCRIBER_SPECIALTY) AS PRESCRIBER_SPECIALTY,
        CASE WHEN (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.REDEMPTION = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.REDEMPTION))::int END AS REDEMPTION,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.MAIL_ORDER_INDICATOR) AS MAIL_ORDER_INDICATOR,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.DEA) AS DEA,
        btrim(EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.NPI) AS NPI,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.batch_id,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.row_id,
        EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_DETAIL_WKLY_MCK_src
 WHERE (EXT_ASI_COPAY_DETAIL_WKLY_MCK_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_COPAY_DETAIL_WKLY_MCK'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_MK AS
 SELECT btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.GROUP_NUMBER) AS GROUP_NUMBER,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.GROUP_NAME) AS GROUP_NAME,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.CLAIM_TYPE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.CLAIM_TYPE))::int END AS CLAIM_TYPE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.RX_NUMBER) AS RX_NUMBER,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DATE_OF_FILL) AS DATE_OF_FILL,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.CARD_ID_NUMBER) AS CARD_ID_NUMBER,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PATIENT_AGE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PATIENT_AGE))::int END AS PATIENT_AGE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PATIENT_GENDER) AS PATIENT_GENDER,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.OTHER_COVERAGE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.OTHER_COVERAGE))::int END AS OTHER_COVERAGE,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.NEW_REFILL_CODE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.NEW_REFILL_CODE))::int END AS NEW_REFILL_CODE,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.REFILLS = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.REFILLS))::int END AS REFILLS,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.NDC) AS NDC,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DRUG_NAME) AS DRUG_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DRUG_DOSAGE_FORM) AS DRUG_DOSAGE_FORM,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DRUG_STRENGTH) AS DRUG_STRENGTH,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PAID_QUANTITY = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PAID_QUANTITY))::numeric(12,2) END AS PAID_QUANTITY,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DAYS_SUPPLY = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DAYS_SUPPLY))::int END AS DAYS_SUPPLY,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.INGREDIENT_COST_PAID = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.INGREDIENT_COST_PAID))::numeric(12,2) END AS INGREDIENT_COST_PAID,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.SALES_TAX_PAID = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.SALES_TAX_PAID))::numeric(12,2) END AS SALES_TAX_PAID,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.SUBMITTED_COST = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.SUBMITTED_COST))::numeric(12,2) END AS SUBMITTED_COST,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.COPAY_AMOUNT = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.COPAY_AMOUNT))::numeric(12,2) END AS COPAY_AMOUNT,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.TOTAL_AMOUNT_PAID = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.TOTAL_AMOUNT_PAID))::numeric(12,2) END AS TOTAL_AMOUNT_PAID,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.USUAL_AND_CUSTOMARY = ''::varchar) THEN NULL::numeric(12,2) ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.USUAL_AND_CUSTOMARY))::numeric(12,2) END AS USUAL_AND_CUSTOMARY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.CLAIM_NUMBER) AS CLAIM_NUMBER,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_NPI) AS PHARMACY_NPI,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_NABP) AS PHARMACY_NABP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_NAME) AS PHARMACY_NAME,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_ADDRESS1) AS PHARMACY_ADDRESS1,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_ADDRESS2) AS PHARMACY_ADDRESS2,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_FIRST) AS PRESCRIBER_FIRST,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_MIDDLE) AS PRESCRIBER_MIDDLE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_LAST) AS PRESCRIBER_LAST,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_ADDRESS_1) AS PRESCRIBER_ADDRESS_1,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_ADDRESS_2) AS PRESCRIBER_ADDRESS_2,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_CITY) AS PRESCRIBER_CITY,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_STATE) AS PRESCRIBER_STATE,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_ZIP) AS PRESCRIBER_ZIP,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.PRESCRIBER_SPECIALTY) AS PRESCRIBER_SPECIALTY,
        CASE WHEN (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.REDEMPTION = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.REDEMPTION))::int END AS REDEMPTION,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.MAIL_ORDER_INDICATOR) AS MAIL_ORDER_INDICATOR,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.DEA) AS DEA,
        btrim(EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.NPI) AS NPI,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.batch_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.row_id,
        EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.update_ts
 FROM teva_ingestion.EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src
 WHERE (EXT_ASI_VOUCHER_DETAIL_WKLY_MK_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ASI_VOUCHER_DETAIL_WKLY_MK'::varchar(30))));

CREATE  VIEW teva_ingestion.EXT_I3_BY_STRENGTH_RX AS
 SELECT CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.SHIP_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.SHIP_DATE))::date END AS SHIP_DATE,
        btrim(EXT_I3_BY_STRENGTH_RX_src.FULL_NAME) AS FULL_NAME,
        btrim(EXT_I3_BY_STRENGTH_RX_src.SPECIALTY) AS SPECIALTY,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.RANK = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.RANK))::int END AS RANK,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.TOTAL = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.TOTAL))::int END AS TOTAL,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.AUBAGIO_14 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.AUBAGIO_14))::int END AS AUBAGIO_14,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.AUBAGIO_7 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.AUBAGIO_7))::int END AS AUBAGIO_7,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.AVONEX_30 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.AVONEX_30))::int END AS AVONEX_30,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.AVONEX_PACK = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.AVONEX_PACK))::int END AS AVONEX_PACK,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.AVONEX_PEN_PACK = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.AVONEX_PEN_PACK))::int END AS AVONEX_PEN_PACK,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.BETASERON = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.BETASERON))::int END AS BETASERON,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.COPAXONE_20 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.COPAXONE_20))::int END AS COPAXONE_20,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.COPAXONE_40 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.COPAXONE_40))::int END AS COPAXONE_40,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.GILENYA_0_5 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.GILENYA_0_5))::int END AS GILENYA_0_5,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.GLATOPA_20 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.GLATOPA_20))::int END AS GLATOPA_20,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.LEMTRADA = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.LEMTRADA))::int END AS LEMTRADA,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.PLEGRIDY_PFS = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.PLEGRIDY_PFS))::int END AS PLEGRIDY_PFS,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.PLEGRIDY_PEN = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.PLEGRIDY_PEN))::int END AS PLEGRIDY_PEN,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.REBIF_22_REBIDOSE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.REBIF_22_REBIDOSE))::int END AS REBIF_22_REBIDOSE,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.REBIF_22 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.REBIF_22))::int END AS REBIF_22,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.REBIF_44 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.REBIF_44))::int END AS REBIF_44,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.REBIF_44_REBIDOSE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.REBIF_44_REBIDOSE))::int END AS REBIF_44_REBIDOSE,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.REBIF_PACK = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.REBIF_PACK))::int END AS REBIF_PACK,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.REBIF_PACK_REBIDOSE = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.REBIF_PACK_REBIDOSE))::int END AS REBIF_PACK_REBIDOSE,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_120 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_120))::int END AS TECFIDERA_120,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_240 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_240))::int END AS TECFIDERA_240,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_STARTER_PACK = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.TECFIDERA_STARTER_PACK))::int END AS TECFIDERA_STARTER_PACK,
        CASE WHEN (EXT_I3_BY_STRENGTH_RX_src.TYSABRI = ''::varchar) THEN NULL::int ELSE (btrim(EXT_I3_BY_STRENGTH_RX_src.TYSABRI))::int END AS TYSABRI,
        btrim(EXT_I3_BY_STRENGTH_RX_src.MD_ADDR1) AS MD_ADDR1,
        btrim(EXT_I3_BY_STRENGTH_RX_src.MD_ADDR2) AS MD_ADDR2,
        btrim(EXT_I3_BY_STRENGTH_RX_src.MD_CITY) AS MD_CITY,
        btrim(EXT_I3_BY_STRENGTH_RX_src.MD_STATE) AS MD_STATE,
        btrim(EXT_I3_BY_STRENGTH_RX_src.MD_ZIP) AS MD_ZIP,
        btrim(EXT_I3_BY_STRENGTH_RX_src.PRESCRIBER_NPI) AS PRESCRIBER_NPI,
        btrim(EXT_I3_BY_STRENGTH_RX_src.DNC_FLAG) AS DNC_FLAG,
        EXT_I3_BY_STRENGTH_RX_src.batch_id,
        EXT_I3_BY_STRENGTH_RX_src.row_id,
        EXT_I3_BY_STRENGTH_RX_src.update_ts
 FROM teva_ingestion.EXT_I3_BY_STRENGTH_RX_src;

CREATE  VIEW teva_ingestion.EXT_KNIPPER_SAMPLES AS
 SELECT btrim(EXT_KNIPPER_SAMPLES_src.TVCMID) AS TVCMID,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_VEEVA_ID) AS HCP_VEEVA_ID,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_FIRST_NAME) AS HCP_FIRST_NAME,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_MIDDLE_NAME) AS HCP_MIDDLE_NAME,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_LAST_NAME) AS HCP_LAST_NAME,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_DESIGNATION) AS HCP_DESIGNATION,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_STATE_LICENSE_NUMBER) AS HCP_STATE_LICENSE_NUMBER,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_ADDRESS1) AS HCP_ADDRESS1,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_ADDRESS2) AS HCP_ADDRESS2,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_ADDRESS3) AS HCP_ADDRESS3,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_CITY) AS HCP_CITY,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_STATE) AS HCP_STATE,
        btrim(EXT_KNIPPER_SAMPLES_src.HCP_ZIP) AS HCP_ZIP,
        btrim(EXT_KNIPPER_SAMPLES_src.DEA_LICENSE_NUMBER) AS DEA_LICENSE_NUMBER,
        btrim(EXT_KNIPPER_SAMPLES_src.ORDER_SOURCE_ORDER_ID) AS ORDER_SOURCE_ORDER_ID,
        btrim(EXT_KNIPPER_SAMPLES_src.NDC) AS NDC,
        CASE WHEN (EXT_KNIPPER_SAMPLES_src.QUANTITY = ''::varchar) THEN NULL::int ELSE (btrim(EXT_KNIPPER_SAMPLES_src.QUANTITY))::int END AS QUANTITY,
        btrim(EXT_KNIPPER_SAMPLES_src.ORDER_SOURCE_JOB_CODE) AS ORDER_SOURCE_JOB_CODE,
        btrim(EXT_KNIPPER_SAMPLES_src.ORDER_SOURCE_JOB_CODE_DESCRIPTION) AS ORDER_SOURCE_JOB_CODE_DESCRIPTION,
        CASE WHEN (EXT_KNIPPER_SAMPLES_src.SHIP_DATE = ''::varchar) THEN NULL::date ELSE (btrim(EXT_KNIPPER_SAMPLES_src.SHIP_DATE))::date END AS SHIP_DATE,
        EXT_KNIPPER_SAMPLES_src.batch_id,
        EXT_KNIPPER_SAMPLES_src.row_id,
        EXT_KNIPPER_SAMPLES_src.update_ts
 FROM teva_ingestion.EXT_KNIPPER_SAMPLES_src;

CREATE  VIEW teva_ingestion.EXT_ACTIVITY_LINE_ITEM AS
 SELECT btrim(EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_ID) AS LINE_ITEM_ID,
        btrim(EXT_ACTIVITY_LINE_ITEM_src.BRAND_NAME) AS BRAND_NAME,
        btrim(EXT_ACTIVITY_LINE_ITEM_src.ACTIVITY) AS ACTIVITY,
        CASE WHEN (EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_DATETIME = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_DATETIME))::timestamp END AS LINE_ITEM_DATETIME,
        btrim(EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_PREVIOUS_ITEM) AS LINE_ITEM_PREVIOUS_ITEM,
        btrim(EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_TRACKBACK_ID) AS LINE_ITEM_TRACKBACK_ID,
        btrim(EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_DETAILS) AS LINE_ITEM_DETAILS,
        btrim(EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_TYPE_NAME) AS LINE_ITEM_TYPE_NAME,
        btrim(EXT_ACTIVITY_LINE_ITEM_src.LINE_ITEM_NATIVE_TYPE) AS LINE_ITEM_NATIVE_TYPE,
        EXT_ACTIVITY_LINE_ITEM_src.batch_id,
        EXT_ACTIVITY_LINE_ITEM_src.row_id,
        EXT_ACTIVITY_LINE_ITEM_src.update_ts
 FROM teva_ingestion.EXT_ACTIVITY_LINE_ITEM_src;

CREATE  VIEW teva_ingestion.EXT_AGGREGATED_ACTIVITY AS
 SELECT btrim(EXT_AGGREGATED_ACTIVITY_src.AGGREGATED_ID) AS AGGREGATED_ID,
        btrim(EXT_AGGREGATED_ACTIVITY_src.LEVEL_NAME) AS LEVEL_NAME,
        btrim(EXT_AGGREGATED_ACTIVITY_src.FEDERATION_ID) AS FEDERATION_ID,
        btrim(EXT_AGGREGATED_ACTIVITY_src.SOURCE_NAME) AS SOURCE_NAME,
        btrim(EXT_AGGREGATED_ACTIVITY_src.CONTACT) AS CONTACT,
        btrim(EXT_AGGREGATED_ACTIVITY_src.ORIGINATING_ID) AS ORIGINATING_ID,
        btrim(EXT_AGGREGATED_ACTIVITY_src.PRIOR_ACTIVITY) AS PRIOR_ACTIVITY,
        btrim(EXT_AGGREGATED_ACTIVITY_src.ACTIVITY_ROLE_NAME) AS ACTIVITY_ROLE_NAME,
        CASE WHEN (EXT_AGGREGATED_ACTIVITY_src.COUNT = ''::varchar) THEN NULL::int ELSE (btrim(EXT_AGGREGATED_ACTIVITY_src.COUNT))::int END AS COUNT,
        btrim(EXT_AGGREGATED_ACTIVITY_src.AGGREGATED_TYPE_NAME) AS AGGREGATED_TYPE_NAME,
        EXT_AGGREGATED_ACTIVITY_src.batch_id,
        EXT_AGGREGATED_ACTIVITY_src.row_id,
        EXT_AGGREGATED_ACTIVITY_src.update_ts
 FROM teva_ingestion.EXT_AGGREGATED_ACTIVITY_src;

CREATE  VIEW teva_ingestion.EXT_DYNAMIC_SEGMENT AS
 SELECT btrim(EXT_DYNAMIC_SEGMENT_src.FEDERATION_ID) AS FEDERATION_ID,
        CASE WHEN (EXT_DYNAMIC_SEGMENT_src.BASKET_ID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DYNAMIC_SEGMENT_src.BASKET_ID))::int END AS BASKET_ID,
        btrim(EXT_DYNAMIC_SEGMENT_src.SEGMENT_NAME) AS SEGMENT_NAME,
        btrim(EXT_DYNAMIC_SEGMENT_src.SEGMENT_VALUE) AS SEGMENT_VALUE,
        EXT_DYNAMIC_SEGMENT_src.batch_id,
        EXT_DYNAMIC_SEGMENT_src.row_id,
        EXT_DYNAMIC_SEGMENT_src.update_ts
 FROM teva_ingestion.EXT_DYNAMIC_SEGMENT_src;

CREATE  VIEW teva_ingestion.EXT_MS_DDD_DOLLARS AS
 SELECT btrim(EXT_MS_DDD_DOLLARS_src.client_num) AS client_num,
        btrim(EXT_MS_DDD_DOLLARS_src.report_num) AS report_num,
        btrim(EXT_MS_DDD_DOLLARS_src.sra1) AS sra1,
        btrim(EXT_MS_DDD_DOLLARS_src.outlet_code) AS outlet_code,
        btrim(EXT_MS_DDD_DOLLARS_src.subcategory_code) AS subcategory_code,
        btrim(EXT_MS_DDD_DOLLARS_src.sra4) AS sra4,
        btrim(EXT_MS_DDD_DOLLARS_src.category_code) AS category_code,
        btrim(EXT_MS_DDD_DOLLARS_src.ims_product_code) AS ims_product_code,
        btrim(EXT_MS_DDD_DOLLARS_src.mth_yyyymmdd) AS mth_yyyymmdd,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth01 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth01))::numeric(19,1) END AS dol_mth01,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth02 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth02))::numeric(19,1) END AS dol_mth02,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth03 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth03))::numeric(19,1) END AS dol_mth03,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth04 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth04))::numeric(19,1) END AS dol_mth04,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth05 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth05))::numeric(19,1) END AS dol_mth05,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth06 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth06))::numeric(19,1) END AS dol_mth06,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth07 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth07))::numeric(19,1) END AS dol_mth07,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth08 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth08))::numeric(19,1) END AS dol_mth08,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth09 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth09))::numeric(19,1) END AS dol_mth09,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth10 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth10))::numeric(19,1) END AS dol_mth10,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth11 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth11))::numeric(19,1) END AS dol_mth11,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth12 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth12))::numeric(19,1) END AS dol_mth12,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth13 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth13))::numeric(19,1) END AS dol_mth13,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth14 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth14))::numeric(19,1) END AS dol_mth14,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth15 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth15))::numeric(19,1) END AS dol_mth15,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth16 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth16))::numeric(19,1) END AS dol_mth16,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth17 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth17))::numeric(19,1) END AS dol_mth17,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth18 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth18))::numeric(19,1) END AS dol_mth18,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth19 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth19))::numeric(19,1) END AS dol_mth19,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth20 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth20))::numeric(19,1) END AS dol_mth20,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth21 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth21))::numeric(19,1) END AS dol_mth21,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth22 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth22))::numeric(19,1) END AS dol_mth22,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth23 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth23))::numeric(19,1) END AS dol_mth23,
        CASE WHEN (EXT_MS_DDD_DOLLARS_src.dol_mth24 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_MS_DDD_DOLLARS_src.dol_mth24))::numeric(19,1) END AS dol_mth24,
        btrim(EXT_MS_DDD_DOLLARS_src.outlet_name) AS outlet_name,
        btrim(EXT_MS_DDD_DOLLARS_src.outlet_address) AS outlet_address,
        btrim(EXT_MS_DDD_DOLLARS_src.outlet_city) AS outlet_city,
        btrim(EXT_MS_DDD_DOLLARS_src.outlet_state) AS outlet_state,
        btrim(EXT_MS_DDD_DOLLARS_src.outlet_zip) AS outlet_zip,
        EXT_MS_DDD_DOLLARS_src.batch_id,
        EXT_MS_DDD_DOLLARS_src.row_id,
        EXT_MS_DDD_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_MS_DDD_DOLLARS_src;

CREATE  VIEW teva_ingestion.EXT_MS_DDD_QUANTITY AS
 SELECT btrim(EXT_MS_DDD_QUANTITY_src.client_num) AS client_num,
        btrim(EXT_MS_DDD_QUANTITY_src.report_num) AS report_num,
        btrim(EXT_MS_DDD_QUANTITY_src.sra1) AS sra1,
        btrim(EXT_MS_DDD_QUANTITY_src.outlet_code) AS outlet_code,
        btrim(EXT_MS_DDD_QUANTITY_src.subcategory_code) AS subcategory_code,
        btrim(EXT_MS_DDD_QUANTITY_src.sra4) AS sra4,
        btrim(EXT_MS_DDD_QUANTITY_src.category_code) AS category_code,
        btrim(EXT_MS_DDD_QUANTITY_src.ims_product_code) AS ims_product_code,
        btrim(EXT_MS_DDD_QUANTITY_src.mth_yyyymmdd) AS mth_yyyymmdd,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth01 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth01))::int END AS qty_mth01,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth02 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth02))::int END AS qty_mth02,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth03 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth03))::int END AS qty_mth03,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth04 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth04))::int END AS qty_mth04,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth05 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth05))::int END AS qty_mth05,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth06 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth06))::int END AS qty_mth06,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth07 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth07))::int END AS qty_mth07,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth08 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth08))::int END AS qty_mth08,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth09 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth09))::int END AS qty_mth09,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth10 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth10))::int END AS qty_mth10,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth11 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth11))::int END AS qty_mth11,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth12 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth12))::int END AS qty_mth12,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth13 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth13))::int END AS qty_mth13,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth14 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth14))::int END AS qty_mth14,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth15 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth15))::int END AS qty_mth15,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth16 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth16))::int END AS qty_mth16,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth17 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth17))::int END AS qty_mth17,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth18 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth18))::int END AS qty_mth18,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth19 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth19))::int END AS qty_mth19,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth20 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth20))::int END AS qty_mth20,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth21 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth21))::int END AS qty_mth21,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth22 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth22))::int END AS qty_mth22,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth23 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth23))::int END AS qty_mth23,
        CASE WHEN (EXT_MS_DDD_QUANTITY_src.qty_mth24 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_MS_DDD_QUANTITY_src.qty_mth24))::int END AS qty_mth24,
        btrim(EXT_MS_DDD_QUANTITY_src.outlet_name) AS outlet_name,
        btrim(EXT_MS_DDD_QUANTITY_src.outlet_address) AS outlet_address,
        btrim(EXT_MS_DDD_QUANTITY_src.outlet_city) AS outlet_city,
        btrim(EXT_MS_DDD_QUANTITY_src.outlet_state) AS outlet_state,
        btrim(EXT_MS_DDD_QUANTITY_src.outlet_zip) AS outlet_zip,
        EXT_MS_DDD_QUANTITY_src.batch_id,
        EXT_MS_DDD_QUANTITY_src.row_id,
        EXT_MS_DDD_QUANTITY_src.update_ts
 FROM teva_ingestion.EXT_MS_DDD_QUANTITY_src;

CREATE  VIEW teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_DOL AS
 SELECT btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.client_num) AS client_num,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.report_num) AS report_num,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.ims_outlet_code) AS ims_outlet_code,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.ims_facility_number) AS ims_facility_number,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.ims_prescriber_number) AS ims_prescriber_number,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_name) AS outlet_name,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_address) AS outlet_address,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_city) AS outlet_city,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_state) AS outlet_state,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.outlet_zip) AS outlet_zip,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_name) AS facility_prescriber_name,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address1) AS facility_prescriber_address1,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address2) AS facility_prescriber_address2,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address3) AS facility_prescriber_address3,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_address4) AS facility_prescriber_address4,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_city) AS facility_prescriber_city,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_state) AS facility_prescriber_state,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.facility_prescriber_zip) AS facility_prescriber_zip,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.row_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_DOL_src;

CREATE  VIEW teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_UNITS AS
 SELECT btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.client_num) AS client_num,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.report_num) AS report_num,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.ims_outlet_code) AS ims_outlet_code,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.ims_facility_number) AS ims_facility_number,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.ims_prescriber_number) AS ims_prescriber_number,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_name) AS outlet_name,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_address) AS outlet_address,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_city) AS outlet_city,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_state) AS outlet_state,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.outlet_zip) AS outlet_zip,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_name) AS facility_prescriber_name,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address1) AS facility_prescriber_address1,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address2) AS facility_prescriber_address2,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address3) AS facility_prescriber_address3,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_address4) AS facility_prescriber_address4,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_city) AS facility_prescriber_city,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_state) AS facility_prescriber_state,
        btrim(EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.facility_prescriber_zip) AS facility_prescriber_zip,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.row_id,
        EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_DEMO_UNITS_src;

CREATE  VIEW teva_ingestion.EXT_TR_DDDMD_WEEKLY_DOLLARS AS
 SELECT btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.client_num) AS client_num,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.report_num) AS report_num,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.ims_outlet_code) AS ims_outlet_code,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.subcategory_code) AS subcategory_code,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.alt_seq_num) AS alt_seq_num,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.filler01) AS filler01,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.category_code) AS category_code,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.ims_product_code) AS ims_product_code,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.data_date) AS data_date,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk01 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk01))::numeric(19,1) END AS dol_wk01,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk02 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk02))::numeric(19,1) END AS dol_wk02,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk03 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk03))::numeric(19,1) END AS dol_wk03,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk04 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk04))::numeric(19,1) END AS dol_wk04,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk05 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk05))::numeric(19,1) END AS dol_wk05,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk06 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk06))::numeric(19,1) END AS dol_wk06,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk07 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk07))::numeric(19,1) END AS dol_wk07,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk08 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk08))::numeric(19,1) END AS dol_wk08,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk09 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk09))::numeric(19,1) END AS dol_wk09,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk10 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk10))::numeric(19,1) END AS dol_wk10,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk11 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk11))::numeric(19,1) END AS dol_wk11,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk12 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk12))::numeric(19,1) END AS dol_wk12,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk13 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk13))::numeric(19,1) END AS dol_wk13,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk14 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk14))::numeric(19,1) END AS dol_wk14,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk15 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk15))::numeric(19,1) END AS dol_wk15,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk16 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk16))::numeric(19,1) END AS dol_wk16,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk17 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk17))::numeric(19,1) END AS dol_wk17,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk18 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk18))::numeric(19,1) END AS dol_wk18,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk19 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk19))::numeric(19,1) END AS dol_wk19,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk20 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk20))::numeric(19,1) END AS dol_wk20,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk21 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk21))::numeric(19,1) END AS dol_wk21,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk22 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk22))::numeric(19,1) END AS dol_wk22,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk23 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk23))::numeric(19,1) END AS dol_wk23,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk24 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk24))::numeric(19,1) END AS dol_wk24,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk25 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk25))::numeric(19,1) END AS dol_wk25,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk26 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk26))::numeric(19,1) END AS dol_wk26,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk27 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk27))::numeric(19,1) END AS dol_wk27,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk28 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk28))::numeric(19,1) END AS dol_wk28,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk29 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk29))::numeric(19,1) END AS dol_wk29,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk30 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk30))::numeric(19,1) END AS dol_wk30,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk31 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk31))::numeric(19,1) END AS dol_wk31,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk32 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk32))::numeric(19,1) END AS dol_wk32,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk33 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk33))::numeric(19,1) END AS dol_wk33,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk34 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk34))::numeric(19,1) END AS dol_wk34,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk35 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk35))::numeric(19,1) END AS dol_wk35,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk36 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk36))::numeric(19,1) END AS dol_wk36,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk37 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk37))::numeric(19,1) END AS dol_wk37,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk38 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk38))::numeric(19,1) END AS dol_wk38,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk39 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk39))::numeric(19,1) END AS dol_wk39,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk40 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk40))::numeric(19,1) END AS dol_wk40,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk41 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk41))::numeric(19,1) END AS dol_wk41,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk42 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk42))::numeric(19,1) END AS dol_wk42,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk43 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk43))::numeric(19,1) END AS dol_wk43,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk44 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk44))::numeric(19,1) END AS dol_wk44,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk45 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk45))::numeric(19,1) END AS dol_wk45,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk46 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk46))::numeric(19,1) END AS dol_wk46,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk47 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk47))::numeric(19,1) END AS dol_wk47,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk48 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk48))::numeric(19,1) END AS dol_wk48,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk49 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk49))::numeric(19,1) END AS dol_wk49,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk50 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk50))::numeric(19,1) END AS dol_wk50,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk51 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk51))::numeric(19,1) END AS dol_wk51,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk52 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk52))::numeric(19,1) END AS dol_wk52,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk53 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk53))::numeric(19,1) END AS dol_wk53,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk54 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk54))::numeric(19,1) END AS dol_wk54,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk55 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk55))::numeric(19,1) END AS dol_wk55,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk56 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk56))::numeric(19,1) END AS dol_wk56,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk57 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk57))::numeric(19,1) END AS dol_wk57,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk58 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk58))::numeric(19,1) END AS dol_wk58,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk59 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk59))::numeric(19,1) END AS dol_wk59,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk60 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk60))::numeric(19,1) END AS dol_wk60,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk61 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk61))::numeric(19,1) END AS dol_wk61,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk62 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk62))::numeric(19,1) END AS dol_wk62,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk63 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk63))::numeric(19,1) END AS dol_wk63,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk64 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk64))::numeric(19,1) END AS dol_wk64,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk65 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk65))::numeric(19,1) END AS dol_wk65,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk66 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk66))::numeric(19,1) END AS dol_wk66,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk67 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk67))::numeric(19,1) END AS dol_wk67,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk68 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk68))::numeric(19,1) END AS dol_wk68,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk69 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk69))::numeric(19,1) END AS dol_wk69,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk70 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk70))::numeric(19,1) END AS dol_wk70,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk71 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk71))::numeric(19,1) END AS dol_wk71,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk72 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk72))::numeric(19,1) END AS dol_wk72,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk73 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk73))::numeric(19,1) END AS dol_wk73,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk74 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk74))::numeric(19,1) END AS dol_wk74,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk75 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk75))::numeric(19,1) END AS dol_wk75,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk76 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk76))::numeric(19,1) END AS dol_wk76,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk77 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk77))::numeric(19,1) END AS dol_wk77,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk78 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk78))::numeric(19,1) END AS dol_wk78,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk79 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk79))::numeric(19,1) END AS dol_wk79,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk80 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk80))::numeric(19,1) END AS dol_wk80,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk81 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk81))::numeric(19,1) END AS dol_wk81,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk82 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk82))::numeric(19,1) END AS dol_wk82,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk83 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk83))::numeric(19,1) END AS dol_wk83,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk84 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk84))::numeric(19,1) END AS dol_wk84,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk85 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk85))::numeric(19,1) END AS dol_wk85,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk86 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk86))::numeric(19,1) END AS dol_wk86,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk87 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk87))::numeric(19,1) END AS dol_wk87,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk88 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk88))::numeric(19,1) END AS dol_wk88,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk89 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk89))::numeric(19,1) END AS dol_wk89,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk90 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk90))::numeric(19,1) END AS dol_wk90,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk91 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk91))::numeric(19,1) END AS dol_wk91,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk92 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk92))::numeric(19,1) END AS dol_wk92,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk93 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk93))::numeric(19,1) END AS dol_wk93,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk94 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk94))::numeric(19,1) END AS dol_wk94,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk95 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk95))::numeric(19,1) END AS dol_wk95,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk96 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk96))::numeric(19,1) END AS dol_wk96,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk97 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk97))::numeric(19,1) END AS dol_wk97,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk98 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk98))::numeric(19,1) END AS dol_wk98,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk99 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk99))::numeric(19,1) END AS dol_wk99,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk100 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk100))::numeric(19,1) END AS dol_wk100,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk101 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk101))::numeric(19,1) END AS dol_wk101,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk102 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk102))::numeric(19,1) END AS dol_wk102,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk103 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk103))::numeric(19,1) END AS dol_wk103,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk104 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk104))::numeric(19,1) END AS dol_wk104,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk105 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk105))::numeric(19,1) END AS dol_wk105,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk106 = ''::varchar) THEN NULL::numeric(19,1) ELSE (btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.dol_wk106))::numeric(19,1) END AS dol_wk106,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_name) AS outlet_name,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_address) AS outlet_address,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_city) AS outlet_city,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_state) AS outlet_state,
        btrim(EXT_TR_DDDMD_WEEKLY_DOLLARS_src.outlet_zip) AS outlet_zip,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.row_id,
        EXT_TR_DDDMD_WEEKLY_DOLLARS_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_DOLLARS_src;

CREATE  VIEW teva_ingestion.EXT_TR_DDDMD_WEEKLY_UNITS AS
 SELECT btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.client_num) AS client_num,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.report_num) AS report_num,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.ims_outlet_code) AS ims_outlet_code,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.subcategory_code) AS subcategory_code,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.alt_seq_num) AS alt_seq_num,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.filler01) AS filler01,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.category_code) AS category_code,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.ims_product_code) AS ims_product_code,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.data_date) AS data_date,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk01 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk01))::int END AS qty_wk01,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk02 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk02))::int END AS qty_wk02,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk03 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk03))::int END AS qty_wk03,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk04 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk04))::int END AS qty_wk04,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk05 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk05))::int END AS qty_wk05,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk06 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk06))::int END AS qty_wk06,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk07 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk07))::int END AS qty_wk07,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk08 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk08))::int END AS qty_wk08,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk09 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk09))::int END AS qty_wk09,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk10 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk10))::int END AS qty_wk10,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk11 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk11))::int END AS qty_wk11,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk12 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk12))::int END AS qty_wk12,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk13 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk13))::int END AS qty_wk13,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk14 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk14))::int END AS qty_wk14,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk15 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk15))::int END AS qty_wk15,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk16 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk16))::int END AS qty_wk16,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk17 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk17))::int END AS qty_wk17,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk18 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk18))::int END AS qty_wk18,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk19 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk19))::int END AS qty_wk19,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk20 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk20))::int END AS qty_wk20,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk21 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk21))::int END AS qty_wk21,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk22 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk22))::int END AS qty_wk22,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk23 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk23))::int END AS qty_wk23,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk24 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk24))::int END AS qty_wk24,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk25 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk25))::int END AS qty_wk25,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk26 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk26))::int END AS qty_wk26,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk27 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk27))::int END AS qty_wk27,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk28 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk28))::int END AS qty_wk28,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk29 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk29))::int END AS qty_wk29,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk30 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk30))::int END AS qty_wk30,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk31 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk31))::int END AS qty_wk31,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk32 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk32))::int END AS qty_wk32,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk33 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk33))::int END AS qty_wk33,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk34 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk34))::int END AS qty_wk34,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk35 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk35))::int END AS qty_wk35,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk36 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk36))::int END AS qty_wk36,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk37 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk37))::int END AS qty_wk37,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk38 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk38))::int END AS qty_wk38,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk39 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk39))::int END AS qty_wk39,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk40 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk40))::int END AS qty_wk40,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk41 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk41))::int END AS qty_wk41,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk42 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk42))::int END AS qty_wk42,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk43 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk43))::int END AS qty_wk43,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk44 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk44))::int END AS qty_wk44,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk45 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk45))::int END AS qty_wk45,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk46 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk46))::int END AS qty_wk46,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk47 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk47))::int END AS qty_wk47,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk48 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk48))::int END AS qty_wk48,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk49 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk49))::int END AS qty_wk49,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk50 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk50))::int END AS qty_wk50,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk51 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk51))::int END AS qty_wk51,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk52 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk52))::int END AS qty_wk52,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk53 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk53))::int END AS qty_wk53,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk54 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk54))::int END AS qty_wk54,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk55 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk55))::int END AS qty_wk55,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk56 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk56))::int END AS qty_wk56,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk57 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk57))::int END AS qty_wk57,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk58 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk58))::int END AS qty_wk58,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk59 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk59))::int END AS qty_wk59,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk60 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk60))::int END AS qty_wk60,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk61 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk61))::int END AS qty_wk61,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk62 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk62))::int END AS qty_wk62,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk63 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk63))::int END AS qty_wk63,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk64 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk64))::int END AS qty_wk64,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk65 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk65))::int END AS qty_wk65,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk66 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk66))::int END AS qty_wk66,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk67 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk67))::int END AS qty_wk67,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk68 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk68))::int END AS qty_wk68,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk69 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk69))::int END AS qty_wk69,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk70 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk70))::int END AS qty_wk70,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk71 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk71))::int END AS qty_wk71,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk72 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk72))::int END AS qty_wk72,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk73 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk73))::int END AS qty_wk73,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk74 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk74))::int END AS qty_wk74,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk75 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk75))::int END AS qty_wk75,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk76 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk76))::int END AS qty_wk76,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk77 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk77))::int END AS qty_wk77,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk78 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk78))::int END AS qty_wk78,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk79 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk79))::int END AS qty_wk79,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk80 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk80))::int END AS qty_wk80,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk81 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk81))::int END AS qty_wk81,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk82 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk82))::int END AS qty_wk82,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk83 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk83))::int END AS qty_wk83,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk84 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk84))::int END AS qty_wk84,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk85 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk85))::int END AS qty_wk85,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk86 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk86))::int END AS qty_wk86,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk87 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk87))::int END AS qty_wk87,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk88 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk88))::int END AS qty_wk88,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk89 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk89))::int END AS qty_wk89,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk90 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk90))::int END AS qty_wk90,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk91 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk91))::int END AS qty_wk91,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk92 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk92))::int END AS qty_wk92,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk93 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk93))::int END AS qty_wk93,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk94 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk94))::int END AS qty_wk94,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk95 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk95))::int END AS qty_wk95,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk96 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk96))::int END AS qty_wk96,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk97 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk97))::int END AS qty_wk97,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk98 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk98))::int END AS qty_wk98,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk99 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk99))::int END AS qty_wk99,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk100 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk100))::int END AS qty_wk100,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk101 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk101))::int END AS qty_wk101,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk102 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk102))::int END AS qty_wk102,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk103 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk103))::int END AS qty_wk103,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk104 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk104))::int END AS qty_wk104,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk105 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk105))::int END AS qty_wk105,
        CASE WHEN (EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk106 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.qty_wk106))::int END AS qty_wk106,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_name) AS outlet_name,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_address) AS outlet_address,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_city) AS outlet_city,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_state) AS outlet_state,
        btrim(EXT_TR_DDDMD_WEEKLY_UNITS_src.outlet_zip) AS outlet_zip,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.batch_id,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.row_id,
        EXT_TR_DDDMD_WEEKLY_UNITS_src.update_ts
 FROM teva_ingestion.EXT_TR_DDDMD_WEEKLY_UNITS_src;

CREATE  VIEW teva_ingestion.EXT_ONC_SALES_QUOTAS AS
 SELECT btrim(EXT_ONC_SALES_QUOTAS_src.TIME_PERIOD) AS TIME_PERIOD,
        btrim(EXT_ONC_SALES_QUOTAS_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ONC_SALES_QUOTAS_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ONC_SALES_QUOTAS_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ONC_SALES_QUOTAS_src.QUOTA_QTY = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_SALES_QUOTAS_src.QUOTA_QTY))::int END AS QUOTA_QTY,
        CASE WHEN (EXT_ONC_SALES_QUOTAS_src.QUOTA_DOL = ''::varchar) THEN NULL::numeric(19,2) ELSE (btrim(EXT_ONC_SALES_QUOTAS_src.QUOTA_DOL))::numeric(19,2) END AS QUOTA_DOL,
        CASE WHEN (EXT_ONC_SALES_QUOTAS_src.QUOTA_STRENGTH_UNIT = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ONC_SALES_QUOTAS_src.QUOTA_STRENGTH_UNIT))::int END AS QUOTA_STRENGTH_UNIT,
        EXT_ONC_SALES_QUOTAS_src.batch_id,
        EXT_ONC_SALES_QUOTAS_src.row_id,
        EXT_ONC_SALES_QUOTAS_src.update_ts
 FROM teva_ingestion.EXT_ONC_SALES_QUOTAS_src;

CREATE  VIEW teva_ingestion.MDM_ADDRESS AS
 SELECT btrim(MDM_ADDRESS_src.TVCMID) AS TVCMID,
        btrim(MDM_ADDRESS_src.ADDRESS_ID) AS ADDRESS_ID,
        btrim(MDM_ADDRESS_src.ADDRESS_TYPE) AS ADDRESS_TYPE,
        btrim(MDM_ADDRESS_src.ADDRESS_TYPE_NAME) AS ADDRESS_TYPE_NAME,
        btrim(MDM_ADDRESS_src.ADDRESS_LINE_1) AS ADDRESS_LINE_1,
        btrim(MDM_ADDRESS_src.ADDRESS_LINE_2) AS ADDRESS_LINE_2,
        btrim(MDM_ADDRESS_src.COUNTY) AS COUNTY,
        btrim(MDM_ADDRESS_src.CITY) AS CITY,
        btrim(MDM_ADDRESS_src.STATE) AS STATE,
        btrim(MDM_ADDRESS_src.STATE_NAME) AS STATE_NAME,
        btrim(MDM_ADDRESS_src.COUNTRY_CODE) AS COUNTRY_CODE,
        btrim(MDM_ADDRESS_src.COUNTRY_NAME) AS COUNTRY_NAME,
        btrim(MDM_ADDRESS_src.ZIP5_POSTAL_CODE) AS ZIP5_POSTAL_CODE,
        btrim(MDM_ADDRESS_src.ZIP4_POSTAL_EXTENSION_CODE) AS ZIP4_POSTAL_EXTENSION_CODE,
        btrim(MDM_ADDRESS_src.ADDRESS_STATUS) AS ADDRESS_STATUS,
        btrim(MDM_ADDRESS_src.ADDRESS_STATUS_NAME) AS ADDRESS_STATUS_NAME,
        btrim(MDM_ADDRESS_src.ADDRESS_EFFECTIVE_DATE) AS ADDRESS_EFFECTIVE_DATE,
        btrim(MDM_ADDRESS_src.MSA_CBSA) AS MSA_CBSA,
        btrim(MDM_ADDRESS_src.FIPS_STATE_CODE) AS FIPS_STATE_CODE,
        btrim(MDM_ADDRESS_src.FIPS_STATE_DESCRIPTION) AS FIPS_STATE_DESCRIPTION,
        btrim(MDM_ADDRESS_src.FIPS_COUNTY_CODE) AS FIPS_COUNTY_CODE,
        btrim(MDM_ADDRESS_src.FIPS_COUNTY_DESCRIPTION) AS FIPS_COUNTY_DESCRIPTION,
        btrim(MDM_ADDRESS_src.DELIVERABILITY_CONFIDENCE) AS DELIVERABILITY_CONFIDENCE,
        btrim(MDM_ADDRESS_src.ADDRESS_SETTING_TYPE_CODE) AS ADDRESS_SETTING_TYPE_CODE,
        btrim(MDM_ADDRESS_src.ADDRESS_SETTING_TYPE_DESCRIPTION) AS ADDRESS_SETTING_TYPE_DESCRIPTION,
        btrim(MDM_ADDRESS_src.ADDRESS_CATEGORY_CODE) AS ADDRESS_CATEGORY_CODE,
        btrim(MDM_ADDRESS_src.ADDRESS_CATEGORY_DESCRIPTION) AS ADDRESS_CATEGORY_DESCRIPTION,
        btrim(MDM_ADDRESS_src.ADDRESS_LATITUDE) AS ADDRESS_LATITUDE,
        btrim(MDM_ADDRESS_src.ADDRESS_LONGITUDE) AS ADDRESS_LONGITUDE,
        btrim(MDM_ADDRESS_src.POSTAL_BARCODE) AS POSTAL_BARCODE,
        btrim(MDM_ADDRESS_src.SINGLE_ADDRESS_INDICATOR) AS SINGLE_ADDRESS_INDICATOR,
        btrim(MDM_ADDRESS_src.PRACTICE_LOCATION_CONFIDENCE_INDICATOR) AS PRACTICE_LOCATION_CONFIDENCE_INDICATOR,
        btrim(MDM_ADDRESS_src.PRACTICE_LOCATION_RANK) AS PRACTICE_LOCATION_RANK,
        btrim(MDM_ADDRESS_src.VALIDATION_MESSAGE) AS VALIDATION_MESSAGE,
        btrim(MDM_ADDRESS_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_ADDRESS_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_ADDRESS_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_ADDRESS_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_ADDRESS_src.batch_id,
        MDM_ADDRESS_src.row_id,
        MDM_ADDRESS_src.update_ts
 FROM teva_ingestion.MDM_ADDRESS_src;

CREATE  VIEW teva_ingestion.MDM_ADDRESS_LINK AS
 SELECT btrim(MDM_ADDRESS_LINK_src.TVCMID) AS TVCMID,
        btrim(MDM_ADDRESS_LINK_src.ADDRESS_ID) AS ADDRESS_ID,
        btrim(MDM_ADDRESS_LINK_src.DSP_ID) AS DSP_ID,
        btrim(MDM_ADDRESS_LINK_src.DSP_HCE_ID) AS DSP_HCE_ID,
        btrim(MDM_ADDRESS_LINK_src.DSP_ADDRESS_ID) AS DSP_ADDRESS_ID,
        MDM_ADDRESS_LINK_src.batch_id,
        MDM_ADDRESS_LINK_src.row_id,
        MDM_ADDRESS_LINK_src.update_ts
 FROM teva_ingestion.MDM_ADDRESS_LINK_src;

CREATE  VIEW teva_ingestion.MDM_ALTERNATE_ID AS
 SELECT btrim(MDM_ALTERNATE_ID_src.TVCMID) AS TVCMID,
        btrim(MDM_ALTERNATE_ID_src.ALTERNATE_ID_TYPE) AS ALTERNATE_ID_TYPE,
        btrim(MDM_ALTERNATE_ID_src.ALTERNATE_ID_TYPE_NAME) AS ALTERNATE_ID_TYPE_NAME,
        btrim(MDM_ALTERNATE_ID_src.ALTERNATE_ID_VALUE) AS ALTERNATE_ID_VALUE,
        btrim(MDM_ALTERNATE_ID_src.STATE) AS STATE,
        btrim(MDM_ALTERNATE_ID_src.STATE_NAME) AS STATE_NAME,
        btrim(MDM_ALTERNATE_ID_src.IDENTIFIER_CATEGORY) AS IDENTIFIER_CATEGORY,
        btrim(MDM_ALTERNATE_ID_src.STATUS) AS STATUS,
        btrim(MDM_ALTERNATE_ID_src.STATUS_NAME) AS STATUS_NAME,
        btrim(MDM_ALTERNATE_ID_src.SOURCE_DEACTIVATION_REASON_CODE) AS SOURCE_DEACTIVATION_REASON_CODE,
        btrim(MDM_ALTERNATE_ID_src.SOURCE_DEACTIVATION_REASON_DESCRIPTION) AS SOURCE_DEACTIVATION_REASON_DESCRIPTION,
        btrim(MDM_ALTERNATE_ID_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_ALTERNATE_ID_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_ALTERNATE_ID_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_ALTERNATE_ID_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_ALTERNATE_ID_src.batch_id,
        MDM_ALTERNATE_ID_src.row_id,
        MDM_ALTERNATE_ID_src.update_ts
 FROM teva_ingestion.MDM_ALTERNATE_ID_src;

CREATE  VIEW teva_ingestion.MDM_ALTERNATE_NAME AS
 SELECT btrim(MDM_ALTERNATE_NAME_src.TVCMID) AS TVCMID,
        btrim(MDM_ALTERNATE_NAME_src.NAME_TYPE) AS NAME_TYPE,
        btrim(MDM_ALTERNATE_NAME_src.NAME_TYPE_NAME) AS NAME_TYPE_NAME,
        btrim(MDM_ALTERNATE_NAME_src.NAME_VALUE) AS NAME_VALUE,
        btrim(MDM_ALTERNATE_NAME_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_ALTERNATE_NAME_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_ALTERNATE_NAME_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_ALTERNATE_NAME_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_ALTERNATE_NAME_src.batch_id,
        MDM_ALTERNATE_NAME_src.row_id,
        MDM_ALTERNATE_NAME_src.update_ts
 FROM teva_ingestion.MDM_ALTERNATE_NAME_src;

CREATE  VIEW teva_ingestion.MDM_COMMUNICATION AS
 SELECT btrim(MDM_COMMUNICATION_src.TVCMID) AS TVCMID,
        btrim(MDM_COMMUNICATION_src.ADDRESS_ID) AS ADDRESS_ID,
        btrim(MDM_COMMUNICATION_src.COMMUNICATION_TYPE) AS COMMUNICATION_TYPE,
        btrim(MDM_COMMUNICATION_src.COMMUNICATION_TYPE_NAME) AS COMMUNICATION_TYPE_NAME,
        btrim(MDM_COMMUNICATION_src.COMMUNICATION_VALUE) AS COMMUNICATION_VALUE,
        btrim(MDM_COMMUNICATION_src.STATUS_CODE) AS STATUS_CODE,
        btrim(MDM_COMMUNICATION_src.STATUS_NAME) AS STATUS_NAME,
        btrim(MDM_COMMUNICATION_src.EFFECTIVE_START_DATE) AS EFFECTIVE_START_DATE,
        btrim(MDM_COMMUNICATION_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_COMMUNICATION_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_COMMUNICATION_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_COMMUNICATION_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_COMMUNICATION_src.batch_id,
        MDM_COMMUNICATION_src.row_id,
        MDM_COMMUNICATION_src.update_ts
 FROM teva_ingestion.MDM_COMMUNICATION_src;

CREATE  VIEW teva_ingestion.MDM_DEA_ADDRESS AS
 SELECT btrim(MDM_DEA_ADDRESS_src.TVCMID) AS TVCMID,
        btrim(MDM_DEA_ADDRESS_src.ADDRESS_ID) AS ADDRESS_ID,
        btrim(MDM_DEA_ADDRESS_src.DEA_NUMBER) AS DEA_NUMBER,
        btrim(MDM_DEA_ADDRESS_src.BUSINESS_ACTIVITY_CODE) AS BUSINESS_ACTIVITY_CODE,
        btrim(MDM_DEA_ADDRESS_src.BUSINESS_ACTIVITY_DESCRIPTION) AS BUSINESS_ACTIVITY_DESCRIPTION,
        btrim(MDM_DEA_ADDRESS_src.SUB_BUSINESS_ACTIVITY_CODE) AS SUB_BUSINESS_ACTIVITY_CODE,
        btrim(MDM_DEA_ADDRESS_src.SUB_BUSINESS_ACTIVITY_DESCRIPTION) AS SUB_BUSINESS_ACTIVITY_DESCRIPTION,
        btrim(MDM_DEA_ADDRESS_src.DEA_SCHEDULE_CLASS_CODE) AS DEA_SCHEDULE_CLASS_CODE,
        btrim(MDM_DEA_ADDRESS_src.DEA_STATUS_CODE) AS DEA_STATUS_CODE,
        btrim(MDM_DEA_ADDRESS_src.DEA_STATUS_DESCRIPTION) AS DEA_STATUS_DESCRIPTION,
        btrim(MDM_DEA_ADDRESS_src.DEA_EXPIRATION_DATE) AS DEA_EXPIRATION_DATE,
        btrim(MDM_DEA_ADDRESS_src.DEA_DEACTIVATION_REASON_CODE) AS DEA_DEACTIVATION_REASON_CODE,
        btrim(MDM_DEA_ADDRESS_src.DEA_DEACTIVATION_REASON_DESCRIPTION) AS DEA_DEACTIVATION_REASON_DESCRIPTION,
        btrim(MDM_DEA_ADDRESS_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_DEA_ADDRESS_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_DEA_ADDRESS_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_DEA_ADDRESS_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_DEA_ADDRESS_src.batch_id,
        MDM_DEA_ADDRESS_src.row_id,
        MDM_DEA_ADDRESS_src.update_ts
 FROM teva_ingestion.MDM_DEA_ADDRESS_src;

CREATE  VIEW teva_ingestion.MDM_EMAIL_PREF AS
 SELECT btrim(MDM_EMAIL_PREF_src.TVCMID) AS TVCMID,
        btrim(MDM_EMAIL_PREF_src.EMAIL) AS EMAIL,
        btrim(MDM_EMAIL_PREF_src.VALUE) AS VALUE,
        btrim(MDM_EMAIL_PREF_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(MDM_EMAIL_PREF_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_EMAIL_PREF_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_EMAIL_PREF_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_EMAIL_PREF_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_EMAIL_PREF_src.batch_id,
        MDM_EMAIL_PREF_src.row_id,
        MDM_EMAIL_PREF_src.update_ts
 FROM teva_ingestion.MDM_EMAIL_PREF_src;

CREATE  VIEW teva_ingestion.MDM_HCO_TEVA_FLAG AS
 SELECT btrim(MDM_HCO_TEVA_FLAG_src.TVCMID) AS TVCMID,
        btrim(MDM_HCO_TEVA_FLAG_src.FLAG_TYPE) AS FLAG_TYPE,
        btrim(MDM_HCO_TEVA_FLAG_src.FLAG_TYPE_NAME) AS FLAG_TYPE_NAME,
        btrim(MDM_HCO_TEVA_FLAG_src.FLAG_VALUE) AS FLAG_VALUE,
        btrim(MDM_HCO_TEVA_FLAG_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(MDM_HCO_TEVA_FLAG_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_HCO_TEVA_FLAG_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_HCO_TEVA_FLAG_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_HCO_TEVA_FLAG_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_HCO_TEVA_FLAG_src.batch_id,
        MDM_HCO_TEVA_FLAG_src.row_id,
        MDM_HCO_TEVA_FLAG_src.update_ts
 FROM teva_ingestion.MDM_HCO_TEVA_FLAG_src;

CREATE  VIEW teva_ingestion.MDM_HCP AS
 SELECT btrim(MDM_HCP_src.TVCMID) AS TVCMID,
        CASE WHEN (MDM_HCP_src.IMS_HCE_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_HCP_src.IMS_HCE_ID))::int END AS IMS_HCE_ID,
        btrim(MDM_HCP_src.IMS_PRESCRIBER_ID) AS IMS_PRESCRIBER_ID,
        btrim(MDM_HCP_src.FIRST_NAME) AS FIRST_NAME,
        btrim(MDM_HCP_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(MDM_HCP_src.LAST_NAME) AS LAST_NAME,
        btrim(MDM_HCP_src.PREFIX) AS PREFIX,
        btrim(MDM_HCP_src.SUFFIX) AS SUFFIX,
        btrim(MDM_HCP_src.SUFFIX_NAME) AS SUFFIX_NAME,
        btrim(MDM_HCP_src.SUB_TYPE) AS SUB_TYPE,
        btrim(MDM_HCP_src.SUB_TYPE_NAME) AS SUB_TYPE_NAME,
        btrim(MDM_HCP_src.HEALTHCARE_PROFESSIONAL_STATUS_CODE) AS HEALTHCARE_PROFESSIONAL_STATUS_CODE,
        btrim(MDM_HCP_src.HEALTHCARE_PROFESSIONAL_STATUS_NAME) AS HEALTHCARE_PROFESSIONAL_STATUS_NAME,
        btrim(MDM_HCP_src.YEAR_OF_BIRTH) AS YEAR_OF_BIRTH,
        btrim(MDM_HCP_src.DATE_OF_DEATH) AS DATE_OF_DEATH,
        btrim(MDM_HCP_src.GENDER_CODE) AS GENDER_CODE,
        btrim(MDM_HCP_src.GENDER_NAME) AS GENDER_NAME,
        btrim(MDM_HCP_src.TEVA_SPECIALTY_CODE) AS TEVA_SPECIALTY_CODE,
        btrim(MDM_HCP_src.TEVA_SPECIALTY_NAME) AS TEVA_SPECIALTY_NAME,
        btrim(MDM_HCP_src.LOGICAL_DELETION_DATE) AS LOGICAL_DELETION_DATE,
        btrim(MDM_HCP_src.HCE_INSERT_DATE) AS HCE_INSERT_DATE,
        btrim(MDM_HCP_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_HCP_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_HCP_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_HCP_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_HCP_src.batch_id,
        MDM_HCP_src.row_id,
        MDM_HCP_src.update_ts
 FROM teva_ingestion.MDM_HCP_src;

CREATE  VIEW teva_ingestion.MDM_HCP_TEVA_FLAG AS
 SELECT btrim(MDM_HCP_TEVA_FLAG_src.TVCMID) AS TVCMID,
        btrim(MDM_HCP_TEVA_FLAG_src.FLAG_TYPE) AS FLAG_TYPE,
        btrim(MDM_HCP_TEVA_FLAG_src.FLAG_TYPE_NAME) AS FLAG_TYPE_NAME,
        btrim(MDM_HCP_TEVA_FLAG_src.FLAG_VALUE) AS FLAG_VALUE,
        btrim(MDM_HCP_TEVA_FLAG_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(MDM_HCP_TEVA_FLAG_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_HCP_TEVA_FLAG_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_HCP_TEVA_FLAG_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_HCP_TEVA_FLAG_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_HCP_TEVA_FLAG_src.batch_id,
        MDM_HCP_TEVA_FLAG_src.row_id,
        MDM_HCP_TEVA_FLAG_src.update_ts
 FROM teva_ingestion.MDM_HCP_TEVA_FLAG_src;

CREATE  VIEW teva_ingestion.MDM_IMS_FLAG AS
 SELECT btrim(MDM_IMS_FLAG_src.TVCMID) AS TVCMID,
        btrim(MDM_IMS_FLAG_src.FLAG_TYPE) AS FLAG_TYPE,
        btrim(MDM_IMS_FLAG_src.FLAG_TYPE_NAME) AS FLAG_TYPE_NAME,
        btrim(MDM_IMS_FLAG_src.FLAG_VALUE) AS FLAG_VALUE,
        btrim(MDM_IMS_FLAG_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(MDM_IMS_FLAG_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_IMS_FLAG_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_IMS_FLAG_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_IMS_FLAG_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_IMS_FLAG_src.batch_id,
        MDM_IMS_FLAG_src.row_id,
        MDM_IMS_FLAG_src.update_ts
 FROM teva_ingestion.MDM_IMS_FLAG_src;

CREATE  VIEW teva_ingestion.MDM_LICENSE AS
 SELECT btrim(MDM_LICENSE_src.TVCMID) AS TVCMID,
        btrim(MDM_LICENSE_src.HCE_REGULATION_ID) AS HCE_REGULATION_ID,
        CASE WHEN (MDM_LICENSE_src.LICENSE_TYPE_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_LICENSE_src.LICENSE_TYPE_ID))::int END AS LICENSE_TYPE_ID,
        btrim(MDM_LICENSE_src.LICENSE_TYPE_NAME) AS LICENSE_TYPE_NAME,
        btrim(MDM_LICENSE_src.AUTHORIZATION_NUMBER) AS AUTHORIZATION_NUMBER,
        btrim(MDM_LICENSE_src.PROFESSION_CODE) AS PROFESSION_CODE,
        btrim(MDM_LICENSE_src.STATE) AS STATE,
        btrim(MDM_LICENSE_src.STATE_NAME) AS STATE_NAME,
        CASE WHEN (MDM_LICENSE_src.STATE_BOARD_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_LICENSE_src.STATE_BOARD_ID))::int END AS STATE_BOARD_ID,
        btrim(MDM_LICENSE_src.STATE_BOARD_NAME) AS STATE_BOARD_NAME,
        CASE WHEN (MDM_LICENSE_src.LICENSE_PRIVILEGE_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_LICENSE_src.LICENSE_PRIVILEGE_ID))::int END AS LICENSE_PRIVILEGE_ID,
        btrim(MDM_LICENSE_src.LICENSE_PRIVILEGE) AS LICENSE_PRIVILEGE,
        btrim(MDM_LICENSE_src.LICENSE_CERTIFICATION_CODE) AS LICENSE_CERTIFICATION_CODE,
        btrim(MDM_LICENSE_src.LICENSE_CERTIFICATION_NAME) AS LICENSE_CERTIFICATION_NAME,
        CASE WHEN (MDM_LICENSE_src.LICENSE_TYPE_PRIVILEGE_RANK = ''::varchar) THEN NULL::int ELSE (btrim(MDM_LICENSE_src.LICENSE_TYPE_PRIVILEGE_RANK))::int END AS LICENSE_TYPE_PRIVILEGE_RANK,
        btrim(MDM_LICENSE_src.LICENSE_STATUS_CODE) AS LICENSE_STATUS_CODE,
        btrim(MDM_LICENSE_src.LICENSE_STATUS_DESCRIPTION) AS LICENSE_STATUS_DESCRIPTION,
        btrim(MDM_LICENSE_src.LICENSE_EFFECTIVE_DATE) AS LICENSE_EFFECTIVE_DATE,
        btrim(MDM_LICENSE_src.LICENSE_EXPIRATION_DATE) AS LICENSE_EXPIRATION_DATE,
        btrim(MDM_LICENSE_src.LICENSE_DEACTIVATION_REASON_CODE) AS LICENSE_DEACTIVATION_REASON_CODE,
        btrim(MDM_LICENSE_src.LICENSE_DEACTIVATION_REASON_DESCRIPTION) AS LICENSE_DEACTIVATION_REASON_DESCRIPTION,
        btrim(MDM_LICENSE_src.RECORD_TYPE) AS RECORD_TYPE,
        btrim(MDM_LICENSE_src.RECORD_TYPE_NAME) AS RECORD_TYPE_NAME,
        btrim(MDM_LICENSE_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_LICENSE_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_LICENSE_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_LICENSE_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_LICENSE_src.batch_id,
        MDM_LICENSE_src.row_id,
        MDM_LICENSE_src.update_ts
 FROM teva_ingestion.MDM_LICENSE_src;

CREATE  VIEW teva_ingestion.MDM_MARKETING_CHANNEL AS
 SELECT btrim(MDM_MARKETING_CHANNEL_src.TVCMID) AS TVCMID,
        btrim(MDM_MARKETING_CHANNEL_src.CHANNEL) AS CHANNEL,
        btrim(MDM_MARKETING_CHANNEL_src.VALUE) AS VALUE,
        btrim(MDM_MARKETING_CHANNEL_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(MDM_MARKETING_CHANNEL_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_MARKETING_CHANNEL_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_MARKETING_CHANNEL_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_MARKETING_CHANNEL_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_MARKETING_CHANNEL_src.batch_id,
        MDM_MARKETING_CHANNEL_src.row_id,
        MDM_MARKETING_CHANNEL_src.update_ts
 FROM teva_ingestion.MDM_MARKETING_CHANNEL_src;

CREATE  VIEW teva_ingestion.MDM_PROFESSIONAL AS
 SELECT btrim(MDM_PROFESSIONAL_src.TVCMID) AS TVCMID,
        btrim(MDM_PROFESSIONAL_src.PROFESSION_CODE) AS PROFESSION_CODE,
        btrim(MDM_PROFESSIONAL_src.PROFESSION_CODE_NAME) AS PROFESSION_CODE_NAME,
        btrim(MDM_PROFESSIONAL_src.PROFESSION_RANK) AS PROFESSION_RANK,
        btrim(MDM_PROFESSIONAL_src.STATUS) AS STATUS,
        btrim(MDM_PROFESSIONAL_src.PROFESSION_STATUS_NAME) AS PROFESSION_STATUS_NAME,
        btrim(MDM_PROFESSIONAL_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_PROFESSIONAL_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_PROFESSIONAL_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_PROFESSIONAL_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_PROFESSIONAL_src.batch_id,
        MDM_PROFESSIONAL_src.row_id,
        MDM_PROFESSIONAL_src.update_ts
 FROM teva_ingestion.MDM_PROFESSIONAL_src;

CREATE  VIEW teva_ingestion.MDM_RAW_DEA AS
 SELECT btrim(MDM_RAW_DEA_src.TVCMID) AS TVCMID,
        btrim(MDM_RAW_DEA_src.IMS_ID) AS IMS_ID,
        btrim(MDM_RAW_DEA_src.DEA_NUMBER) AS DEA_NUMBER,
        btrim(MDM_RAW_DEA_src.NAME) AS NAME,
        btrim(MDM_RAW_DEA_src.ADDITIONAL_COMPANY_INFO) AS ADDITIONAL_COMPANY_INFO,
        btrim(MDM_RAW_DEA_src.ADDRESS_LINE1) AS ADDRESS_LINE1,
        btrim(MDM_RAW_DEA_src.ADDRESS_LINE2) AS ADDRESS_LINE2,
        btrim(MDM_RAW_DEA_src.CITY) AS CITY,
        btrim(MDM_RAW_DEA_src.STATE) AS STATE,
        btrim(MDM_RAW_DEA_src.STATE_NAME) AS STATE_NAME,
        btrim(MDM_RAW_DEA_src.ZIP) AS ZIP,
        btrim(MDM_RAW_DEA_src.BUSINESS_ACTIVITY_CODE) AS BUSINESS_ACTIVITY_CODE,
        btrim(MDM_RAW_DEA_src.DRUG_SCHEDULES) AS DRUG_SCHEDULES,
        btrim(MDM_RAW_DEA_src.EXPIRATION_DATE) AS EXPIRATION_DATE,
        btrim(MDM_RAW_DEA_src.BUSINESS_ACTIVITY_SUB_CODE) AS BUSINESS_ACTIVITY_SUB_CODE,
        btrim(MDM_RAW_DEA_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_RAW_DEA_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_RAW_DEA_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_RAW_DEA_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_RAW_DEA_src.batch_id,
        MDM_RAW_DEA_src.row_id,
        MDM_RAW_DEA_src.update_ts
 FROM teva_ingestion.MDM_RAW_DEA_src;

CREATE  VIEW teva_ingestion.MDM_REGULATION AS
 SELECT CASE WHEN (MDM_REGULATION_src.STATE_LICENSE_TYPE_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_REGULATION_src.STATE_LICENSE_TYPE_ID))::int END AS STATE_LICENSE_TYPE_ID,
        btrim(MDM_REGULATION_src.STATE_LICENSE_TYPE_NAME) AS STATE_LICENSE_TYPE_NAME,
        CASE WHEN (MDM_REGULATION_src.STATE_PRIVILEGE_TYPE_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_REGULATION_src.STATE_PRIVILEGE_TYPE_ID))::int END AS STATE_PRIVILEGE_TYPE_ID,
        btrim(MDM_REGULATION_src.STATE_LICENSE_PRIVILEGE_TYPE_NAME) AS STATE_LICENSE_PRIVILEGE_TYPE_NAME,
        CASE WHEN (MDM_REGULATION_src.STATE_LICENSE_PRIVILEGE_TYPE_RANK = ''::varchar) THEN NULL::int ELSE (btrim(MDM_REGULATION_src.STATE_LICENSE_PRIVILEGE_TYPE_RANK))::int END AS STATE_LICENSE_PRIVILEGE_TYPE_RANK,
        btrim(MDM_REGULATION_src.STATE_CODE) AS STATE_CODE,
        btrim(MDM_REGULATION_src.STATE_NAME) AS STATE_NAME,
        CASE WHEN (MDM_REGULATION_src.STATE_BOARD_ID = ''::varchar) THEN NULL::int ELSE (btrim(MDM_REGULATION_src.STATE_BOARD_ID))::int END AS STATE_BOARD_ID,
        btrim(MDM_REGULATION_src.STATE_BOARD_NAME) AS STATE_BOARD_NAME,
        btrim(MDM_REGULATION_src.CERTIFICATION_CODE) AS CERTIFICATION_CODE,
        btrim(MDM_REGULATION_src.REQUIRED_SAMPLE_NON_CTRL) AS REQUIRED_SAMPLE_NON_CTRL,
        btrim(MDM_REGULATION_src.REQUIRED_SAMPLE_CTRL) AS REQUIRED_SAMPLE_CTRL,
        btrim(MDM_REGULATION_src.RECEIVED_SAMPLE_NON_CTRL) AS RECEIVED_SAMPLE_NON_CTRL,
        btrim(MDM_REGULATION_src.RECEIVED_SAMPLE_CTRL) AS RECEIVED_SAMPLE_CTRL,
        btrim(MDM_REGULATION_src.DISTRIBUTED_SAMPLE_NON_CTRL) AS DISTRIBUTED_SAMPLE_NON_CTRL,
        btrim(MDM_REGULATION_src.DISTRIBUTED_SAMPLE_CTRL) AS DISTRIBUTED_SAMPLE_CTRL,
        btrim(MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_I_FLAG) AS SAMPLE_DRUG_SCHEDULE_I_FLAG,
        btrim(MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_II_FLAG) AS SAMPLE_DRUG_SCHEDULE_II_FLAG,
        btrim(MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_III_FLAG) AS SAMPLE_DRUG_SCHEDULE_III_FLAG,
        btrim(MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_IV_FLAG) AS SAMPLE_DRUG_SCHEDULE_IV_FLAG,
        btrim(MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_V_FLAG) AS SAMPLE_DRUG_SCHEDULE_V_FLAG,
        btrim(MDM_REGULATION_src.SAMPLE_DRUG_SCHEDULE_VI_FLAG) AS SAMPLE_DRUG_SCHEDULE_VI_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_NON_CTRL_FLAG) AS PRESCRIBER_NON_CTRL_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_APP_REQUIRED_NON_CTRL_FLAG) AS PRESCRIBER_APP_REQUIRED_NON_CTRL_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_CTRL_FLAG) AS PRESCRIBER_CTRL_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_APP_REQUIRED_CTRL_FLAG) AS PRESCRIBER_APP_REQUIRED_CTRL_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_I_FLAG) AS PRESCRIBER_DRUG_SCHEDULE_I_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_II_FLAG) AS PRESCRIBER_DRUG_SCHEDULE_II_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_III_FLAG) AS PRESCRIBER_DRUG_SCHEDULE_III_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_IV_FLAG) AS PRESCRIBER_DRUG_SCHEDULE_IV_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_V_FLAG) AS PRESCRIBER_DRUG_SCHEDULE_V_FLAG,
        btrim(MDM_REGULATION_src.PRESCRIBER_DRUG_SCHEDULE_VI_FLAG) AS PRESCRIBER_DRUG_SCHEDULE_VI_FLAG,
        btrim(MDM_REGULATION_src.SUPERVISORY_RELATIONSHIP_CODE_NON_CTRL) AS SUPERVISORY_RELATIONSHIP_CODE_NON_CTRL,
        btrim(MDM_REGULATION_src.SUPERVISORY_RELATIONSHIP_CODE_CTRL) AS SUPERVISORY_RELATIONSHIP_CODE_CTRL,
        btrim(MDM_REGULATION_src.COLLABORATIVE_NON_CTRL) AS COLLABORATIVE_NON_CTRL,
        btrim(MDM_REGULATION_src.COLLABORATIVE_CTRL) AS COLLABORATIVE_CTRL,
        btrim(MDM_REGULATION_src.INCLUSIONARY) AS INCLUSIONARY,
        btrim(MDM_REGULATION_src.EXCLUSIONARY) AS EXCLUSIONARY,
        btrim(MDM_REGULATION_src.DELEGATION_NON_CTRL) AS DELEGATION_NON_CTRL,
        btrim(MDM_REGULATION_src.DELEGATION_CTRL) AS DELEGATION_CTRL,
        btrim(MDM_REGULATION_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_REGULATION_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_REGULATION_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_REGULATION_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_REGULATION_src.batch_id,
        MDM_REGULATION_src.row_id,
        MDM_REGULATION_src.update_ts
 FROM teva_ingestion.MDM_REGULATION_src;

CREATE  VIEW teva_ingestion.MDM_RELATIONSHIP AS
 SELECT btrim(MDM_RELATIONSHIP_src.HIERARCHY_CODE) AS HIERARCHY_CODE,
        btrim(MDM_RELATIONSHIP_src.HIERARCHY_NAME) AS HIERARCHY_NAME,
        btrim(MDM_RELATIONSHIP_src.RELATIONSHIP_TYPE_CODE) AS RELATIONSHIP_TYPE_CODE,
        btrim(MDM_RELATIONSHIP_src.RELATIONSHIP_TYPE_NAME) AS RELATIONSHIP_TYPE_NAME,
        btrim(MDM_RELATIONSHIP_src.PARENT_TVCMID) AS PARENT_TVCMID,
        btrim(MDM_RELATIONSHIP_src.CHILD_TVCMID) AS CHILD_TVCMID,
        btrim(MDM_RELATIONSHIP_src.RELATIONSHIP_STATUS_CODE) AS RELATIONSHIP_STATUS_CODE,
        btrim(MDM_RELATIONSHIP_src.RELATIONSHIP_STATUS_NAME) AS RELATIONSHIP_STATUS_NAME,
        btrim(MDM_RELATIONSHIP_src.RELATIONSHIP_START_DATE) AS RELATIONSHIP_START_DATE,
        btrim(MDM_RELATIONSHIP_src.RELATIONSHIP_END_DATE) AS RELATIONSHIP_END_DATE,
        btrim(MDM_RELATIONSHIP_src.NOTES) AS NOTES,
        btrim(MDM_RELATIONSHIP_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_RELATIONSHIP_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_RELATIONSHIP_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_RELATIONSHIP_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_RELATIONSHIP_src.batch_id,
        MDM_RELATIONSHIP_src.row_id,
        MDM_RELATIONSHIP_src.update_ts
 FROM teva_ingestion.MDM_RELATIONSHIP_src;

CREATE  VIEW teva_ingestion.MDM_SAMPLE_ELIGIBILITY AS
 SELECT btrim(MDM_SAMPLE_ELIGIBILITY_src.TVCMID) AS TVCMID,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.SLN) AS SLN,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.SLN_STATE) AS SLN_STATE,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.SLN_STATUS_CODE) AS SLN_STATUS_CODE,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.SLN_STATUS_DESCRIPTION) AS SLN_STATUS_DESCRIPTION,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.SLN_EXPIRATION_DATE) AS SLN_EXPIRATION_DATE,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.TEVA_SAMPLE_ELIGIBILITY_FLAG) AS TEVA_SAMPLE_ELIGIBILITY_FLAG,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.TEVA_SCHEDULE_IV_ELIGIBILITY_FLAG) AS TEVA_SCHEDULE_IV_ELIGIBILITY_FLAG,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.TEVA_SCHEDULE_V_ELIGIBILITY_FLAG) AS TEVA_SCHEDULE_V_ELIGIBILITY_FLAG,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.PROFESSION_SHORT_DESCRIPTION) AS PROFESSION_SHORT_DESCRIPTION,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.TEVA_SPECIALTY_CODE) AS TEVA_SPECIALTY_CODE,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.CERTIFICATION_CODE) AS CERTIFICATION_CODE,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.CERTIFICATION_DESCRIPTION) AS CERTIFICATION_DESCRIPTION,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_SAMPLE_ELIGIBILITY_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_SAMPLE_ELIGIBILITY_src.batch_id,
        MDM_SAMPLE_ELIGIBILITY_src.row_id,
        MDM_SAMPLE_ELIGIBILITY_src.update_ts
 FROM teva_ingestion.MDM_SAMPLE_ELIGIBILITY_src;

CREATE  VIEW teva_ingestion.MDM_SOURCE_DETAILS AS
 SELECT btrim(MDM_SOURCE_DETAILS_src.TVCMID) AS TVCMID,
        btrim(MDM_SOURCE_DETAILS_src.IDENTIFIER_CODE) AS IDENTIFIER_CODE,
        btrim(MDM_SOURCE_DETAILS_src.IDENTIFIER_DESCRIPTION) AS IDENTIFIER_DESCRIPTION,
        btrim(MDM_SOURCE_DETAILS_src.IDENTIFIER_VALUE) AS IDENTIFIER_VALUE,
        btrim(MDM_SOURCE_DETAILS_src.LEGACY_IDENTIFIER_CODE) AS LEGACY_IDENTIFIER_CODE,
        CASE WHEN (MDM_SOURCE_DETAILS_src.AMA_MD_DO_FLAG = ''::varchar) THEN NULL::int ELSE (btrim(MDM_SOURCE_DETAILS_src.AMA_MD_DO_FLAG))::int END AS AMA_MD_DO_FLAG,
        btrim(MDM_SOURCE_DETAILS_src.MAJOR_PROFESSIONAL_ACTIVITY) AS MAJOR_PROFESSIONAL_ACTIVITY,
        btrim(MDM_SOURCE_DETAILS_src.MAJOR_PROFESSIONAL_ACTIVITY_DESCRIPTION) AS MAJOR_PROFESSIONAL_ACTIVITY_DESCRIPTION,
        btrim(MDM_SOURCE_DETAILS_src.HOSPITAL_HOURS) AS HOSPITAL_HOURS,
        btrim(MDM_SOURCE_DETAILS_src.AMA_HOSPITAL_ID) AS AMA_HOSPITAL_ID,
        btrim(MDM_SOURCE_DETAILS_src.AMA_HOSPITAL_DESCRIPTION) AS AMA_HOSPITAL_DESCRIPTION,
        btrim(MDM_SOURCE_DETAILS_src.PRACTICE_TYPE_CODE) AS PRACTICE_TYPE_CODE,
        btrim(MDM_SOURCE_DETAILS_src.PRACTICE_TYPE_DESCRIPTION) AS PRACTICE_TYPE_DESCRIPTION,
        btrim(MDM_SOURCE_DETAILS_src.EMPLOYMENT_TYPE_CODE) AS EMPLOYMENT_TYPE_CODE,
        btrim(MDM_SOURCE_DETAILS_src.EMPLOYMENT_TYPE_DESCRIPTION) AS EMPLOYMENT_TYPE_DESCRIPTION,
        btrim(MDM_SOURCE_DETAILS_src.BIRTH_CITY) AS BIRTH_CITY,
        btrim(MDM_SOURCE_DETAILS_src.BIRTH_STATE) AS BIRTH_STATE,
        btrim(MDM_SOURCE_DETAILS_src.BIRTH_COUNTRY_CODE) AS BIRTH_COUNTRY_CODE,
        btrim(MDM_SOURCE_DETAILS_src.BIRTH_COUNTRY_DESCRIPTION) AS BIRTH_COUNTRY_DESCRIPTION,
        btrim(MDM_SOURCE_DETAILS_src.MEDICAL_SCHOOL_CODE) AS MEDICAL_SCHOOL_CODE,
        btrim(MDM_SOURCE_DETAILS_src.MEDICAL_SCHOOL_DESCRIPTION) AS MEDICAL_SCHOOL_DESCRIPTION,
        btrim(MDM_SOURCE_DETAILS_src.GRADUATION_YEAR) AS GRADUATION_YEAR,
        CASE WHEN (MDM_SOURCE_DETAILS_src.NUMBER_OF_PHYSICIAN_OFFICES = ''::varchar) THEN NULL::int ELSE (btrim(MDM_SOURCE_DETAILS_src.NUMBER_OF_PHYSICIAN_OFFICES))::int END AS NUMBER_OF_PHYSICIAN_OFFICES,
        btrim(MDM_SOURCE_DETAILS_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_SOURCE_DETAILS_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_SOURCE_DETAILS_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_SOURCE_DETAILS_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_SOURCE_DETAILS_src.batch_id,
        MDM_SOURCE_DETAILS_src.row_id,
        MDM_SOURCE_DETAILS_src.update_ts
 FROM teva_ingestion.MDM_SOURCE_DETAILS_src;

CREATE  VIEW teva_ingestion.MDM_SPECIALTY AS
 SELECT btrim(MDM_SPECIALTY_src.TVCMID) AS TVCMID,
        btrim(MDM_SPECIALTY_src.SPECIALTY_CODE) AS SPECIALTY_CODE,
        btrim(MDM_SPECIALTY_src.SPECIALTY_CODE_NAME) AS SPECIALTY_CODE_NAME,
        btrim(MDM_SPECIALTY_src.SPECIALTY_RANKING) AS SPECIALTY_RANKING,
        btrim(MDM_SPECIALTY_src.STATUS) AS STATUS,
        btrim(MDM_SPECIALTY_src.STATUS_NAME) AS STATUS_NAME,
        btrim(MDM_SPECIALTY_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_SPECIALTY_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_SPECIALTY_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_SPECIALTY_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_SPECIALTY_src.batch_id,
        MDM_SPECIALTY_src.row_id,
        MDM_SPECIALTY_src.update_ts
 FROM teva_ingestion.MDM_SPECIALTY_src;

CREATE  VIEW teva_ingestion.MDM_EMAIL_PREFERENCE AS
 SELECT btrim(MDM_EMAIL_PREFERENCE_src.TVCMID) AS TVCMID,
        btrim(MDM_EMAIL_PREFERENCE_src.EMAIL) AS EMAIL,
        btrim(MDM_EMAIL_PREFERENCE_src.VALUE) AS VALUE,
        btrim(MDM_EMAIL_PREFERENCE_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(MDM_EMAIL_PREFERENCE_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_EMAIL_PREFERENCE_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_EMAIL_PREFERENCE_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_EMAIL_PREFERENCE_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_EMAIL_PREFERENCE_src.batch_id,
        MDM_EMAIL_PREFERENCE_src.row_id,
        MDM_EMAIL_PREFERENCE_src.update_ts
 FROM teva_ingestion.MDM_EMAIL_PREFERENCE_src;

CREATE  VIEW teva_ingestion.MDM_RAW_NPI AS
 SELECT btrim(MDM_RAW_NPI_src.TVCMID) AS TVCMID,
        btrim(MDM_RAW_NPI_src.NPI_NUMBER) AS NPI_NUMBER,
        btrim(MDM_RAW_NPI_src.NPI_FIRST_NAME) AS NPI_FIRST_NAME,
        btrim(MDM_RAW_NPI_src.NPI_MIDDLE_NAME) AS NPI_MIDDLE_NAME,
        btrim(MDM_RAW_NPI_src.NPI_LAST_NAME) AS NPI_LAST_NAME,
        btrim(MDM_RAW_NPI_src.PRACTICE_ADDRESS_1) AS PRACTICE_ADDRESS_1,
        btrim(MDM_RAW_NPI_src.PRACTICE_ADDRESS_2) AS PRACTICE_ADDRESS_2,
        btrim(MDM_RAW_NPI_src.PRACTICE_CITY) AS PRACTICE_CITY,
        btrim(MDM_RAW_NPI_src.PRACTICE_STATE_NAME) AS PRACTICE_STATE_NAME,
        btrim(MDM_RAW_NPI_src.PRACTICE_POSTAL_CODE) AS PRACTICE_POSTAL_CODE,
        btrim(MDM_RAW_NPI_src.PRACTICE_COUNTRY_CODE) AS PRACTICE_COUNTRY_CODE,
        btrim(MDM_RAW_NPI_src.PRIMARY_TAXONOMY_CODE) AS PRIMARY_TAXONOMY_CODE,
        btrim(MDM_RAW_NPI_src.PRIMARY_TAXONOMY_TYPE) AS PRIMARY_TAXONOMY_TYPE,
        btrim(MDM_RAW_NPI_src.PRIMARY_TAXONOMY_CLASSIFICATION) AS PRIMARY_TAXONOMY_CLASSIFICATION,
        btrim(MDM_RAW_NPI_src.PRIMARY_TAXONOMY_SPECIALTY) AS PRIMARY_TAXONOMY_SPECIALTY,
        btrim(MDM_RAW_NPI_src.IMS_SPECIALTY_CODE) AS IMS_SPECIALTY_CODE,
        btrim(MDM_RAW_NPI_src.IMS_SPECIALTY_DESCRIPTION) AS IMS_SPECIALTY_DESCRIPTION,
        btrim(MDM_RAW_NPI_src.NPI_DEACTIVATION_REASON_CODE) AS NPI_DEACTIVATION_REASON_CODE,
        btrim(MDM_RAW_NPI_src.NPI_DEACTIVATION_DATE) AS NPI_DEACTIVATION_DATE,
        btrim(MDM_RAW_NPI_src.CREATED_BY) AS CREATED_BY,
        btrim(MDM_RAW_NPI_src.CREATED_DATE) AS CREATED_DATE,
        btrim(MDM_RAW_NPI_src.UPDATED_BY) AS UPDATED_BY,
        btrim(MDM_RAW_NPI_src.UPDATED_DATE) AS UPDATED_DATE,
        MDM_RAW_NPI_src.batch_id,
        MDM_RAW_NPI_src.row_id,
        MDM_RAW_NPI_src.update_ts
 FROM teva_ingestion.MDM_RAW_NPI_src;

CREATE  VIEW teva_ingestion.EXT_VV_MEDICAL_EVENT_VOD__C AS
 SELECT btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.active_vod__c) AS active_vod__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.address_tva__c) AS address_tva__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.city_tva__c) AS city_tva__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.createdbyid) AS createdbyid,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.createddate) AS createddate,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.demo_led_by_tva__c) AS demo_led_by_tva__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.description_vod__c) AS description_vod__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.end_date_vod__c) AS end_date_vod__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.event_type__c) AS event_type__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.id) AS id,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.lastactivitydate) AS lastactivitydate,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.lastreferenceddate) AS lastreferenceddate,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.lastvieweddate) AS lastvieweddate,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.location__c) AS location__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.mobile_id_vod__c) AS mobile_id_vod__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.name) AS name,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.number_of_attendees_tva__c) AS number_of_attendees_tva__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.ownerid) AS ownerid,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.primary_product__c) AS primary_product__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.recordtypeid) AS recordtypeid,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.secondary_product__c) AS secondary_product__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.start_date_vod__c) AS start_date_vod__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.state_tva__c) AS state_tva__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.status_tva__c) AS status_tva__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.website__c) AS website__c,
        btrim(EXT_VV_MEDICAL_EVENT_VOD__C_src.zip_tva__c) AS zip_tva__c,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.batch_id,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.row_id,
        EXT_VV_MEDICAL_EVENT_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_MEDICAL_EVENT_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_TW_ICS_SALES AS
 SELECT btrim(EXT_TW_ICS_SALES_src.BP_CODE) AS BP_CODE,
        btrim(EXT_TW_ICS_SALES_src.ORTHO_E) AS ORTHO_E,
        btrim(EXT_TW_ICS_SALES_src.BP_NAME) AS BP_NAME,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_ADDRESS) AS SHIP_TO_ADDRESS,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_CITY) AS SHIP_TO_CITY,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_STATE) AS SHIP_TO_STATE,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_ZIP_CODE) AS SHIP_TO_ZIP_CODE,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_COUNTRY) AS SHIP_TO_COUNTRY,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_PHONE) AS SHIP_TO_PHONE,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_FAX) AS SHIP_TO_FAX,
        btrim(EXT_TW_ICS_SALES_src.SHIP_TO_EMAIL) AS SHIP_TO_EMAIL,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_ADDRESS) AS BILL_TO_ADDRESS,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_CITY) AS BILL_TO_CITY,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_STATE) AS BILL_TO_STATE,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_ZIP_CODE) AS BILL_TO_ZIP_CODE,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_COUNTRY) AS BILL_TO_COUNTRY,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_PHONE) AS BILL_TO_PHONE,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_FAX) AS BILL_TO_FAX,
        btrim(EXT_TW_ICS_SALES_src.BILL_TO_EMAIL) AS BILL_TO_EMAIL,
        btrim(EXT_TW_ICS_SALES_src.CLASS_OF_TRADE) AS CLASS_OF_TRADE,
        btrim(EXT_TW_ICS_SALES_src.INVOICE_NUM) AS INVOICE_NUM,
        btrim(EXT_TW_ICS_SALES_src.DEL_AMT) AS DEL_AMT,
        btrim(EXT_TW_ICS_SALES_src.INVOICE_DATE) AS INVOICE_DATE,
        btrim(EXT_TW_ICS_SALES_src."24237") AS "24237",
        btrim(EXT_TW_ICS_SALES_src."24238") AS "24238",
        btrim(EXT_TW_ICS_SALES_src."24800") AS "24800",
        btrim(EXT_TW_ICS_SALES_src."33223") AS "33223",
        btrim(EXT_TW_ICS_SALES_src.PACKS) AS PACKS,
        btrim(EXT_TW_ICS_SALES_src.UNIT_PRICE) AS UNIT_PRICE,
        btrim(EXT_TW_ICS_SALES_src.TERRITORY) AS TERRITORY,
        btrim(EXT_TW_ICS_SALES_src.ORDER_TYPE_CODE) AS ORDER_TYPE_CODE,
        btrim(EXT_TW_ICS_SALES_src.ORDER_TYPE_DESC) AS ORDER_TYPE_DESC,
        btrim(EXT_TW_ICS_SALES_src.LOB_CODE_DESC) AS LOB_CODE_DESC,
        btrim(EXT_TW_ICS_SALES_src.PRICE_MATRIX_DEF) AS PRICE_MATRIX_DEF,
        btrim(EXT_TW_ICS_SALES_src.PARENT_BP_CODE) AS PARENT_BP_CODE,
        btrim(EXT_TW_ICS_SALES_src.PARENT_BP_DESC) AS PARENT_BP_DESC,
        btrim(EXT_TW_ICS_SALES_src.GRAND_PARENT_BP_DESC) AS GRAND_PARENT_BP_DESC,
        btrim(EXT_TW_ICS_SALES_src.PO_NUMBER) AS PO_NUMBER,
        btrim(EXT_TW_ICS_SALES_src.UPS_NUMBER) AS UPS_NUMBER,
        btrim(EXT_TW_ICS_SALES_src.ORDER_NUMBER) AS ORDER_NUMBER,
        btrim(EXT_TW_ICS_SALES_src.ORDER_LINE_NUMBER) AS ORDER_LINE_NUMBER,
        btrim(EXT_TW_ICS_SALES_src.DISC_AMT) AS DISC_AMT,
        btrim(EXT_TW_ICS_SALES_src.WHSE_CD) AS WHSE_CD,
        btrim(EXT_TW_ICS_SALES_src.ORDER_DATE) AS ORDER_DATE,
        EXT_TW_ICS_SALES_src.batch_id,
        EXT_TW_ICS_SALES_src.row_id,
        EXT_TW_ICS_SALES_src.update_ts
 FROM teva_ingestion.EXT_TW_ICS_SALES_src;

CREATE  VIEW teva_ingestion.EXT_TEVA_AHM_INTERACTIONS AS
 SELECT btrim(EXT_TEVA_AHM_INTERACTIONS_src.sourcesystemid) AS sourcesystemid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.batchid) AS batchid,
        CASE WHEN (EXT_TEVA_AHM_INTERACTIONS_src.batchdate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_INTERACTIONS_src.batchdate))::date END AS batchdate,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.transactionstatuscode) AS transactionstatuscode,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionid) AS interactionid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactioncode) AS interactioncode,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionname) AS interactionname,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactioncategory) AS interactioncategory,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactiontype) AS interactiontype,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.locationtype) AS locationtype,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionstatus) AS interactionstatus,
        CASE WHEN (EXT_TEVA_AHM_INTERACTIONS_src.interactionstartdate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionstartdate))::date END AS interactionstartdate,
        CASE WHEN (EXT_TEVA_AHM_INTERACTIONS_src.interactionenddate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionenddate))::date END AS interactionenddate,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionstarttime) AS interactionstarttime,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionendtime) AS interactionendtime,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactiontimezone) AS interactiontimezone,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionstartdatetime) AS interactionstartdatetime,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.interactionenddatetime) AS interactionenddatetime,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.requestingregion) AS requestingregion,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.parentinteractionid) AS parentinteractionid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.parentinteractioncode) AS parentinteractioncode,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.employeeid) AS employeeid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.clientemployeeid) AS clientemployeeid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.employeefirstname) AS employeefirstname,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.employeelastname) AS employeelastname,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.employeeorganizationunitid) AS employeeorganizationunitid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.employeeorganizationunitcode) AS employeeorganizationunitcode,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.employeeorganizationunitname) AS employeeorganizationunitname,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venueid) AS venueid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.clientvenueid) AS clientvenueid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venuename) AS venuename,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venueaddressline1) AS venueaddressline1,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venueaddressline2) AS venueaddressline2,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venueaddressline3) AS venueaddressline3,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venuecity) AS venuecity,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venuestateprovince) AS venuestateprovince,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venuepostalcode) AS venuepostalcode,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venuecountry) AS venuecountry,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.venueregion) AS venueregion,
        CASE WHEN (EXT_TEVA_AHM_INTERACTIONS_src.totalestimatedparticipantcount = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TEVA_AHM_INTERACTIONS_src.totalestimatedparticipantcount))::int END AS totalestimatedparticipantcount,
        CASE WHEN (EXT_TEVA_AHM_INTERACTIONS_src.financialcloseddate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_INTERACTIONS_src.financialcloseddate))::date END AS financialcloseddate,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product1name) AS product1name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product1id) AS product1id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product1clientid) AS product1clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic1name) AS topic1name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic1id) AS topic1id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic1clientid) AS topic1clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product2name) AS product2name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product2id) AS product2id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product2clientid) AS product2clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic2name) AS topic2name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic2id) AS topic2id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic2clientid) AS topic2clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product3name) AS product3name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product3id) AS product3id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product3clientid) AS product3clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic3name) AS topic3name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic3id) AS topic3id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic3clientid) AS topic3clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product4name) AS product4name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product4id) AS product4id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product4clientid) AS product4clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic4name) AS topic4name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic4id) AS topic4id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic4clientid) AS topic4clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product5name) AS product5name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product5id) AS product5id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.product5clientid) AS product5clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic5name) AS topic5name,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic5id) AS topic5id,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.topic5clientid) AS topic5clientid,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield1) AS reservedfield1,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield2) AS reservedfield2,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield3) AS reservedfield3,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield4) AS reservedfield4,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield5) AS reservedfield5,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield6) AS reservedfield6,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield7) AS reservedfield7,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield8) AS reservedfield8,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield9) AS reservedfield9,
        btrim(EXT_TEVA_AHM_INTERACTIONS_src.reservedfield10) AS reservedfield10,
        EXT_TEVA_AHM_INTERACTIONS_src.batch_id,
        EXT_TEVA_AHM_INTERACTIONS_src.row_id,
        EXT_TEVA_AHM_INTERACTIONS_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_INTERACTIONS_src;

CREATE  VIEW teva_ingestion.EXT_TEVA_AHM_PARTICIPANT AS
 SELECT btrim(EXT_TEVA_AHM_PARTICIPANT_src.sourcesystemid) AS sourcesystemid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.batchid) AS batchid,
        CASE WHEN (EXT_TEVA_AHM_PARTICIPANT_src.batchdate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_PARTICIPANT_src.batchdate))::date END AS batchdate,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.transactionstatuscode) AS transactionstatuscode,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.interactionid) AS interactionid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.interactioncode) AS interactioncode,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.participantid) AS participantid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.clientcustomerid) AS clientcustomerid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.participanttype) AS participanttype,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.firstname) AS firstname,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.middlename) AS middlename,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.lastname) AS lastname,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.suffix) AS suffix,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.professionaldesignation) AS professionaldesignation,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.primaryspecialty) AS primaryspecialty,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.organizationname) AS organizationname,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.npinumber) AS npinumber,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addressid) AS addressid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.clientaddressid) AS clientaddressid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addressline1) AS addressline1,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addressline2) AS addressline2,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addressline3) AS addressline3,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addresscity) AS addresscity,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addressstateprovince) AS addressstateprovince,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addresspostalcode) AS addresspostalcode,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addresspostalcodeextension) AS addresspostalcodeextension,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.addresscountry) AS addresscountry,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.region) AS region,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.primarystatelicensestate) AS primarystatelicensestate,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.primarystatelicensenumber) AS primarystatelicensenumber,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.attended) AS attended,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.mealconsumed) AS mealconsumed,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.contractid) AS contractid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.clientcontractid) AS clientcontractid,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.contractname) AS contractname,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.contractcategory) AS contractcategory,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.contractsubcategory) AS contractsubcategory,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.contractclassification) AS contractclassification,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.contracttier) AS contracttier,
        CASE WHEN (EXT_TEVA_AHM_PARTICIPANT_src.contracteffectivedate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_PARTICIPANT_src.contracteffectivedate))::date END AS contracteffectivedate,
        CASE WHEN (EXT_TEVA_AHM_PARTICIPANT_src.contractexpirationdate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_PARTICIPANT_src.contractexpirationdate))::date END AS contractexpirationdate,
        CASE WHEN (EXT_TEVA_AHM_PARTICIPANT_src.contracttotalvalue = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_TEVA_AHM_PARTICIPANT_src.contracttotalvalue))::numeric(10,2) END AS contracttotalvalue,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield1) AS reservedfield1,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield2) AS reservedfield2,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield3) AS reservedfield3,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield4) AS reservedfield4,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield5) AS reservedfield5,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield6) AS reservedfield6,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield7) AS reservedfield7,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield8) AS reservedfield8,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield9) AS reservedfield9,
        btrim(EXT_TEVA_AHM_PARTICIPANT_src.reservedfield10) AS reservedfield10,
        EXT_TEVA_AHM_PARTICIPANT_src.batch_id,
        EXT_TEVA_AHM_PARTICIPANT_src.row_id,
        EXT_TEVA_AHM_PARTICIPANT_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_PARTICIPANT_src;

CREATE  VIEW teva_ingestion.EXT_TEVA_AHM_UNNAMEDPARTICIPANT AS
 SELECT btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.sourcesystemid) AS sourcesystemid,
        btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batchid) AS batchid,
        CASE WHEN (EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batchdate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batchdate))::date END AS batchdate,
        btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.transactionstatuscode) AS transactionstatuscode,
        btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.interactionid) AS interactionid,
        btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.interactioncode) AS interactioncode,
        btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.particpantcategoryid) AS particpantcategoryid,
        btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.categorytype) AS categorytype,
        CASE WHEN (EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.totalattendedcount = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.totalattendedcount))::int END AS totalattendedcount,
        CASE WHEN (EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.totalmealconsumedcount = ''::varchar) THEN NULL::int ELSE (btrim(EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.totalmealconsumedcount))::int END AS totalmealconsumedcount,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.batch_id,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.row_id,
        EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_UNNAMEDPARTICIPANT_src;

CREATE  VIEW teva_ingestion.EXT_TEVA_AHM_EXPENSE AS
 SELECT btrim(EXT_TEVA_AHM_EXPENSE_src.sourcesystemid) AS sourcesystemid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.batchid) AS batchid,
        CASE WHEN (EXT_TEVA_AHM_EXPENSE_src.batchdate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_EXPENSE_src.batchdate))::date END AS batchdate,
        btrim(EXT_TEVA_AHM_EXPENSE_src.transactionstatuscode) AS transactionstatuscode,
        btrim(EXT_TEVA_AHM_EXPENSE_src.interactionid) AS interactionid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.interactioncode) AS interactioncode,
        btrim(EXT_TEVA_AHM_EXPENSE_src.spendid) AS spendid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.clientspendid) AS clientspendid,
        CASE WHEN (EXT_TEVA_AHM_EXPENSE_src.spendamount = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_TEVA_AHM_EXPENSE_src.spendamount))::numeric(10,2) END AS spendamount,
        btrim(EXT_TEVA_AHM_EXPENSE_src.spendcurrency) AS spendcurrency,
        CASE WHEN (EXT_TEVA_AHM_EXPENSE_src.spenddate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_EXPENSE_src.spenddate))::date END AS spenddate,
        btrim(EXT_TEVA_AHM_EXPENSE_src.spendtype) AS spendtype,
        btrim(EXT_TEVA_AHM_EXPENSE_src.spendpurpose) AS spendpurpose,
        btrim(EXT_TEVA_AHM_EXPENSE_src.traveldestinationcity) AS traveldestinationcity,
        btrim(EXT_TEVA_AHM_EXPENSE_src.traveldestinationstateprovince) AS traveldestinationstateprovince,
        btrim(EXT_TEVA_AHM_EXPENSE_src.traveldestinationcountry) AS traveldestinationcountry,
        btrim(EXT_TEVA_AHM_EXPENSE_src.spenddescription) AS spenddescription,
        btrim(EXT_TEVA_AHM_EXPENSE_src.taxincludedindicator) AS taxincludedindicator,
        CASE WHEN (EXT_TEVA_AHM_EXPENSE_src.taxamount = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_TEVA_AHM_EXPENSE_src.taxamount))::numeric(10,2) END AS taxamount,
        CASE WHEN (EXT_TEVA_AHM_EXPENSE_src.taxrate = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_TEVA_AHM_EXPENSE_src.taxrate))::numeric(10,2) END AS taxrate,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientid) AS recipientid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.clientrecipientid) AS clientrecipientid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.participantid) AS participantid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientfirstname) AS recipientfirstname,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientmiddlename) AS recipientmiddlename,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientlastname) AS recipientlastname,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientsuffix) AS recipientsuffix,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientprofessionaldesignation) AS recipientprofessionaldesignation,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientprimaryspecialty) AS recipientprimaryspecialty,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientorganizationname) AS recipientorganizationname,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientnpinumber) AS recipientnpinumber,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddressid) AS recipientaddressid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientclientaddressid) AS recipientclientaddressid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddressline1) AS recipientaddressline1,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddressline2) AS recipientaddressline2,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddressline3) AS recipientaddressline3,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddresscity) AS recipientaddresscity,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddressstateprovince) AS recipientaddressstateprovince,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddresspostalcode) AS recipientaddresspostalcode,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddresspostalcodeextension) AS recipientaddresspostalcodeextension,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientaddresscountry) AS recipientaddresscountry,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientprimarystatelicensestate) AS recipientprimarystatelicensestate,
        btrim(EXT_TEVA_AHM_EXPENSE_src.recipientprimarystatelicensenumber) AS recipientprimarystatelicensenumber,
        btrim(EXT_TEVA_AHM_EXPENSE_src.thirdpartyrecipientindicator) AS thirdpartyrecipientindicator,
        btrim(EXT_TEVA_AHM_EXPENSE_src.thirdpartyrecipientid) AS thirdpartyrecipientid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.thirdpartyclientrecipientid) AS thirdpartyclientrecipientid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.thirdpartyrecipientname) AS thirdpartyrecipientname,
        btrim(EXT_TEVA_AHM_EXPENSE_src.thirdpartycoveredrecipientindicator) AS thirdpartycoveredrecipientindicator,
        btrim(EXT_TEVA_AHM_EXPENSE_src.paymentid) AS paymentid,
        btrim(EXT_TEVA_AHM_EXPENSE_src.clientpaymentid) AS clientpaymentid,
        CASE WHEN (EXT_TEVA_AHM_EXPENSE_src.paymentdate = ''::varchar) THEN NULL::date ELSE (btrim(EXT_TEVA_AHM_EXPENSE_src.paymentdate))::date END AS paymentdate,
        btrim(EXT_TEVA_AHM_EXPENSE_src.paymentmethod) AS paymentmethod,
        btrim(EXT_TEVA_AHM_EXPENSE_src.paymentreferencenumber) AS paymentreferencenumber,
        btrim(EXT_TEVA_AHM_EXPENSE_src.paymentstatus) AS paymentstatus,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield1) AS reservedfield1,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield2) AS reservedfield2,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield3) AS reservedfield3,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield4) AS reservedfield4,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield5) AS reservedfield5,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield6) AS reservedfield6,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield7) AS reservedfield7,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield8) AS reservedfield8,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield9) AS reservedfield9,
        btrim(EXT_TEVA_AHM_EXPENSE_src.reservedfield10) AS reservedfield10,
        EXT_TEVA_AHM_EXPENSE_src.batch_id,
        EXT_TEVA_AHM_EXPENSE_src.row_id,
        EXT_TEVA_AHM_EXPENSE_src.update_ts
 FROM teva_ingestion.EXT_TEVA_AHM_EXPENSE_src;

CREATE  VIEW teva_ingestion.EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT AS
 SELECT btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.week_end_date) AS week_end_date,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.practice_name) AS practice_name,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.practice_address_line_1) AS practice_address_line_1,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.pracitce_address_line_2) AS pracitce_address_line_2,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.city) AS city,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.state) AS state,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.zip_code) AS zip_code,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.provider_first_name) AS provider_first_name,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.provider_last_name) AS provider_last_name,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.npi) AS npi,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.specialty_1) AS specialty_1,
        btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.specialty_2) AS specialty_2,
        CASE WHEN (EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.total_cml_patients_with_poor_response_to_treatment = ''::varchar) THEN NULL::int ELSE (btrim(EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.total_cml_patients_with_poor_response_to_treatment))::int END AS total_cml_patients_with_poor_response_to_treatment,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.batch_id,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.row_id,
        EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src.update_ts
 FROM teva_ingestion.EXT_PROGNOS_SYNDICATED_TRIGGER_REPORT_src;

CREATE  VIEW teva_ingestion.EXT_TW_BIOLOGICS_HUB AS
 SELECT btrim(EXT_TW_BIOLOGICS_HUB_src.HUB_ID) AS HUB_ID,
        btrim(EXT_TW_BIOLOGICS_HUB_src.SP_ID) AS SP_ID,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PORTAL_ID) AS PORTAL_ID,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REFERRAL_DATE) AS REFERRAL_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REFERRAL_RECEIVED_DATE) AS REFERRAL_RECEIVED_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REFERRAL_SOURCE) AS REFERRAL_SOURCE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REFERRAL_METHOD) AS REFERRAL_METHOD,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REFERRAL_TYPE) AS REFERRAL_TYPE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.BILLING_METHOD) AS BILLING_METHOD,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PATIENT_AUTH) AS PATIENT_AUTH,
        btrim(EXT_TW_BIOLOGICS_HUB_src.ORDER_CREATE_DATE) AS ORDER_CREATE_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PATIENT_STATUS) AS PATIENT_STATUS,
        btrim(EXT_TW_BIOLOGICS_HUB_src.BV_DATE) AS BV_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.EFFECTIVE_DATE) AS EFFECTIVE_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_RANK) AS PAYOR_RANK,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_TYPE) AS PAYOR_TYPE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR) AS PAYOR,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PLAN_NAME) AS PLAN_NAME,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERED_MAJOR_MEDICAL) AS COVERED_MAJOR_MEDICAL,
        btrim(EXT_TW_BIOLOGICS_HUB_src.DEDUCTIBLE_APPLIES_PARAGARD) AS DEDUCTIBLE_APPLIES_PARAGARD,
        btrim(EXT_TW_BIOLOGICS_HUB_src.J7300_REIMBURSEMENT) AS J7300_REIMBURSEMENT,
        btrim(EXT_TW_BIOLOGICS_HUB_src.BUNDLED_SERVICES) AS BUNDLED_SERVICES,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PBM) AS PBM,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERED_PHARMACY) AS COVERED_PHARMACY,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REJECTION_CODE) AS REJECTION_CODE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERAGE_TYPE) AS COVERAGE_TYPE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE) AS LOW_PHARM_REIMBURSE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_AMOUNT) AS LOW_PHARM_REIMBURSE_AMOUNT,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_REQUIRED) AS PA_REQUIRED,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_TYPE) AS PA_TYPE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_CONTACT) AS PA_CONTACT,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_PHONE) AS PA_PHONE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_FAX) AS PA_FAX,
        btrim(EXT_TW_BIOLOGICS_HUB_src.BV_DATE_2) AS BV_DATE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.EFFECTIVE_DATE_2) AS EFFECTIVE_DATE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_RANK_2) AS PAYOR_RANK_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_TYPE_2) AS PAYOR_TYPE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_2) AS PAYOR_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PLAN_NAME_2) AS PLAN_NAME_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERED_MAJOR_MEDICAL_2) AS COVERED_MAJOR_MEDICAL_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.DEDUCTIBLE_APPLIES_PARAGARD_2) AS DEDUCTIBLE_APPLIES_PARAGARD_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.J7300_REIMBURSEMENT_2) AS J7300_REIMBURSEMENT_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.BUNDLED_SERVICES_2) AS BUNDLED_SERVICES_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PBM_2) AS PBM_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERED_PHARMACY_2) AS COVERED_PHARMACY_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REJECTION_CODE_2) AS REJECTION_CODE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERAGE_TYPE_2) AS COVERAGE_TYPE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_2) AS LOW_PHARM_REIMBURSE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_AMOUNT_2) AS LOW_PHARM_REIMBURSE_AMOUNT_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_REQUIRED_2) AS PA_REQUIRED_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_TYPE_2) AS PA_TYPE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_CONTACT_2) AS PA_CONTACT_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_PHONE_2) AS PA_PHONE_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_FAX_2) AS PA_FAX_2,
        btrim(EXT_TW_BIOLOGICS_HUB_src.BV_DATE_3) AS BV_DATE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.EFFECTIVE_DATE_3) AS EFFECTIVE_DATE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_RANK_3) AS PAYOR_RANK_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_TYPE_3) AS PAYOR_TYPE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PAYOR_3) AS PAYOR_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PLAN_NAME_3) AS PLAN_NAME_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERED_MAJOR_MEDICAL_3) AS COVERED_MAJOR_MEDICAL_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.DEDUCTIBLE_APPLIES_PARAGARD_3) AS DEDUCTIBLE_APPLIES_PARAGARD_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.J7300_REIMBURSEMENT_3) AS J7300_REIMBURSEMENT_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.BUNDLED_SERVICES_3) AS BUNDLED_SERVICES_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PBM_3) AS PBM_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERED_PHARMACY_3) AS COVERED_PHARMACY_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REJECTION_CODE_3) AS REJECTION_CODE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COVERAGE_TYPE_3) AS COVERAGE_TYPE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_3) AS LOW_PHARM_REIMBURSE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.LOW_PHARM_REIMBURSE_AMOUNT_3) AS LOW_PHARM_REIMBURSE_AMOUNT_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_REQUIRED_3) AS PA_REQUIRED_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_TYPE_3) AS PA_TYPE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_CONTACT_3) AS PA_CONTACT_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_PHONE_3) AS PA_PHONE_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PA_FAX_3) AS PA_FAX_3,
        btrim(EXT_TW_BIOLOGICS_HUB_src.COPAY) AS COPAY,
        btrim(EXT_TW_BIOLOGICS_HUB_src.TRIAGE_DATE) AS TRIAGE_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.SP_SHIP_DATE) AS SP_SHIP_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.REPLACEMENT_FLAG) AS REPLACEMENT_FLAG,
        btrim(EXT_TW_BIOLOGICS_HUB_src.INSERTION_MEDICAID) AS INSERTION_MEDICAID,
        btrim(EXT_TW_BIOLOGICS_HUB_src.MEDICAID_RETURN_DATE_CALL) AS MEDICAID_RETURN_DATE_CALL,
        btrim(EXT_TW_BIOLOGICS_HUB_src.MEDICAID_RETURN_REQUEST_DATE) AS MEDICAID_RETURN_REQUEST_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.MEDICAID_REQUEST_REASON) AS MEDICAID_REQUEST_REASON,
        btrim(EXT_TW_BIOLOGICS_HUB_src.MEDICAID_RETURN_DATE) AS MEDICAID_RETURN_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PH_ID) AS PH_ID,
        btrim(EXT_TW_BIOLOGICS_HUB_src.NPI) AS NPI,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PHYSICIAN_NAME) AS PHYSICIAN_NAME,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PRACTICE_NAME) AS PRACTICE_NAME,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PH_ADDRESS) AS PH_ADDRESS,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PH_CITY) AS PH_CITY,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PH_STATE) AS PH_STATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PH_ZIP) AS PH_ZIP,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PH_PHONE) AS PH_PHONE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.PH_FAX) AS PH_FAX,
        btrim(EXT_TW_BIOLOGICS_HUB_src.DISC_DATE) AS DISC_DATE,
        btrim(EXT_TW_BIOLOGICS_HUB_src.DISCHARGE_REASON) AS DISCHARGE_REASON,
        EXT_TW_BIOLOGICS_HUB_src.batch_id,
        EXT_TW_BIOLOGICS_HUB_src.row_id,
        EXT_TW_BIOLOGICS_HUB_src.update_ts
 FROM teva_ingestion.EXT_TW_BIOLOGICS_HUB_src;

CREATE  VIEW teva_ingestion.EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW AS
 SELECT btrim((EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.trans_type)::varchar(1)) AS trans_type,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.claim_trans_id) AS claim_trans_id,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.original_claim_trans_id) AS original_claim_trans_id,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_of_fill = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_of_fill))::int END AS date_of_fill,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_written = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_written))::int END AS date_written,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.days_supply = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.days_supply))::int END AS days_supply,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.ndc_drug_code) AS ndc_drug_code,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.daw = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.daw))::int END AS daw,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.drug_title) AS drug_title,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.drug_strength_and_form) AS drug_strength_and_form,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.fill_number_code = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.fill_number_code))::int END AS fill_number_code,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.quantity_disp = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.quantity_disp))::int END AS quantity_disp,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.auth_refills = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.auth_refills))::int END AS auth_refills,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.other_coverage_code = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.other_coverage_code))::int END AS other_coverage_code,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.previous_other_payer_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.previous_other_payer_id))::int END AS previous_other_payer_id,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.group_number) AS group_number,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.serial_id) AS serial_id,
        btrim((EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.gender)::varchar(11)) AS gender,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.age = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.age))::int END AS age,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_processed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.date_processed))::int END AS date_processed,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_chain = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_chain))::int END AS pharmacy_chain,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.ncpdp = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.ncpdp))::int END AS ncpdp,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_chain_name) AS pharmacy_chain_name,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_name) AS pharmacy_name,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_address) AS pharmacy_address,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_address2) AS pharmacy_address2,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_city) AS pharmacy_city,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_state) AS pharmacy_state,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_zip = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_zip))::int END AS pharmacy_zip,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_phone = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_phone))::int END AS pharmacy_phone,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_npi = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_npi))::int END AS pharmacy_npi,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_dea) AS hcp_dea,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_npi = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_npi))::int END AS hcp_npi,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_name) AS hcp_name,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_address) AS hcp_address,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_address2) AS hcp_address2,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_city) AS hcp_city,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_state) AS hcp_state,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_zip = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.hcp_zip))::int END AS hcp_zip,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.benefit_amount = ''::varchar) THEN NULL::numeric(32,15) ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.benefit_amount))::numeric(32,15) END AS benefit_amount,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.patient_expense = ''::varchar) THEN NULL::numeric(32,15) ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.patient_expense))::numeric(32,15) END AS patient_expense,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.submitted_cost = ''::varchar) THEN NULL::numeric(32,15) ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.submitted_cost))::numeric(32,15) END AS submitted_cost,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_fee = ''::varchar) THEN NULL::numeric(32,15) ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.pharmacy_fee))::numeric(32,15) END AS pharmacy_fee,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.amount_due = ''::varchar) THEN NULL::numeric(32,15) ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.amount_due))::numeric(32,15) END AS amount_due,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.calc_awp = ''::varchar) THEN NULL::numeric(32,15) ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.calc_awp))::numeric(32,15) END AS calc_awp,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.create_date = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.create_date))::int END AS create_date,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.occ_payment_type) AS occ_payment_type,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_npi = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_npi))::int END AS admin_hcp_npi,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_name) AS admin_hcp_name,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_address) AS admin_hcp_address,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_address2) AS admin_hcp_address2,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_city) AS admin_hcp_city,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_state) AS admin_hcp_state,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_zip = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.admin_hcp_zip))::int END AS admin_hcp_zip,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.claim_type) AS claim_type,
        btrim((EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.administration_flag)::varchar(1)) AS administration_flag,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_name) AS soc_name,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_phone = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_phone))::int END AS soc_phone,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_fax = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_fax))::int END AS soc_fax,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_address) AS soc_address,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_city) AS soc_city,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_state = ''::varchar) THEN NULL::numeric(32,15) ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_state))::numeric(32,15) END AS soc_state,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_zip = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_zip))::int END AS soc_zip,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_id) AS soc_id,
        CASE WHEN (EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_npi = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.soc_npi))::int END AS soc_npi,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.payer_name) AS payer_name,
        btrim(EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.cpt_code) AS cpt_code,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.batch_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.row_id,
        EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src.update_ts
 FROM teva_ingestion.EXT_ASI_COPAY_VOUCHER_DETAIL_WKLY_PSKW_src;

CREATE  VIEW teva_ingestion.EXT_DX_CLAIMS AS
 SELECT btrim(EXT_DX_CLAIMS_src.ims_rxer_id) AS ims_rxer_id,
        btrim(EXT_DX_CLAIMS_src.npi) AS npi,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_01 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_01))::int END AS g244_clm_cnt_mth_01,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_02 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_02))::int END AS g244_clm_cnt_mth_02,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_03 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_03))::int END AS g244_clm_cnt_mth_03,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_04 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_04))::int END AS g244_clm_cnt_mth_04,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_05 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_05))::int END AS g244_clm_cnt_mth_05,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_06 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_06))::int END AS g244_clm_cnt_mth_06,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_07 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_07))::int END AS g244_clm_cnt_mth_07,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_08 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_08))::int END AS g244_clm_cnt_mth_08,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_09 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_09))::int END AS g244_clm_cnt_mth_09,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_10 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_10))::int END AS g244_clm_cnt_mth_10,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_11 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_11))::int END AS g244_clm_cnt_mth_11,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_clm_cnt_mth_12 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_clm_cnt_mth_12))::int END AS g244_clm_cnt_mth_12,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_01 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_01))::int END AS g244_pat_cnt_mth_01,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_02 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_02))::int END AS g244_pat_cnt_mth_02,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_03 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_03))::int END AS g244_pat_cnt_mth_03,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_04 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_04))::int END AS g244_pat_cnt_mth_04,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_05 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_05))::int END AS g244_pat_cnt_mth_05,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_06 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_06))::int END AS g244_pat_cnt_mth_06,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_07 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_07))::int END AS g244_pat_cnt_mth_07,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_08 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_08))::int END AS g244_pat_cnt_mth_08,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_09 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_09))::int END AS g244_pat_cnt_mth_09,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_10 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_10))::int END AS g244_pat_cnt_mth_10,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_11 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_11))::int END AS g244_pat_cnt_mth_11,
        CASE WHEN (EXT_DX_CLAIMS_src.g244_pat_cnt_mth_12 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g244_pat_cnt_mth_12))::int END AS g244_pat_cnt_mth_12,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_01 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_01))::int END AS g2401_clm_cnt_mth_01,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_02 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_02))::int END AS g2401_clm_cnt_mth_02,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_03 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_03))::int END AS g2401_clm_cnt_mth_03,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_04 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_04))::int END AS g2401_clm_cnt_mth_04,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_05 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_05))::int END AS g2401_clm_cnt_mth_05,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_06 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_06))::int END AS g2401_clm_cnt_mth_06,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_07 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_07))::int END AS g2401_clm_cnt_mth_07,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_08 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_08))::int END AS g2401_clm_cnt_mth_08,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_09 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_09))::int END AS g2401_clm_cnt_mth_09,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_10 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_10))::int END AS g2401_clm_cnt_mth_10,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_11 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_11))::int END AS g2401_clm_cnt_mth_11,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_12 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_clm_cnt_mth_12))::int END AS g2401_clm_cnt_mth_12,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_01 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_01))::int END AS g2401_pat_cnt_mth_01,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_02 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_02))::int END AS g2401_pat_cnt_mth_02,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_03 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_03))::int END AS g2401_pat_cnt_mth_03,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_04 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_04))::int END AS g2401_pat_cnt_mth_04,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_05 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_05))::int END AS g2401_pat_cnt_mth_05,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_06 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_06))::int END AS g2401_pat_cnt_mth_06,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_07 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_07))::int END AS g2401_pat_cnt_mth_07,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_08 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_08))::int END AS g2401_pat_cnt_mth_08,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_09 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_09))::int END AS g2401_pat_cnt_mth_09,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_10 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_10))::int END AS g2401_pat_cnt_mth_10,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_11 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_11))::int END AS g2401_pat_cnt_mth_11,
        CASE WHEN (EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_12 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DX_CLAIMS_src.g2401_pat_cnt_mth_12))::int END AS g2401_pat_cnt_mth_12,
        EXT_DX_CLAIMS_src.batch_id,
        EXT_DX_CLAIMS_src.row_id,
        EXT_DX_CLAIMS_src.update_ts
 FROM teva_ingestion.EXT_DX_CLAIMS_src;

CREATE  VIEW teva_ingestion.EXT_OPTUMRX AS
 SELECT CASE WHEN (EXT_OPTUMRX_src.ship_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_OPTUMRX_src.ship_date))::date END AS ship_date,
        btrim(EXT_OPTUMRX_src.full_name) AS full_name,
        btrim(EXT_OPTUMRX_src.specialty) AS specialty,
        CASE WHEN (EXT_OPTUMRX_src.rank = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.rank))::int END AS rank,
        CASE WHEN (EXT_OPTUMRX_src.total = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.total))::int END AS total,
        CASE WHEN (EXT_OPTUMRX_src.aubagio_14 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.aubagio_14))::int END AS aubagio_14,
        CASE WHEN (EXT_OPTUMRX_src.aubagio_7 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.aubagio_7))::int END AS aubagio_7,
        CASE WHEN (EXT_OPTUMRX_src.avonex_30 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.avonex_30))::int END AS avonex_30,
        CASE WHEN (EXT_OPTUMRX_src.avonex_pack = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.avonex_pack))::int END AS avonex_pack,
        CASE WHEN (EXT_OPTUMRX_src.avonex_pen_pack = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.avonex_pen_pack))::int END AS avonex_pen_pack,
        CASE WHEN (EXT_OPTUMRX_src.betaseron = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.betaseron))::int END AS betaseron,
        CASE WHEN (EXT_OPTUMRX_src.copaxone_20 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.copaxone_20))::int END AS copaxone_20,
        CASE WHEN (EXT_OPTUMRX_src.copaxone_40 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.copaxone_40))::int END AS copaxone_40,
        CASE WHEN (EXT_OPTUMRX_src.gilenya_0_5_2x14 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.gilenya_0_5_2x14))::int END AS gilenya_0_5_2x14,
        CASE WHEN (EXT_OPTUMRX_src.gilenya_0_5_1x7 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.gilenya_0_5_1x7))::int END AS gilenya_0_5_1x7,
        CASE WHEN (EXT_OPTUMRX_src.glatiramer_acetate_20 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.glatiramer_acetate_20))::int END AS glatiramer_acetate_20,
        CASE WHEN (EXT_OPTUMRX_src.glatiramer_acetate_40 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.glatiramer_acetate_40))::int END AS glatiramer_acetate_40,
        CASE WHEN (EXT_OPTUMRX_src.glatopa_20 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.glatopa_20))::int END AS glatopa_20,
        CASE WHEN (EXT_OPTUMRX_src.lemtrada = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.lemtrada))::int END AS lemtrada,
        CASE WHEN (EXT_OPTUMRX_src.plegridy_pfs = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.plegridy_pfs))::int END AS plegridy_pfs,
        CASE WHEN (EXT_OPTUMRX_src.plegridy_pen = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.plegridy_pen))::int END AS plegridy_pen,
        CASE WHEN (EXT_OPTUMRX_src.rebif_22_rebidose = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.rebif_22_rebidose))::int END AS rebif_22_rebidose,
        CASE WHEN (EXT_OPTUMRX_src.rebif_22 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.rebif_22))::int END AS rebif_22,
        CASE WHEN (EXT_OPTUMRX_src.rebif_44 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.rebif_44))::int END AS rebif_44,
        CASE WHEN (EXT_OPTUMRX_src.rebif_44_rebidose = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.rebif_44_rebidose))::int END AS rebif_44_rebidose,
        CASE WHEN (EXT_OPTUMRX_src.rebif_pack = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.rebif_pack))::int END AS rebif_pack,
        CASE WHEN (EXT_OPTUMRX_src.rebif_pack_rebidose = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.rebif_pack_rebidose))::int END AS rebif_pack_rebidose,
        CASE WHEN (EXT_OPTUMRX_src.tecfidera_120 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.tecfidera_120))::int END AS tecfidera_120,
        CASE WHEN (EXT_OPTUMRX_src.tecfidera_240 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.tecfidera_240))::int END AS tecfidera_240,
        CASE WHEN (EXT_OPTUMRX_src.tecfidera_starter_pack = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.tecfidera_starter_pack))::int END AS tecfidera_starter_pack,
        CASE WHEN (EXT_OPTUMRX_src.tysabri = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.tysabri))::int END AS tysabri,
        CASE WHEN (EXT_OPTUMRX_src.zinbryta_150 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_OPTUMRX_src.zinbryta_150))::int END AS zinbryta_150,
        btrim(EXT_OPTUMRX_src.md_addr1) AS md_addr1,
        btrim(EXT_OPTUMRX_src.md_addr2) AS md_addr2,
        btrim(EXT_OPTUMRX_src.md_city) AS md_city,
        btrim(EXT_OPTUMRX_src.md_state) AS md_state,
        btrim(EXT_OPTUMRX_src.md_zip) AS md_zip,
        btrim(EXT_OPTUMRX_src.prescriber_npi) AS prescriber_npi,
        EXT_OPTUMRX_src.batch_id,
        EXT_OPTUMRX_src.row_id,
        EXT_OPTUMRX_src.update_ts
 FROM teva_ingestion.EXT_OPTUMRX_src;

CREATE  VIEW teva_ingestion.EXT_FTF_RESTRICTIONS_V2 AS
 SELECT btrim(EXT_FTF_RESTRICTIONS_V2_src.health_plan_id) AS health_plan_id,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.drug_id) AS drug_id,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.restriction_code) AS restriction_code,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.restriction_detail_id) AS restriction_detail_id,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.restriction_detail_text) AS restriction_detail_text,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.restriction_addtnl_information_1) AS restriction_addtnl_information_1,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.restriction_addtnl_information_2) AS restriction_addtnl_information_2,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.step_count) AS step_count,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.pa_form) AS pa_form,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.indication) AS indication,
        btrim(EXT_FTF_RESTRICTIONS_V2_src.grouped_restriction_level) AS grouped_restriction_level,
        EXT_FTF_RESTRICTIONS_V2_src.batch_id,
        EXT_FTF_RESTRICTIONS_V2_src.row_id,
        EXT_FTF_RESTRICTIONS_V2_src.update_ts
 FROM teva_ingestion.EXT_FTF_RESTRICTIONS_V2_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_PROVIDER_V2 AS
 SELECT btrim(EXT_IMS_FIA_PROVIDER_V2_src.PROVIDER_ID) AS PROVIDER_ID,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.PROVIDER_TYPE) AS PROVIDER_TYPE,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.IQVIA_RXER_ID) AS IQVIA_RXER_ID,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.PRIMARY_SPECIALTY_CODE) AS PRIMARY_SPECIALTY_CODE,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.PRIMARY_SPECIALTY_DESC) AS PRIMARY_SPECIALTY_DESC,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.ORG_NM) AS ORG_NM,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.ADDRESS) AS ADDRESS,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.CITY) AS CITY,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.ZIP_CODE) AS ZIP_CODE,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.STATE_CODE) AS STATE_CODE,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.PHONE_NUMBER) AS PHONE_NUMBER,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.DEA_NUMBER) AS DEA_NUMBER,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.ME_NUMBER) AS ME_NUMBER,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.FLEXIBLE_FLD_1_CHAR) AS FLEXIBLE_FLD_1_CHAR,
        btrim(EXT_IMS_FIA_PROVIDER_V2_src.FLEXIBLE_FLD_2_CHAR) AS FLEXIBLE_FLD_2_CHAR,
        EXT_IMS_FIA_PROVIDER_V2_src.batch_id,
        EXT_IMS_FIA_PROVIDER_V2_src.row_id,
        EXT_IMS_FIA_PROVIDER_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PROVIDER_V2_src;

CREATE  VIEW teva_ingestion.EXT_ZS_CALL_PLAN_TS AS
 SELECT btrim(EXT_ZS_CALL_PLAN_TS_src.VEEVA_ACCOUNT_ID) AS VEEVA_ACCOUNT_ID,
        btrim(EXT_ZS_CALL_PLAN_TS_src.TVCMID) AS TVCMID,
        btrim(EXT_ZS_CALL_PLAN_TS_src.IMS_ID) AS IMS_ID,
        btrim(EXT_ZS_CALL_PLAN_TS_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TS_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TS_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_ZS_CALL_PLAN_TS_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ZS_CALL_PLAN_TS_src.ADDRESS) AS ADDRESS,
        btrim(EXT_ZS_CALL_PLAN_TS_src.CITY) AS CITY,
        btrim(EXT_ZS_CALL_PLAN_TS_src.STATE) AS STATE,
        btrim(EXT_ZS_CALL_PLAN_TS_src.ZIP) AS ZIP,
        btrim(EXT_ZS_CALL_PLAN_TS_src.PRODUCT_NAME) AS PRODUCT_NAME,
        btrim(EXT_ZS_CALL_PLAN_TS_src.P1) AS P1,
        btrim(EXT_ZS_CALL_PLAN_TS_src.P2) AS P2,
        btrim(EXT_ZS_CALL_PLAN_TS_src.P3) AS P3,
        btrim(EXT_ZS_CALL_PLAN_TS_src.TARGET) AS TARGET,
        btrim(EXT_ZS_CALL_PLAN_TS_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ZS_CALL_PLAN_TS_src.PERIOD) AS PERIOD,
        EXT_ZS_CALL_PLAN_TS_src.batch_id,
        EXT_ZS_CALL_PLAN_TS_src.row_id,
        EXT_ZS_CALL_PLAN_TS_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TS_src;

CREATE  VIEW teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2 AS
 SELECT btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.id) AS id,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ownerid) AS ownerid,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.isdeleted) AS isdeleted,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.name) AS name,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.createddate))::timestamp END AS createddate,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastmodifiedbyid) AS lastmodifiedbyid,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.systemmodstamp))::timestamp END AS systemmodstamp,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastactivitydate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastactivitydate))::timestamp END AS lastactivitydate,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastvieweddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastvieweddate))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastreferenceddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.lastreferenceddate))::timestamp END AS lastreferenceddate,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.birth_month_day__c) AS birth_month_day__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.business_mobile__c) AS business_mobile__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.business_phone__c) AS business_phone__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.cost_center_name__c) AS cost_center_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.demotion__c) AS demotion__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ec_creation_date__c) AS ec_creation_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ec_last_modified_date__c) AS ec_last_modified_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.ec_territory_id__c) AS ec_territory_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.email_address__c) AS email_address__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.employee_status__c) AS employee_status__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.first_name__c) AS first_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.full_part_time__c) AS full_part_time__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.global_employee_id__c) AS global_employee_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.hire_date__c) AS hire_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_address_1__c) AS home_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_address_2__c) AS home_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_address_3__c) AS home_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_city_municipality__c) AS home_city_municipality__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_country__c) AS home_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_phone__c) AS home_phone__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_postal_code__c) AS home_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.home_state_province__c) AS home_state_province__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.job_code__c) AS job_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.job_grade__c) AS job_grade__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.loa_end_date__c) AS loa_end_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.loa_start_date__c) AS loa_start_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.last_name__c) AS last_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.local_employee_id__c) AS local_employee_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_address_1__c) AS mailing_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_address_2__c) AS mailing_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_address_3__c) AS mailing_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_city__c) AS mailing_city__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_country__c) AS mailing_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_postal_code__c) AS mailing_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.mailing_state__c) AS mailing_state__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.middle_name__c) AS middle_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.name_suffix__c) AS name_suffix__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.oracle_string__c) AS oracle_string__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.payroll_id__c) AS payroll_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.position_title__c) AS position_title__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.preferred_name__c) AS preferred_name__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.promotion__c) AS promotion__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.reg_contract__c) AS reg_contract__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_eligibility_indicator__c) AS sample_eligibility_indicator__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_1__c) AS sample_shippingstorage_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_2__c) AS sample_shippingstorage_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_3__c) AS sample_shippingstorage_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_address_status__c) AS sample_shippingstorage_address_status__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_city__c) AS sample_shippingstorage_city__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_country__c) AS sample_shippingstorage_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_postal_code__c) AS sample_shippingstorage_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.sample_shippingstorage_state__c) AS sample_shippingstorage_state__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_address_1__c) AS shipping_address_1__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_address_2__c) AS shipping_address_2__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_address_3__c) AS shipping_address_3__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_city__c) AS shipping_city__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_country__c) AS shipping_country__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_postal_code__c) AS shipping_postal_code__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.shipping_state__c) AS shipping_state__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.supervisor_global_employee_id__c) AS supervisor_global_employee_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.transfer_date__c) AS transfer_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.uid__c) AS uid__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.windows_logon_id__c) AS windows_logon_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.teva_id__c) AS teva_id__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.employee_status_effective_date__c) AS employee_status_effective_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.separation_date__c) AS separation_date__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.separation_reason__c) AS separation_reason__c,
        btrim(EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.Certified_Field_Trainer__c) AS Certified_Field_Trainer__c,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.batch_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.row_id,
        EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src.update_ts
 FROM teva_ingestion.EXT_AXTRIA_AXTRIASALESIQTM_EMPLOYEE_v2_src;

CREATE  VIEW teva_ingestion.EXT_VV_CALL_CLICKSTREAM_VOD__C AS
 SELECT btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Id) AS Id,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Name) AS Name,
        CASE WHEN (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.CreatedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.CreatedDate))::timestamp END AS CreatedDate,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.CreatedById) AS CreatedById,
        CASE WHEN (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.LastModifiedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.LastModifiedDate))::timestamp END AS LastModifiedDate,
        CASE WHEN (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.LastModifiedById) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.LastModifiedById))::timestamp END AS LastModifiedById,
        CASE WHEN (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.SystemModstamp) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.SystemModstamp))::timestamp END AS SystemModstamp,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.MayEdit) AS MayEdit,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.IsLocked) AS IsLocked,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Answer_vod__c) AS Answer_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Call_vod__c) AS Call_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Key_Message_vod__c) AS Key_Message_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Mobile_ID_vod__c) AS Mobile_ID_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Popup_Opened_vod__c) AS Popup_Opened_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Possible_Answers_vod__c) AS Possible_Answers_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Presentation_ID_vod__c) AS Presentation_ID_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Product_vod__c) AS Product_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Range_Value_vod__c) AS Range_Value_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Rollover_Entered_vod__c) AS Rollover_Entered_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Selected_Items_vod__c) AS Selected_Items_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.CLM_ID_vod__c) AS CLM_ID_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Question_vod__c) AS Question_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Survey_Type_vod__c) AS Survey_Type_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Text_Entered_vod__c) AS Text_Entered_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Toggle_Button_On_vod__c) AS Toggle_Button_On_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Track_Element_Description_vod__c) AS Track_Element_Description_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Track_Element_Id_vod__c) AS Track_Element_Id_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Track_Element_Type_vod__c) AS Track_Element_Type_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Usage_Duration_vod__c) AS Usage_Duration_vod__c,
        CASE WHEN (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Usage_Start_Time_vod__c) = ''::varchar) THEN NULL::numeric(1,0) ELSE (btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Usage_Start_Time_vod__c))::numeric END AS Usage_Start_Time_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.AuxillaryId_vod__c) AS AuxillaryId_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.ParentId_vod__c) AS ParentId_vod__c,
        btrim(EXT_VV_CALL_CLICKSTREAM_VOD__C_src.Revision_vod__c) AS Revision_vod__c,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.batch_id,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.row_id,
        EXT_VV_CALL_CLICKSTREAM_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL_CLICKSTREAM_VOD__C_src;

CREATE  VIEW teva_ingestion.ext_vv_objectterritory2assignmentrule AS
 SELECT btrim(ext_vv_objectterritory2assignmentrule_src.id) AS id,
        btrim(ext_vv_objectterritory2assignmentrule_src.isdeleted) AS isdeleted,
        CASE WHEN (ext_vv_objectterritory2assignmentrule_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_vv_objectterritory2assignmentrule_src.createddate))::timestamp END AS createddate,
        btrim(ext_vv_objectterritory2assignmentrule_src.createdbyid) AS createdbyid,
        CASE WHEN (ext_vv_objectterritory2assignmentrule_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_vv_objectterritory2assignmentrule_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(ext_vv_objectterritory2assignmentrule_src.lastmodifiedbyid) AS LastModifiedById,
        CASE WHEN (ext_vv_objectterritory2assignmentrule_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_vv_objectterritory2assignmentrule_src.systemmodstamp))::timestamp END AS SystemModstamp,
        btrim(ext_vv_objectterritory2assignmentrule_src.mayedit) AS mayedit,
        btrim(ext_vv_objectterritory2assignmentrule_src.islocked) AS islocked,
        btrim(ext_vv_objectterritory2assignmentrule_src.territory2id) AS territory2id,
        btrim(ext_vv_objectterritory2assignmentrule_src.ruleid) AS ruleid,
        btrim(ext_vv_objectterritory2assignmentrule_src.isinherited) AS isinherited,
        ext_vv_objectterritory2assignmentrule_src.batch_id,
        ext_vv_objectterritory2assignmentrule_src.row_id,
        ext_vv_objectterritory2assignmentrule_src.update_ts
 FROM teva_ingestion.ext_vv_objectterritory2assignmentrule_src;

CREATE  VIEW teva_ingestion.ext_vv_objectterritory2assignmentruleitem AS
 SELECT btrim(ext_vv_objectterritory2assignmentruleitem_src.Id) AS Id,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.IsDeleted) AS IsDeleted,
        CASE WHEN (ext_vv_objectterritory2assignmentruleitem_src.CreatedDate = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_vv_objectterritory2assignmentruleitem_src.CreatedDate))::timestamp END AS CreatedDate,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.CreatedById) AS CreatedById,
        CASE WHEN (ext_vv_objectterritory2assignmentruleitem_src.LastModifiedDate = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_vv_objectterritory2assignmentruleitem_src.LastModifiedDate))::timestamp END AS lastmodifieddate,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.LastModifiedById) AS LastModifiedById,
        CASE WHEN (ext_vv_objectterritory2assignmentruleitem_src.SystemModstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_vv_objectterritory2assignmentruleitem_src.SystemModstamp))::timestamp END AS SystemModstamp,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.RuleId) AS RuleId,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.Field) AS Field,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.Operation) AS Operation,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.SortOrder) AS SortOrder,
        btrim(ext_vv_objectterritory2assignmentruleitem_src.Value) AS Value,
        ext_vv_objectterritory2assignmentruleitem_src.batch_id,
        ext_vv_objectterritory2assignmentruleitem_src.row_id,
        ext_vv_objectterritory2assignmentruleitem_src.update_ts
 FROM teva_ingestion.ext_vv_objectterritory2assignmentruleitem_src;

CREATE  VIEW teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSOCIATION AS
 SELECT btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.Id) AS Id,
        btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.ObjectId) AS ObjectId,
        btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.Territory2Id) AS Territory2Id,
        btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.AssociationCause) AS AssociationCause,
        btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.SobjectType) AS SobjectType,
        btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.IsDeleted) AS IsDeleted,
        CASE WHEN (EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.LastModifiedDate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.LastModifiedDate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.LastModifiedById) AS LastModifiedById,
        CASE WHEN (EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.SystemModstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.SystemModstamp))::timestamp END AS SystemModstamp,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.batch_id,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.row_id,
        EXT_VV_OBJECTTERRITORY2ASSOCIATION_src.update_ts
 FROM teva_ingestion.EXT_VV_OBJECTTERRITORY2ASSOCIATION_src;

CREATE  VIEW teva_ingestion.EXT_VV_RULETERRITORY2ASSOCIATION AS
 SELECT btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.Id) AS Id,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.IsDeleted) AS IsDeleted,
        CASE WHEN (btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.CreatedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.CreatedDate))::timestamp END AS CreatedDate,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.CreatedById) AS CreatedById,
        CASE WHEN (EXT_VV_RULETERRITORY2ASSOCIATION_src.LastModifiedDate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.LastModifiedDate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.LastModifiedById) AS LastModifiedById,
        CASE WHEN (EXT_VV_RULETERRITORY2ASSOCIATION_src.SystemModstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.SystemModstamp))::timestamp END AS SystemModstamp,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.MayEdit) AS MayEdit,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.IsLocked) AS IsLocked,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.Territory2Id) AS Territory2Id,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.RuleId) AS RuleId,
        btrim(EXT_VV_RULETERRITORY2ASSOCIATION_src.IsInherited) AS IsInherited,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.batch_id,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.row_id,
        EXT_VV_RULETERRITORY2ASSOCIATION_src.update_ts
 FROM teva_ingestion.EXT_VV_RULETERRITORY2ASSOCIATION_src;

CREATE  VIEW teva_ingestion.EXT_VV_TERRITORY2MODEL AS
 SELECT btrim(EXT_VV_TERRITORY2MODEL_src.Id) AS Id,
        btrim(EXT_VV_TERRITORY2MODEL_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_TERRITORY2MODEL_src.Name) AS Name,
        CASE WHEN (btrim(EXT_VV_TERRITORY2MODEL_src.CreatedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODEL_src.CreatedDate))::timestamp END AS CreatedDate,
        btrim(EXT_VV_TERRITORY2MODEL_src.CreatedById) AS CreatedById,
        CASE WHEN (EXT_VV_TERRITORY2MODEL_src.LastModifiedDate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODEL_src.LastModifiedDate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_TERRITORY2MODEL_src.LastModifiedById) AS LastModifiedById,
        CASE WHEN (EXT_VV_TERRITORY2MODEL_src.SystemModstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODEL_src.SystemModstamp))::timestamp END AS SystemModstamp,
        btrim(EXT_VV_TERRITORY2MODEL_src.MayEdit) AS MayEdit,
        btrim(EXT_VV_TERRITORY2MODEL_src.IsLocked) AS IsLocked,
        btrim(EXT_VV_TERRITORY2MODEL_src.Description) AS Description,
        CASE WHEN (btrim(EXT_VV_TERRITORY2MODEL_src.ActivatedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODEL_src.ActivatedDate))::timestamp END AS ActivatedDate,
        CASE WHEN (btrim(EXT_VV_TERRITORY2MODEL_src.DeactivatedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODEL_src.DeactivatedDate))::timestamp END AS DeactivatedDate,
        btrim(EXT_VV_TERRITORY2MODEL_src.State) AS State,
        btrim(EXT_VV_TERRITORY2MODEL_src.DeveloperName) AS DeveloperName,
        CASE WHEN (btrim(EXT_VV_TERRITORY2MODEL_src.LastRunRulesEndDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODEL_src.LastRunRulesEndDate))::timestamp END AS LastRunRulesEndDate,
        btrim(EXT_VV_TERRITORY2MODEL_src.IsCloneSource) AS IsCloneSource,
        CASE WHEN (btrim(EXT_VV_TERRITORY2MODEL_src.LastOppTerrAssignEndDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODEL_src.LastOppTerrAssignEndDate))::timestamp END AS LastOppTerrAssignEndDate,
        EXT_VV_TERRITORY2MODEL_src.batch_id,
        EXT_VV_TERRITORY2MODEL_src.row_id,
        EXT_VV_TERRITORY2MODEL_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2MODEL_src;

CREATE  VIEW teva_ingestion.EXT_VV_TERRITORY2MODELHISTORY AS
 SELECT btrim(EXT_VV_TERRITORY2MODELHISTORY_src.Id) AS Id,
        btrim(EXT_VV_TERRITORY2MODELHISTORY_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_TERRITORY2MODELHISTORY_src.Territory2ModelId) AS Territory2ModelId,
        btrim(EXT_VV_TERRITORY2MODELHISTORY_src.CreatedById) AS CreatedById,
        CASE WHEN (btrim(EXT_VV_TERRITORY2MODELHISTORY_src.CreatedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2MODELHISTORY_src.CreatedDate))::timestamp END AS CreatedDate,
        btrim(EXT_VV_TERRITORY2MODELHISTORY_src.Field) AS Field,
        btrim(EXT_VV_TERRITORY2MODELHISTORY_src.OldValue) AS OldValue,
        btrim(EXT_VV_TERRITORY2MODELHISTORY_src.NewValue) AS NewValue,
        EXT_VV_TERRITORY2MODELHISTORY_src.batch_id,
        EXT_VV_TERRITORY2MODELHISTORY_src.row_id,
        EXT_VV_TERRITORY2MODELHISTORY_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2MODELHISTORY_src;

CREATE  VIEW teva_ingestion.EXT_VV_TERRITORY2TYPE AS
 SELECT btrim(EXT_VV_TERRITORY2TYPE_src.Id) AS Id,
        btrim(EXT_VV_TERRITORY2TYPE_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_TERRITORY2TYPE_src.DeveloperName) AS DeveloperName,
        btrim(EXT_VV_TERRITORY2TYPE_src.Language) AS Language,
        btrim(EXT_VV_TERRITORY2TYPE_src.MasterLabel) AS MasterLabel,
        CASE WHEN (btrim(EXT_VV_TERRITORY2TYPE_src.CreatedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2TYPE_src.CreatedDate))::timestamp END AS CreatedDate,
        btrim(EXT_VV_TERRITORY2TYPE_src.CreatedById) AS CreatedById,
        CASE WHEN (EXT_VV_TERRITORY2TYPE_src.LastModifiedDate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2TYPE_src.LastModifiedDate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_TERRITORY2TYPE_src.LastModifiedById) AS LastModifiedById,
        CASE WHEN (EXT_VV_TERRITORY2TYPE_src.SystemModstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2TYPE_src.SystemModstamp))::timestamp END AS SystemModstamp,
        btrim(EXT_VV_TERRITORY2TYPE_src.Description) AS Description,
        EXT_VV_TERRITORY2TYPE_src.Priority,
        EXT_VV_TERRITORY2TYPE_src.batch_id,
        EXT_VV_TERRITORY2TYPE_src.row_id,
        EXT_VV_TERRITORY2TYPE_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2TYPE_src;

CREATE  VIEW teva_ingestion.EXT_VV_USERTERRITORY2ASSOCIATION AS
 SELECT btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.Id) AS Id,
        btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.UserId) AS UserId,
        btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.Territory2Id) AS Territory2Id,
        btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.IsActive) AS IsActive,
        btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.RoleInTerritory2) AS RoleInTerritory2,
        CASE WHEN (btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.LastModifiedDate) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.LastModifiedDate))::timestamp END AS LastModifiedDate,
        btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.LastModifiedById) AS LastModifiedById,
        CASE WHEN (btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.SystemModstamp) = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_USERTERRITORY2ASSOCIATION_src.SystemModstamp))::timestamp END AS SystemModstamp,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.batch_id,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.row_id,
        EXT_VV_USERTERRITORY2ASSOCIATION_src.update_ts
 FROM teva_ingestion.EXT_VV_USERTERRITORY2ASSOCIATION_src;

CREATE  VIEW teva_ingestion.EXT_VV_TERRITORY2 AS
 SELECT btrim(EXT_VV_TERRITORY2_src.Id) AS Id,
        btrim(EXT_VV_TERRITORY2_src.Name) AS Name,
        btrim(EXT_VV_TERRITORY2_src.Territory2TypeId) AS Territory2TypeId,
        btrim(EXT_VV_TERRITORY2_src.Territory2ModelId) AS Territory2ModelId,
        btrim(EXT_VV_TERRITORY2_src.ParentTerritory2Id) AS ParentTerritory2Id,
        btrim(EXT_VV_TERRITORY2_src.Description) AS Description,
        btrim(EXT_VV_TERRITORY2_src.AccountAccessLevel) AS AccountAccessLevel,
        btrim(EXT_VV_TERRITORY2_src.OpportunityAccessLevel) AS OpportunityAccessLevel,
        btrim(EXT_VV_TERRITORY2_src.CaseAccessLevel) AS CaseAccessLevel,
        btrim(EXT_VV_TERRITORY2_src.ContactAccessLevel) AS ContactAccessLevel,
        CASE WHEN (EXT_VV_TERRITORY2_src.LastModifiedDate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2_src.LastModifiedDate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_TERRITORY2_src.LastModifiedById) AS LastModifiedById,
        CASE WHEN (EXT_VV_TERRITORY2_src.SystemModstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_TERRITORY2_src.SystemModstamp))::timestamp END AS SystemModstamp,
        btrim(EXT_VV_TERRITORY2_src.DeveloperName) AS DeveloperName,
        btrim(EXT_VV_TERRITORY2_src.ParentTerritory1Id__c) AS ParentTerritory1Id__c,
        btrim(EXT_VV_TERRITORY2_src.Territory1Id__c) AS Territory1Id__c,
        EXT_VV_TERRITORY2_src.batch_id,
        EXT_VV_TERRITORY2_src.row_id,
        EXT_VV_TERRITORY2_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY2_src;

CREATE  VIEW teva_ingestion.EXT_VV_SUGGESTION_FEEDBACK_VOD__C AS
 SELECT btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.id) AS id,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.name) AS name,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.recordtypeid) AS recordtypeid,
        CASE WHEN (EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.createddate))::timestamp END AS createddate,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        CASE WHEN (EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.systemmodstamp = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.systemmodstamp))::timestamp END AS systemmodstamp,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.suggestion_vod__c) AS suggestion_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.account_vod__c) AS account_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.activity_execution_type_vod__c) AS activity_execution_type_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.call2_vod__c) AS call2_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback1_vod__c) AS dismissfeedback1_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback2_vod__c) AS dismissfeedback2_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback3_vod__c) AS dismissfeedback3_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.dismissfeedback4_vod__c) AS dismissfeedback4_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.mobile_id_vod__c) AS mobile_id_vod__c,
        btrim(EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.sent_email_vod__c) AS sent_email_vod__c,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.batch_id,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.row_id,
        EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SUGGESTION_FEEDBACK_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_VV_SURVEY_TARGET_VOD__C AS
 SELECT btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.OWNERID) AS OWNERID,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.RECORDTYPEID) AS RECORDTYPEID,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.LASTVIEWEDDATE) AS LASTVIEWEDDATE,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.LASTREFERENCEDDATE) AS LASTREFERENCEDDATE,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ACCOUNT_DISPLAY_NAME_VOD__C) AS ACCOUNT_DISPLAY_NAME_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ACCOUNT_VOD__C) AS ACCOUNT_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.CHANNELS_VOD__C) AS CHANNELS_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.END_DATE_VOD__C) AS END_DATE_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ENTITY_REFERENCE_ID_VOD__C) AS ENTITY_REFERENCE_ID_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.LANGUAGE_VOD__C) AS LANGUAGE_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.LOCK_VOD__C) AS LOCK_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.NO_AUTOASSIGN_VOD__C) AS NO_AUTOASSIGN_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.NOT_COMPLETED_VOD__C) AS NOT_COMPLETED_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.REGION_VOD__C) AS REGION_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.SEGMENT_VOD__C) AS SEGMENT_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.START_DATE_VOD__C) AS START_DATE_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.STATUS_VOD__C) AS STATUS_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.SURVEY_VOD__C) AS SURVEY_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.TERRITORY_VOD__C) AS TERRITORY_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ZVOD_ADDRESS_VOD__C) AS ZVOD_ADDRESS_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.ZVOD_SPECIALTY_VOD__C) AS ZVOD_SPECIALTY_VOD__C,
        CASE WHEN (EXT_VV_SURVEY_TARGET_VOD__C_src.SCORE_VOD__C = ''::varchar) THEN NULL::numeric(11,0) ELSE (btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.SCORE_VOD__C))::numeric(11,0) END AS SCORE_VOD__C,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.Review_date_vod__c) AS Review_date_vod__c,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.Employee_vod__c) AS Employee_vod__c,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.coach_vod__c) AS coach_vod__c,
        btrim(EXT_VV_SURVEY_TARGET_VOD__C_src.Report_Status_vod__c) AS Report_Status_vod__c,
        EXT_VV_SURVEY_TARGET_VOD__C_src.batch_id,
        EXT_VV_SURVEY_TARGET_VOD__C_src.row_id,
        EXT_VV_SURVEY_TARGET_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SURVEY_TARGET_VOD__C_src;

CREATE  VIEW teva_ingestion.ext_knipper_samples_v2 AS
 SELECT btrim(ext_knipper_samples_v2_src.tvcmid) AS tvcmid,
        btrim(ext_knipper_samples_v2_src.hcp_veeva_id) AS hcp_veeva_id,
        btrim(ext_knipper_samples_v2_src.hcp_first_name) AS hcp_first_name,
        btrim(ext_knipper_samples_v2_src.hcp_middle_name) AS hcp_middle_name,
        btrim(ext_knipper_samples_v2_src.hcp_last_name) AS hcp_last_name,
        btrim(ext_knipper_samples_v2_src.hcp_designation) AS hcp_designation,
        btrim(ext_knipper_samples_v2_src.hcp_state_license_number) AS hcp_state_license_number,
        btrim(ext_knipper_samples_v2_src.hcp_address1) AS hcp_address1,
        btrim(ext_knipper_samples_v2_src.hcp_address2) AS hcp_address2,
        btrim(ext_knipper_samples_v2_src.hcp_address3) AS hcp_address3,
        btrim(ext_knipper_samples_v2_src.hcp_city) AS hcp_city,
        btrim(ext_knipper_samples_v2_src.hcp_state) AS hcp_state,
        btrim(ext_knipper_samples_v2_src.hcp_zip) AS hcp_zip,
        btrim(ext_knipper_samples_v2_src.dea_license_number) AS dea_license_number,
        btrim(ext_knipper_samples_v2_src.order_source_order_id) AS order_source_order_id,
        btrim(ext_knipper_samples_v2_src.ndc) AS ndc,
        btrim(ext_knipper_samples_v2_src.quantity) AS quantity,
        btrim(ext_knipper_samples_v2_src.order_source_job_code) AS order_source_job_code,
        btrim(ext_knipper_samples_v2_src.order_source_job_code_description) AS order_source_job_code_description,
        CASE WHEN (ext_knipper_samples_v2_src.ship_date = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_knipper_samples_v2_src.ship_date))::timestamp END AS ship_date,
        btrim(ext_knipper_samples_v2_src.territory) AS territory,
        btrim(ext_knipper_samples_v2_src.repid) AS repid,
        btrim(ext_knipper_samples_v2_src.replastname) AS replastname,
        btrim(ext_knipper_samples_v2_src.repmiddlename) AS repmiddlename,
        btrim(ext_knipper_samples_v2_src.repfirstname) AS repfirstname,
        btrim(ext_knipper_samples_v2_src.signature_type) AS signature_type,
        btrim(ext_knipper_samples_v2_src.attendeename) AS attendeename,
        btrim(ext_knipper_samples_v2_src.literature_product_id) AS literature_product_id,
        btrim(ext_knipper_samples_v2_src.literature_product_name) AS literature_product_name,
        ext_knipper_samples_v2_src.batch_id,
        ext_knipper_samples_v2_src.row_id,
        ext_knipper_samples_v2_src.update_ts
 FROM teva_ingestion.ext_knipper_samples_v2_src;

CREATE  VIEW teva_ingestion.PS_BOTOX_STEP_RESTRICTION_V01 AS
 SELECT btrim(PS_BOTOX_STEP_RESTRICTION_V01_src.code) AS code,
        btrim(PS_BOTOX_STEP_RESTRICTION_V01_src.botox_step_flag) AS botox_step_flag,
        btrim(PS_BOTOX_STEP_RESTRICTION_V01_src.restriction_group) AS restriction_group,
        btrim(PS_BOTOX_STEP_RESTRICTION_V01_src.notes) AS notes,
        PS_BOTOX_STEP_RESTRICTION_V01_src.batch_id,
        PS_BOTOX_STEP_RESTRICTION_V01_src.row_id,
        PS_BOTOX_STEP_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_BOTOX_STEP_RESTRICTION_V01_src;

CREATE  VIEW teva_ingestion.PS_CALCULATED_PBM_CONFIG_V01 AS
 SELECT btrim(PS_CALCULATED_PBM_CONFIG_V01_src.ftf_formulary_management_pbm_regex) AS ftf_formulary_management_pbm_regex,
        btrim(PS_CALCULATED_PBM_CONFIG_V01_src.ftf_formulary_influencer_pbm_regex) AS ftf_formulary_influencer_pbm_regex,
        btrim(PS_CALCULATED_PBM_CONFIG_V01_src.ftf_claims_processing_pbm_regex) AS ftf_claims_processing_pbm_regex,
        btrim(PS_CALCULATED_PBM_CONFIG_V01_src.calculated_pbm_column) AS calculated_pbm_column,
        PS_CALCULATED_PBM_CONFIG_V01_src.batch_id,
        PS_CALCULATED_PBM_CONFIG_V01_src.row_id,
        PS_CALCULATED_PBM_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_CALCULATED_PBM_CONFIG_V01_src;

CREATE  VIEW teva_ingestion.PS_CALC_PBM_KEY_PBM_MAPPING_V01 AS
 SELECT btrim(PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.calculated_pbm) AS calculated_pbm,
        btrim(PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.key_pbm) AS key_pbm,
        btrim(PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.added_by) AS added_by,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.batch_id,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.row_id,
        PS_CALC_PBM_KEY_PBM_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_CALC_PBM_KEY_PBM_MAPPING_V01_src;

CREATE  VIEW teva_ingestion.PS_COPAY_TIER_DERIVATION_CONFIG_V01 AS
 SELECT btrim(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.pharmacy_status_regex) AS pharmacy_status_regex,
        btrim(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.tier_cat) AS tier_cat,
        btrim(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.tier_regex) AS tier_regex,
        btrim(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.pref_brand_tier_regex) AS pref_brand_tier_regex,
        btrim(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.ftf_health_plan_type_regex) AS ftf_health_plan_type_regex,
        btrim(PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.copay_tier) AS copay_tier,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.batch_id,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.row_id,
        PS_COPAY_TIER_DERIVATION_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_COPAY_TIER_DERIVATION_CONFIG_V01_src;

CREATE  VIEW teva_ingestion.PS_COVERAGE_CATEGORY_DERIVATION_CONFIG AS
 SELECT btrim(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.paytype_regex) AS paytype_regex,
        btrim(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.pharmacy_status_regex) AS pharmacy_status_regex,
        btrim(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.coverage_cat_code) AS coverage_cat_code,
        btrim(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.coverage_category) AS coverage_category,
        btrim(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.restriction_cat_code_regex) AS restriction_cat_code_regex,
        btrim(PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.meaning) AS meaning,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.batch_id,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.row_id,
        PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src.update_ts
 FROM teva_ingestion.PS_COVERAGE_CATEGORY_DERIVATION_CONFIG_src;

CREATE  VIEW teva_ingestion.PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01 AS
 SELECT btrim(PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.coverage_cat) AS coverage_cat,
        btrim(PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.description) AS description,
        btrim(PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.notes) AS notes,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.batch_id,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.row_id,
        PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_COVERAGE_CAT_DESCRIPTION_MAPPING_V01_src;

CREATE  VIEW teva_ingestion.PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01 AS
 SELECT btrim(PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.ftf_health_plan_name_regex) AS ftf_health_plan_name_regex,
        btrim(PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_payer_name_regex) AS iqvia_payer_name_regex,
        btrim(PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_plan_name_regex) AS iqvia_plan_name_regex,
        btrim(PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.delete_flag) AS delete_flag,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.batch_id,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.row_id,
        PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src.update_ts
 FROM teva_ingestion.PS_DELETE_BRIDGE_FTF_PLAN_TYPES_V01_src;

CREATE  VIEW teva_ingestion.PS_DRUG_ASSIGNMENTS_V01 AS
 SELECT btrim(PS_DRUG_ASSIGNMENTS_V01_src.drug_id) AS drug_id,
        btrim(PS_DRUG_ASSIGNMENTS_V01_src.drug_seq) AS drug_seq,
        btrim(PS_DRUG_ASSIGNMENTS_V01_src.product) AS product,
        PS_DRUG_ASSIGNMENTS_V01_src.batch_id,
        PS_DRUG_ASSIGNMENTS_V01_src.row_id,
        PS_DRUG_ASSIGNMENTS_V01_src.update_ts
 FROM teva_ingestion.PS_DRUG_ASSIGNMENTS_V01_src;

CREATE  VIEW teva_ingestion.PS_FORMULARY_DERIVATION_CONFIG_V01 AS
 SELECT btrim(PS_FORMULARY_DERIVATION_CONFIG_V01_src.pharmacy_status_regex) AS pharmacy_status_regex,
        btrim(PS_FORMULARY_DERIVATION_CONFIG_V01_src.has_pa_regex) AS has_pa_regex,
        btrim(PS_FORMULARY_DERIVATION_CONFIG_V01_src.has_st_regex) AS has_st_regex,
        btrim(PS_FORMULARY_DERIVATION_CONFIG_V01_src.formulary) AS formulary,
        btrim(PS_FORMULARY_DERIVATION_CONFIG_V01_src.tier_regex) AS tier_regex,
        btrim(PS_FORMULARY_DERIVATION_CONFIG_V01_src.pref_brand_tier_regex) AS pref_brand_tier_regex,
        btrim(PS_FORMULARY_DERIVATION_CONFIG_V01_src.ftf_health_plan_type_regex) AS ftf_health_plan_type_regex,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.batch_id,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.row_id,
        PS_FORMULARY_DERIVATION_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_FORMULARY_DERIVATION_CONFIG_V01_src;

CREATE  VIEW teva_ingestion.PS_FTF_OVERRIDE_PLAN_V01 AS
 SELECT btrim(PS_FTF_OVERRIDE_PLAN_V01_src.ftf_health_plan_fid) AS ftf_health_plan_fid,
        btrim(PS_FTF_OVERRIDE_PLAN_V01_src.paytype_index) AS paytype_index,
        btrim(PS_FTF_OVERRIDE_PLAN_V01_src.notes) AS notes,
        PS_FTF_OVERRIDE_PLAN_V01_src.batch_id,
        PS_FTF_OVERRIDE_PLAN_V01_src.row_id,
        PS_FTF_OVERRIDE_PLAN_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_OVERRIDE_PLAN_V01_src;

CREATE  VIEW teva_ingestion.PS_FTF_OVERRIDE_PROVIDER_V01 AS
 SELECT btrim(PS_FTF_OVERRIDE_PROVIDER_V01_src.provider_fid) AS provider_fid,
        btrim(PS_FTF_OVERRIDE_PROVIDER_V01_src.paytype_index) AS paytype_index,
        btrim(PS_FTF_OVERRIDE_PROVIDER_V01_src.notes) AS notes,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.batch_id,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.row_id,
        PS_FTF_OVERRIDE_PROVIDER_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_OVERRIDE_PROVIDER_V01_src;

CREATE  VIEW teva_ingestion.PS_FTF_PAYTYPE_PAYTYPEINDEX_V01 AS
 SELECT btrim(PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.paytype_index) AS paytype_index,
        btrim(PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.paytype) AS paytype,
        PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.batch_id,
        PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.row_id,
        PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_PAYTYPE_PAYTYPEINDEX_V01_src;

CREATE  VIEW teva_ingestion.PS_FTF_PLANS_PAYTYPEINDEX_V01 AS
 SELECT btrim(PS_FTF_PLANS_PAYTYPEINDEX_V01_src.ftf_health_plan_type) AS ftf_health_plan_type,
        btrim(PS_FTF_PLANS_PAYTYPEINDEX_V01_src.paytype_index) AS paytype_index,
        PS_FTF_PLANS_PAYTYPEINDEX_V01_src.batch_id,
        PS_FTF_PLANS_PAYTYPEINDEX_V01_src.row_id,
        PS_FTF_PLANS_PAYTYPEINDEX_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_PLANS_PAYTYPEINDEX_V01_src;

CREATE  VIEW teva_ingestion.PS_HAS_PA_MAPPING_V01 AS
 SELECT btrim(PS_HAS_PA_MAPPING_V01_src.has_pa) AS has_pa,
        btrim(PS_HAS_PA_MAPPING_V01_src.pa_regex) AS pa_regex,
        btrim(PS_HAS_PA_MAPPING_V01_src.notes) AS notes,
        PS_HAS_PA_MAPPING_V01_src.batch_id,
        PS_HAS_PA_MAPPING_V01_src.row_id,
        PS_HAS_PA_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_HAS_PA_MAPPING_V01_src;

CREATE  VIEW teva_ingestion.PS_HAS_ST_MAPPING_V01 AS
 SELECT btrim(PS_HAS_ST_MAPPING_V01_src.has_st) AS has_st,
        btrim(PS_HAS_ST_MAPPING_V01_src.st_regex) AS st_regex,
        btrim(PS_HAS_ST_MAPPING_V01_src.notes) AS notes,
        PS_HAS_ST_MAPPING_V01_src.batch_id,
        PS_HAS_ST_MAPPING_V01_src.row_id,
        PS_HAS_ST_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_HAS_ST_MAPPING_V01_src;

CREATE  VIEW teva_ingestion.PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01 AS
 SELECT btrim(PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.iqvia_payer_name) AS iqvia_payer_name,
        btrim(PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.iqvia_plan_name_regex) AS iqvia_plan_name_regex,
        btrim(PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.paytype) AS paytype,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.batch_id,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.row_id,
        PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src.update_ts
 FROM teva_ingestion.PS_IQVIA_PAYER_PAYTYPE_OVERRIDE_V01_src;

CREATE  VIEW teva_ingestion.PS_IQVIA_PAYTYPEINDEX_V01 AS
 SELECT btrim(PS_IQVIA_PAYTYPEINDEX_V01_src.paytype_index) AS paytype_index,
        btrim(PS_IQVIA_PAYTYPEINDEX_V01_src.paytype) AS paytype,
        PS_IQVIA_PAYTYPEINDEX_V01_src.batch_id,
        PS_IQVIA_PAYTYPEINDEX_V01_src.row_id,
        PS_IQVIA_PAYTYPEINDEX_V01_src.update_ts
 FROM teva_ingestion.PS_IQVIA_PAYTYPEINDEX_V01_src;

CREATE  VIEW teva_ingestion.PS_IQVIA_PLANS_DISCARD_V01 AS
 SELECT btrim(PS_IQVIA_PLANS_DISCARD_V01_src.payer_id) AS payer_id,
        btrim(PS_IQVIA_PLANS_DISCARD_V01_src.notes) AS notes,
        PS_IQVIA_PLANS_DISCARD_V01_src.batch_id,
        PS_IQVIA_PLANS_DISCARD_V01_src.row_id,
        PS_IQVIA_PLANS_DISCARD_V01_src.update_ts
 FROM teva_ingestion.PS_IQVIA_PLANS_DISCARD_V01_src;

CREATE  VIEW teva_ingestion.PS_KEY_CONTROLLER_LIST_V01 AS
 SELECT btrim(PS_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_fid) AS ftf_health_plan_fid,
        btrim(PS_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_name) AS ftf_health_plan_name,
        btrim(PS_KEY_CONTROLLER_LIST_V01_src.key_controlling_account) AS key_controlling_account,
        btrim(PS_KEY_CONTROLLER_LIST_V01_src.key_controlling_plan_formulary) AS key_controlling_plan_formulary,
        btrim(PS_KEY_CONTROLLER_LIST_V01_src.key_controlling_parent) AS key_controlling_parent,
        btrim(PS_KEY_CONTROLLER_LIST_V01_src.payer_pbm) AS payer_pbm,
        PS_KEY_CONTROLLER_LIST_V01_src.batch_id,
        PS_KEY_CONTROLLER_LIST_V01_src.row_id,
        PS_KEY_CONTROLLER_LIST_V01_src.update_ts
 FROM teva_ingestion.PS_KEY_CONTROLLER_LIST_V01_src;

CREATE  VIEW teva_ingestion.PS_MEDICAL_REC_RESTRICTION_V01 AS
 SELECT btrim(PS_MEDICAL_REC_RESTRICTION_V01_src.code) AS code,
        btrim(PS_MEDICAL_REC_RESTRICTION_V01_src.medical_records_submission_required_flag) AS medical_records_submission_required_flag,
        btrim(PS_MEDICAL_REC_RESTRICTION_V01_src.restriction_detail_id) AS restriction_detail_id,
        btrim(PS_MEDICAL_REC_RESTRICTION_V01_src.notes) AS notes,
        PS_MEDICAL_REC_RESTRICTION_V01_src.batch_id,
        PS_MEDICAL_REC_RESTRICTION_V01_src.row_id,
        PS_MEDICAL_REC_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_MEDICAL_REC_RESTRICTION_V01_src;

CREATE  VIEW teva_ingestion.PS_MODEL_PAYTYPE_MAP_V01 AS
 SELECT btrim(PS_MODEL_PAYTYPE_MAP_V01_src.model) AS model,
        btrim(PS_MODEL_PAYTYPE_MAP_V01_src.paytype) AS paytype,
        btrim(PS_MODEL_PAYTYPE_MAP_V01_src.notes) AS notes,
        PS_MODEL_PAYTYPE_MAP_V01_src.batch_id,
        PS_MODEL_PAYTYPE_MAP_V01_src.row_id,
        PS_MODEL_PAYTYPE_MAP_V01_src.update_ts
 FROM teva_ingestion.PS_MODEL_PAYTYPE_MAP_V01_src;

CREATE  VIEW teva_ingestion.PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01 AS
 SELECT btrim(PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.ftf_health_plan_name_regex) AS ftf_health_plan_name_regex,
        btrim(PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_payer_name_regex) AS iqvia_payer_name_regex,
        btrim(PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.iqvia_plan_name_regex) AS iqvia_plan_name_regex,
        btrim(PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.override_ftf_health_plan_type) AS override_ftf_health_plan_type,
        btrim(PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.override_precedence) AS override_precedence,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.batch_id,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.row_id,
        PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src.update_ts
 FROM teva_ingestion.PS_OVERRIDE_BRIDGE_FTF_PLAN_TYPES_V01_src;

CREATE  VIEW teva_ingestion.PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01 AS
 SELECT btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.iqvia_plan_code) AS iqvia_plan_code,
        btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.iqvia_plan_name) AS iqvia_plan_name,
        btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_fid) AS ftf_health_plan_fid,
        btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.ftf_health_plan_name) AS ftf_health_plan_name,
        btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.key_controlling_plan_formulary) AS key_controlling_plan_formulary,
        btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.key_controlling_account) AS key_controlling_account,
        btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.key_controlling_parent) AS key_controlling_parent,
        btrim(PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.payer_pbm) AS payer_pbm,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.batch_id,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.row_id,
        PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src.update_ts
 FROM teva_ingestion.PS_OVERRIDE_FID_IQVIA_KEY_CONTROLLER_LIST_V01_src;

CREATE  VIEW teva_ingestion.PS_PATIENT_PA_RESTRICTION_V01 AS
 SELECT btrim(PS_PATIENT_PA_RESTRICTION_V01_src.code) AS code,
        btrim(PS_PATIENT_PA_RESTRICTION_V01_src.patient_prior_authorization_category) AS patient_prior_authorization_category,
        btrim(PS_PATIENT_PA_RESTRICTION_V01_src.restriction_detail_id) AS restriction_detail_id,
        btrim(PS_PATIENT_PA_RESTRICTION_V01_src.notes) AS notes,
        PS_PATIENT_PA_RESTRICTION_V01_src.batch_id,
        PS_PATIENT_PA_RESTRICTION_V01_src.row_id,
        PS_PATIENT_PA_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_PATIENT_PA_RESTRICTION_V01_src;

CREATE  VIEW teva_ingestion.PS_PAT_PA_RESTRICTION_DESCRIPTION_V01 AS
 SELECT btrim(PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.patpa) AS patpa,
        btrim(PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.description) AS description,
        PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.batch_id,
        PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.row_id,
        PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src.update_ts
 FROM teva_ingestion.PS_PAT_PA_RESTRICTION_DESCRIPTION_V01_src;

CREATE  VIEW teva_ingestion.PS_PA_RESTRICTION_V01 AS
 SELECT btrim(PS_PA_RESTRICTION_V01_src.code) AS code,
        btrim(PS_PA_RESTRICTION_V01_src.prescriber_prior_authorization_category) AS prescriber_prior_authorization_category,
        btrim(PS_PA_RESTRICTION_V01_src.restriction_detail_id) AS restriction_detail_id,
        btrim(PS_PA_RESTRICTION_V01_src.notes) AS notes,
        PS_PA_RESTRICTION_V01_src.batch_id,
        PS_PA_RESTRICTION_V01_src.row_id,
        PS_PA_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_PA_RESTRICTION_V01_src;

CREATE  VIEW teva_ingestion.PS_PRES_PA_RESTRICTION_DESCRIPTION_V01 AS
 SELECT btrim(PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.prespa) AS prespa,
        btrim(PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.description) AS description,
        PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.batch_id,
        PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.row_id,
        PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src.update_ts
 FROM teva_ingestion.PS_PRES_PA_RESTRICTION_DESCRIPTION_V01_src;

CREATE  VIEW teva_ingestion.PS_PROVIDER_OVERRIDE_DEFAULT_V01 AS
 SELECT btrim(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.provider_id) AS provider_id,
        btrim(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.paytype_regex) AS paytype_regex,
        btrim(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.provider_name) AS provider_name,
        btrim(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.fill_in_iqvia_payer_name_if_no_bridge) AS fill_in_iqvia_payer_name_if_no_bridge,
        btrim(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.override_best_iqvia_payer) AS override_best_iqvia_payer,
        btrim(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.fill_in_iqvia_pbm_if_no_bridge) AS fill_in_iqvia_pbm_if_no_bridge,
        btrim(PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.override_best_iqvia_pbm) AS override_best_iqvia_pbm,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.batch_id,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.row_id,
        PS_PROVIDER_OVERRIDE_DEFAULT_V01_src.update_ts
 FROM teva_ingestion.PS_PROVIDER_OVERRIDE_DEFAULT_V01_src;

CREATE  VIEW teva_ingestion.PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01 AS
 SELECT btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.tier_regex) AS tier_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.has_pa_has_st_regex) AS has_pa_has_st_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.unspec_regex) AS unspec_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.step_regex) AS step_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.botox_regex) AS botox_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.prespa_regex) AS prespa_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.tier_cat_regex) AS tier_cat_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.medrecs_regex) AS medrecs_regex,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.restcat) AS restcat,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.restriction_category) AS restriction_category,
        btrim(PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.meaning) AS meaning,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.batch_id,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.row_id,
        PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src.update_ts
 FROM teva_ingestion.PS_RESTRICTION_CATEGORY_DERIVATION_CONFIG_V01_src;

CREATE  VIEW teva_ingestion.PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01 AS
 SELECT btrim(PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.rest_cat) AS rest_cat,
        btrim(PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.description) AS description,
        btrim(PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.notes) AS notes,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.batch_id,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.row_id,
        PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_RESTRICTION_CAT_DESCRIPTION_MAPPING_V01_src;

CREATE  VIEW teva_ingestion.PS_STEP_RESTRICTION_DESCRIPTION_V01 AS
 SELECT btrim(PS_STEP_RESTRICTION_DESCRIPTION_V01_src.step) AS step,
        btrim(PS_STEP_RESTRICTION_DESCRIPTION_V01_src.description) AS description,
        PS_STEP_RESTRICTION_DESCRIPTION_V01_src.batch_id,
        PS_STEP_RESTRICTION_DESCRIPTION_V01_src.row_id,
        PS_STEP_RESTRICTION_DESCRIPTION_V01_src.update_ts
 FROM teva_ingestion.PS_STEP_RESTRICTION_DESCRIPTION_V01_src;

CREATE  VIEW teva_ingestion.PS_STEP_RESTRICTION_V01 AS
 SELECT btrim(PS_STEP_RESTRICTION_V01_src.code) AS code,
        btrim(PS_STEP_RESTRICTION_V01_src.step_category) AS step_category,
        btrim(PS_STEP_RESTRICTION_V01_src.restriction_group) AS restriction_group,
        btrim(PS_STEP_RESTRICTION_V01_src.notes) AS notes,
        PS_STEP_RESTRICTION_V01_src.batch_id,
        PS_STEP_RESTRICTION_V01_src.row_id,
        PS_STEP_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_STEP_RESTRICTION_V01_src;

CREATE  VIEW teva_ingestion.PS_TIER_CAT_DESCRIPTION_MAPPING_V01 AS
 SELECT btrim(PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.tier_cat) AS tier_cat,
        btrim(PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.description) AS description,
        btrim(PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.notes) AS notes,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.batch_id,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.row_id,
        PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src.update_ts
 FROM teva_ingestion.PS_TIER_CAT_DESCRIPTION_MAPPING_V01_src;

CREATE  VIEW teva_ingestion.PS_UNSPECIFIED_REC_RESTRICTION_V01 AS
 SELECT btrim(PS_UNSPECIFIED_REC_RESTRICTION_V01_src.code) AS code,
        btrim(PS_UNSPECIFIED_REC_RESTRICTION_V01_src.unspecified_restriction_flag) AS unspecified_restriction_flag,
        btrim(PS_UNSPECIFIED_REC_RESTRICTION_V01_src.restriction_detail_id) AS restriction_detail_id,
        btrim(PS_UNSPECIFIED_REC_RESTRICTION_V01_src.notes) AS notes,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.batch_id,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.row_id,
        PS_UNSPECIFIED_REC_RESTRICTION_V01_src.update_ts
 FROM teva_ingestion.PS_UNSPECIFIED_REC_RESTRICTION_V01_src;

CREATE  VIEW teva_ingestion.PS_FTF_PBM_FUNCTIONS_V01 AS
 SELECT btrim(PS_FTF_PBM_FUNCTIONS_V01_src.pbm_function_id) AS pbm_function_id,
        btrim(PS_FTF_PBM_FUNCTIONS_V01_src.pbm_function) AS pbm_function,
        btrim(PS_FTF_PBM_FUNCTIONS_V01_src.notes) AS notes,
        btrim(PS_FTF_PBM_FUNCTIONS_V01_src.used) AS used,
        PS_FTF_PBM_FUNCTIONS_V01_src.batch_id,
        PS_FTF_PBM_FUNCTIONS_V01_src.row_id,
        PS_FTF_PBM_FUNCTIONS_V01_src.update_ts
 FROM teva_ingestion.PS_FTF_PBM_FUNCTIONS_V01_src;

CREATE  VIEW teva_ingestion.EXT_FTF_FORMULARIES AS
 SELECT btrim(EXT_FTF_FORMULARIES_src.HEALTH_PLAN_ID) AS HEALTH_PLAN_ID,
        btrim(EXT_FTF_FORMULARIES_src.DRUG_ID) AS DRUG_ID,
        btrim(EXT_FTF_FORMULARIES_src.TIER_CODE) AS TIER_CODE,
        btrim(EXT_FTF_FORMULARIES_src.RESTRICTIONS) AS RESTRICTIONS,
        btrim(EXT_FTF_FORMULARIES_src.REASON_CODE) AS REASON_CODE,
        btrim(EXT_FTF_FORMULARIES_src.REASON_CODE_DESCRIPTION) AS REASON_CODE_DESCRIPTION,
        btrim(EXT_FTF_FORMULARIES_src.pharmacy_status) AS pharmacy_status,
        btrim(EXT_FTF_FORMULARIES_src.market_access_coverage) AS market_access_coverage,
        EXT_FTF_FORMULARIES_src.batch_id,
        EXT_FTF_FORMULARIES_src.row_id,
        EXT_FTF_FORMULARIES_src.update_ts
 FROM teva_ingestion.EXT_FTF_FORMULARIES_src
 WHERE (EXT_FTF_FORMULARIES_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_FTF_FORMULARIES'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_ZS_TEVA_PAYER_MASTER_DETALS AS
 SELECT btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.plan_code) AS plan_code,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.plan_name) AS plan_name,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.payer_name) AS payer_name,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.pbm) AS pbm,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.payment_type) AS payment_type,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.key_controlling_plan_formulary) AS key_controlling_plan_formulary,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.key_controlling_account) AS key_controlling_account,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.ajovy_access_for_ftf_plan) AS ajovy_access_for_ftf_plan,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.aimovig_access_for_ftf_plan) AS aimovig_access_for_ftf_plan,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.emgality_access_for_ftf_plan) AS emgality_access_for_ftf_plan,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.apportionment_factor) AS apportionment_factor,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.key_controlling_parent) AS key_controlling_parent,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.pbm_payer_filter) AS pbm_payer_filter,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.gpo) AS gpo,
        btrim(EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.refresh_month) AS refresh_month,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.batch_id,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.row_id,
        EXT_ZS_TEVA_PAYER_MASTER_DETALS_src.update_ts
 FROM teva_ingestion.EXT_ZS_TEVA_PAYER_MASTER_DETALS_src;

CREATE  VIEW teva_ingestion.EXT_ZS_TEVA_PAYER_WRKBK AS
 SELECT btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.plan_code) AS plan_code,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Final_Key_Controlling_Account) AS final_key_controlling_account,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Key_Parent_Account) AS key_parent_account,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.PBM) AS pbm,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Payer) AS payer,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Plan) AS plan,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.State_Code) AS state_code,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.AJOVY_TRx) AS ajovy_trx,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Aimovig_TRx) AS aimovig_trx,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Emgality_TRx) AS emgality_trx,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.aCGRP_TRx) AS acgrp_trx,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.AJOVY_Share_Percent) AS ajovy_share_percent,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Aimovig_Share_Percent) AS aimovig_share_percent,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Emgality_Share_Percent) AS emgality_share_percent,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Latest_Mth_AJOVY_TRx) AS latest_mth_ajovy_trx,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Latest_Mth_AJOVY_Share_Percent) AS latest_mth_ajovy_share_percent,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Lives_Covered_Total) AS lives_covered_total,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Ajovy_Formulary_Status) AS ajovy_formulary_status,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Aimovig_Formulary_Status) AS aimovig_formulary_status,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Emgality_Formulary_Status) AS emgality_formulary_status,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Plan_Payment_Type) AS plan_payment_type,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Priority_Account_flag) AS priority_account_flag,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Justification) AS justification,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.Plan_Mapping) AS plan_mapping,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.key_controlling_parent) AS key_controlling_parent,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.pbm_payer_filter) AS pbm_payer_filter,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.gpo) AS gpo,
        btrim(EXT_ZS_TEVA_PAYER_WRKBK_src.refresh_month) AS refresh_month,
        EXT_ZS_TEVA_PAYER_WRKBK_src.batch_id,
        EXT_ZS_TEVA_PAYER_WRKBK_src.row_id,
        EXT_ZS_TEVA_PAYER_WRKBK_src.update_ts
 FROM teva_ingestion.EXT_ZS_TEVA_PAYER_WRKBK_src;

CREATE  VIEW teva_ingestion.EXT_VV_ACCOUNT AS
 SELECT btrim(EXT_VV_ACCOUNT_src.ID) AS id,
        btrim(EXT_VV_ACCOUNT_src.ISDELETED) AS isdeleted,
        btrim(EXT_VV_ACCOUNT_src.MASTERRECORDID) AS masterrecordid,
        btrim(EXT_VV_ACCOUNT_src.NAME) AS name,
        btrim(EXT_VV_ACCOUNT_src.LASTNAME) AS lastname,
        btrim(EXT_VV_ACCOUNT_src.FIRSTNAME) AS firstname,
        btrim(EXT_VV_ACCOUNT_src.SALUTATION) AS salutation,
        btrim(EXT_VV_ACCOUNT_src.TYPE) AS type,
        btrim(EXT_VV_ACCOUNT_src.RECORDTYPEID) AS recordtypeid,
        btrim(EXT_VV_ACCOUNT_src.PHONE) AS phone,
        btrim(EXT_VV_ACCOUNT_src.FAX) AS fax,
        btrim(EXT_VV_ACCOUNT_src.WEBSITE) AS website,
        EXT_VV_ACCOUNT_src.NUMBEROFEMPLOYEES AS numberofemployees,
        btrim(EXT_VV_ACCOUNT_src.OWNERSHIP) AS ownership,
        btrim(EXT_VV_ACCOUNT_src.OWNERID) AS ownerid,
        CASE WHEN (EXT_VV_ACCOUNT_src.CREATEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.CREATEDDATE))::timestamp END AS createddate,
        btrim(EXT_VV_ACCOUNT_src.CREATEDBYID) AS createdbyid,
        CASE WHEN (EXT_VV_ACCOUNT_src.LASTMODIFIEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.LASTMODIFIEDDATE))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_ACCOUNT_src.LASTMODIFIEDBYID) AS lastmodifiedbyid,
        btrim(EXT_VV_ACCOUNT_src.SYSTEMMODSTAMP) AS systemmodstamp,
        CASE WHEN (EXT_VV_ACCOUNT_src.LASTACTIVITYDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.LASTACTIVITYDATE))::timestamp END AS lastactivitydate,
        btrim(EXT_VV_ACCOUNT_src.MAYEDIT) AS mayedit,
        btrim(EXT_VV_ACCOUNT_src.ISLOCKED) AS islocked,
        CASE WHEN (EXT_VV_ACCOUNT_src.LASTVIEWEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.LASTVIEWEDDATE))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_VV_ACCOUNT_src.LASTREFERENCEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.LASTREFERENCEDDATE))::timestamp END AS lastreferenceddate,
        btrim(EXT_VV_ACCOUNT_src.ISEXCLUDEDFROMREALIGN) AS isexcludedfromrealign,
        btrim(EXT_VV_ACCOUNT_src.PERSONCONTACTID) AS personcontactid,
        btrim(EXT_VV_ACCOUNT_src.ISPERSONACCOUNT) AS ispersonaccount,
        btrim(EXT_VV_ACCOUNT_src.PERSONMAILINGSTREET) AS personmailingstreet,
        btrim(EXT_VV_ACCOUNT_src.PERSONMAILINGCITY) AS personmailingcity,
        btrim(EXT_VV_ACCOUNT_src.PERSONMAILINGSTATE) AS personmailingstate,
        btrim(EXT_VV_ACCOUNT_src.PERSONMAILINGPOSTALCODE) AS personmailingpostalcode,
        btrim(EXT_VV_ACCOUNT_src.PERSONMAILINGCOUNTRY) AS personmailingcountry,
        EXT_VV_ACCOUNT_src.PERSONMAILINGLATITUDE AS personmailinglatitude,
        EXT_VV_ACCOUNT_src.PERSONMAILINGLONGITUDE AS personmailinglongitude,
        btrim(EXT_VV_ACCOUNT_src.PERSONOTHERSTREET) AS personotherstreet,
        btrim(EXT_VV_ACCOUNT_src.PERSONOTHERCITY) AS personothercity,
        btrim(EXT_VV_ACCOUNT_src.PERSONOTHERSTATE) AS personotherstate,
        btrim(EXT_VV_ACCOUNT_src.PERSONOTHERPOSTALCODE) AS personotherpostalcode,
        btrim(EXT_VV_ACCOUNT_src.PERSONOTHERCOUNTRY) AS personothercountry,
        EXT_VV_ACCOUNT_src.PERSONOTHERLATITUDE AS personotherlatitude,
        EXT_VV_ACCOUNT_src.PERSONOTHERLONGITUDE AS personotherlongitude,
        btrim(EXT_VV_ACCOUNT_src.PERSONMOBILEPHONE) AS personmobilephone,
        btrim(EXT_VV_ACCOUNT_src.PERSONHOMEPHONE) AS personhomephone,
        btrim(EXT_VV_ACCOUNT_src.PERSONOTHERPHONE) AS personotherphone,
        btrim(EXT_VV_ACCOUNT_src.PERSONASSISTANTPHONE) AS personassistantphone,
        btrim(EXT_VV_ACCOUNT_src.PERSONEMAIL) AS personemail,
        btrim(EXT_VV_ACCOUNT_src.PERSONTITLE) AS persontitle,
        btrim(EXT_VV_ACCOUNT_src.PERSONDEPARTMENT) AS persondepartment,
        btrim(EXT_VV_ACCOUNT_src.PERSONASSISTANTNAME) AS personassistantname,
        btrim(EXT_VV_ACCOUNT_src.PERSONBIRTHDATE) AS personbirthdate,
        btrim(EXT_VV_ACCOUNT_src.PERSONHASOPTEDOUTOFEMAIL) AS personhasoptedoutofemail,
        btrim(EXT_VV_ACCOUNT_src.PERSONHASOPTEDOUTOFFAX) AS personhasoptedoutoffax,
        btrim(EXT_VV_ACCOUNT_src.PERSONDONOTCALL) AS persondonotcall,
        CASE WHEN (EXT_VV_ACCOUNT_src.PERSONLASTCUREQUESTDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.PERSONLASTCUREQUESTDATE))::timestamp END AS personlastcurequestdate,
        CASE WHEN (EXT_VV_ACCOUNT_src.PERSONLASTCUUPDATEDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.PERSONLASTCUUPDATEDATE))::timestamp END AS personlastcuupdatedate,
        btrim(EXT_VV_ACCOUNT_src.PERSONEMAILBOUNCEDREASON) AS personemailbouncedreason,
        CASE WHEN (EXT_VV_ACCOUNT_src.PERSONEMAILBOUNCEDDATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.PERSONEMAILBOUNCEDDATE))::timestamp END AS personemailbounceddate,
        btrim(EXT_VV_ACCOUNT_src.JIGSAW) AS jigsaw,
        btrim(EXT_VV_ACCOUNT_src.JIGSAWCOMPANYID) AS jigsawcompanyid,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNTSOURCE) AS accountsource,
        btrim(EXT_VV_ACCOUNT_src.SICDESC) AS sicdesc,
        btrim(EXT_VV_ACCOUNT_src.EXTERNAL_ID_VOD__C) AS external_id_vod__c,
        btrim(EXT_VV_ACCOUNT_src.CREDENTIALS_VOD__C) AS credentials_vod__c,
        btrim(EXT_VV_ACCOUNT_src.EXCLUDE_FROM_ZIP_TO_TERR_PROCE) AS exclude_from_zip_to_terr_proce,
        btrim(EXT_VV_ACCOUNT_src.GROUP_SPECIALTY_1_VOD__C) AS group_specialty_1_vod__c,
        btrim(EXT_VV_ACCOUNT_src.GROUP_SPECIALTY_2_VOD__C) AS group_specialty_2_vod__c,
        btrim(EXT_VV_ACCOUNT_src.SPECIALTY_1_VOD__C) AS specialty_1_vod__c,
        btrim(EXT_VV_ACCOUNT_src.SPECIALTY_2_VOD__C) AS specialty_2_vod__c,
        btrim(EXT_VV_ACCOUNT_src.FORMATTED_NAME_VOD__C) AS formatted_name_vod__c,
        btrim(EXT_VV_ACCOUNT_src.TERRITORY_TEST_VOD__C) AS territory_test_vod__c,
        btrim(EXT_VV_ACCOUNT_src.MOBILE_ID_VOD__C) AS mobile_id_vod__c,
        btrim(EXT_VV_ACCOUNT_src.GENDER_VOD__C) AS gender_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ID_VOD__C) AS id_vod__c,
        btrim(EXT_VV_ACCOUNT_src.DO_NOT_SYNC_SALES_DATA_VOD__C) AS do_not_sync_sales_data_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ID2_VOD__C) AS id2_vod__c,
        btrim(EXT_VV_ACCOUNT_src.PREFERRED_NAME_VOD__C) AS preferred_name_vod__c,
        btrim(EXT_VV_ACCOUNT_src.SAMPLE_DEFAULT_VOD__C) AS sample_default_vod__c,
        btrim(EXT_VV_ACCOUNT_src.SEGMENTATIONS_VOD__C) AS segmentations_vod__c,
        btrim(EXT_VV_ACCOUNT_src.RESTRICTED_PRODUCTS_VOD__C) AS restricted_products_vod__c,
        btrim(EXT_VV_ACCOUNT_src.PAYER_ID_VOD__C) AS payer_id_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_STATUS_TVA__C) AS account_status_tva__c,
        btrim(EXT_VV_ACCOUNT_src.DO_NOT_CALL_VOD__C) AS do_not_call_vod__c,
        EXT_VV_ACCOUNT_src.BEDS__C AS beds__c,
        btrim(EXT_VV_ACCOUNT_src.SPEND_AMOUNT__C) AS spend_amount__c,
        btrim(EXT_VV_ACCOUNT_src.PDRP_OPT_OUT_VOD__C) AS pdrp_opt_out_vod__c,
        btrim(EXT_VV_ACCOUNT_src.SPEND_STATUS_VALUE_VOD__C) AS spend_status_value_vod__c,
        CASE WHEN (EXT_VV_ACCOUNT_src.PDRP_OPT_OUT_DATE_VOD__C = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.PDRP_OPT_OUT_DATE_VOD__C))::timestamp END AS pdrp_opt_out_date_vod__c,
        btrim(EXT_VV_ACCOUNT_src.SPEND_STATUS_VOD__C) AS spend_status_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ENABLE_RESTRICTED_PRODUCTS) AS enable_restricted_products,
        btrim(EXT_VV_ACCOUNT_src.CALL_REMINDER_VOD__C) AS call_reminder_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_GROUP_VOD__C) AS account_group_vod__c,
        btrim(EXT_VV_ACCOUNT_src.PRIMARY_PARENT_VOD__C) AS primary_parent_vod__c,
        btrim(EXT_VV_ACCOUNT_src.COLOR_VOD__C) AS color_vod__c,
        btrim(EXT_VV_ACCOUNT_src.MIDDLE_VOD__C) AS middle_vod__c,
        btrim(EXT_VV_ACCOUNT_src.SUFFIX_VOD__C) AS suffix_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_LOCATION_TVA__C) AS account_location_tva__c,
        btrim(EXT_VV_ACCOUNT_src.NO_ORDERS_VOD__C) AS no_orders_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_MASTER_ID_TVA__C) AS account_master_id_tva__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_EMAIL_TVA__C) AS account_email_tva__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_FIRSTLAST) AS account_search_firstlast,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_LASTFIRST) AS account_search_lastfirst,
        btrim(EXT_VV_ACCOUNT_src.PERSON_PREFERRED_NAME_TVA__C) AS person_preferred_name_tva__c,
        btrim(EXT_VV_ACCOUNT_src.PRACTICE_AT_HOSPITAL_VOD__C) AS practice_at_hospital_vod__c,
        btrim(EXT_VV_ACCOUNT_src.PRACTICE_NEAR_HOSPITAL_VOD__C) AS practice_near_hospital_vod__c,
        btrim(EXT_VV_ACCOUNT_src.DO_NOT_CREATE_CHILD_ACCOUNT) AS do_not_create_child_account,
        EXT_VV_ACCOUNT_src.TOTAL_MDS_DOS__C AS total_mds_dos__c,
        btrim(EXT_VV_ACCOUNT_src.AHA__C) AS aha__c,
        btrim(EXT_VV_ACCOUNT_src.ORDER_TYPE_VOD__C) AS order_type_vod__c,
        btrim(EXT_VV_ACCOUNT_src.NPI_VOD__C) AS npi_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ME__C) AS me__c,
        btrim(EXT_VV_ACCOUNT_src.SPEAKER__C) AS speaker__c,
        btrim(EXT_VV_ACCOUNT_src.INVESTIGATOR_VOD__C) AS investigator_vod__c,
        btrim(EXT_VV_ACCOUNT_src.DEFAULT_ORDER_TYPE_VOD__C) AS default_order_type_vod__c,
        btrim(EXT_VV_ACCOUNT_src.PERSON_DEGREE_TVA__C) AS person_degree_tva__c,
        btrim(EXT_VV_ACCOUNT_src.TAX_STATUS__C) AS tax_status__c,
        btrim(EXT_VV_ACCOUNT_src.MODEL__C) AS model__c,
        btrim(EXT_VV_ACCOUNT_src.OFFERINGS__C) AS offerings__c,
        EXT_VV_ACCOUNT_src.DEPARTMENTS__C AS departments__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_TYPE__C) AS account_type__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_SEARCH_BUSINESS_VOD__C) AS account_search_business_vod__c,
        btrim(EXT_VV_ACCOUNT_src.BUSINESS_PROFESSIONAL_PERSON) AS business_professional_person,
        btrim(EXT_VV_ACCOUNT_src.NO_SPEND_TVA__C) AS no_spend_tva__c,
        btrim(EXT_VV_ACCOUNT_src.HOSPITAL_TYPE_VOD__C) AS hospital_type_vod__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_CLASS_VOD__C) AS account_class_vod__c,
        btrim(EXT_VV_ACCOUNT_src.FURIGANA_VOD__C) AS furigana_vod__c,
        btrim(EXT_VV_ACCOUNT_src.TIRF_REMS_TVA__C) AS tirf_rems_tva__c,
        btrim(EXT_VV_ACCOUNT_src.FENTORA_APP_TVA__C) AS fentora_app_tva__c,
        EXT_VV_ACCOUNT_src.TOTAL_REVENUE_000__C AS total_revenue_000__c,
        EXT_VV_ACCOUNT_src.NET_INCOME_LOSS_000__C AS net_income_loss_000__c,
        EXT_VV_ACCOUNT_src.PMPM_INCOME_LOSS_000__C AS pmpm_income_loss_000__c,
        EXT_VV_ACCOUNT_src.COMMERCIAL_PREMIUMS_PMPM__C AS commercial_premiums_pmpm__c,
        EXT_VV_ACCOUNT_src.MEDICAL_LOSS_RATIO__C AS medical_loss_ratio__c,
        EXT_VV_ACCOUNT_src.MEDICAL_EXPENSES_PMPM__C AS medical_expenses_pmpm__c,
        EXT_VV_ACCOUNT_src.COMMERCIAL_PATIENT_DAYS_1000 AS commercial_patient_days_1000,
        EXT_VV_ACCOUNT_src.HMO_MARKET_SHR__C AS hmo_market_shr__c,
        EXT_VV_ACCOUNT_src.HMO__C AS hmo__c,
        EXT_VV_ACCOUNT_src.HMO_POS__C AS hmo_pos__c,
        EXT_VV_ACCOUNT_src.PPO__C AS ppo__c,
        EXT_VV_ACCOUNT_src.PPO_POS__C AS ppo_pos__c,
        EXT_VV_ACCOUNT_src.MEDICARE__C AS medicare__c,
        EXT_VV_ACCOUNT_src.MEDICAID__C AS medicaid__c,
        btrim(EXT_VV_ACCOUNT_src.NUVIGIL_APP_TVA__C) AS nuvigil_app_tva__c,
        btrim(EXT_VV_ACCOUNT_src.MDS_STATUS_TVA__C) AS mds_status_tva__c,
        btrim(EXT_VV_ACCOUNT_src.LIS_STATUS_TVA__C) AS lis_status_tva__c,
        btrim(EXT_VV_ACCOUNT_src.DNC_PCS_TVA__C) AS dnc_pcs_tva__c,
        btrim(EXT_VV_ACCOUNT_src.DNC_CNS_TVA__C) AS dnc_cns_tva__c,
        btrim(EXT_VV_ACCOUNT_src.SUFFIX_TVA__C) AS suffix_tva__c,
        btrim(EXT_VV_ACCOUNT_src.TYSABRI_STATUS_TVA__C) AS tysabri_status_tva__c,
        btrim(EXT_VV_ACCOUNT_src.BUSINESS_DESCRIPTION__C) AS business_description__c,
        btrim(EXT_VV_ACCOUNT_src.REGIONAL_STRATEGY__C) AS regional_strategy__c,
        btrim(EXT_VV_ACCOUNT_src.CONTRACTS_PROCESS__C) AS contracts_process__c,
        btrim(EXT_VV_ACCOUNT_src.CML_PROFILED_TVA__C) AS cml_profiled_tva__c,
        btrim(EXT_VV_ACCOUNT_src.CELL_PHONE_TVA__C) AS cell_phone_tva__c,
        btrim(EXT_VV_ACCOUNT_src.NO_CONTACT_TVA__C) AS no_contact_tva__c,
        btrim(EXT_VV_ACCOUNT_src.OUTLET_ID_TVA__C) AS outlet_id_tva__c,
        btrim(EXT_VV_ACCOUNT_src.PMO_GPO_ACCOUNT_AFFILIATIONS) AS pmo_gpo_account_affiliations,
        btrim(EXT_VV_ACCOUNT_src.TERRITORY_STATUS_TVA__C) AS territory_status_tva__c,
        btrim(EXT_VV_ACCOUNT_src.ZDEA_NUMBER_TVA__C) AS zdea_number_tva__c,
        btrim(EXT_VV_ACCOUNT_src.VEEVA_ID_TVA__C) AS veeva_id_tva__c,
        btrim(EXT_VV_ACCOUNT_src.TREANDA_LQ_TGT_TVA__C) AS treanda_lq_tgt_tva__c,
        btrim(EXT_VV_ACCOUNT_src.TBO_FILGRASTIM_TARGET_TVA__C) AS tbo_filgrastim_target_tva__c,
        btrim(EXT_VV_ACCOUNT_src.SLN_RESCRUB_TVA__C) AS sln_rescrub_tva__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_IDENTIFIER_VOD__C) AS account_identifier_vod__c,
        btrim(EXT_VV_ACCOUNT_src.TARGET__C) AS target__c,
        btrim(EXT_VV_ACCOUNT_src.KOL_VOD__C) AS kol_vod__c,
        btrim(EXT_VV_ACCOUNT_src.REMS_EXPIRATION_DATE_TEVA__C) AS rems_expiration_date_teva__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_DEMO_ID_TVA__C) AS account_demo_id_tva__c,
        EXT_VV_ACCOUNT_src.TOTAL_LIVES__C AS total_lives__c,
        EXT_VV_ACCOUNT_src.TOTAL_PHYSICIANS_ENROLLED__C AS total_physicians_enrolled__c,
        btrim(EXT_VV_ACCOUNT_src.TIRF_REMS_EFF_DATE_TVA__C) AS tirf_rems_eff_date_tva__c,
        btrim(EXT_VV_ACCOUNT_src.BUSINESS_ASSOCIATE_AGREEMENT) AS business_associate_agreement,
        btrim(EXT_VV_ACCOUNT_src.DO_NOT_PROMOTE_TVA__C) AS do_not_promote_tva__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_DEA_TVA__C) AS account_dea_tva__c,
        btrim(EXT_VV_ACCOUNT_src.BP_NUMBER__C) AS bp_number__c,
        btrim(EXT_VV_ACCOUNT_src.PARAGARD_SEGMENTATION_TVA__C) AS paragard_segmentation_tva__c,
        btrim(EXT_VV_ACCOUNT_src.TELESALES_ACTIVITY_TVA__C) AS telesales_activity_tva__c,
        btrim(EXT_VV_ACCOUNT_src.DESIGNATION_TVA__C) AS designation_tva__c,
        EXT_VV_ACCOUNT_src.TOTAL_PHARMACISTS__C AS total_pharmacists__c,
        btrim(EXT_VV_ACCOUNT_src.COMP_PRICING_TVA__C) AS comp_pricing_tva__c,
        btrim(EXT_VV_ACCOUNT_src.FORMULARY_TVA__C) AS formulary_tva__c,
        btrim(EXT_VV_ACCOUNT_src.GLN_TVA__C) AS gln_tva__c,
        btrim(EXT_VV_ACCOUNT_src.GPO_CONTRACTS_TVA__C) AS gpo_contracts_tva__c,
        btrim(EXT_VV_ACCOUNT_src.HIN_TVA__C) AS hin_tva__c,
        btrim(EXT_VV_ACCOUNT_src.MAX_ID_TVA__C) AS max_id_tva__c,
        btrim(EXT_VV_ACCOUNT_src.ONCOLOGY_SERVICES_TVA__C) AS oncology_services_tva__c,
        btrim(EXT_VV_ACCOUNT_src.PCP_PROGRAM_TVA__C) AS pcp_program_tva__c,
        btrim(EXT_VV_ACCOUNT_src.PHARMACY_LOCATION_TVA__C) AS pharmacy_location_tva__c,
        btrim(EXT_VV_ACCOUNT_src.PRIMARY_CREDENTIAL_TVA__C) AS primary_credential_tva__c,
        btrim(EXT_VV_ACCOUNT_src.PRIMARY_WHOLESALER_TVA__C) AS primary_wholesaler_tva__c,
        btrim(EXT_VV_ACCOUNT_src.REP_CREDENTIALING_TVA__C) AS rep_credentialing_tva__c,
        btrim(EXT_VV_ACCOUNT_src.SECONDARY_CREDENTIAL_TVA__C) AS secondary_credential_tva__c,
        btrim(EXT_VV_ACCOUNT_src.SIGN_IN_LOCATION_TVA__C) AS sign_in_location_tva__c,
        btrim(EXT_VV_ACCOUNT_src.SPECIAL_TVA__C) AS special_tva__c,
        btrim(EXT_VV_ACCOUNT_src.SUB_TYPE_ID_TVA__C) AS sub_type_id_tva__c,
        btrim(EXT_VV_ACCOUNT_src.SUB_TYPE_TVA__C) AS sub_type_tva__c,
        btrim(EXT_VV_ACCOUNT_src.TEVA_CONTRACTS_TVA__C) AS teva_contracts_tva__c,
        btrim(EXT_VV_ACCOUNT_src.IMS_ORG_ID_TVA__C) AS ims_org_id_tva__c,
        btrim(EXT_VV_ACCOUNT_src.CM_ID_TVA__C) AS cm_id_tva__c,
        CASE WHEN (EXT_VV_ACCOUNT_src.YEAR_OF_BIRTH_TVA__C = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_ACCOUNT_src.YEAR_OF_BIRTH_TVA__C))::timestamp END AS year_of_birth_tva__c,
        btrim(EXT_VV_ACCOUNT_src.TEACHING_HOSPITAL_TVA__C) AS teaching_hospital_tva__c,
        btrim(EXT_VV_ACCOUNT_src.ACCOUNT_ARCHIVED_TVA__C) AS account_archived_tva__c,
        btrim(EXT_VV_ACCOUNT_src.MOBILE_ID_VOD__PC) AS mobile_id_vod__pc,
        btrim(EXT_VV_ACCOUNT_src.STAFF_EMAIL) AS staff_email,
        btrim(EXT_VV_ACCOUNT_src.COMPANY_MANAGED_EMAIL) AS company_managed_email,
        btrim(EXT_VV_ACCOUNT_src.ALTERNATE_EMAIL) AS alternate_email,
        btrim(EXT_VV_ACCOUNT_src.ACCREDITATIONS_KAM__C) AS accreditations_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ADDL_SVCS_PATIENT_SVCS_OFFERING_KAM__C) AS addl_svcs_patient_svcs_offering_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ADDL_SERVICES_SALESFORCE_KAM__C) AS addl_services_salesforce_kam__c,
        btrim(EXT_VV_ACCOUNT_src.AGGREGATION_GROUP_KAM__C) AS aggregation_group_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ALVIMOPAN_ANDA_KAM__C) AS alvimopan_anda_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ALVIMOPAN_BRAND_USAGE_KAM__C) AS alvimopan_brand_usage_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ALVIMOPAN_CONVERTED_KAM__C) AS alvimopan_converted_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ALVIMOPAN_REMS_KAM__C) AS alvimopan_rems_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ALVIMOPAN_USAGE_KAM__C) AS alvimopan_usage_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ANDA_ACCOUNT_KAM__C) AS anda_account_kam__c,
        btrim(EXT_VV_ACCOUNT_src.GPO_IDN__C) AS gpo_idn__c,
        btrim(EXT_VV_ACCOUNT_src.GPO_OAKAM__C) AS gpo_oakam__c,
        btrim(EXT_VV_ACCOUNT_src.GPO_AFFILIATIONS_KAM__C) AS gpo_affiliations_kam__c,
        btrim(EXT_VV_ACCOUNT_src.HERZUMA_TARGET_KAM__C) AS herzuma_target_kam__c,
        btrim(EXT_VV_ACCOUNT_src.IDN_KAM__C) AS idn_kam__c,
        btrim(EXT_VV_ACCOUNT_src.IDN_SPECIALTY_PHARMACY__C) AS idn_specialty_pharmacy__c,
        btrim(EXT_VV_ACCOUNT_src.KAM_PRIMARY_CONTACT__C) AS kam_primary_contact__c,
        btrim(EXT_VV_ACCOUNT_src.LOC_KAM__C) AS loc_kam__c,
        btrim(EXT_VV_ACCOUNT_src.PCP_KAM__C) AS pcp_kam__c,
        btrim(EXT_VV_ACCOUNT_src.PHARMACY_CLASSIFICATION_KAM__C) AS pharmacy_classification_kam__c,
        btrim(EXT_VV_ACCOUNT_src.PHARMACY_TYPE_KAM__C) AS pharmacy_type_kam__c,
        btrim(EXT_VV_ACCOUNT_src.PREFERRED_WHOLESALER_KAM__C) AS preferred_wholesaler_kam__c,
        btrim(EXT_VV_ACCOUNT_src.PURCHASING_HERZUMA_KAM__C) AS purchasing_herzuma_kam__c,
        btrim(EXT_VV_ACCOUNT_src.PURCHASING_TRUXIMA_KAM__C) AS purchasing_truxima_kam__c,
        btrim(EXT_VV_ACCOUNT_src.RA_TARGET_KAM__C) AS ra_target_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ROMIDEPSIN_CONVERTED_KAM__C) AS romidepsin_converted_kam__c,
        btrim(EXT_VV_ACCOUNT_src.ROMIDEPSIN_TARGET_KAM__C) AS romidepsin_target_kam__c,
        btrim(EXT_VV_ACCOUNT_src.RX_NETWORKS_SUB_GROUP_KAM__C) AS rx_networks_sub_group_kam__c,
        btrim(EXT_VV_ACCOUNT_src.SECONDARY_WHOLESALER_KAM__C) AS secondary_wholesaler_kam__c,
        btrim(EXT_VV_ACCOUNT_src.SPECIALTY_PHARMACY_NETWORK_AFFIL_KAM__C) AS specialty_pharmacy_network_affil_kam__c,
        btrim(EXT_VV_ACCOUNT_src.STATES_IN_NETWORK_FOR_MEDICAID_KAM__C) AS states_in_network_for_medicaid_kam__c,
        btrim(EXT_VV_ACCOUNT_src.STATES_LICENSED_TO_DISPENSE_KAM__C) AS states_licensed_to_dispense_kam__c,
        btrim(EXT_VV_ACCOUNT_src.THERAPEUTIC_FOCUS_CONDITIONS_SERVED_KAM__C) AS therapeutic_focus_conditions_served_kam__c,
        btrim(EXT_VV_ACCOUNT_src.TRUXIMA_TARGET_KAM__C) AS truxima_target_kam__c,
        btrim(EXT_VV_ACCOUNT_src.WHOLESALER_KAM__C) AS wholesaler_kam__c,
        btrim(EXT_VV_ACCOUNT_src.buy_and_bill_tva__c) AS buy_and_bill_tva__c,
        btrim(EXT_VV_ACCOUNT_src.free_trial_program_established_tva__c) AS free_trial_program_established_tva__c,
        btrim(EXT_VV_ACCOUNT_src.hcps_at_account_accept_samples_tva__c) AS hcps_at_account_accept_samples_tva__c,
        btrim(EXT_VV_ACCOUNT_src.pt_committee_approval_tva__c) AS pt_committee_approval_tva__c,
        btrim(EXT_VV_ACCOUNT_src.type_of_account_tva__c) AS type_of_account_tva__c,
        btrim(EXT_VV_ACCOUNT_src.t22s2_rep_email_personemail_status_tva__c) AS t22s2_rep_email_personemail_status_tva__c,
        btrim(EXT_VV_ACCOUNT_src.t22s2_rep_email_staffemail_status_tva__c) AS t22s2_rep_email_staffemail_status_tva__c,
        btrim(EXT_VV_ACCOUNT_src.t22s2_rep_email_status2_tva__c) AS t22s2_rep_email_status2_tva__c,
        btrim(EXT_VV_ACCOUNT_src.co_mgd_email_exp_tva__c) AS co_mgd_email_exp_tva__c,
        EXT_VV_ACCOUNT_src.batch_id,
        EXT_VV_ACCOUNT_src.row_id,
        EXT_VV_ACCOUNT_src.update_ts
 FROM teva_ingestion.EXT_VV_ACCOUNT_src;

CREATE  VIEW teva_ingestion.EXT_VV_CALL2_VOD__C AS
 SELECT btrim(EXT_VV_CALL2_VOD__C_src.id) AS id,
        btrim(EXT_VV_CALL2_VOD__C_src.ownerid) AS ownerid,
        btrim(EXT_VV_CALL2_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_CALL2_VOD__C_src.name) AS name,
        btrim(EXT_VV_CALL2_VOD__C_src.recordtypeid) AS recordtypeid,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.createddate))::timestamp END AS createddate,
        btrim(EXT_VV_CALL2_VOD__C_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_CALL2_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_CALL2_VOD__C_src.systemmodstamp) AS systemmodstamp,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.lastactivitydate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.lastactivitydate))::timestamp END AS lastactivitydate,
        btrim(EXT_VV_CALL2_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_CALL2_VOD__C_src.islocked) AS islocked,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.lastvieweddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.lastvieweddate))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.lastreferenceddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.lastreferenceddate))::timestamp END AS lastreferenceddate,
        btrim(EXT_VV_CALL2_VOD__C_src.sample_card_vod__c) AS sample_card_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.add_detail_vod__c) AS add_detail_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.property_vod__c) AS property_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.account_vod__c) AS account_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_product_discussion_vod__c) AS zvod_product_discussion_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.status_vod__c) AS status_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.parent_address_vod__c) AS parent_address_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.account_plan_vod__c) AS account_plan_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_savenew_vod__c) AS zvod_savenew_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.next_call_notes_vod__c) AS next_call_notes_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.mobile_id_vod__c) AS mobile_id_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_account_credentials_vod_c) AS zvod_account_credentials_vod_c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_account_preferred_name_vo) AS zvod_account_preferred_name_vo,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_account_sample_status_vod) AS zvod_account_sample_status_vod,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_attendees_vod__c) AS zvod_attendees_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_key_messages_vod__c) AS zvod_key_messages_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_detailing_vod__c) AS zvod_detailing_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_expenses_vod__c) AS zvod_expenses_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_followup_vod__c) AS zvod_followup_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_samples_vod__c) AS zvod_samples_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_save_vod__c) AS zvod_save_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_submit_vod__c) AS zvod_submit_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_delete_vod__c) AS zvod_delete_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.activity_type__c) AS activity_type__c,
        btrim(EXT_VV_CALL2_VOD__C_src.significant_event__c) AS significant_event__c,
        btrim(EXT_VV_CALL2_VOD__C_src.location_vod__c) AS location_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.subject_vod__c) AS subject_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.call_datetime_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.call_datetime_vod__c))::timestamp END AS call_datetime_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.disbursed_to_vod__c) AS disbursed_to_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.request_receipt_vod__c) AS request_receipt_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.signature_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.signature_date_vod__c))::timestamp END AS signature_date_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.territory_vod__c) AS territory_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.submitted_by_mobile_vod__c) AS submitted_by_mobile_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.call_type_vod__c) AS call_type_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.add_key_message_vod__c) AS add_key_message_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.address_vod__c) AS address_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.attendees_vod__c) AS attendees_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.attendee_type_vod__c) AS attendee_type_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.call_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.call_date_vod__c))::timestamp END AS call_date_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.detailed_products_vod__c) AS detailed_products_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.no_disbursement_vod__c) AS no_disbursement_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.parent_call_vod__c) AS parent_call_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.user_vod__c) AS user_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.contact_vod__c) AS contact_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_entity_vod__c) AS zvod_entity_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.medical_event_vod__c) AS medical_event_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.mobile_created_datetime_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.mobile_created_datetime_vod__c))::timestamp END AS mobile_created_datetime_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.mobile_last_modified_datetime = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.mobile_last_modified_datetime))::timestamp END AS mobile_last_modified_datetime,
        btrim(EXT_VV_CALL2_VOD__C_src.license_vod__c) AS license_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.is_parent_call_vod__c) AS is_parent_call_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.entity_display_name_vod__c) AS entity_display_name_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.last_device_vod__c) AS last_device_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_address_line_1_vod__c) AS ship_address_line_1_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_address_line_2_vod__c) AS ship_address_line_2_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_city_vod__c) AS ship_city_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_country_vod__c) AS ship_country_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.ship_license_expiration_date = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.ship_license_expiration_date))::timestamp END AS ship_license_expiration_date,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_license_status_vod__c) AS ship_license_status_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_license_vod__c) AS ship_license_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_state_vod__c) AS ship_state_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_to_address_vod__c) AS ship_to_address_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_zip_vod__c) AS ship_zip_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_to_address_text_vod__c) AS ship_to_address_text_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.clm_vod__c) AS clm_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_clmdetails_vod__c) AS zvod_clmdetails_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.is_sampled_call_vod__c) AS is_sampled_call_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_surveys_vod__c) AS zvod_surveys_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.presentations_vod__c) AS presentations_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.entity_reference_id_vod__c) AS entity_reference_id_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.error_reference_call_vod__c) AS error_reference_call_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.duration_vod__c) AS duration_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.color_vod__c) AS color_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.allowed_products_vod__c) AS allowed_products_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_attachments_vod__c) AS zvod_attachments_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.sample_card_reason_vod__c) AS sample_card_reason_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.assmca_vod__c) AS assmca_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.address_line_1_vod__c) AS address_line_1_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.address_line_2_vod__c) AS address_line_2_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.city_vod__c) AS city_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_address_line_1_vod__c) AS dea_address_line_1_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_address_line_2_vod__c) AS dea_address_line_2_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_address_vod__c) AS dea_address_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_city_vod__c) AS dea_city_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.dea_expiration_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.dea_expiration_date_vod__c))::timestamp END AS dea_expiration_date_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_state_vod__c) AS dea_state_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_zip_4_vod__c) AS dea_zip_4_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_zip_vod__c) AS dea_zip_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.dea_vod__c) AS dea_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_zip_4_vod__c) AS ship_zip_4_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.state_vod__c) AS state_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zip_4_vod__c) AS zip_4_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zip_vod__c) AS zip_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.sample_send_card_vod__c) AS sample_send_card_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_address_vod_c_dea_status_) AS zvod_address_vod_c_dea_status_,
        btrim(EXT_VV_CALL2_VOD__C_src.signature_page_image_vod__c) AS signature_page_image_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.credentials_vod__c) AS credentials_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.salutation_vod__c) AS salutation_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_account_call_reminder_vod) AS zvod_account_call_reminder_vod,
        btrim(EXT_VV_CALL2_VOD__C_src.sales_org_tva__c) AS sales_org_tva__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_business_account_vod__c) AS zvod_business_account_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.product_priority_1_vod__c) AS product_priority_1_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.product_priority_2_vod__c) AS product_priority_2_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.product_priority_3_vod__c) AS product_priority_3_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.product_priority_4_vod__c) AS product_priority_4_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.product_priority_5_vod__c) AS product_priority_5_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_more_actions_vod__c) AS zvod_more_actions_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_call_conflict_status) AS zvod_call_conflict_status,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.signature_timestamp_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.signature_timestamp_vod__c))::timestamp END AS signature_timestamp_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.expense_amount_vod__c) AS expense_amount_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.total_expense_attendees_count) AS total_expense_attendees_count,
        btrim(EXT_VV_CALL2_VOD__C_src.attendee_list_vod__c) AS attendee_list_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.expense_post_status_vod__c) AS expense_post_status_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.attendee_post_status_vod__c) AS attendee_post_status_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.expense_system_external_id) AS expense_system_external_id,
        btrim(EXT_VV_CALL2_VOD__C_src.incurred_expense_vod__c) AS incurred_expense_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.assigner_vod__c) AS assigner_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.assignment_datetime_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.assignment_datetime_vod__c))::timestamp END AS assignment_datetime_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.zvod_call_objective_vod__c) AS zvod_call_objective_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.signature_location_longitude) AS signature_location_longitude,
        btrim(EXT_VV_CALL2_VOD__C_src.signature_location_latitude) AS signature_location_latitude,
        btrim(EXT_VV_CALL2_VOD__C_src.location_services_status) AS location_services_status,
        btrim(EXT_VV_CALL2_VOD__C_src.created_by_timezone_tva__c) AS created_by_timezone_tva__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.license_expiration_date_vod__c = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.license_expiration_date_vod__c))::timestamp END AS license_expiration_date_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.license_status_vod__c) AS license_status_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_assmca_vod__c) AS ship_assmca_vod__c,
        CASE WHEN (EXT_VV_CALL2_VOD__C_src.ship_dea_expiration_date = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_CALL2_VOD__C_src.ship_dea_expiration_date))::timestamp END AS ship_dea_expiration_date,
        btrim(EXT_VV_CALL2_VOD__C_src.ship_dea_vod__c) AS ship_dea_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.call_method_tva__c) AS call_method_tva__c,
        btrim(EXT_VV_CALL2_VOD__C_src.bendeka_indication_tva__c) AS bendeka_indication_tva__c,
        btrim(EXT_VV_CALL2_VOD__C_src.austedo_indication_tva__c) AS austedo_indication_tva__c,
        btrim(EXT_VV_CALL2_VOD__C_src.call_duration_tva__c) AS call_duration_tva__c,
        btrim(EXT_VV_CALL2_VOD__C_src.How_Executed_TVA__c) AS how_executed_tva__c,
        btrim(EXT_VV_CALL2_VOD__C_src.Remote_Meeting_vod__c) AS remote_meeting_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.Veeva_Remote_Meeting_Id_vod__c) AS veeva_remote_meeting_id_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.Cobrowse_URL_Participant_vod__c) AS cobrowse_url_participant_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.Signature_Captured_Remotely_vod__c) AS signature_captured_remotely_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.Remote_Signature_Attendee_Name_vod__c) AS remote_signature_attendee_name_vod__c,
        btrim(EXT_VV_CALL2_VOD__C_src.t21s10_austedo_indication_tva__c) AS t21s10_austedo_indication_tva__c,
        btrim(EXT_VV_CALL2_VOD__C_src.t22s2_outcomes_from_visit__c) AS t22s2_outcomes_from_visit__c,
        btrim(EXT_VV_CALL2_VOD__C_src.t22s2_visit_trigger__c) AS t22s2_visit_trigger__c,
        btrim(EXT_VV_CALL2_VOD__C_src.t22s2_visit_trigger_date__c) AS t22s2_visit_trigger_date__c,
        EXT_VV_CALL2_VOD__C_src.batch_id,
        EXT_VV_CALL2_VOD__C_src.row_id,
        EXT_VV_CALL2_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_VV_ACCOUNTSHARE AS
 SELECT btrim(EXT_VV_ACCOUNTSHARE_src.ACCOUNTACCESSLEVEL) AS ACCOUNTACCESSLEVEL,
        btrim(EXT_VV_ACCOUNTSHARE_src.ACCOUNTID) AS ACCOUNTID,
        btrim(EXT_VV_ACCOUNTSHARE_src.CASEACCESSLEVEL) AS CASEACCESSLEVEL,
        btrim(EXT_VV_ACCOUNTSHARE_src.CONTACTACCESSLEVEL) AS CONTACTACCESSLEVEL,
        btrim(EXT_VV_ACCOUNTSHARE_src.ID) AS ID,
        btrim(EXT_VV_ACCOUNTSHARE_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_ACCOUNTSHARE_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_ACCOUNTSHARE_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_ACCOUNTSHARE_src.OPPORTUNITYACCESSLEVEL) AS OPPORTUNITYACCESSLEVEL,
        btrim(EXT_VV_ACCOUNTSHARE_src.ROWCAUSE) AS ROWCAUSE,
        btrim(EXT_VV_ACCOUNTSHARE_src.USERORGROUPID) AS USERORGROUPID,
        EXT_VV_ACCOUNTSHARE_src.batch_id,
        EXT_VV_ACCOUNTSHARE_src.row_id,
        EXT_VV_ACCOUNTSHARE_src.update_ts
 FROM teva_ingestion.EXT_VV_ACCOUNTSHARE_src
 WHERE (EXT_VV_ACCOUNTSHARE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_ACCOUNTSHARE'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_VV_ACCT_MERGE_HISTORY_VOD AS
 SELECT btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ID) AS ID,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.NAME) AS NAME,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ACCOUNT_VOD__C) AS ACCOUNT_VOD__C,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.PERSONCONTACTID_VOD__C) AS PERSONCONTACTID_VOD__C,
        btrim(EXT_VV_ACCT_MERGE_HISTORY_VOD_src.ACCOUNT_PERSONCONTACTID_VOD__C) AS ACCOUNT_PERSONCONTACTID_VOD__C,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.batch_id,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.row_id,
        EXT_VV_ACCT_MERGE_HISTORY_VOD_src.update_ts
 FROM teva_ingestion.EXT_VV_ACCT_MERGE_HISTORY_VOD_src
 WHERE (EXT_VV_ACCT_MERGE_HISTORY_VOD_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_ACCT_MERGE_HISTORY_VOD'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_VV_ADDRESS_VOD__C AS
 SELECT btrim(EXT_VV_ADDRESS_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_ADDRESS_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_ADDRESS_VOD__C_src.RECORDTYPEID) AS RECORDTYPEID,
        btrim(EXT_VV_ADDRESS_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_ADDRESS_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_ADDRESS_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_ADDRESS_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ACCOUNT_VOD__C) AS ACCOUNT_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ADDRESS_LINE_2_VOD__C) AS ADDRESS_LINE_2_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.CITY_VOD__C) AS CITY_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.DEA_VOD__C) AS DEA_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.DEA_EXPIRATION_DATE_VOD__C) AS DEA_EXPIRATION_DATE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.DEA_LICENSE_ADDRESS_VOD__C) AS DEA_LICENSE_ADDRESS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.PHONE_VOD__C) AS PHONE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.FAX_VOD__C) AS FAX_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.MAP_VOD__C) AS MAP_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.SHIPPING_VOD__C) AS SHIPPING_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.PRIMARY_VOD__C) AS PRIMARY_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LICENSE_VOD__C) AS LICENSE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LICENSE_EXPIRATION_DATE_VOD__C) AS LICENSE_EXPIRATION_DATE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.STAFF_NOTES_VOD__C) AS STAFF_NOTES_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.APPT_REQUIRED_VOD__C) AS APPT_REQUIRED_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.OFFICE_NOTES_VOD__C) AS OFFICE_NOTES_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LICENSE_STATUS_VOD__C) AS LICENSE_STATUS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ZIP_4_VOD__C) AS ZIP_4_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.PHONE_2_VOD__C) AS PHONE_2_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.FAX_2_VOD__C) AS FAX_2_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LICENSE_VALID_TO_SAMPLE_VOD__C) AS LICENSE_VALID_TO_SAMPLE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.SAMPLE_STATUS_VOD__C) AS SAMPLE_STATUS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.INCLUDE_TERRITORY_ASSIGNMENT) AS INCLUDE_TERRITORY_ASSIGNMENT,
        btrim(EXT_VV_ADDRESS_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.INACTIVE_VOD__C) AS INACTIVE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LOCK_VOD__C) AS LOCK_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.COUNTRY_VOD__C) AS COUNTRY_VOD__C,
        CASE WHEN (EXT_VV_ADDRESS_VOD__C_src.LATITUDE_VOD__C = ''::varchar) THEN NULL::numeric(15,6) ELSE (btrim(EXT_VV_ADDRESS_VOD__C_src.LATITUDE_VOD__C))::numeric(15,6) END AS LATITUDE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ZIP_VOD__C) AS ZIP_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.BEST_TIMES_VOD__C) AS BEST_TIMES_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.SOURCE_VOD__C) AS SOURCE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.BRICK_VOD__C) AS BRICK_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ASSMCA_VOD__C) AS ASSMCA_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.DEA_ADDRESS_VOD__C) AS DEA_ADDRESS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.DEA_SCHEDULE_VOD__C) AS DEA_SCHEDULE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.BUSINESS_VOD__C) AS BUSINESS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.BILLING_VOD__C) AS BILLING_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.HOME_VOD__C) AS HOME_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.MAILING_VOD__C) AS MAILING_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.STATE_VOD__C) AS STATE_VOD__C,
        CASE WHEN (EXT_VV_ADDRESS_VOD__C_src.LONGITUDE_VOD__C = ''::varchar) THEN NULL::numeric(15,6) ELSE (btrim(EXT_VV_ADDRESS_VOD__C_src.LONGITUDE_VOD__C))::numeric(15,6) END AS LONGITUDE_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.DEA_STATUS_VOD__C) AS DEA_STATUS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ENTITY_REFERENCE_ID_VOD__C) AS ENTITY_REFERENCE_ID_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.CONTROLLING_ADDRESS_VOD__C) AS CONTROLLING_ADDRESS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.CONTROLLED_ADDRESS_VOD__C) AS CONTROLLED_ADDRESS_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.NO_ADDRESS_COPY_VOD__C) AS NO_ADDRESS_COPY_VOD__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.ADDRESS_LINE_3_TVA__C) AS ADDRESS_LINE_3_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.COUNTY_TVA__C) AS COUNTY_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.EXTERNAL_SLN_TVA__C) AS EXTERNAL_SLN_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LICENSE_EXPIRATION_DATE_TVA__C) AS LICENSE_EXPIRATION_DATE_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.REP_ENTERED_SLN_TVA__C) AS REP_ENTERED_SLN_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.DEA_CONTACT_TVA__C) AS DEA_CONTACT_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.MARK_FOR_DELETION_TVA__C) AS MARK_FOR_DELETION_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LICENSE_VALID_DATE_TVA__C) AS LICENSE_VALID_DATE_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.LICENSE_VALID_NUM_TVA__C) AS LICENSE_VALID_NUM_TVA__C,
        btrim(EXT_VV_ADDRESS_VOD__C_src.CM_ID_TVA__C) AS CM_ID_TVA__C,
        EXT_VV_ADDRESS_VOD__C_src.batch_id,
        EXT_VV_ADDRESS_VOD__C_src.row_id,
        EXT_VV_ADDRESS_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_ADDRESS_VOD__C_src
 WHERE (EXT_VV_ADDRESS_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_ADDRESS_VOD__C'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_VV_AFFILIATION_VOD__C AS
 SELECT btrim(EXT_VV_AFFILIATION_VOD__C_src.CHILD_AFFILIATION_VOD__C) AS CHILD_AFFILIATION_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.DESTROY_VOD__C) AS DESTROY_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.DISABLE_TRIGGER_VOD__C) AS DISABLE_TRIGGER_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.FROM_ACCOUNT_VOD__C) AS FROM_ACCOUNT_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.FROM_CONTACT_VOD__C) AS FROM_CONTACT_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.INFLUENCE_VOD__C) AS INFLUENCE_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.OWNERID) AS OWNERID,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.PARENT_VOD__C) AS PARENT_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.ROLE_VOD__C) AS ROLE_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.TO_ACCOUNT_VOD__C) AS TO_ACCOUNT_VOD__C,
        btrim(EXT_VV_AFFILIATION_VOD__C_src.TO_CONTACT_VOD__C) AS TO_CONTACT_VOD__C,
        EXT_VV_AFFILIATION_VOD__C_src.batch_id,
        EXT_VV_AFFILIATION_VOD__C_src.row_id,
        EXT_VV_AFFILIATION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_AFFILIATION_VOD__C_src
 WHERE (EXT_VV_AFFILIATION_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_AFFILIATION_VOD__C'::varchar(25))));

CREATE  VIEW teva_ingestion.EXT_VV_ASSESSMENT__C AS
 SELECT btrim(EXT_VV_ASSESSMENT__C_src.ACCOUNT__C) AS ACCOUNT__C,
        btrim(EXT_VV_ASSESSMENT__C_src.ASSESSMENT_DATE_TVA__C) AS ASSESSMENT_DATE_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CC_PATIENT_PROFILES__C) AS CC_PATIENT_PROFILES__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CC_STUDY_LEVERAGE__C) AS CC_STUDY_LEVERAGE__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q1_TVA__C) AS CML_Q1_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q2_TVA__C) AS CML_Q2_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q3_TVA__C) AS CML_Q3_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q4_TVA__C) AS CML_Q4_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q5_1_TVA__C) AS CML_Q5_1_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q5_TVA__C) AS CML_Q5_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q6_TVA__C) AS CML_Q6_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q7_1_TVA__C) AS CML_Q7_1_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CML_Q7_TVA__C) AS CML_Q7_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.COMMUNITY_ACTIVITY__C) AS COMMUNITY_ACTIVITY__C,
        btrim(EXT_VV_ASSESSMENT__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_ASSESSMENT__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_ASSESSMENT__C_src.HISTORICAL_ASSESSMENT_TVA__C) AS HISTORICAL_ASSESSMENT_TVA__C,
        btrim(EXT_VV_ASSESSMENT__C_src.ID) AS ID,
        btrim(EXT_VV_ASSESSMENT__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_ASSESSMENT__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_ASSESSMENT__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_ASSESSMENT__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_ASSESSMENT__C_src.LN_PATIENT_PROFILES__C) AS LN_PATIENT_PROFILES__C,
        btrim(EXT_VV_ASSESSMENT__C_src.LN_STUDY_LEVERAGE__C) AS LN_STUDY_LEVERAGE__C,
        btrim(EXT_VV_ASSESSMENT__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_ASSESSMENT__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_ASSESSMENT__C_src.NAME) AS NAME,
        btrim(EXT_VV_ASSESSMENT__C_src.ONCOLOGY_BOARD__C) AS ONCOLOGY_BOARD__C,
        btrim(EXT_VV_ASSESSMENT__C_src.PREFERRED_PATHOLOGIST__C) AS PREFERRED_PATHOLOGIST__C,
        btrim(EXT_VV_ASSESSMENT__C_src.RECORDTYPEID) AS RECORDTYPEID,
        btrim(EXT_VV_ASSESSMENT__C_src.RESEARCH_FOCUS__C) AS RESEARCH_FOCUS__C,
        btrim(EXT_VV_ASSESSMENT__C_src.RL_PATIENT_PROFILES__C) AS RL_PATIENT_PROFILES__C,
        btrim(EXT_VV_ASSESSMENT__C_src.RL_STUDY_LEVERAGE__C) AS RL_STUDY_LEVERAGE__C,
        btrim(EXT_VV_ASSESSMENT__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_ASSESSMENT__C_src.TREATMENT_PREFERENCES__C) AS TREATMENT_PREFERENCES__C,
        btrim(EXT_VV_ASSESSMENT__C_src.TREATMENT_VOLUME__C) AS TREATMENT_VOLUME__C,
        btrim(EXT_VV_ASSESSMENT__C_src.TUMOR_TYPES__C) AS TUMOR_TYPES__C,
        EXT_VV_ASSESSMENT__C_src.batch_id,
        EXT_VV_ASSESSMENT__C_src.row_id,
        EXT_VV_ASSESSMENT__C_src.update_ts
 FROM teva_ingestion.EXT_VV_ASSESSMENT__C_src
 WHERE (EXT_VV_ASSESSMENT__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_ASSESSMENT__C'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_VV_CALL2_DETAIL_VOD__C AS
 SELECT btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.id) AS id,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.name) AS name,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.createddate) AS createddate,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.createdbyid) AS createdbyid,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.is_parent_call_vod__c) AS is_parent_call_vod__c,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.call2_vod__c) AS call2_vod__c,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.product_vod__c) AS product_vod__c,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.detail_priority_vod__c) AS detail_priority_vod__c,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.mobile_id_vod__c) AS mobile_id_vod__c,
        btrim(EXT_VV_CALL2_DETAIL_VOD__C_src.type_vod__c) AS type_vod__c,
        EXT_VV_CALL2_DETAIL_VOD__C_src.batch_id,
        EXT_VV_CALL2_DETAIL_VOD__C_src.row_id,
        EXT_VV_CALL2_DETAIL_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_DETAIL_VOD__C_src
 WHERE (EXT_VV_CALL2_DETAIL_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_CALL2_DETAIL_VOD__C'::varchar(26))));

CREATE  VIEW teva_ingestion.EXT_VV_CALL2_KEY_MESSAGE_VOD AS
 SELECT btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.id) AS id,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.name) AS name,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.createddate) AS createddate,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.createdbyid) AS createdbyid,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.lastmodifieddate) AS lastmodifieddate,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.mayedit) AS mayedit,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.islocked) AS islocked,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.account_vod__c) AS account_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.call2_vod__c) AS call2_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.reaction_vod__c) AS reaction_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.product_vod__c) AS product_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.key_message_vod__c) AS key_message_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.mobile_id_vod__c) AS mobile_id_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.contact_vod__c) AS contact_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.call_date_vod__c) AS call_date_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.user_vod__c) AS user_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.category_vod__c) AS category_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.vehicle_vod__c) AS vehicle_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.is_parent_call_vod__c) AS is_parent_call_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.clm_id_vod__c) AS clm_id_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.slide_version_vod__c) AS slide_version_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.duration_vod__c) AS duration_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.presentation_id_vod__c) AS presentation_id_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.start_time_vod__c) AS start_time_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.attendee_type_vod__c) AS attendee_type_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.entity_reference_id_vod__c) AS entity_reference_id_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.segment_vod__c) AS segment_vod__c,
        btrim(EXT_VV_CALL2_KEY_MESSAGE_VOD_src.display_order_vod__c) AS display_order_vod__c,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.batch_id,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.row_id,
        EXT_VV_CALL2_KEY_MESSAGE_VOD_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_KEY_MESSAGE_VOD_src
 WHERE (EXT_VV_CALL2_KEY_MESSAGE_VOD_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_CALL2_KEY_MESSAGE_VOD'::varchar(28))));

CREATE  VIEW teva_ingestion.EXT_VV_CALL2_VOD__HISTORY AS
 SELECT btrim(EXT_VV_CALL2_VOD__HISTORY_src.ID) AS ID,
        btrim(EXT_VV_CALL2_VOD__HISTORY_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_CALL2_VOD__HISTORY_src.PARENTID) AS PARENTID,
        btrim(EXT_VV_CALL2_VOD__HISTORY_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_CALL2_VOD__HISTORY_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_CALL2_VOD__HISTORY_src.FIELD) AS FIELD,
        btrim(EXT_VV_CALL2_VOD__HISTORY_src.OLDVALUE) AS OLDVALUE,
        btrim(EXT_VV_CALL2_VOD__HISTORY_src.NEWVALUE) AS NEWVALUE,
        EXT_VV_CALL2_VOD__HISTORY_src.batch_id,
        EXT_VV_CALL2_VOD__HISTORY_src.row_id,
        EXT_VV_CALL2_VOD__HISTORY_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL2_VOD__HISTORY_src
 WHERE (EXT_VV_CALL2_VOD__HISTORY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_CALL2_VOD__HISTORY'::varchar(25))));

CREATE  VIEW teva_ingestion.EXT_VV_CALL_GOAL_TVA__C AS
 SELECT btrim(EXT_VV_CALL_GOAL_TVA__C_src.ACCOUNT_TVA__C) AS ACCOUNT_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.ACTIVE_TVA__C) AS ACTIVE_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.ACTUAL_REMAINING_TVA__C) AS ACTUAL_REMAINING_TVA__C,
        CASE WHEN (EXT_VV_CALL_GOAL_TVA__C_src.ACTUAL_TVA__C = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_VV_CALL_GOAL_TVA__C_src.ACTUAL_TVA__C))::numeric(37,15) END AS ACTUAL_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.END_DATE_TVA__C) AS END_DATE_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.EXTERNAL_ID_TVA__C) AS EXTERNAL_ID_TVA__C,
        CASE WHEN (EXT_VV_CALL_GOAL_TVA__C_src.GOAL_TVA__C = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_VV_CALL_GOAL_TVA__C_src.GOAL_TVA__C))::numeric(37,15) END AS GOAL_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.ID) AS ID,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.LASTACTIVITYDATE) AS LASTACTIVITYDATE,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.NAME) AS NAME,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.OWNERID) AS OWNERID,
        CASE WHEN (EXT_VV_CALL_GOAL_TVA__C_src.PRIORITY_TVA__C = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_VV_CALL_GOAL_TVA__C_src.PRIORITY_TVA__C))::numeric(37,15) END AS PRIORITY_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.PRODUCT_CATALOG_TVA__C) AS PRODUCT_CATALOG_TVA__C,
        CASE WHEN (EXT_VV_CALL_GOAL_TVA__C_src.REMAINING_TVA__C = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_VV_CALL_GOAL_TVA__C_src.REMAINING_TVA__C))::numeric(37,15) END AS REMAINING_TVA__C,
        CASE WHEN (EXT_VV_CALL_GOAL_TVA__C_src.SORT_ORDER_TVA__C = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_VV_CALL_GOAL_TVA__C_src.SORT_ORDER_TVA__C))::numeric(37,15) END AS SORT_ORDER_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.START_DATE_TVA__C) AS START_DATE_TVA__C,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_CALL_GOAL_TVA__C_src.TERRITORY_TVA__C) AS TERRITORY_TVA__C,
        EXT_VV_CALL_GOAL_TVA__C_src.batch_id,
        EXT_VV_CALL_GOAL_TVA__C_src.row_id,
        EXT_VV_CALL_GOAL_TVA__C_src.update_ts
 FROM teva_ingestion.EXT_VV_CALL_GOAL_TVA__C_src
 WHERE (EXT_VV_CALL_GOAL_TVA__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_CALL_GOAL_TVA__C'::varchar(23))));

CREATE  VIEW teva_ingestion.EXT_VV_DECILES_TVA__C AS
 SELECT btrim(EXT_VV_DECILES_TVA__C_src.ACCOUNT_VOD__C) AS ACCOUNT_VOD__C,
        btrim(EXT_VV_DECILES_TVA__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_DECILES_TVA__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_DECILES_TVA__C_src.ID) AS ID,
        btrim(EXT_VV_DECILES_TVA__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_DECILES_TVA__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_DECILES_TVA__C_src.LASTACTIVITYDATE) AS LASTACTIVITYDATE,
        btrim(EXT_VV_DECILES_TVA__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_DECILES_TVA__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_DECILES_TVA__C_src.MARKET_TVA__C) AS MARKET_TVA__C,
        btrim(EXT_VV_DECILES_TVA__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_DECILES_TVA__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_DECILES_TVA__C_src.NAME) AS NAME,
        btrim(EXT_VV_DECILES_TVA__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_DECILES_TVA__C_src.VALUE_TVA__C) AS VALUE_TVA__C,
        EXT_VV_DECILES_TVA__C_src.batch_id,
        EXT_VV_DECILES_TVA__C_src.row_id,
        EXT_VV_DECILES_TVA__C_src.update_ts
 FROM teva_ingestion.EXT_VV_DECILES_TVA__C_src
 WHERE (EXT_VV_DECILES_TVA__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_DECILES_TVA__C'::varchar(21))));

CREATE  VIEW teva_ingestion.EXT_VV_GROUP AS
 SELECT btrim(EXT_VV_GROUP_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_GROUP_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_GROUP_src.DEVELOPERNAME) AS DEVELOPERNAME,
        btrim(EXT_VV_GROUP_src.DOESINCLUDEBOSSES) AS DOESINCLUDEBOSSES,
        btrim(EXT_VV_GROUP_src.DOESSENDEMAILTOMEMBERS) AS DOESSENDEMAILTOMEMBERS,
        btrim(EXT_VV_GROUP_src.EMAIL) AS EMAIL,
        btrim(EXT_VV_GROUP_src.ID) AS ID,
        btrim(EXT_VV_GROUP_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_GROUP_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_GROUP_src.NAME) AS NAME,
        btrim(EXT_VV_GROUP_src.OWNERID) AS OWNERID,
        btrim(EXT_VV_GROUP_src.RELATEDID) AS RELATEDID,
        btrim(EXT_VV_GROUP_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_GROUP_src.TYPE) AS TYPE,
        EXT_VV_GROUP_src.batch_id,
        EXT_VV_GROUP_src.row_id,
        EXT_VV_GROUP_src.update_ts
 FROM teva_ingestion.EXT_VV_GROUP_src
 WHERE (EXT_VV_GROUP_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_GROUP'::varchar(12))));

CREATE  VIEW teva_ingestion.EXT_VV_MEDICAL_INQUIRY_VOD__C AS
 SELECT btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ACCOUNT_VOD__C) AS ACCOUNT_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ADDRESS_LINE_1_VOD__C) AS ADDRESS_LINE_1_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ADDRESS_LINE_2_VOD__C) AS ADDRESS_LINE_2_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CALL2_VOD__C) AS CALL2_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CITY_VOD__C) AS CITY_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.COUNTRY_VOD__C) AS COUNTRY_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.DELIVERY_METHOD_VOD__C) AS DELIVERY_METHOD_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.DISCLAIMER_VOD__C) AS DISCLAIMER_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.EMAIL_VOD__C) AS EMAIL_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ENTITY_REFERENCE_ID_VOD__C) AS ENTITY_REFERENCE_ID_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.FAX_NUMBER_VOD__C) AS FAX_NUMBER_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.INQUIRY_TEXT__C) AS INQUIRY_TEXT__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.LOCK_VOD__C) AS LOCK_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.MSL_CONSULT__C) AS MSL_CONSULT__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.NEW_EMAIL_TVA__C) AS NEW_EMAIL_TVA__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.NEW_FAX_TVA__C) AS NEW_FAX_TVA__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.PHONE_NUMBER_VOD__C) AS PHONE_NUMBER_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.PRODUCT__C) AS PRODUCT__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.RECORDTYPEID) AS RECORDTYPEID,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.RUSH_DELIVERY__C) AS RUSH_DELIVERY__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SIGNATURE_DATE_VOD__C) AS SIGNATURE_DATE_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SIGNATURE_VOD__C) AS SIGNATURE_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SOURCE__C) AS SOURCE__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.STATE_VOD__C) AS STATE_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.STATUS_VOD__C) AS STATUS_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SUBMITTED_BY_MOBILE_VOD__C) AS SUBMITTED_BY_MOBILE_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ZIP_VOD__C) AS ZIP_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ZVOD_DELIVERY_METHOD_VOD__C) AS ZVOD_DELIVERY_METHOD_VOD__C,
        btrim(EXT_VV_MEDICAL_INQUIRY_VOD__C_src.ZVOD_DISCLAIMER_VOD__C) AS ZVOD_DISCLAIMER_VOD__C,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.batch_id,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.row_id,
        EXT_VV_MEDICAL_INQUIRY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_MEDICAL_INQUIRY_VOD__C_src
 WHERE (EXT_VV_MEDICAL_INQUIRY_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_MEDICAL_INQUIRY_VOD__C'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_VV_PRODUCT_METRICS_VOD__C AS
 SELECT btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.ACCOUNT_VOD__C) AS ACCOUNT_VOD__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.AWARENESS__C) AS AWARENESS__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.SELLING_STAGE__C) AS SELLING_STAGE__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.FORMULARY_STATUS__C) AS FORMULARY_STATUS__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.MOVEMENT__C = ''::varchar) THEN NULL::numeric(5,2) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.MOVEMENT__C))::numeric(5,2) END AS MOVEMENT__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.PRODUCTS_VOD__C) AS PRODUCTS_VOD__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.SEGMENT__C) AS SEGMENT__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.X12_MO_TRX_CHG__C = ''::varchar) THEN NULL::numeric(5,2) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.X12_MO_TRX_CHG__C))::numeric(5,2) END AS X12_MO_TRX_CHG__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.SPEAKER_SKILLS__C) AS SPEAKER_SKILLS__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.INVESTIGATOR_READINESS__C) AS INVESTIGATOR_READINESS__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.ENGAGEMENTS__C = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.ENGAGEMENTS__C))::numeric(4,0) END AS ENGAGEMENTS__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.DECILE_VALUE_TVA__C = ''::varchar) THEN NULL::numeric(2,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.DECILE_VALUE_TVA__C))::numeric(2,0) END AS DECILE_VALUE_TVA__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.CURRENT_TVA__C = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.CURRENT_TVA__C))::numeric(4,0) END AS CURRENT_TVA__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.EXTERNAL_ID_TVA__C) AS EXTERNAL_ID_TVA__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.MARKETING_TARGET_TVA__C) AS MARKETING_TARGET_TVA__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.PRIOR_TVA__C = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.PRIOR_TVA__C))::numeric(4,0) END AS PRIOR_TVA__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.REP_TARGET_TVA__C) AS REP_TARGET_TVA__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.SBO_TARGET_TVA__C) AS SBO_TARGET_TVA__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_3_MONTH_TVA__C = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_3_MONTH_TVA__C))::numeric(4,0) END AS TRX_3_MONTH_TVA__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_6_MONTH_TVA__C = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_6_MONTH_TVA__C))::numeric(4,0) END AS TRX_6_MONTH_TVA__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_YTD_TVA__C = ''::varchar) THEN NULL::numeric(4,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.TRX_YTD_TVA__C))::numeric(4,0) END AS TRX_YTD_TVA__C,
        CASE WHEN (EXT_VV_PRODUCT_METRICS_VOD__C_src.CP_DECILE_TVA__C = ''::varchar) THEN NULL::numeric(2,0) ELSE (btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.CP_DECILE_TVA__C))::numeric(2,0) END AS CP_DECILE_TVA__C,
        btrim(EXT_VV_PRODUCT_METRICS_VOD__C_src.BUSINESS_SEGMENT_TVA__C) AS BUSINESS_SEGMENT_TVA__C,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.batch_id,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.row_id,
        EXT_VV_PRODUCT_METRICS_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_PRODUCT_METRICS_VOD__C_src
 WHERE (EXT_VV_PRODUCT_METRICS_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_PRODUCT_METRICS_VOD__C'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_VV_QUESTION_RESPONSE_VOD AS
 SELECT btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.ID) AS ID,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.NAME) AS NAME,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.RECORDTYPEID) AS RECORDTYPEID,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.SURVEY_TARGET_VOD__C) AS SURVEY_TARGET_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.ANSWER_CHOICE_VOD__C) AS ANSWER_CHOICE_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.DATE_VOD__C) AS DATE_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.DATETIME_VOD__C) AS DATETIME_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        CASE WHEN (EXT_VV_QUESTION_RESPONSE_VOD_src.NUMBER_VOD__C = ''::varchar) THEN NULL::numeric(7,0) ELSE (btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.NUMBER_VOD__C))::numeric(7,0) END AS NUMBER_VOD__C,
        CASE WHEN (EXT_VV_QUESTION_RESPONSE_VOD_src.ORDER_VOD__C = ''::varchar) THEN NULL::numeric(2,0) ELSE (btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.ORDER_VOD__C))::numeric(2,0) END AS ORDER_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.QUESTION_TEXT_VOD__C) AS QUESTION_TEXT_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.REQUIRED_VOD__C) AS REQUIRED_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.RESPONSE_HASH_VOD__C) AS RESPONSE_HASH_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.RESPONSE_VOD__C) AS RESPONSE_VOD__C,
        CASE WHEN (EXT_VV_QUESTION_RESPONSE_VOD_src.SCORE_VOD__C = ''::varchar) THEN NULL::numeric(11,0) ELSE (btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.SCORE_VOD__C))::numeric(11,0) END AS SCORE_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.SURVEY_QUESTION_VOD__C) AS SURVEY_QUESTION_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.TEXT_VOD__C) AS TEXT_VOD__C,
        btrim(EXT_VV_QUESTION_RESPONSE_VOD_src.TYPE_VOD__C) AS TYPE_VOD__C,
        EXT_VV_QUESTION_RESPONSE_VOD_src.batch_id,
        EXT_VV_QUESTION_RESPONSE_VOD_src.row_id,
        EXT_VV_QUESTION_RESPONSE_VOD_src.update_ts
 FROM teva_ingestion.EXT_VV_QUESTION_RESPONSE_VOD_src
 WHERE (EXT_VV_QUESTION_RESPONSE_VOD_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_QUESTION_RESPONSE_VOD'::varchar(28))));

CREATE  VIEW teva_ingestion.EXT_VV_RECORDTYPE AS
 SELECT btrim(EXT_VV_RECORDTYPE_src.BUSINESSPROCESSID) AS BUSINESSPROCESSID,
        btrim(EXT_VV_RECORDTYPE_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_RECORDTYPE_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_RECORDTYPE_src.DESCRIPTION) AS DESCRIPTION,
        btrim(EXT_VV_RECORDTYPE_src.DEVELOPERNAME) AS DEVELOPERNAME,
        btrim(EXT_VV_RECORDTYPE_src.ID) AS ID,
        btrim(EXT_VV_RECORDTYPE_src.ISACTIVE) AS ISACTIVE,
        btrim(EXT_VV_RECORDTYPE_src.ISPERSONTYPE) AS ISPERSONTYPE,
        btrim(EXT_VV_RECORDTYPE_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_RECORDTYPE_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_RECORDTYPE_src.NAME) AS NAME,
        btrim(EXT_VV_RECORDTYPE_src.NAMESPACEPREFIX) AS NAMESPACEPREFIX,
        btrim(EXT_VV_RECORDTYPE_src.SOBJECTTYPE) AS SOBJECTTYPE,
        btrim(EXT_VV_RECORDTYPE_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        EXT_VV_RECORDTYPE_src.batch_id,
        EXT_VV_RECORDTYPE_src.row_id,
        EXT_VV_RECORDTYPE_src.update_ts
 FROM teva_ingestion.EXT_VV_RECORDTYPE_src
 WHERE (EXT_VV_RECORDTYPE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_RECORDTYPE'::varchar(17))));

CREATE  VIEW teva_ingestion.EXT_VV_SURVEY_QUESTION_VOD__C AS
 SELECT btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.RECORDTYPEID) AS RECORDTYPEID,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.SURVEY_VOD__C) AS SURVEY_VOD__C,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.ANSWER_CHOICE_VOD__C) AS ANSWER_CHOICE_VOD__C,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        CASE WHEN (EXT_VV_SURVEY_QUESTION_VOD__C_src.MAX_SCORE_VOD__C = ''::varchar) THEN NULL::numeric(11,0) ELSE (btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.MAX_SCORE_VOD__C))::numeric(11,0) END AS MAX_SCORE_VOD__C,
        CASE WHEN (EXT_VV_SURVEY_QUESTION_VOD__C_src.MIN_SCORE_VOD__C = ''::varchar) THEN NULL::numeric(11,0) ELSE (btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.MIN_SCORE_VOD__C))::numeric(11,0) END AS MIN_SCORE_VOD__C,
        CASE WHEN (EXT_VV_SURVEY_QUESTION_VOD__C_src.ORDER_VOD__C = ''::varchar) THEN NULL::numeric(2,0) ELSE (btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.ORDER_VOD__C))::numeric(2,0) END AS ORDER_VOD__C,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.QUESTION_VOD__C) AS QUESTION_VOD__C,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.REQUIRED_VOD__C) AS REQUIRED_VOD__C,
        btrim(EXT_VV_SURVEY_QUESTION_VOD__C_src.TEXT_VOD__C) AS TEXT_VOD__C,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.batch_id,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.row_id,
        EXT_VV_SURVEY_QUESTION_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SURVEY_QUESTION_VOD__C_src
 WHERE (EXT_VV_SURVEY_QUESTION_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_SURVEY_QUESTION_VOD__C'::varchar(29))));

CREATE  VIEW teva_ingestion.EXT_VV_SURVEY_VOD__C AS
 SELECT btrim(EXT_VV_SURVEY_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_SURVEY_VOD__C_src.OWNERID) AS OWNERID,
        btrim(EXT_VV_SURVEY_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_SURVEY_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_SURVEY_VOD__C_src.RECORDTYPEID) AS RECORDTYPEID,
        btrim(EXT_VV_SURVEY_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_SURVEY_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_SURVEY_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_SURVEY_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_SURVEY_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_SURVEY_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_SURVEY_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_SURVEY_VOD__C_src.LASTVIEWEDDATE) AS LASTVIEWEDDATE,
        btrim(EXT_VV_SURVEY_VOD__C_src.LASTREFERENCEDDATE) AS LASTREFERENCEDDATE,
        btrim(EXT_VV_SURVEY_VOD__C_src.ASSIGNMENT_TYPE_VOD__C) AS ASSIGNMENT_TYPE_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.CHANNELS_VOD__C) AS CHANNELS_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.END_DATE_VOD__C) AS END_DATE_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.EXPIRED_VOD__C) AS EXPIRED_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.EXTERNAL_ID_VOD__C) AS EXTERNAL_ID_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.LANGUAGE_VOD__C) AS LANGUAGE_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.LOCK_VOD__C) AS LOCK_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.OPEN_VOD__C) AS OPEN_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.PRODUCT_VOD__C) AS PRODUCT_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.REGION_VOD__C) AS REGION_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.SEGMENT_VOD__C) AS SEGMENT_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.START_DATE_VOD__C) AS START_DATE_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.STATUS_VOD__C) AS STATUS_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.TERRITORY_VOD__C) AS TERRITORY_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.ZVOD_QUESTIONS_VOD__C) AS ZVOD_QUESTIONS_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.ZVOD_SEGMENTS_VOD__C) AS ZVOD_SEGMENTS_VOD__C,
        btrim(EXT_VV_SURVEY_VOD__C_src.ZVOD_TARGETS_VOD__C) AS ZVOD_TARGETS_VOD__C,
        CASE WHEN (EXT_VV_SURVEY_VOD__C_src.MAX_SCORE_VOD__C = ''::varchar) THEN NULL::numeric(11,0) ELSE (btrim(EXT_VV_SURVEY_VOD__C_src.MAX_SCORE_VOD__C))::numeric(11,0) END AS MAX_SCORE_VOD__C,
        CASE WHEN (EXT_VV_SURVEY_VOD__C_src.MIN_SCORE_VOD__C = ''::varchar) THEN NULL::numeric(11,0) ELSE (btrim(EXT_VV_SURVEY_VOD__C_src.MIN_SCORE_VOD__C))::numeric(11,0) END AS MIN_SCORE_VOD__C,
        EXT_VV_SURVEY_VOD__C_src.batch_id,
        EXT_VV_SURVEY_VOD__C_src.row_id,
        EXT_VV_SURVEY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SURVEY_VOD__C_src
 WHERE (EXT_VV_SURVEY_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_SURVEY_VOD__C'::varchar(20))));

CREATE  VIEW teva_ingestion.EXT_VV_SYNC_TRACKING_VOD__C AS
 SELECT btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.CREATEDBYID) AS CREATEDBYID,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.CREATEDDATE) AS CREATEDDATE,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.DOWNLOAD_PROCESSED_VOD__C) AS DOWNLOAD_PROCESSED_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.ID) AS ID,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.ISDELETED) AS ISDELETED,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.ISLOCKED) AS ISLOCKED,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.MAYEDIT) AS MAYEDIT,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.MEDIA_PROCESSED_VOD__C) AS MEDIA_PROCESSED_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.MOBILE_ID_VOD__C) AS MOBILE_ID_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.NAME) AS NAME,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.OWNERID) AS OWNERID,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.SUCCESSFUL_SYNC_VOD__C) AS SUCCESSFUL_SYNC_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_COMPLETED_DATETIME_VOD__C) AS SYNC_COMPLETED_DATETIME_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_DURATION_VOD__C) AS SYNC_DURATION_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_START_DATETIME_VOD__C) AS SYNC_START_DATETIME_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.SYNC_TYPE_VOD__C) AS SYNC_TYPE_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.UPLOAD_PROCESSED_VOD__C) AS UPLOAD_PROCESSED_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.VERSION_VOD__C) AS VERSION_VOD__C,
        btrim(EXT_VV_SYNC_TRACKING_VOD__C_src.VINSIGHTS_PROCESSED_VOD__C) AS VINSIGHTS_PROCESSED_VOD__C,
        EXT_VV_SYNC_TRACKING_VOD__C_src.batch_id,
        EXT_VV_SYNC_TRACKING_VOD__C_src.row_id,
        EXT_VV_SYNC_TRACKING_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SYNC_TRACKING_VOD__C_src
 WHERE (EXT_VV_SYNC_TRACKING_VOD__C_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_SYNC_TRACKING_VOD__C'::varchar(27))));

CREATE  VIEW teva_ingestion.EXT_VV_TERRITORY AS
 SELECT btrim(EXT_VV_TERRITORY_src.ACCOUNTACCESSLEVEL) AS ACCOUNTACCESSLEVEL,
        btrim(EXT_VV_TERRITORY_src.CASEACCESSLEVEL) AS CASEACCESSLEVEL,
        btrim(EXT_VV_TERRITORY_src.CONTACTACCESSLEVEL) AS CONTACTACCESSLEVEL,
        btrim(EXT_VV_TERRITORY_src.DESCRIPTION) AS DESCRIPTION,
        btrim(EXT_VV_TERRITORY_src.DEVELOPERNAME) AS DEVELOPERNAME,
        btrim(EXT_VV_TERRITORY_src.FORECASTUSERID) AS FORECASTUSERID,
        btrim(EXT_VV_TERRITORY_src.ID) AS ID,
        btrim(EXT_VV_TERRITORY_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_TERRITORY_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_TERRITORY_src.MAYFORECASTMANAGERSHARE) AS MAYFORECASTMANAGERSHARE,
        btrim(EXT_VV_TERRITORY_src.NAME) AS NAME,
        btrim(EXT_VV_TERRITORY_src.OPPORTUNITYACCESSLEVEL) AS OPPORTUNITYACCESSLEVEL,
        btrim(EXT_VV_TERRITORY_src.PARENTTERRITORYID) AS PARENTTERRITORYID,
        btrim(EXT_VV_TERRITORY_src.RESTRICTOPPORTUNITYTRANSFER) AS RESTRICTOPPORTUNITYTRANSFER,
        btrim(EXT_VV_TERRITORY_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        EXT_VV_TERRITORY_src.batch_id,
        EXT_VV_TERRITORY_src.row_id,
        EXT_VV_TERRITORY_src.update_ts
 FROM teva_ingestion.EXT_VV_TERRITORY_src
 WHERE (EXT_VV_TERRITORY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_TERRITORY'::varchar(16))));

CREATE  VIEW teva_ingestion.EXT_VV_USERROLE AS
 SELECT btrim(EXT_VV_USERROLE_src.CASEACCESSFORACCOUNTOWNER) AS CASEACCESSFORACCOUNTOWNER,
        btrim(EXT_VV_USERROLE_src.CONTACTACCESSFORACCOUNTOWNER) AS CONTACTACCESSFORACCOUNTOWNER,
        btrim(EXT_VV_USERROLE_src.DEVELOPERNAME) AS DEVELOPERNAME,
        btrim(EXT_VV_USERROLE_src.FORECASTUSERID) AS FORECASTUSERID,
        btrim(EXT_VV_USERROLE_src.ID) AS ID,
        btrim(EXT_VV_USERROLE_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_USERROLE_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_USERROLE_src.MAYFORECASTMANAGERSHARE) AS MAYFORECASTMANAGERSHARE,
        btrim(EXT_VV_USERROLE_src.NAME) AS NAME,
        btrim(EXT_VV_USERROLE_src.OPPORTUNITYACCESSACCOUNTOWNER) AS OPPORTUNITYACCESSACCOUNTOWNER,
        btrim(EXT_VV_USERROLE_src.PARENTROLEID) AS PARENTROLEID,
        btrim(EXT_VV_USERROLE_src.PORTALACCOUNTID) AS PORTALACCOUNTID,
        btrim(EXT_VV_USERROLE_src.PORTALACCOUNTOWNERID) AS PORTALACCOUNTOWNERID,
        btrim(EXT_VV_USERROLE_src.PORTALTYPE) AS PORTALTYPE,
        btrim(EXT_VV_USERROLE_src.ROLLUPDESCRIPTION) AS ROLLUPDESCRIPTION,
        btrim(EXT_VV_USERROLE_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        EXT_VV_USERROLE_src.batch_id,
        EXT_VV_USERROLE_src.row_id,
        EXT_VV_USERROLE_src.update_ts
 FROM teva_ingestion.EXT_VV_USERROLE_src
 WHERE (EXT_VV_USERROLE_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_USERROLE'::varchar(15))));

CREATE  VIEW teva_ingestion.EXT_VV_USERTERRITORY AS
 SELECT btrim(EXT_VV_USERTERRITORY_src.ID) AS ID,
        btrim(EXT_VV_USERTERRITORY_src.ISACTIVE) AS ISACTIVE,
        btrim(EXT_VV_USERTERRITORY_src.LASTMODIFIEDBYID) AS LASTMODIFIEDBYID,
        btrim(EXT_VV_USERTERRITORY_src.LASTMODIFIEDDATE) AS LASTMODIFIEDDATE,
        btrim(EXT_VV_USERTERRITORY_src.SYSTEMMODSTAMP) AS SYSTEMMODSTAMP,
        btrim(EXT_VV_USERTERRITORY_src.TERRITORYID) AS TERRITORYID,
        btrim(EXT_VV_USERTERRITORY_src.USERID) AS USERID,
        EXT_VV_USERTERRITORY_src.batch_id,
        EXT_VV_USERTERRITORY_src.row_id,
        EXT_VV_USERTERRITORY_src.update_ts
 FROM teva_ingestion.EXT_VV_USERTERRITORY_src
 WHERE (EXT_VV_USERTERRITORY_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_VV_USERTERRITORY'::varchar(20))));

CREATE  VIEW teva_ingestion.XX_TERR_ID_CHANGE_V AS
 SELECT btrim(XX_TERR_ID_CHANGE_V_src.EE_NBR) AS EE_NBR,
        btrim(XX_TERR_ID_CHANGE_V_src.EE_NAME) AS EE_NAME,
        btrim(XX_TERR_ID_CHANGE_V_src.TERR_ID_FROM) AS TERR_ID_FROM,
        btrim(XX_TERR_ID_CHANGE_V_src.TERR_ID_TO) AS TERR_ID_TO,
        CASE WHEN (XX_TERR_ID_CHANGE_V_src.TERR_MOVE_DT = ''::varchar) THEN NULL::date ELSE (btrim(XX_TERR_ID_CHANGE_V_src.TERR_MOVE_DT))::date END AS TERR_MOVE_DT,
        XX_TERR_ID_CHANGE_V_src.batch_id,
        XX_TERR_ID_CHANGE_V_src.row_id,
        XX_TERR_ID_CHANGE_V_src.update_ts
 FROM teva_ingestion.XX_TERR_ID_CHANGE_V_src;

CREATE  VIEW teva_ingestion.ext_time_off_territory_kc_veev AS
 SELECT CASE WHEN (ext_time_off_territory_kc_veev_src.ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(ext_time_off_territory_kc_veev_src.ID))::numeric(38,0) END AS ID,
        btrim(ext_time_off_territory_kc_veev_src.EVENT_ROW_ID) AS EVENT_ROW_ID,
        btrim(ext_time_off_territory_kc_veev_src.REP_ROW_ID) AS REP_ROW_ID,
        btrim(ext_time_off_territory_kc_veev_src.TERRITORY_NUM) AS TERRITORY_NUM,
        CASE WHEN (ext_time_off_territory_kc_veev_src.TIME_OFF_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_time_off_territory_kc_veev_src.TIME_OFF_DATE))::timestamp END AS TIME_OFF_DATE,
        CASE WHEN (ext_time_off_territory_kc_veev_src.TIME_ON_DATE = ''::varchar) THEN NULL::timestamp ELSE (btrim(ext_time_off_territory_kc_veev_src.TIME_ON_DATE))::timestamp END AS TIME_ON_DATE,
        btrim(ext_time_off_territory_kc_veev_src.DESCRIPTION) AS DESCRIPTION,
        btrim(ext_time_off_territory_kc_veev_src.COMMENTS) AS COMMENTS,
        CASE WHEN (ext_time_off_territory_kc_veev_src.DURATION_IN_MINUTES = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(ext_time_off_territory_kc_veev_src.DURATION_IN_MINUTES))::numeric(38,0) END AS DURATION_IN_MINUTES,
        CASE WHEN (ext_time_off_territory_kc_veev_src.DURATION_IN_HOURS = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(ext_time_off_territory_kc_veev_src.DURATION_IN_HOURS))::numeric(38,0) END AS DURATION_IN_HOURS,
        CASE WHEN (ext_time_off_territory_kc_veev_src.DURATION_IN_DAYS = ''::varchar) THEN NULL::numeric(10,3) ELSE (btrim(ext_time_off_territory_kc_veev_src.DURATION_IN_DAYS))::numeric(10,3) END AS DURATION_IN_DAYS,
        CASE WHEN (ext_time_off_territory_kc_veev_src.COMPANY = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(ext_time_off_territory_kc_veev_src.COMPANY))::numeric(38,0) END AS COMPANY,
        ext_time_off_territory_kc_veev_src.batch_id,
        ext_time_off_territory_kc_veev_src.row_id,
        ext_time_off_territory_kc_veev_src.update_ts
 FROM teva_ingestion.ext_time_off_territory_kc_veev_src
 WHERE (ext_time_off_territory_kc_veev_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_TIME_OFF_TERRITORY_KC_VEEV'::varchar(30))));

CREATE  VIEW teva_ingestion.MS_MTHLY_RX_CNT AS
SELECT CASE WHEN (MS_MTHLY_RX_CNT_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_CNT_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (MS_MTHLY_RX_CNT_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_CNT_src.ims_report_num))::int END AS ims_report_num, btrim(MS_MTHLY_RX_CNT_src.zip_other) AS zip_other, btrim(MS_MTHLY_RX_CNT_src.ims_id) AS ims_id, btrim(MS_MTHLY_RX_CNT_src.ndc) AS ndc, btrim(MS_MTHLY_RX_CNT_src.plan_id) AS plan_id, CASE WHEN (MS_MTHLY_RX_CNT_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_CNT_src.sales_category))::int END AS sales_category, btrim(MS_MTHLY_RX_CNT_src.rx_type) AS rx_type, CASE WHEN (MS_MTHLY_RX_CNT_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_CNT_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(MS_MTHLY_RX_CNT_src.filler_01) AS filler_01, btrim(MS_MTHLY_RX_CNT_src.me_num) AS me_num, btrim(MS_MTHLY_RX_CNT_src.last_name) AS last_name, btrim(MS_MTHLY_RX_CNT_src.first_name) AS first_name, btrim(MS_MTHLY_RX_CNT_src.middle_name) AS middle_name, btrim(MS_MTHLY_RX_CNT_src.address) AS address, btrim(MS_MTHLY_RX_CNT_src.city) AS city, btrim(MS_MTHLY_RX_CNT_src.state) AS state, btrim(MS_MTHLY_RX_CNT_src.zip) AS zip, btrim(MS_MTHLY_RX_CNT_src.specialty) AS specialty, btrim(MS_MTHLY_RX_CNT_src.plan_name) AS plan_name, btrim(MS_MTHLY_RX_CNT_src.ndc_description) AS ndc_description, btrim(MS_MTHLY_RX_CNT_src.data_date) AS data_date, CASE WHEN (MS_MTHLY_RX_CNT_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(MS_MTHLY_RX_CNT_src.bucket_count))::int END AS bucket_count, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (MS_MTHLY_RX_CNT_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (MS_MTHLY_RX_CNT_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_MTHLY_RX_CNT_src.trx_024))::numeric(9,3) END AS trx_024, MS_MTHLY_RX_CNT_src.batch_id, MS_MTHLY_RX_CNT_src.row_id, MS_MTHLY_RX_CNT_src.update_ts FROM teva_ingestion.MS_MTHLY_RX_CNT_src;

CREATE  VIEW teva_ingestion.MS_WKLY_RX_CNT AS
SELECT CASE WHEN (MS_WKLY_RX_CNT_src.ims_client_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_CNT_src.ims_client_num))::int END AS ims_client_num, CASE WHEN (MS_WKLY_RX_CNT_src.ims_report_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_CNT_src.ims_report_num))::int END AS ims_report_num, btrim(MS_WKLY_RX_CNT_src.zip_other) AS zip_other, btrim(MS_WKLY_RX_CNT_src.ims_id) AS ims_id, btrim(MS_WKLY_RX_CNT_src.ndc) AS ndc, btrim(MS_WKLY_RX_CNT_src.plan_id) AS plan_id, CASE WHEN (MS_WKLY_RX_CNT_src.sales_category = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_CNT_src.sales_category))::int END AS sales_category, btrim(MS_WKLY_RX_CNT_src.rx_type) AS rx_type, CASE WHEN (MS_WKLY_RX_CNT_src.ims_product_group_num = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_CNT_src.ims_product_group_num))::int END AS ims_product_group_num, btrim(MS_WKLY_RX_CNT_src.filler_01) AS filler_01, btrim(MS_WKLY_RX_CNT_src.me_num) AS me_num, btrim(MS_WKLY_RX_CNT_src.last_name) AS last_name, btrim(MS_WKLY_RX_CNT_src.first_name) AS first_name, btrim(MS_WKLY_RX_CNT_src.middle_name) AS middle_name, btrim(MS_WKLY_RX_CNT_src.address) AS address, btrim(MS_WKLY_RX_CNT_src.city) AS city, btrim(MS_WKLY_RX_CNT_src.state) AS state, btrim(MS_WKLY_RX_CNT_src.zip) AS zip, btrim(MS_WKLY_RX_CNT_src.specialty) AS specialty, btrim(MS_WKLY_RX_CNT_src.plan_name) AS plan_name, btrim(MS_WKLY_RX_CNT_src.ndc_description) AS ndc_description, btrim(MS_WKLY_RX_CNT_src.data_date) AS data_date, CASE WHEN (MS_WKLY_RX_CNT_src.bucket_count = ''::varchar) THEN NULL::int ELSE (btrim(MS_WKLY_RX_CNT_src.bucket_count))::int END AS bucket_count, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_001))::numeric(9,3) END AS nrx_001, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_002))::numeric(9,3) END AS nrx_002, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_003))::numeric(9,3) END AS nrx_003, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_004))::numeric(9,3) END AS nrx_004, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_005))::numeric(9,3) END AS nrx_005, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_006))::numeric(9,3) END AS nrx_006, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_007))::numeric(9,3) END AS nrx_007, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_008))::numeric(9,3) END AS nrx_008, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_009))::numeric(9,3) END AS nrx_009, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_010))::numeric(9,3) END AS nrx_010, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_011))::numeric(9,3) END AS nrx_011, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_012))::numeric(9,3) END AS nrx_012, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_013))::numeric(9,3) END AS nrx_013, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_014))::numeric(9,3) END AS nrx_014, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_015))::numeric(9,3) END AS nrx_015, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_016))::numeric(9,3) END AS nrx_016, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_017))::numeric(9,3) END AS nrx_017, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_018))::numeric(9,3) END AS nrx_018, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_019))::numeric(9,3) END AS nrx_019, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_020))::numeric(9,3) END AS nrx_020, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_021))::numeric(9,3) END AS nrx_021, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_022))::numeric(9,3) END AS nrx_022, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_023))::numeric(9,3) END AS nrx_023, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_024))::numeric(9,3) END AS nrx_024, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_025))::numeric(9,3) END AS nrx_025, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_026))::numeric(9,3) END AS nrx_026, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_027))::numeric(9,3) END AS nrx_027, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_028))::numeric(9,3) END AS nrx_028, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_029))::numeric(9,3) END AS nrx_029, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_030))::numeric(9,3) END AS nrx_030, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_031))::numeric(9,3) END AS nrx_031, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_032))::numeric(9,3) END AS nrx_032, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_033))::numeric(9,3) END AS nrx_033, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_034))::numeric(9,3) END AS nrx_034, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_035))::numeric(9,3) END AS nrx_035, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_036))::numeric(9,3) END AS nrx_036, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_037))::numeric(9,3) END AS nrx_037, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_038))::numeric(9,3) END AS nrx_038, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_039))::numeric(9,3) END AS nrx_039, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_040))::numeric(9,3) END AS nrx_040, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_041))::numeric(9,3) END AS nrx_041, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_042))::numeric(9,3) END AS nrx_042, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_043))::numeric(9,3) END AS nrx_043, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_044))::numeric(9,3) END AS nrx_044, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_045))::numeric(9,3) END AS nrx_045, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_046))::numeric(9,3) END AS nrx_046, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_047))::numeric(9,3) END AS nrx_047, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_048))::numeric(9,3) END AS nrx_048, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_049))::numeric(9,3) END AS nrx_049, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_050))::numeric(9,3) END AS nrx_050, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_051))::numeric(9,3) END AS nrx_051, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_052))::numeric(9,3) END AS nrx_052, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_053))::numeric(9,3) END AS nrx_053, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_054))::numeric(9,3) END AS nrx_054, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_055))::numeric(9,3) END AS nrx_055, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_056))::numeric(9,3) END AS nrx_056, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_057))::numeric(9,3) END AS nrx_057, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_058))::numeric(9,3) END AS nrx_058, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_059))::numeric(9,3) END AS nrx_059, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_060))::numeric(9,3) END AS nrx_060, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_061))::numeric(9,3) END AS nrx_061, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_062))::numeric(9,3) END AS nrx_062, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_063))::numeric(9,3) END AS nrx_063, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_064))::numeric(9,3) END AS nrx_064, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_065))::numeric(9,3) END AS nrx_065, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_066))::numeric(9,3) END AS nrx_066, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_067))::numeric(9,3) END AS nrx_067, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_068))::numeric(9,3) END AS nrx_068, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_069))::numeric(9,3) END AS nrx_069, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_070))::numeric(9,3) END AS nrx_070, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_071))::numeric(9,3) END AS nrx_071, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_072))::numeric(9,3) END AS nrx_072, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_073))::numeric(9,3) END AS nrx_073, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_074))::numeric(9,3) END AS nrx_074, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_075))::numeric(9,3) END AS nrx_075, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_076))::numeric(9,3) END AS nrx_076, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_077))::numeric(9,3) END AS nrx_077, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_078))::numeric(9,3) END AS nrx_078, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_079))::numeric(9,3) END AS nrx_079, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_080))::numeric(9,3) END AS nrx_080, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_081))::numeric(9,3) END AS nrx_081, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_082))::numeric(9,3) END AS nrx_082, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_083))::numeric(9,3) END AS nrx_083, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_084))::numeric(9,3) END AS nrx_084, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_085))::numeric(9,3) END AS nrx_085, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_086))::numeric(9,3) END AS nrx_086, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_087))::numeric(9,3) END AS nrx_087, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_088))::numeric(9,3) END AS nrx_088, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_089))::numeric(9,3) END AS nrx_089, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_090))::numeric(9,3) END AS nrx_090, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_091))::numeric(9,3) END AS nrx_091, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_092))::numeric(9,3) END AS nrx_092, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_093))::numeric(9,3) END AS nrx_093, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_094))::numeric(9,3) END AS nrx_094, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_095))::numeric(9,3) END AS nrx_095, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_096))::numeric(9,3) END AS nrx_096, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_097))::numeric(9,3) END AS nrx_097, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_098))::numeric(9,3) END AS nrx_098, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_099))::numeric(9,3) END AS nrx_099, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_100))::numeric(9,3) END AS nrx_100, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_101))::numeric(9,3) END AS nrx_101, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_102))::numeric(9,3) END AS nrx_102, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_103))::numeric(9,3) END AS nrx_103, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_104))::numeric(9,3) END AS nrx_104, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_105))::numeric(9,3) END AS nrx_105, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_106))::numeric(9,3) END AS nrx_106, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_107))::numeric(9,3) END AS nrx_107, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_108))::numeric(9,3) END AS nrx_108, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_109))::numeric(9,3) END AS nrx_109, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_110))::numeric(9,3) END AS nrx_110, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_111))::numeric(9,3) END AS nrx_111, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_112))::numeric(9,3) END AS nrx_112, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_113))::numeric(9,3) END AS nrx_113, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_114))::numeric(9,3) END AS nrx_114, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_115))::numeric(9,3) END AS nrx_115, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_116))::numeric(9,3) END AS nrx_116, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_117))::numeric(9,3) END AS nrx_117, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_118))::numeric(9,3) END AS nrx_118, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_119))::numeric(9,3) END AS nrx_119, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_120))::numeric(9,3) END AS nrx_120, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_121))::numeric(9,3) END AS nrx_121, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_122))::numeric(9,3) END AS nrx_122, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_123))::numeric(9,3) END AS nrx_123, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_124))::numeric(9,3) END AS nrx_124, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_125))::numeric(9,3) END AS nrx_125, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_126))::numeric(9,3) END AS nrx_126, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_127))::numeric(9,3) END AS nrx_127, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_128))::numeric(9,3) END AS nrx_128, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_129))::numeric(9,3) END AS nrx_129, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_130))::numeric(9,3) END AS nrx_130, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_131))::numeric(9,3) END AS nrx_131, CASE WHEN (MS_WKLY_RX_CNT_src.nrx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.nrx_132))::numeric(9,3) END AS nrx_132, CASE WHEN (MS_WKLY_RX_CNT_src.trx_001 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_001))::numeric(9,3) END AS trx_001, CASE WHEN (MS_WKLY_RX_CNT_src.trx_002 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_002))::numeric(9,3) END AS trx_002, CASE WHEN (MS_WKLY_RX_CNT_src.trx_003 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_003))::numeric(9,3) END AS trx_003, CASE WHEN (MS_WKLY_RX_CNT_src.trx_004 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_004))::numeric(9,3) END AS trx_004, CASE WHEN (MS_WKLY_RX_CNT_src.trx_005 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_005))::numeric(9,3) END AS trx_005, CASE WHEN (MS_WKLY_RX_CNT_src.trx_006 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_006))::numeric(9,3) END AS trx_006, CASE WHEN (MS_WKLY_RX_CNT_src.trx_007 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_007))::numeric(9,3) END AS trx_007, CASE WHEN (MS_WKLY_RX_CNT_src.trx_008 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_008))::numeric(9,3) END AS trx_008, CASE WHEN (MS_WKLY_RX_CNT_src.trx_009 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_009))::numeric(9,3) END AS trx_009, CASE WHEN (MS_WKLY_RX_CNT_src.trx_010 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_010))::numeric(9,3) END AS trx_010, CASE WHEN (MS_WKLY_RX_CNT_src.trx_011 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_011))::numeric(9,3) END AS trx_011, CASE WHEN (MS_WKLY_RX_CNT_src.trx_012 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_012))::numeric(9,3) END AS trx_012, CASE WHEN (MS_WKLY_RX_CNT_src.trx_013 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_013))::numeric(9,3) END AS trx_013, CASE WHEN (MS_WKLY_RX_CNT_src.trx_014 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_014))::numeric(9,3) END AS trx_014, CASE WHEN (MS_WKLY_RX_CNT_src.trx_015 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_015))::numeric(9,3) END AS trx_015, CASE WHEN (MS_WKLY_RX_CNT_src.trx_016 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_016))::numeric(9,3) END AS trx_016, CASE WHEN (MS_WKLY_RX_CNT_src.trx_017 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_017))::numeric(9,3) END AS trx_017, CASE WHEN (MS_WKLY_RX_CNT_src.trx_018 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_018))::numeric(9,3) END AS trx_018, CASE WHEN (MS_WKLY_RX_CNT_src.trx_019 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_019))::numeric(9,3) END AS trx_019, CASE WHEN (MS_WKLY_RX_CNT_src.trx_020 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_020))::numeric(9,3) END AS trx_020, CASE WHEN (MS_WKLY_RX_CNT_src.trx_021 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_021))::numeric(9,3) END AS trx_021, CASE WHEN (MS_WKLY_RX_CNT_src.trx_022 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_022))::numeric(9,3) END AS trx_022, CASE WHEN (MS_WKLY_RX_CNT_src.trx_023 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_023))::numeric(9,3) END AS trx_023, CASE WHEN (MS_WKLY_RX_CNT_src.trx_024 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_024))::numeric(9,3) END AS trx_024, CASE WHEN (MS_WKLY_RX_CNT_src.trx_025 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_025))::numeric(9,3) END AS trx_025, CASE WHEN (MS_WKLY_RX_CNT_src.trx_026 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_026))::numeric(9,3) END AS trx_026, CASE WHEN (MS_WKLY_RX_CNT_src.trx_027 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_027))::numeric(9,3) END AS trx_027, CASE WHEN (MS_WKLY_RX_CNT_src.trx_028 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_028))::numeric(9,3) END AS trx_028, CASE WHEN (MS_WKLY_RX_CNT_src.trx_029 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_029))::numeric(9,3) END AS trx_029, CASE WHEN (MS_WKLY_RX_CNT_src.trx_030 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_030))::numeric(9,3) END AS trx_030, CASE WHEN (MS_WKLY_RX_CNT_src.trx_031 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_031))::numeric(9,3) END AS trx_031, CASE WHEN (MS_WKLY_RX_CNT_src.trx_032 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_032))::numeric(9,3) END AS trx_032, CASE WHEN (MS_WKLY_RX_CNT_src.trx_033 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_033))::numeric(9,3) END AS trx_033, CASE WHEN (MS_WKLY_RX_CNT_src.trx_034 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_034))::numeric(9,3) END AS trx_034, CASE WHEN (MS_WKLY_RX_CNT_src.trx_035 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_035))::numeric(9,3) END AS trx_035, CASE WHEN (MS_WKLY_RX_CNT_src.trx_036 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_036))::numeric(9,3) END AS trx_036, CASE WHEN (MS_WKLY_RX_CNT_src.trx_037 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_037))::numeric(9,3) END AS trx_037, CASE WHEN (MS_WKLY_RX_CNT_src.trx_038 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_038))::numeric(9,3) END AS trx_038, CASE WHEN (MS_WKLY_RX_CNT_src.trx_039 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_039))::numeric(9,3) END AS trx_039, CASE WHEN (MS_WKLY_RX_CNT_src.trx_040 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_040))::numeric(9,3) END AS trx_040, CASE WHEN (MS_WKLY_RX_CNT_src.trx_041 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_041))::numeric(9,3) END AS trx_041, CASE WHEN (MS_WKLY_RX_CNT_src.trx_042 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_042))::numeric(9,3) END AS trx_042, CASE WHEN (MS_WKLY_RX_CNT_src.trx_043 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_043))::numeric(9,3) END AS trx_043, CASE WHEN (MS_WKLY_RX_CNT_src.trx_044 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_044))::numeric(9,3) END AS trx_044, CASE WHEN (MS_WKLY_RX_CNT_src.trx_045 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_045))::numeric(9,3) END AS trx_045, CASE WHEN (MS_WKLY_RX_CNT_src.trx_046 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_046))::numeric(9,3) END AS trx_046, CASE WHEN (MS_WKLY_RX_CNT_src.trx_047 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_047))::numeric(9,3) END AS trx_047, CASE WHEN (MS_WKLY_RX_CNT_src.trx_048 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_048))::numeric(9,3) END AS trx_048, CASE WHEN (MS_WKLY_RX_CNT_src.trx_049 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_049))::numeric(9,3) END AS trx_049, CASE WHEN (MS_WKLY_RX_CNT_src.trx_050 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_050))::numeric(9,3) END AS trx_050, CASE WHEN (MS_WKLY_RX_CNT_src.trx_051 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_051))::numeric(9,3) END AS trx_051, CASE WHEN (MS_WKLY_RX_CNT_src.trx_052 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_052))::numeric(9,3) END AS trx_052, CASE WHEN (MS_WKLY_RX_CNT_src.trx_053 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_053))::numeric(9,3) END AS trx_053, CASE WHEN (MS_WKLY_RX_CNT_src.trx_054 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_054))::numeric(9,3) END AS trx_054, CASE WHEN (MS_WKLY_RX_CNT_src.trx_055 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_055))::numeric(9,3) END AS trx_055, CASE WHEN (MS_WKLY_RX_CNT_src.trx_056 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_056))::numeric(9,3) END AS trx_056, CASE WHEN (MS_WKLY_RX_CNT_src.trx_057 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_057))::numeric(9,3) END AS trx_057, CASE WHEN (MS_WKLY_RX_CNT_src.trx_058 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_058))::numeric(9,3) END AS trx_058, CASE WHEN (MS_WKLY_RX_CNT_src.trx_059 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_059))::numeric(9,3) END AS trx_059, CASE WHEN (MS_WKLY_RX_CNT_src.trx_060 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_060))::numeric(9,3) END AS trx_060, CASE WHEN (MS_WKLY_RX_CNT_src.trx_061 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_061))::numeric(9,3) END AS trx_061, CASE WHEN (MS_WKLY_RX_CNT_src.trx_062 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_062))::numeric(9,3) END AS trx_062, CASE WHEN (MS_WKLY_RX_CNT_src.trx_063 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_063))::numeric(9,3) END AS trx_063, CASE WHEN (MS_WKLY_RX_CNT_src.trx_064 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_064))::numeric(9,3) END AS trx_064, CASE WHEN (MS_WKLY_RX_CNT_src.trx_065 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_065))::numeric(9,3) END AS trx_065, CASE WHEN (MS_WKLY_RX_CNT_src.trx_066 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_066))::numeric(9,3) END AS trx_066, CASE WHEN (MS_WKLY_RX_CNT_src.trx_067 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_067))::numeric(9,3) END AS trx_067, CASE WHEN (MS_WKLY_RX_CNT_src.trx_068 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_068))::numeric(9,3) END AS trx_068, CASE WHEN (MS_WKLY_RX_CNT_src.trx_069 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_069))::numeric(9,3) END AS trx_069, CASE WHEN (MS_WKLY_RX_CNT_src.trx_070 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_070))::numeric(9,3) END AS trx_070, CASE WHEN (MS_WKLY_RX_CNT_src.trx_071 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_071))::numeric(9,3) END AS trx_071, CASE WHEN (MS_WKLY_RX_CNT_src.trx_072 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_072))::numeric(9,3) END AS trx_072, CASE WHEN (MS_WKLY_RX_CNT_src.trx_073 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_073))::numeric(9,3) END AS trx_073, CASE WHEN (MS_WKLY_RX_CNT_src.trx_074 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_074))::numeric(9,3) END AS trx_074, CASE WHEN (MS_WKLY_RX_CNT_src.trx_075 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_075))::numeric(9,3) END AS trx_075, CASE WHEN (MS_WKLY_RX_CNT_src.trx_076 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_076))::numeric(9,3) END AS trx_076, CASE WHEN (MS_WKLY_RX_CNT_src.trx_077 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_077))::numeric(9,3) END AS trx_077, CASE WHEN (MS_WKLY_RX_CNT_src.trx_078 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_078))::numeric(9,3) END AS trx_078, CASE WHEN (MS_WKLY_RX_CNT_src.trx_079 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_079))::numeric(9,3) END AS trx_079, CASE WHEN (MS_WKLY_RX_CNT_src.trx_080 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_080))::numeric(9,3) END AS trx_080, CASE WHEN (MS_WKLY_RX_CNT_src.trx_081 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_081))::numeric(9,3) END AS trx_081, CASE WHEN (MS_WKLY_RX_CNT_src.trx_082 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_082))::numeric(9,3) END AS trx_082, CASE WHEN (MS_WKLY_RX_CNT_src.trx_083 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_083))::numeric(9,3) END AS trx_083, CASE WHEN (MS_WKLY_RX_CNT_src.trx_084 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_084))::numeric(9,3) END AS trx_084, CASE WHEN (MS_WKLY_RX_CNT_src.trx_085 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_085))::numeric(9,3) END AS trx_085, CASE WHEN (MS_WKLY_RX_CNT_src.trx_086 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_086))::numeric(9,3) END AS trx_086, CASE WHEN (MS_WKLY_RX_CNT_src.trx_087 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_087))::numeric(9,3) END AS trx_087, CASE WHEN (MS_WKLY_RX_CNT_src.trx_088 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_088))::numeric(9,3) END AS trx_088, CASE WHEN (MS_WKLY_RX_CNT_src.trx_089 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_089))::numeric(9,3) END AS trx_089, CASE WHEN (MS_WKLY_RX_CNT_src.trx_090 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_090))::numeric(9,3) END AS trx_090, CASE WHEN (MS_WKLY_RX_CNT_src.trx_091 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_091))::numeric(9,3) END AS trx_091, CASE WHEN (MS_WKLY_RX_CNT_src.trx_092 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_092))::numeric(9,3) END AS trx_092, CASE WHEN (MS_WKLY_RX_CNT_src.trx_093 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_093))::numeric(9,3) END AS trx_093, CASE WHEN (MS_WKLY_RX_CNT_src.trx_094 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_094))::numeric(9,3) END AS trx_094, CASE WHEN (MS_WKLY_RX_CNT_src.trx_095 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_095))::numeric(9,3) END AS trx_095, CASE WHEN (MS_WKLY_RX_CNT_src.trx_096 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_096))::numeric(9,3) END AS trx_096, CASE WHEN (MS_WKLY_RX_CNT_src.trx_097 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_097))::numeric(9,3) END AS trx_097, CASE WHEN (MS_WKLY_RX_CNT_src.trx_098 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_098))::numeric(9,3) END AS trx_098, CASE WHEN (MS_WKLY_RX_CNT_src.trx_099 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_099))::numeric(9,3) END AS trx_099, CASE WHEN (MS_WKLY_RX_CNT_src.trx_100 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_100))::numeric(9,3) END AS trx_100, CASE WHEN (MS_WKLY_RX_CNT_src.trx_101 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_101))::numeric(9,3) END AS trx_101, CASE WHEN (MS_WKLY_RX_CNT_src.trx_102 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_102))::numeric(9,3) END AS trx_102, CASE WHEN (MS_WKLY_RX_CNT_src.trx_103 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_103))::numeric(9,3) END AS trx_103, CASE WHEN (MS_WKLY_RX_CNT_src.trx_104 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_104))::numeric(9,3) END AS trx_104, CASE WHEN (MS_WKLY_RX_CNT_src.trx_105 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_105))::numeric(9,3) END AS trx_105, CASE WHEN (MS_WKLY_RX_CNT_src.trx_106 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_106))::numeric(9,3) END AS trx_106, CASE WHEN (MS_WKLY_RX_CNT_src.trx_107 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_107))::numeric(9,3) END AS trx_107, CASE WHEN (MS_WKLY_RX_CNT_src.trx_108 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_108))::numeric(9,3) END AS trx_108, CASE WHEN (MS_WKLY_RX_CNT_src.trx_109 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_109))::numeric(9,3) END AS trx_109, CASE WHEN (MS_WKLY_RX_CNT_src.trx_110 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_110))::numeric(9,3) END AS trx_110, CASE WHEN (MS_WKLY_RX_CNT_src.trx_111 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_111))::numeric(9,3) END AS trx_111, CASE WHEN (MS_WKLY_RX_CNT_src.trx_112 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_112))::numeric(9,3) END AS trx_112, CASE WHEN (MS_WKLY_RX_CNT_src.trx_113 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_113))::numeric(9,3) END AS trx_113, CASE WHEN (MS_WKLY_RX_CNT_src.trx_114 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_114))::numeric(9,3) END AS trx_114, CASE WHEN (MS_WKLY_RX_CNT_src.trx_115 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_115))::numeric(9,3) END AS trx_115, CASE WHEN (MS_WKLY_RX_CNT_src.trx_116 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_116))::numeric(9,3) END AS trx_116, CASE WHEN (MS_WKLY_RX_CNT_src.trx_117 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_117))::numeric(9,3) END AS trx_117, CASE WHEN (MS_WKLY_RX_CNT_src.trx_118 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_118))::numeric(9,3) END AS trx_118, CASE WHEN (MS_WKLY_RX_CNT_src.trx_119 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_119))::numeric(9,3) END AS trx_119, CASE WHEN (MS_WKLY_RX_CNT_src.trx_120 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_120))::numeric(9,3) END AS trx_120, CASE WHEN (MS_WKLY_RX_CNT_src.trx_121 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_121))::numeric(9,3) END AS trx_121, CASE WHEN (MS_WKLY_RX_CNT_src.trx_122 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_122))::numeric(9,3) END AS trx_122, CASE WHEN (MS_WKLY_RX_CNT_src.trx_123 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_123))::numeric(9,3) END AS trx_123, CASE WHEN (MS_WKLY_RX_CNT_src.trx_124 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_124))::numeric(9,3) END AS trx_124, CASE WHEN (MS_WKLY_RX_CNT_src.trx_125 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_125))::numeric(9,3) END AS trx_125, CASE WHEN (MS_WKLY_RX_CNT_src.trx_126 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_126))::numeric(9,3) END AS trx_126, CASE WHEN (MS_WKLY_RX_CNT_src.trx_127 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_127))::numeric(9,3) END AS trx_127, CASE WHEN (MS_WKLY_RX_CNT_src.trx_128 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_128))::numeric(9,3) END AS trx_128, CASE WHEN (MS_WKLY_RX_CNT_src.trx_129 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_129))::numeric(9,3) END AS trx_129, CASE WHEN (MS_WKLY_RX_CNT_src.trx_130 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_130))::numeric(9,3) END AS trx_130, CASE WHEN (MS_WKLY_RX_CNT_src.trx_131 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_131))::numeric(9,3) END AS trx_131, CASE WHEN (MS_WKLY_RX_CNT_src.trx_132 = ''::varchar) THEN NULL::numeric(9,3) ELSE (btrim(MS_WKLY_RX_CNT_src.trx_132))::numeric(9,3) END AS trx_132, MS_WKLY_RX_CNT_src.batch_id, MS_WKLY_RX_CNT_src.row_id, MS_WKLY_RX_CNT_src.update_ts FROM teva_ingestion.MS_WKLY_RX_CNT_src;

CREATE  VIEW teva_ingestion.EXT_ZS_CALL_PLAN_TC AS
 SELECT btrim(EXT_ZS_CALL_PLAN_TC_src.VEEVA_ACCOUNT_ID) AS VEEVA_ACCOUNT_ID,
        CASE WHEN (EXT_ZS_CALL_PLAN_TC_src.TVCMID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TC_src.TVCMID))::int END AS TVCMID,
        btrim(EXT_ZS_CALL_PLAN_TC_src.IMS_ID) AS IMS_ID,
        btrim(EXT_ZS_CALL_PLAN_TC_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TC_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TC_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_ZS_CALL_PLAN_TC_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ZS_CALL_PLAN_TC_src.ADDRESS) AS ADDRESS,
        btrim(EXT_ZS_CALL_PLAN_TC_src.CITY) AS CITY,
        btrim(EXT_ZS_CALL_PLAN_TC_src.STATE) AS STATE,
        btrim(EXT_ZS_CALL_PLAN_TC_src.ZIP) AS ZIP,
        btrim(EXT_ZS_CALL_PLAN_TC_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ZS_CALL_PLAN_TC_src.P1 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TC_src.P1))::int END AS P1,
        CASE WHEN (EXT_ZS_CALL_PLAN_TC_src.P2 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TC_src.P2))::int END AS P2,
        CASE WHEN (EXT_ZS_CALL_PLAN_TC_src.P3 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TC_src.P3))::int END AS P3,
        btrim(EXT_ZS_CALL_PLAN_TC_src.TARGET) AS TARGET,
        btrim(EXT_ZS_CALL_PLAN_TC_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ZS_CALL_PLAN_TC_src.PERIOD) AS PERIOD,
        EXT_ZS_CALL_PLAN_TC_src.batch_id,
        EXT_ZS_CALL_PLAN_TC_src.row_id,
        EXT_ZS_CALL_PLAN_TC_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TC_src
 WHERE (EXT_ZS_CALL_PLAN_TC_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ZS_CALL_PLAN_TC'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_ZS_CALL_PLAN_TN AS
 SELECT btrim(EXT_ZS_CALL_PLAN_TN_src.VEEVA_ACCOUNT_ID) AS VEEVA_ACCOUNT_ID,
        CASE WHEN (EXT_ZS_CALL_PLAN_TN_src.TVCMID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TN_src.TVCMID))::int END AS TVCMID,
        btrim(EXT_ZS_CALL_PLAN_TN_src.IMS_ID) AS IMS_ID,
        btrim(EXT_ZS_CALL_PLAN_TN_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TN_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TN_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_ZS_CALL_PLAN_TN_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ZS_CALL_PLAN_TN_src.ADDRESS) AS ADDRESS,
        btrim(EXT_ZS_CALL_PLAN_TN_src.CITY) AS CITY,
        btrim(EXT_ZS_CALL_PLAN_TN_src.STATE) AS STATE,
        btrim(EXT_ZS_CALL_PLAN_TN_src.ZIP) AS ZIP,
        btrim(EXT_ZS_CALL_PLAN_TN_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ZS_CALL_PLAN_TN_src.P1 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TN_src.P1))::int END AS P1,
        CASE WHEN (EXT_ZS_CALL_PLAN_TN_src.P2 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TN_src.P2))::int END AS P2,
        CASE WHEN (EXT_ZS_CALL_PLAN_TN_src.P3 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TN_src.P3))::int END AS P3,
        btrim(EXT_ZS_CALL_PLAN_TN_src.TARGET) AS TARGET,
        btrim(EXT_ZS_CALL_PLAN_TN_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ZS_CALL_PLAN_TN_src.PERIOD) AS PERIOD,
        EXT_ZS_CALL_PLAN_TN_src.batch_id,
        EXT_ZS_CALL_PLAN_TN_src.row_id,
        EXT_ZS_CALL_PLAN_TN_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TN_src
 WHERE (EXT_ZS_CALL_PLAN_TN_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ZS_CALL_PLAN_TN'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_ZS_CALL_PLAN_TP AS
 SELECT btrim(EXT_ZS_CALL_PLAN_TP_src.VEEVA_ACCOUNT_ID) AS VEEVA_ACCOUNT_ID,
        CASE WHEN (EXT_ZS_CALL_PLAN_TP_src.TVCMID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TP_src.TVCMID))::int END AS TVCMID,
        btrim(EXT_ZS_CALL_PLAN_TP_src.IMS_ID) AS IMS_ID,
        btrim(EXT_ZS_CALL_PLAN_TP_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TP_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TP_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_ZS_CALL_PLAN_TP_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ZS_CALL_PLAN_TP_src.ADDRESS) AS ADDRESS,
        btrim(EXT_ZS_CALL_PLAN_TP_src.CITY) AS CITY,
        btrim(EXT_ZS_CALL_PLAN_TP_src.STATE) AS STATE,
        btrim(EXT_ZS_CALL_PLAN_TP_src.ZIP) AS ZIP,
        btrim(EXT_ZS_CALL_PLAN_TP_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ZS_CALL_PLAN_TP_src.P1 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TP_src.P1))::int END AS P1,
        CASE WHEN (EXT_ZS_CALL_PLAN_TP_src.P2 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TP_src.P2))::int END AS P2,
        CASE WHEN (EXT_ZS_CALL_PLAN_TP_src.P3 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TP_src.P3))::int END AS P3,
        btrim(EXT_ZS_CALL_PLAN_TP_src.TARGET) AS TARGET,
        btrim(EXT_ZS_CALL_PLAN_TP_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ZS_CALL_PLAN_TP_src.PERIOD) AS PERIOD,
        EXT_ZS_CALL_PLAN_TP_src.batch_id,
        EXT_ZS_CALL_PLAN_TP_src.row_id,
        EXT_ZS_CALL_PLAN_TP_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TP_src
 WHERE (EXT_ZS_CALL_PLAN_TP_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ZS_CALL_PLAN_TP'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_ZS_CALL_PLAN_TR AS
 SELECT btrim(EXT_ZS_CALL_PLAN_TR_src.VEEVA_ACCOUNT_ID) AS VEEVA_ACCOUNT_ID,
        CASE WHEN (EXT_ZS_CALL_PLAN_TR_src.TVCMID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TR_src.TVCMID))::int END AS TVCMID,
        btrim(EXT_ZS_CALL_PLAN_TR_src.IMS_ID) AS IMS_ID,
        btrim(EXT_ZS_CALL_PLAN_TR_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TR_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TR_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_ZS_CALL_PLAN_TR_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ZS_CALL_PLAN_TR_src.ADDRESS) AS ADDRESS,
        btrim(EXT_ZS_CALL_PLAN_TR_src.CITY) AS CITY,
        btrim(EXT_ZS_CALL_PLAN_TR_src.STATE) AS STATE,
        btrim(EXT_ZS_CALL_PLAN_TR_src.ZIP) AS ZIP,
        btrim(EXT_ZS_CALL_PLAN_TR_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ZS_CALL_PLAN_TR_src.P1 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TR_src.P1))::int END AS P1,
        CASE WHEN (EXT_ZS_CALL_PLAN_TR_src.P2 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TR_src.P2))::int END AS P2,
        CASE WHEN (EXT_ZS_CALL_PLAN_TR_src.P3 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TR_src.P3))::int END AS P3,
        btrim(EXT_ZS_CALL_PLAN_TR_src.TARGET) AS TARGET,
        btrim(EXT_ZS_CALL_PLAN_TR_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ZS_CALL_PLAN_TR_src.PERIOD) AS PERIOD,
        EXT_ZS_CALL_PLAN_TR_src.batch_id,
        EXT_ZS_CALL_PLAN_TR_src.row_id,
        EXT_ZS_CALL_PLAN_TR_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TR_src
 WHERE (EXT_ZS_CALL_PLAN_TR_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ZS_CALL_PLAN_TR'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_ZS_CALL_PLAN_TW AS
 SELECT btrim(EXT_ZS_CALL_PLAN_TW_src.VEEVA_ACCOUNT_ID) AS VEEVA_ACCOUNT_ID,
        CASE WHEN (EXT_ZS_CALL_PLAN_TW_src.TVCMID = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TW_src.TVCMID))::int END AS TVCMID,
        btrim(EXT_ZS_CALL_PLAN_TW_src.IMS_ID) AS IMS_ID,
        btrim(EXT_ZS_CALL_PLAN_TW_src.FIRST_NAME) AS FIRST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TW_src.LAST_NAME) AS LAST_NAME,
        btrim(EXT_ZS_CALL_PLAN_TW_src.SPECIALTY) AS SPECIALTY,
        btrim(EXT_ZS_CALL_PLAN_TW_src.TERRITORY_NUM) AS TERRITORY_NUM,
        btrim(EXT_ZS_CALL_PLAN_TW_src.ADDRESS) AS ADDRESS,
        btrim(EXT_ZS_CALL_PLAN_TW_src.CITY) AS CITY,
        btrim(EXT_ZS_CALL_PLAN_TW_src.STATE) AS STATE,
        btrim(EXT_ZS_CALL_PLAN_TW_src.ZIP) AS ZIP,
        btrim(EXT_ZS_CALL_PLAN_TW_src.PRODUCT_NAME) AS PRODUCT_NAME,
        CASE WHEN (EXT_ZS_CALL_PLAN_TW_src.P1 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TW_src.P1))::int END AS P1,
        CASE WHEN (EXT_ZS_CALL_PLAN_TW_src.P2 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TW_src.P2))::int END AS P2,
        CASE WHEN (EXT_ZS_CALL_PLAN_TW_src.P3 = ''::varchar) THEN NULL::int ELSE (btrim(EXT_ZS_CALL_PLAN_TW_src.P3))::int END AS P3,
        btrim(EXT_ZS_CALL_PLAN_TW_src.TARGET) AS TARGET,
        btrim(EXT_ZS_CALL_PLAN_TW_src.SALES_FORCE_ID) AS SALES_FORCE_ID,
        btrim(EXT_ZS_CALL_PLAN_TW_src.PERIOD) AS PERIOD,
        EXT_ZS_CALL_PLAN_TW_src.batch_id,
        EXT_ZS_CALL_PLAN_TW_src.row_id,
        EXT_ZS_CALL_PLAN_TW_src.update_ts
 FROM teva_ingestion.EXT_ZS_CALL_PLAN_TW_src
 WHERE (EXT_ZS_CALL_PLAN_TW_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_ZS_CALL_PLAN_TW'::varchar(19))));

CREATE  VIEW teva_ingestion.EXT_DDD_445_CALENDAR AS
 SELECT btrim(EXT_DDD_445_CALENDAR_src.START_DATE) AS START_DATE,
        btrim(EXT_DDD_445_CALENDAR_src.END_DATE) AS END_DATE,
        btrim(EXT_DDD_445_CALENDAR_src.PERIOD) AS PERIOD,
        EXT_DDD_445_CALENDAR_src.batch_id,
        EXT_DDD_445_CALENDAR_src.row_id,
        EXT_DDD_445_CALENDAR_src.update_ts
 FROM teva_ingestion.EXT_DDD_445_CALENDAR_src
 WHERE (EXT_DDD_445_CALENDAR_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'EXT_DDD_445_CALENDAR'::varchar(20))));

CREATE  VIEW teva_ingestion.tvcmid_hcp_demo AS
 SELECT CASE WHEN (tvcmid_hcp_demo_src.TVCMID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(tvcmid_hcp_demo_src.TVCMID))::numeric(38,0) END AS TVCMID,
        CASE WHEN (tvcmid_hcp_demo_src.IMS_HCE_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(tvcmid_hcp_demo_src.IMS_HCE_ID))::numeric(38,0) END AS IMS_HCE_ID,
        btrim(tvcmid_hcp_demo_src.IMS_ID) AS IMS_ID,
        btrim(tvcmid_hcp_demo_src.NPI) AS NPI,
        btrim(tvcmid_hcp_demo_src.LAST_NAME) AS LAST_NAME,
        btrim(tvcmid_hcp_demo_src.FIRST_NAME) AS FIRST_NAME,
        btrim(tvcmid_hcp_demo_src.MIDDLE_NAME) AS MIDDLE_NAME,
        btrim(tvcmid_hcp_demo_src.PERSONAL_SUFFIX) AS PERSONAL_SUFFIX,
        btrim(tvcmid_hcp_demo_src.MEDICAL_SUFFIX) AS MEDICAL_SUFFIX,
        btrim(tvcmid_hcp_demo_src.PRIMARY_SPECIALTY) AS PRIMARY_SPECIALTY,
        btrim(tvcmid_hcp_demo_src.ADDRESS_LINE1) AS ADDRESS_LINE1,
        btrim(tvcmid_hcp_demo_src.ADDRESS_LINE2) AS ADDRESS_LINE2,
        btrim(tvcmid_hcp_demo_src.CITY) AS CITY,
        btrim(tvcmid_hcp_demo_src.STATE) AS STATE,
        btrim(tvcmid_hcp_demo_src.ZIP) AS ZIP,
        btrim((tvcmid_hcp_demo_src.C_BO_HCE_ADDRESS__ADDRESS_ID)::varchar(14)) AS C_BO_HCE_ADDRESS__ADDRESS_ID,
        CASE WHEN (tvcmid_hcp_demo_src.LEGACY_ADDRESS_ID = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(tvcmid_hcp_demo_src.LEGACY_ADDRESS_ID))::numeric(38,0) END AS LEGACY_ADDRESS_ID,
        btrim(tvcmid_hcp_demo_src.BUSINESS_PHONE) AS BUSINESS_PHONE,
        btrim(tvcmid_hcp_demo_src.BUSINESS_EMAIL) AS BUSINESS_EMAIL,
        btrim(tvcmid_hcp_demo_src.HCE_STATUS_DESC) AS HCE_STATUS_DESC,
        btrim(tvcmid_hcp_demo_src.NP_PA_FLAG) AS NP_PA_FLAG,
        tvcmid_hcp_demo_src.batch_id,
        tvcmid_hcp_demo_src.row_id,
        tvcmid_hcp_demo_src.update_ts
 FROM teva_ingestion.tvcmid_hcp_demo_src
 WHERE (tvcmid_hcp_demo_src.batch_id = ( SELECT max(teva_ingestion_control.batch_id) AS max
 FROM teva_ingestion.teva_ingestion_control
 WHERE (teva_ingestion_control.file_class = 'TVCMID_HCP_DEMO'::varchar(15))));

CREATE  VIEW teva_ingestion.ext_hcos_ddd_xfer AS
 SELECT btrim(ext_hcos_ddd_xfer_src.IMS_ORG_ID) AS IMS_ORG_ID,
        btrim(ext_hcos_ddd_xfer_src.HCE_ID_PRFSNL) AS HCE_ID_PRFSNL,
        btrim(ext_hcos_ddd_xfer_src.PROFESSIONAL_ID) AS PROFESSIONAL_ID,
        btrim(ext_hcos_ddd_xfer_src.IDENTIFIER_ID) AS IDENTIFIER_ID,
        btrim(ext_hcos_ddd_xfer_src.IDENTIFIER) AS IDENTIFIER,
        btrim(ext_hcos_ddd_xfer_src.IDENTIFIER_ORDER) AS IDENTIFIER_ORDER,
        btrim(ext_hcos_ddd_xfer_src.IDENTIFIER_CATEGORY) AS IDENTIFIER_CATEGORY,
        btrim(ext_hcos_ddd_xfer_src.IDENTIFIER_STATE) AS IDENTIFIER_STATE,
        btrim(ext_hcos_ddd_xfer_src.SRC_STRT_DT) AS SRC_STRT_DT,
        btrim(ext_hcos_ddd_xfer_src.SRC_TRMTN_DT) AS SRC_TRMTN_DT,
        btrim(ext_hcos_ddd_xfer_src.SRC_TRMTN_CD) AS SRC_TRMTN_CD,
        ext_hcos_ddd_xfer_src.batch_id,
        ext_hcos_ddd_xfer_src.row_id,
        ext_hcos_ddd_xfer_src.update_ts
 FROM teva_ingestion.ext_hcos_ddd_xfer_src;

CREATE  VIEW teva_ingestion.ext_tw_biologics_dispense AS
 SELECT btrim(ext_tw_biologics_dispense_src.SP_ID) AS SP_ID,
        btrim(ext_tw_biologics_dispense_src.HUB_ID) AS HUB_ID,
        btrim(ext_tw_biologics_dispense_src.PAYOR) AS PAYOR,
        btrim(ext_tw_biologics_dispense_src.PAYOR_TYPE) AS PAYOR_TYPE,
        CASE WHEN (ext_tw_biologics_dispense_src.COPAY = ''::varchar) THEN NULL::numeric(6,2) ELSE (btrim(ext_tw_biologics_dispense_src.COPAY))::numeric(6,2) END AS COPAY,
        btrim(ext_tw_biologics_dispense_src.INVOICE_NUMBER) AS INVOICE_NUMBER,
        btrim(ext_tw_biologics_dispense_src.PHYSICIAN_NPI) AS PHYSICIAN_NPI,
        btrim(ext_tw_biologics_dispense_src.PHYSICIAN_NAME) AS PHYSICIAN_NAME,
        btrim(ext_tw_biologics_dispense_src.PHYSICIAN_ORG) AS PHYSICIAN_ORG,
        CASE WHEN (ext_tw_biologics_dispense_src.SHIP_DATE = ''::varchar) THEN NULL::date ELSE (btrim(ext_tw_biologics_dispense_src.SHIP_DATE))::date END AS SHIP_DATE,
        CASE WHEN (ext_tw_biologics_dispense_src.SHIP_NUM = ''::varchar) THEN NULL::int ELSE (btrim(ext_tw_biologics_dispense_src.SHIP_NUM))::int END AS SHIP_NUM,
        btrim(ext_tw_biologics_dispense_src.REPLACEMENT_FLAG) AS REPLACEMENT_FLAG,
        CASE WHEN (ext_tw_biologics_dispense_src.MEDICAID_RETURN_DATE = ''::varchar) THEN NULL::date ELSE (btrim(ext_tw_biologics_dispense_src.MEDICAID_RETURN_DATE))::date END AS MEDICAID_RETURN_DATE,
        CASE WHEN (ext_tw_biologics_dispense_src.SELF_PAY_REFUND_DATE = ''::varchar) THEN NULL::date ELSE (btrim(ext_tw_biologics_dispense_src.SELF_PAY_REFUND_DATE))::date END AS SELF_PAY_REFUND_DATE,
        btrim(ext_tw_biologics_dispense_src.SHIP_ADDRESS) AS SHIP_ADDRESS,
        btrim(ext_tw_biologics_dispense_src.SHIP_CITY) AS SHIP_CITY,
        btrim(ext_tw_biologics_dispense_src.SHIP_STATE) AS SHIP_STATE,
        btrim(ext_tw_biologics_dispense_src.SHIP_ZIP) AS SHIP_ZIP,
        ext_tw_biologics_dispense_src.batch_id,
        ext_tw_biologics_dispense_src.row_id,
        ext_tw_biologics_dispense_src.update_ts
 FROM teva_ingestion.ext_tw_biologics_dispense_src;

CREATE  VIEW teva_ingestion.ext_tw_biologics_referral AS
 SELECT btrim(ext_tw_biologics_referral_src.PATIENT_CREATE_DATE) AS PATIENT_CREATE_DATE,
        btrim(ext_tw_biologics_referral_src.MRN) AS MRN,
        btrim(ext_tw_biologics_referral_src.PH_NPI) AS PH_NPI,
        btrim(ext_tw_biologics_referral_src.PHYSICIAN) AS PHYSICIAN,
        btrim(ext_tw_biologics_referral_src.REFERRAL_TYPE) AS REFERRAL_TYPE,
        btrim(ext_tw_biologics_referral_src.PH_SPEC) AS PH_SPEC,
        btrim(ext_tw_biologics_referral_src.PH_ORG) AS PH_ORG,
        btrim(ext_tw_biologics_referral_src.PH_ADDRESS) AS PH_ADDRESS,
        btrim(ext_tw_biologics_referral_src.PH_CITY) AS PH_CITY,
        btrim(ext_tw_biologics_referral_src.PH_STATE) AS PH_STATE,
        btrim(ext_tw_biologics_referral_src.PH_ZIP) AS PH_ZIP,
        btrim(ext_tw_biologics_referral_src.PH_PHONE) AS PH_PHONE,
        ext_tw_biologics_referral_src.batch_id,
        ext_tw_biologics_referral_src.row_id,
        ext_tw_biologics_referral_src.update_ts
 FROM teva_ingestion.ext_tw_biologics_referral_src;

CREATE  VIEW teva_ingestion.ext_diplomat_rx AS
 SELECT btrim(ext_diplomat_rx_src.SPECIALTY_PHARMACY_NAME) AS SPECIALTY_PHARMACY_NAME,
        btrim(ext_diplomat_rx_src.SUB_SPECIALTY_PHARMACY_NAME) AS SUB_SPECIALTY_PHARMACY_NAME,
        btrim(ext_diplomat_rx_src.SPECIALTY_PHARMACY_HUB_ID) AS SPECIALTY_PHARMACY_HUB_ID,
        CASE WHEN (ext_diplomat_rx_src.PHARMACY_NPI = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.PHARMACY_NPI))::numeric(37,15) END AS PHARMACY_NPI,
        btrim(ext_diplomat_rx_src.NCPDP) AS NCPDP,
        btrim(ext_diplomat_rx_src.PHARMACY_STORE_NUMBER) AS PHARMACY_STORE_NUMBER,
        btrim(ext_diplomat_rx_src.PHARMACY_ADDRESS_1) AS PHARMACY_ADDRESS_1,
        btrim(ext_diplomat_rx_src.PHARMACY_ADDRESS_2) AS PHARMACY_ADDRESS_2,
        btrim(ext_diplomat_rx_src.PHARMACY_CITY) AS PHARMACY_CITY,
        btrim(ext_diplomat_rx_src.PHARMACY_STATE) AS PHARMACY_STATE,
        btrim(ext_diplomat_rx_src.PHARMACY_ZIP) AS PHARMACY_ZIP,
        btrim(ext_diplomat_rx_src.PHARMACY_PHONE) AS PHARMACY_PHONE,
        btrim(ext_diplomat_rx_src.PHARMACY_FAX) AS PHARMACY_FAX,
        btrim(ext_diplomat_rx_src.DSP_PATIENT_ID) AS DSP_PATIENT_ID,
        btrim(ext_diplomat_rx_src.GENDER) AS GENDER,
        CASE WHEN (ext_diplomat_rx_src.AGE = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.AGE))::numeric(37,15) END AS AGE,
        btrim(ext_diplomat_rx_src.PATIENT_STATE) AS PATIENT_STATE,
        btrim(ext_diplomat_rx_src.PRIMARY_ICD9) AS PRIMARY_ICD9,
        btrim(ext_diplomat_rx_src.SECONDARY_ICD9) AS SECONDARY_ICD9,
        CASE WHEN (ext_diplomat_rx_src.PRESCRIBER_NPI = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.PRESCRIBER_NPI))::numeric(37,15) END AS PRESCRIBER_NPI,
        btrim(ext_diplomat_rx_src.PRESCRIBER_DEA) AS PRESCRIBER_DEA,
        btrim(ext_diplomat_rx_src.PRESCRIBER_HUB_ID) AS PRESCRIBER_HUB_ID,
        btrim(ext_diplomat_rx_src.PRESCRIBER_NAME_FIRST) AS PRESCRIBER_NAME_FIRST,
        btrim(ext_diplomat_rx_src.PRESCIBER_NAME_LAST) AS PRESCIBER_NAME_LAST,
        btrim(ext_diplomat_rx_src.PRESCRIBER_ADDRESS_1) AS PRESCRIBER_ADDRESS_1,
        btrim(ext_diplomat_rx_src.PRESCRIBER_ADDRESS_2) AS PRESCRIBER_ADDRESS_2,
        btrim(ext_diplomat_rx_src.PRESCRIBER_CITY) AS PRESCRIBER_CITY,
        btrim(ext_diplomat_rx_src.PRESCRIBER_STATE) AS PRESCRIBER_STATE,
        btrim(ext_diplomat_rx_src.PRESCRIBER_ZIP) AS PRESCRIBER_ZIP,
        btrim(ext_diplomat_rx_src.PRESCRIBER_PHONE) AS PRESCRIBER_PHONE,
        btrim(ext_diplomat_rx_src.PRESCRIBER_FAX) AS PRESCRIBER_FAX,
        btrim(ext_diplomat_rx_src.DRUG_NAME) AS DRUG_NAME,
        btrim(ext_diplomat_rx_src.DRUG_NDC_11) AS DRUG_NDC_11,
        btrim(ext_diplomat_rx_src.DRUG_STRENGTH) AS DRUG_STRENGTH,
        btrim(ext_diplomat_rx_src.DRUG_FORM) AS DRUG_FORM,
        btrim(ext_diplomat_rx_src.PACKAGE_SIZE) AS PACKAGE_SIZE,
        btrim(ext_diplomat_rx_src.DOSE_FORM) AS DOSE_FORM,
        btrim(ext_diplomat_rx_src.RX_NBR) AS RX_NBR,
        CASE WHEN (ext_diplomat_rx_src.REFILL_NUMBER = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.REFILL_NUMBER))::numeric(37,15) END AS REFILL_NUMBER,
        CASE WHEN (ext_diplomat_rx_src.RX_REFILLS_WRITTEN = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.RX_REFILLS_WRITTEN))::numeric(37,15) END AS RX_REFILLS_WRITTEN,
        CASE WHEN (ext_diplomat_rx_src.DISPENSE_QTY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.DISPENSE_QTY))::numeric(37,15) END AS DISPENSE_QTY,
        CASE WHEN (ext_diplomat_rx_src.DAYS_SUPPLY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.DAYS_SUPPLY))::numeric(37,15) END AS DAYS_SUPPLY,
        btrim(ext_diplomat_rx_src.RX_WRITTEN_DATE) AS RX_WRITTEN_DATE,
        btrim(ext_diplomat_rx_src.RX_RECEIPT_DATE) AS RX_RECEIPT_DATE,
        btrim(ext_diplomat_rx_src.FILL_DATE) AS FILL_DATE,
        btrim(ext_diplomat_rx_src.RX_TYPE) AS RX_TYPE,
        CASE WHEN (ext_diplomat_rx_src.COPAY = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.COPAY))::numeric(37,15) END AS COPAY,
        CASE WHEN (ext_diplomat_rx_src.INGREDIENT_WAC_COST = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.INGREDIENT_WAC_COST))::numeric(37,15) END AS INGREDIENT_WAC_COST,
        CASE WHEN (ext_diplomat_rx_src.TOTAL_PRICE_PAID = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(ext_diplomat_rx_src.TOTAL_PRICE_PAID))::numeric(37,15) END AS TOTAL_PRICE_PAID,
        btrim(ext_diplomat_rx_src.PRIMARY_PLAN_NAME) AS PRIMARY_PLAN_NAME,
        btrim(ext_diplomat_rx_src.PRIMARY_BIN) AS PRIMARY_BIN,
        btrim(ext_diplomat_rx_src.PRIMARY_PCN) AS PRIMARY_PCN,
        btrim(ext_diplomat_rx_src.SECONDARY_PLAN_NAME) AS SECONDARY_PLAN_NAME,
        btrim(ext_diplomat_rx_src.SECONDARY_BIN) AS SECONDARY_BIN,
        btrim(ext_diplomat_rx_src.SECONDARY_PCN) AS SECONDARY_PCN,
        btrim(ext_diplomat_rx_src.TERTIARY_PLAN_NAME) AS TERTIARY_PLAN_NAME,
        btrim(ext_diplomat_rx_src.TERTIARY_BIN) AS TERTIARY_BIN,
        btrim(ext_diplomat_rx_src.TERTIARY_PCN) AS TERTIARY_PCN,
        btrim(ext_diplomat_rx_src.SHIP_DATE) AS SHIP_DATE,
        btrim(ext_diplomat_rx_src.SHIPPING_CARRIER) AS SHIPPING_CARRIER,
        ext_diplomat_rx_src.batch_id,
        ext_diplomat_rx_src.row_id,
        ext_diplomat_rx_src.update_ts
 FROM teva_ingestion.ext_diplomat_rx_src;

CREATE  VIEW teva_ingestion.EXT_TW_ICS_ACCOUNT AS
 SELECT btrim(EXT_TW_ICS_ACCOUNT_src.PARENT_BP_CODE) AS PARENT_BP_CODE,
        btrim(EXT_TW_ICS_ACCOUNT_src.PARENT_BP_NAME) AS PARENT_BP_NAME,
        btrim(EXT_TW_ICS_ACCOUNT_src.ALT_ID) AS ALT_ID,
        btrim(EXT_TW_ICS_ACCOUNT_src.TAX_ID) AS TAX_ID,
        btrim(EXT_TW_ICS_ACCOUNT_src.ADDRESS) AS ADDRESS,
        btrim(EXT_TW_ICS_ACCOUNT_src.CITY) AS CITY,
        btrim(EXT_TW_ICS_ACCOUNT_src.ZIP_CODE) AS ZIP_CODE,
        btrim(EXT_TW_ICS_ACCOUNT_src.STATE) AS STATE,
        btrim(EXT_TW_ICS_ACCOUNT_src.PHONE) AS PHONE,
        btrim(EXT_TW_ICS_ACCOUNT_src.FAX) AS FAX,
        btrim(EXT_TW_ICS_ACCOUNT_src.EMAIL) AS EMAIL,
        btrim(EXT_TW_ICS_ACCOUNT_src.INVOICE_TO_BP_TYPE_CODE) AS INVOICE_TO_BP_TYPE_CODE,
        btrim(EXT_TW_ICS_ACCOUNT_src.BP_CODE) AS BP_CODE,
        btrim(EXT_TW_ICS_ACCOUNT_src.BP_NAME) AS BP_NAME,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_TAX_ID) AS BILL_TO_TAX_ID,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_ADDRESS) AS BILL_TO_ADDRESS,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_CITY) AS BILL_TO_CITY,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_ZIP_CODE) AS BILL_TO_ZIP_CODE,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_STATE) AS BILL_TO_STATE,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_PHONE) AS BILL_TO_PHONE,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_FAX) AS BILL_TO_FAX,
        btrim(EXT_TW_ICS_ACCOUNT_src.BILL_TO_EMAIL) AS BILL_TO_EMAIL,
        btrim(EXT_TW_ICS_ACCOUNT_src.DEA_LICENSE_NUM) AS DEA_LICENSE_NUM,
        btrim(EXT_TW_ICS_ACCOUNT_src.HIN_NUM) AS HIN_NUM,
        btrim(EXT_TW_ICS_ACCOUNT_src.CUSTOMER_340B) AS CUSTOMER_340B,
        EXT_TW_ICS_ACCOUNT_src.batch_id,
        EXT_TW_ICS_ACCOUNT_src.row_id,
        EXT_TW_ICS_ACCOUNT_src.update_ts
 FROM teva_ingestion.EXT_TW_ICS_ACCOUNT_src;

CREATE  VIEW teva_ingestion.EXT_BING_ADS AS
 SELECT CASE WHEN (EXT_BING_ADS_src.gregorian_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_BING_ADS_src.gregorian_date))::date END AS gregorian_date,
        btrim(EXT_BING_ADS_src.account_name) AS account_name,
        btrim(EXT_BING_ADS_src.campaign_name) AS campaign_name,
        btrim(EXT_BING_ADS_src.ad_group) AS ad_group,
        btrim(EXT_BING_ADS_src.keyword) AS keyword,
        btrim(EXT_BING_ADS_src.bid_match_type) AS bid_match_type,
        btrim(EXT_BING_ADS_src.ad_distribution) AS ad_distribution,
        btrim(EXT_BING_ADS_src.current_maximum_cpc) AS current_maximum_cpc,
        btrim(EXT_BING_ADS_src.quality_score) AS quality_score,
        CASE WHEN (EXT_BING_ADS_src.impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.impressions))::int END AS impressions,
        CASE WHEN (EXT_BING_ADS_src.clicks = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.clicks))::int END AS clicks,
        btrim(EXT_BING_ADS_src.ctr_percent) AS ctr_percent,
        btrim(EXT_BING_ADS_src.average_cpc) AS average_cpc,
        btrim(EXT_BING_ADS_src.spend) AS spend,
        btrim(EXT_BING_ADS_src.avg_position) AS avg_position,
        CASE WHEN (EXT_BING_ADS_src.conversions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.conversions))::int END AS conversions,
        btrim(EXT_BING_ADS_src.conversion_rate_percent) AS conversion_rate_percent,
        btrim(EXT_BING_ADS_src.cpa) AS cpa,
        CASE WHEN (EXT_BING_ADS_src.account_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.account_id))::int END AS account_id,
        btrim(EXT_BING_ADS_src.account_number) AS account_number,
        btrim(EXT_BING_ADS_src.account_status) AS account_status,
        CASE WHEN (EXT_BING_ADS_src.ad_group_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.ad_group_id))::int END AS ad_group_id,
        btrim(EXT_BING_ADS_src.ad_group_status) AS ad_group_status,
        CASE WHEN (EXT_BING_ADS_src.ad_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.ad_id))::int END AS ad_id,
        btrim(EXT_BING_ADS_src.landing_page_relevance) AS landing_page_relevance,
        btrim(EXT_BING_ADS_src.ad_type) AS ad_type,
        btrim(EXT_BING_ADS_src.final_app_url) AS final_app_url,
        btrim(EXT_BING_ADS_src.bid_strategy_type) AS bid_strategy_type,
        btrim(EXT_BING_ADS_src.business_category) AS business_category,
        CASE WHEN (EXT_BING_ADS_src.business_category_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.business_category_id))::int END AS business_category_id,
        btrim(EXT_BING_ADS_src.business_listing) AS business_listing,
        CASE WHEN (EXT_BING_ADS_src.business_listing_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.business_listing_id))::int END AS business_listing_id,
        CASE WHEN (EXT_BING_ADS_src.campaign_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.campaign_id))::int END AS campaign_id,
        btrim(EXT_BING_ADS_src.campaign_status) AS campaign_status,
        btrim(EXT_BING_ADS_src.currency_code) AS currency_code,
        btrim(EXT_BING_ADS_src.custom_parameters) AS custom_parameters,
        btrim(EXT_BING_ADS_src.customer) AS customer,
        btrim(EXT_BING_ADS_src.customer_name) AS customer_name,
        btrim(EXT_BING_ADS_src.delivered_match_type) AS delivered_match_type,
        btrim(EXT_BING_ADS_src.destination_url) AS destination_url,
        btrim(EXT_BING_ADS_src.device_os) AS device_os,
        btrim(EXT_BING_ADS_src.device_type) AS device_type,
        btrim(EXT_BING_ADS_src.keyword_relevance) AS keyword_relevance,
        btrim(EXT_BING_ADS_src.final_url) AS final_url,
        CASE WHEN (EXT_BING_ADS_src.keyword_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.keyword_id))::int END AS keyword_id,
        CASE WHEN (EXT_BING_ADS_src.keyword_match_type_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_BING_ADS_src.keyword_match_type_id))::int END AS keyword_match_type_id,
        btrim(EXT_BING_ADS_src.keyword_status) AS keyword_status,
        btrim(EXT_BING_ADS_src.landing_page_user_experience) AS landing_page_user_experience,
        btrim(EXT_BING_ADS_src.language) AS language,
        btrim(EXT_BING_ADS_src.final_mobile_url) AS final_mobile_url,
        btrim(EXT_BING_ADS_src.network) AS network,
        btrim(EXT_BING_ADS_src.pricing_method) AS pricing_method,
        btrim(EXT_BING_ADS_src.quality_impact) AS quality_impact,
        btrim(EXT_BING_ADS_src.top_vs_other) AS top_vs_other,
        btrim(EXT_BING_ADS_src.tracking_template) AS tracking_template,
        btrim(EXT_BING_ADS_src.historic_quality_score) AS historic_quality_score,
        btrim(EXT_BING_ADS_src.historic_keyword_relevance) AS historic_keyword_relevance,
        btrim(EXT_BING_ADS_src.historic_landing_page_relevance) AS historic_landing_page_relevance,
        btrim(EXT_BING_ADS_src.historic_landing_page_user_experience) AS historic_landing_page_user_experience,
        EXT_BING_ADS_src.batch_id,
        EXT_BING_ADS_src.row_id,
        EXT_BING_ADS_src.update_ts
 FROM teva_ingestion.EXT_BING_ADS_src;

CREATE  VIEW teva_ingestion.EXT_DA_BROADCAST_DATA AS
 SELECT CASE WHEN (EXT_DA_BROADCAST_DATA_src.date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_DA_BROADCAST_DATA_src.date))::date END AS date,
        CASE WHEN (EXT_DA_BROADCAST_DATA_src.week_of = ''::varchar) THEN NULL::date ELSE (btrim(EXT_DA_BROADCAST_DATA_src.week_of))::date END AS week_of,
        btrim(EXT_DA_BROADCAST_DATA_src.day) AS day,
        btrim(EXT_DA_BROADCAST_DATA_src.network) AS network,
        btrim(EXT_DA_BROADCAST_DATA_src."time") AS "time",
        btrim(EXT_DA_BROADCAST_DATA_src.program) AS program,
        btrim(EXT_DA_BROADCAST_DATA_src.length) AS length,
        btrim(EXT_DA_BROADCAST_DATA_src.isci_code) AS isci_code,
        CASE WHEN (EXT_DA_BROADCAST_DATA_src.net_dollars = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_DA_BROADCAST_DATA_src.net_dollars))::numeric(18,4) END AS net_dollars,
        btrim(EXT_DA_BROADCAST_DATA_src.wm1834_imps) AS wm1834_imps,
        btrim(EXT_DA_BROADCAST_DATA_src.wm1834_grps) AS wm1834_grps,
        CASE WHEN (EXT_DA_BROADCAST_DATA_src.national_tv_spend_acutalized = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_DA_BROADCAST_DATA_src.national_tv_spend_acutalized))::numeric(18,4) END AS national_tv_spend_acutalized,
        CASE WHEN (EXT_DA_BROADCAST_DATA_src.national_tv_spend_planned = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_DA_BROADCAST_DATA_src.national_tv_spend_planned))::numeric(18,4) END AS national_tv_spend_planned,
        CASE WHEN (EXT_DA_BROADCAST_DATA_src.radio_spend_total = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_DA_BROADCAST_DATA_src.radio_spend_total))::numeric(18,4) END AS radio_spend_total,
        EXT_DA_BROADCAST_DATA_src.batch_id,
        EXT_DA_BROADCAST_DATA_src.row_id,
        EXT_DA_BROADCAST_DATA_src.update_ts
 FROM teva_ingestion.EXT_DA_BROADCAST_DATA_src;

CREATE  VIEW teva_ingestion.EXT_DA_DIGITAL_SPEND_DATA AS
 SELECT btrim(EXT_DA_DIGITAL_SPEND_DATA_src.advertiser_code) AS advertiser_code,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_client) AS ad_server_client,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_client_name) AS ad_server_client_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_publisher_code) AS ad_server_publisher_code,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_publisher_name) AS ad_server_publisher_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.advertiser_business_key) AS advertiser_business_key,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.advertiser_name) AS advertiser_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.agency_location) AS agency_location,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.buy_category) AS buy_category,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.buy_type) AS buy_type,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.campaign_name) AS campaign_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.cost_method) AS cost_method,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.creative_type) AS creative_type,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.dimension) AS dimension,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.end_date) AS end_date,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.location) AS location,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.media_code) AS media_code,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.media_name) AS media_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.month_of_service) AS month_of_service,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.package_type) AS package_type,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_ad_server) AS placement_ad_server,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_ad_server_instance) AS placement_ad_server_instance,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_end_date) AS placement_end_date,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_name) AS placement_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_number) AS placement_number,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_positioning) AS placement_positioning,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.served_by) AS served_by,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_site_name) AS placement_site_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_start_date) AS placement_start_date,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_type) AS placement_type,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.placement_user) AS placement_user,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.product_business_key) AS product_business_key,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.product_code) AS product_code,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.product_name) AS product_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.public_id) AS public_id,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.rich_media_accepted) AS rich_media_accepted,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.rich_media_included_in_rate) AS rich_media_included_in_rate,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.supplier_business_key) AS supplier_business_key,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.start_date) AS start_date,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.supplier_code) AS supplier_code,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.supplier_name) AS supplier_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.unit_type) AS unit_type,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_campaign_id) AS ad_server_campaign_id,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.ad_server_placement_id) AS ad_server_placement_id,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.package_group_id) AS package_group_id,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.package_group_name) AS package_group_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.estimate_business_key) AS estimate_business_key,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.estimate_code) AS estimate_code,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.estimate_name) AS estimate_name,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.estimate_end_date) AS estimate_end_date,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.estimate_start_date) AS estimate_start_date,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.third_party_actions) AS third_party_actions,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.third_party_clicks) AS third_party_clicks,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.third_party_delivered_cost) AS third_party_delivered_cost,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.third_party_impressions) AS third_party_impressions,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.third_party_delivered_units) AS third_party_delivered_units,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.planned_actions) AS planned_actions,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.planned_amount) AS planned_amount,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.planned_clicks) AS planned_clicks,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.planned_impressions) AS planned_impressions,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.rate) AS rate,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.measurable_impression) AS measurable_impression,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.viewable_impressions) AS viewable_impressions,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.eligible_impressions) AS eligible_impressions,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.first_party_impressions) AS first_party_impressions,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.planned_units) AS planned_units,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.planned_units_2) AS planned_units_2,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.ordered) AS ordered,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.approved_amount) AS approved_amount,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.inventory_type) AS inventory_type,
        btrim(EXT_DA_DIGITAL_SPEND_DATA_src.order_id) AS order_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.batch_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.row_id,
        EXT_DA_DIGITAL_SPEND_DATA_src.update_ts
 FROM teva_ingestion.EXT_DA_DIGITAL_SPEND_DATA_src;

CREATE  VIEW teva_ingestion.EXT_DA_PRINT_SPEND_DATA AS
 SELECT btrim(EXT_DA_PRINT_SPEND_DATA_src.advertiser_name) AS advertiser_name,
        btrim(EXT_DA_PRINT_SPEND_DATA_src.brand_name) AS brand_name,
        CASE WHEN (EXT_DA_PRINT_SPEND_DATA_src.media_billing_estimate = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DA_PRINT_SPEND_DATA_src.media_billing_estimate))::int END AS media_billing_estimate,
        CASE WHEN (EXT_DA_PRINT_SPEND_DATA_src.media_type_code = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DA_PRINT_SPEND_DATA_src.media_type_code))::int END AS media_type_code,
        btrim(EXT_DA_PRINT_SPEND_DATA_src.publisher_identifier) AS publisher_identifier,
        btrim(EXT_DA_PRINT_SPEND_DATA_src.publisher_name) AS publisher_name,
        CASE WHEN (EXT_DA_PRINT_SPEND_DATA_src.order_start_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_DA_PRINT_SPEND_DATA_src.order_start_date))::date END AS order_start_date,
        CASE WHEN (EXT_DA_PRINT_SPEND_DATA_src.order_close_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_DA_PRINT_SPEND_DATA_src.order_close_date))::date END AS order_close_date,
        CASE WHEN (EXT_DA_PRINT_SPEND_DATA_src.monthly_total_cost = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_DA_PRINT_SPEND_DATA_src.monthly_total_cost))::numeric(18,4) END AS monthly_total_cost,
        CASE WHEN (EXT_DA_PRINT_SPEND_DATA_src.number_of_insertions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DA_PRINT_SPEND_DATA_src.number_of_insertions))::int END AS number_of_insertions,
        EXT_DA_PRINT_SPEND_DATA_src.batch_id,
        EXT_DA_PRINT_SPEND_DATA_src.row_id,
        EXT_DA_PRINT_SPEND_DATA_src.update_ts
 FROM teva_ingestion.EXT_DA_PRINT_SPEND_DATA_src;

CREATE  VIEW teva_ingestion.EXT_DOUBLECLICK_DCM AS
 SELECT btrim(EXT_DOUBLECLICK_DCM_src.advertiser_id) AS advertiser_id,
        btrim(EXT_DOUBLECLICK_DCM_src.advertiser_name) AS advertiser_name,
        btrim(EXT_DOUBLECLICK_DCM_src.brand) AS brand,
        btrim(EXT_DOUBLECLICK_DCM_src.target_audience) AS target_audience,
        btrim(EXT_DOUBLECLICK_DCM_src.campaign_id) AS campaign_id,
        btrim(EXT_DOUBLECLICK_DCM_src.campaign_name) AS campaign_name,
        btrim(EXT_DOUBLECLICK_DCM_src.session_date) AS session_date,
        btrim(EXT_DOUBLECLICK_DCM_src.partner_site_id) AS partner_site_id,
        btrim(EXT_DOUBLECLICK_DCM_src.partner_site_name) AS partner_site_name,
        btrim(EXT_DOUBLECLICK_DCM_src.package_id) AS package_id,
        btrim(EXT_DOUBLECLICK_DCM_src.package_name) AS package_name,
        btrim(EXT_DOUBLECLICK_DCM_src.placement_id) AS placement_id,
        btrim(EXT_DOUBLECLICK_DCM_src.placement_name) AS placement_name,
        btrim(EXT_DOUBLECLICK_DCM_src.placement_pixel_size) AS placement_pixel_size,
        btrim(EXT_DOUBLECLICK_DCM_src.placement_cost_structure) AS placement_cost_structure,
        btrim(EXT_DOUBLECLICK_DCM_src.ad_id) AS ad_id,
        btrim(EXT_DOUBLECLICK_DCM_src.ad_name) AS ad_name,
        btrim(EXT_DOUBLECLICK_DCM_src.ad_type) AS ad_type,
        btrim(EXT_DOUBLECLICK_DCM_src.creative_id) AS creative_id,
        btrim(EXT_DOUBLECLICK_DCM_src.creative_name) AS creative_name,
        btrim(EXT_DOUBLECLICK_DCM_src.creative_type) AS creative_type,
        btrim(EXT_DOUBLECLICK_DCM_src.device_type) AS device_type,
        btrim(EXT_DOUBLECLICK_DCM_src.device_browser) AS device_browser,
        btrim(EXT_DOUBLECLICK_DCM_src.click_thru_url) AS click_thru_url,
        btrim(EXT_DOUBLECLICK_DCM_src.activity_group_id) AS activity_group_id,
        btrim(EXT_DOUBLECLICK_DCM_src.activity_group_name) AS activity_group_name,
        btrim(EXT_DOUBLECLICK_DCM_src.activity_id) AS activity_id,
        btrim(EXT_DOUBLECLICK_DCM_src.activity_name) AS activity_name,
        btrim(EXT_DOUBLECLICK_DCM_src.impressions) AS impressions,
        btrim(EXT_DOUBLECLICK_DCM_src.clicks) AS clicks,
        btrim(EXT_DOUBLECLICK_DCM_src.media_cost) AS media_cost,
        btrim(EXT_DOUBLECLICK_DCM_src.total_conversions) AS total_conversions,
        btrim(EXT_DOUBLECLICK_DCM_src.click_thru_conversions) AS click_thru_conversions,
        btrim(EXT_DOUBLECLICK_DCM_src.view_thru_conversions) AS view_thru_conversions,
        CASE WHEN (EXT_DOUBLECLICK_DCM_src.conversion_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DOUBLECLICK_DCM_src.conversion_id))::int END AS conversion_id,
        CASE WHEN (EXT_DOUBLECLICK_DCM_src.keyword_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DOUBLECLICK_DCM_src.keyword_id))::int END AS keyword_id,
        CASE WHEN (EXT_DOUBLECLICK_DCM_src.user_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DOUBLECLICK_DCM_src.user_id))::int END AS user_id,
        btrim((EXT_DOUBLECLICK_DCM_src.country)::varchar(2)) AS country,
        btrim(EXT_DOUBLECLICK_DCM_src.state_region) AS state_region,
        CASE WHEN (EXT_DOUBLECLICK_DCM_src.city_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DOUBLECLICK_DCM_src.city_id))::int END AS city_id,
        EXT_DOUBLECLICK_DCM_src.batch_id,
        EXT_DOUBLECLICK_DCM_src.row_id,
        EXT_DOUBLECLICK_DCM_src.update_ts
 FROM teva_ingestion.EXT_DOUBLECLICK_DCM_src;

CREATE  VIEW teva_ingestion.EXT_DOUBLECLICK_DS_ADS AS
 SELECT btrim(EXT_DOUBLECLICK_DS_ADS_src.session_date) AS session_date,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.brand) AS brand,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.target_audience) AS target_audience,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.search_engine) AS search_engine,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.campaign_id) AS campaign_id,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.campaign_name) AS campaign_name,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.placement_id) AS placement_id,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.placement_name) AS placement_name,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.keyword_id) AS keyword_id,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.keyword_name) AS keyword_name,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.keyword_match_type) AS keyword_match_type,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.url_landing_page) AS url_landing_page,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.device_type) AS device_type,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.impressions) AS impressions,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.clicks) AS clicks,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.media_cost) AS media_cost,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.keyword_position) AS keyword_position,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.average_cpc) AS average_cpc,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.average_cpm) AS average_cpm,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.adwords_conversions) AS adwords_conversions,
        CASE WHEN (EXT_DOUBLECLICK_DS_ADS_src.keyword_engine_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DOUBLECLICK_DS_ADS_src.keyword_engine_id))::int END AS keyword_engine_id,
        btrim(EXT_DOUBLECLICK_DS_ADS_src.keyword_engine_status) AS keyword_engine_status,
        EXT_DOUBLECLICK_DS_ADS_src.batch_id,
        EXT_DOUBLECLICK_DS_ADS_src.row_id,
        EXT_DOUBLECLICK_DS_ADS_src.update_ts
 FROM teva_ingestion.EXT_DOUBLECLICK_DS_ADS_src;

CREATE  VIEW teva_ingestion.EXT_DOUBLECLICK_DS_CONVERSIONS AS
 SELECT btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.brand) AS brand,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.target_audience) AS target_audience,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.search_engine) AS search_engine,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.campaign_id) AS campaign_id,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.campaign_name) AS campaign_name,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.placement_id) AS placement_id,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.placement_name) AS placement_name,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.keyword_id) AS keyword_id,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.keyword_name) AS keyword_name,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.keyword_match_type) AS keyword_match_type,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.device_type) AS device_type,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_group_id) AS activity_group_id,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_group_name) AS activity_group_name,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_id) AS activity_id,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.activity_name) AS activity_name,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.total_conversions) AS total_conversions,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.conversion_date) AS conversion_date,
        CASE WHEN (EXT_DOUBLECLICK_DS_CONVERSIONS_src.visit_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.visit_id))::int END AS visit_id,
        CASE WHEN (EXT_DOUBLECLICK_DS_CONVERSIONS_src.conversion_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.conversion_id))::int END AS conversion_id,
        btrim(EXT_DOUBLECLICK_DS_CONVERSIONS_src.gclid) AS gclid,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.batch_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.row_id,
        EXT_DOUBLECLICK_DS_CONVERSIONS_src.update_ts
 FROM teva_ingestion.EXT_DOUBLECLICK_DS_CONVERSIONS_src;

CREATE  VIEW teva_ingestion.EXT_GOOGLE_ANALYTICS_360 AS
 SELECT CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.dataset_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.dataset_id))::int END AS dataset_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.full_visitor_id = ''::varchar) THEN NULL::numeric(38,0) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.full_visitor_id))::numeric(38,0) END AS full_visitor_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.visitor_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.visitor_id))::int END AS visitor_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.user_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.user_id))::int END AS user_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.visit_number = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.visit_number))::int END AS visit_number,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.visit_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.visit_id))::int END AS visit_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.visit_start_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.visit_start_time))::int END AS visit_start_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.date))::date END AS date,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_visits = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_visits))::int END AS totals_visits,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_hits = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_hits))::int END AS totals_hits,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_page_views = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_page_views))::int END AS totals_page_views,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_time_on_site = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_time_on_site))::int END AS totals_time_on_site,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_bounces = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_bounces))::int END AS totals_bounces,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_transactions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_transactions))::int END AS totals_transactions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_transaction_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_transaction_revenue))::numeric(18,4) END AS totals_transaction_revenue,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_new_visits = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_new_visits))::int END AS totals_new_visits,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_screen_views = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_screen_views))::int END AS totals_screen_views,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_unique_screen_views = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_unique_screen_views))::int END AS totals_unique_screen_views,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_time_on_screen = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_time_on_screen))::int END AS totals_time_on_screen,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.totals_total_transaction_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.totals_total_transaction_revenue))::numeric(18,4) END AS totals_total_transaction_revenue,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_referral_path) AS traffic_source_referral_path,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_campaign) AS traffic_source_campaign,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_source) AS traffic_source_source,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_medium) AS traffic_source_medium,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_keyword) AS traffic_source_keyword,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_ad_content) AS traffic_source_ad_content,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.channel_grouping) AS channel_grouping,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.social_engagement_type) AS social_engagement_type,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_campaign_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_campaign_id))::int END AS traffic_source_adwords_click_info_campaign_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_ad_group_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_ad_group_id))::int END AS traffic_source_adwords_click_info_ad_group_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_creative_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_creative_id))::int END AS traffic_source_adwords_click_info_creative_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_criteria_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_criteria_id))::int END AS traffic_source_adwords_click_info_criteria_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_page = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_page))::int END AS traffic_source_adwords_click_info_page,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_slot) AS traffic_source_adwords_click_info_slot,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_criteria_parameters) AS traffic_source_adwords_click_info_criteria_parameters,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_gcl_id) AS traffic_source_adwords_click_info_gcl_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_customer_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_customer_id))::int END AS traffic_source_adwords_click_info_customer_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_ad_network_type) AS traffic_source_adwords_click_info_ad_network_type,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_targeting_criteria_boom_user_list_id) AS traffic_source_adwords_click_info_targeting_criteria_boom_user_list_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_is_video_ad = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_adwords_click_info_is_video_ad))::boolean END AS traffic_source_adwords_click_info_is_video_ad,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.traffic_source_is_true_direct = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_is_true_direct))::boolean END AS traffic_source_is_true_direct,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.traffic_source_campaign_code) AS traffic_source_campaign_code,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_browser) AS device_browser,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_browser_version) AS device_browser_version,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_browser_size) AS device_browser_size,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_operating_system) AS device_operating_system,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_operating_system_version) AS device_operating_system_version,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.device_is_mobile = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.device_is_mobile))::boolean END AS device_is_mobile,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_branding) AS device_mobile_device_branding,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_model) AS device_mobile_device_model,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_mobile_input_selector) AS device_mobile_input_selector,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_info) AS device_mobile_device_info,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_mobile_device_marketing_name) AS device_mobile_device_marketing_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_flash_version) AS device_flash_version,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.device_java_enabled = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.device_java_enabled))::boolean END AS device_java_enabled,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_language) AS device_language,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_screen_colors) AS device_screen_colors,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_screen_resolution) AS device_screen_resolution,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.device_device_category) AS device_device_category,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_continent) AS geonetwork_continent,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_subcontinent) AS geonetwork_subcontinent,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_country) AS geonetwork_country,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_region) AS geonetwork_region,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_metro) AS geonetwork_metro,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_city) AS geonetwork_city,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_city_id) AS geonetwork_city_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_network_domain) AS geonetwork_network_domain,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_latitude) AS geonetwork_latitude,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_longitude) AS geonetwork_longitude,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.geonetwork_network_location) AS geonetwork_network_location,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.custom_dimensions_index = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.custom_dimensions_index))::int END AS custom_dimensions_index,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.custom_dimensions_value) AS custom_dimensions_value,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_hit_number = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_hit_number))::int END AS hits_hit_number,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_time))::int END AS hits_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_hour = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_hour))::int END AS hits_hour,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_minute = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_minute))::int END AS hits_minute,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_is_secure = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_is_secure))::boolean END AS hits_is_secure,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_is_interaction = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_is_interaction))::boolean END AS hits_is_interaction,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_is_entrance = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_is_entrance))::boolean END AS hits_is_entrance,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_is_exit = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_is_exit))::boolean END AS hits_is_exit,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_referer) AS hits_referer,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path) AS hits_page_page_path,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_host_name) AS hits_page_host_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_title) AS hits_page_page_title,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_search_keyword) AS hits_page_search_keyword,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_search_category) AS hits_page_search_category,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_one) AS hits_page_page_path_level_one,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_two) AS hits_page_page_path_level_two,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_three) AS hits_page_page_path_level_three,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_page_page_path_level_four) AS hits_page_page_path_level_four,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_id) AS hits_transaction_transaction_id,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_revenue))::numeric(18,4) END AS hits_transaction_transaction_revenue,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_tax = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_tax))::numeric(18,4) END AS hits_transaction_transaction_tax,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_shipping = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_shipping))::numeric(18,4) END AS hits_transaction_transaction_shipping,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_affiliation) AS hits_transaction_affiliation,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_currency_code) AS hits_transaction_currency_code,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_revenue))::numeric(18,4) END AS hits_transaction_local_transaction_revenue,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_tax = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_tax))::numeric(18,4) END AS hits_transaction_local_transaction_tax,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_shipping = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_local_transaction_shipping))::numeric(18,4) END AS hits_transaction_local_transaction_shipping,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_transaction_transaction_coupon) AS hits_transaction_transaction_coupon,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_transaction_id) AS hits_item_transaction_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_product_name) AS hits_item_product_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_product_category) AS hits_item_product_category,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_product_sku) AS hits_item_product_sku,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_item_item_quantity = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_item_quantity))::int END AS hits_item_item_quantity,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_item_item_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_item_revenue))::numeric(18,4) END AS hits_item_item_revenue,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_currency_code) AS hits_item_currency_code,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_item_local_item_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_item_local_item_revenue))::numeric(18,4) END AS hits_item_local_item_revenue,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_info_content_description) AS hits_content_info_content_description,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_name) AS hits_app_info_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_version) AS hits_app_info_version,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_id) AS hits_app_info_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_installer_id) AS hits_app_info_installer_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_installer_id) AS hits_app_info_app_installer_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_name) AS hits_app_info_app_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_version) AS hits_app_info_app_version,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_app_id) AS hits_app_info_app_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_screen_name) AS hits_app_info_screen_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_landing_screen_name) AS hits_app_info_landing_screen_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_exit_screen_name) AS hits_app_info_exit_screen_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_app_info_screen_depth) AS hits_app_info_screen_depth,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_description) AS hits_exception_info_description,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_is_fatal = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_is_fatal))::boolean END AS hits_exception_info_is_fatal,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_exceptions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_exceptions))::int END AS hits_exception_info_exceptions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_fatal_exceptions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_exception_info_fatal_exceptions))::int END AS hits_exception_info_fatal_exceptions,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_category) AS hits_event_info_event_category,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_action) AS hits_event_info_event_action,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_label) AS hits_event_info_event_label,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_value = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_event_info_event_value))::int END AS hits_event_info_event_value,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_sku) AS hits_product_product_sku,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_v_two_product_name) AS hits_product_v_two_product_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_v_two_product_category) AS hits_product_v_two_product_category,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_variant) AS hits_product_product_variant,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_brand) AS hits_product_product_brand,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_revenue))::numeric(18,4) END AS hits_product_product_revenue,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_revenue))::numeric(18,4) END AS hits_product_local_product_revenue,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_price = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_price))::numeric(18,4) END AS hits_product_product_price,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_price = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_price))::numeric(18,4) END AS hits_product_local_product_price,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_quantity = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_quantity))::int END AS hits_product_product_quantity,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_refund_amount = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_refund_amount))::numeric(18,4) END AS hits_product_product_refund_amount,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_refund_amount = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_local_product_refund_amount))::numeric(18,4) END AS hits_product_local_product_refund_amount,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_is_impression = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_is_impression))::boolean END AS hits_product_is_impression,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_is_click = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_is_click))::boolean END AS hits_product_is_click,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_list_name) AS hits_product_product_list_name,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_list_position = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_product_product_list_position))::int END AS hits_product_product_list_position,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_id) AS hits_promotion_promo_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_name) AS hits_promotion_promo_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_creative) AS hits_promotion_promo_creative,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_promo_position) AS hits_promotion_promo_position,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_action_info_promo_is_view = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_action_info_promo_is_view))::boolean END AS hits_promotion_action_info_promo_is_view,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_action_info_promo_is_click = ''::varchar) THEN NULL::boolean ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_promotion_action_info_promo_is_click))::boolean END AS hits_promotion_action_info_promo_is_click,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_refund_refund_amount = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_refund_refund_amount))::numeric(18,4) END AS hits_refund_refund_amount,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_refund_local_refund_amount = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_refund_local_refund_amount))::numeric(18,4) END AS hits_refund_local_refund_amount,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_ecommerce_action_action_type) AS hits_ecommerce_action_action_type,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_ecommerce_action_step = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_ecommerce_action_step))::int END AS hits_ecommerce_action_step,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_ecommerce_action_option) AS hits_ecommerce_action_option,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_experiment_experiment_id) AS hits_experiment_experiment_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_experiment_experiment_variant) AS hits_experiment_experiment_variant,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_clicks = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_clicks))::int END AS hits_publisher_dfp_clicks,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_impressions))::int END AS hits_publisher_dfp_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_matched_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_matched_queries))::int END AS hits_publisher_dfp_matched_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_measurable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_measurable_impressions))::int END AS hits_publisher_dfp_measurable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_queries))::int END AS hits_publisher_dfp_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_revenue_cpm = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_revenue_cpm))::int END AS hits_publisher_dfp_revenue_cpm,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_revenue_cpc = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_revenue_cpc))::int END AS hits_publisher_dfp_revenue_cpc,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_viewable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_viewable_impressions))::int END AS hits_publisher_dfp_viewable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_pages_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_pages_viewed))::int END AS hits_publisher_dfp_pages_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_clicks = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_clicks))::int END AS hits_publisher_ad_sense_backfill_dfp_clicks,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_impressions))::int END AS hits_publisher_ad_sense_backfill_dfp_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_matched_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_matched_queries))::int END AS hits_publisher_ad_sense_backfill_dfp_matched_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_measurable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_measurable_impressions))::int END AS hits_publisher_ad_sense_backfill_dfp_measurable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_queries))::int END AS hits_publisher_ad_sense_backfill_dfp_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_revenue_cpm = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_revenue_cpm))::int END AS hits_publisher_ad_sense_backfill_dfp_revenue_cpm,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_revenue_cpc = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_revenue_cpc))::int END AS hits_publisher_ad_sense_backfill_dfp_revenue_cpc,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_viewable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_viewable_impressions))::int END AS hits_publisher_ad_sense_backfill_dfp_viewable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_pages_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ad_sense_backfill_dfp_pages_viewed))::int END AS hits_publisher_ad_sense_backfill_dfp_pages_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_clicks = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_clicks))::int END AS hits_publisher_adx_backfill_dfp_clicks,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_impressions))::int END AS hits_publisher_adx_backfill_dfp_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_matched_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_matched_queries))::int END AS hits_publisher_adx_backfill_dfp_matched_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_measurable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_measurable_impressions))::int END AS hits_publisher_adx_backfill_dfp_measurable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_queries))::int END AS hits_publisher_adx_backfill_dfp_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_revenue_cpm = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_revenue_cpm))::int END AS hits_publisher_adx_backfill_dfp_revenue_cpm,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_revenue_cpc = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_revenue_cpc))::int END AS hits_publisher_adx_backfill_dfp_revenue_cpc,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_viewable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_viewable_impressions))::int END AS hits_publisher_adx_backfill_dfp_viewable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_pages_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_backfill_dfp_pages_viewed))::int END AS hits_publisher_adx_backfill_dfp_pages_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_clicks = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_clicks))::int END AS hits_publisher_adx_clicks,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_impressions))::int END AS hits_publisher_adx_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_matched_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_matched_queries))::int END AS hits_publisher_adx_matched_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_measurable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_measurable_impressions))::int END AS hits_publisher_adx_measurable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_queries = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_queries))::int END AS hits_publisher_adx_queries,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_revenue))::numeric(18,4) END AS hits_publisher_adx_revenue,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_viewable_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_viewable_impressions))::int END AS hits_publisher_adx_viewable_impressions,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_pages_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_adx_pages_viewed))::int END AS hits_publisher_adx_pages_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_viewed))::int END AS hits_publisher_ads_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_units_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_units_viewed))::int END AS hits_publisher_ads_units_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_units_matched = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_units_matched))::int END AS hits_publisher_ads_units_matched,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_viewable_ads_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_viewable_ads_viewed))::int END AS hits_publisher_viewable_ads_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_measurable_ads_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_measurable_ads_viewed))::int END AS hits_publisher_measurable_ads_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_pages_viewed = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_pages_viewed))::int END AS hits_publisher_ads_pages_viewed,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_clicked = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_clicked))::int END AS hits_publisher_ads_clicked,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_revenue = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_ads_revenue))::numeric(18,4) END AS hits_publisher_ads_revenue,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_ad_group) AS hits_publisher_dfp_ad_group,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_ad_units) AS hits_publisher_dfp_ad_units,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_publisher_dfp_network_id) AS hits_publisher_dfp_network_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_custom_variables_index) AS hits_custom_variables_index,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_custom_variables_custom_var_name) AS hits_custom_variables_custom_var_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_custom_variables_custom_var_value) AS hits_custom_variables_custom_var_value,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_custom_dimensions_index = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_custom_dimensions_index))::int END AS hits_custom_dimensions_index,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_custom_dimensions_value) AS hits_custom_dimensions_value,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_custom_metrics_index = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_custom_metrics_index))::int END AS hits_custom_metrics_index,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_custom_metrics_value) AS hits_custom_metrics_value,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_type) AS hits_type,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_network) AS hits_social_social_interaction_network,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_action) AS hits_social_social_interaction_action,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interactions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interactions))::int END AS hits_social_social_interactions,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_target) AS hits_social_social_interaction_target,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_network) AS hits_social_social_network,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_social_unique_social_interactions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_unique_social_interactions))::int END AS hits_social_unique_social_interactions,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_has_social_source_referral) AS hits_social_has_social_source_referral,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_social_social_interaction_network_action) AS hits_social_social_interaction_network_action,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pageload_sample = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pageload_sample))::int END AS hits_latency_tracking_pageload_sample,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pageload_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pageload_time))::int END AS hits_latency_tracking_pageload_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pagedown_load_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_pagedown_load_time))::int END AS hits_latency_tracking_pagedown_load_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_redirection_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_redirection_time))::int END AS hits_latency_tracking_redirection_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_speed_metrics_sample = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_speed_metrics_sample))::int END AS hits_latency_tracking_speed_metrics_sample,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_domain_lookup_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_domain_lookup_time))::int END AS hits_latency_tracking_domain_lookup_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_server_connection_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_server_connection_time))::int END AS hits_latency_tracking_server_connection_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_server_response_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_server_response_time))::int END AS hits_latency_tracking_server_response_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_latency_metric_ssample = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_latency_metric_ssample))::int END AS hits_latency_tracking_dom_latency_metric_ssample,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_interactive_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_interactive_time))::int END AS hits_latency_tracking_dom_interactive_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_content_loaded_time = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_dom_content_loaded_time))::int END AS hits_latency_tracking_dom_content_loaded_time,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_value = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_value))::int END AS hits_latency_tracking_user_timing_value,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_sample = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_sample))::int END AS hits_latency_tracking_user_timing_sample,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_variable) AS hits_latency_tracking_user_timing_variable,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_category) AS hits_latency_tracking_user_timing_category,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_latency_tracking_user_timing_label) AS hits_latency_tracking_user_timing_label,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_source_propertyinfo_source_property_display_name) AS hits_source_propertyinfo_source_property_display_name,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_source_propertyinfo_source_property_tracking_id) AS hits_source_propertyinfo_source_property_tracking_id,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_one) AS hits_content_group_content_group_one,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_two) AS hits_content_group_content_group_two,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_three) AS hits_content_group_content_group_three,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_four) AS hits_content_group_content_group_four,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_five) AS hits_content_group_content_group_five,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_one) AS hits_content_group_previous_content_group_one,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_two) AS hits_content_group_previous_content_group_two,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_three) AS hits_content_group_previous_content_group_three,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_four) AS hits_content_group_previous_content_group_four,
        btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_previous_content_group_five) AS hits_content_group_previous_content_group_five,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_one = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_one))::int END AS hits_content_group_content_group_unique_views_one,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_two = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_two))::int END AS hits_content_group_content_group_unique_views_two,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_three = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_three))::int END AS hits_content_group_content_group_unique_views_three,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_four = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_four))::int END AS hits_content_group_content_group_unique_views_four,
        CASE WHEN (EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_five = ''::varchar) THEN NULL::int ELSE (btrim(EXT_GOOGLE_ANALYTICS_360_src.hits_content_group_content_group_unique_views_five))::int END AS hits_content_group_content_group_unique_views_five,
        EXT_GOOGLE_ANALYTICS_360_src.batch_id,
        EXT_GOOGLE_ANALYTICS_360_src.row_id,
        EXT_GOOGLE_ANALYTICS_360_src.update_ts
 FROM teva_ingestion.EXT_GOOGLE_ANALYTICS_360_src;

CREATE  VIEW teva_ingestion.EXT_INNOVID_DELIVERY AS
 SELECT CASE WHEN (EXT_INNOVID_DELIVERY_src.date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_INNOVID_DELIVERY_src.date))::date END AS date,
        btrim(EXT_INNOVID_DELIVERY_src.advertiser_name) AS advertiser_name,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.advertiser_id = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.advertiser_id))::numeric(37,15) END AS advertiser_id,
        btrim(EXT_INNOVID_DELIVERY_src.campaign_name) AS campaign_name,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.campaign_id = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.campaign_id))::numeric(37,15) END AS campaign_id,
        btrim(EXT_INNOVID_DELIVERY_src.publisher) AS publisher,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.publisher_id = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.publisher_id))::numeric(37,15) END AS publisher_id,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.video_id = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.video_id))::numeric(37,15) END AS video_id,
        btrim(EXT_INNOVID_DELIVERY_src.video_name) AS video_name,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.duration = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.duration))::numeric(37,15) END AS duration,
        btrim(EXT_INNOVID_DELIVERY_src.placement_name) AS placement_name,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.impressions = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.impressions))::numeric(37,15) END AS impressions,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.click_thrus = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.click_thrus))::numeric(37,15) END AS click_thrus,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.awareness = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.awareness))::numeric(37,15) END AS awareness,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.engagement_events = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.engagement_events))::numeric(37,15) END AS engagement_events,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.twenty_five_percent_completion = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.twenty_five_percent_completion))::numeric(37,15) END AS twenty_five_percent_completion,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.fifty_percent_completion = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.fifty_percent_completion))::numeric(37,15) END AS fifty_percent_completion,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.seventy_five_percent_completion = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.seventy_five_percent_completion))::numeric(37,15) END AS seventy_five_percent_completion,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.hundred_perent_completion = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.hundred_perent_completion))::numeric(37,15) END AS hundred_perent_completion,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.companion_impressions = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.companion_impressions))::numeric(37,15) END AS companion_impressions,
        CASE WHEN (EXT_INNOVID_DELIVERY_src.companion_clicks = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INNOVID_DELIVERY_src.companion_clicks))::numeric(37,15) END AS companion_clicks,
        EXT_INNOVID_DELIVERY_src.batch_id,
        EXT_INNOVID_DELIVERY_src.row_id,
        EXT_INNOVID_DELIVERY_src.update_ts
 FROM teva_ingestion.EXT_INNOVID_DELIVERY_src;

CREATE  VIEW teva_ingestion.EXT_INNOVID_VIEWABILITY AS
 SELECT CASE WHEN (EXT_INNOVID_VIEWABILITY_src.date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.date))::date END AS date,
        btrim(EXT_INNOVID_VIEWABILITY_src.advertiser_name) AS advertiser_name,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.advertiser_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.advertiser_id))::int END AS advertiser_id,
        btrim(EXT_INNOVID_VIEWABILITY_src.campaign_name) AS campaign_name,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.campaign_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.campaign_id))::int END AS campaign_id,
        btrim(EXT_INNOVID_VIEWABILITY_src.publisher) AS publisher,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.publisher_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.publisher_id))::int END AS publisher_id,
        btrim(EXT_INNOVID_VIEWABILITY_src.format_type) AS format_type,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.video_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.video_id))::int END AS video_id,
        btrim(EXT_INNOVID_VIEWABILITY_src.video_name) AS video_name,
        btrim(EXT_INNOVID_VIEWABILITY_src.placement_name) AS placement_name,
        btrim(EXT_INNOVID_VIEWABILITY_src.platform_name) AS platform_name,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.impressions))::int END AS impressions,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.click_thrus = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.click_thrus))::int END AS click_thrus,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.awareness = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.awareness))::int END AS awareness,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.engagement_events = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.engagement_events))::int END AS engagement_events,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.twenty_five_percent_completion = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.twenty_five_percent_completion))::int END AS twenty_five_percent_completion,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.fifty_percent_completion = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.fifty_percent_completion))::int END AS fifty_percent_completion,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.seventy_five_percent_completion = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.seventy_five_percent_completion))::int END AS seventy_five_percent_completion,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.hundred_perent_completion = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.hundred_perent_completion))::int END AS hundred_perent_completion,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.companion_impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.companion_impressions))::int END AS companion_impressions,
        CASE WHEN (EXT_INNOVID_VIEWABILITY_src.companion_clicks = ''::varchar) THEN NULL::int ELSE (btrim(EXT_INNOVID_VIEWABILITY_src.companion_clicks))::int END AS companion_clicks,
        EXT_INNOVID_VIEWABILITY_src.batch_id,
        EXT_INNOVID_VIEWABILITY_src.row_id,
        EXT_INNOVID_VIEWABILITY_src.update_ts
 FROM teva_ingestion.EXT_INNOVID_VIEWABILITY_src;

CREATE  VIEW teva_ingestion.EXT_INTEGRAL_AD_SCIENCE AS
 SELECT btrim(EXT_INTEGRAL_AD_SCIENCE_src.an_id) AS an_id,
        btrim(EXT_INTEGRAL_AD_SCIENCE_src.ext_advertiser_id) AS ext_advertiser_id,
        btrim(EXT_INTEGRAL_AD_SCIENCE_src.ext_campaign_id) AS ext_campaign_id,
        btrim(EXT_INTEGRAL_AD_SCIENCE_src.ext_placement_id) AS ext_placement_id,
        btrim(EXT_INTEGRAL_AD_SCIENCE_src.ext_publisher_id) AS ext_publisher_id,
        CASE WHEN (EXT_INTEGRAL_AD_SCIENCE_src.in_view_one_second = ''::varchar) THEN NULL::numeric(37,15) ELSE (btrim(EXT_INTEGRAL_AD_SCIENCE_src.in_view_one_second))::numeric(37,15) END AS in_view_one_second,
        btrim(EXT_INTEGRAL_AD_SCIENCE_src.in_viewability_sample) AS in_viewability_sample,
        EXT_INTEGRAL_AD_SCIENCE_src.batch_id,
        EXT_INTEGRAL_AD_SCIENCE_src.row_id,
        EXT_INTEGRAL_AD_SCIENCE_src.update_ts
 FROM teva_ingestion.EXT_INTEGRAL_AD_SCIENCE_src;

CREATE  VIEW teva_ingestion.EXT_YAHOO_GEMINI AS
 SELECT CASE WHEN (EXT_YAHOO_GEMINI_src.advertiser_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.advertiser_id))::int END AS advertiser_id,
        CASE WHEN (EXT_YAHOO_GEMINI_src.keyword_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.keyword_id))::int END AS keyword_id,
        CASE WHEN (EXT_YAHOO_GEMINI_src.day = ''::varchar) THEN NULL::date ELSE (btrim(EXT_YAHOO_GEMINI_src.day))::date END AS day,
        btrim(EXT_YAHOO_GEMINI_src.advertiser_name) AS advertiser_name,
        btrim(EXT_YAHOO_GEMINI_src.advertiser_timezone) AS advertiser_timezone,
        btrim(EXT_YAHOO_GEMINI_src.advertiser_currency) AS advertiser_currency,
        CASE WHEN (EXT_YAHOO_GEMINI_src.campaign_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.campaign_id))::int END AS campaign_id,
        btrim(EXT_YAHOO_GEMINI_src.campaign_name) AS campaign_name,
        CASE WHEN (EXT_YAHOO_GEMINI_src.campaign_start_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_YAHOO_GEMINI_src.campaign_start_date))::date END AS campaign_start_date,
        CASE WHEN (EXT_YAHOO_GEMINI_src.campaign_end_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_YAHOO_GEMINI_src.campaign_end_date))::date END AS campaign_end_date,
        btrim(EXT_YAHOO_GEMINI_src.campaign_status) AS campaign_status,
        btrim(EXT_YAHOO_GEMINI_src.campaign_objective) AS campaign_objective,
        btrim(EXT_YAHOO_GEMINI_src.budget) AS budget,
        btrim(EXT_YAHOO_GEMINI_src.budget_type) AS budget_type,
        CASE WHEN (EXT_YAHOO_GEMINI_src.ad_group_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.ad_group_id))::int END AS ad_group_id,
        CASE WHEN (EXT_YAHOO_GEMINI_src.ad_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.ad_id))::int END AS ad_id,
        btrim(EXT_YAHOO_GEMINI_src.keyword_value) AS keyword_value,
        btrim(EXT_YAHOO_GEMINI_src.keyword_status) AS keyword_status,
        btrim(EXT_YAHOO_GEMINI_src.keyword_match_type) AS keyword_match_type,
        CASE WHEN (EXT_YAHOO_GEMINI_src.impressions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.impressions))::int END AS impressions,
        CASE WHEN (EXT_YAHOO_GEMINI_src.clicks = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.clicks))::int END AS clicks,
        CASE WHEN (EXT_YAHOO_GEMINI_src.ctr = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_YAHOO_GEMINI_src.ctr))::numeric(18,4) END AS ctr,
        CASE WHEN (EXT_YAHOO_GEMINI_src.conversions = ''::varchar) THEN NULL::int ELSE (btrim(EXT_YAHOO_GEMINI_src.conversions))::int END AS conversions,
        CASE WHEN (EXT_YAHOO_GEMINI_src.spend = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_YAHOO_GEMINI_src.spend))::numeric(18,4) END AS spend,
        CASE WHEN (EXT_YAHOO_GEMINI_src.average_cpc = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_YAHOO_GEMINI_src.average_cpc))::numeric(18,4) END AS average_cpc,
        CASE WHEN (EXT_YAHOO_GEMINI_src.average_cost_per_install = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_YAHOO_GEMINI_src.average_cost_per_install))::numeric(18,4) END AS average_cost_per_install,
        CASE WHEN (EXT_YAHOO_GEMINI_src.average_cpm = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_YAHOO_GEMINI_src.average_cpm))::numeric(18,4) END AS average_cpm,
        btrim(EXT_YAHOO_GEMINI_src.pricing_type) AS pricing_type,
        btrim(EXT_YAHOO_GEMINI_src.source) AS source,
        btrim(EXT_YAHOO_GEMINI_src.average_position) AS average_position,
        CASE WHEN (EXT_YAHOO_GEMINI_src.max_bid = ''::varchar) THEN NULL::numeric(18,4) ELSE (btrim(EXT_YAHOO_GEMINI_src.max_bid))::numeric(18,4) END AS max_bid,
        EXT_YAHOO_GEMINI_src.batch_id,
        EXT_YAHOO_GEMINI_src.row_id,
        EXT_YAHOO_GEMINI_src.update_ts
 FROM teva_ingestion.EXT_YAHOO_GEMINI_src;

CREATE  VIEW teva_ingestion.cdw_license_audits AS
 SELECT license_audits.database_size_bytes,
        license_audits.license_size_bytes,
        license_audits.usage_percent,
        license_audits.audit_start_timestamp,
        license_audits.audit_end_timestamp,
        license_audits.confidence_level_percent,
        license_audits.error_tolerance_percent,
        license_audits.used_sampling,
        license_audits.confidence_interval_lower_bound_bytes,
        license_audits.confidence_interval_upper_bound_bytes,
        license_audits.sample_count,
        license_audits.cell_count,
        license_audits.audited_data
 FROM v_catalog.license_audits;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_FACT_V2 AS
 SELECT CASE WHEN (EXT_IMS_FIA_FACT_V2_src.claim_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.claim_id))::int END AS claim_id,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.patient_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.patient_id))::int END AS patient_id,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.sequence_number = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.sequence_number))::int END AS sequence_number,
        btrim(EXT_IMS_FIA_FACT_V2_src.product_id) AS product_id,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.fill_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.fill_date))::date END AS fill_date,
        btrim(EXT_IMS_FIA_FACT_V2_src.claim_type) AS claim_type,
        btrim(EXT_IMS_FIA_FACT_V2_src.reject_code) AS reject_code,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.days_supply = ''::varchar) THEN NULL::numeric(10,6) ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.days_supply))::numeric(10,6) END AS days_supply,
        btrim(EXT_IMS_FIA_FACT_V2_src.quantity) AS quantity,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.refill_code = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.refill_code))::int END AS refill_code,
        btrim(EXT_IMS_FIA_FACT_V2_src.plantrak_id) AS plantrak_id,
        btrim(EXT_IMS_FIA_FACT_V2_src.opc_ask) AS opc_ask,
        btrim(EXT_IMS_FIA_FACT_V2_src.sec_plantrak_id) AS sec_plantrak_id,
        btrim(EXT_IMS_FIA_FACT_V2_src.buy_down) AS buy_down,
        btrim(EXT_IMS_FIA_FACT_V2_src.opc_paid) AS opc_paid,
        btrim(EXT_IMS_FIA_FACT_V2_src.prescriber_id) AS prescriber_id,
        btrim(EXT_IMS_FIA_FACT_V2_src.sob) AS sob,
        btrim(EXT_IMS_FIA_FACT_V2_src.sub_product_id) AS sub_product_id,
        btrim(EXT_IMS_FIA_FACT_V2_src.sub_opc) AS sub_opc,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.initial_claim_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.initial_claim_id))::int END AS initial_claim_id,
        btrim(EXT_IMS_FIA_FACT_V2_src.prev_product_id) AS prev_product_id,
        btrim(EXT_IMS_FIA_FACT_V2_src.daw_code) AS daw_code,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.wrt_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.wrt_date))::date END AS wrt_date,
        btrim(EXT_IMS_FIA_FACT_V2_src.claim_status) AS claim_status,
        btrim(EXT_IMS_FIA_FACT_V2_src.copay_card_flg) AS copay_card_flg,
        btrim(EXT_IMS_FIA_FACT_V2_src.zip_code) AS zip_code,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.ecoup_flag = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.ecoup_flag))::int END AS ecoup_flag,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.ecoup_offset_amt = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.ecoup_offset_amt))::numeric(10,2) END AS ecoup_offset_amt,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.standard_copay = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.standard_copay))::numeric(10,2) END AS standard_copay,
        btrim(EXT_IMS_FIA_FACT_V2_src.standard_copay_yn) AS standard_copay_yn,
        CASE WHEN (EXT_IMS_FIA_FACT_V2_src.market_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_FACT_V2_src.market_id))::int END AS market_id,
        btrim(EXT_IMS_FIA_FACT_V2_src.flexible_fld_1_char) AS flexible_fld_1_char,
        btrim(EXT_IMS_FIA_FACT_V2_src.flexible_fld_2_char) AS flexible_fld_2_char,
        btrim(EXT_IMS_FIA_FACT_V2_src.flexible_fld_3_char) AS flexible_fld_3_char,
        btrim(EXT_IMS_FIA_FACT_V2_src.flexible_fld_4_char) AS flexible_fld_4_char,
        EXT_IMS_FIA_FACT_V2_src.batch_id,
        EXT_IMS_FIA_FACT_V2_src.row_id,
        EXT_IMS_FIA_FACT_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_FACT_V2_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_V2 AS
 SELECT btrim(EXT_IMS_FIA_GEOGRAPHY_V2_src.zip_code) AS zip_code,
        btrim(EXT_IMS_FIA_GEOGRAPHY_V2_src.cbsa_code) AS cbsa_code,
        btrim(EXT_IMS_FIA_GEOGRAPHY_V2_src.cbsa_description) AS cbsa_description,
        btrim(EXT_IMS_FIA_GEOGRAPHY_V2_src.state_code) AS state_code,
        btrim(EXT_IMS_FIA_GEOGRAPHY_V2_src.flexible_fld_1_char) AS flexible_fld_1_char,
        btrim(EXT_IMS_FIA_GEOGRAPHY_V2_src.flexible_fld_2_char) AS flexible_fld_2_char,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.batch_id,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.row_id,
        EXT_IMS_FIA_GEOGRAPHY_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_GEOGRAPHY_V2_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_PLAN_V2 AS
 SELECT btrim(EXT_IMS_FIA_PLAN_V2_src.plantrak_id) AS plantrak_id,
        btrim(EXT_IMS_FIA_PLAN_V2_src.payer_name) AS payer_name,
        btrim(EXT_IMS_FIA_PLAN_V2_src.plan_name) AS plan_name,
        btrim(EXT_IMS_FIA_PLAN_V2_src.pbm_name) AS pbm_name,
        btrim(EXT_IMS_FIA_PLAN_V2_src.pbm_id) AS pbm_id,
        btrim(EXT_IMS_FIA_PLAN_V2_src.method_of_payment) AS method_of_payment,
        btrim(EXT_IMS_FIA_PLAN_V2_src.model_type) AS model_type,
        btrim(EXT_IMS_FIA_PLAN_V2_src.flexible_fld_1_char) AS flexible_fld_1_char,
        btrim(EXT_IMS_FIA_PLAN_V2_src.flexible_fld_2_char) AS flexible_fld_2_char,
        EXT_IMS_FIA_PLAN_V2_src.batch_id,
        EXT_IMS_FIA_PLAN_V2_src.row_id,
        EXT_IMS_FIA_PLAN_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PLAN_V2_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_PRODUCT_V2 AS
 SELECT btrim(EXT_IMS_FIA_PRODUCT_V2_src.product_id) AS product_id,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.product_group) AS product_group,
        CASE WHEN (EXT_IMS_FIA_PRODUCT_V2_src.product_group_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_PRODUCT_V2_src.product_group_id))::int END AS product_group_id,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.product_name) AS product_name,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.generic_name) AS generic_name,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.brand_generic_flag) AS brand_generic_flag,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.product_form) AS product_form,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.product_strength) AS product_strength,
        CASE WHEN (EXT_IMS_FIA_PRODUCT_V2_src.package_size = ''::varchar) THEN NULL::numeric(10,2) ELSE (btrim(EXT_IMS_FIA_PRODUCT_V2_src.package_size))::numeric(10,2) END AS package_size,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.manufacturer) AS manufacturer,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.cmf10) AS cmf10,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.usc_code) AS usc_code,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.fia_market_id) AS fia_market_id,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.fia_market_desc) AS fia_market_desc,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_1_char) AS flexible_fld_1_char,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_2_char) AS flexible_fld_2_char,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_3_char) AS flexible_fld_3_char,
        btrim(EXT_IMS_FIA_PRODUCT_V2_src.flexible_fld_4_char) AS flexible_fld_4_char,
        EXT_IMS_FIA_PRODUCT_V2_src.batch_id,
        EXT_IMS_FIA_PRODUCT_V2_src.row_id,
        EXT_IMS_FIA_PRODUCT_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_PRODUCT_V2_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_REJECT_V2 AS
 SELECT btrim(EXT_IMS_FIA_REJECT_V2_src.reject_code) AS reject_code,
        btrim(EXT_IMS_FIA_REJECT_V2_src.reject_reason) AS reject_reason,
        btrim(EXT_IMS_FIA_REJECT_V2_src.reject_group) AS reject_group,
        btrim(EXT_IMS_FIA_REJECT_V2_src.flexible_fld_1_char) AS flexible_fld_1_char,
        btrim(EXT_IMS_FIA_REJECT_V2_src.flexible_fld_2_char) AS flexible_fld_2_char,
        EXT_IMS_FIA_REJECT_V2_src.batch_id,
        EXT_IMS_FIA_REJECT_V2_src.row_id,
        EXT_IMS_FIA_REJECT_V2_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_REJECT_V2_src;

CREATE  VIEW teva_ingestion.EXT_CONNECTIVERX_COUPON_V2 AS
 SELECT btrim(EXT_CONNECTIVERX_COUPON_V2_src.redemption_type) AS redemption_type,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.transaction_type) AS transaction_type,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.claim_authorization_number) AS claim_authorization_number,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.original_claim_authorization_number) AS original_claim_authorization_number,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.date_of_fill) AS date_of_fill,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.date_written) AS date_written,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.day_supply) AS day_supply,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.ndc) AS ndc,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.daw) AS daw,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.drug_title) AS drug_title,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.drug_strength_and_form) AS drug_strength_and_form,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.new_refill_code) AS new_refill_code,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.quantity) AS quantity,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.number_of_refills) AS number_of_refills,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.other_coverage_code) AS other_coverage_code,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.group_num) AS group_num,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.member_id) AS member_id,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.patient_gender) AS patient_gender,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.age) AS age,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.date_processed) AS date_processed,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.nabp) AS nabp,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_chain) AS pharmacy_chain,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_npi) AS pharmacy_npi,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.rx_num) AS rx_num,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_name) AS pharmacy_name,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_address_1) AS pharmacy_address_1,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_address_2) AS pharmacy_address_2,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_city) AS pharmacy_city,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_state) AS pharmacy_state,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_zip) AS pharmacy_zip,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_phone) AS pharmacy_phone,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_npi) AS hcp_npi,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_first_name) AS hcp_first_name,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_middle_name) AS hcp_middle_name,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_last_name) AS hcp_last_name,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_suffix) AS hcp_suffix,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_designation) AS hcp_designation,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_specialty_1) AS hcp_specialty_1,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_specialty_2) AS hcp_specialty_2,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_address_1) AS hcp_address_1,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_address_2) AS hcp_address_2,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_city) AS hcp_city,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_state) AS hcp_state,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.hcp_zip) AS hcp_zip,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.submission_method) AS submission_method,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.previous_payer_id) AS previous_payer_id,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.patient_expense) AS patient_expense,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.patient_benefit) AS patient_benefit,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.patient_copay) AS patient_copay,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.patient_oop) AS patient_oop,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.pharmacy_fee) AS pharmacy_fee,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.amount_due) AS amount_due,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.create_date) AS create_date,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.occ_payment_type) AS occ_payment_type,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.calc_awp) AS calc_awp,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_npi) AS admin_hcp_npi,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_name) AS admin_hcp_name,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_address) AS admin_hcp_address,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_address2) AS admin_hcp_address2,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_city) AS admin_hcp_city,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_state) AS admin_hcp_state,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.admin_hcp_zip) AS admin_hcp_zip,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.claim_type) AS claim_type,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.administration_flag) AS administration_flag,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_name) AS soc_name,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_phone) AS soc_phone,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_fax) AS soc_fax,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_address) AS soc_address,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_city) AS soc_city,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_state) AS soc_state,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_zip) AS soc_zip,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_id) AS soc_id,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.soc_npi) AS soc_npi,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.payer_name) AS payer_name,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.cpt_code) AS cpt_code,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.patient_type) AS patient_type,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.primary_bin) AS primary_bin,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.primary_bin_description) AS primary_bin_description,
        btrim(EXT_CONNECTIVERX_COUPON_V2_src.reject_code) AS reject_code,
        EXT_CONNECTIVERX_COUPON_V2_src.batch_id,
        EXT_CONNECTIVERX_COUPON_V2_src.row_id,
        EXT_CONNECTIVERX_COUPON_V2_src.update_ts
 FROM teva_ingestion.EXT_CONNECTIVERX_COUPON_V2_src;

CREATE  VIEW teva_ingestion.EXT_REFERENCE_INCLUDE_DDD_SUBCAT AS
 SELECT btrim(EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.subcategory_code) AS subcategory_code,
        EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.batch_id,
        EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.row_id,
        EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src.update_ts
 FROM teva_ingestion.EXT_REFERENCE_INCLUDE_DDD_SUBCAT_src;

CREATE  VIEW teva_ingestion.EXT_REFERENCE_INCLUDE_867_COT AS
 SELECT btrim(EXT_REFERENCE_INCLUDE_867_COT_src.class_of_trade) AS class_of_trade,
        EXT_REFERENCE_INCLUDE_867_COT_src.batch_id,
        EXT_REFERENCE_INCLUDE_867_COT_src.row_id,
        EXT_REFERENCE_INCLUDE_867_COT_src.update_ts
 FROM teva_ingestion.EXT_REFERENCE_INCLUDE_867_COT_src;

CREATE  VIEW teva_ingestion.EXT_REFERENCE_COPAY_VOUCHER_PROGRAM AS
 SELECT btrim(EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.redemption_type) AS redemption_type,
        btrim(EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.program_number) AS program_number,
        btrim(EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.program_description) AS program_description,
        btrim(EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.create_date) AS create_date,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.batch_id,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.row_id,
        EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src.update_ts
 FROM teva_ingestion.EXT_REFERENCE_COPAY_VOUCHER_PROGRAM_src;

CREATE  VIEW teva_ingestion.EXT_IMS_FIA_MPD AS
 SELECT CASE WHEN (EXT_IMS_FIA_MPD_src.patient_id = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_MPD_src.patient_id))::int END AS patient_id,
        CASE WHEN (EXT_IMS_FIA_MPD_src.mpd_year = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_MPD_src.mpd_year))::int END AS mpd_year,
        btrim(EXT_IMS_FIA_MPD_src.mpd_eligibility_class) AS mpd_eligibility_class,
        CASE WHEN (EXT_IMS_FIA_MPD_src.deductible_start_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_MPD_src.deductible_start_date))::date END AS deductible_start_date,
        CASE WHEN (EXT_IMS_FIA_MPD_src.copay_start_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_MPD_src.copay_start_date))::date END AS copay_start_date,
        CASE WHEN (EXT_IMS_FIA_MPD_src.gap_start_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_MPD_src.gap_start_date))::date END AS gap_start_date,
        CASE WHEN (EXT_IMS_FIA_MPD_src.catastrophic_start_date = ''::varchar) THEN NULL::date ELSE (btrim(EXT_IMS_FIA_MPD_src.catastrophic_start_date))::date END AS catastrophic_start_date,
        CASE WHEN (EXT_IMS_FIA_MPD_src.mpd_panel_patient = ''::varchar) THEN NULL::int ELSE (btrim(EXT_IMS_FIA_MPD_src.mpd_panel_patient))::int END AS mpd_panel_patient,
        btrim(EXT_IMS_FIA_MPD_src.flexible_fld_1_char) AS flexible_fld_1_char,
        btrim(EXT_IMS_FIA_MPD_src.flexible_fld_2_char) AS flexible_fld_2_char,
        EXT_IMS_FIA_MPD_src.batch_id,
        EXT_IMS_FIA_MPD_src.row_id,
        EXT_IMS_FIA_MPD_src.update_ts
 FROM teva_ingestion.EXT_IMS_FIA_MPD_src;

CREATE  VIEW teva_ingestion.EXT_VV_REMOTE_MEETING_VOD__C AS
 SELECT btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Id) AS Id,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.OwnerId) AS OwnerId,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Name) AS Name,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.RecordTypeId) AS RecordTypeId,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.CreatedDate) AS CreatedDate,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.CreatedById) AS CreatedById,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.LastModifiedDate) AS LastModifiedDate,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.LastModifiedById) AS LastModifiedById,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.SystemModstamp) AS SystemModstamp,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.MayEdit) AS MayEdit,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.IsLocked) AS IsLocked,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Id_vod__c) AS Meeting_Id_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Name_vod__c) AS Meeting_Name_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Mobile_ID_vod__c) AS Mobile_ID_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Scheduled_DateTime_vod__c) AS Scheduled_DateTime_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Scheduled_vod__c) AS Scheduled_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Attendance_Report_Process_Status_vod__c) AS Attendance_Report_Process_Status_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Latest_Meeting_Start_Datetime_vod__c) AS Latest_Meeting_Start_Datetime_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Password_vod__c) AS Meeting_Password_vod__c,
        btrim(EXT_VV_REMOTE_MEETING_VOD__C_src.Meeting_Outcome_Status_vod__c) AS Meeting_Outcome_Status_vod__c,
        EXT_VV_REMOTE_MEETING_VOD__C_src.batch_id,
        EXT_VV_REMOTE_MEETING_VOD__C_src.row_id,
        EXT_VV_REMOTE_MEETING_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_REMOTE_MEETING_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_VV_EMAIL_ACTIVITY_VOD__C AS
 SELECT btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Id) AS ID,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.CreatedDate) AS CreatedDate,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.CreatedById) AS CreatedById,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.LastModifiedDate) AS LastModifiedDate,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.LastModifiedById) AS LastModifiedById,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.RecordTypeId) AS RecordTypeId,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.SystemModstamp) AS SystemModstamp,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Name) AS Name,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Event_type_vod__c) AS Event_type_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Activity_DateTime_vod__c) AS Activity_DateTime_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Event_Msg_vod__c) AS Event_Msg_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Approved_Document_vod__c) AS Approved_Document_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.City_vod__c) AS City_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Click_URL_vod__c) AS Click_URL_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Client_Name_vod__c) AS Client_Name_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Client_OS_vod__c) AS Client_OS_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Client_Type_vod__c) AS Client_Type_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Country_vod__c) AS Country_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Device_Type_vod__c) AS Device_Type_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Doc_ID_vod__c) AS Vault_Doc_ID_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Doc_Name_vod__c) AS Vault_Doc_Name_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Number_vod__c) AS Vault_Document_Number_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Title_vod__c) AS Vault_Document_Title_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.IP_Address_vod__c) AS IP_Address_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Link_Name_vod__c) AS Link_Name_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Major_Version_vod__c) AS Vault_Document_Major_Version_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Document_Minor_Version_vod__c) AS Vault_Document_Minor_Version_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Preference_Modification_vod__c) AS Preference_Modification_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Region_vod__c) AS Region_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Sent_Email_vod__c) AS Sent_Email_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.User_Agent_vod__c) AS User_Agent_vod__c,
        btrim(EXT_VV_EMAIL_ACTIVITY_VOD__C_src.Vault_Instance_ID_vod__c) AS Vault_Instance_ID_vod__c,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.batch_id,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.row_id,
        EXT_VV_EMAIL_ACTIVITY_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_EMAIL_ACTIVITY_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_VV_SENT_EMAIL_VOD__C AS
 SELECT btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Id) AS ID,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.CreatedDate) AS CreatedDate,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.CreatedById) AS CreatedById,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.LastModifiedDate) AS LastModifiedDate,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.LastModifiedById) AS LastModifiedById,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.OwnerId) AS OwnerId,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.RecordTypeId) AS RecordTypeId,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.IsDeleted) AS IsDeleted,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.SystemModstamp) AS SystemModstamp,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Name) AS Name,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Account_vod__c) AS Account_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Activity_Tracking_Mode_vod__c) AS Activity_Tracking_Mode_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.EM_Attendee_vod__c) AS EM_Attendee_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Bcc_vod__c) AS Bcc_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Call2_vod__c) AS Call2_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Capture_Datetime_vod__c) AS Capture_Datetime_vod__c,
        CASE WHEN (EXT_VV_SENT_EMAIL_VOD__C_src.Clicked_vod__c = ''::varchar) THEN NULL::float ELSE (btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Clicked_vod__c))::float END AS Clicked_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Content_Type_vod__c) AS Content_Type_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Detail_Group_vod__c) AS Detail_Group_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Approved_Document_Views_vod__c) AS Approved_Document_Views_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Entity_Reference_Id_vod__c) AS Entity_Reference_Id_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Event_vod__c) AS Event_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Event_Attendee_vod__c) AS Event_Attendee_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Event_Attendee_Mobile_Id_vod__c) AS Event_Attendee_Mobile_Id_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Event_Mobile_Id_vod__c) AS Event_Mobile_Id_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Events_Management_Subtype_vod__c) AS Events_Management_Subtype_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.EM_Event_Speaker_vod__c) AS EM_Event_Speaker_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.EM_Event_Team_Member_vod__c) AS EM_Event_Team_Member_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Sender_Email_vod__c) AS Sender_Email_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Key_Message_vod__c) AS Key_Message_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Last_Click_Date_vod__c) AS Last_Click_Date_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Last_Device_vod__c) AS Last_Device_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Last_Activity_Date_vod__c) AS Last_Activity_Date_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Last_Open_Date_vod__c) AS Last_Open_Date_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.MC_Capture_Datetime_vod__c) AS MC_Capture_Datetime_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Medical_Event_vod__c) AS Medical_Event_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Medical_Inquiry_vod__c) AS Medical_Inquiry_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Mobile_ID_vod__c) AS Mobile_ID_vod__c,
        CASE WHEN (EXT_VV_SENT_EMAIL_VOD__C_src.Opened_vod__c = ''::varchar) THEN NULL::float ELSE (btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Opened_vod__c))::float END AS Opened_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Parent_Email_vod__c) AS Parent_Email_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Product_vod__c) AS Product_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Product_Display_vod__c) AS Product_Display_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Receipt_Entity_Type_vod__c) AS Receipt_Entity_Type_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Receipt_Record_Id_vod__c) AS Receipt_Record_Id_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Related_Transaction_ID_vod__c) AS Related_Transaction_ID_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Scheduled_Send_Datetime_vod__c) AS Scheduled_Send_Datetime_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Email_Sent_Date_vod__c) AS Email_Sent_Date_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Status_vod__c) AS Status_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Failure_Msg_vod__c) AS Failure_Msg_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Suggestion_vod__c) AS Suggestion_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Territory_vod__c) AS Territory_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Account_Email_vod__c) AS Account_Email_vod__c,
        CASE WHEN (EXT_VV_SENT_EMAIL_VOD__C_src.Click_Count_vod__c = ''::varchar) THEN NULL::float ELSE (btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Click_Count_vod__c))::float END AS Click_Count_vod__c,
        CASE WHEN (EXT_VV_SENT_EMAIL_VOD__C_src.Open_Count_vod__c = ''::varchar) THEN NULL::float ELSE (btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Open_Count_vod__c))::float END AS Open_Count_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.User_vod__c) AS User_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Valid_Consent_Exists_vod__c) AS Valid_Consent_Exists_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.VExternal_Id_vod__c) AS VExternal_Id_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.Approved_Email_Template_vod__c) AS Approved_Email_Template_vod__c,
        btrim(EXT_VV_SENT_EMAIL_VOD__C_src.subject) AS subject,
        EXT_VV_SENT_EMAIL_VOD__C_src.batch_id,
        EXT_VV_SENT_EMAIL_VOD__C_src.row_id,
        EXT_VV_SENT_EMAIL_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_SENT_EMAIL_VOD__C_src;

CREATE  VIEW teva_ingestion.EXT_VV_REP_ROSTER_VOD__C AS
 SELECT btrim(EXT_VV_REP_ROSTER_VOD__C_src.id) AS id,
        CASE WHEN (EXT_VV_REP_ROSTER_VOD__C_src.createddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_REP_ROSTER_VOD__C_src.createddate))::timestamp END AS createddate,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.createdbyid) AS createdbyid,
        CASE WHEN (EXT_VV_REP_ROSTER_VOD__C_src.lastmodifieddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_REP_ROSTER_VOD__C_src.lastmodifieddate))::timestamp END AS lastmodifieddate,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.lastmodifiedbyid) AS lastmodifiedbyid,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.ownerid) AS ownerid,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.isdeleted) AS isdeleted,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.name) AS name,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.systemmodstamp) AS systemmodstamp,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.mayedit) AS mayedit,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.islocked) AS islocked,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.territory_vod__c) AS territory_vod__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.address_line_1_vod__c) AS address_line_1_vod__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.address_line_2_vod__c) AS address_line_2_vod__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.address_line_3_tva__c) AS address_line_3_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.city_vod__c) AS city_vod__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.state_vod__c) AS state_vod__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.zip_vod__c) AS zip_vod__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.computer_asset_tag__c) AS computer_asset_tag__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.fax_number__c) AS fax_number__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.home_phone__c) AS home_phone__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.mobile_number__c) AS mobile_number__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.organization_id__c) AS organization_id__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.rep_type_tva__c) AS rep_type_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.sampleflag_tva__c) AS sampleflag_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.ship_addr1_tva__c) AS ship_addr1_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.ship_addr2_tva__c) AS ship_addr2_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.ship_addr3_tva__c) AS ship_addr3_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.ship_city_tva__c) AS ship_city_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.ship_state_tva__c) AS ship_state_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.ship_zip_tva__c) AS ship_zip_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.store_addr1_tva__c) AS store_addr1_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.store_addr2_tva__c) AS store_addr2_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.store_addr3_tva__c) AS store_addr3_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.store_city_tva__c) AS store_city_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.store_state_tva__c) AS store_state_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.store_zip_tva__c) AS store_zip_tva__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.username_external_id_vod__c) AS username_external_id_vod__c,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.vin__c) AS vin__c,
        CASE WHEN (EXT_VV_REP_ROSTER_VOD__C_src.lastvieweddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_REP_ROSTER_VOD__C_src.lastvieweddate))::timestamp END AS lastvieweddate,
        CASE WHEN (EXT_VV_REP_ROSTER_VOD__C_src.lastreferenceddate = ''::varchar) THEN NULL::timestamp ELSE (btrim(EXT_VV_REP_ROSTER_VOD__C_src.lastreferenceddate))::timestamp END AS lastreferenceddate,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.useremail) AS useremail,
        btrim(EXT_VV_REP_ROSTER_VOD__C_src.local_employee_id__c) AS local_employee_id__c,
        EXT_VV_REP_ROSTER_VOD__C_src.batch_id,
        EXT_VV_REP_ROSTER_VOD__C_src.row_id,
        EXT_VV_REP_ROSTER_VOD__C_src.update_ts
 FROM teva_ingestion.EXT_VV_REP_ROSTER_VOD__C_src;

SELECT MARK_DESIGN_KSAFE(1);

