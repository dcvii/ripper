CREATE SCHEMA datamart;


CREATE TABLE datamart.touchpoint_presentation
(
    call_id int,
    call_attempt_id int,
    presentation_id int,
    product varchar(50),
    "position" int,
    item_type varchar(50),
    item_description varchar(100),
    quantity float,
    basket_id int,
    basket_name varchar(300),
    file_id int,
    record_id int
);


CREATE TABLE datamart.plantrak_workbook
(
    payer_number varchar(6),
    payer_name varchar(100),
    payer_parent_number varchar(6),
    payer_parent_name varchar(100),
    plan_number varchar(4),
    payer_plan_number varchar(10) NOT NULL,
    plan_name varchar(100),
    model varchar(10),
    method_of_payment varchar(250),
    city varchar(30),
    hq_state varchar(2),
    operating_state varchar(2),
    months_with_data varchar(4),
    pbm_number varchar(6),
    pbm_name varchar(100),
    pbm_parent varchar(6),
    pbm_parent_name varchar(100),
    file_id int NOT NULL,
    record_id int NOT NULL,
    CONSTRAINT PK_plantrak_workbook PRIMARY KEY (payer_plan_number) ENABLED
);


CREATE TABLE datamart.mm_ram_to_rsm
(
    mm_ram varchar(40),
    state varchar(8),
    rsm varchar(40)
);


CREATE TABLE datamart.call_plan
(
    sales_force_id varchar(5),
    period varchar(20),
    veeva_account_id varchar(18),
    ims_id varchar(10),
    first_name varchar(50),
    last_name varchar(50),
    specialty varchar(100),
    area_number varchar(8),
    region_number varchar(8),
    territory_number varchar(8),
    basket_id int,
    basket_name varchar(300),
    p1 int,
    p2 int,
    p3 int,
    file_id int,
    record_id int,
    tvcmid int,
    call_plan_group varchar(25)
);


CREATE TABLE datamart.cmop_rx
(
    data_month date,
    comp_month date,
    pharmacy varchar(100),
    visn varchar(2),
    station_number varchar(10),
    station varchar(50),
    va_product varchar(70),
    basket_id int,
    basket_name varchar(300),
    cmop_rxs_raw numeric(37,15),
    cmop_rxs_normalized numeric(37,15),
    total_quantity numeric(37,15),
    cmop_quantity numeric(37,15),
    rxs_30_days numeric(37,15),
    zip varchar(5),
    id varchar(10),
    file_id int,
    record_id int,
    rollup_flag char(1),
    basket_type varchar(100),
    total_rxs_normalized numeric(37,15)
);


CREATE TABLE datamart.rems_pharmacy
(
    enrollment_id varchar(20),
    pharmacy_type varchar(20),
    pharmacy_name varchar(200),
    address_line_1 varchar(40),
    address_line_2 varchar(40),
    city varchar(40),
    state varchar(2),
    zip varchar(5),
    phone varchar(10),
    file_id int,
    record_id int,
    ncpdp varchar(20),
    dea_num varchar(20),
    status varchar(60),
    license_number varchar(20),
    obsolescence_reason varchar(64),
    obsolescence_date date,
    last_build_date date,
    channel varchar(20),
    effective_date date,
    expiration_date date,
    first_name varchar(36),
    in_progress_step varchar(40),
    last_name varchar(40),
    middle_name varchar(36),
    program_id varchar(10),
    program_name varchar(48)
);


CREATE TABLE datamart.customer_hco_demographics
(
    tvcmid int,
    ims_org_id varchar(11),
    npi varchar(10),
    hin varchar(18),
    outlet_code varchar(18),
    business_name varchar(80),
    address_line1 varchar(80),
    address_line2 varchar(80),
    city varchar(40),
    state_code varchar(2),
    zip varchar(5),
    cot_classification varchar(50),
    cot_facility_type varchar(50),
    cot_specialty varchar(50),
    file_id int,
    record_id int,
    address_id int,
    address_latitude varchar(20),
    address_longitude varchar(20)
);


CREATE TABLE datamart.customer_level_flags
(
    tvcmid int,
    basket_id int,
    basket_name varchar(300),
    territory_number varchar(8),
    sales_force_id varchar(2),
    flag_type varchar(50),
    flag_value varchar(50),
    flag_effective_start_date timestamp,
    flag_effective_end_date timestamp,
    file_id int,
    record_id int
);


CREATE TABLE datamart.do_not_promote
(
    tvcmid int,
    first_name varchar(50),
    last_name varchar(50),
    zip varchar(5)
);


CREATE TABLE datamart.tvcmid_xref
(
    tvcmid int,
    id_num varchar(255),
    id_type varchar(14),
    state varchar(2),
    file_id int,
    record_id int,
    status varchar(10)
);


CREATE TABLE datamart.oncology_adjusted_sales
(
    acct_demo_id int,
    outlet_name varchar(100),
    outlet_zip varchar(5),
    basket_id int,
    basket_name varchar(300),
    date date,
    rollup_week date,
    rollup_month date,
    source_quantity float,
    source_dollars float,
    adjustment_quantity float,
    adjustment_dollars float,
    reported_quantity float,
    reported_dollars float,
    data_date date,
    file_id int,
    record_id int,
    reported_trx_strength_units float,
    report_frequency varchar(20),
    rollup_flag char(1),
    basket_type varchar(100),
    rollup_445_month date,
    tvcmid int,
    sales_force_id varchar(10),
    outlet_code varchar(10)
);


CREATE TABLE datamart.oncology_sales_adjustments
(
    adjustment_type varchar(50),
    adjustment_description varchar(200),
    acct_demo_id int,
    outlet_name varchar(100),
    adjustment_month date,
    adjustment_start_date date,
    adjustment_end_date date,
    basket_id int,
    basket_name varchar(50),
    adjustment_quantity float,
    adjustment_dollars float,
    tvcmid int,
    outlet_code varchar(10)
);


CREATE TABLE datamart.specialty_pharmacy_enrollment
(
    specialty_pharmacy_name varchar(50),
    patient_id varchar(80),
    rx_received_date date,
    insurance_information varchar(200),
    most_recent_cml_treatment varchar(200),
    basket_id int,
    basket_name varchar(300),
    date_of_discontinuation date,
    reason_for_discontinuation varchar(200),
    physician_last_name varchar(200),
    physician_first_name varchar(200),
    physician_address varchar(400),
    physician_city varchar(200),
    physician_state varchar(8),
    physician_zip varchar(40),
    file_id int,
    record_id int,
    tvcmid int
);


CREATE TABLE datamart.chargebacks
(
    account_id varchar(100),
    location_id varchar(100),
    shipment_date date,
    ndc_code varchar(20),
    basket_id int,
    basket_name varchar(300),
    product_name varchar(100),
    contract_id varchar(100),
    chargeback_quantity numeric(37,15),
    chargeback_amount numeric(37,15),
    receipt_date date,
    debit_memo_number varchar(30),
    credit_memo_date date,
    credit_memo_number varchar(30),
    settlement_date timestamp,
    contract_price numeric(37,15),
    file_id int,
    record_id int,
    unit_ap float,
    ap float,
    tvcmid int
);


CREATE TABLE datamart.sfa_reprints
(
    sales_force_id varchar(2),
    territory_number varchar(8),
    product_name varchar(80),
    promo_item_id int,
    promo_item_name varchar(300),
    distribution_date date,
    quantity int,
    reprint_name varchar(150),
    reprint_id varchar(30),
    call_id varchar(20),
    veeva_sample_id varchar(20),
    rep_id varchar(20),
    rep_first_name varchar(50),
    rep_last_name varchar(50),
    veeva_account_id varchar(20),
    ims_id varchar(10),
    prescriber_first_name varchar(50),
    prescriber_last_name varchar(50),
    name_on_call varchar(150),
    zip_on_call varchar(30),
    area_number varchar(8),
    region_number varchar(8),
    tvcmid int,
    basket_id int,
    basket_name varchar(300)
);


CREATE TABLE datamart.sfa_sample
(
    sample_id varchar(20),
    call_id varchar(20),
    veeva_account_id varchar(20),
    ims_id varchar(10),
    call_date date,
    sales_force_id varchar(2),
    territory_number varchar(8),
    call_type varchar(50),
    attendee_type varchar(50),
    customer_type varchar(50),
    sample_type varchar(10),
    product_name varchar(80),
    sample_name varchar(80),
    sample_ndc varchar(50),
    basket_id int,
    basket_name varchar(300),
    qty int,
    name_on_call varchar(100),
    zip_on_call varchar(10),
    dea_num varchar(9),
    ownerid varchar(20),
    employee_number varchar(20),
    employee_first_name varchar(50),
    employee_last_name varchar(50),
    parent_call_id varchar(20),
    created_by varchar(20),
    created_date date,
    area_number varchar(8),
    region_number varchar(8),
    tvcmid int,
    how_executed varchar(40)
);


CREATE TABLE datamart.affiliations
(
    ims_org_id varchar(15),
    business_name varchar(80),
    hce_id_prfsnl varchar(64),
    professional_id int,
    ims_id varchar(10),
    first_name varchar(40),
    last_name varchar(80),
    affiliation_type_code varchar(10),
    affiliation_type_description varchar(50),
    affiliation_group_description varchar(50),
    affiliation_indicator varchar(1),
    affiliation_rank int,
    file_id int,
    record_id int,
    professional_tvcmid int,
    org_tvcmid int
);


CREATE TABLE datamart.patient_months_count
(
    tvcmid int,
    ims_id varchar(10),
    npi varchar(20),
    ims_surrogate_patient_id varchar(20),
    basket_id int,
    basket_name varchar(300),
    indication varchar(20),
    approved_indication varchar(5),
    rollup_shipment_month date,
    patient_months numeric(37,15),
    dispense_type_code varchar(50),
    dispense_type varchar(500)
);


CREATE TABLE datamart.psr_enrollment
(
    veeva_account_id varchar(20),
    ims_id varchar(10),
    npi varchar(10),
    tvcmid int,
    basket_name varchar(300),
    basket_id int,
    indication varchar(5),
    prescriber_last_name varchar(80),
    prescriber_first_name varchar(50),
    prescriber_middle_name varchar(50),
    specialty_code varchar(255),
    prescriber_date date,
    in_progress_count int,
    completed_count int,
    cancelled_count int,
    prescriber_count int,
    week_ending date,
    file_id int,
    record_id int
);


CREATE TABLE datamart.psr_enrollment_rej
(
    file_id int,
    record_id int,
    null_npi varchar(5),
    null_lkp_veeva_id varchar(5),
    null_lkp_ims_id varchar(5),
    count_mismatch varchar(5),
    week_ending date,
    npi varchar(10)
);


CREATE TABLE datamart.rems_prescriber
(
    first_name varchar(36),
    last_name varchar(40),
    site_name varchar(200),
    address_line_1 varchar(50),
    address_line_2 varchar(40),
    city varchar(40),
    state varchar(2),
    zip varchar(5),
    phone varchar(10),
    npi varchar(10),
    dea_num varchar(20),
    file_id int,
    record_id int,
    enrollment_id varchar(20),
    program_id varchar(10),
    program_name varchar(48),
    status varchar(60),
    in_progress_step varchar(40),
    effective_date date,
    expiration_date date,
    prescriber_tvcmid int,
    ppaf_count int,
    channel varchar(20),
    middle_name varchar(36),
    obsolescence_date date
);


CREATE TABLE datamart.dddmd_demographics_detail
(
    account_demo_id int,
    outlet_code varchar(10),
    ims_facility_number varchar(11),
    ims_prescriber_number varchar(7),
    category_code varchar(10),
    subcategory_code varchar(2),
    alignment_zip varchar(5),
    outlet_name varchar(100),
    outlet_address varchar(120),
    outlet_city varchar(40),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    facility_name varchar(100),
    facility_address1 varchar(60),
    facility_address2 varchar(60),
    facility_address3 varchar(60),
    facility_address4 varchar(60),
    facility_city varchar(40),
    facility_state varchar(2),
    facility_zip varchar(5),
    prescriber_name varchar(100),
    prescriber_address1 varchar(60),
    prescriber_address2 varchar(60),
    prescriber_address3 varchar(60),
    prescriber_address4 varchar(60),
    prescriber_city varchar(40),
    prescriber_state varchar(2),
    prescriber_zip varchar(5),
    account_status varchar(1),
    tvcmid int,
    sales_force_id varchar(2),
    outlet_tvcmid int,
    facility_tvcmid int,
    prescriber_tvcmid int,
    tvcmid_assignment_rule varchar(25)
);


CREATE TABLE datamart.prescriber_rx_qty_base
(
    ims_id varchar(10),
    payer_plan_number varchar(10),
    ims_client_number varchar(64),
    report_frequency varchar(10),
    ims_product_group varchar(64),
    basket_id int,
    data_date date,
    date date,
    sales_category varchar(64),
    tvcmid int,
    prescriber_first_name varchar(25),
    prescriber_last_name varchar(25),
    basket_name varchar(300),
    basket_type varchar(100),
    rollup_week date,
    rollup_month date,
    nrx_count numeric(18,3),
    trx_count numeric(18,3),
    nrx_quantity numeric(18,3),
    trx_quantity numeric(18,3),
    unnormalized_nrx_count numeric(18,3),
    unnormalized_trx_count numeric(18,3),
    market_name varchar(300),
    payer_name varchar(100),
    plan_name varchar(100),
    pbm_name varchar(100),
    model varchar(10),
    payment_method varchar(250),
    ims_specialty varchar(10),
    ims_rx_type varchar(1),
    ims_supplemental_data varchar(20),
    zip_other varchar(10),
    ims_report_number varchar(64),
    file_id int,
    record_id int,
    ims_report_number_cnt varchar(5),
    indication varchar(20),
    pbm_parent_name varchar(100),
    load_step int
) INCLUDE SCHEMA PRIVILEGES;


CREATE TABLE datamart.prescriber_rx_cnt_base
(
    ims_id varchar(10),
    payer_plan_number varchar(10),
    ims_client_number varchar(64),
    report_frequency varchar(10),
    ims_product_group varchar(64),
    basket_id int,
    data_date date,
    date date,
    sales_category varchar(64),
    tvcmid int,
    prescriber_first_name varchar(25),
    prescriber_last_name varchar(25),
    basket_name varchar(300),
    basket_type varchar(100),
    rollup_week date,
    rollup_month date,
    nrx_count numeric(18,3),
    trx_count numeric(18,3),
    nrx_quantity numeric(18,3),
    trx_quantity numeric(18,3),
    unnormalized_nrx_count numeric(18,3),
    unnormalized_trx_count numeric(18,3),
    market_name varchar(300),
    payer_name varchar(100),
    plan_name varchar(100),
    pbm_name varchar(100),
    model varchar(10),
    payment_method varchar(250),
    ims_specialty varchar(10),
    ims_rx_type varchar(1),
    ims_supplemental_data varchar(20),
    zip_other varchar(10),
    ims_report_number varchar(64),
    file_id int,
    record_id int,
    ims_report_number_qty varchar(5),
    indication varchar(20),
    pbm_parent_name varchar(100),
    load_step int
) INCLUDE SCHEMA PRIVILEGES;


CREATE TABLE datamart.prescriber_rx_cnt_base_adhoc
(
    ims_id varchar(10),
    payer_plan_number varchar(10),
    ims_client_number varchar(64),
    report_frequency varchar(10),
    ims_product_group varchar(64),
    basket_id int,
    data_date date,
    date date,
    sales_category varchar(64),
    tvcmid int,
    prescriber_first_name varchar(25),
    prescriber_last_name varchar(25),
    basket_name varchar(300),
    basket_type varchar(100),
    rollup_week date,
    rollup_month date,
    nrx_count numeric(37,15),
    trx_count numeric(37,15),
    nrx_quantity varchar(1),
    trx_quantity varchar(1),
    unnormalized_nrx_count numeric(37,15),
    unnormalized_trx_count numeric(37,15),
    market_name varchar(300),
    payer_name varchar(100),
    plan_name varchar(100),
    pbm_name varchar(100),
    model varchar(10),
    payment_method varchar(250),
    ims_specialty varchar(10),
    ims_rx_type varchar(1),
    ims_supplemental_data varchar(20),
    zip_other varchar(10),
    ims_report_number varchar(64),
    file_id int,
    record_id int,
    ims_report_number_qty varchar(5),
    indication varchar(20),
    load_step int
);


CREATE TABLE datamart.prescriber_rx_qty_base_adhoc
(
    ims_id varchar(10),
    payer_plan_number varchar(10),
    ims_client_number varchar(64),
    report_frequency varchar(10),
    ims_product_group varchar(64),
    basket_id int,
    data_date date,
    date date,
    sales_category varchar(64),
    tvcmid int,
    prescriber_first_name varchar(25),
    prescriber_last_name varchar(25),
    basket_name varchar(300),
    basket_type varchar(100),
    rollup_week date,
    rollup_month date,
    nrx_count numeric(126,67),
    trx_count numeric(126,67),
    nrx_quantity numeric(37,15),
    trx_quantity numeric(37,15),
    unnormalized_nrx_count varchar(1),
    unnormalized_trx_count varchar(1),
    market_name varchar(300),
    payer_name varchar(100),
    plan_name varchar(100),
    pbm_name varchar(100),
    model varchar(10),
    payment_method varchar(250),
    ims_specialty varchar(10),
    ims_rx_type varchar(1),
    ims_supplemental_data varchar(20),
    zip_other varchar(10),
    ims_report_number varchar(64),
    file_id int,
    record_id int,
    ims_report_number_cnt varchar(5),
    indication varchar(20),
    load_step int
);


CREATE TABLE datamart.prescriber_rx_adhoc
(
    ims_id varchar(10),
    payer_plan_number varchar(10),
    ims_client_number varchar(5),
    report_frequency varchar(20),
    ims_product_group varchar(10),
    basket_id int,
    data_date date,
    date date,
    sales_category varchar(2),
    tvcmid int,
    prescriber_first_name varchar(50),
    prescriber_last_name varchar(50),
    basket_name varchar(300),
    basket_type varchar(100),
    rollup_week date,
    rollup_month date,
    nrx_count float,
    trx_count float,
    nrx_quantity float,
    trx_quantity float,
    unnormalized_nrx_count float,
    unnormalized_trx_count float,
    market_name varchar(75),
    payer_name varchar(100),
    plan_name varchar(100),
    pbm_name varchar(100),
    model varchar(100),
    payment_method varchar(250),
    ims_specialty varchar(10),
    ims_rx_type varchar(1),
    ims_supplemental_data varchar(20),
    ims_zip_other varchar(10),
    ims_report_number_cnt varchar(5),
    cnt_file_id int,
    cnt_record_id int,
    ims_report_number_qty varchar(5),
    qty_file_id int,
    qty_record_id int,
    rollup_flag char(1),
    indication varchar(20)
);


CREATE TABLE datamart.copay
(
    redemption_type varchar(10),
    physician_tvcmid int,
    pharmacy_tvcmid int,
    basket_id int,
    basket_name varchar(300),
    asi_txn_id varchar(20),
    orig_asi_txn_id varchar(20),
    rx_num varchar(50),
    fill_date date,
    date_written date,
    days_supply int,
    ndc_code varchar(20),
    daw int,
    new_refill int,
    quantity numeric(9,2),
    refills int,
    other_coverage_code varchar(10),
    program_number varchar(15),
    copay_card_number varchar(20),
    sex varchar(1),
    age_at_redemption int,
    pharmacy_process_date date,
    pharmacy_chain_number varchar(5),
    nabp varchar(7),
    pharmacy_chain varchar(50),
    pharmacy_name varchar(100),
    pharmacy_address varchar(100),
    pharmacy_address2 varchar(100),
    pharmacy_city varchar(50),
    pharmacy_state varchar(2),
    pharmacy_zip varchar(15),
    pharmacy_phone varchar(10),
    pharmacy_npi_num varchar(10),
    principle_physician_dea varchar(9),
    physician_npi varchar(10),
    physician_ims_id varchar(10),
    physician_veeva_id varchar(20),
    physician_name varchar(100),
    physician_address1 varchar(100),
    physician_address2 varchar(100),
    physician_city varchar(50),
    physician_state varchar(2),
    physician_zip varchar(5),
    rebate_amount numeric(9,2),
    member_cash_expense numeric(9,2),
    submitted_cost numeric(9,2),
    pharmacy_fee numeric(9,2),
    total_amount_due numeric(9,2),
    calc_awp numeric(9,2),
    create_date date,
    occ_payment_type varchar(10),
    counted_copay varchar(1),
    auth_refills int,
    admin_hcp_npi varchar(10),
    admin_hcp_name varchar(100),
    admin_hcp_address varchar(100),
    admin_hcp_address2 varchar(100),
    admin_hcp_city varchar(50),
    admin_hcp_state varchar(2),
    admin_hcp_zip varchar(10),
    claim_type varchar(50),
    administration_flag char(1),
    soc_name varchar(60),
    soc_phone varchar(10),
    soc_fax varchar(10),
    soc_address varchar(100),
    soc_city varchar(50),
    soc_state varchar(2),
    soc_zip varchar(10),
    soc_id varchar(50),
    soc_npi varchar(10),
    payer_name varchar(60),
    cpt_code varchar(10),
    trans_type varchar(15),
    previous_payer_id int,
    member_id varchar(20),
    benefit_amount numeric(9,2),
    patient_expense numeric(9,2),
    submission_method varchar(1),
    report_frequency varchar(20),
    source_name varchar(255),
    file_id int,
    record_id int,
    patient_type varchar(100),
    primary_bin varchar(100),
    primary_bin_description varchar(100),
    reject_code varchar(100)
);


CREATE TABLE datamart.customer_hcp_demographics
(
    tvcmid int,
    ims_id varchar(7),
    npi varchar(10),
    last_name varchar(40),
    first_name varchar(40),
    middle_name varchar(40),
    personal_suffix varchar(10),
    medical_suffix varchar(10),
    primary_specialty varchar(5),
    secondary_specialty varchar(5),
    address_line1 varchar(80),
    address_line2 varchar(80),
    city varchar(40),
    state_code varchar(2),
    zip varchar(5),
    business_phone varchar(100),
    business_email varchar(100),
    hce_status_desc varchar(50),
    np_pa_flag varchar(1),
    address_id int,
    address_latitude varchar(20),
    address_longitude varchar(20),
    file_id int,
    record_id int
);


CREATE TABLE datamart.prescriber_combined_demographics
(
    sales_force_id varchar(20),
    ims_id varchar(10),
    npi varchar(10),
    tvcmid int,
    veeva_account_id varchar(20),
    specialty varchar(255),
    secondary_specialty varchar(255),
    first_name varchar(50),
    middle_name varchar(50),
    last_name varchar(50),
    ptr_veeva_address_id varchar(20),
    ptr_address_1 varchar(100),
    ptr_address_2 varchar(100),
    ptr_address_3 varchar(100),
    ptr_city varchar(50),
    ptr_state varchar(2),
    ptr_zip varchar(5),
    ptr_phone varchar(40),
    ptr_territory_num varchar(15),
    ptr_territory_type varchar(30),
    ptr_address_source varchar(50),
    ptr_mailable varchar(1) DEFAULT 'N',
    dea_num varchar(10),
    pdrp_flag varchar(1) DEFAULT 'N',
    pdrp_date timestamp,
    np_pa_flag varchar(1) DEFAULT 'N',
    no_spend varchar(1) DEFAULT 'N',
    ama_no_contact_flag varchar(1) DEFAULT 'N',
    email varchar(100),
    degree varchar(100),
    address_id int,
    address_latitude varchar(20),
    address_longitude varchar(20),
    row_source varchar(100)
);


CREATE TEMPORARY TABLE datamart.tmp_globals
(
    d_data_month date,
    d_data_date date,
    d_start_month timestamp,
    g_default_end_date varchar(10),
    max_rollup_month date
) ON COMMIT PRESERVE ROWS NO PROJECTION;


CREATE TEMPORARY TABLE datamart.tmp_onc_demo_sales_alloc_adjusts
(
    acct_demo_id int,
    tvcmid int,
    ims_outlet_code varchar(10),
    ims_facility_number varchar(20),
    CATEGORY_CODE varchar(2),
    SUBCATEGORY_CODE varchar(5),
    outlet_name varchar(50),
    outlet_address varchar(80),
    outlet_city varchar(40),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    facility_name varchar(160),
    facility_address1 varchar(160),
    facility_address2 varchar(160),
    facility_city varchar(60),
    facility_state varchar(2),
    facility_zip varchar(15),
    sales_force_id varchar(2)
) ON COMMIT PRESERVE ROWS NO PROJECTION;


CREATE TABLE datamart.oncology_invoice_adjustments
(
    adj_code varchar(10),
    adj_descr varchar(50),
    act_time_period varchar(10),
    act_start_date date,
    act_end_date date,
    status_code varchar(10),
    basket_id int,
    basket_name varchar(300),
    adj_factor float,
    tvcmid int,
    record_id int,
    file_id int
);


CREATE TABLE datamart.rx_deciles
(
    ims_id varchar(10),
    tvcmid int,
    basket_id int,
    basket_name varchar(300),
    basket_type varchar(100),
    report_frequency varchar(20),
    decile_trx_count_6_mo int,
    decile_trx_count_12_mo int,
    trx_count_6_mo float,
    trx_count_12_mo float,
    trx_count_24_mo float,
    decile_date date,
    first_name varchar(50),
    last_name varchar(50),
    decile_name varchar(50)
);


CREATE TABLE datamart.formulary_restrictions
(
    health_plan_id varchar(6),
    drug_id varchar(6),
    restriction_code varchar(7),
    restriction_detail_id varchar(6),
    restriction_detail_text varchar(250),
    restriction_addtnl_information_1 varchar(4000),
    restriction_addtnl_information_2 varchar(4000),
    step_count varchar(50),
    pa_form varchar(4000),
    indication varchar(255),
    grouped_restriction_level varchar(255),
    record_id int,
    file_id int
);


CREATE TABLE datamart.fia
(
    basket_id int,
    basket_name varchar(300),
    claim_id varchar(64),
    patient_id int,
    sequence_number int,
    product_id varchar(11),
    fill_date date,
    claim_type varchar(2),
    reject_code varchar(3),
    days_supply numeric(10,6),
    quantity varchar(12),
    refill_code int,
    payer_plan_id varchar(10),
    opc_ask varchar(10),
    sec_payer_plan_id varchar(10),
    buy_down varchar(11),
    opc_paid varchar(10),
    prescriber_id varchar(20),
    sob varchar(3),
    sub_product_id varchar(11),
    sub_opc varchar(10),
    initial_claim_id varchar(64),
    prev_product_id varchar(11),
    daw_code varchar(2),
    wrt_date date,
    claim_status varchar(1),
    copay_card_flg varchar(4),
    zip_code varchar(5),
    ecoup_flag int,
    ecoup_offset_amt numeric(10,2),
    standard_copay numeric(10,2),
    standard_copay_yn varchar(1),
    market_id int,
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    flexible_fld_3_char varchar(50),
    flexible_fld_4_char varchar(50),
    file_id int,
    record_id int,
    cbsa_code varchar(5),
    cbsa_description varchar(100),
    state_code varchar(2),
    payer_name varchar(64),
    plan_name varchar(64),
    pbm_name varchar(60),
    pbm_id varchar(6),
    method_of_payment varchar(50),
    model_type varchar(64),
    product_group varchar(80),
    product_group_id int,
    product_name varchar(100),
    generic_name varchar(100),
    brand_generic_flag varchar(1),
    product_form varchar(100),
    product_strength varchar(100),
    package_size float,
    manufacturer varchar(100),
    cmf10 varchar(10),
    usc_code varchar(5),
    fia_market_desc varchar(50),
    reject_reason varchar(200),
    reject_group varchar(50),
    mpd_year int,
    mpd_eligibility_class varchar(11),
    deductible_start_date date,
    copay_start_date date,
    gap_start_date date,
    catastrophic_start_date date,
    mpd_panel_patient int,
    PROVIDER_TYPE varchar(2),
    IQVIA_RXER_ID varchar(7),
    PRIMARY_SPECIALTY_CODE varchar(10),
    PRIMARY_SPECIALTY_DESC varchar(100),
    FIRST_NAME varchar(100),
    LAST_NAME varchar(100),
    ORG_NM varchar(50),
    ADDRESS varchar(200),
    CITY varchar(100),
    PVR_ZIP_CODE varchar(5),
    PVR_STATE_CODE varchar(2),
    PHONE_NUMBER varchar(20),
    DEA_NUMBER varchar(20),
    ME_NUMBER varchar(20),
    PVR_FLEXIBLE_FLD_1_CHAR varchar(50),
    PVR_FLEXIBLE_FLD_2_CHAR varchar(50),
    patient_birth_year varchar(50),
    patient_gender varchar(1),
    patient_longitudinal_use_flag varchar(1),
    patd_flexible_fld_1_char varchar(50),
    patd_flexible_fld_2_char varchar(50)
);


CREATE TABLE datamart.ZS_AFFINITY_MONITOR
(
    NPI varchar(10),
    CONTRIBUTOR_ID varchar(18),
    PFF_CTT_VOL varchar(2),
    PFF_EN varchar(3),
    PFF_EN_QUINTILE varchar(2),
    PFF_AFFINITY varchar(2),
    PFF_CTBR_CTT_VOL varchar(4),
    PFF_CTBR_EN varchar(3),
    PR_CTT_VOL varchar(2),
    PR_EN varchar(3),
    PR_EN_QUINTILE varchar(2),
    PR_AFFINITY varchar(2),
    PR_CTBR_CTT_VOL varchar(4),
    PR_CTBR_EN varchar(3),
    PI_CTT_VOL varchar(2),
    PI_EN varchar(3),
    PI_EN_QUINTILE varchar(2),
    PI_AFFINITY varchar(2),
    PI_CTBR_CTT_VOL varchar(4),
    PI_CTBR_EN varchar(3),
    DPH_CTT_VOL varchar(2),
    DPH_EN varchar(3),
    DPH_EN_QUINTILE varchar(2),
    DPH_AFFINITY varchar(2),
    DPH_CTBR_CTT_VOL varchar(4),
    DPH_CTBR_EN varchar(3),
    DPL_CTT_VOL varchar(2),
    DPL_EN varchar(3),
    DPL_EN_QUINTILE varchar(2),
    DPL_AFFINITY varchar(2),
    DPL_CTBR_CTT_VOL varchar(4),
    DPL_CTBR_EN varchar(3),
    DRT_CTT_VOL varchar(2),
    DRT_EN varchar(3),
    DRT_EN_QUINTILE varchar(2),
    DRT_AFFINITY varchar(2),
    DRT_CTBR_CTT_VOL varchar(4),
    DRT_CTBR_EN varchar(3),
    Top_Channels varchar(25),
    PP_ACCESS_RATING varchar(2),
    NPP_ACCESS_RATING varchar(2),
    PEER_OFFER_EN varchar(2),
    COPAY_OFFER_EN varchar(2),
    SAMPLE_OFFER_EN varchar(2),
    VOUCHER_OFFER_EN varchar(2),
    record_id int,
    file_id int
);


CREATE TABLE datamart.specialty_pharmacy_shipment
(
    specialty_pharmacy_data_source varchar(50),
    ims_id varchar(10),
    tw_ship_to_address_id int,
    tw_bill_to_address_id int,
    source_customer_id varchar(50),
    customer_name varchar(100),
    physician_first_name varchar(50),
    physician_last_name varchar(50),
    ship_to_address_line_1 varchar(100),
    ship_to_address_line_2 varchar(100),
    ship_to_city varchar(50),
    ship_to_state varchar(2),
    ship_to_zip varchar(20),
    source_transaction_id varchar(50),
    invoice_date date,
    ship_date date,
    source_product_code varchar(25),
    basket_id int,
    basket_name varchar(300),
    quantity float,
    invoice_unit_price float,
    invoice_amount float,
    invoice_discount float,
    order_type varchar(50),
    customer_type varchar(20),
    source_parent_customer_id varchar(20),
    parent_customer_name varchar(100),
    file_id int,
    record_id int,
    lob_code_desc varchar(100),
    order_type_desc varchar(50),
    price_matrix_def varchar(20),
    whse_code varchar(20),
    order_no varchar(50),
    package_size int,
    tvcmid int,
    trx_cnt numeric(37,15),
    net_sales_amt numeric(37,15),
    adj_invoice_unit_price float,
    adj_invoice_amount float,
    comp_month date,
    hin varchar(20),
    dea_number varchar(20),
    net_cost numeric(37,15),
    payer_flag varchar(50),
    optum_briova_flag varchar(50),
    physician_middle_name varchar(50),
    rollup_flag char(1),
    basket_type varchar(100),
    unnormalized_trx_count numeric(37,15),
    days_supplied int,
    SPP_Physician_ID int,
    Primary_Payer_BIN varchar(20),
    Primary_Payer_PCN varchar(20),
    Primary_Group_Num varchar(30),
    Primary_Payer_Name varchar(100),
    Primary_Payer_Type varchar(25),
    Primary_Copay_Amount numeric(20,2),
    NPI varchar(10),
    state_license_number varchar(15)
);


CREATE TABLE datamart.select_brand_sales
(
    data_source varchar(50),
    transaction_id varchar(100),
    invoice_date date,
    basket_id int,
    basket_name varchar(300),
    product_brand varchar(50),
    product_ndc varchar(20),
    product_desc varchar(100),
    invoice_qty numeric(37,15),
    invoice_units numeric(37,15),
    invoice_cost numeric(18,4),
    invoice_pack_cost numeric(18,4),
    invoice_unit_cost numeric(18,4),
    contract_pack_cost numeric(18,4),
    contract_purchases numeric(18,4),
    contract_number varchar(100),
    dispensing_location varchar(100),
    dl_address_1 varchar(100),
    dl_address_2 varchar(100),
    dl_city varchar(50),
    dl_state varchar(2),
    dl_zip varchar(20),
    dl_dea_number varchar(20),
    depot_location varchar(100),
    dep_address_1 varchar(100),
    dep_address_2 varchar(100),
    dep_city varchar(50),
    dep_state varchar(2),
    dep_zip varchar(5),
    dep_dea_number varchar(20),
    unit_ap float,
    ap float,
    file_id int,
    record_id int,
    dispensing_tvcmid int,
    depot_tvcmid int
);


CREATE TABLE datamart.oncology_fcr
(
    time_period varchar(10),
    sales_force_id varchar(2),
    area_number varchar(8),
    region_number varchar(8),
    territory_number varchar(8),
    employee_id varchar(20),
    contact_date date,
    duration_days float,
    ss_opening int,
    ss_probing int,
    ss_resources int,
    ss_commitment int,
    ss_transitioning int,
    ss_acumen int,
    archive_flag varchar(1),
    file_id int,
    record_id int
);


CREATE TABLE datamart.alternate_call_plans
(
    sales_force_id varchar(2),
    period varchar(20),
    veeva_account_id varchar(20),
    ims_id varchar(10),
    first_name varchar(50),
    last_name varchar(50),
    specialty varchar(100),
    territory_number varchar(8),
    area_number varchar(8),
    region_number varchar(8),
    product_name varchar(20),
    basket_id int,
    basket_name varchar(300),
    p1 int,
    p2 int,
    p3 int,
    file_id int,
    record_id int,
    call_plan_name varchar(100),
    tvcmid int,
    start_date date,
    end_date date,
    call_plan_group varchar(25)
);


CREATE TABLE datamart.dynamic_segment
(
    federation_id varchar(64),
    basket_id int,
    segment_name varchar(50),
    segment_value varchar(50),
    file_id int,
    record_id int
);


CREATE TABLE datamart.sfa_affiliations
(
    affiliated_from_id varchar(18),
    affiliated_from_account_type varchar(80),
    affiliated_from_ims_id varchar(20),
    affiliated_from_ims_outlet_cd varchar(100),
    affiliated_from_acct_demo_id varchar(30),
    affiliated_from_bp_code varchar(120),
    affiliated_from_tvcmid int,
    affiliated_to_id varchar(18),
    affiliated_to_account_type varchar(80),
    affiliated_to_ims_id varchar(20),
    affiliated_to_ims_outlet_code varchar(100),
    affiliated_to_acct_demo_id varchar(30),
    affiliated_to_bp_code varchar(120),
    affiliated_to_tvcmid int,
    role varchar(50),
    affiliated_last_modified_date timestamp,
    sales_force_id varchar(2),
    territory_number varchar(100),
    employee_full_name varchar(100),
    employee_id varchar(100)
);


CREATE TABLE datamart.digital_sales_aid_analysis
(
    sales_force_id varchar(2),
    territory_number varchar(8),
    region_num varchar(8),
    area_num varchar(8),
    veeva_id varchar(20),
    ims_id varchar(10),
    npi_num varchar(10),
    account_type varchar(80),
    account_sub_type varchar(40),
    account_name varchar(255),
    first_name varchar(40),
    middle_name varchar(40),
    last_name varchar(80),
    address varchar(80),
    city varchar(40),
    state varchar(2),
    zip varchar(10),
    credential varchar(255),
    degree varchar(30),
    specialty varchar(255),
    call_id varchar(20),
    call_date date,
    product_name varchar(80),
    basket_id int,
    basket_name varchar(300),
    detail_priority int,
    display_order int,
    duration int,
    presentation_name varchar(80),
    message_name varchar(80),
    detailed_products varchar(255),
    detail_type varchar(20),
    sampled_call varchar(1),
    message_visit_number int,
    visit_number int,
    rep_name varchar(125),
    week_ending date,
    call_type varchar(25),
    rep_id varchar(20),
    tvcmid int,
    message_desc varchar(255)
);


CREATE TABLE datamart.touchpoint_call
(
    call_id int,
    call_attempt_id int,
    touchpoint_id int,
    veeva_id varchar(20),
    ims_id varchar(10),
    first_name varchar(50),
    last_name varchar(50),
    call_type varchar(100),
    call_date date,
    status_code varchar(10),
    status_description varchar(100),
    rep_id int,
    rep_first_name varchar(50),
    rep_last_name varchar(50),
    file_id int,
    record_id int,
    tvcmid int
);


CREATE TABLE datamart.sfa_call
(
    sales_force_id varchar(2),
    call_id varchar(20),
    veeva_account_id varchar(20),
    ims_id varchar(10),
    ims_outlet_id varchar(15),
    customer_type varchar(50),
    first_name varchar(50),
    last_name varchar(80),
    call_type varchar(50),
    legacy_call_type varchar(50),
    ceph_id varchar(10),
    dea_num varchar(10),
    rep_id varchar(20),
    rep_first_name varchar(50),
    rep_last_name varchar(50),
    territory_number varchar(8),
    zip_on_call varchar(10),
    call_date date,
    submit_date timestamp,
    attendees int,
    attendee_type varchar(50),
    area_number varchar(8),
    region_number varchar(8),
    tvcmid int,
    call_recordtype varchar(80),
    call_duration numeric(3,0),
    call_datetime timestamp,
    call_timezone varchar(30),
    how_executed varchar(40),
    remote_meeting_id varchar(100),
    parent_call_id varchar(64),
    is_parent_call varchar(18),
    t21s10_austedo_indication varchar(255),
    Outcomes_from_Visit varchar(50),
    Visit_Trigger varchar(50),
    Visit_Trigger_Date date,
    call_name varchar(80),
    veeva_address_id varchar(18)
);


CREATE TABLE datamart.sfa_demographics
(
    veeva_account_id varchar(32),
    sales_force_id varchar(5),
    customer_type varchar(50),
    ims_id varchar(10),
    npi varchar(10),
    ims_outlet_code varchar(12),
    territory_number varchar(8),
    territory_type varchar(10),
    territory_status varchar(30),
    last_name varchar(80),
    first_name varchar(50),
    middle_name varchar(50),
    suffix_name varchar(10),
    credentials varchar(50),
    organization_name varchar(255),
    veeva_address_id varchar(20),
    address_line1 varchar(100),
    address_line2 varchar(100),
    address_line3 varchar(100),
    city varchar(50),
    state varchar(2),
    zip varchar(10),
    address_status varchar(20),
    phone varchar(50),
    phone_ext varchar(12),
    fax varchar(50),
    mobile varchar(50),
    email varchar(200),
    prim_specialty varchar(255),
    specialty_code varchar(5),
    sfa_create_date date,
    demo_rank int,
    last_call_date date,
    calls_last_90_days int,
    zip_valid_for_territory_num varchar(1),
    bp_code varchar(20),
    sfa_align_date date,
    account_demo_id varchar(30),
    pdrp_flag varchar(5),
    designation varchar(255),
    business_type varchar(40),
    area_number varchar(8),
    region_number varchar(8),
    tvcmid int,
    address_latitude varchar(20),
    address_longitude varchar(20),
    calls_last_6_months int,
    address_id int,
    staff_email varchar(80),
    company_managed_email varchar(80),
    alternate_email varchar(80)
);


CREATE TABLE datamart.sfa_promotional_items
(
    sales_force_id varchar(2),
    territory_number varchar(8),
    product_name varchar(80),
    promo_item_id int,
    promo_item_name varchar(300),
    distribution_date date,
    quantity int,
    item_name varchar(150),
    item_type varchar(30),
    call_id varchar(20),
    veeva_sample_id varchar(20),
    rep_id varchar(20),
    rep_first_name varchar(50),
    rep_last_name varchar(50),
    veeva_account_id varchar(20),
    ims_id varchar(10),
    prescriber_first_name varchar(50),
    prescriber_last_name varchar(80),
    name_on_call varchar(150),
    zip_on_call varchar(30),
    area_number varchar(8),
    region_number varchar(8),
    tvcmid int,
    basket_id int,
    basket_name varchar(300),
    product_value numeric(7,2)
);


CREATE TABLE datamart.territory_history
(
    territory_number varchar(50),
    employee_id varchar(50),
    start_date date,
    end_date date,
    first_name varchar(50),
    last_name varchar(50),
    rep_type varchar(10),
    termination_date date,
    hire_date date,
    end_reason varchar(10),
    original_hire_date date,
    source_id varchar(20)
);


CREATE TABLE datamart.leave_of_absence
(
    employee_id varchar(50),
    leave_date date,
    return_date date,
    days_of_leave int
);


CREATE TABLE datamart.time_off_territory
(
    territory_number varchar(8),
    time_off_date date,
    time_on_date date,
    description varchar(50),
    duration_in_days numeric(10,1),
    veeva_account_id varchar(20),
    file_id int,
    record_id int
);


CREATE TABLE datamart.product_basket
(
    parent_basket_name varchar(300),
    parent_basket_type varchar(100),
    parent_basket_id int,
    child_basket_name varchar(300),
    child_basket_type varchar(100),
    child_basket_id int
);


CREATE TABLE datamart.oncology_sales_quotas
(
    time_period varchar(10),
    sales_force_id varchar(2),
    area_number varchar(8),
    region_number varchar(8),
    territory_number varchar(8),
    product_name varchar(20),
    basket_id int,
    quota_qty int,
    quota_dollars numeric(18,4),
    quota_strength_unit int,
    file_id int,
    record_id int
);


CREATE TABLE datamart.direct_sales
(
    account_id varchar(100),
    location_id varchar(100),
    shipment_date date,
    ndc_code varchar(20),
    product_name varchar(100),
    basket_id int,
    basket_name varchar(300),
    transaction_type varchar(100),
    direct_sales_units float,
    direct_sales_dollars float,
    unit_ap float,
    total_ap float,
    file_id int,
    record_id int,
    tvcmid int
);


CREATE TABLE datamart.ahm_interactions
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    interactionname varchar(200),
    interactioncategory varchar(50),
    interactiontype varchar(50),
    locationtype varchar(50),
    interactionstatus varchar(50),
    interactionstartdate date,
    interactionenddate date,
    interactionstarttime varchar(50),
    interactionendtime varchar(50),
    interactiontimezone varchar(80),
    interactionstartdatetime varchar(26),
    interactionenddatetime varchar(26),
    requestingregion varchar(100),
    parentinteractionid varchar(18),
    parentinteractioncode varchar(50),
    employeeid varchar(18),
    clientemployeeid varchar(50),
    employeefirstname varchar(80),
    employeelastname varchar(80),
    employeeorganizationunitid varchar(18),
    employeeorganizationunitcode varchar(50),
    employeeorganizationunitname varchar(200),
    venueid varchar(18),
    clientvenueid varchar(18),
    venuename varchar(80),
    venueaddressline1 varchar(50),
    venueaddressline2 varchar(50),
    venueaddressline3 varchar(50),
    venuecity varchar(80),
    venuestateprovince varchar(50),
    venuepostalcode varchar(20),
    venuecountry varchar(50),
    venueregion varchar(100),
    totalestimatedparticipantcount int,
    financialcloseddate date,
    product1name varchar(80),
    product1id varchar(18),
    product1clientid varchar(100),
    topic1name varchar(255),
    topic1id varchar(18),
    topic1clientid varchar(80),
    product2name varchar(80),
    product2id varchar(18),
    product2clientid varchar(100),
    topic2name varchar(255),
    topic2id varchar(18),
    topic2clientid varchar(80),
    product3name varchar(80),
    product3id varchar(18),
    product3clientid varchar(100),
    topic3name varchar(255),
    topic3id varchar(18),
    topic3clientid varchar(80),
    product4name varchar(80),
    product4id varchar(18),
    product4clientid varchar(100),
    topic4name varchar(255),
    topic4id varchar(18),
    topic4clientid varchar(80),
    product5name varchar(80),
    product5id varchar(18),
    product5clientid varchar(100),
    topic5name varchar(255),
    topic5id varchar(18),
    topic5clientid varchar(80),
    record_id int,
    file_id int
);


CREATE TABLE datamart.ahm_participant
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    participantid varchar(18),
    clientcustomerid varchar(100),
    participanttype varchar(80),
    firstname varchar(80),
    middlename varchar(80),
    lastname varchar(80),
    suffix varchar(80),
    professionaldesignation varchar(80),
    primaryspecialty varchar(80),
    organizationname varchar(80),
    npinumber varchar(10),
    addressid varchar(18),
    clientaddressid varchar(100),
    addressline1 varchar(255),
    addressline2 varchar(255),
    addressline3 varchar(255),
    addresscity varchar(80),
    addressstateprovince varchar(50),
    addresspostalcode varchar(20),
    addresspostalcodeextension varchar(10),
    addresscountry varchar(50),
    region varchar(50),
    primarystatelicensestate varchar(50),
    primarystatelicensenumber varchar(50),
    attended varchar(1),
    mealconsumed varchar(1),
    contractid varchar(18),
    clientcontractid varchar(50),
    contractname varchar(100),
    contractcategory varchar(50),
    contractsubcategory varchar(50),
    contractclassification varchar(50),
    contracttier varchar(50),
    contracteffectivedate date,
    contractexpirationdate date,
    contracttotalvalue numeric(10,2),
    record_id int,
    file_id int
);


CREATE TABLE datamart.ahm_unnamedparticipant
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    particpantcategoryid varchar(18),
    categorytype varchar(100),
    totalattendedcount int,
    totalmealconsumedcount int,
    record_id int,
    file_id int
);


CREATE TABLE datamart.ahm_expense
(
    sourcesystemid varchar(10),
    batchid varchar(18),
    batchdate date,
    transactionstatuscode varchar(1),
    interactionid varchar(18),
    interactioncode varchar(50),
    spendid varchar(18),
    clientspendid varchar(100),
    spendamount numeric(10,2),
    spendcurrency varchar(3),
    spenddate date,
    spendtype varchar(50),
    spendpurpose varchar(50),
    traveldestinationcity varchar(80),
    traveldestinationstateprovince varchar(50),
    traveldestinationcountry varchar(50),
    spenddescription varchar(2000),
    taxincludedindicator varchar(1),
    taxamount numeric(10,2),
    taxrate numeric(10,2),
    recipientid varchar(18),
    clientrecipientid varchar(100),
    participantid varchar(18),
    recipientfirstname varchar(80),
    recipientmiddlename varchar(80),
    recipientlastname varchar(80),
    recipientsuffix varchar(80),
    recipientprofessionaldesignation varchar(80),
    recipientprimaryspecialty varchar(80),
    recipientorganizationname varchar(80),
    recipientnpinumber varchar(10),
    recipientaddressid varchar(18),
    recipientclientaddressid varchar(100),
    recipientaddressline1 varchar(255),
    recipientaddressline2 varchar(255),
    recipientaddressline3 varchar(255),
    recipientaddresscity varchar(80),
    recipientaddressstateprovince varchar(50),
    recipientaddresspostalcode varchar(20),
    recipientaddresspostalcodeextension varchar(10),
    recipientaddresscountry varchar(50),
    recipientprimarystatelicensestate varchar(50),
    recipientprimarystatelicensenumber varchar(50),
    thirdpartyrecipientindicator varchar(1),
    thirdpartyrecipientid varchar(18),
    thirdpartyclientrecipientid varchar(100),
    thirdpartyrecipientname varchar(80),
    thirdpartycoveredrecipientindicator varchar(1),
    paymentid varchar(18),
    clientpaymentid varchar(50),
    paymentdate date,
    paymentmethod varchar(50),
    paymentreferencenumber varchar(50),
    paymentstatus varchar(50),
    record_id int,
    file_id int
);


CREATE TABLE datamart.customer_address
(
    tvcmid int,
    address_id int,
    address_type varchar(10),
    address_type_name varchar(50),
    address_line_1 varchar(80),
    address_line_2 varchar(80),
    county varchar(40),
    city varchar(40),
    state varchar(2),
    state_name varchar(50),
    country_code varchar(3),
    country_name varchar(50),
    zip5_postal_code varchar(5),
    zip4_postal_extension_code varchar(4),
    address_status varchar(10),
    address_status_name varchar(50),
    address_effective_date timestamp,
    msa_cbsa varchar(5),
    fips_state_code varchar(2),
    fips_state_description varchar(50),
    fips_county_code varchar(3),
    fips_county_description varchar(50),
    deliverability_confidence varchar(10),
    address_setting_type_code varchar(10),
    address_setting_type_description varchar(50),
    address_category_code varchar(10),
    address_category_description varchar(50),
    address_latitude varchar(20),
    address_longitude varchar(20),
    postal_barcode varchar(10),
    single_address_indicator varchar(1),
    practice_location_confidence_indicator varchar(10),
    practice_location_rank varchar(10),
    validation_message varchar(100),
    created_by varchar(50),
    created_date timestamp,
    updated_by varchar(50),
    updated_date timestamp,
    file_id int,
    record_id int
);


CREATE TABLE datamart.customer_address_link
(
    tvcmid int,
    tvcm_addr_id int,
    dsp_id varchar(10),
    dsp_hce_id varchar(100),
    dsp_addr_id varchar(100),
    file_id int,
    record_id int
);


CREATE TABLE datamart.oncology_target_accounts
(
    tvcmid int,
    sales_force_id varchar(2),
    basket_id int,
    basket_name varchar(20),
    acct_demo_id int,
    outlet_code varchar(10),
    target_type varchar(20),
    target_value varchar(20),
    applies_from_date date,
    applies_to_date date,
    active_ind varchar(1),
    system_start_date date,
    system_end_date date,
    end_reason varchar(100),
    veeva_account_id varchar(20),
    file_id int,
    record_id int
);


CREATE TABLE datamart.patient_response
(
    basket_id int,
    basket_name varchar(300),
    tvcmid int,
    week_end_date date,
    practice_name varchar(255),
    practice_address_line_1 varchar(255),
    practice_address_line_2 varchar(255),
    city varchar(255),
    state varchar(255),
    zip_code varchar(255),
    provider_first_name varchar(255),
    provider_last_name varchar(255),
    npi varchar(255),
    specialty_1 varchar(255),
    specialty_2 varchar(255),
    total_cml_patients_with_poor_response_to_treatment int,
    pts_with_moderate_severe_asthma_and_eosinophils_0_149 int,
    pts_with_moderate_severe_asthma_and_eosinophils_150_399 int,
    pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater int,
    pts_with_ao_asthma_and_eosinophils_0_149 int,
    pts_with_ao_asthma_and_eosinophils_150_399 int,
    pts_with_ao_asthma_and_eosinophils_400_or_greater int,
    file_id int,
    record_id int,
    pts_with_moderate_severe_asthma_and_has_eosinophils_300_499 int,
    pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater int
);


CREATE TABLE datamart.prescriber_rx
(
    ims_id varchar(10),
    payer_plan_number varchar(10),
    ims_client_number varchar(5),
    report_frequency varchar(20),
    ims_product_group varchar(10),
    basket_id int,
    data_date date,
    date date,
    sales_category varchar(2),
    tvcmid int,
    prescriber_first_name varchar(50),
    prescriber_last_name varchar(50),
    basket_name varchar(300),
    basket_type varchar(100),
    rollup_week date,
    rollup_month date,
    nrx_count numeric(18,3),
    trx_count numeric(18,3),
    nrx_quantity numeric(18,3),
    trx_quantity numeric(18,3),
    unnormalized_nrx_count numeric(18,3),
    unnormalized_trx_count numeric(18,3),
    market_name varchar(75),
    payer_name varchar(100),
    plan_name varchar(100),
    pbm_name varchar(100),
    model varchar(100),
    payment_method varchar(250),
    ims_specialty varchar(10),
    ims_rx_type varchar(1),
    ims_supplemental_data varchar(20),
    ims_zip_other varchar(10),
    ims_report_number_cnt varchar(5),
    cnt_file_id int,
    cnt_record_id int,
    ims_report_number_qty varchar(5),
    qty_file_id int,
    qty_record_id int,
    rollup_flag char(1),
    indication varchar(20),
    pbm_parent_name varchar(100)
) INCLUDE SCHEMA PRIVILEGES;


CREATE TABLE datamart.prescriber_combined_demo_frozen
(
    start_date date,
    end_date date,
    sales_force_id varchar(20),
    ims_id varchar(10),
    npi varchar(10),
    tvcmid int,
    veeva_account_id varchar(20),
    specialty varchar(255),
    first_name varchar(50),
    middle_name varchar(50),
    last_name varchar(50),
    ptr_veeva_address_id varchar(20),
    ptr_address_1 varchar(100),
    ptr_address_2 varchar(100),
    ptr_address_3 varchar(100),
    ptr_city varchar(50),
    ptr_state varchar(2),
    ptr_zip varchar(5),
    ptr_phone varchar(40),
    ptr_territory_num varchar(15),
    ptr_territory_type varchar(30),
    ptr_address_source varchar(50),
    ptr_mailable varchar(1) DEFAULT 'N',
    dea_num varchar(10),
    pdrp_flag varchar(1) DEFAULT 'N',
    pdrp_date timestamp,
    np_pa_flag varchar(1) DEFAULT 'N',
    no_spend varchar(1) DEFAULT 'N',
    ama_no_contact_flag varchar(1) DEFAULT 'N',
    email varchar(100),
    degree varchar(100),
    address_id int,
    address_latitude varchar(20),
    address_longitude varchar(20),
    row_source varchar(100),
    freeze_reason varchar(100),
    freeze_date date DEFAULT now(),
    secondary_specialty varchar(255)
);


CREATE TABLE datamart.veeva_suggestions_austedo
(
    account_priority_score_vod__c int,
    account_vod__c varchar(55),
    display_dismiss_vod__c varchar(10),
    display_mark_as_complete_vod__c varchar(10),
    display_score_vod__c varchar(10),
    email_template_id_vod__c varchar(255),
    email_template_vault_id_vod__c varchar(255),
    email_template_vod__c varchar(10),
    expiration_date_vod__c date,
    marked_as_complete_vod__c varchar(10),
    mark_complete_count_vod__c int,
    name varchar(255),
    ownerid varchar(255),
    posted_date date,
    priority_vod__c varchar(255),
    reason_vod__c varchar(255),
    record_type_name_vod__c varchar(255),
    suppress_reason_vod__c varchar(10),
    title_vod__c varchar(255),
    business_rule_name varchar(255),
    product varchar(255),
    days_since_last_call int,
    calls_per_mth numeric(3,1),
    austedo_decile varchar(10),
    avg_new_dose numeric(18,3),
    avg_cont_dose numeric(18,3),
    ss_flag varchar(10),
    austedo_rx varchar(10),
    hcp_name varchar(255),
    rep_name varchar(255),
    batch_num int,
    territory_number varchar(100),
    tvcmid varchar(100)
);


CREATE TABLE datamart.psrf_aggregated_util_rpt
(
    sales_force_id varchar(20),
    area_number varchar(8),
    region_number varchar(8),
    territory_number varchar(15),
    area_name varchar(50),
    region_name varchar(50),
    territory_name varchar(50),
    PrescriberName varchar(58),
    psrf_city varchar(50),
    psrf_state varchar(50),
    psrf_zip varchar(12),
    psrf_npi varchar(10),
    demo_first_name varchar(50),
    demo_last_name varchar(50),
    demo_city varchar(50),
    demo_state varchar(2),
    demo_zip varchar(5),
    demo_npi varchar(10),
    Current_Week_PSRFs varchar(20),
    Current_Month_PSRFs varchar(20),
    HCP_Signature_Yes varchar(20),
    HCP_Signature_No varchar(20),
    Patient_Auth_Yes varchar(20),
    Patient_Auth_No varchar(20),
    YTD_PSRFs varchar(20),
    file_id int,
    row_source varchar(50)
);


CREATE TABLE datamart.alternate_alignments
(
    alignment_name varchar(100),
    zip_code varchar(5),
    city varchar(50),
    state_code varchar(2),
    territory_number varchar(8),
    territory_name varchar(50),
    area_name varchar(50),
    region_name varchar(50),
    sales_force_id varchar(5),
    organization_code varchar(200),
    mirror_flag varchar(64),
    mirror_territory_number varchar(8),
    file_id int,
    record_id int,
    start_date date,
    end_date date
);


CREATE TABLE datamart.chargeback_demographics
(
    account_id varchar(100),
    location_id varchar(100),
    dea_number varchar(20),
    end_customer varchar(100),
    address_1 varchar(100),
    address_2 varchar(100),
    city varchar(50),
    state varchar(2),
    zip varchar(10),
    contract_title varchar(100),
    contract_id varchar(100),
    wholesaler_name varchar(100),
    hin varchar(20),
    contract_alias varchar(100),
    wholesaler_dea varchar(20),
    cot_source varchar(30),
    class_of_trade varchar(30),
    file_id int,
    record_id int,
    tvcmid int
);


CREATE TABLE datamart.current_alignment
(
    zip_code varchar(5),
    city varchar(50),
    state_code varchar(2),
    territory_number varchar(8),
    territory_name varchar(50),
    area_number varchar(8),
    area_name varchar(50),
    region_number varchar(8),
    region_name varchar(50),
    sales_force_id varchar(5),
    organization_code varchar(200),
    inactive_flag varchar(64),
    comments varchar(255),
    mirror_flag varchar(64),
    mirror_territory_number varchar(8),
    file_id int,
    record_id int
) INCLUDE SCHEMA PRIVILEGES;


CREATE TABLE datamart.direct_sales_demographics
(
    account_id varchar(100),
    location_id varchar(100),
    account_name varchar(100),
    account_class varchar(100),
    address_1 varchar(100),
    address_2 varchar(100),
    city varchar(50),
    state varchar(50),
    zip varchar(10),
    file_id int,
    record_id int,
    tvcmid int
);


CREATE TABLE datamart.event
(
    source_system_name varchar(255),
    event_number varchar(100),
    event_name varchar(100),
    event_status_code varchar(100),
    event_status_description varchar(100),
    event_status_change_date timestamp,
    event_start_date timestamp,
    event_end_date timestamp,
    funding_source varchar(100),
    event_type varchar(100),
    event_type_description varchar(100),
    event_location varchar(100),
    event_schedule_date timestamp,
    attendee_closeout_date timestamp,
    financial_closeout_date timestamp,
    cancellation_date timestamp,
    cancellation_reason varchar(100),
    estimated_attendance varchar(100),
    venue_id varchar(100),
    venue_full_name varchar(100),
    venue_address_line_1 varchar(100),
    venue_address_line_2 varchar(100),
    venue_city varchar(100),
    venue_state varchar(100),
    venue_zip varchar(100),
    venue_contact varchar(100),
    venue_phone varchar(100),
    venue_fax varchar(100),
    venue_email varchar(100),
    file_id int,
    record_id int,
    event_time_zone varchar(100),
    event_format varchar(100),
    pending_mgmnt_approval_date timestamp(6),
    event_approval_date timestamp(6),
    event_approver_id varchar(100),
    cancellation_source varchar(100),
    event_venue_min_cnt_req_ind varchar(100),
    event_venue_min_count varchar(100),
    venue_address_line_3 varchar(100),
    venue_address_line_4 varchar(100),
    venue_postal_extended_code varchar(100),
    venue_country_code varchar(100),
    trade_secret_indicator varchar(100),
    trade_secret_reason varchar(100),
    custom_field_1 varchar(100),
    custom_field_2 varchar(100),
    custom_field_3 varchar(100),
    custom_field_4 varchar(100),
    custom_field_5 varchar(100),
    rec_stat_cd varchar(100),
    parent_event_number varchar(100)
);


CREATE TABLE datamart.event_attendee_count
(
    source_system_name varchar(255),
    event_number varchar(100),
    attendee_category_code varchar(20),
    count int,
    file_id int,
    record_id int,
    attendee_category varchar(250)
);


CREATE TABLE datamart.event_expense
(
    source_system_name varchar(255),
    event_number varchar(100),
    payment_id varchar(10),
    expense_category varchar(50),
    amount float,
    remit_to_id varchar(50),
    recipient_id varchar(50),
    check_number varchar(50),
    check_date timestamp,
    file_id int,
    record_id int
);


CREATE TABLE datamart.factory_sales_852
(
    trading_partner varchar(50),
    distribution_center varchar(50),
    distribution_center_dea_number varchar(20),
    reporting_date date,
    product_name varchar(50),
    description varchar(50),
    ndc varchar(20),
    basket_id int,
    basket_name varchar(300),
    qty_received float,
    qty_received_dollars float,
    qty_sold float,
    qty_sold_dollars float,
    qty_omit float,
    qty_omit_dollars float,
    month_end_qty_on_hand float,
    month_end_qty_on_hand_dollars float,
    month_end_committed float,
    month_end_committed_dollars float,
    month_end_reserved float,
    month_end_reserved_dollars float,
    qty_return float,
    qty_return_dollars float,
    qty_customer_return float,
    qty_customer_return_dollars float,
    file_id int,
    record_id int
);


CREATE TABLE datamart.formulary
(
    formulary_date timestamp,
    health_plan_id varchar(6),
    health_plan varchar(100),
    provider_id varchar(6),
    provider varchar(250),
    parent_id varchar(6),
    parent varchar(250),
    national_lives_count int,
    operating_state varchar(2),
    state_lives_count int,
    plan_type_name varchar(250),
    preferred_brand_tier varchar(64),
    drug_id varchar(6),
    drug_class varchar(100),
    drug varchar(100),
    basket_id int,
    basket_name varchar(300),
    generic varchar(10),
    manufacturer varchar(100),
    tier_code varchar(2),
    restrictions varchar(20),
    reason_code varchar(100),
    reason_code_description varchar(100),
    file_id int,
    record_id int
);


CREATE TABLE datamart.dddmd_demographics
(
    account_demo_id int,
    outlet_code varchar(10),
    ims_facility_number varchar(11),
    ims_prescriber_number varchar(7),
    category_code varchar(10),
    subcategory_code varchar(2),
    alignment_zip varchar(5),
    outlet_name varchar(100),
    outlet_address varchar(120),
    outlet_city varchar(40),
    outlet_state varchar(2),
    outlet_zip varchar(5),
    facility_name varchar(100),
    facility_address1 varchar(60),
    facility_address2 varchar(60),
    facility_address3 varchar(60),
    facility_address4 varchar(60),
    facility_city varchar(40),
    facility_state varchar(2),
    facility_zip varchar(5),
    prescriber_name varchar(100),
    prescriber_address1 varchar(60),
    prescriber_address2 varchar(60),
    prescriber_address3 varchar(60),
    prescriber_address4 varchar(60),
    prescriber_city varchar(40),
    prescriber_state varchar(2),
    prescriber_zip varchar(5),
    account_status varchar(1),
    tvcmid int,
    sales_force_id varchar(2),
    outlet_tvcmid int,
    facility_tvcmid int,
    prescriber_tvcmid int,
    tvcmid_assignment_rule varchar(25)
);


CREATE TABLE datamart.sfa_survey
(
    sales_force_id varchar(2),
    territory_number varchar(8),
    region_num varchar(8),
    area_num varchar(8),
    veeva_survey_target_id varchar(20),
    survey_name varchar(80),
    veeva_account_id varchar(20),
    survey_target_first_name varchar(50),
    survey_target_last_name varchar(50),
    status varchar(255),
    rep_id varchar(20),
    rep_first_name varchar(50),
    rep_last_name varchar(50),
    question_position int,
    question varchar(1000),
    response varchar(2500),
    tvcmid int,
    response_update_date date,
    response_create_date date
);


CREATE TABLE datamart.ims_outlet_master
(
    client_number varchar(3),
    outlet_number varchar(8),
    outlet_name varchar(50),
    address varchar(80),
    city varchar(40),
    state varchar(2),
    zip varchar(5),
    report_type varchar(2),
    status varchar(1),
    subcategory_code varchar(5),
    state_code varchar(2),
    county_code varchar(10),
    record_type varchar(3),
    file_id int,
    record_id int,
    retail_flag varchar(1),
    activity_date varchar(4),
    dea_number varchar(9)
);


CREATE TABLE datamart.ddd
(
    outlet_code varchar(10),
    outlet_name varchar(100),
    outlet_zip varchar(10),
    ims_client_number varchar(5),
    ims_report_number varchar(5),
    report_frequency varchar(20),
    ims_product_code varchar(10),
    basket_id int,
    basket_name varchar(300),
    data_date date,
    date date,
    rollup_week date,
    rollup_month date,
    comp_month date,
    quantity float,
    file_id int,
    record_id int,
    market_name varchar(75),
    outlet_tvcmid int,
    sales_force_id varchar(2),
    category_code varchar(2),
    rollup_flag char(1),
    basket_type varchar(100),
    rollup_445_month date,
    dollars float,
    COUNT float,
    subcategory_code varchar(10)
);


CREATE TABLE datamart.ddd_md
(
    onc_account_demo_id int,
    alt_seq_num varchar(20),
    outlet_name varchar(100),
    outlet_code varchar(10),
    subcategory_code varchar(5),
    outlet_zip varchar(5),
    ims_client_num varchar(5),
    ims_report_num varchar(5),
    report_frequency varchar(20),
    ims_product_code varchar(10),
    basket_id int,
    basket_name varchar(300),
    data_date date,
    date date,
    rollup_week date,
    rollup_month date,
    comp_month date,
    quantity float,
    dollars float,
    file_id int,
    record_id int,
    sales_force_id varchar(2),
    rollup_445_month date,
    tvcmid int,
    ims_facility_number varchar(11),
    ims_prescriber_number varchar(7),
    facility_tvcmid int,
    prescriber_tvcmid int,
    outlet_tvcmid int,
    normalized_quantity float
);


CREATE TABLE datamart.event_attendee
(
    source_system_name varchar(255),
    event_number varchar(100),
    employee_id varchar(20),
    attendee_id varchar(20),
    attendee_first_name varchar(50),
    attendee_middle_name varchar(50),
    attendee_last_name varchar(50),
    attendee_address varchar(100),
    attendee_city varchar(50),
    attendee_state varchar(100),
    attendee_zip varchar(100),
    attendee_phone varchar(15),
    attendee_fax varchar(15),
    attendee_email varchar(100),
    dea_number varchar(100),
    ims_number varchar(10),
    me_number varchar(10),
    npi_number varchar(10),
    attendee_category_code varchar(20),
    attended int,
    meal int,
    non_hcp_count int,
    other_hcp_count int,
    file_id int,
    record_id int,
    tvcmid int,
    attendee_title varchar(100),
    attendee_specialty varchar(100),
    attendee_degree varchar(100),
    attendee_address_line_2 varchar(100),
    attendee_address_line_3 varchar(100),
    attendee_address_line_4 varchar(100)
);


CREATE TABLE datamart.specialty_pharmacy_rx
(
    specialty_pharmacy_name varchar(50),
    sub_specialty_pharmacy_name varchar(50),
    pharmacy_npi varchar(10),
    ncpdp varchar(7),
    pharmacy_store_number varchar(20),
    pharmacy_address_1 varchar(100),
    pharmacy_address_2 varchar(100),
    pharmacy_city varchar(50),
    pharmacy_state varchar(2),
    pharmacy_zip varchar(10),
    pharmacy_phone varchar(20),
    pharmacy_fax varchar(20),
    dsp_patient_id varchar(100),
    gender varchar(1),
    age int,
    patient_state varchar(2),
    primary_icd9 varchar(20),
    secondary_icd9 varchar(20),
    prescriber_npi varchar(10),
    prescriber_name_first varchar(50),
    prescriber_name_last varchar(50),
    prescriber_address_1 varchar(100),
    prescriber_address_2 varchar(100),
    prescriber_city varchar(50),
    prescriber_state varchar(2),
    prescriber_zip varchar(10),
    prescriber_phone varchar(20),
    prescriber_fax varchar(20),
    basket_id int,
    basket_name varchar(300),
    drug_name varchar(50),
    drug_ndc_11 varchar(20),
    drug_strength varchar(20),
    drug_form varchar(20),
    package_size varchar(20),
    dose_form varchar(50),
    rx_number varchar(20),
    refill_number int,
    rx_refills_written int,
    dispense_qty int,
    days_supply int,
    rx_written_date date,
    rx_receipt_date date,
    fill_date date,
    rx_type varchar(1),
    copay numeric(18,4),
    primary_plan_name varchar(100),
    primary_bin varchar(20),
    primary_pcn varchar(20),
    secondary_plan_name varchar(100),
    secondary_bin varchar(20),
    secondary_pcn varchar(20),
    tertiary_plan_name varchar(100),
    tertiary_bin varchar(20),
    tertiary_pcn varchar(20),
    ship_date date,
    shipping_carrier varchar(20),
    file_id int,
    record_id int,
    prescriber_tvcmid int,
    pharmacy_tvcmid int
);


CREATE TABLE datamart.veeva_sync
(
    employee_id varchar(20),
    first_name varchar(50),
    last_name varchar(50),
    sync_date date,
    sync_type varchar(100),
    number_of_syncs int
);


CREATE TABLE datamart.aggregated_activity
(
    aggregated_id varchar(64),
    level varchar(64),
    federation_id varchar(200),
    source_name varchar(100),
    contact varchar(200),
    originating_id varchar(200),
    prior_activity varchar(64),
    activity_role_name varchar(100),
    count int,
    aggregated_type_name varchar(100),
    file_id int,
    record_id int
);


CREATE TABLE datamart.sample_shipment
(
    veeva_id varchar(25),
    tvcmid int,
    ims_id varchar(20),
    first_name varchar(50),
    middle_name varchar(50),
    last_name varchar(50),
    designation varchar(30),
    state_license_number varchar(20),
    address_line_1 varchar(35),
    address_line_2 varchar(35),
    address_line_3 varchar(35),
    city varchar(50),
    state varchar(2),
    zip varchar(10),
    dea_license_number varchar(20),
    order_id varchar(20),
    ndc varchar(15),
    basket_id int,
    basket_name varchar(300),
    order_job_code varchar(14),
    order_job_description varchar(50),
    ship_qty int,
    ship_date date,
    file_id int,
    record_id int,
    territory varchar(20),
    repid varchar(20),
    replastname varchar(50),
    repmiddlename varchar(50),
    repfirstname varchar(50),
    signature_type varchar(50),
    attendeename varchar(50),
    literature_product_id varchar(20),
    literature_product_name varchar(50)
);


CREATE TABLE datamart.sfa_call_detail
(
    sales_force_id varchar(2),
    call_id varchar(20),
    product varchar(30),
    basket_id int,
    basket_name varchar(300),
    detail_position int,
    indication varchar(5000)
);


CREATE TABLE datamart.enrollment_summary
(
    tvcmid int,
    ims_id varchar(10),
    npi varchar(10),
    veeva_account_id varchar(20),
    ndc varchar(11),
    indication varchar(5),
    week_ending date,
    in_progress_count int,
    completed_count int,
    cancelled_count int,
    prescriber_count int
);


CREATE TABLE datamart.specialty_pharmacy_patient_txn
(
    patient_yob numeric(4,0),
    patient_gender varchar(10),
    ims_surrogate_patient_id numeric(38,0),
    product_ndc varchar(15),
    product_name varchar(50),
    product_strength varchar(50),
    unit_of_measure varchar(50),
    extended_wac_price numeric(9,4),
    transaction_id varchar(20),
    patient_status_date date,
    patient_status_ varchar(50),
    patient_sub_status varchar(100),
    specialty_pharmacy_patient_or_case_id varchar(20),
    primary_icd_9 varchar(30),
    primary_icd_10 varchar(30),
    script_receipt_date date,
    primary_appeal_status varchar(50),
    primary_copay_type varchar(50),
    primary_deductible numeric(9,4),
    primary_pa_required varchar(10),
    primary_copay_amount numeric(9,4),
    primary_payer_name varchar(128),
    primary_plan_name varchar(70),
    primary_payer_type varchar(50),
    primary_plan_type varchar(50),
    primary_payer_reject_reason_code varchar(70),
    primary_reimbursement_status varchar(100),
    primary_reimbursement_status_date date,
    primary_step_therapy_required varchar(30),
    secondary_copay_type varchar(50),
    secondary_deductible numeric(9,4),
    secondary_pa_required varchar(10),
    secondary_copay_amount numeric(9,4),
    secondary_payer_name varchar(128),
    secondary_plan_name varchar(70),
    secondary_payer_type varchar(50),
    secondary_plan_type varchar(50),
    secondary_payer_reject_reason_code varchar(70),
    secondary_step_therapy_required varchar(30),
    ncpdp_number varchar(10),
    pharmacy_name varchar(75),
    pharmacy_zip varchar(10),
    prescribing_physician_first_name varchar(35),
    prescribing_physician_last_name varchar(35),
    prescribing_physician_middle_initial varchar(35),
    prescribing_physician_dea_number varchar(15),
    prescribing_physician_me_number varchar(10),
    prescribing_physician_npi_number varchar(15),
    prescribing_physician_address_1 varchar(70),
    prescribing_physician_address_2 varchar(70),
    prescribing_physician_city varchar(50),
    prescribing_physician_state varchar(20),
    prescribing_physician_zip varchar(5),
    number_of_fills_prescribed numeric(10,0),
    number_of_refills_remaining numeric(4,0),
    fill_type varchar(10),
    rx_date date,
    rx_number varchar(15),
    carrier varchar(50),
    date_of_drug_receipt date,
    initial_ship_date date,
    quantity_shipped numeric(9,4),
    out_of_pocket_cost numeric(9,4),
    shipment_date date,
    product_lot_number varchar(35),
    program_dispense_type varchar(50),
    days_supply_dispensed varchar(20),
    primary_payer_pa_outcome varchar(30),
    secondary_payer_pa_outcome varchar(30),
    rx_communication_method varchar(30),
    tertiary_icd_10 varchar(30),
    ims_file_id numeric(38,0),
    ims_transaction_id numeric(38,0),
    ims_cycle_date date,
    ims_supplier_id numeric(15,0),
    ims_supplier_name varchar(150),
    ims_transaction_type_code numeric(2,0),
    ims_duplicate_transaction varchar(1),
    ims_prescriber_id varchar(10),
    ims_phys_first_name varchar(50),
    ims_phys_last_name varchar(50),
    ims_phys_address varchar(40),
    ims_phys_city varchar(40),
    ims_phys_state varchar(14),
    ims_phys_zip varchar(5),
    ims_phys_specialty varchar(3),
    ims_product_id varchar(10),
    ims_product_description varchar(100),
    ims_outlet_id varchar(10),
    ims_outlet_name varchar(50),
    ims_outlet_address varchar(100),
    ims_outlet_city varchar(40),
    ims_outlet_state varchar(14),
    ims_outlet_zip varchar(5),
    ims_outlet_subcategory varchar(2),
    ims_plan_id varchar(10),
    ims_plan_name varchar(100),
    ims_plan_model varchar(50),
    primary_icd10_grouping varchar(20),
    primary_icd10_grouping_reason_code varchar(30),
    secondary_icd10_grouping varchar(20),
    secondary_icd10_grouping_reason_code varchar(30),
    ims_ndc_flag varchar(1),
    ims_dispensed_date_flag varchar(1),
    ims_dispensed_quantity_flag varchar(1),
    ims_cost_flag varchar(1),
    ims_overall_flag varchar(1),
    patient_months numeric(37,15),
    approved_indication varchar(5),
    tvcmid int,
    basket_id int,
    file_id int,
    record_id int
);


CREATE TABLE datamart.sales_geography
(
    sales_force_id varchar(4),
    geography_number varchar(15),
    geography_name varchar(100),
    geography_desc varchar(100),
    geography_type varchar(15),
    employee_type varchar(10),
    sales_team varchar(100),
    parent_geography_number varchar(15),
    fleet_eligible_flag varchar(1)
);


CREATE TABLE datamart.roster
(
    employee_id varchar(100),
    territory_number varchar(100),
    territory_name varchar(255),
    sales_force_id varchar(100),
    full_name varchar(100),
    first_name varchar(100),
    middle_name varchar(100),
    last_name varchar(100),
    address_line1 varchar(100),
    address_line2 varchar(100),
    address_line3 varchar(100),
    city varchar(100),
    state varchar(100),
    zip varchar(100),
    country varchar(100),
    business_address_line1 varchar(100),
    business_address_line2 varchar(100),
    business_address_line3 varchar(100),
    business_city varchar(100),
    business_state varchar(2),
    business_zip varchar(100),
    business_country varchar(100),
    shipping_address_line1 varchar(100),
    shipping_address_line2 varchar(100),
    shipping_address_line3 varchar(100),
    shipping_city varchar(100),
    shipping_state varchar(2),
    shipping_zip varchar(100),
    shipping_country varchar(100),
    business_phone varchar(100),
    home_phone varchar(100),
    mobile_phone varchar(100),
    fax varchar(100),
    voice_mail_extension varchar(100),
    email varchar(255),
    hire_date date,
    title varchar(100),
    rep_type varchar(10),
    username varchar(100),
    out_of_territory varchar(5),
    parent_territory_number varchar(100),
    company_code varchar(100),
    original_hire_date date,
    team varchar(100),
    salutation varchar(15),
    suffix varchar(15),
    cost_center varchar(30),
    sample_eligibility_flag varchar(10),
    samplestorage_address_line1 varchar(100),
    samplestorage_address_line2 varchar(100),
    samplestorage_address_line3 varchar(100),
    samplestorage_city varchar(100),
    samplestorage_zip varchar(100),
    samplestorage_state varchar(2),
    samplestorage_country varchar(100),
    hr_status varchar(100),
    reg_contract varchar(100),
    preferred_name varchar(100),
    business_unit_cd varchar(10),
    business_unit_name varchar(100),
    veeva_user_id varchar(100),
    mngr_employee_id varchar(100),
    birth_month_day varchar(5),
    calculated_rep_type varchar(20),
    job_code varchar(10),
    oracle_string varchar(50),
    global_employee_id varchar(35),
    supervisor_global_employee_id varchar(35),
    separation_date date,
    separation_reason varchar(100),
    fleet_eligible varchar(255),
    certified_field_trainer varchar(5),
    assignment_type varchar(255)
);


CREATE TABLE datamart.dx_code
(
    dx_code varchar(20),
    dx_description varchar(100)
);


CREATE TABLE datamart.dx_claims
(
    tvcmid int,
    ims_id varchar(7),
    npi varchar(10),
    dx_code varchar(20),
    month date,
    claim_count int,
    patient_count int,
    file_id int,
    record_id int
);


CREATE TABLE datamart.wholesaler_sales_867
(
    basket_id int,
    basket_name varchar(300),
    ndc varchar(20),
    product_description varchar(50),
    product_name varchar(25),
    trading_partner_name varchar(50),
    trading_partner_dea varchar(15),
    trading_partner_hin varchar(15),
    trading_partner_location_type varchar(5),
    trading_partner_dc_dea varchar(15),
    trading_partner_dc_hin varchar(15),
    trading_partner_dc_name varchar(50),
    trading_partner_dc_address varchar(50),
    trading_partner_dc_address_2 varchar(50),
    trading_partner_dc_city varchar(30),
    trading_partner_dc_state varchar(2),
    trading_partner_dc_zip varchar(10),
    class_of_trade varchar(50),
    outlet_location_name varchar(150),
    outlet_dea varchar(15),
    outlet_hin varchar(15),
    outlet_340b varchar(15),
    outlet_ncpdp varchar(15),
    outlet_npi varchar(15),
    outlet_location_address varchar(100),
    outlet_location_address_2 varchar(100),
    outlet_location_city varchar(30),
    outlet_location_state varchar(2),
    outlet_location_zip varchar(10),
    reporting_date date,
    rollup_reporting_month date,
    rollup_reporting_quarter varchar(7),
    contract_number varchar(30),
    contract_description varchar(30),
    invoice_number varchar(30),
    invoice_date date,
    invoice_line_id int,
    quanitity_stock_sales_ss int DEFAULT 0,
    ds_sales_ds int DEFAULT 0,
    summary_sales_su int DEFAULT 0,
    dock_to_dock_bq int DEFAULT 0,
    interbranch_ib int DEFAULT 0,
    return_to_useable_ru int DEFAULT 0,
    return_to_vendor_rv int DEFAULT 0,
    transfer_to_disposal_td int DEFAULT 0,
    adjusted_price numeric(37,15),
    gross_amount numeric(37,15),
    record_id int,
    file_id int,
    trx_count_normalized numeric(18,3)
);


CREATE TABLE datamart.xpd_core_metrics_antimigraine
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator int,
    ims_id varchar(10),
    tvcmid int,
    specialty varchar(10),
    ims_product_group varchar(3),
    basket_id int,
    basket_name varchar(300),
    rollup_period date,
    xpo_nrx numeric(37,15),
    xpo_trx numeric(37,15),
    unknown_nrx numeric(37,15),
    unknown_trx numeric(37,15),
    new_therapy_starts numeric(37,15),
    continued_new numeric(37,15),
    switch_to numeric(37,15),
    add_on numeric(37,15),
    restart_same_new numeric(37,15),
    restart_different numeric(37,15),
    continued_refill numeric(37,15),
    restart_same_refill numeric(37,15),
    switch_from numeric(37,15),
    restart_different_from numeric(37,15),
    add_to numeric(37,15),
    market_new_to_brand_rx numeric(37,15),
    dynamic_capture_rx numeric(37,15),
    record_id int,
    file_id int,
    report_frequency varchar(20)
);


CREATE TABLE datamart.xpd_demographics_antimigraine
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    ims_id varchar(10),
    tvcmid int,
    last_name varchar(40),
    first_name varchar(40),
    middle_name varchar(40),
    address_1 varchar(40),
    address_2 varchar(40),
    city varchar(40),
    state varchar(2),
    zip varchar(5),
    specialty varchar(3),
    specialty_description varchar(25),
    trx_decile_retail int,
    nrx_decile_retail int,
    nbrx_decile_retail int,
    trx_decile_mail int,
    nrx_decile_mail int,
    nbrx_decile_mail int,
    market_prescriber_reliability_retail varchar(2),
    market_prescriber_reliability_mail varchar(2),
    record_id int,
    file_id int,
    report_frequency varchar(20)
);


CREATE TABLE datamart.xpd_switch_details_antimigraine
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator int,
    ims_id varchar(10),
    tvcmid int,
    specialty varchar(10),
    switch_from_product_group_num varchar(3),
    switch_from_basket_id int,
    switch_from_basket_name varchar(300),
    switch_to_product_group_num varchar(3),
    switch_to_basket_id int,
    switch_to_basket_name varchar(300),
    rollup_period date,
    rx numeric(37,15),
    record_id int,
    file_id int,
    report_frequency varchar(20)
);


CREATE TABLE datamart.drm45_product_list
(
    file_location varchar(255),
    source_name varchar(255),
    file_code varchar(8),
    product_group varchar(8),
    product_name varchar(100),
    mfg_number varchar(10),
    status varchar(10),
    cmf_code varchar(20),
    product_description varchar(255),
    mfg_name varchar(100),
    usc_code varchar(10),
    file_id int,
    record_id int
);


CREATE TABLE datamart.activity_hub
(
    activity_id varchar(64),
    federation_id varchar(200),
    contact varchar(200),
    source_name varchar(100),
    "datetime" timestamp,
    trackback_id varchar(200),
    previous_activity varchar(64),
    level_name varchar(64),
    activity_role_name varchar(100),
    type_name varchar(100),
    native_type varchar(200),
    details varchar(200),
    line_item_id varchar(64),
    brand_name varchar(200),
    activity varchar(200),
    line_item_datetime timestamp,
    line_item_previous_line_item varchar(200),
    line_item_trackback_id varchar(200),
    line_item_details varchar(200),
    line_item_type_name varchar(100),
    line_item_native_type varchar(200),
    basket_id varchar(64),
    web_url varchar(5000)
);


CREATE TABLE datamart.xpd_add_on_details
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator int,
    ims_id varchar(10),
    tvcmid int,
    specialty varchar(10),
    addon_from_product_group_num varchar(3),
    addon_from_basket_id int,
    addon_from_basket_name varchar(300),
    addon_to_product_group_num varchar(3),
    addon_to_basket_id int,
    addon_to_basket_name varchar(300),
    rollup_period date,
    addon_rx numeric(37,15),
    report_frequency varchar(20),
    record_id int,
    file_id int
);


CREATE TABLE datamart.xpd_restart_diff_details
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator int,
    ims_id varchar(10),
    tvcmid int,
    specialty varchar(10),
    restart_from_product_group_num varchar(3),
    restart_from_basket_id int,
    restart_from_basket_name varchar(300),
    restart_to_product_group_num varchar(3),
    restart_to_basket_id int,
    restart_to_basket_name varchar(300),
    rollup_period date,
    restart_diff_rx numeric(37,15),
    report_frequency varchar(20),
    record_id int,
    file_id int
);


CREATE TABLE datamart.xpd_core_metrics_respiratory
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator int,
    ims_id varchar(10),
    tvcmid int,
    specialty varchar(10),
    ims_product_group varchar(3),
    basket_id int,
    basket_name varchar(300),
    rollup_period date,
    xpo_nrx numeric(37,15),
    xpo_trx numeric(37,15),
    unknown_nrx numeric(37,15),
    unknown_trx numeric(37,15),
    new_therapy_starts numeric(37,15),
    continued_new numeric(37,15),
    switch_to numeric(37,15),
    add_on numeric(37,15),
    restart_same_new numeric(37,15),
    restart_different numeric(37,15),
    continued_refill numeric(37,15),
    restart_same_refill numeric(37,15),
    switch_from numeric(37,15),
    restart_different_from numeric(37,15),
    add_to numeric(37,15),
    market_new_to_brand_rx numeric(37,15),
    dynamic_capture_rx numeric(37,15),
    record_id int,
    file_id int,
    report_frequency varchar(20)
);


CREATE TABLE datamart.xpd_demographics_respiratory
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    ims_id varchar(10),
    tvcmid int,
    last_name varchar(40),
    first_name varchar(40),
    middle_name varchar(40),
    address_1 varchar(40),
    address_2 varchar(40),
    city varchar(40),
    state varchar(2),
    zip varchar(5),
    specialty varchar(3),
    specialty_description varchar(25),
    trx_decile_retail int,
    nrx_decile_retail int,
    nbrx_decile_retail int,
    trx_decile_mail int,
    nrx_decile_mail int,
    nbrx_decile_mail int,
    market_prescriber_reliability_retail varchar(2),
    market_prescriber_reliability_mail varchar(2),
    record_id int,
    file_id int,
    report_frequency varchar(20)
);


CREATE TABLE datamart.xpd_switch_details_respiratory
(
    ims_client_number varchar(3),
    ims_report_number varchar(2),
    channel_indicator int,
    ims_id varchar(10),
    tvcmid int,
    specialty varchar(10),
    switch_from_product_group_num varchar(3),
    switch_from_basket_id int,
    switch_from_basket_name varchar(300),
    switch_to_product_group_num varchar(3),
    switch_to_basket_id int,
    switch_to_basket_name varchar(300),
    rollup_period date,
    rx numeric(37,15),
    record_id int,
    file_id int,
    report_frequency varchar(20)
);


CREATE TABLE datamart.ddd_adhoc
(
    outlet_code varchar(10),
    outlet_name varchar(100),
    outlet_zip varchar(10),
    ims_client_number varchar(5),
    ims_report_number varchar(5),
    report_frequency varchar(20),
    ims_product_code varchar(10),
    basket_id int,
    basket_name varchar(300),
    data_date date,
    date date,
    rollup_week date,
    rollup_month date,
    comp_month date,
    quantity float,
    file_id int,
    record_id int,
    market_name varchar(75),
    outlet_tvcmid int,
    sales_force_id varchar(2),
    category_code varchar(2),
    rollup_flag char(1),
    basket_type varchar(100),
    rollup_445_month date,
    dollars float,
    COUNT float,
    subcategory_code varchar(10)
);


CREATE TABLE datamart.fia_adhoc
(
    basket_id int,
    basket_name varchar(300),
    claim_id varchar(64),
    patient_id int,
    sequence_number int,
    product_id varchar(11),
    fill_date date,
    claim_type varchar(2),
    reject_code varchar(3),
    days_supply numeric(10,6),
    quantity varchar(12),
    refill_code int,
    payer_plan_id varchar(10),
    opc_ask varchar(10),
    sec_payer_plan_id varchar(10),
    buy_down varchar(11),
    opc_paid varchar(10),
    prescriber_id varchar(20),
    sob varchar(1),
    sub_product_id varchar(11),
    sub_opc varchar(10),
    initial_claim_id varchar(64),
    prev_product_id varchar(11),
    daw_code varchar(2),
    wrt_date date,
    claim_status varchar(1),
    copay_card_flg varchar(4),
    zip_code varchar(5),
    ecoup_flag int,
    ecoup_offset_amt numeric(10,2),
    standard_copay numeric(10,2),
    standard_copay_yn varchar(1),
    market_id int,
    flexible_fld_1_char varchar(50),
    flexible_fld_2_char varchar(50),
    flexible_fld_3_char varchar(50),
    flexible_fld_4_char varchar(50),
    file_id int,
    record_id int,
    cbsa_code varchar(5),
    cbsa_description varchar(100),
    state_code varchar(2),
    payer_name varchar(64),
    plan_name varchar(64),
    pbm_name varchar(60),
    pbm_id varchar(6),
    method_of_payment varchar(50),
    model_type varchar(64),
    product_group varchar(80),
    product_group_id int,
    product_name varchar(100),
    generic_name varchar(100),
    brand_generic_flag varchar(1),
    product_form varchar(100),
    product_strength varchar(100),
    package_size float,
    manufacturer varchar(100),
    cmf10 varchar(10),
    usc_code varchar(5),
    fia_market_desc varchar(50),
    reject_reason varchar(200),
    reject_group varchar(50),
    mpd_year int,
    mpd_eligibility_class varchar(11),
    deductible_start_date date,
    copay_start_date date,
    gap_start_date date,
    catastrophic_start_date date,
    mpd_panel_patient int,
    PROVIDER_TYPE varchar(2),
    IQVIA_RXER_ID varchar(7),
    PRIMARY_SPECIALTY_CODE varchar(10),
    PRIMARY_SPECIALTY_DESC varchar(100),
    FIRST_NAME varchar(100),
    LAST_NAME varchar(100),
    ORG_NM varchar(50),
    ADDRESS varchar(200),
    CITY varchar(100),
    PVR_ZIP_CODE varchar(5),
    PVR_STATE_CODE varchar(2),
    PHONE_NUMBER varchar(20),
    DEA_NUMBER varchar(20),
    ME_NUMBER varchar(20),
    PVR_FLEXIBLE_FLD_1_CHAR varchar(50),
    PVR_FLEXIBLE_FLD_2_CHAR varchar(50)
);


CREATE TABLE datamart.rh_coc_dc_ev_scripts
(
    source_file varchar(50),
    ndc_code varchar(15),
    brand_name varchar(50),
    basket_name varchar(100),
    refills numeric(10,0),
    new_refill varchar(15),
    claim_status varchar(15),
    pharmacy_state varchar(30),
    eVoucher_Status_Desc varchar(100),
    Copay_Range_Display_Order numeric(10,0),
    copay_range varchar(20),
    days_supply numeric(10,0),
    quantity numeric(10,0),
    Original_Copay numeric(10,0),
    eVoucher_Amount numeric(10,0),
    patient_expense numeric(10,0),
    patient_type varchar(15),
    Pharmacy_State_Type varchar(25),
    age_at_redemption varchar(25),
    Starter_Benefit_Ind varchar(5),
    Transaction_ID varchar(20),
    pharmacy_zip_3 numeric(5,0),
    fill_date date,
    processed_date date,
    patient_oop varchar(15),
    Denial_Voucher_amount varchar(15),
    Total_Admin_Fee varchar(15),
    Total_Due varchar(15),
    PAs_Submitted numeric(5,0),
    Pharmacy_Product_cost varchar(15),
    Manufacturer_Amount varchar(15),
    file_id int,
    record_id int
);


CREATE TABLE datamart.psrf_util_detailed_report
(
    DATA_Source varchar(15),
    Patient_ID varchar(50),
    HCP_NPI varchar(15),
    tvcmid int,
    Product varchar(50),
    PSRF_Date date,
    HCP_Signature_DATE date,
    Patient_Authorization_Date date,
    Script_triaged_to_Phmcy_Date date,
    Ship_Date date,
    Therapy_Start_Date date,
    PAP varchar(5),
    Prescriber_Name varchar(200),
    PrescriberCity varchar(50),
    PrescriberState varchar(25),
    PrescriberZip varchar(10),
    Field_1 varchar(50),
    Field_2 varchar(50),
    Field_3 varchar(50),
    Field_4 varchar(50),
    Field_5 varchar(50),
    record_id int,
    file_id int
);


CREATE TEMPORARY TABLE datamart.tmp_region_area_c
(
    territory_number varchar(8),
    area_number varchar(8),
    region_number varchar(8)
) ON COMMIT PRESERVE ROWS NO PROJECTION;


CREATE TEMPORARY TABLE datamart.tmp_call_hist_c
(
    id varchar(18),
    isdeleted varchar(5),
    parentid varchar(18),
    createdbyid varchar(18),
    createddate timestamptz,
    field varchar(255),
    oldvalue varchar(255),
    newvalue varchar(255),
    file_id int,
    record_id int,
    row_num int
) ON COMMIT PRESERVE ROWS NO PROJECTION;


CREATE TABLE datamart.titration_dosage
(
    TVCM_ID int,
    IMS_ID varchar(50),
    product_id int,
    PRODUCT_NAME varchar(50),
    Data_Type varchar(50),
    Avg_TD_Daily_Dose_New_Patient numeric(10,3),
    Avg_TD_Daily_Dose_Cont_Patient numeric(10,3),
    Data_Ending_Month date,
    file_id int
);


CREATE PROJECTION datamart.touchpoint_presentation_b0 /*+basename(touchpoint_presentation),createtype(L)*/ 
(
 call_id,
 call_attempt_id,
 presentation_id,
 product,
 "position",
 item_type,
 item_description,
 quantity,
 basket_id,
 basket_name,
 file_id,
 record_id
)
AS
 SELECT touchpoint_presentation.call_id,
        touchpoint_presentation.call_attempt_id,
        touchpoint_presentation.presentation_id,
        touchpoint_presentation.product,
        touchpoint_presentation."position",
        touchpoint_presentation.item_type,
        touchpoint_presentation.item_description,
        touchpoint_presentation.quantity,
        touchpoint_presentation.basket_id,
        touchpoint_presentation.basket_name,
        touchpoint_presentation.file_id,
        touchpoint_presentation.record_id
 FROM datamart.touchpoint_presentation
 ORDER BY touchpoint_presentation.call_id,
          touchpoint_presentation.call_attempt_id,
          touchpoint_presentation.presentation_id,
          touchpoint_presentation.product,
          touchpoint_presentation."position",
          touchpoint_presentation.item_type,
          touchpoint_presentation.item_description,
          touchpoint_presentation.quantity,
          touchpoint_presentation.basket_id,
          touchpoint_presentation.basket_name,
          touchpoint_presentation.file_id,
          touchpoint_presentation.record_id
SEGMENTED BY hash(touchpoint_presentation.record_id) ALL NODES;

CREATE PROJECTION datamart.mm_ram_to_rsm_b0 /*+basename(mm_ram_to_rsm),createtype(L)*/ 
(
 mm_ram,
 state,
 rsm
)
AS
 SELECT mm_ram_to_rsm.mm_ram,
        mm_ram_to_rsm.state,
        mm_ram_to_rsm.rsm
 FROM datamart.mm_ram_to_rsm
 ORDER BY mm_ram_to_rsm.mm_ram,
          mm_ram_to_rsm.state,
          mm_ram_to_rsm.rsm
SEGMENTED BY hash(mm_ram_to_rsm.mm_ram, mm_ram_to_rsm.state, mm_ram_to_rsm.rsm) ALL NODES;

CREATE PROJECTION datamart.call_plan_b0 /*+basename(call_plan)*/ 
(
 sales_force_id,
 period,
 veeva_account_id,
 ims_id,
 first_name,
 last_name,
 specialty,
 area_number,
 region_number,
 territory_number,
 basket_id,
 basket_name,
 p1,
 p2,
 p3,
 file_id,
 record_id,
 tvcmid,
 call_plan_group
)
AS
 SELECT call_plan.sales_force_id,
        call_plan.period,
        call_plan.veeva_account_id,
        call_plan.ims_id,
        call_plan.first_name,
        call_plan.last_name,
        call_plan.specialty,
        call_plan.area_number,
        call_plan.region_number,
        call_plan.territory_number,
        call_plan.basket_id,
        call_plan.basket_name,
        call_plan.p1,
        call_plan.p2,
        call_plan.p3,
        call_plan.file_id,
        call_plan.record_id,
        call_plan.tvcmid,
        call_plan.call_plan_group
 FROM datamart.call_plan
 ORDER BY call_plan.sales_force_id,
          call_plan.period,
          call_plan.veeva_account_id
SEGMENTED BY hash(call_plan.record_id) ALL NODES;

CREATE PROJECTION datamart.cmop_rx_b0 /*+basename(cmop_rx)*/ 
(
 data_month,
 comp_month,
 pharmacy,
 visn,
 station_number,
 station,
 va_product,
 basket_id,
 basket_name,
 cmop_rxs_raw,
 cmop_rxs_normalized,
 total_quantity,
 cmop_quantity,
 rxs_30_days,
 zip,
 id,
 file_id,
 record_id,
 rollup_flag,
 basket_type,
 total_rxs_normalized
)
AS
 SELECT cmop_rx.data_month,
        cmop_rx.comp_month,
        cmop_rx.pharmacy,
        cmop_rx.visn,
        cmop_rx.station_number,
        cmop_rx.station,
        cmop_rx.va_product,
        cmop_rx.basket_id,
        cmop_rx.basket_name,
        cmop_rx.cmop_rxs_raw,
        cmop_rx.cmop_rxs_normalized,
        cmop_rx.total_quantity,
        cmop_rx.cmop_quantity,
        cmop_rx.rxs_30_days,
        cmop_rx.zip,
        cmop_rx.id,
        cmop_rx.file_id,
        cmop_rx.record_id,
        cmop_rx.rollup_flag,
        cmop_rx.basket_type,
        cmop_rx.total_rxs_normalized
 FROM datamart.cmop_rx
 ORDER BY cmop_rx.data_month,
          cmop_rx.comp_month,
          cmop_rx.pharmacy,
          cmop_rx.visn,
          cmop_rx.station_number,
          cmop_rx.station,
          cmop_rx.va_product,
          cmop_rx.basket_id,
          cmop_rx.basket_name
SEGMENTED BY hash(cmop_rx.record_id) ALL NODES;

CREATE PROJECTION datamart.rems_pharmacy_b0 /*+basename(rems_pharmacy),createtype(L)*/ 
(
 enrollment_id,
 pharmacy_type,
 pharmacy_name,
 address_line_1,
 address_line_2,
 city,
 state,
 zip,
 phone,
 file_id,
 record_id,
 ncpdp,
 dea_num,
 status,
 license_number,
 obsolescence_reason,
 obsolescence_date,
 last_build_date,
 channel,
 effective_date,
 expiration_date,
 first_name,
 in_progress_step,
 last_name,
 middle_name,
 program_id,
 program_name
)
AS
 SELECT rems_pharmacy.enrollment_id,
        rems_pharmacy.pharmacy_type,
        rems_pharmacy.pharmacy_name,
        rems_pharmacy.address_line_1,
        rems_pharmacy.address_line_2,
        rems_pharmacy.city,
        rems_pharmacy.state,
        rems_pharmacy.zip,
        rems_pharmacy.phone,
        rems_pharmacy.file_id,
        rems_pharmacy.record_id,
        rems_pharmacy.ncpdp,
        rems_pharmacy.dea_num,
        rems_pharmacy.status,
        rems_pharmacy.license_number,
        rems_pharmacy.obsolescence_reason,
        rems_pharmacy.obsolescence_date,
        rems_pharmacy.last_build_date,
        rems_pharmacy.channel,
        rems_pharmacy.effective_date,
        rems_pharmacy.expiration_date,
        rems_pharmacy.first_name,
        rems_pharmacy.in_progress_step,
        rems_pharmacy.last_name,
        rems_pharmacy.middle_name,
        rems_pharmacy.program_id,
        rems_pharmacy.program_name
 FROM datamart.rems_pharmacy
 ORDER BY rems_pharmacy.enrollment_id,
          rems_pharmacy.pharmacy_type,
          rems_pharmacy.pharmacy_name,
          rems_pharmacy.address_line_1,
          rems_pharmacy.address_line_2,
          rems_pharmacy.city,
          rems_pharmacy.state,
          rems_pharmacy.zip,
          rems_pharmacy.phone,
          rems_pharmacy.file_id,
          rems_pharmacy.record_id
SEGMENTED BY hash(rems_pharmacy.record_id) ALL NODES;

CREATE PROJECTION datamart.customer_hco_demographics_b0 /*+basename(customer_hco_demographics),createtype(L)*/ 
(
 tvcmid,
 ims_org_id,
 npi,
 hin,
 outlet_code,
 business_name,
 address_line1,
 address_line2,
 city,
 state_code,
 zip,
 cot_classification,
 cot_facility_type,
 cot_specialty,
 file_id,
 record_id,
 address_id,
 address_latitude,
 address_longitude
)
AS
 SELECT customer_hco_demographics.tvcmid,
        customer_hco_demographics.ims_org_id,
        customer_hco_demographics.npi,
        customer_hco_demographics.hin,
        customer_hco_demographics.outlet_code,
        customer_hco_demographics.business_name,
        customer_hco_demographics.address_line1,
        customer_hco_demographics.address_line2,
        customer_hco_demographics.city,
        customer_hco_demographics.state_code,
        customer_hco_demographics.zip,
        customer_hco_demographics.cot_classification,
        customer_hco_demographics.cot_facility_type,
        customer_hco_demographics.cot_specialty,
        customer_hco_demographics.file_id,
        customer_hco_demographics.record_id,
        customer_hco_demographics.address_id,
        customer_hco_demographics.address_latitude,
        customer_hco_demographics.address_longitude
 FROM datamart.customer_hco_demographics
 ORDER BY customer_hco_demographics.tvcmid,
          customer_hco_demographics.ims_org_id,
          customer_hco_demographics.npi,
          customer_hco_demographics.hin,
          customer_hco_demographics.outlet_code,
          customer_hco_demographics.business_name,
          customer_hco_demographics.address_line1,
          customer_hco_demographics.address_line2,
          customer_hco_demographics.city,
          customer_hco_demographics.state_code,
          customer_hco_demographics.zip,
          customer_hco_demographics.cot_classification,
          customer_hco_demographics.cot_facility_type,
          customer_hco_demographics.cot_specialty,
          customer_hco_demographics.file_id,
          customer_hco_demographics.record_id
SEGMENTED BY hash(customer_hco_demographics.record_id) ALL NODES;

CREATE PROJECTION datamart.customer_level_flags_b0 /*+basename(customer_level_flags),createtype(L)*/ 
(
 tvcmid,
 basket_id,
 basket_name,
 territory_number,
 sales_force_id,
 flag_type,
 flag_value,
 flag_effective_start_date,
 flag_effective_end_date,
 file_id,
 record_id
)
AS
 SELECT customer_level_flags.tvcmid,
        customer_level_flags.basket_id,
        customer_level_flags.basket_name,
        customer_level_flags.territory_number,
        customer_level_flags.sales_force_id,
        customer_level_flags.flag_type,
        customer_level_flags.flag_value,
        customer_level_flags.flag_effective_start_date,
        customer_level_flags.flag_effective_end_date,
        customer_level_flags.file_id,
        customer_level_flags.record_id
 FROM datamart.customer_level_flags
 ORDER BY customer_level_flags.tvcmid,
          customer_level_flags.basket_id,
          customer_level_flags.basket_name,
          customer_level_flags.territory_number,
          customer_level_flags.sales_force_id,
          customer_level_flags.flag_type,
          customer_level_flags.flag_value,
          customer_level_flags.flag_effective_start_date,
          customer_level_flags.flag_effective_end_date,
          customer_level_flags.file_id,
          customer_level_flags.record_id
SEGMENTED BY hash(customer_level_flags.record_id) ALL NODES;

CREATE PROJECTION datamart.do_not_promote_b0 /*+basename(do_not_promote),createtype(L)*/ 
(
 tvcmid,
 first_name,
 last_name,
 zip
)
AS
 SELECT do_not_promote.tvcmid,
        do_not_promote.first_name,
        do_not_promote.last_name,
        do_not_promote.zip
 FROM datamart.do_not_promote
 ORDER BY do_not_promote.tvcmid,
          do_not_promote.first_name,
          do_not_promote.last_name,
          do_not_promote.zip
SEGMENTED BY hash(do_not_promote.tvcmid, do_not_promote.first_name, do_not_promote.last_name, do_not_promote.zip) ALL NODES;

CREATE PROJECTION datamart.tvcmid_crosswalk_b0 /*+basename(tvcmid_crosswalk),createtype(L)*/ 
(
 tvcmid,
 id_num,
 id_type,
 state,
 file_id,
 record_id,
 status
)
AS
 SELECT tvcmid_xref.tvcmid,
        tvcmid_xref.id_num,
        tvcmid_xref.id_type,
        tvcmid_xref.state,
        tvcmid_xref.file_id,
        tvcmid_xref.record_id,
        tvcmid_xref.status
 FROM datamart.tvcmid_xref
 ORDER BY tvcmid_xref.tvcmid,
          tvcmid_xref.id_num,
          tvcmid_xref.id_type,
          tvcmid_xref.state
SEGMENTED BY hash(tvcmid_xref.record_id) ALL NODES;

CREATE PROJECTION datamart.adjusted_oncology_sales_b0 /*+basename(adjusted_oncology_sales),createtype(L)*/ 
(
 acct_demo_id,
 outlet_name,
 outlet_zip,
 basket_id,
 basket_name,
 date,
 rollup_week,
 rollup_month,
 source_quantity,
 source_dollars,
 adjustment_quantity,
 adjustment_dollars,
 reported_quantity,
 reported_dollars,
 data_date,
 file_id,
 record_id,
 reported_trx_strength_units,
 report_frequency,
 rollup_flag,
 basket_type,
 rollup_445_month,
 tvcmid,
 sales_force_id,
 outlet_code
)
AS
 SELECT oncology_adjusted_sales.acct_demo_id,
        oncology_adjusted_sales.outlet_name,
        oncology_adjusted_sales.outlet_zip,
        oncology_adjusted_sales.basket_id,
        oncology_adjusted_sales.basket_name,
        oncology_adjusted_sales.date,
        oncology_adjusted_sales.rollup_week,
        oncology_adjusted_sales.rollup_month,
        oncology_adjusted_sales.source_quantity,
        oncology_adjusted_sales.source_dollars,
        oncology_adjusted_sales.adjustment_quantity,
        oncology_adjusted_sales.adjustment_dollars,
        oncology_adjusted_sales.reported_quantity,
        oncology_adjusted_sales.reported_dollars,
        oncology_adjusted_sales.data_date,
        oncology_adjusted_sales.file_id,
        oncology_adjusted_sales.record_id,
        oncology_adjusted_sales.reported_trx_strength_units,
        oncology_adjusted_sales.report_frequency,
        oncology_adjusted_sales.rollup_flag,
        oncology_adjusted_sales.basket_type,
        oncology_adjusted_sales.rollup_445_month,
        oncology_adjusted_sales.tvcmid,
        oncology_adjusted_sales.sales_force_id,
        oncology_adjusted_sales.outlet_code
 FROM datamart.oncology_adjusted_sales
 ORDER BY oncology_adjusted_sales.acct_demo_id,
          oncology_adjusted_sales.outlet_name,
          oncology_adjusted_sales.outlet_zip,
          oncology_adjusted_sales.basket_id,
          oncology_adjusted_sales.basket_name,
          oncology_adjusted_sales.date,
          oncology_adjusted_sales.rollup_week,
          oncology_adjusted_sales.rollup_month,
          oncology_adjusted_sales.source_quantity,
          oncology_adjusted_sales.source_dollars,
          oncology_adjusted_sales.adjustment_quantity,
          oncology_adjusted_sales.adjustment_dollars,
          oncology_adjusted_sales.reported_quantity,
          oncology_adjusted_sales.reported_dollars,
          oncology_adjusted_sales.data_date,
          oncology_adjusted_sales.file_id,
          oncology_adjusted_sales.record_id
SEGMENTED BY hash(oncology_adjusted_sales.record_id) ALL NODES;

CREATE PROJECTION datamart.sales_adjustments_b0 /*+basename(sales_adjustments),createtype(L)*/ 
(
 adjustment_type,
 adjustment_description,
 acct_demo_id,
 outlet_name,
 adjustment_month,
 adjustment_start_date,
 adjustment_end_date,
 basket_id,
 basket_name,
 adjustment_quantity,
 adjustment_dollars,
 tvcmid,
 outlet_code
)
AS
 SELECT oncology_sales_adjustments.adjustment_type,
        oncology_sales_adjustments.adjustment_description,
        oncology_sales_adjustments.acct_demo_id,
        oncology_sales_adjustments.outlet_name,
        oncology_sales_adjustments.adjustment_month,
        oncology_sales_adjustments.adjustment_start_date,
        oncology_sales_adjustments.adjustment_end_date,
        oncology_sales_adjustments.basket_id,
        oncology_sales_adjustments.basket_name,
        oncology_sales_adjustments.adjustment_quantity,
        oncology_sales_adjustments.adjustment_dollars,
        oncology_sales_adjustments.tvcmid,
        oncology_sales_adjustments.outlet_code
 FROM datamart.oncology_sales_adjustments
 ORDER BY oncology_sales_adjustments.adjustment_type,
          oncology_sales_adjustments.adjustment_description,
          oncology_sales_adjustments.acct_demo_id,
          oncology_sales_adjustments.outlet_name,
          oncology_sales_adjustments.adjustment_month,
          oncology_sales_adjustments.adjustment_start_date,
          oncology_sales_adjustments.adjustment_end_date,
          oncology_sales_adjustments.basket_id,
          oncology_sales_adjustments.basket_name,
          oncology_sales_adjustments.adjustment_quantity,
          oncology_sales_adjustments.adjustment_dollars
SEGMENTED BY hash(oncology_sales_adjustments.acct_demo_id) ALL NODES;

CREATE PROJECTION datamart.sp_enrollment_b0 /*+basename(sp_enrollment),createtype(L)*/ 
(
 specialty_pharmacy_name,
 patient_id,
 rx_received_date,
 insurance_information,
 most_recent_cml_treatment,
 basket_id,
 basket_name,
 date_of_discontinuation,
 reason_for_discontinuation,
 physician_last_name,
 physician_first_name,
 physician_address,
 physician_city,
 physician_state,
 physician_zip,
 file_id,
 record_id,
 tvcmid
)
AS
 SELECT specialty_pharmacy_enrollment.specialty_pharmacy_name,
        specialty_pharmacy_enrollment.patient_id,
        specialty_pharmacy_enrollment.rx_received_date,
        specialty_pharmacy_enrollment.insurance_information,
        specialty_pharmacy_enrollment.most_recent_cml_treatment,
        specialty_pharmacy_enrollment.basket_id,
        specialty_pharmacy_enrollment.basket_name,
        specialty_pharmacy_enrollment.date_of_discontinuation,
        specialty_pharmacy_enrollment.reason_for_discontinuation,
        specialty_pharmacy_enrollment.physician_last_name,
        specialty_pharmacy_enrollment.physician_first_name,
        specialty_pharmacy_enrollment.physician_address,
        specialty_pharmacy_enrollment.physician_city,
        specialty_pharmacy_enrollment.physician_state,
        specialty_pharmacy_enrollment.physician_zip,
        specialty_pharmacy_enrollment.file_id,
        specialty_pharmacy_enrollment.record_id,
        specialty_pharmacy_enrollment.tvcmid
 FROM datamart.specialty_pharmacy_enrollment
 ORDER BY specialty_pharmacy_enrollment.specialty_pharmacy_name,
          specialty_pharmacy_enrollment.patient_id,
          specialty_pharmacy_enrollment.rx_received_date,
          specialty_pharmacy_enrollment.insurance_information,
          specialty_pharmacy_enrollment.most_recent_cml_treatment,
          specialty_pharmacy_enrollment.basket_id,
          specialty_pharmacy_enrollment.basket_name,
          specialty_pharmacy_enrollment.date_of_discontinuation,
          specialty_pharmacy_enrollment.reason_for_discontinuation,
          specialty_pharmacy_enrollment.physician_last_name,
          specialty_pharmacy_enrollment.physician_first_name,
          specialty_pharmacy_enrollment.physician_address,
          specialty_pharmacy_enrollment.physician_city,
          specialty_pharmacy_enrollment.physician_state,
          specialty_pharmacy_enrollment.physician_zip,
          specialty_pharmacy_enrollment.file_id,
          specialty_pharmacy_enrollment.record_id
SEGMENTED BY hash(specialty_pharmacy_enrollment.record_id) ALL NODES;

CREATE PROJECTION datamart.chargebacks_b0 /*+basename(chargebacks),createtype(L)*/ 
(
 account_id,
 location_id,
 shipment_date,
 ndc_code,
 basket_id,
 basket_name,
 product_name,
 contract_id,
 chargeback_quantity,
 chargeback_amount,
 receipt_date,
 debit_memo_number,
 credit_memo_date,
 credit_memo_number,
 settlement_date,
 contract_price,
 file_id,
 record_id,
 unit_ap,
 ap,
 tvcmid
)
AS
 SELECT chargebacks.account_id,
        chargebacks.location_id,
        chargebacks.shipment_date,
        chargebacks.ndc_code,
        chargebacks.basket_id,
        chargebacks.basket_name,
        chargebacks.product_name,
        chargebacks.contract_id,
        chargebacks.chargeback_quantity,
        chargebacks.chargeback_amount,
        chargebacks.receipt_date,
        chargebacks.debit_memo_number,
        chargebacks.credit_memo_date,
        chargebacks.credit_memo_number,
        chargebacks.settlement_date,
        chargebacks.contract_price,
        chargebacks.file_id,
        chargebacks.record_id,
        chargebacks.unit_ap,
        chargebacks.ap,
        chargebacks.tvcmid
 FROM datamart.chargebacks
 ORDER BY chargebacks.account_id,
          chargebacks.location_id,
          chargebacks.shipment_date,
          chargebacks.ndc_code,
          chargebacks.basket_id,
          chargebacks.basket_name,
          chargebacks.product_name,
          chargebacks.contract_id,
          chargebacks.chargeback_quantity,
          chargebacks.chargeback_amount,
          chargebacks.receipt_date,
          chargebacks.debit_memo_number,
          chargebacks.credit_memo_date,
          chargebacks.credit_memo_number,
          chargebacks.settlement_date,
          chargebacks.contract_price,
          chargebacks.file_id,
          chargebacks.record_id
SEGMENTED BY hash(chargebacks.shipment_date, chargebacks.receipt_date, chargebacks.credit_memo_date, chargebacks.settlement_date, chargebacks.file_id, chargebacks.record_id, chargebacks.chargeback_quantity, chargebacks.chargeback_amount, chargebacks.contract_price, chargebacks.ndc_code, chargebacks.debit_memo_number, chargebacks.credit_memo_number, chargebacks.account_id, chargebacks.location_id, chargebacks.product_name, chargebacks.contract_id) ALL NODES;

CREATE PROJECTION datamart.sfa_reprints_b0 /*+basename(sfa_reprints),createtype(L)*/ 
(
 sales_force_id,
 territory_number,
 product_name,
 promo_item_id,
 promo_item_name,
 distribution_date,
 quantity,
 reprint_name,
 reprint_id,
 call_id,
 veeva_sample_id,
 rep_id,
 rep_first_name,
 rep_last_name,
 veeva_account_id,
 ims_id,
 prescriber_first_name,
 prescriber_last_name,
 name_on_call,
 zip_on_call,
 area_number,
 region_number,
 tvcmid,
 basket_id,
 basket_name
)
AS
 SELECT sfa_reprints.sales_force_id,
        sfa_reprints.territory_number,
        sfa_reprints.product_name,
        sfa_reprints.promo_item_id,
        sfa_reprints.promo_item_name,
        sfa_reprints.distribution_date,
        sfa_reprints.quantity,
        sfa_reprints.reprint_name,
        sfa_reprints.reprint_id,
        sfa_reprints.call_id,
        sfa_reprints.veeva_sample_id,
        sfa_reprints.rep_id,
        sfa_reprints.rep_first_name,
        sfa_reprints.rep_last_name,
        sfa_reprints.veeva_account_id,
        sfa_reprints.ims_id,
        sfa_reprints.prescriber_first_name,
        sfa_reprints.prescriber_last_name,
        sfa_reprints.name_on_call,
        sfa_reprints.zip_on_call,
        sfa_reprints.area_number,
        sfa_reprints.region_number,
        sfa_reprints.tvcmid,
        sfa_reprints.basket_id,
        sfa_reprints.basket_name
 FROM datamart.sfa_reprints
 ORDER BY sfa_reprints.sales_force_id,
          sfa_reprints.territory_number,
          sfa_reprints.product_name,
          sfa_reprints.promo_item_id,
          sfa_reprints.promo_item_name,
          sfa_reprints.distribution_date,
          sfa_reprints.quantity,
          sfa_reprints.reprint_name,
          sfa_reprints.reprint_id,
          sfa_reprints.call_id,
          sfa_reprints.veeva_sample_id,
          sfa_reprints.rep_id,
          sfa_reprints.rep_first_name,
          sfa_reprints.rep_last_name,
          sfa_reprints.veeva_account_id,
          sfa_reprints.ims_id
SEGMENTED BY hash(sfa_reprints.distribution_date) ALL NODES;

CREATE PROJECTION datamart.sfa_sample_b0 /*+basename(sfa_sample),createtype(L)*/ 
(
 sample_id,
 call_id,
 veeva_account_id,
 ims_id,
 call_date,
 sales_force_id,
 territory_number,
 call_type,
 attendee_type,
 customer_type,
 sample_type,
 product_name,
 sample_name,
 sample_ndc,
 basket_id,
 basket_name,
 qty,
 name_on_call,
 zip_on_call,
 dea_num,
 ownerid,
 employee_number,
 employee_first_name,
 employee_last_name,
 parent_call_id,
 created_by,
 created_date,
 area_number,
 region_number,
 tvcmid,
 how_executed
)
AS
 SELECT sfa_sample.sample_id,
        sfa_sample.call_id,
        sfa_sample.veeva_account_id,
        sfa_sample.ims_id,
        sfa_sample.call_date,
        sfa_sample.sales_force_id,
        sfa_sample.territory_number,
        sfa_sample.call_type,
        sfa_sample.attendee_type,
        sfa_sample.customer_type,
        sfa_sample.sample_type,
        sfa_sample.product_name,
        sfa_sample.sample_name,
        sfa_sample.sample_ndc,
        sfa_sample.basket_id,
        sfa_sample.basket_name,
        sfa_sample.qty,
        sfa_sample.name_on_call,
        sfa_sample.zip_on_call,
        sfa_sample.dea_num,
        sfa_sample.ownerid,
        sfa_sample.employee_number,
        sfa_sample.employee_first_name,
        sfa_sample.employee_last_name,
        sfa_sample.parent_call_id,
        sfa_sample.created_by,
        sfa_sample.created_date,
        sfa_sample.area_number,
        sfa_sample.region_number,
        sfa_sample.tvcmid,
        sfa_sample.how_executed
 FROM datamart.sfa_sample
 ORDER BY sfa_sample.sample_id,
          sfa_sample.call_id,
          sfa_sample.veeva_account_id
SEGMENTED BY hash(sfa_sample.call_date, sfa_sample.created_date) ALL NODES;

CREATE PROJECTION datamart.affiliations_b0 /*+basename(affiliations),createtype(L)*/ 
(
 ims_org_id,
 business_name,
 hce_id_prfsnl,
 professional_id,
 ims_id,
 first_name,
 last_name,
 affiliation_type_code,
 affiliation_type_description,
 affiliation_group_description,
 affiliation_indicator,
 affiliation_rank,
 file_id,
 record_id,
 professional_tvcmid,
 org_tvcmid
)
AS
 SELECT affiliations.ims_org_id,
        affiliations.business_name,
        affiliations.hce_id_prfsnl,
        affiliations.professional_id,
        affiliations.ims_id,
        affiliations.first_name,
        affiliations.last_name,
        affiliations.affiliation_type_code,
        affiliations.affiliation_type_description,
        affiliations.affiliation_group_description,
        affiliations.affiliation_indicator,
        affiliations.affiliation_rank,
        affiliations.file_id,
        affiliations.record_id,
        affiliations.professional_tvcmid,
        affiliations.org_tvcmid
 FROM datamart.affiliations
 ORDER BY affiliations.ims_org_id
SEGMENTED BY hash(affiliations.record_id) ALL NODES;

CREATE PROJECTION datamart.aggregated_activity_b0 /*+basename(aggregated_activity),createtype(L)*/ 
(
 aggregated_id,
 level,
 federation_id,
 source_name,
 contact,
 originating_id,
 prior_activity,
 activity_role_name,
 count,
 aggregated_type_name,
 file_id,
 record_id
)
AS
 SELECT aggregated_activity.aggregated_id,
        aggregated_activity.level,
        aggregated_activity.federation_id,
        aggregated_activity.source_name,
        aggregated_activity.contact,
        aggregated_activity.originating_id,
        aggregated_activity.prior_activity,
        aggregated_activity.activity_role_name,
        aggregated_activity.count,
        aggregated_activity.aggregated_type_name,
        aggregated_activity.file_id,
        aggregated_activity.record_id
 FROM datamart.aggregated_activity
 ORDER BY aggregated_activity.aggregated_id,
          aggregated_activity.level,
          aggregated_activity.federation_id,
          aggregated_activity.source_name,
          aggregated_activity.contact,
          aggregated_activity.originating_id,
          aggregated_activity.prior_activity,
          aggregated_activity.activity_role_name,
          aggregated_activity.count,
          aggregated_activity.aggregated_type_name,
          aggregated_activity.file_id,
          aggregated_activity.record_id
SEGMENTED BY hash(aggregated_activity.count, aggregated_activity.file_id, aggregated_activity.record_id, aggregated_activity.aggregated_id, aggregated_activity.level, aggregated_activity.prior_activity, aggregated_activity.source_name, aggregated_activity.activity_role_name, aggregated_activity.aggregated_type_name, aggregated_activity.federation_id, aggregated_activity.contact, aggregated_activity.originating_id) ALL NODES;

CREATE PROJECTION datamart.psr_enrollment_b0 /*+basename(psr_enrollment),createtype(L)*/ 
(
 veeva_account_id,
 ims_id,
 npi,
 tvcmid,
 basket_name,
 basket_id,
 indication,
 prescriber_last_name,
 prescriber_first_name,
 prescriber_middle_name,
 specialty_code,
 prescriber_date,
 in_progress_count,
 completed_count,
 cancelled_count,
 prescriber_count,
 week_ending,
 file_id,
 record_id
)
AS
 SELECT psr_enrollment.veeva_account_id,
        psr_enrollment.ims_id,
        psr_enrollment.npi,
        psr_enrollment.tvcmid,
        psr_enrollment.basket_name,
        psr_enrollment.basket_id,
        psr_enrollment.indication,
        psr_enrollment.prescriber_last_name,
        psr_enrollment.prescriber_first_name,
        psr_enrollment.prescriber_middle_name,
        psr_enrollment.specialty_code,
        psr_enrollment.prescriber_date,
        psr_enrollment.in_progress_count,
        psr_enrollment.completed_count,
        psr_enrollment.cancelled_count,
        psr_enrollment.prescriber_count,
        psr_enrollment.week_ending,
        psr_enrollment.file_id,
        psr_enrollment.record_id
 FROM datamart.psr_enrollment
 ORDER BY psr_enrollment.veeva_account_id,
          psr_enrollment.ims_id,
          psr_enrollment.npi,
          psr_enrollment.tvcmid,
          psr_enrollment.basket_name,
          psr_enrollment.basket_id,
          psr_enrollment.indication,
          psr_enrollment.prescriber_last_name,
          psr_enrollment.prescriber_first_name,
          psr_enrollment.prescriber_middle_name,
          psr_enrollment.specialty_code,
          psr_enrollment.prescriber_date,
          psr_enrollment.in_progress_count,
          psr_enrollment.completed_count,
          psr_enrollment.cancelled_count,
          psr_enrollment.prescriber_count,
          psr_enrollment.week_ending,
          psr_enrollment.file_id,
          psr_enrollment.record_id
SEGMENTED BY hash(psr_enrollment.npi) ALL NODES;

CREATE PROJECTION datamart.psr_enrollment_rej_b0 /*+basename(psr_enrollment_rej),createtype(L)*/ 
(
 file_id,
 record_id,
 null_npi,
 null_lkp_veeva_id,
 null_lkp_ims_id,
 count_mismatch,
 week_ending,
 npi
)
AS
 SELECT psr_enrollment_rej.file_id,
        psr_enrollment_rej.record_id,
        psr_enrollment_rej.null_npi,
        psr_enrollment_rej.null_lkp_veeva_id,
        psr_enrollment_rej.null_lkp_ims_id,
        psr_enrollment_rej.count_mismatch,
        psr_enrollment_rej.week_ending,
        psr_enrollment_rej.npi
 FROM datamart.psr_enrollment_rej
 ORDER BY psr_enrollment_rej.file_id,
          psr_enrollment_rej.record_id,
          psr_enrollment_rej.null_npi,
          psr_enrollment_rej.null_lkp_veeva_id,
          psr_enrollment_rej.null_lkp_ims_id,
          psr_enrollment_rej.count_mismatch,
          psr_enrollment_rej.week_ending
SEGMENTED BY hash(psr_enrollment_rej.file_id, psr_enrollment_rej.record_id, psr_enrollment_rej.null_npi, psr_enrollment_rej.null_lkp_veeva_id, psr_enrollment_rej.null_lkp_ims_id, psr_enrollment_rej.count_mismatch, psr_enrollment_rej.week_ending) ALL NODES;

CREATE PROJECTION datamart.patient_months_count_b0 /*+basename(patient_months_count),createtype(L)*/ 
(
 tvcmid,
 ims_id,
 npi,
 ims_surrogate_patient_id,
 basket_id,
 basket_name,
 indication,
 approved_indication,
 rollup_shipment_month,
 patient_months,
 dispense_type_code,
 dispense_type
)
AS
 SELECT patient_months_count.tvcmid,
        patient_months_count.ims_id,
        patient_months_count.npi,
        patient_months_count.ims_surrogate_patient_id,
        patient_months_count.basket_id,
        patient_months_count.basket_name,
        patient_months_count.indication,
        patient_months_count.approved_indication,
        patient_months_count.rollup_shipment_month,
        patient_months_count.patient_months,
        patient_months_count.dispense_type_code,
        patient_months_count.dispense_type
 FROM datamart.patient_months_count
 ORDER BY patient_months_count.tvcmid
SEGMENTED BY hash(patient_months_count.tvcmid, patient_months_count.basket_id, patient_months_count.approved_indication, patient_months_count.rollup_shipment_month, patient_months_count.ims_id, patient_months_count.patient_months, patient_months_count.npi, patient_months_count.ims_surrogate_patient_id, patient_months_count.indication, patient_months_count.dispense_type_code, patient_months_count.basket_name, patient_months_count.dispense_type) ALL NODES;

CREATE PROJECTION datamart.ahm_unnamedparticipant_b0 /*+basename(ahm_unnamedparticipant),createtype(L)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 particpantcategoryid,
 categorytype,
 totalattendedcount,
 totalmealconsumedcount,
 record_id,
 file_id
)
AS
 SELECT ahm_unnamedparticipant.sourcesystemid,
        ahm_unnamedparticipant.batchid,
        ahm_unnamedparticipant.batchdate,
        ahm_unnamedparticipant.transactionstatuscode,
        ahm_unnamedparticipant.interactionid,
        ahm_unnamedparticipant.interactioncode,
        ahm_unnamedparticipant.particpantcategoryid,
        ahm_unnamedparticipant.categorytype,
        ahm_unnamedparticipant.totalattendedcount,
        ahm_unnamedparticipant.totalmealconsumedcount,
        ahm_unnamedparticipant.record_id,
        ahm_unnamedparticipant.file_id
 FROM datamart.ahm_unnamedparticipant
 ORDER BY ahm_unnamedparticipant.particpantcategoryid
SEGMENTED BY hash(ahm_unnamedparticipant.batchdate, ahm_unnamedparticipant.transactionstatuscode, ahm_unnamedparticipant.totalattendedcount, ahm_unnamedparticipant.totalmealconsumedcount, ahm_unnamedparticipant.record_id, ahm_unnamedparticipant.file_id, ahm_unnamedparticipant.sourcesystemid, ahm_unnamedparticipant.batchid, ahm_unnamedparticipant.interactionid, ahm_unnamedparticipant.particpantcategoryid, ahm_unnamedparticipant.interactioncode, ahm_unnamedparticipant.categorytype) ALL NODES;

CREATE PROJECTION datamart.rems_prescriber_b0 /*+basename(rems_prescriber),createtype(L)*/ 
(
 first_name,
 last_name,
 site_name,
 address_line_1,
 address_line_2,
 city,
 state,
 zip,
 phone,
 npi,
 dea_num,
 file_id,
 record_id,
 enrollment_id,
 program_id,
 program_name,
 status,
 in_progress_step,
 effective_date,
 expiration_date,
 prescriber_tvcmid,
 ppaf_count,
 channel,
 middle_name,
 obsolescence_date
)
AS
 SELECT rems_prescriber.first_name,
        rems_prescriber.last_name,
        rems_prescriber.site_name,
        rems_prescriber.address_line_1,
        rems_prescriber.address_line_2,
        rems_prescriber.city,
        rems_prescriber.state,
        rems_prescriber.zip,
        rems_prescriber.phone,
        rems_prescriber.npi,
        rems_prescriber.dea_num,
        rems_prescriber.file_id,
        rems_prescriber.record_id,
        rems_prescriber.enrollment_id,
        rems_prescriber.program_id,
        rems_prescriber.program_name,
        rems_prescriber.status,
        rems_prescriber.in_progress_step,
        rems_prescriber.effective_date,
        rems_prescriber.expiration_date,
        rems_prescriber.prescriber_tvcmid,
        rems_prescriber.ppaf_count,
        rems_prescriber.channel,
        rems_prescriber.middle_name,
        rems_prescriber.obsolescence_date
 FROM datamart.rems_prescriber
 ORDER BY rems_prescriber.first_name,
          rems_prescriber.last_name,
          rems_prescriber.site_name,
          rems_prescriber.address_line_1,
          rems_prescriber.address_line_2,
          rems_prescriber.city,
          rems_prescriber.state,
          rems_prescriber.zip,
          rems_prescriber.phone,
          rems_prescriber.npi,
          rems_prescriber.dea_num,
          rems_prescriber.file_id,
          rems_prescriber.record_id,
          rems_prescriber.enrollment_id,
          rems_prescriber.program_id,
          rems_prescriber.program_name,
          rems_prescriber.status,
          rems_prescriber.in_progress_step,
          rems_prescriber.effective_date,
          rems_prescriber.expiration_date,
          rems_prescriber.prescriber_tvcmid,
          rems_prescriber.ppaf_count,
          rems_prescriber.channel,
          rems_prescriber.middle_name,
          rems_prescriber.obsolescence_date
SEGMENTED BY hash(rems_prescriber.state, rems_prescriber.zip, rems_prescriber.file_id, rems_prescriber.record_id, rems_prescriber.effective_date, rems_prescriber.expiration_date, rems_prescriber.prescriber_tvcmid, rems_prescriber.ppaf_count, rems_prescriber.obsolescence_date, rems_prescriber.phone, rems_prescriber.npi, rems_prescriber.program_id, rems_prescriber.dea_num, rems_prescriber.enrollment_id, rems_prescriber.channel, rems_prescriber.first_name, rems_prescriber.middle_name, rems_prescriber.last_name, rems_prescriber.address_line_2, rems_prescriber.city, rems_prescriber.in_progress_step, rems_prescriber.program_name, rems_prescriber.address_line_1, rems_prescriber.status, rems_prescriber.site_name) ALL NODES;

CREATE PROJECTION datamart.plantrak_workbook_super__v1a17Q3
(
 payer_number,
 payer_name,
 payer_parent_number,
 payer_parent_name,
 plan_number,
 payer_plan_number,
 plan_name,
 model,
 method_of_payment,
 city,
 hq_state,
 operating_state,
 months_with_data,
 pbm_number,
 pbm_name,
 pbm_parent,
 pbm_parent_name,
 file_id ENCODING COMMONDELTA_COMP,
 record_id ENCODING COMMONDELTA_COMP
)
AS
 SELECT plantrak_workbook.payer_number,
        plantrak_workbook.payer_name,
        plantrak_workbook.payer_parent_number,
        plantrak_workbook.payer_parent_name,
        plantrak_workbook.plan_number,
        plantrak_workbook.payer_plan_number,
        plantrak_workbook.plan_name,
        plantrak_workbook.model,
        plantrak_workbook.method_of_payment,
        plantrak_workbook.city,
        plantrak_workbook.hq_state,
        plantrak_workbook.operating_state,
        plantrak_workbook.months_with_data,
        plantrak_workbook.pbm_number,
        plantrak_workbook.pbm_name,
        plantrak_workbook.pbm_parent,
        plantrak_workbook.pbm_parent_name,
        plantrak_workbook.file_id,
        plantrak_workbook.record_id
 FROM datamart.plantrak_workbook
 ORDER BY plantrak_workbook.payer_plan_number
UNSEGMENTED ALL NODES;

CREATE PROJECTION datamart.dddmd_demographics_detail_b0 /*+basename(dddmd_demographics_detail),createtype(A)*/ 
(
 account_demo_id,
 outlet_code,
 ims_facility_number,
 ims_prescriber_number,
 category_code,
 subcategory_code,
 alignment_zip,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 facility_name,
 facility_address1,
 facility_address2,
 facility_address3,
 facility_address4,
 facility_city,
 facility_state,
 facility_zip,
 prescriber_name,
 prescriber_address1,
 prescriber_address2,
 prescriber_address3,
 prescriber_address4,
 prescriber_city,
 prescriber_state,
 prescriber_zip,
 account_status,
 tvcmid,
 sales_force_id,
 outlet_tvcmid,
 facility_tvcmid,
 prescriber_tvcmid,
 tvcmid_assignment_rule
)
AS
 SELECT dddmd_demographics_detail.account_demo_id,
        dddmd_demographics_detail.outlet_code,
        dddmd_demographics_detail.ims_facility_number,
        dddmd_demographics_detail.ims_prescriber_number,
        dddmd_demographics_detail.category_code,
        dddmd_demographics_detail.subcategory_code,
        dddmd_demographics_detail.alignment_zip,
        dddmd_demographics_detail.outlet_name,
        dddmd_demographics_detail.outlet_address,
        dddmd_demographics_detail.outlet_city,
        dddmd_demographics_detail.outlet_state,
        dddmd_demographics_detail.outlet_zip,
        dddmd_demographics_detail.facility_name,
        dddmd_demographics_detail.facility_address1,
        dddmd_demographics_detail.facility_address2,
        dddmd_demographics_detail.facility_address3,
        dddmd_demographics_detail.facility_address4,
        dddmd_demographics_detail.facility_city,
        dddmd_demographics_detail.facility_state,
        dddmd_demographics_detail.facility_zip,
        dddmd_demographics_detail.prescriber_name,
        dddmd_demographics_detail.prescriber_address1,
        dddmd_demographics_detail.prescriber_address2,
        dddmd_demographics_detail.prescriber_address3,
        dddmd_demographics_detail.prescriber_address4,
        dddmd_demographics_detail.prescriber_city,
        dddmd_demographics_detail.prescriber_state,
        dddmd_demographics_detail.prescriber_zip,
        dddmd_demographics_detail.account_status,
        dddmd_demographics_detail.tvcmid,
        dddmd_demographics_detail.sales_force_id,
        dddmd_demographics_detail.outlet_tvcmid,
        dddmd_demographics_detail.facility_tvcmid,
        dddmd_demographics_detail.prescriber_tvcmid,
        dddmd_demographics_detail.tvcmid_assignment_rule
 FROM datamart.dddmd_demographics_detail
 ORDER BY dddmd_demographics_detail.account_demo_id,
          dddmd_demographics_detail.outlet_code,
          dddmd_demographics_detail.ims_facility_number,
          dddmd_demographics_detail.ims_prescriber_number,
          dddmd_demographics_detail.category_code,
          dddmd_demographics_detail.subcategory_code,
          dddmd_demographics_detail.alignment_zip,
          dddmd_demographics_detail.outlet_name,
          dddmd_demographics_detail.outlet_address,
          dddmd_demographics_detail.outlet_city,
          dddmd_demographics_detail.outlet_state,
          dddmd_demographics_detail.outlet_zip,
          dddmd_demographics_detail.facility_name,
          dddmd_demographics_detail.facility_address1,
          dddmd_demographics_detail.facility_address2,
          dddmd_demographics_detail.facility_address3,
          dddmd_demographics_detail.facility_address4,
          dddmd_demographics_detail.facility_city,
          dddmd_demographics_detail.facility_state,
          dddmd_demographics_detail.facility_zip,
          dddmd_demographics_detail.prescriber_name,
          dddmd_demographics_detail.prescriber_address1,
          dddmd_demographics_detail.prescriber_address2,
          dddmd_demographics_detail.prescriber_address3,
          dddmd_demographics_detail.prescriber_address4,
          dddmd_demographics_detail.prescriber_city,
          dddmd_demographics_detail.prescriber_state,
          dddmd_demographics_detail.prescriber_zip,
          dddmd_demographics_detail.account_status,
          dddmd_demographics_detail.tvcmid,
          dddmd_demographics_detail.sales_force_id
SEGMENTED BY hash(dddmd_demographics_detail.account_demo_id, dddmd_demographics_detail.ims_prescriber_number, dddmd_demographics_detail.subcategory_code, dddmd_demographics_detail.alignment_zip, dddmd_demographics_detail.outlet_state, dddmd_demographics_detail.outlet_zip, dddmd_demographics_detail.facility_state, dddmd_demographics_detail.facility_zip, dddmd_demographics_detail.prescriber_state, dddmd_demographics_detail.prescriber_zip, dddmd_demographics_detail.account_status, dddmd_demographics_detail.tvcmid, dddmd_demographics_detail.sales_force_id, dddmd_demographics_detail.outlet_code, dddmd_demographics_detail.category_code, dddmd_demographics_detail.ims_facility_number, dddmd_demographics_detail.outlet_city, dddmd_demographics_detail.facility_city, dddmd_demographics_detail.prescriber_city, dddmd_demographics_detail.facility_address1, dddmd_demographics_detail.facility_address2, dddmd_demographics_detail.facility_address3, dddmd_demographics_detail.facility_address4, dddmd_demographics_detail.prescriber_address1, dddmd_demographics_detail.prescriber_address2, dddmd_demographics_detail.prescriber_address3, dddmd_demographics_detail.prescriber_address4, dddmd_demographics_detail.outlet_name, dddmd_demographics_detail.facility_name, dddmd_demographics_detail.prescriber_name, dddmd_demographics_detail.outlet_address) ALL NODES;

CREATE PROJECTION datamart.patient_response_b0 /*+basename(patient_response),createtype(L)*/ 
(
 basket_id,
 basket_name,
 tvcmid,
 week_end_date,
 practice_name,
 practice_address_line_1,
 practice_address_line_2,
 city,
 state,
 zip_code,
 provider_first_name,
 provider_last_name,
 npi,
 specialty_1,
 specialty_2,
 total_cml_patients_with_poor_response_to_treatment,
 pts_with_moderate_severe_asthma_and_eosinophils_0_149,
 pts_with_moderate_severe_asthma_and_eosinophils_150_399,
 pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
 pts_with_ao_asthma_and_eosinophils_0_149,
 pts_with_ao_asthma_and_eosinophils_150_399,
 pts_with_ao_asthma_and_eosinophils_400_or_greater,
 file_id,
 record_id,
 pts_with_moderate_severe_asthma_and_has_eosinophils_300_499,
 pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater
)
AS
 SELECT patient_response.basket_id,
        patient_response.basket_name,
        patient_response.tvcmid,
        patient_response.week_end_date,
        patient_response.practice_name,
        patient_response.practice_address_line_1,
        patient_response.practice_address_line_2,
        patient_response.city,
        patient_response.state,
        patient_response.zip_code,
        patient_response.provider_first_name,
        patient_response.provider_last_name,
        patient_response.npi,
        patient_response.specialty_1,
        patient_response.specialty_2,
        patient_response.total_cml_patients_with_poor_response_to_treatment,
        patient_response.pts_with_moderate_severe_asthma_and_eosinophils_0_149,
        patient_response.pts_with_moderate_severe_asthma_and_eosinophils_150_399,
        patient_response.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
        patient_response.pts_with_ao_asthma_and_eosinophils_0_149,
        patient_response.pts_with_ao_asthma_and_eosinophils_150_399,
        patient_response.pts_with_ao_asthma_and_eosinophils_400_or_greater,
        patient_response.file_id,
        patient_response.record_id,
        patient_response.pts_with_moderate_severe_asthma_and_has_eosinophils_300_499,
        patient_response.pts_with_moderate_severe_asthma_and_has_eosinophils_500_or_greater
 FROM datamart.patient_response
 ORDER BY patient_response.basket_id,
          patient_response.basket_name,
          patient_response.tvcmid,
          patient_response.week_end_date,
          patient_response.practice_name,
          patient_response.practice_address_line_1,
          patient_response.practice_address_line_2,
          patient_response.city,
          patient_response.state,
          patient_response.zip_code,
          patient_response.provider_first_name,
          patient_response.provider_last_name,
          patient_response.npi,
          patient_response.specialty_1,
          patient_response.specialty_2,
          patient_response.total_cml_patients_with_poor_response_to_treatment,
          patient_response.pts_with_moderate_severe_asthma_and_eosinophils_0_149,
          patient_response.pts_with_moderate_severe_asthma_and_eosinophils_150_399,
          patient_response.pts_with_moderate_severe_asthma_and_eosinophils_400_or_greater,
          patient_response.pts_with_ao_asthma_and_eosinophils_0_149,
          patient_response.pts_with_ao_asthma_and_eosinophils_150_399,
          patient_response.pts_with_ao_asthma_and_eosinophils_400_or_greater,
          patient_response.file_id,
          patient_response.record_id
SEGMENTED BY hash(patient_response.npi) ALL NODES;

CREATE PROJECTION datamart.prescriber_rx_qty_base__super__v1g17Q3_b0 /*+basename(prescriber_rx_qty_base__super__v1g17Q3),createtype(D)*/ 
(
 ims_id ENCODING RLE,
 payer_plan_number,
 ims_client_number ENCODING RLE,
 report_frequency ENCODING RLE,
 ims_product_group ENCODING RLE,
 basket_id ENCODING RLE,
 data_date ENCODING RLE,
 date ENCODING COMMONDELTA_COMP,
 sales_category,
 tvcmid ENCODING DELTARANGE_COMP,
 prescriber_first_name ENCODING GZIP_COMP,
 prescriber_last_name ENCODING GZIP_COMP,
 basket_name,
 basket_type ENCODING RLE,
 rollup_week ENCODING COMMONDELTA_COMP,
 rollup_month ENCODING COMMONDELTA_COMP,
 nrx_count ENCODING DELTARANGE_COMP,
 trx_count ENCODING DELTARANGE_COMP,
 nrx_quantity ENCODING DELTARANGE_COMP,
 trx_quantity ENCODING DELTARANGE_COMP,
 unnormalized_nrx_count ENCODING DELTARANGE_COMP,
 unnormalized_trx_count ENCODING DELTARANGE_COMP,
 market_name,
 payer_name,
 plan_name,
 pbm_name,
 model,
 payment_method,
 ims_specialty,
 ims_rx_type ENCODING RLE,
 ims_supplemental_data,
 zip_other,
 ims_report_number ENCODING RLE,
 file_id ENCODING COMMONDELTA_COMP,
 record_id ENCODING DELTARANGE_COMP,
 ims_report_number_cnt ENCODING RLE,
 indication ENCODING RLE,
 pbm_parent_name,
 load_step
)
AS
 SELECT prescriber_rx_qty_base.ims_id,
        prescriber_rx_qty_base.payer_plan_number,
        prescriber_rx_qty_base.ims_client_number,
        prescriber_rx_qty_base.report_frequency,
        prescriber_rx_qty_base.ims_product_group,
        prescriber_rx_qty_base.basket_id,
        prescriber_rx_qty_base.data_date,
        prescriber_rx_qty_base.date,
        prescriber_rx_qty_base.sales_category,
        prescriber_rx_qty_base.tvcmid,
        prescriber_rx_qty_base.prescriber_first_name,
        prescriber_rx_qty_base.prescriber_last_name,
        prescriber_rx_qty_base.basket_name,
        prescriber_rx_qty_base.basket_type,
        prescriber_rx_qty_base.rollup_week,
        prescriber_rx_qty_base.rollup_month,
        prescriber_rx_qty_base.nrx_count,
        prescriber_rx_qty_base.trx_count,
        prescriber_rx_qty_base.nrx_quantity,
        prescriber_rx_qty_base.trx_quantity,
        prescriber_rx_qty_base.unnormalized_nrx_count,
        prescriber_rx_qty_base.unnormalized_trx_count,
        prescriber_rx_qty_base.market_name,
        prescriber_rx_qty_base.payer_name,
        prescriber_rx_qty_base.plan_name,
        prescriber_rx_qty_base.pbm_name,
        prescriber_rx_qty_base.model,
        prescriber_rx_qty_base.payment_method,
        prescriber_rx_qty_base.ims_specialty,
        prescriber_rx_qty_base.ims_rx_type,
        prescriber_rx_qty_base.ims_supplemental_data,
        prescriber_rx_qty_base.zip_other,
        prescriber_rx_qty_base.ims_report_number,
        prescriber_rx_qty_base.file_id,
        prescriber_rx_qty_base.record_id,
        prescriber_rx_qty_base.ims_report_number_cnt,
        prescriber_rx_qty_base.indication,
        prescriber_rx_qty_base.pbm_parent_name,
        prescriber_rx_qty_base.load_step
 FROM datamart.prescriber_rx_qty_base
 ORDER BY prescriber_rx_qty_base.ims_rx_type,
          prescriber_rx_qty_base.report_frequency,
          prescriber_rx_qty_base.basket_type,
          prescriber_rx_qty_base.ims_client_number,
          prescriber_rx_qty_base.data_date,
          prescriber_rx_qty_base.ims_report_number_cnt,
          prescriber_rx_qty_base.ims_report_number,
          prescriber_rx_qty_base.indication,
          prescriber_rx_qty_base.ims_product_group,
          prescriber_rx_qty_base.basket_id,
          prescriber_rx_qty_base.ims_specialty,
          prescriber_rx_qty_base.zip_other,
          prescriber_rx_qty_base.ims_id,
          prescriber_rx_qty_base.payer_plan_number,
          prescriber_rx_qty_base.date,
          prescriber_rx_qty_base.sales_category
SEGMENTED BY hash(prescriber_rx_qty_base.ims_id) ALL NODES;

CREATE PROJECTION datamart.prescriber_rx_cnt_base__super__v1g17Q3_b0 /*+basename(prescriber_rx_cnt_base__super__v1g17Q3),createtype(D)*/ 
(
 ims_id,
 payer_plan_number ENCODING RLE,
 ims_client_number ENCODING RLE,
 report_frequency ENCODING RLE,
 ims_product_group ENCODING RLE,
 basket_id ENCODING RLE,
 data_date ENCODING RLE,
 date ENCODING COMMONDELTA_COMP,
 sales_category,
 tvcmid ENCODING DELTARANGE_COMP,
 prescriber_first_name ENCODING GZIP_COMP,
 prescriber_last_name ENCODING GZIP_COMP,
 basket_name,
 basket_type ENCODING RLE,
 rollup_week ENCODING COMMONDELTA_COMP,
 rollup_month ENCODING COMMONDELTA_COMP,
 nrx_count ENCODING DELTARANGE_COMP,
 trx_count ENCODING DELTARANGE_COMP,
 nrx_quantity ENCODING DELTARANGE_COMP,
 trx_quantity ENCODING DELTARANGE_COMP,
 unnormalized_nrx_count ENCODING DELTARANGE_COMP,
 unnormalized_trx_count ENCODING DELTARANGE_COMP,
 market_name,
 payer_name,
 plan_name,
 pbm_name,
 model,
 payment_method,
 ims_specialty,
 ims_rx_type ENCODING RLE,
 ims_supplemental_data,
 zip_other,
 ims_report_number ENCODING RLE,
 file_id ENCODING COMMONDELTA_COMP,
 record_id ENCODING DELTARANGE_COMP,
 ims_report_number_qty ENCODING RLE,
 indication ENCODING RLE,
 pbm_parent_name,
 load_step
)
AS
 SELECT prescriber_rx_cnt_base.ims_id,
        prescriber_rx_cnt_base.payer_plan_number,
        prescriber_rx_cnt_base.ims_client_number,
        prescriber_rx_cnt_base.report_frequency,
        prescriber_rx_cnt_base.ims_product_group,
        prescriber_rx_cnt_base.basket_id,
        prescriber_rx_cnt_base.data_date,
        prescriber_rx_cnt_base.date,
        prescriber_rx_cnt_base.sales_category,
        prescriber_rx_cnt_base.tvcmid,
        prescriber_rx_cnt_base.prescriber_first_name,
        prescriber_rx_cnt_base.prescriber_last_name,
        prescriber_rx_cnt_base.basket_name,
        prescriber_rx_cnt_base.basket_type,
        prescriber_rx_cnt_base.rollup_week,
        prescriber_rx_cnt_base.rollup_month,
        prescriber_rx_cnt_base.nrx_count,
        prescriber_rx_cnt_base.trx_count,
        prescriber_rx_cnt_base.nrx_quantity,
        prescriber_rx_cnt_base.trx_quantity,
        prescriber_rx_cnt_base.unnormalized_nrx_count,
        prescriber_rx_cnt_base.unnormalized_trx_count,
        prescriber_rx_cnt_base.market_name,
        prescriber_rx_cnt_base.payer_name,
        prescriber_rx_cnt_base.plan_name,
        prescriber_rx_cnt_base.pbm_name,
        prescriber_rx_cnt_base.model,
        prescriber_rx_cnt_base.payment_method,
        prescriber_rx_cnt_base.ims_specialty,
        prescriber_rx_cnt_base.ims_rx_type,
        prescriber_rx_cnt_base.ims_supplemental_data,
        prescriber_rx_cnt_base.zip_other,
        prescriber_rx_cnt_base.ims_report_number,
        prescriber_rx_cnt_base.file_id,
        prescriber_rx_cnt_base.record_id,
        prescriber_rx_cnt_base.ims_report_number_qty,
        prescriber_rx_cnt_base.indication,
        prescriber_rx_cnt_base.pbm_parent_name,
        prescriber_rx_cnt_base.load_step
 FROM datamart.prescriber_rx_cnt_base
 ORDER BY prescriber_rx_cnt_base.ims_rx_type,
          prescriber_rx_cnt_base.report_frequency,
          prescriber_rx_cnt_base.basket_type,
          prescriber_rx_cnt_base.ims_client_number,
          prescriber_rx_cnt_base.data_date,
          prescriber_rx_cnt_base.ims_report_number,
          prescriber_rx_cnt_base.ims_report_number_qty,
          prescriber_rx_cnt_base.indication,
          prescriber_rx_cnt_base.ims_product_group,
          prescriber_rx_cnt_base.basket_id,
          prescriber_rx_cnt_base.ims_specialty,
          prescriber_rx_cnt_base.zip_other,
          prescriber_rx_cnt_base.ims_id,
          prescriber_rx_cnt_base.payer_plan_number,
          prescriber_rx_cnt_base.date,
          prescriber_rx_cnt_base.sales_category
SEGMENTED BY hash(prescriber_rx_cnt_base.ims_id) ALL NODES;

CREATE PROJECTION datamart.sales_geography_b0 /*+basename(sales_geography),createtype(L)*/ 
(
 sales_force_id,
 geography_number,
 geography_name,
 geography_desc,
 geography_type,
 employee_type,
 sales_team,
 parent_geography_number,
 fleet_eligible_flag
)
AS
 SELECT sales_geography.sales_force_id,
        sales_geography.geography_number,
        sales_geography.geography_name,
        sales_geography.geography_desc,
        sales_geography.geography_type,
        sales_geography.employee_type,
        sales_geography.sales_team,
        sales_geography.parent_geography_number,
        sales_geography.fleet_eligible_flag
 FROM datamart.sales_geography
 ORDER BY sales_geography.sales_force_id,
          sales_geography.geography_number,
          sales_geography.geography_name,
          sales_geography.geography_desc,
          sales_geography.geography_type,
          sales_geography.employee_type,
          sales_geography.sales_team,
          sales_geography.parent_geography_number
SEGMENTED BY hash(sales_geography.sales_force_id, sales_geography.employee_type, sales_geography.geography_number, sales_geography.geography_type, sales_geography.parent_geography_number, sales_geography.geography_name, sales_geography.geography_desc, sales_geography.sales_team) ALL NODES;

CREATE PROJECTION datamart.prescriber_rx_qty_base_adhoc_b0 /*+basename(prescriber_rx_qty_base_adhoc),createtype(L)*/ 
(
 ims_id,
 payer_plan_number,
 ims_client_number,
 report_frequency,
 ims_product_group,
 basket_id,
 data_date,
 date,
 sales_category,
 tvcmid,
 prescriber_first_name,
 prescriber_last_name,
 basket_name,
 basket_type,
 rollup_week,
 rollup_month,
 nrx_count,
 trx_count,
 nrx_quantity,
 trx_quantity,
 unnormalized_nrx_count,
 unnormalized_trx_count,
 market_name,
 payer_name,
 plan_name,
 pbm_name,
 model,
 payment_method,
 ims_specialty,
 ims_rx_type,
 ims_supplemental_data,
 zip_other,
 ims_report_number,
 file_id,
 record_id,
 ims_report_number_cnt,
 indication,
 load_step
)
AS
 SELECT prescriber_rx_qty_base_adhoc.ims_id,
        prescriber_rx_qty_base_adhoc.payer_plan_number,
        prescriber_rx_qty_base_adhoc.ims_client_number,
        prescriber_rx_qty_base_adhoc.report_frequency,
        prescriber_rx_qty_base_adhoc.ims_product_group,
        prescriber_rx_qty_base_adhoc.basket_id,
        prescriber_rx_qty_base_adhoc.data_date,
        prescriber_rx_qty_base_adhoc.date,
        prescriber_rx_qty_base_adhoc.sales_category,
        prescriber_rx_qty_base_adhoc.tvcmid,
        prescriber_rx_qty_base_adhoc.prescriber_first_name,
        prescriber_rx_qty_base_adhoc.prescriber_last_name,
        prescriber_rx_qty_base_adhoc.basket_name,
        prescriber_rx_qty_base_adhoc.basket_type,
        prescriber_rx_qty_base_adhoc.rollup_week,
        prescriber_rx_qty_base_adhoc.rollup_month,
        prescriber_rx_qty_base_adhoc.nrx_count,
        prescriber_rx_qty_base_adhoc.trx_count,
        prescriber_rx_qty_base_adhoc.nrx_quantity,
        prescriber_rx_qty_base_adhoc.trx_quantity,
        prescriber_rx_qty_base_adhoc.unnormalized_nrx_count,
        prescriber_rx_qty_base_adhoc.unnormalized_trx_count,
        prescriber_rx_qty_base_adhoc.market_name,
        prescriber_rx_qty_base_adhoc.payer_name,
        prescriber_rx_qty_base_adhoc.plan_name,
        prescriber_rx_qty_base_adhoc.pbm_name,
        prescriber_rx_qty_base_adhoc.model,
        prescriber_rx_qty_base_adhoc.payment_method,
        prescriber_rx_qty_base_adhoc.ims_specialty,
        prescriber_rx_qty_base_adhoc.ims_rx_type,
        prescriber_rx_qty_base_adhoc.ims_supplemental_data,
        prescriber_rx_qty_base_adhoc.zip_other,
        prescriber_rx_qty_base_adhoc.ims_report_number,
        prescriber_rx_qty_base_adhoc.file_id,
        prescriber_rx_qty_base_adhoc.record_id,
        prescriber_rx_qty_base_adhoc.ims_report_number_cnt,
        prescriber_rx_qty_base_adhoc.indication,
        prescriber_rx_qty_base_adhoc.load_step
 FROM datamart.prescriber_rx_qty_base_adhoc
 ORDER BY prescriber_rx_qty_base_adhoc.ims_id,
          prescriber_rx_qty_base_adhoc.payer_plan_number,
          prescriber_rx_qty_base_adhoc.ims_client_number,
          prescriber_rx_qty_base_adhoc.report_frequency,
          prescriber_rx_qty_base_adhoc.ims_product_group,
          prescriber_rx_qty_base_adhoc.basket_id,
          prescriber_rx_qty_base_adhoc.data_date,
          prescriber_rx_qty_base_adhoc.date,
          prescriber_rx_qty_base_adhoc.sales_category,
          prescriber_rx_qty_base_adhoc.tvcmid,
          prescriber_rx_qty_base_adhoc.prescriber_first_name,
          prescriber_rx_qty_base_adhoc.prescriber_last_name,
          prescriber_rx_qty_base_adhoc.basket_name,
          prescriber_rx_qty_base_adhoc.basket_type,
          prescriber_rx_qty_base_adhoc.rollup_week,
          prescriber_rx_qty_base_adhoc.rollup_month,
          prescriber_rx_qty_base_adhoc.nrx_count,
          prescriber_rx_qty_base_adhoc.trx_count,
          prescriber_rx_qty_base_adhoc.nrx_quantity,
          prescriber_rx_qty_base_adhoc.trx_quantity,
          prescriber_rx_qty_base_adhoc.unnormalized_nrx_count,
          prescriber_rx_qty_base_adhoc.unnormalized_trx_count,
          prescriber_rx_qty_base_adhoc.market_name,
          prescriber_rx_qty_base_adhoc.payer_name,
          prescriber_rx_qty_base_adhoc.plan_name,
          prescriber_rx_qty_base_adhoc.pbm_name,
          prescriber_rx_qty_base_adhoc.model,
          prescriber_rx_qty_base_adhoc.payment_method,
          prescriber_rx_qty_base_adhoc.ims_specialty,
          prescriber_rx_qty_base_adhoc.ims_rx_type,
          prescriber_rx_qty_base_adhoc.ims_supplemental_data,
          prescriber_rx_qty_base_adhoc.zip_other,
          prescriber_rx_qty_base_adhoc.ims_report_number,
          prescriber_rx_qty_base_adhoc.file_id,
          prescriber_rx_qty_base_adhoc.record_id,
          prescriber_rx_qty_base_adhoc.ims_report_number_cnt,
          prescriber_rx_qty_base_adhoc.indication
SEGMENTED BY hash(prescriber_rx_qty_base_adhoc.file_id) ALL NODES;

CREATE PROJECTION datamart.copay_b0 /*+basename(copay),createtype(L)*/ 
(
 redemption_type,
 physician_tvcmid,
 pharmacy_tvcmid,
 basket_id,
 basket_name,
 asi_txn_id,
 orig_asi_txn_id,
 rx_num,
 fill_date,
 date_written,
 days_supply,
 ndc_code,
 daw,
 new_refill,
 quantity,
 refills,
 other_coverage_code,
 program_number,
 copay_card_number,
 sex,
 age_at_redemption,
 pharmacy_process_date,
 pharmacy_chain_number,
 nabp,
 pharmacy_chain,
 pharmacy_name,
 pharmacy_address,
 pharmacy_address2,
 pharmacy_city,
 pharmacy_state,
 pharmacy_zip,
 pharmacy_phone,
 pharmacy_npi_num,
 principle_physician_dea,
 physician_npi,
 physician_ims_id,
 physician_veeva_id,
 physician_name,
 physician_address1,
 physician_address2,
 physician_city,
 physician_state,
 physician_zip,
 rebate_amount,
 member_cash_expense,
 submitted_cost,
 pharmacy_fee,
 total_amount_due,
 calc_awp,
 create_date,
 occ_payment_type,
 counted_copay,
 auth_refills,
 admin_hcp_npi,
 admin_hcp_name,
 admin_hcp_address,
 admin_hcp_address2,
 admin_hcp_city,
 admin_hcp_state,
 admin_hcp_zip,
 claim_type,
 administration_flag,
 soc_name,
 soc_phone,
 soc_fax,
 soc_address,
 soc_city,
 soc_state,
 soc_zip,
 soc_id,
 soc_npi,
 payer_name,
 cpt_code,
 trans_type,
 previous_payer_id,
 member_id,
 benefit_amount,
 patient_expense,
 submission_method,
 report_frequency,
 source_name,
 file_id,
 record_id,
 patient_type,
 primary_bin,
 primary_bin_description,
 reject_code
)
AS
 SELECT copay.redemption_type,
        copay.physician_tvcmid,
        copay.pharmacy_tvcmid,
        copay.basket_id,
        copay.basket_name,
        copay.asi_txn_id,
        copay.orig_asi_txn_id,
        copay.rx_num,
        copay.fill_date,
        copay.date_written,
        copay.days_supply,
        copay.ndc_code,
        copay.daw,
        copay.new_refill,
        copay.quantity,
        copay.refills,
        copay.other_coverage_code,
        copay.program_number,
        copay.copay_card_number,
        copay.sex,
        copay.age_at_redemption,
        copay.pharmacy_process_date,
        copay.pharmacy_chain_number,
        copay.nabp,
        copay.pharmacy_chain,
        copay.pharmacy_name,
        copay.pharmacy_address,
        copay.pharmacy_address2,
        copay.pharmacy_city,
        copay.pharmacy_state,
        copay.pharmacy_zip,
        copay.pharmacy_phone,
        copay.pharmacy_npi_num,
        copay.principle_physician_dea,
        copay.physician_npi,
        copay.physician_ims_id,
        copay.physician_veeva_id,
        copay.physician_name,
        copay.physician_address1,
        copay.physician_address2,
        copay.physician_city,
        copay.physician_state,
        copay.physician_zip,
        copay.rebate_amount,
        copay.member_cash_expense,
        copay.submitted_cost,
        copay.pharmacy_fee,
        copay.total_amount_due,
        copay.calc_awp,
        copay.create_date,
        copay.occ_payment_type,
        copay.counted_copay,
        copay.auth_refills,
        copay.admin_hcp_npi,
        copay.admin_hcp_name,
        copay.admin_hcp_address,
        copay.admin_hcp_address2,
        copay.admin_hcp_city,
        copay.admin_hcp_state,
        copay.admin_hcp_zip,
        copay.claim_type,
        copay.administration_flag,
        copay.soc_name,
        copay.soc_phone,
        copay.soc_fax,
        copay.soc_address,
        copay.soc_city,
        copay.soc_state,
        copay.soc_zip,
        copay.soc_id,
        copay.soc_npi,
        copay.payer_name,
        copay.cpt_code,
        copay.trans_type,
        copay.previous_payer_id,
        copay.member_id,
        copay.benefit_amount,
        copay.patient_expense,
        copay.submission_method,
        copay.report_frequency,
        copay.source_name,
        copay.file_id,
        copay.record_id,
        copay.patient_type,
        copay.primary_bin,
        copay.primary_bin_description,
        copay.reject_code
 FROM datamart.copay
 ORDER BY copay.source_name,
          copay.asi_txn_id
SEGMENTED BY hash(copay.physician_npi) ALL NODES;

CREATE PROJECTION datamart.xpd_core_metrics_b0 /*+basename(xpd_core_metrics),createtype(L)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 tvcmid,
 specialty,
 ims_product_group,
 basket_id,
 basket_name,
 rollup_period,
 xpo_nrx,
 xpo_trx,
 unknown_nrx,
 unknown_trx,
 new_therapy_starts,
 continued_new,
 switch_to,
 add_on,
 restart_same_new,
 restart_different,
 continued_refill,
 restart_same_refill,
 switch_from,
 restart_different_from,
 add_to,
 market_new_to_brand_rx,
 dynamic_capture_rx,
 record_id,
 file_id,
 report_frequency
)
AS
 SELECT xpd_core_metrics_antimigraine.ims_client_number,
        xpd_core_metrics_antimigraine.ims_report_number,
        xpd_core_metrics_antimigraine.channel_indicator,
        xpd_core_metrics_antimigraine.ims_id,
        xpd_core_metrics_antimigraine.tvcmid,
        xpd_core_metrics_antimigraine.specialty,
        xpd_core_metrics_antimigraine.ims_product_group,
        xpd_core_metrics_antimigraine.basket_id,
        xpd_core_metrics_antimigraine.basket_name,
        xpd_core_metrics_antimigraine.rollup_period,
        xpd_core_metrics_antimigraine.xpo_nrx,
        xpd_core_metrics_antimigraine.xpo_trx,
        xpd_core_metrics_antimigraine.unknown_nrx,
        xpd_core_metrics_antimigraine.unknown_trx,
        xpd_core_metrics_antimigraine.new_therapy_starts,
        xpd_core_metrics_antimigraine.continued_new,
        xpd_core_metrics_antimigraine.switch_to,
        xpd_core_metrics_antimigraine.add_on,
        xpd_core_metrics_antimigraine.restart_same_new,
        xpd_core_metrics_antimigraine.restart_different,
        xpd_core_metrics_antimigraine.continued_refill,
        xpd_core_metrics_antimigraine.restart_same_refill,
        xpd_core_metrics_antimigraine.switch_from,
        xpd_core_metrics_antimigraine.restart_different_from,
        xpd_core_metrics_antimigraine.add_to,
        xpd_core_metrics_antimigraine.market_new_to_brand_rx,
        xpd_core_metrics_antimigraine.dynamic_capture_rx,
        xpd_core_metrics_antimigraine.record_id,
        xpd_core_metrics_antimigraine.file_id,
        xpd_core_metrics_antimigraine.report_frequency
 FROM datamart.xpd_core_metrics_antimigraine
 ORDER BY xpd_core_metrics_antimigraine.ims_client_number,
          xpd_core_metrics_antimigraine.ims_report_number,
          xpd_core_metrics_antimigraine.channel_indicator,
          xpd_core_metrics_antimigraine.ims_id,
          xpd_core_metrics_antimigraine.tvcmid,
          xpd_core_metrics_antimigraine.specialty,
          xpd_core_metrics_antimigraine.ims_product_group,
          xpd_core_metrics_antimigraine.basket_id,
          xpd_core_metrics_antimigraine.basket_name,
          xpd_core_metrics_antimigraine.rollup_period,
          xpd_core_metrics_antimigraine.xpo_nrx,
          xpd_core_metrics_antimigraine.xpo_trx,
          xpd_core_metrics_antimigraine.unknown_nrx,
          xpd_core_metrics_antimigraine.unknown_trx,
          xpd_core_metrics_antimigraine.new_therapy_starts,
          xpd_core_metrics_antimigraine.continued_new,
          xpd_core_metrics_antimigraine.switch_to,
          xpd_core_metrics_antimigraine.add_on,
          xpd_core_metrics_antimigraine.restart_same_new,
          xpd_core_metrics_antimigraine.restart_different,
          xpd_core_metrics_antimigraine.continued_refill,
          xpd_core_metrics_antimigraine.restart_same_refill,
          xpd_core_metrics_antimigraine.switch_from,
          xpd_core_metrics_antimigraine.restart_different_from,
          xpd_core_metrics_antimigraine.add_to,
          xpd_core_metrics_antimigraine.market_new_to_brand_rx,
          xpd_core_metrics_antimigraine.dynamic_capture_rx,
          xpd_core_metrics_antimigraine.record_id,
          xpd_core_metrics_antimigraine.file_id
SEGMENTED BY hash(xpd_core_metrics_antimigraine.ims_id) ALL NODES;

CREATE PROJECTION datamart.xpd_switch_details_b0 /*+basename(xpd_switch_details),createtype(L)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 tvcmid,
 specialty,
 switch_from_product_group_num,
 switch_from_basket_id,
 switch_from_basket_name,
 switch_to_product_group_num,
 switch_to_basket_id,
 switch_to_basket_name,
 rollup_period,
 rx,
 record_id,
 file_id,
 report_frequency
)
AS
 SELECT xpd_switch_details_antimigraine.ims_client_number,
        xpd_switch_details_antimigraine.ims_report_number,
        xpd_switch_details_antimigraine.channel_indicator,
        xpd_switch_details_antimigraine.ims_id,
        xpd_switch_details_antimigraine.tvcmid,
        xpd_switch_details_antimigraine.specialty,
        xpd_switch_details_antimigraine.switch_from_product_group_num,
        xpd_switch_details_antimigraine.switch_from_basket_id,
        xpd_switch_details_antimigraine.switch_from_basket_name,
        xpd_switch_details_antimigraine.switch_to_product_group_num,
        xpd_switch_details_antimigraine.switch_to_basket_id,
        xpd_switch_details_antimigraine.switch_to_basket_name,
        xpd_switch_details_antimigraine.rollup_period,
        xpd_switch_details_antimigraine.rx,
        xpd_switch_details_antimigraine.record_id,
        xpd_switch_details_antimigraine.file_id,
        xpd_switch_details_antimigraine.report_frequency
 FROM datamart.xpd_switch_details_antimigraine
 ORDER BY xpd_switch_details_antimigraine.ims_client_number,
          xpd_switch_details_antimigraine.ims_report_number,
          xpd_switch_details_antimigraine.channel_indicator,
          xpd_switch_details_antimigraine.ims_id,
          xpd_switch_details_antimigraine.tvcmid,
          xpd_switch_details_antimigraine.specialty,
          xpd_switch_details_antimigraine.switch_from_product_group_num,
          xpd_switch_details_antimigraine.switch_from_basket_id,
          xpd_switch_details_antimigraine.switch_from_basket_name,
          xpd_switch_details_antimigraine.switch_to_product_group_num,
          xpd_switch_details_antimigraine.switch_to_basket_id,
          xpd_switch_details_antimigraine.switch_to_basket_name,
          xpd_switch_details_antimigraine.rollup_period,
          xpd_switch_details_antimigraine.rx,
          xpd_switch_details_antimigraine.record_id,
          xpd_switch_details_antimigraine.file_id
SEGMENTED BY hash(xpd_switch_details_antimigraine.file_id) ALL NODES;

CREATE PROJECTION datamart.tmp_globals_b0 /*+basename(tmp_globals),createtype(A)*/ 
(
 d_data_month,
 d_data_date,
 d_start_month,
 g_default_end_date,
 max_rollup_month
)
AS
 SELECT tmp_globals.d_data_month,
        tmp_globals.d_data_date,
        tmp_globals.d_start_month,
        tmp_globals.g_default_end_date,
        tmp_globals.max_rollup_month
 FROM datamart.tmp_globals
 ORDER BY tmp_globals.d_data_month,
          tmp_globals.d_data_date,
          tmp_globals.d_start_month,
          tmp_globals.g_default_end_date,
          tmp_globals.max_rollup_month
SEGMENTED BY hash(tmp_globals.d_data_month, tmp_globals.d_data_date, tmp_globals.d_start_month, tmp_globals.max_rollup_month, tmp_globals.g_default_end_date) ALL NODES;

CREATE PROJECTION datamart.tmp_onc_demo_sales_alloc_adjusts_b0 /*+basename(tmp_onc_demo_sales_alloc_adjusts),createtype(A)*/ 
(
 acct_demo_id,
 tvcmid,
 ims_outlet_code,
 ims_facility_number,
 CATEGORY_CODE,
 SUBCATEGORY_CODE,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 facility_name,
 facility_address1,
 facility_address2,
 facility_city,
 facility_state,
 facility_zip,
 sales_force_id
)
AS
 SELECT tmp_onc_demo_sales_alloc_adjusts.acct_demo_id,
        tmp_onc_demo_sales_alloc_adjusts.tvcmid,
        tmp_onc_demo_sales_alloc_adjusts.ims_outlet_code,
        tmp_onc_demo_sales_alloc_adjusts.ims_facility_number,
        tmp_onc_demo_sales_alloc_adjusts.CATEGORY_CODE,
        tmp_onc_demo_sales_alloc_adjusts.SUBCATEGORY_CODE,
        tmp_onc_demo_sales_alloc_adjusts.outlet_name,
        tmp_onc_demo_sales_alloc_adjusts.outlet_address,
        tmp_onc_demo_sales_alloc_adjusts.outlet_city,
        tmp_onc_demo_sales_alloc_adjusts.outlet_state,
        tmp_onc_demo_sales_alloc_adjusts.outlet_zip,
        tmp_onc_demo_sales_alloc_adjusts.facility_name,
        tmp_onc_demo_sales_alloc_adjusts.facility_address1,
        tmp_onc_demo_sales_alloc_adjusts.facility_address2,
        tmp_onc_demo_sales_alloc_adjusts.facility_city,
        tmp_onc_demo_sales_alloc_adjusts.facility_state,
        tmp_onc_demo_sales_alloc_adjusts.facility_zip,
        tmp_onc_demo_sales_alloc_adjusts.sales_force_id
 FROM datamart.tmp_onc_demo_sales_alloc_adjusts
 ORDER BY tmp_onc_demo_sales_alloc_adjusts.acct_demo_id,
          tmp_onc_demo_sales_alloc_adjusts.tvcmid,
          tmp_onc_demo_sales_alloc_adjusts.ims_outlet_code,
          tmp_onc_demo_sales_alloc_adjusts.ims_facility_number,
          tmp_onc_demo_sales_alloc_adjusts.CATEGORY_CODE,
          tmp_onc_demo_sales_alloc_adjusts.SUBCATEGORY_CODE,
          tmp_onc_demo_sales_alloc_adjusts.outlet_name,
          tmp_onc_demo_sales_alloc_adjusts.outlet_address,
          tmp_onc_demo_sales_alloc_adjusts.outlet_city,
          tmp_onc_demo_sales_alloc_adjusts.outlet_state,
          tmp_onc_demo_sales_alloc_adjusts.outlet_zip,
          tmp_onc_demo_sales_alloc_adjusts.facility_name,
          tmp_onc_demo_sales_alloc_adjusts.facility_address1,
          tmp_onc_demo_sales_alloc_adjusts.facility_address2,
          tmp_onc_demo_sales_alloc_adjusts.facility_city,
          tmp_onc_demo_sales_alloc_adjusts.facility_state,
          tmp_onc_demo_sales_alloc_adjusts.facility_zip
SEGMENTED BY hash(tmp_onc_demo_sales_alloc_adjusts.ims_facility_number) ALL NODES;

CREATE PROJECTION datamart.oncology_invoice_adjustments_b0 /*+basename(oncology_invoice_adjustments),createtype(L)*/ 
(
 adj_code,
 adj_descr,
 act_time_period,
 act_start_date,
 act_end_date,
 status_code,
 basket_id,
 basket_name,
 adj_factor,
 tvcmid,
 record_id,
 file_id
)
AS
 SELECT oncology_invoice_adjustments.adj_code,
        oncology_invoice_adjustments.adj_descr,
        oncology_invoice_adjustments.act_time_period,
        oncology_invoice_adjustments.act_start_date,
        oncology_invoice_adjustments.act_end_date,
        oncology_invoice_adjustments.status_code,
        oncology_invoice_adjustments.basket_id,
        oncology_invoice_adjustments.basket_name,
        oncology_invoice_adjustments.adj_factor,
        oncology_invoice_adjustments.tvcmid,
        oncology_invoice_adjustments.record_id,
        oncology_invoice_adjustments.file_id
 FROM datamart.oncology_invoice_adjustments
 ORDER BY oncology_invoice_adjustments.adj_code,
          oncology_invoice_adjustments.act_time_period,
          oncology_invoice_adjustments.tvcmid,
          oncology_invoice_adjustments.basket_id
SEGMENTED BY hash(oncology_invoice_adjustments.record_id) ALL NODES;

CREATE PROJECTION datamart.formulary_restrictions_b0 /*+basename(formulary_restrictions),createtype(L)*/ 
(
 health_plan_id,
 drug_id,
 restriction_code,
 restriction_detail_id,
 restriction_detail_text,
 restriction_addtnl_information_1,
 restriction_addtnl_information_2,
 step_count,
 pa_form,
 indication,
 grouped_restriction_level,
 record_id,
 file_id
)
AS
 SELECT formulary_restrictions.health_plan_id,
        formulary_restrictions.drug_id,
        formulary_restrictions.restriction_code,
        formulary_restrictions.restriction_detail_id,
        formulary_restrictions.restriction_detail_text,
        formulary_restrictions.restriction_addtnl_information_1,
        formulary_restrictions.restriction_addtnl_information_2,
        formulary_restrictions.step_count,
        formulary_restrictions.pa_form,
        formulary_restrictions.indication,
        formulary_restrictions.grouped_restriction_level,
        formulary_restrictions.record_id,
        formulary_restrictions.file_id
 FROM datamart.formulary_restrictions
 ORDER BY formulary_restrictions.health_plan_id,
          formulary_restrictions.drug_id,
          formulary_restrictions.restriction_code,
          formulary_restrictions.restriction_detail_id,
          formulary_restrictions.restriction_detail_text,
          formulary_restrictions.restriction_addtnl_information_1,
          formulary_restrictions.restriction_addtnl_information_2,
          formulary_restrictions.step_count,
          formulary_restrictions.pa_form,
          formulary_restrictions.indication,
          formulary_restrictions.grouped_restriction_level,
          formulary_restrictions.record_id,
          formulary_restrictions.file_id
SEGMENTED BY hash(formulary_restrictions.record_id) ALL NODES;

CREATE PROJECTION datamart.fia_v3_b0 /*+basename(fia_v3),createtype(L)*/ 
(
 basket_id,
 basket_name,
 claim_id,
 patient_id,
 sequence_number,
 product_id,
 fill_date,
 claim_type,
 reject_code,
 days_supply,
 quantity,
 refill_code,
 payer_plan_id,
 opc_ask,
 sec_payer_plan_id,
 buy_down,
 opc_paid,
 prescriber_id,
 sob,
 sub_product_id,
 sub_opc,
 initial_claim_id,
 prev_product_id,
 daw_code,
 wrt_date,
 claim_status,
 copay_card_flg,
 zip_code,
 ecoup_flag,
 ecoup_offset_amt,
 standard_copay,
 standard_copay_yn,
 market_id,
 flexible_fld_1_char,
 flexible_fld_2_char,
 flexible_fld_3_char,
 flexible_fld_4_char,
 file_id,
 record_id,
 cbsa_code,
 cbsa_description,
 state_code,
 payer_name,
 plan_name,
 pbm_name,
 pbm_id,
 method_of_payment,
 model_type,
 product_group,
 product_group_id,
 product_name,
 generic_name,
 brand_generic_flag,
 product_form,
 product_strength,
 package_size,
 manufacturer,
 cmf10,
 usc_code,
 fia_market_desc,
 reject_reason,
 reject_group,
 mpd_year,
 mpd_eligibility_class,
 deductible_start_date,
 copay_start_date,
 gap_start_date,
 catastrophic_start_date,
 mpd_panel_patient,
 PROVIDER_TYPE,
 IQVIA_RXER_ID,
 PRIMARY_SPECIALTY_CODE,
 PRIMARY_SPECIALTY_DESC,
 FIRST_NAME,
 LAST_NAME,
 ORG_NM,
 ADDRESS,
 CITY,
 PVR_ZIP_CODE,
 PVR_STATE_CODE,
 PHONE_NUMBER,
 DEA_NUMBER,
 ME_NUMBER,
 PVR_FLEXIBLE_FLD_1_CHAR,
 PVR_FLEXIBLE_FLD_2_CHAR,
 patient_birth_year,
 patient_gender,
 patient_longitudinal_use_flag,
 patd_flexible_fld_1_char,
 patd_flexible_fld_2_char
)
AS
 SELECT fia.basket_id,
        fia.basket_name,
        fia.claim_id,
        fia.patient_id,
        fia.sequence_number,
        fia.product_id,
        fia.fill_date,
        fia.claim_type,
        fia.reject_code,
        fia.days_supply,
        fia.quantity,
        fia.refill_code,
        fia.payer_plan_id,
        fia.opc_ask,
        fia.sec_payer_plan_id,
        fia.buy_down,
        fia.opc_paid,
        fia.prescriber_id,
        fia.sob,
        fia.sub_product_id,
        fia.sub_opc,
        fia.initial_claim_id,
        fia.prev_product_id,
        fia.daw_code,
        fia.wrt_date,
        fia.claim_status,
        fia.copay_card_flg,
        fia.zip_code,
        fia.ecoup_flag,
        fia.ecoup_offset_amt,
        fia.standard_copay,
        fia.standard_copay_yn,
        fia.market_id,
        fia.flexible_fld_1_char,
        fia.flexible_fld_2_char,
        fia.flexible_fld_3_char,
        fia.flexible_fld_4_char,
        fia.file_id,
        fia.record_id,
        fia.cbsa_code,
        fia.cbsa_description,
        fia.state_code,
        fia.payer_name,
        fia.plan_name,
        fia.pbm_name,
        fia.pbm_id,
        fia.method_of_payment,
        fia.model_type,
        fia.product_group,
        fia.product_group_id,
        fia.product_name,
        fia.generic_name,
        fia.brand_generic_flag,
        fia.product_form,
        fia.product_strength,
        fia.package_size,
        fia.manufacturer,
        fia.cmf10,
        fia.usc_code,
        fia.fia_market_desc,
        fia.reject_reason,
        fia.reject_group,
        fia.mpd_year,
        fia.mpd_eligibility_class,
        fia.deductible_start_date,
        fia.copay_start_date,
        fia.gap_start_date,
        fia.catastrophic_start_date,
        fia.mpd_panel_patient,
        fia.PROVIDER_TYPE,
        fia.IQVIA_RXER_ID,
        fia.PRIMARY_SPECIALTY_CODE,
        fia.PRIMARY_SPECIALTY_DESC,
        fia.FIRST_NAME,
        fia.LAST_NAME,
        fia.ORG_NM,
        fia.ADDRESS,
        fia.CITY,
        fia.PVR_ZIP_CODE,
        fia.PVR_STATE_CODE,
        fia.PHONE_NUMBER,
        fia.DEA_NUMBER,
        fia.ME_NUMBER,
        fia.PVR_FLEXIBLE_FLD_1_CHAR,
        fia.PVR_FLEXIBLE_FLD_2_CHAR,
        fia.patient_birth_year,
        fia.patient_gender,
        fia.patient_longitudinal_use_flag,
        fia.patd_flexible_fld_1_char,
        fia.patd_flexible_fld_2_char
 FROM datamart.fia
 ORDER BY fia.claim_id,
          fia.patient_id,
          fia.sequence_number,
          fia.product_id,
          fia.fill_date,
          fia.claim_type,
          fia.reject_code,
          fia.days_supply
SEGMENTED BY hash(fia.record_id) ALL NODES;

CREATE PROJECTION datamart.ZS_AFFINITY_MONITOR_b0 /*+basename(ZS_AFFINITY_MONITOR),createtype(L)*/ 
(
 NPI,
 CONTRIBUTOR_ID,
 PFF_CTT_VOL,
 PFF_EN,
 PFF_EN_QUINTILE,
 PFF_AFFINITY,
 PFF_CTBR_CTT_VOL,
 PFF_CTBR_EN,
 PR_CTT_VOL,
 PR_EN,
 PR_EN_QUINTILE,
 PR_AFFINITY,
 PR_CTBR_CTT_VOL,
 PR_CTBR_EN,
 PI_CTT_VOL,
 PI_EN,
 PI_EN_QUINTILE,
 PI_AFFINITY,
 PI_CTBR_CTT_VOL,
 PI_CTBR_EN,
 DPH_CTT_VOL,
 DPH_EN,
 DPH_EN_QUINTILE,
 DPH_AFFINITY,
 DPH_CTBR_CTT_VOL,
 DPH_CTBR_EN,
 DPL_CTT_VOL,
 DPL_EN,
 DPL_EN_QUINTILE,
 DPL_AFFINITY,
 DPL_CTBR_CTT_VOL,
 DPL_CTBR_EN,
 DRT_CTT_VOL,
 DRT_EN,
 DRT_EN_QUINTILE,
 DRT_AFFINITY,
 DRT_CTBR_CTT_VOL,
 DRT_CTBR_EN,
 Top_Channels,
 PP_ACCESS_RATING,
 NPP_ACCESS_RATING,
 PEER_OFFER_EN,
 COPAY_OFFER_EN,
 SAMPLE_OFFER_EN,
 VOUCHER_OFFER_EN,
 record_id,
 file_id
)
AS
 SELECT ZS_AFFINITY_MONITOR.NPI,
        ZS_AFFINITY_MONITOR.CONTRIBUTOR_ID,
        ZS_AFFINITY_MONITOR.PFF_CTT_VOL,
        ZS_AFFINITY_MONITOR.PFF_EN,
        ZS_AFFINITY_MONITOR.PFF_EN_QUINTILE,
        ZS_AFFINITY_MONITOR.PFF_AFFINITY,
        ZS_AFFINITY_MONITOR.PFF_CTBR_CTT_VOL,
        ZS_AFFINITY_MONITOR.PFF_CTBR_EN,
        ZS_AFFINITY_MONITOR.PR_CTT_VOL,
        ZS_AFFINITY_MONITOR.PR_EN,
        ZS_AFFINITY_MONITOR.PR_EN_QUINTILE,
        ZS_AFFINITY_MONITOR.PR_AFFINITY,
        ZS_AFFINITY_MONITOR.PR_CTBR_CTT_VOL,
        ZS_AFFINITY_MONITOR.PR_CTBR_EN,
        ZS_AFFINITY_MONITOR.PI_CTT_VOL,
        ZS_AFFINITY_MONITOR.PI_EN,
        ZS_AFFINITY_MONITOR.PI_EN_QUINTILE,
        ZS_AFFINITY_MONITOR.PI_AFFINITY,
        ZS_AFFINITY_MONITOR.PI_CTBR_CTT_VOL,
        ZS_AFFINITY_MONITOR.PI_CTBR_EN,
        ZS_AFFINITY_MONITOR.DPH_CTT_VOL,
        ZS_AFFINITY_MONITOR.DPH_EN,
        ZS_AFFINITY_MONITOR.DPH_EN_QUINTILE,
        ZS_AFFINITY_MONITOR.DPH_AFFINITY,
        ZS_AFFINITY_MONITOR.DPH_CTBR_CTT_VOL,
        ZS_AFFINITY_MONITOR.DPH_CTBR_EN,
        ZS_AFFINITY_MONITOR.DPL_CTT_VOL,
        ZS_AFFINITY_MONITOR.DPL_EN,
        ZS_AFFINITY_MONITOR.DPL_EN_QUINTILE,
        ZS_AFFINITY_MONITOR.DPL_AFFINITY,
        ZS_AFFINITY_MONITOR.DPL_CTBR_CTT_VOL,
        ZS_AFFINITY_MONITOR.DPL_CTBR_EN,
        ZS_AFFINITY_MONITOR.DRT_CTT_VOL,
        ZS_AFFINITY_MONITOR.DRT_EN,
        ZS_AFFINITY_MONITOR.DRT_EN_QUINTILE,
        ZS_AFFINITY_MONITOR.DRT_AFFINITY,
        ZS_AFFINITY_MONITOR.DRT_CTBR_CTT_VOL,
        ZS_AFFINITY_MONITOR.DRT_CTBR_EN,
        ZS_AFFINITY_MONITOR.Top_Channels,
        ZS_AFFINITY_MONITOR.PP_ACCESS_RATING,
        ZS_AFFINITY_MONITOR.NPP_ACCESS_RATING,
        ZS_AFFINITY_MONITOR.PEER_OFFER_EN,
        ZS_AFFINITY_MONITOR.COPAY_OFFER_EN,
        ZS_AFFINITY_MONITOR.SAMPLE_OFFER_EN,
        ZS_AFFINITY_MONITOR.VOUCHER_OFFER_EN,
        ZS_AFFINITY_MONITOR.record_id,
        ZS_AFFINITY_MONITOR.file_id
 FROM datamart.ZS_AFFINITY_MONITOR
 ORDER BY ZS_AFFINITY_MONITOR.NPI,
          ZS_AFFINITY_MONITOR.CONTRIBUTOR_ID,
          ZS_AFFINITY_MONITOR.PFF_CTT_VOL,
          ZS_AFFINITY_MONITOR.PFF_EN,
          ZS_AFFINITY_MONITOR.PFF_EN_QUINTILE,
          ZS_AFFINITY_MONITOR.PFF_AFFINITY,
          ZS_AFFINITY_MONITOR.PFF_CTBR_CTT_VOL,
          ZS_AFFINITY_MONITOR.PFF_CTBR_EN
SEGMENTED BY hash(ZS_AFFINITY_MONITOR.record_id) ALL NODES;

CREATE PROJECTION datamart.rh_coc_dc_ev_scripts_b0 /*+basename(rh_coc_dc_ev_scripts),createtype(L)*/ 
(
 source_file,
 ndc_code,
 brand_name,
 basket_name,
 refills,
 new_refill,
 claim_status,
 pharmacy_state,
 eVoucher_Status_Desc,
 Copay_Range_Display_Order,
 copay_range,
 days_supply,
 quantity,
 Original_Copay,
 eVoucher_Amount,
 patient_expense,
 patient_type,
 Pharmacy_State_Type,
 age_at_redemption,
 Starter_Benefit_Ind,
 Transaction_ID,
 pharmacy_zip_3,
 fill_date,
 processed_date,
 patient_oop,
 Denial_Voucher_amount,
 Total_Admin_Fee,
 Total_Due,
 PAs_Submitted,
 Pharmacy_Product_cost,
 Manufacturer_Amount,
 file_id,
 record_id
)
AS
 SELECT rh_coc_dc_ev_scripts.source_file,
        rh_coc_dc_ev_scripts.ndc_code,
        rh_coc_dc_ev_scripts.brand_name,
        rh_coc_dc_ev_scripts.basket_name,
        rh_coc_dc_ev_scripts.refills,
        rh_coc_dc_ev_scripts.new_refill,
        rh_coc_dc_ev_scripts.claim_status,
        rh_coc_dc_ev_scripts.pharmacy_state,
        rh_coc_dc_ev_scripts.eVoucher_Status_Desc,
        rh_coc_dc_ev_scripts.Copay_Range_Display_Order,
        rh_coc_dc_ev_scripts.copay_range,
        rh_coc_dc_ev_scripts.days_supply,
        rh_coc_dc_ev_scripts.quantity,
        rh_coc_dc_ev_scripts.Original_Copay,
        rh_coc_dc_ev_scripts.eVoucher_Amount,
        rh_coc_dc_ev_scripts.patient_expense,
        rh_coc_dc_ev_scripts.patient_type,
        rh_coc_dc_ev_scripts.Pharmacy_State_Type,
        rh_coc_dc_ev_scripts.age_at_redemption,
        rh_coc_dc_ev_scripts.Starter_Benefit_Ind,
        rh_coc_dc_ev_scripts.Transaction_ID,
        rh_coc_dc_ev_scripts.pharmacy_zip_3,
        rh_coc_dc_ev_scripts.fill_date,
        rh_coc_dc_ev_scripts.processed_date,
        rh_coc_dc_ev_scripts.patient_oop,
        rh_coc_dc_ev_scripts.Denial_Voucher_amount,
        rh_coc_dc_ev_scripts.Total_Admin_Fee,
        rh_coc_dc_ev_scripts.Total_Due,
        rh_coc_dc_ev_scripts.PAs_Submitted,
        rh_coc_dc_ev_scripts.Pharmacy_Product_cost,
        rh_coc_dc_ev_scripts.Manufacturer_Amount,
        rh_coc_dc_ev_scripts.file_id,
        rh_coc_dc_ev_scripts.record_id
 FROM datamart.rh_coc_dc_ev_scripts
 ORDER BY rh_coc_dc_ev_scripts.source_file,
          rh_coc_dc_ev_scripts.ndc_code,
          rh_coc_dc_ev_scripts.brand_name,
          rh_coc_dc_ev_scripts.basket_name,
          rh_coc_dc_ev_scripts.refills,
          rh_coc_dc_ev_scripts.new_refill,
          rh_coc_dc_ev_scripts.claim_status,
          rh_coc_dc_ev_scripts.pharmacy_state
SEGMENTED BY hash(rh_coc_dc_ev_scripts.record_id) ALL NODES;

CREATE PROJECTION datamart.sp_shipment_b0 /*+basename(sp_shipment),createtype(L)*/ 
(
 specialty_pharmacy_data_source,
 ims_id,
 tw_ship_to_address_id,
 tw_bill_to_address_id,
 source_customer_id,
 customer_name,
 physician_first_name,
 physician_last_name,
 ship_to_address_line_1,
 ship_to_address_line_2,
 ship_to_city,
 ship_to_state,
 ship_to_zip,
 source_transaction_id,
 invoice_date,
 ship_date,
 source_product_code,
 basket_id,
 basket_name,
 quantity,
 invoice_unit_price,
 invoice_amount,
 invoice_discount,
 order_type,
 customer_type,
 source_parent_customer_id,
 parent_customer_name,
 file_id,
 record_id,
 lob_code_desc,
 order_type_desc,
 price_matrix_def,
 whse_code,
 order_no,
 package_size,
 tvcmid,
 trx_cnt,
 net_sales_amt,
 adj_invoice_unit_price,
 adj_invoice_amount,
 comp_month,
 hin,
 dea_number,
 net_cost,
 payer_flag,
 optum_briova_flag,
 physician_middle_name,
 rollup_flag,
 basket_type,
 unnormalized_trx_count,
 days_supplied,
 SPP_Physician_ID,
 Primary_Payer_BIN,
 Primary_Payer_PCN,
 Primary_Group_Num,
 Primary_Payer_Name,
 Primary_Payer_Type,
 Primary_Copay_Amount,
 NPI,
 state_license_number
)
AS
 SELECT specialty_pharmacy_shipment.specialty_pharmacy_data_source,
        specialty_pharmacy_shipment.ims_id,
        specialty_pharmacy_shipment.tw_ship_to_address_id,
        specialty_pharmacy_shipment.tw_bill_to_address_id,
        specialty_pharmacy_shipment.source_customer_id,
        specialty_pharmacy_shipment.customer_name,
        specialty_pharmacy_shipment.physician_first_name,
        specialty_pharmacy_shipment.physician_last_name,
        specialty_pharmacy_shipment.ship_to_address_line_1,
        specialty_pharmacy_shipment.ship_to_address_line_2,
        specialty_pharmacy_shipment.ship_to_city,
        specialty_pharmacy_shipment.ship_to_state,
        specialty_pharmacy_shipment.ship_to_zip,
        specialty_pharmacy_shipment.source_transaction_id,
        specialty_pharmacy_shipment.invoice_date,
        specialty_pharmacy_shipment.ship_date,
        specialty_pharmacy_shipment.source_product_code,
        specialty_pharmacy_shipment.basket_id,
        specialty_pharmacy_shipment.basket_name,
        specialty_pharmacy_shipment.quantity,
        specialty_pharmacy_shipment.invoice_unit_price,
        specialty_pharmacy_shipment.invoice_amount,
        specialty_pharmacy_shipment.invoice_discount,
        specialty_pharmacy_shipment.order_type,
        specialty_pharmacy_shipment.customer_type,
        specialty_pharmacy_shipment.source_parent_customer_id,
        specialty_pharmacy_shipment.parent_customer_name,
        specialty_pharmacy_shipment.file_id,
        specialty_pharmacy_shipment.record_id,
        specialty_pharmacy_shipment.lob_code_desc,
        specialty_pharmacy_shipment.order_type_desc,
        specialty_pharmacy_shipment.price_matrix_def,
        specialty_pharmacy_shipment.whse_code,
        specialty_pharmacy_shipment.order_no,
        specialty_pharmacy_shipment.package_size,
        specialty_pharmacy_shipment.tvcmid,
        specialty_pharmacy_shipment.trx_cnt,
        specialty_pharmacy_shipment.net_sales_amt,
        specialty_pharmacy_shipment.adj_invoice_unit_price,
        specialty_pharmacy_shipment.adj_invoice_amount,
        specialty_pharmacy_shipment.comp_month,
        specialty_pharmacy_shipment.hin,
        specialty_pharmacy_shipment.dea_number,
        specialty_pharmacy_shipment.net_cost,
        specialty_pharmacy_shipment.payer_flag,
        specialty_pharmacy_shipment.optum_briova_flag,
        specialty_pharmacy_shipment.physician_middle_name,
        specialty_pharmacy_shipment.rollup_flag,
        specialty_pharmacy_shipment.basket_type,
        specialty_pharmacy_shipment.unnormalized_trx_count,
        specialty_pharmacy_shipment.days_supplied,
        specialty_pharmacy_shipment.SPP_Physician_ID,
        specialty_pharmacy_shipment.Primary_Payer_BIN,
        specialty_pharmacy_shipment.Primary_Payer_PCN,
        specialty_pharmacy_shipment.Primary_Group_Num,
        specialty_pharmacy_shipment.Primary_Payer_Name,
        specialty_pharmacy_shipment.Primary_Payer_Type,
        specialty_pharmacy_shipment.Primary_Copay_Amount,
        specialty_pharmacy_shipment.NPI,
        specialty_pharmacy_shipment.state_license_number
 FROM datamart.specialty_pharmacy_shipment
 ORDER BY specialty_pharmacy_shipment.specialty_pharmacy_data_source
SEGMENTED BY hash(specialty_pharmacy_shipment.record_id) ALL NODES;

CREATE PROJECTION datamart.clozapine_sales_b0 /*+basename(clozapine_sales),createtype(L)*/ 
(
 data_source,
 transaction_id,
 invoice_date,
 basket_id,
 basket_name,
 product_brand,
 product_ndc,
 product_desc,
 invoice_qty,
 invoice_units,
 invoice_cost,
 invoice_pack_cost,
 invoice_unit_cost,
 contract_pack_cost,
 contract_purchases,
 contract_number,
 dispensing_location,
 dl_address_1,
 dl_address_2,
 dl_city,
 dl_state,
 dl_zip,
 dl_dea_number,
 depot_location,
 dep_address_1,
 dep_address_2,
 dep_city,
 dep_state,
 dep_zip,
 dep_dea_number,
 unit_ap,
 ap,
 file_id,
 record_id,
 dispensing_tvcmid,
 depot_tvcmid
)
AS
 SELECT select_brand_sales.data_source,
        select_brand_sales.transaction_id,
        select_brand_sales.invoice_date,
        select_brand_sales.basket_id,
        select_brand_sales.basket_name,
        select_brand_sales.product_brand,
        select_brand_sales.product_ndc,
        select_brand_sales.product_desc,
        select_brand_sales.invoice_qty,
        select_brand_sales.invoice_units,
        select_brand_sales.invoice_cost,
        select_brand_sales.invoice_pack_cost,
        select_brand_sales.invoice_unit_cost,
        select_brand_sales.contract_pack_cost,
        select_brand_sales.contract_purchases,
        select_brand_sales.contract_number,
        select_brand_sales.dispensing_location,
        select_brand_sales.dl_address_1,
        select_brand_sales.dl_address_2,
        select_brand_sales.dl_city,
        select_brand_sales.dl_state,
        select_brand_sales.dl_zip,
        select_brand_sales.dl_dea_number,
        select_brand_sales.depot_location,
        select_brand_sales.dep_address_1,
        select_brand_sales.dep_address_2,
        select_brand_sales.dep_city,
        select_brand_sales.dep_state,
        select_brand_sales.dep_zip,
        select_brand_sales.dep_dea_number,
        select_brand_sales.unit_ap,
        select_brand_sales.ap,
        select_brand_sales.file_id,
        select_brand_sales.record_id,
        select_brand_sales.dispensing_tvcmid,
        select_brand_sales.depot_tvcmid
 FROM datamart.select_brand_sales
 ORDER BY select_brand_sales.transaction_id
SEGMENTED BY hash(select_brand_sales.invoice_date, select_brand_sales.invoice_cost, select_brand_sales.invoice_pack_cost, select_brand_sales.invoice_unit_cost, select_brand_sales.contract_pack_cost, select_brand_sales.contract_purchases, select_brand_sales.dl_state, select_brand_sales.dl_zip, select_brand_sales.dep_state, select_brand_sales.dep_zip, select_brand_sales.file_id, select_brand_sales.record_id, select_brand_sales.invoice_qty, select_brand_sales.invoice_units, select_brand_sales.product_ndc, select_brand_sales.dl_dea_number, select_brand_sales.dep_dea_number, select_brand_sales.product_brand, select_brand_sales.dl_city, select_brand_sales.dep_city, select_brand_sales.transaction_id, select_brand_sales.product_desc, select_brand_sales.contract_number, select_brand_sales.dispensing_location, select_brand_sales.dl_address_1, select_brand_sales.dl_address_2, select_brand_sales.depot_location, select_brand_sales.dep_address_1, select_brand_sales.dep_address_2) ALL NODES;

CREATE PROJECTION datamart.oncology_fcr_b0 /*+basename(oncology_fcr),createtype(L)*/ 
(
 time_period,
 sales_force_id,
 area_number,
 region_number,
 territory_number,
 employee_id,
 contact_date,
 duration_days,
 ss_opening,
 ss_probing,
 ss_resources,
 ss_commitment,
 ss_transitioning,
 ss_acumen,
 archive_flag,
 file_id,
 record_id
)
AS
 SELECT oncology_fcr.time_period,
        oncology_fcr.sales_force_id,
        oncology_fcr.area_number,
        oncology_fcr.region_number,
        oncology_fcr.territory_number,
        oncology_fcr.employee_id,
        oncology_fcr.contact_date,
        oncology_fcr.duration_days,
        oncology_fcr.ss_opening,
        oncology_fcr.ss_probing,
        oncology_fcr.ss_resources,
        oncology_fcr.ss_commitment,
        oncology_fcr.ss_transitioning,
        oncology_fcr.ss_acumen,
        oncology_fcr.archive_flag,
        oncology_fcr.file_id,
        oncology_fcr.record_id
 FROM datamart.oncology_fcr
 ORDER BY oncology_fcr.time_period,
          oncology_fcr.sales_force_id,
          oncology_fcr.area_number,
          oncology_fcr.region_number,
          oncology_fcr.territory_number,
          oncology_fcr.employee_id,
          oncology_fcr.contact_date,
          oncology_fcr.duration_days,
          oncology_fcr.ss_opening,
          oncology_fcr.ss_probing,
          oncology_fcr.ss_resources,
          oncology_fcr.ss_commitment,
          oncology_fcr.ss_transitioning,
          oncology_fcr.ss_acumen,
          oncology_fcr.archive_flag,
          oncology_fcr.file_id,
          oncology_fcr.record_id
SEGMENTED BY hash(oncology_fcr.record_id) ALL NODES;

CREATE PROJECTION datamart.alternate_call_plans_b0 /*+basename(alternate_call_plans),createtype(L)*/ 
(
 sales_force_id,
 period,
 veeva_account_id,
 ims_id,
 first_name,
 last_name,
 specialty,
 territory_number,
 area_number,
 region_number,
 product_name,
 basket_id,
 basket_name,
 p1,
 p2,
 p3,
 file_id,
 record_id,
 call_plan_name,
 tvcmid,
 start_date,
 end_date,
 call_plan_group
)
AS
 SELECT alternate_call_plans.sales_force_id,
        alternate_call_plans.period,
        alternate_call_plans.veeva_account_id,
        alternate_call_plans.ims_id,
        alternate_call_plans.first_name,
        alternate_call_plans.last_name,
        alternate_call_plans.specialty,
        alternate_call_plans.territory_number,
        alternate_call_plans.area_number,
        alternate_call_plans.region_number,
        alternate_call_plans.product_name,
        alternate_call_plans.basket_id,
        alternate_call_plans.basket_name,
        alternate_call_plans.p1,
        alternate_call_plans.p2,
        alternate_call_plans.p3,
        alternate_call_plans.file_id,
        alternate_call_plans.record_id,
        alternate_call_plans.call_plan_name,
        alternate_call_plans.tvcmid,
        alternate_call_plans.start_date,
        alternate_call_plans.end_date,
        alternate_call_plans.call_plan_group
 FROM datamart.alternate_call_plans
 ORDER BY alternate_call_plans.sales_force_id,
          alternate_call_plans.period,
          alternate_call_plans.veeva_account_id
SEGMENTED BY hash(alternate_call_plans.record_id) ALL NODES;

CREATE PROJECTION datamart.dynamic_segment_b0 /*+basename(dynamic_segment),createtype(L)*/ 
(
 federation_id,
 basket_id,
 segment_name,
 segment_value,
 file_id,
 record_id
)
AS
 SELECT dynamic_segment.federation_id,
        dynamic_segment.basket_id,
        dynamic_segment.segment_name,
        dynamic_segment.segment_value,
        dynamic_segment.file_id,
        dynamic_segment.record_id
 FROM datamart.dynamic_segment
 ORDER BY dynamic_segment.federation_id,
          dynamic_segment.basket_id,
          dynamic_segment.segment_name,
          dynamic_segment.segment_value,
          dynamic_segment.file_id,
          dynamic_segment.record_id
SEGMENTED BY hash(dynamic_segment.record_id) ALL NODES;

CREATE PROJECTION datamart.dsa_analysis_super_b0 /*+basename(dsa_analysis_super),createtype(L)*/ 
(
 sales_force_id,
 territory_number,
 region_num,
 area_num,
 veeva_id,
 ims_id,
 npi_num,
 account_type,
 account_sub_type,
 account_name,
 first_name,
 middle_name,
 last_name,
 address,
 city,
 state,
 zip,
 credential,
 degree,
 specialty,
 call_id,
 call_date,
 product_name,
 basket_id,
 basket_name,
 detail_priority,
 display_order,
 duration,
 presentation_name,
 message_name,
 detailed_products,
 detail_type,
 sampled_call,
 message_visit_number,
 visit_number,
 rep_name,
 week_ending,
 call_type,
 rep_id,
 tvcmid,
 message_desc
)
AS
 SELECT digital_sales_aid_analysis.sales_force_id,
        digital_sales_aid_analysis.territory_number,
        digital_sales_aid_analysis.region_num,
        digital_sales_aid_analysis.area_num,
        digital_sales_aid_analysis.veeva_id,
        digital_sales_aid_analysis.ims_id,
        digital_sales_aid_analysis.npi_num,
        digital_sales_aid_analysis.account_type,
        digital_sales_aid_analysis.account_sub_type,
        digital_sales_aid_analysis.account_name,
        digital_sales_aid_analysis.first_name,
        digital_sales_aid_analysis.middle_name,
        digital_sales_aid_analysis.last_name,
        digital_sales_aid_analysis.address,
        digital_sales_aid_analysis.city,
        digital_sales_aid_analysis.state,
        digital_sales_aid_analysis.zip,
        digital_sales_aid_analysis.credential,
        digital_sales_aid_analysis.degree,
        digital_sales_aid_analysis.specialty,
        digital_sales_aid_analysis.call_id,
        digital_sales_aid_analysis.call_date,
        digital_sales_aid_analysis.product_name,
        digital_sales_aid_analysis.basket_id,
        digital_sales_aid_analysis.basket_name,
        digital_sales_aid_analysis.detail_priority,
        digital_sales_aid_analysis.display_order,
        digital_sales_aid_analysis.duration,
        digital_sales_aid_analysis.presentation_name,
        digital_sales_aid_analysis.message_name,
        digital_sales_aid_analysis.detailed_products,
        digital_sales_aid_analysis.detail_type,
        digital_sales_aid_analysis.sampled_call,
        digital_sales_aid_analysis.message_visit_number,
        digital_sales_aid_analysis.visit_number,
        digital_sales_aid_analysis.rep_name,
        digital_sales_aid_analysis.week_ending,
        digital_sales_aid_analysis.call_type,
        digital_sales_aid_analysis.rep_id,
        digital_sales_aid_analysis.tvcmid,
        digital_sales_aid_analysis.message_desc
 FROM datamart.digital_sales_aid_analysis
 ORDER BY digital_sales_aid_analysis.sales_force_id,
          digital_sales_aid_analysis.territory_number,
          digital_sales_aid_analysis.region_num,
          digital_sales_aid_analysis.area_num,
          digital_sales_aid_analysis.veeva_id
SEGMENTED BY hash(digital_sales_aid_analysis.veeva_id) ALL NODES;

CREATE PROJECTION datamart.touchpoint_call_b0 /*+basename(touchpoint_call),createtype(L)*/ 
(
 call_id,
 call_attempt_id,
 touchpoint_id,
 veeva_id,
 ims_id,
 first_name,
 last_name,
 call_type,
 call_date,
 status_code,
 status_description,
 rep_id,
 rep_first_name,
 rep_last_name,
 file_id,
 record_id,
 tvcmid
)
AS
 SELECT touchpoint_call.call_id,
        touchpoint_call.call_attempt_id,
        touchpoint_call.touchpoint_id,
        touchpoint_call.veeva_id,
        touchpoint_call.ims_id,
        touchpoint_call.first_name,
        touchpoint_call.last_name,
        touchpoint_call.call_type,
        touchpoint_call.call_date,
        touchpoint_call.status_code,
        touchpoint_call.status_description,
        touchpoint_call.rep_id,
        touchpoint_call.rep_first_name,
        touchpoint_call.rep_last_name,
        touchpoint_call.file_id,
        touchpoint_call.record_id,
        touchpoint_call.tvcmid
 FROM datamart.touchpoint_call
 ORDER BY touchpoint_call.call_id,
          touchpoint_call.call_attempt_id,
          touchpoint_call.touchpoint_id
SEGMENTED BY hash(touchpoint_call.record_id) ALL NODES;

CREATE PROJECTION datamart.sfa_call_b0 /*+basename(sfa_call),createtype(L)*/ 
(
 sales_force_id,
 call_id,
 veeva_account_id,
 ims_id,
 ims_outlet_id,
 customer_type,
 first_name,
 last_name,
 call_type,
 legacy_call_type,
 ceph_id,
 dea_num,
 rep_id,
 rep_first_name,
 rep_last_name,
 territory_number,
 zip_on_call,
 call_date,
 submit_date,
 attendees,
 attendee_type,
 area_number,
 region_number,
 tvcmid,
 call_recordtype,
 call_duration,
 call_datetime,
 call_timezone,
 how_executed,
 remote_meeting_id,
 parent_call_id,
 is_parent_call,
 t21s10_austedo_indication,
 Outcomes_from_Visit,
 Visit_Trigger,
 Visit_Trigger_Date,
 call_name,
 veeva_address_id
)
AS
 SELECT sfa_call.sales_force_id,
        sfa_call.call_id,
        sfa_call.veeva_account_id,
        sfa_call.ims_id,
        sfa_call.ims_outlet_id,
        sfa_call.customer_type,
        sfa_call.first_name,
        sfa_call.last_name,
        sfa_call.call_type,
        sfa_call.legacy_call_type,
        sfa_call.ceph_id,
        sfa_call.dea_num,
        sfa_call.rep_id,
        sfa_call.rep_first_name,
        sfa_call.rep_last_name,
        sfa_call.territory_number,
        sfa_call.zip_on_call,
        sfa_call.call_date,
        sfa_call.submit_date,
        sfa_call.attendees,
        sfa_call.attendee_type,
        sfa_call.area_number,
        sfa_call.region_number,
        sfa_call.tvcmid,
        sfa_call.call_recordtype,
        sfa_call.call_duration,
        sfa_call.call_datetime,
        sfa_call.call_timezone,
        sfa_call.how_executed,
        sfa_call.remote_meeting_id,
        sfa_call.parent_call_id,
        sfa_call.is_parent_call,
        sfa_call.t21s10_austedo_indication,
        sfa_call.Outcomes_from_Visit,
        sfa_call.Visit_Trigger,
        sfa_call.Visit_Trigger_Date,
        sfa_call.call_name,
        sfa_call.veeva_address_id
 FROM datamart.sfa_call
 ORDER BY sfa_call.sales_force_id,
          sfa_call.call_id,
          sfa_call.veeva_account_id,
          sfa_call.ims_id,
          sfa_call.ims_outlet_id
SEGMENTED BY hash(sfa_call.sales_force_id) ALL NODES;

CREATE PROJECTION datamart.sfa_demographics_b0 /*+basename(sfa_demographics),createtype(L)*/ 
(
 veeva_account_id,
 sales_force_id,
 customer_type,
 ims_id,
 npi,
 ims_outlet_code,
 territory_number,
 territory_type,
 territory_status,
 last_name,
 first_name,
 middle_name,
 suffix_name,
 credentials,
 organization_name,
 veeva_address_id,
 address_line1,
 address_line2,
 address_line3,
 city,
 state,
 zip,
 address_status,
 phone,
 phone_ext,
 fax,
 mobile,
 email,
 prim_specialty,
 specialty_code,
 sfa_create_date,
 demo_rank,
 last_call_date,
 calls_last_90_days,
 zip_valid_for_territory_num,
 bp_code,
 sfa_align_date,
 account_demo_id,
 pdrp_flag,
 designation,
 business_type,
 area_number,
 region_number,
 tvcmid,
 address_latitude,
 address_longitude,
 calls_last_6_months,
 address_id,
 staff_email,
 company_managed_email,
 alternate_email
)
AS
 SELECT sfa_demographics.veeva_account_id,
        sfa_demographics.sales_force_id,
        sfa_demographics.customer_type,
        sfa_demographics.ims_id,
        sfa_demographics.npi,
        sfa_demographics.ims_outlet_code,
        sfa_demographics.territory_number,
        sfa_demographics.territory_type,
        sfa_demographics.territory_status,
        sfa_demographics.last_name,
        sfa_demographics.first_name,
        sfa_demographics.middle_name,
        sfa_demographics.suffix_name,
        sfa_demographics.credentials,
        sfa_demographics.organization_name,
        sfa_demographics.veeva_address_id,
        sfa_demographics.address_line1,
        sfa_demographics.address_line2,
        sfa_demographics.address_line3,
        sfa_demographics.city,
        sfa_demographics.state,
        sfa_demographics.zip,
        sfa_demographics.address_status,
        sfa_demographics.phone,
        sfa_demographics.phone_ext,
        sfa_demographics.fax,
        sfa_demographics.mobile,
        sfa_demographics.email,
        sfa_demographics.prim_specialty,
        sfa_demographics.specialty_code,
        sfa_demographics.sfa_create_date,
        sfa_demographics.demo_rank,
        sfa_demographics.last_call_date,
        sfa_demographics.calls_last_90_days,
        sfa_demographics.zip_valid_for_territory_num,
        sfa_demographics.bp_code,
        sfa_demographics.sfa_align_date,
        sfa_demographics.account_demo_id,
        sfa_demographics.pdrp_flag,
        sfa_demographics.designation,
        sfa_demographics.business_type,
        sfa_demographics.area_number,
        sfa_demographics.region_number,
        sfa_demographics.tvcmid,
        sfa_demographics.address_latitude,
        sfa_demographics.address_longitude,
        sfa_demographics.calls_last_6_months,
        sfa_demographics.address_id,
        sfa_demographics.staff_email,
        sfa_demographics.company_managed_email,
        sfa_demographics.alternate_email
 FROM datamart.sfa_demographics
 ORDER BY sfa_demographics.veeva_account_id
SEGMENTED BY hash(sfa_demographics.veeva_account_id) ALL NODES;

CREATE PROJECTION datamart.sfa_promotional_items_b0 /*+basename(sfa_promotional_items),createtype(L)*/ 
(
 sales_force_id,
 territory_number,
 product_name,
 promo_item_id,
 promo_item_name,
 distribution_date,
 quantity,
 item_name,
 item_type,
 call_id,
 veeva_sample_id,
 rep_id,
 rep_first_name,
 rep_last_name,
 veeva_account_id,
 ims_id,
 prescriber_first_name,
 prescriber_last_name,
 name_on_call,
 zip_on_call,
 area_number,
 region_number,
 tvcmid,
 basket_id,
 basket_name,
 product_value
)
AS
 SELECT sfa_promotional_items.sales_force_id,
        sfa_promotional_items.territory_number,
        sfa_promotional_items.product_name,
        sfa_promotional_items.promo_item_id,
        sfa_promotional_items.promo_item_name,
        sfa_promotional_items.distribution_date,
        sfa_promotional_items.quantity,
        sfa_promotional_items.item_name,
        sfa_promotional_items.item_type,
        sfa_promotional_items.call_id,
        sfa_promotional_items.veeva_sample_id,
        sfa_promotional_items.rep_id,
        sfa_promotional_items.rep_first_name,
        sfa_promotional_items.rep_last_name,
        sfa_promotional_items.veeva_account_id,
        sfa_promotional_items.ims_id,
        sfa_promotional_items.prescriber_first_name,
        sfa_promotional_items.prescriber_last_name,
        sfa_promotional_items.name_on_call,
        sfa_promotional_items.zip_on_call,
        sfa_promotional_items.area_number,
        sfa_promotional_items.region_number,
        sfa_promotional_items.tvcmid,
        sfa_promotional_items.basket_id,
        sfa_promotional_items.basket_name,
        sfa_promotional_items.product_value
 FROM datamart.sfa_promotional_items
 ORDER BY sfa_promotional_items.sales_force_id,
          sfa_promotional_items.territory_number,
          sfa_promotional_items.product_name,
          sfa_promotional_items.promo_item_id,
          sfa_promotional_items.promo_item_name,
          sfa_promotional_items.distribution_date,
          sfa_promotional_items.quantity,
          sfa_promotional_items.item_name,
          sfa_promotional_items.item_type,
          sfa_promotional_items.call_id,
          sfa_promotional_items.veeva_sample_id,
          sfa_promotional_items.rep_id,
          sfa_promotional_items.rep_first_name,
          sfa_promotional_items.rep_last_name,
          sfa_promotional_items.veeva_account_id,
          sfa_promotional_items.ims_id
SEGMENTED BY hash(sfa_promotional_items.distribution_date) ALL NODES;

CREATE PROJECTION datamart.leave_of_absence_b0 /*+basename(leave_of_absence),createtype(L)*/ 
(
 employee_id,
 leave_date,
 return_date,
 days_of_leave
)
AS
 SELECT leave_of_absence.employee_id,
        leave_of_absence.leave_date,
        leave_of_absence.return_date,
        leave_of_absence.days_of_leave
 FROM datamart.leave_of_absence
 ORDER BY leave_of_absence.employee_id,
          leave_of_absence.leave_date,
          leave_of_absence.return_date,
          leave_of_absence.days_of_leave
SEGMENTED BY hash(leave_of_absence.employee_id, leave_of_absence.leave_date, leave_of_absence.return_date, leave_of_absence.days_of_leave) ALL NODES;

CREATE PROJECTION datamart.time_off_territory_b0 /*+basename(time_off_territory),createtype(L)*/ 
(
 territory_number,
 time_off_date,
 time_on_date,
 description,
 duration_in_days,
 veeva_account_id,
 file_id,
 record_id
)
AS
 SELECT time_off_territory.territory_number,
        time_off_territory.time_off_date,
        time_off_territory.time_on_date,
        time_off_territory.description,
        time_off_territory.duration_in_days,
        time_off_territory.veeva_account_id,
        time_off_territory.file_id,
        time_off_territory.record_id
 FROM datamart.time_off_territory
 ORDER BY time_off_territory.territory_number,
          time_off_territory.time_off_date,
          time_off_territory.time_on_date,
          time_off_territory.description,
          time_off_territory.duration_in_days,
          time_off_territory.veeva_account_id
SEGMENTED BY hash(time_off_territory.time_off_date, time_off_territory.time_on_date) ALL NODES;

CREATE PROJECTION datamart.product_basket_b0 /*+basename(product_basket),createtype(L)*/ 
(
 parent_basket_name,
 parent_basket_type,
 parent_basket_id,
 child_basket_name,
 child_basket_type,
 child_basket_id
)
AS
 SELECT product_basket.parent_basket_name,
        product_basket.parent_basket_type,
        product_basket.parent_basket_id,
        product_basket.child_basket_name,
        product_basket.child_basket_type,
        product_basket.child_basket_id
 FROM datamart.product_basket
 ORDER BY product_basket.parent_basket_name,
          product_basket.parent_basket_type,
          product_basket.parent_basket_id,
          product_basket.child_basket_name,
          product_basket.child_basket_type,
          product_basket.child_basket_id
SEGMENTED BY hash(product_basket.parent_basket_id, product_basket.child_basket_id) ALL NODES;

CREATE PROJECTION datamart.oncology_sales_quotas_b0 /*+basename(oncology_sales_quotas),createtype(L)*/ 
(
 time_period,
 sales_force_id,
 area_number,
 region_number,
 territory_number,
 product_name,
 basket_id,
 quota_qty,
 quota_dollars,
 quota_strength_unit,
 file_id,
 record_id
)
AS
 SELECT oncology_sales_quotas.time_period,
        oncology_sales_quotas.sales_force_id,
        oncology_sales_quotas.area_number,
        oncology_sales_quotas.region_number,
        oncology_sales_quotas.territory_number,
        oncology_sales_quotas.product_name,
        oncology_sales_quotas.basket_id,
        oncology_sales_quotas.quota_qty,
        oncology_sales_quotas.quota_dollars,
        oncology_sales_quotas.quota_strength_unit,
        oncology_sales_quotas.file_id,
        oncology_sales_quotas.record_id
 FROM datamart.oncology_sales_quotas
 ORDER BY oncology_sales_quotas.time_period,
          oncology_sales_quotas.sales_force_id,
          oncology_sales_quotas.area_number,
          oncology_sales_quotas.region_number,
          oncology_sales_quotas.territory_number,
          oncology_sales_quotas.product_name,
          oncology_sales_quotas.basket_id,
          oncology_sales_quotas.quota_qty,
          oncology_sales_quotas.quota_dollars,
          oncology_sales_quotas.quota_strength_unit,
          oncology_sales_quotas.file_id,
          oncology_sales_quotas.record_id
SEGMENTED BY hash(oncology_sales_quotas.record_id) ALL NODES;

CREATE PROJECTION datamart.direct_sales_b0 /*+basename(direct_sales),createtype(L)*/ 
(
 account_id,
 location_id,
 shipment_date,
 ndc_code,
 product_name,
 basket_id,
 basket_name,
 transaction_type,
 direct_sales_units,
 direct_sales_dollars,
 unit_ap,
 total_ap,
 file_id,
 record_id,
 tvcmid
)
AS
 SELECT direct_sales.account_id,
        direct_sales.location_id,
        direct_sales.shipment_date,
        direct_sales.ndc_code,
        direct_sales.product_name,
        direct_sales.basket_id,
        direct_sales.basket_name,
        direct_sales.transaction_type,
        direct_sales.direct_sales_units,
        direct_sales.direct_sales_dollars,
        direct_sales.unit_ap,
        direct_sales.total_ap,
        direct_sales.file_id,
        direct_sales.record_id,
        direct_sales.tvcmid
 FROM datamart.direct_sales
 ORDER BY direct_sales.account_id,
          direct_sales.location_id,
          direct_sales.shipment_date,
          direct_sales.ndc_code,
          direct_sales.product_name,
          direct_sales.basket_id,
          direct_sales.basket_name,
          direct_sales.transaction_type,
          direct_sales.direct_sales_units,
          direct_sales.direct_sales_dollars,
          direct_sales.unit_ap,
          direct_sales.total_ap,
          direct_sales.file_id,
          direct_sales.record_id
SEGMENTED BY hash(direct_sales.record_id) ALL NODES;

CREATE PROJECTION datamart.customer_address_link_b0 /*+basename(customer_address_link),createtype(L)*/ 
(
 tvcmid,
 tvcm_addr_id,
 dsp_id,
 dsp_hce_id,
 dsp_addr_id,
 file_id,
 record_id
)
AS
 SELECT customer_address_link.tvcmid,
        customer_address_link.tvcm_addr_id,
        customer_address_link.dsp_id,
        customer_address_link.dsp_hce_id,
        customer_address_link.dsp_addr_id,
        customer_address_link.file_id,
        customer_address_link.record_id
 FROM datamart.customer_address_link
 ORDER BY customer_address_link.tvcmid,
          customer_address_link.tvcm_addr_id,
          customer_address_link.dsp_id,
          customer_address_link.dsp_hce_id,
          customer_address_link.dsp_addr_id,
          customer_address_link.file_id,
          customer_address_link.record_id
SEGMENTED BY hash(customer_address_link.record_id) ALL NODES;

CREATE PROJECTION datamart.oncology_target_accounts_v1_b0 /*+basename(oncology_target_accounts_v1),createtype(L)*/ 
(
 tvcmid,
 sales_force_id,
 basket_id,
 basket_name,
 acct_demo_id,
 outlet_code,
 target_type,
 target_value,
 applies_from_date,
 applies_to_date,
 active_ind,
 system_start_date,
 system_end_date,
 end_reason,
 veeva_account_id,
 file_id,
 record_id
)
AS
 SELECT oncology_target_accounts.tvcmid,
        oncology_target_accounts.sales_force_id,
        oncology_target_accounts.basket_id,
        oncology_target_accounts.basket_name,
        oncology_target_accounts.acct_demo_id,
        oncology_target_accounts.outlet_code,
        oncology_target_accounts.target_type,
        oncology_target_accounts.target_value,
        oncology_target_accounts.applies_from_date,
        oncology_target_accounts.applies_to_date,
        oncology_target_accounts.active_ind,
        oncology_target_accounts.system_start_date,
        oncology_target_accounts.system_end_date,
        oncology_target_accounts.end_reason,
        oncology_target_accounts.veeva_account_id,
        oncology_target_accounts.file_id,
        oncology_target_accounts.record_id
 FROM datamart.oncology_target_accounts
 ORDER BY oncology_target_accounts.sales_force_id,
          oncology_target_accounts.basket_name,
          oncology_target_accounts.basket_id,
          oncology_target_accounts.acct_demo_id,
          oncology_target_accounts.outlet_code,
          oncology_target_accounts.target_type,
          oncology_target_accounts.target_value,
          oncology_target_accounts.applies_from_date,
          oncology_target_accounts.applies_to_date,
          oncology_target_accounts.active_ind,
          oncology_target_accounts.system_start_date,
          oncology_target_accounts.system_end_date,
          oncology_target_accounts.end_reason,
          oncology_target_accounts.veeva_account_id,
          oncology_target_accounts.file_id,
          oncology_target_accounts.record_id
SEGMENTED BY hash(oncology_target_accounts.record_id) ALL NODES;

CREATE PROJECTION datamart.prescriber_rx__super__v1g17Q3_b0 /*+basename(prescriber_rx__super__v1g17Q3),createtype(D)*/ 
(
 ims_id,
 payer_plan_number ENCODING RLE,
 ims_client_number ENCODING RLE,
 report_frequency ENCODING RLE,
 ims_product_group ENCODING RLE,
 basket_id ENCODING RLE,
 data_date,
 date ENCODING COMMONDELTA_COMP,
 sales_category,
 tvcmid ENCODING DELTARANGE_COMP,
 prescriber_first_name ENCODING GZIP_COMP,
 prescriber_last_name ENCODING GZIP_COMP,
 basket_name,
 basket_type ENCODING RLE,
 rollup_week ENCODING COMMONDELTA_COMP,
 rollup_month ENCODING COMMONDELTA_COMP,
 nrx_count ENCODING DELTARANGE_COMP,
 trx_count ENCODING DELTARANGE_COMP,
 nrx_quantity ENCODING DELTARANGE_COMP,
 trx_quantity ENCODING DELTARANGE_COMP,
 unnormalized_nrx_count ENCODING DELTARANGE_COMP,
 unnormalized_trx_count ENCODING DELTARANGE_COMP,
 market_name ENCODING RLE,
 payer_name,
 plan_name ENCODING GZIP_COMP,
 pbm_name ENCODING GZIP_COMP,
 model,
 payment_method,
 ims_specialty ENCODING GZIP_COMP,
 ims_rx_type ENCODING RLE,
 ims_supplemental_data ENCODING GZIP_COMP,
 ims_zip_other ENCODING RLE,
 ims_report_number_cnt ENCODING RLE,
 cnt_file_id ENCODING COMMONDELTA_COMP,
 cnt_record_id ENCODING DELTARANGE_COMP,
 ims_report_number_qty ENCODING RLE,
 qty_file_id ENCODING COMMONDELTA_COMP,
 qty_record_id ENCODING DELTARANGE_COMP,
 rollup_flag ENCODING RLE,
 indication ENCODING RLE,
 pbm_parent_name
)
AS
 SELECT prescriber_rx.ims_id,
        prescriber_rx.payer_plan_number,
        prescriber_rx.ims_client_number,
        prescriber_rx.report_frequency,
        prescriber_rx.ims_product_group,
        prescriber_rx.basket_id,
        prescriber_rx.data_date,
        prescriber_rx.date,
        prescriber_rx.sales_category,
        prescriber_rx.tvcmid,
        prescriber_rx.prescriber_first_name,
        prescriber_rx.prescriber_last_name,
        prescriber_rx.basket_name,
        prescriber_rx.basket_type,
        prescriber_rx.rollup_week,
        prescriber_rx.rollup_month,
        prescriber_rx.nrx_count,
        prescriber_rx.trx_count,
        prescriber_rx.nrx_quantity,
        prescriber_rx.trx_quantity,
        prescriber_rx.unnormalized_nrx_count,
        prescriber_rx.unnormalized_trx_count,
        prescriber_rx.market_name,
        prescriber_rx.payer_name,
        prescriber_rx.plan_name,
        prescriber_rx.pbm_name,
        prescriber_rx.model,
        prescriber_rx.payment_method,
        prescriber_rx.ims_specialty,
        prescriber_rx.ims_rx_type,
        prescriber_rx.ims_supplemental_data,
        prescriber_rx.ims_zip_other,
        prescriber_rx.ims_report_number_cnt,
        prescriber_rx.cnt_file_id,
        prescriber_rx.cnt_record_id,
        prescriber_rx.ims_report_number_qty,
        prescriber_rx.qty_file_id,
        prescriber_rx.qty_record_id,
        prescriber_rx.rollup_flag,
        prescriber_rx.indication,
        prescriber_rx.pbm_parent_name
 FROM datamart.prescriber_rx
 ORDER BY prescriber_rx.rollup_flag,
          prescriber_rx.ims_rx_type,
          prescriber_rx.report_frequency,
          prescriber_rx.basket_type,
          prescriber_rx.ims_client_number,
          prescriber_rx.indication,
          prescriber_rx.market_name,
          prescriber_rx.ims_product_group,
          prescriber_rx.basket_id,
          prescriber_rx.ims_specialty,
          prescriber_rx.ims_zip_other,
          prescriber_rx.ims_report_number_qty,
          prescriber_rx.ims_report_number_cnt,
          prescriber_rx.tvcmid,
          prescriber_rx.payment_method,
          prescriber_rx.payer_plan_number,
          prescriber_rx.rollup_month,
          prescriber_rx.rollup_week,
          prescriber_rx.nrx_quantity,
          prescriber_rx.trx_quantity,
          prescriber_rx.nrx_count,
          prescriber_rx.trx_count,
          prescriber_rx.sales_category,
          prescriber_rx.ims_id
SEGMENTED BY hash(prescriber_rx.ims_id) ALL NODES;

CREATE PROJECTION datamart.roster_b0 /*+basename(roster),createtype(L)*/ 
(
 employee_id,
 territory_number,
 territory_name,
 sales_force_id,
 full_name,
 first_name,
 middle_name,
 last_name,
 address_line1,
 address_line2,
 address_line3,
 city,
 state,
 zip,
 country,
 business_address_line1,
 business_address_line2,
 business_address_line3,
 business_city,
 business_state,
 business_zip,
 business_country,
 shipping_address_line1,
 shipping_address_line2,
 shipping_address_line3,
 shipping_city,
 shipping_state,
 shipping_zip,
 shipping_country,
 business_phone,
 home_phone,
 mobile_phone,
 fax,
 voice_mail_extension,
 email,
 hire_date,
 title,
 rep_type,
 username,
 out_of_territory,
 parent_territory_number,
 company_code,
 original_hire_date,
 team,
 salutation,
 suffix,
 cost_center,
 sample_eligibility_flag,
 samplestorage_address_line1,
 samplestorage_address_line2,
 samplestorage_address_line3,
 samplestorage_city,
 samplestorage_zip,
 samplestorage_state,
 samplestorage_country,
 hr_status,
 reg_contract,
 preferred_name,
 business_unit_cd,
 business_unit_name,
 veeva_user_id,
 mngr_employee_id,
 birth_month_day,
 calculated_rep_type,
 job_code,
 oracle_string,
 global_employee_id,
 supervisor_global_employee_id,
 separation_date,
 separation_reason,
 fleet_eligible,
 certified_field_trainer,
 assignment_type
)
AS
 SELECT roster.employee_id,
        roster.territory_number,
        roster.territory_name,
        roster.sales_force_id,
        roster.full_name,
        roster.first_name,
        roster.middle_name,
        roster.last_name,
        roster.address_line1,
        roster.address_line2,
        roster.address_line3,
        roster.city,
        roster.state,
        roster.zip,
        roster.country,
        roster.business_address_line1,
        roster.business_address_line2,
        roster.business_address_line3,
        roster.business_city,
        roster.business_state,
        roster.business_zip,
        roster.business_country,
        roster.shipping_address_line1,
        roster.shipping_address_line2,
        roster.shipping_address_line3,
        roster.shipping_city,
        roster.shipping_state,
        roster.shipping_zip,
        roster.shipping_country,
        roster.business_phone,
        roster.home_phone,
        roster.mobile_phone,
        roster.fax,
        roster.voice_mail_extension,
        roster.email,
        roster.hire_date,
        roster.title,
        roster.rep_type,
        roster.username,
        roster.out_of_territory,
        roster.parent_territory_number,
        roster.company_code,
        roster.original_hire_date,
        roster.team,
        roster.salutation,
        roster.suffix,
        roster.cost_center,
        roster.sample_eligibility_flag,
        roster.samplestorage_address_line1,
        roster.samplestorage_address_line2,
        roster.samplestorage_address_line3,
        roster.samplestorage_city,
        roster.samplestorage_zip,
        roster.samplestorage_state,
        roster.samplestorage_country,
        roster.hr_status,
        roster.reg_contract,
        roster.preferred_name,
        roster.business_unit_cd,
        roster.business_unit_name,
        roster.veeva_user_id,
        roster.mngr_employee_id,
        roster.birth_month_day,
        roster.calculated_rep_type,
        roster.job_code,
        roster.oracle_string,
        roster.global_employee_id,
        roster.supervisor_global_employee_id,
        roster.separation_date,
        roster.separation_reason,
        roster.fleet_eligible,
        roster.certified_field_trainer,
        roster.assignment_type
 FROM datamart.roster
 ORDER BY roster.employee_id,
          roster.territory_number,
          roster.territory_name,
          roster.sales_force_id,
          roster.full_name,
          roster.first_name,
          roster.middle_name,
          roster.last_name,
          roster.address_line1,
          roster.address_line2,
          roster.address_line3,
          roster.city,
          roster.state,
          roster.zip,
          roster.country,
          roster.business_address_line1,
          roster.business_address_line2,
          roster.business_address_line3,
          roster.business_city,
          roster.business_state,
          roster.business_zip,
          roster.business_country,
          roster.shipping_address_line1,
          roster.shipping_address_line2,
          roster.shipping_address_line3,
          roster.shipping_city,
          roster.shipping_state,
          roster.shipping_zip,
          roster.shipping_country,
          roster.business_phone,
          roster.home_phone,
          roster.mobile_phone,
          roster.fax,
          roster.voice_mail_extension,
          roster.email,
          roster.hire_date,
          roster.title,
          roster.rep_type,
          roster.username,
          roster.out_of_territory,
          roster.parent_territory_number,
          roster.company_code,
          roster.original_hire_date,
          roster.team,
          roster.salutation,
          roster.suffix,
          roster.cost_center,
          roster.sample_eligibility_flag,
          roster.samplestorage_address_line1,
          roster.samplestorage_address_line2,
          roster.samplestorage_address_line3,
          roster.samplestorage_city,
          roster.samplestorage_zip,
          roster.samplestorage_state,
          roster.samplestorage_country,
          roster.hr_status,
          roster.reg_contract,
          roster.preferred_name,
          roster.business_unit_cd,
          roster.business_unit_name,
          roster.veeva_user_id,
          roster.mngr_employee_id,
          roster.birth_month_day,
          roster.calculated_rep_type,
          roster.job_code,
          roster.oracle_string,
          roster.global_employee_id,
          roster.supervisor_global_employee_id,
          roster.separation_date,
          roster.separation_reason
SEGMENTED BY hash(roster.business_state, roster.shipping_state, roster.hire_date, roster.out_of_territory, roster.original_hire_date, roster.samplestorage_state, roster.birth_month_day, roster.separation_date, roster.rep_type, roster.sample_eligibility_flag, roster.business_unit_cd, roster.job_code, roster.salutation, roster.suffix, roster.calculated_rep_type, roster.cost_center, roster.global_employee_id, roster.supervisor_global_employee_id, roster.oracle_string, roster.employee_id, roster.territory_number, roster.sales_force_id, roster.full_name, roster.first_name, roster.middle_name, roster.last_name, roster.address_line1, roster.address_line2, roster.address_line3, roster.city, roster.state, roster.zip) ALL NODES;

CREATE PROJECTION datamart.prescriber_rx_cnt_base_adhoc_b0 /*+basename(prescriber_rx_cnt_base_adhoc),createtype(L)*/ 
(
 ims_id,
 payer_plan_number,
 ims_client_number,
 report_frequency,
 ims_product_group,
 basket_id,
 data_date,
 date,
 sales_category,
 tvcmid,
 prescriber_first_name,
 prescriber_last_name,
 basket_name,
 basket_type,
 rollup_week,
 rollup_month,
 nrx_count,
 trx_count,
 nrx_quantity,
 trx_quantity,
 unnormalized_nrx_count,
 unnormalized_trx_count,
 market_name,
 payer_name,
 plan_name,
 pbm_name,
 model,
 payment_method,
 ims_specialty,
 ims_rx_type,
 ims_supplemental_data,
 zip_other,
 ims_report_number,
 file_id,
 record_id,
 ims_report_number_qty,
 indication,
 load_step
)
AS
 SELECT prescriber_rx_cnt_base_adhoc.ims_id,
        prescriber_rx_cnt_base_adhoc.payer_plan_number,
        prescriber_rx_cnt_base_adhoc.ims_client_number,
        prescriber_rx_cnt_base_adhoc.report_frequency,
        prescriber_rx_cnt_base_adhoc.ims_product_group,
        prescriber_rx_cnt_base_adhoc.basket_id,
        prescriber_rx_cnt_base_adhoc.data_date,
        prescriber_rx_cnt_base_adhoc.date,
        prescriber_rx_cnt_base_adhoc.sales_category,
        prescriber_rx_cnt_base_adhoc.tvcmid,
        prescriber_rx_cnt_base_adhoc.prescriber_first_name,
        prescriber_rx_cnt_base_adhoc.prescriber_last_name,
        prescriber_rx_cnt_base_adhoc.basket_name,
        prescriber_rx_cnt_base_adhoc.basket_type,
        prescriber_rx_cnt_base_adhoc.rollup_week,
        prescriber_rx_cnt_base_adhoc.rollup_month,
        prescriber_rx_cnt_base_adhoc.nrx_count,
        prescriber_rx_cnt_base_adhoc.trx_count,
        prescriber_rx_cnt_base_adhoc.nrx_quantity,
        prescriber_rx_cnt_base_adhoc.trx_quantity,
        prescriber_rx_cnt_base_adhoc.unnormalized_nrx_count,
        prescriber_rx_cnt_base_adhoc.unnormalized_trx_count,
        prescriber_rx_cnt_base_adhoc.market_name,
        prescriber_rx_cnt_base_adhoc.payer_name,
        prescriber_rx_cnt_base_adhoc.plan_name,
        prescriber_rx_cnt_base_adhoc.pbm_name,
        prescriber_rx_cnt_base_adhoc.model,
        prescriber_rx_cnt_base_adhoc.payment_method,
        prescriber_rx_cnt_base_adhoc.ims_specialty,
        prescriber_rx_cnt_base_adhoc.ims_rx_type,
        prescriber_rx_cnt_base_adhoc.ims_supplemental_data,
        prescriber_rx_cnt_base_adhoc.zip_other,
        prescriber_rx_cnt_base_adhoc.ims_report_number,
        prescriber_rx_cnt_base_adhoc.file_id,
        prescriber_rx_cnt_base_adhoc.record_id,
        prescriber_rx_cnt_base_adhoc.ims_report_number_qty,
        prescriber_rx_cnt_base_adhoc.indication,
        prescriber_rx_cnt_base_adhoc.load_step
 FROM datamart.prescriber_rx_cnt_base_adhoc
 ORDER BY prescriber_rx_cnt_base_adhoc.ims_id,
          prescriber_rx_cnt_base_adhoc.payer_plan_number,
          prescriber_rx_cnt_base_adhoc.ims_client_number,
          prescriber_rx_cnt_base_adhoc.report_frequency,
          prescriber_rx_cnt_base_adhoc.ims_product_group,
          prescriber_rx_cnt_base_adhoc.basket_id,
          prescriber_rx_cnt_base_adhoc.data_date,
          prescriber_rx_cnt_base_adhoc.date,
          prescriber_rx_cnt_base_adhoc.sales_category,
          prescriber_rx_cnt_base_adhoc.tvcmid,
          prescriber_rx_cnt_base_adhoc.prescriber_first_name,
          prescriber_rx_cnt_base_adhoc.prescriber_last_name,
          prescriber_rx_cnt_base_adhoc.basket_name,
          prescriber_rx_cnt_base_adhoc.basket_type,
          prescriber_rx_cnt_base_adhoc.rollup_week,
          prescriber_rx_cnt_base_adhoc.rollup_month,
          prescriber_rx_cnt_base_adhoc.nrx_count,
          prescriber_rx_cnt_base_adhoc.trx_count,
          prescriber_rx_cnt_base_adhoc.nrx_quantity,
          prescriber_rx_cnt_base_adhoc.trx_quantity,
          prescriber_rx_cnt_base_adhoc.unnormalized_nrx_count,
          prescriber_rx_cnt_base_adhoc.unnormalized_trx_count,
          prescriber_rx_cnt_base_adhoc.market_name,
          prescriber_rx_cnt_base_adhoc.payer_name,
          prescriber_rx_cnt_base_adhoc.plan_name,
          prescriber_rx_cnt_base_adhoc.pbm_name,
          prescriber_rx_cnt_base_adhoc.model,
          prescriber_rx_cnt_base_adhoc.payment_method,
          prescriber_rx_cnt_base_adhoc.ims_specialty,
          prescriber_rx_cnt_base_adhoc.ims_rx_type,
          prescriber_rx_cnt_base_adhoc.ims_supplemental_data,
          prescriber_rx_cnt_base_adhoc.zip_other,
          prescriber_rx_cnt_base_adhoc.ims_report_number,
          prescriber_rx_cnt_base_adhoc.file_id,
          prescriber_rx_cnt_base_adhoc.record_id,
          prescriber_rx_cnt_base_adhoc.ims_report_number_qty,
          prescriber_rx_cnt_base_adhoc.indication
SEGMENTED BY hash(prescriber_rx_cnt_base_adhoc.file_id) ALL NODES;

CREATE PROJECTION datamart.customer_hcp_demographics_b0 /*+basename(customer_hcp_demographics),createtype(L)*/ 
(
 tvcmid,
 ims_id,
 npi,
 last_name,
 first_name,
 middle_name,
 personal_suffix,
 medical_suffix,
 primary_specialty,
 secondary_specialty,
 address_line1,
 address_line2,
 city,
 state_code,
 zip,
 business_phone,
 business_email,
 hce_status_desc,
 np_pa_flag,
 address_id,
 address_latitude,
 address_longitude,
 file_id,
 record_id
)
AS
 SELECT customer_hcp_demographics.tvcmid,
        customer_hcp_demographics.ims_id,
        customer_hcp_demographics.npi,
        customer_hcp_demographics.last_name,
        customer_hcp_demographics.first_name,
        customer_hcp_demographics.middle_name,
        customer_hcp_demographics.personal_suffix,
        customer_hcp_demographics.medical_suffix,
        customer_hcp_demographics.primary_specialty,
        customer_hcp_demographics.secondary_specialty,
        customer_hcp_demographics.address_line1,
        customer_hcp_demographics.address_line2,
        customer_hcp_demographics.city,
        customer_hcp_demographics.state_code,
        customer_hcp_demographics.zip,
        customer_hcp_demographics.business_phone,
        customer_hcp_demographics.business_email,
        customer_hcp_demographics.hce_status_desc,
        customer_hcp_demographics.np_pa_flag,
        customer_hcp_demographics.address_id,
        customer_hcp_demographics.address_latitude,
        customer_hcp_demographics.address_longitude,
        customer_hcp_demographics.file_id,
        customer_hcp_demographics.record_id
 FROM datamart.customer_hcp_demographics
 ORDER BY customer_hcp_demographics.tvcmid,
          customer_hcp_demographics.ims_id
SEGMENTED BY hash(customer_hcp_demographics.tvcmid) ALL NODES;

CREATE PROJECTION datamart.prescriber_combined_demographics_b0 /*+basename(prescriber_combined_demographics),createtype(L)*/ 
(
 sales_force_id,
 ims_id,
 npi,
 tvcmid,
 veeva_account_id,
 specialty,
 secondary_specialty,
 first_name,
 middle_name,
 last_name,
 ptr_veeva_address_id,
 ptr_address_1,
 ptr_address_2,
 ptr_address_3,
 ptr_city,
 ptr_state,
 ptr_zip,
 ptr_phone,
 ptr_territory_num,
 ptr_territory_type,
 ptr_address_source,
 ptr_mailable,
 dea_num,
 pdrp_flag,
 pdrp_date,
 np_pa_flag,
 no_spend,
 ama_no_contact_flag,
 email,
 degree,
 address_id,
 address_latitude,
 address_longitude,
 row_source
)
AS
 SELECT prescriber_combined_demographics.sales_force_id,
        prescriber_combined_demographics.ims_id,
        prescriber_combined_demographics.npi,
        prescriber_combined_demographics.tvcmid,
        prescriber_combined_demographics.veeva_account_id,
        prescriber_combined_demographics.specialty,
        prescriber_combined_demographics.secondary_specialty,
        prescriber_combined_demographics.first_name,
        prescriber_combined_demographics.middle_name,
        prescriber_combined_demographics.last_name,
        prescriber_combined_demographics.ptr_veeva_address_id,
        prescriber_combined_demographics.ptr_address_1,
        prescriber_combined_demographics.ptr_address_2,
        prescriber_combined_demographics.ptr_address_3,
        prescriber_combined_demographics.ptr_city,
        prescriber_combined_demographics.ptr_state,
        prescriber_combined_demographics.ptr_zip,
        prescriber_combined_demographics.ptr_phone,
        prescriber_combined_demographics.ptr_territory_num,
        prescriber_combined_demographics.ptr_territory_type,
        prescriber_combined_demographics.ptr_address_source,
        prescriber_combined_demographics.ptr_mailable,
        prescriber_combined_demographics.dea_num,
        prescriber_combined_demographics.pdrp_flag,
        prescriber_combined_demographics.pdrp_date,
        prescriber_combined_demographics.np_pa_flag,
        prescriber_combined_demographics.no_spend,
        prescriber_combined_demographics.ama_no_contact_flag,
        prescriber_combined_demographics.email,
        prescriber_combined_demographics.degree,
        prescriber_combined_demographics.address_id,
        prescriber_combined_demographics.address_latitude,
        prescriber_combined_demographics.address_longitude,
        prescriber_combined_demographics.row_source
 FROM datamart.prescriber_combined_demographics
 ORDER BY prescriber_combined_demographics.sales_force_id,
          prescriber_combined_demographics.ims_id,
          prescriber_combined_demographics.npi,
          prescriber_combined_demographics.tvcmid,
          prescriber_combined_demographics.veeva_account_id,
          prescriber_combined_demographics.specialty,
          prescriber_combined_demographics.secondary_specialty,
          prescriber_combined_demographics.first_name,
          prescriber_combined_demographics.middle_name,
          prescriber_combined_demographics.last_name,
          prescriber_combined_demographics.ptr_veeva_address_id,
          prescriber_combined_demographics.ptr_address_1,
          prescriber_combined_demographics.ptr_address_2,
          prescriber_combined_demographics.ptr_address_3,
          prescriber_combined_demographics.ptr_city,
          prescriber_combined_demographics.ptr_state,
          prescriber_combined_demographics.ptr_zip,
          prescriber_combined_demographics.ptr_phone,
          prescriber_combined_demographics.ptr_territory_num,
          prescriber_combined_demographics.ptr_territory_type,
          prescriber_combined_demographics.ptr_address_source,
          prescriber_combined_demographics.ptr_mailable,
          prescriber_combined_demographics.dea_num,
          prescriber_combined_demographics.pdrp_flag,
          prescriber_combined_demographics.pdrp_date,
          prescriber_combined_demographics.np_pa_flag,
          prescriber_combined_demographics.no_spend,
          prescriber_combined_demographics.ama_no_contact_flag,
          prescriber_combined_demographics.email,
          prescriber_combined_demographics.degree,
          prescriber_combined_demographics.address_id,
          prescriber_combined_demographics.address_latitude,
          prescriber_combined_demographics.address_longitude,
          prescriber_combined_demographics.row_source
SEGMENTED BY hash(prescriber_combined_demographics.tvcmid, prescriber_combined_demographics.ptr_state, prescriber_combined_demographics.ptr_zip, prescriber_combined_demographics.ptr_mailable, prescriber_combined_demographics.pdrp_flag, prescriber_combined_demographics.pdrp_date, prescriber_combined_demographics.np_pa_flag, prescriber_combined_demographics.no_spend, prescriber_combined_demographics.ama_no_contact_flag, prescriber_combined_demographics.address_id, prescriber_combined_demographics.ims_id, prescriber_combined_demographics.npi, prescriber_combined_demographics.dea_num, prescriber_combined_demographics.ptr_territory_num, prescriber_combined_demographics.sales_force_id, prescriber_combined_demographics.veeva_account_id, prescriber_combined_demographics.ptr_veeva_address_id, prescriber_combined_demographics.address_latitude, prescriber_combined_demographics.address_longitude, prescriber_combined_demographics.ptr_territory_type, prescriber_combined_demographics.ptr_phone, prescriber_combined_demographics.first_name, prescriber_combined_demographics.middle_name, prescriber_combined_demographics.last_name, prescriber_combined_demographics.ptr_city, prescriber_combined_demographics.ptr_address_source, prescriber_combined_demographics.ptr_address_1, prescriber_combined_demographics.ptr_address_2, prescriber_combined_demographics.ptr_address_3, prescriber_combined_demographics.email, prescriber_combined_demographics.degree, prescriber_combined_demographics.row_source) ALL NODES;

CREATE PROJECTION datamart.drm45_product_list_b0 /*+basename(drm45_product_list),createtype(L)*/ 
(
 file_location,
 source_name,
 file_code,
 product_group,
 product_name,
 mfg_number,
 status,
 cmf_code,
 product_description,
 mfg_name,
 usc_code,
 file_id,
 record_id
)
AS
 SELECT drm45_product_list.file_location,
        drm45_product_list.source_name,
        drm45_product_list.file_code,
        drm45_product_list.product_group,
        drm45_product_list.product_name,
        drm45_product_list.mfg_number,
        drm45_product_list.status,
        drm45_product_list.cmf_code,
        drm45_product_list.product_description,
        drm45_product_list.mfg_name,
        drm45_product_list.usc_code,
        drm45_product_list.file_id,
        drm45_product_list.record_id
 FROM datamart.drm45_product_list
 ORDER BY drm45_product_list.file_location,
          drm45_product_list.file_id,
          drm45_product_list.record_id
SEGMENTED BY hash(drm45_product_list.record_id) ALL NODES;

CREATE PROJECTION datamart.activity_hub_b0 /*+basename(activity_hub),createtype(L)*/ 
(
 activity_id,
 federation_id,
 contact,
 source_name,
 "datetime",
 trackback_id,
 previous_activity,
 level_name,
 activity_role_name,
 type_name,
 native_type,
 details,
 line_item_id,
 brand_name,
 activity,
 line_item_datetime,
 line_item_previous_line_item,
 line_item_trackback_id,
 line_item_details,
 line_item_type_name,
 line_item_native_type,
 basket_id,
 web_url
)
AS
 SELECT activity_hub.activity_id,
        activity_hub.federation_id,
        activity_hub.contact,
        activity_hub.source_name,
        activity_hub."datetime",
        activity_hub.trackback_id,
        activity_hub.previous_activity,
        activity_hub.level_name,
        activity_hub.activity_role_name,
        activity_hub.type_name,
        activity_hub.native_type,
        activity_hub.details,
        activity_hub.line_item_id,
        activity_hub.brand_name,
        activity_hub.activity,
        activity_hub.line_item_datetime,
        activity_hub.line_item_previous_line_item,
        activity_hub.line_item_trackback_id,
        activity_hub.line_item_details,
        activity_hub.line_item_type_name,
        activity_hub.line_item_native_type,
        activity_hub.basket_id,
        activity_hub.web_url
 FROM datamart.activity_hub
 ORDER BY activity_hub.activity_id
SEGMENTED BY hash(activity_hub.activity_id) ALL NODES;

CREATE PROJECTION datamart.veeva_suggestions_austedo_b0 /*+basename(veeva_suggestions_austedo),createtype(L)*/ 
(
 account_priority_score_vod__c,
 account_vod__c,
 display_dismiss_vod__c,
 display_mark_as_complete_vod__c,
 display_score_vod__c,
 email_template_id_vod__c,
 email_template_vault_id_vod__c,
 email_template_vod__c,
 expiration_date_vod__c,
 marked_as_complete_vod__c,
 mark_complete_count_vod__c,
 name,
 ownerid,
 posted_date,
 priority_vod__c,
 reason_vod__c,
 record_type_name_vod__c,
 suppress_reason_vod__c,
 title_vod__c,
 business_rule_name,
 product,
 days_since_last_call,
 calls_per_mth,
 austedo_decile,
 avg_new_dose,
 avg_cont_dose,
 ss_flag,
 austedo_rx,
 hcp_name,
 rep_name,
 batch_num,
 territory_number,
 tvcmid
)
AS
 SELECT veeva_suggestions_austedo.account_priority_score_vod__c,
        veeva_suggestions_austedo.account_vod__c,
        veeva_suggestions_austedo.display_dismiss_vod__c,
        veeva_suggestions_austedo.display_mark_as_complete_vod__c,
        veeva_suggestions_austedo.display_score_vod__c,
        veeva_suggestions_austedo.email_template_id_vod__c,
        veeva_suggestions_austedo.email_template_vault_id_vod__c,
        veeva_suggestions_austedo.email_template_vod__c,
        veeva_suggestions_austedo.expiration_date_vod__c,
        veeva_suggestions_austedo.marked_as_complete_vod__c,
        veeva_suggestions_austedo.mark_complete_count_vod__c,
        veeva_suggestions_austedo.name,
        veeva_suggestions_austedo.ownerid,
        veeva_suggestions_austedo.posted_date,
        veeva_suggestions_austedo.priority_vod__c,
        veeva_suggestions_austedo.reason_vod__c,
        veeva_suggestions_austedo.record_type_name_vod__c,
        veeva_suggestions_austedo.suppress_reason_vod__c,
        veeva_suggestions_austedo.title_vod__c,
        veeva_suggestions_austedo.business_rule_name,
        veeva_suggestions_austedo.product,
        veeva_suggestions_austedo.days_since_last_call,
        veeva_suggestions_austedo.calls_per_mth,
        veeva_suggestions_austedo.austedo_decile,
        veeva_suggestions_austedo.avg_new_dose,
        veeva_suggestions_austedo.avg_cont_dose,
        veeva_suggestions_austedo.ss_flag,
        veeva_suggestions_austedo.austedo_rx,
        veeva_suggestions_austedo.hcp_name,
        veeva_suggestions_austedo.rep_name,
        veeva_suggestions_austedo.batch_num,
        veeva_suggestions_austedo.territory_number,
        veeva_suggestions_austedo.tvcmid
 FROM datamart.veeva_suggestions_austedo
 ORDER BY veeva_suggestions_austedo.account_priority_score_vod__c,
          veeva_suggestions_austedo.account_vod__c,
          veeva_suggestions_austedo.display_dismiss_vod__c,
          veeva_suggestions_austedo.display_mark_as_complete_vod__c,
          veeva_suggestions_austedo.display_score_vod__c,
          veeva_suggestions_austedo.email_template_id_vod__c,
          veeva_suggestions_austedo.email_template_vault_id_vod__c,
          veeva_suggestions_austedo.email_template_vod__c
SEGMENTED BY hash(veeva_suggestions_austedo.account_priority_score_vod__c, veeva_suggestions_austedo.expiration_date_vod__c, veeva_suggestions_austedo.mark_complete_count_vod__c, veeva_suggestions_austedo.posted_date, veeva_suggestions_austedo.days_since_last_call, veeva_suggestions_austedo.calls_per_mth, veeva_suggestions_austedo.avg_new_dose, veeva_suggestions_austedo.avg_cont_dose) ALL NODES;

CREATE PROJECTION datamart.alternate_alignments_b0 /*+basename(alternate_alignments),createtype(L)*/ 
(
 alignment_name,
 zip_code,
 city,
 state_code,
 territory_number,
 territory_name,
 area_name,
 region_name,
 sales_force_id,
 organization_code,
 mirror_flag,
 mirror_territory_number,
 file_id,
 record_id,
 start_date,
 end_date
)
AS
 SELECT alternate_alignments.alignment_name,
        alternate_alignments.zip_code,
        alternate_alignments.city,
        alternate_alignments.state_code,
        alternate_alignments.territory_number,
        alternate_alignments.territory_name,
        alternate_alignments.area_name,
        alternate_alignments.region_name,
        alternate_alignments.sales_force_id,
        alternate_alignments.organization_code,
        alternate_alignments.mirror_flag,
        alternate_alignments.mirror_territory_number,
        alternate_alignments.file_id,
        alternate_alignments.record_id,
        alternate_alignments.start_date,
        alternate_alignments.end_date
 FROM datamart.alternate_alignments
 ORDER BY alternate_alignments.alignment_name,
          alternate_alignments.zip_code,
          alternate_alignments.city,
          alternate_alignments.state_code,
          alternate_alignments.territory_number,
          alternate_alignments.territory_name,
          alternate_alignments.area_name,
          alternate_alignments.region_name,
          alternate_alignments.sales_force_id,
          alternate_alignments.organization_code,
          alternate_alignments.mirror_flag,
          alternate_alignments.mirror_territory_number,
          alternate_alignments.file_id,
          alternate_alignments.record_id
SEGMENTED BY hash(alternate_alignments.record_id) ALL NODES;

CREATE PROJECTION datamart.chargeback_demographics_b0 /*+basename(chargeback_demographics),createtype(L)*/ 
(
 account_id,
 location_id,
 dea_number,
 end_customer,
 address_1,
 address_2,
 city,
 state,
 zip,
 contract_title,
 contract_id,
 wholesaler_name,
 hin,
 contract_alias,
 wholesaler_dea,
 cot_source,
 class_of_trade,
 file_id,
 record_id,
 tvcmid
)
AS
 SELECT chargeback_demographics.account_id,
        chargeback_demographics.location_id,
        chargeback_demographics.dea_number,
        chargeback_demographics.end_customer,
        chargeback_demographics.address_1,
        chargeback_demographics.address_2,
        chargeback_demographics.city,
        chargeback_demographics.state,
        chargeback_demographics.zip,
        chargeback_demographics.contract_title,
        chargeback_demographics.contract_id,
        chargeback_demographics.wholesaler_name,
        chargeback_demographics.hin,
        chargeback_demographics.contract_alias,
        chargeback_demographics.wholesaler_dea,
        chargeback_demographics.cot_source,
        chargeback_demographics.class_of_trade,
        chargeback_demographics.file_id,
        chargeback_demographics.record_id,
        chargeback_demographics.tvcmid
 FROM datamart.chargeback_demographics
 ORDER BY chargeback_demographics.account_id,
          chargeback_demographics.location_id,
          chargeback_demographics.dea_number,
          chargeback_demographics.end_customer,
          chargeback_demographics.address_1,
          chargeback_demographics.address_2,
          chargeback_demographics.city,
          chargeback_demographics.state,
          chargeback_demographics.zip,
          chargeback_demographics.contract_title,
          chargeback_demographics.contract_id,
          chargeback_demographics.wholesaler_name,
          chargeback_demographics.hin,
          chargeback_demographics.contract_alias,
          chargeback_demographics.wholesaler_dea,
          chargeback_demographics.cot_source,
          chargeback_demographics.class_of_trade,
          chargeback_demographics.file_id,
          chargeback_demographics.record_id
SEGMENTED BY hash(chargeback_demographics.record_id) ALL NODES;

CREATE PROJECTION datamart.current_alignment_b0 /*+basename(current_alignment),createtype(L)*/ 
(
 zip_code,
 city,
 state_code,
 territory_number,
 territory_name,
 area_number,
 area_name,
 region_number,
 region_name,
 sales_force_id,
 organization_code,
 inactive_flag,
 comments,
 mirror_flag,
 mirror_territory_number,
 file_id,
 record_id
)
AS
 SELECT current_alignment.zip_code,
        current_alignment.city,
        current_alignment.state_code,
        current_alignment.territory_number,
        current_alignment.territory_name,
        current_alignment.area_number,
        current_alignment.area_name,
        current_alignment.region_number,
        current_alignment.region_name,
        current_alignment.sales_force_id,
        current_alignment.organization_code,
        current_alignment.inactive_flag,
        current_alignment.comments,
        current_alignment.mirror_flag,
        current_alignment.mirror_territory_number,
        current_alignment.file_id,
        current_alignment.record_id
 FROM datamart.current_alignment
 ORDER BY current_alignment.zip_code,
          current_alignment.city,
          current_alignment.state_code,
          current_alignment.territory_number,
          current_alignment.territory_name,
          current_alignment.area_number,
          current_alignment.area_name,
          current_alignment.region_number,
          current_alignment.region_name,
          current_alignment.sales_force_id,
          current_alignment.organization_code,
          current_alignment.inactive_flag,
          current_alignment.comments,
          current_alignment.mirror_flag,
          current_alignment.mirror_territory_number,
          current_alignment.file_id,
          current_alignment.record_id
SEGMENTED BY hash(current_alignment.record_id) ALL NODES;

CREATE PROJECTION datamart.direct_sales_demographics_b0 /*+basename(direct_sales_demographics),createtype(L)*/ 
(
 account_id,
 location_id,
 account_name,
 account_class,
 address_1,
 address_2,
 city,
 state,
 zip,
 file_id,
 record_id,
 tvcmid
)
AS
 SELECT direct_sales_demographics.account_id,
        direct_sales_demographics.location_id,
        direct_sales_demographics.account_name,
        direct_sales_demographics.account_class,
        direct_sales_demographics.address_1,
        direct_sales_demographics.address_2,
        direct_sales_demographics.city,
        direct_sales_demographics.state,
        direct_sales_demographics.zip,
        direct_sales_demographics.file_id,
        direct_sales_demographics.record_id,
        direct_sales_demographics.tvcmid
 FROM datamart.direct_sales_demographics
 ORDER BY direct_sales_demographics.account_id,
          direct_sales_demographics.location_id,
          direct_sales_demographics.account_name,
          direct_sales_demographics.account_class,
          direct_sales_demographics.address_1,
          direct_sales_demographics.address_2,
          direct_sales_demographics.city,
          direct_sales_demographics.state,
          direct_sales_demographics.zip,
          direct_sales_demographics.file_id,
          direct_sales_demographics.record_id
SEGMENTED BY hash(direct_sales_demographics.record_id) ALL NODES;

CREATE PROJECTION datamart.event_b0 /*+basename(event),createtype(L)*/ 
(
 source_system_name,
 event_number,
 event_name,
 event_status_code,
 event_status_description,
 event_status_change_date,
 event_start_date,
 event_end_date,
 funding_source,
 event_type,
 event_type_description,
 event_location,
 event_schedule_date,
 attendee_closeout_date,
 financial_closeout_date,
 cancellation_date,
 cancellation_reason,
 estimated_attendance,
 venue_id,
 venue_full_name,
 venue_address_line_1,
 venue_address_line_2,
 venue_city,
 venue_state,
 venue_zip,
 venue_contact,
 venue_phone,
 venue_fax,
 venue_email,
 file_id,
 record_id,
 event_time_zone,
 event_format,
 pending_mgmnt_approval_date,
 event_approval_date,
 event_approver_id,
 cancellation_source,
 event_venue_min_cnt_req_ind,
 event_venue_min_count,
 venue_address_line_3,
 venue_address_line_4,
 venue_postal_extended_code,
 venue_country_code,
 trade_secret_indicator,
 trade_secret_reason,
 custom_field_1,
 custom_field_2,
 custom_field_3,
 custom_field_4,
 custom_field_5,
 rec_stat_cd,
 parent_event_number
)
AS
 SELECT event.source_system_name,
        event.event_number,
        event.event_name,
        event.event_status_code,
        event.event_status_description,
        event.event_status_change_date,
        event.event_start_date,
        event.event_end_date,
        event.funding_source,
        event.event_type,
        event.event_type_description,
        event.event_location,
        event.event_schedule_date,
        event.attendee_closeout_date,
        event.financial_closeout_date,
        event.cancellation_date,
        event.cancellation_reason,
        event.estimated_attendance,
        event.venue_id,
        event.venue_full_name,
        event.venue_address_line_1,
        event.venue_address_line_2,
        event.venue_city,
        event.venue_state,
        event.venue_zip,
        event.venue_contact,
        event.venue_phone,
        event.venue_fax,
        event.venue_email,
        event.file_id,
        event.record_id,
        event.event_time_zone,
        event.event_format,
        event.pending_mgmnt_approval_date,
        event.event_approval_date,
        event.event_approver_id,
        event.cancellation_source,
        event.event_venue_min_cnt_req_ind,
        event.event_venue_min_count,
        event.venue_address_line_3,
        event.venue_address_line_4,
        event.venue_postal_extended_code,
        event.venue_country_code,
        event.trade_secret_indicator,
        event.trade_secret_reason,
        event.custom_field_1,
        event.custom_field_2,
        event.custom_field_3,
        event.custom_field_4,
        event.custom_field_5,
        event.rec_stat_cd,
        event.parent_event_number
 FROM datamart.event
 ORDER BY event.source_system_name,
          event.event_number,
          event.event_name,
          event.event_status_code,
          event.event_status_description,
          event.event_status_change_date,
          event.event_start_date,
          event.event_end_date,
          event.funding_source,
          event.event_type,
          event.event_type_description,
          event.event_location,
          event.event_schedule_date,
          event.attendee_closeout_date,
          event.financial_closeout_date,
          event.cancellation_date,
          event.cancellation_reason,
          event.estimated_attendance,
          event.venue_id,
          event.venue_full_name,
          event.venue_address_line_1,
          event.venue_address_line_2,
          event.venue_city,
          event.venue_state,
          event.venue_zip,
          event.venue_contact,
          event.venue_phone,
          event.venue_fax,
          event.venue_email,
          event.file_id,
          event.record_id
SEGMENTED BY hash(event.record_id) ALL NODES;

CREATE PROJECTION datamart.event_attendee_count_b0 /*+basename(event_attendee_count),createtype(L)*/ 
(
 source_system_name,
 event_number,
 attendee_category_code,
 count,
 file_id,
 record_id,
 attendee_category
)
AS
 SELECT event_attendee_count.source_system_name,
        event_attendee_count.event_number,
        event_attendee_count.attendee_category_code,
        event_attendee_count.count,
        event_attendee_count.file_id,
        event_attendee_count.record_id,
        event_attendee_count.attendee_category
 FROM datamart.event_attendee_count
 ORDER BY event_attendee_count.source_system_name,
          event_attendee_count.event_number,
          event_attendee_count.attendee_category_code,
          event_attendee_count.count,
          event_attendee_count.file_id,
          event_attendee_count.record_id
SEGMENTED BY hash(event_attendee_count.record_id) ALL NODES;

CREATE PROJECTION datamart.event_expense_b0 /*+basename(event_expense),createtype(L)*/ 
(
 source_system_name,
 event_number,
 payment_id,
 expense_category,
 amount,
 remit_to_id,
 recipient_id,
 check_number,
 check_date,
 file_id,
 record_id
)
AS
 SELECT event_expense.source_system_name,
        event_expense.event_number,
        event_expense.payment_id,
        event_expense.expense_category,
        event_expense.amount,
        event_expense.remit_to_id,
        event_expense.recipient_id,
        event_expense.check_number,
        event_expense.check_date,
        event_expense.file_id,
        event_expense.record_id
 FROM datamart.event_expense
 ORDER BY event_expense.source_system_name,
          event_expense.event_number,
          event_expense.payment_id,
          event_expense.expense_category,
          event_expense.amount,
          event_expense.remit_to_id,
          event_expense.recipient_id,
          event_expense.check_number,
          event_expense.check_date,
          event_expense.file_id,
          event_expense.record_id
SEGMENTED BY hash(event_expense.record_id) ALL NODES;

CREATE PROJECTION datamart.factory_sales_852_b0 /*+basename(factory_sales_852),createtype(L)*/ 
(
 trading_partner,
 distribution_center,
 distribution_center_dea_number,
 reporting_date,
 product_name,
 description,
 ndc,
 basket_id,
 basket_name,
 qty_received,
 qty_received_dollars,
 qty_sold,
 qty_sold_dollars,
 qty_omit,
 qty_omit_dollars,
 month_end_qty_on_hand,
 month_end_qty_on_hand_dollars,
 month_end_committed,
 month_end_committed_dollars,
 month_end_reserved,
 month_end_reserved_dollars,
 qty_return,
 qty_return_dollars,
 qty_customer_return,
 qty_customer_return_dollars,
 file_id,
 record_id
)
AS
 SELECT factory_sales_852.trading_partner,
        factory_sales_852.distribution_center,
        factory_sales_852.distribution_center_dea_number,
        factory_sales_852.reporting_date,
        factory_sales_852.product_name,
        factory_sales_852.description,
        factory_sales_852.ndc,
        factory_sales_852.basket_id,
        factory_sales_852.basket_name,
        factory_sales_852.qty_received,
        factory_sales_852.qty_received_dollars,
        factory_sales_852.qty_sold,
        factory_sales_852.qty_sold_dollars,
        factory_sales_852.qty_omit,
        factory_sales_852.qty_omit_dollars,
        factory_sales_852.month_end_qty_on_hand,
        factory_sales_852.month_end_qty_on_hand_dollars,
        factory_sales_852.month_end_committed,
        factory_sales_852.month_end_committed_dollars,
        factory_sales_852.month_end_reserved,
        factory_sales_852.month_end_reserved_dollars,
        factory_sales_852.qty_return,
        factory_sales_852.qty_return_dollars,
        factory_sales_852.qty_customer_return,
        factory_sales_852.qty_customer_return_dollars,
        factory_sales_852.file_id,
        factory_sales_852.record_id
 FROM datamart.factory_sales_852
 ORDER BY factory_sales_852.trading_partner,
          factory_sales_852.distribution_center,
          factory_sales_852.distribution_center_dea_number,
          factory_sales_852.reporting_date,
          factory_sales_852.product_name,
          factory_sales_852.description,
          factory_sales_852.ndc,
          factory_sales_852.basket_id,
          factory_sales_852.basket_name,
          factory_sales_852.qty_received,
          factory_sales_852.qty_received_dollars,
          factory_sales_852.qty_sold,
          factory_sales_852.qty_sold_dollars,
          factory_sales_852.qty_omit,
          factory_sales_852.qty_omit_dollars,
          factory_sales_852.month_end_qty_on_hand,
          factory_sales_852.month_end_qty_on_hand_dollars,
          factory_sales_852.month_end_committed,
          factory_sales_852.month_end_committed_dollars,
          factory_sales_852.month_end_reserved,
          factory_sales_852.month_end_reserved_dollars,
          factory_sales_852.qty_return,
          factory_sales_852.qty_return_dollars,
          factory_sales_852.qty_customer_return,
          factory_sales_852.qty_customer_return_dollars,
          factory_sales_852.file_id,
          factory_sales_852.record_id
SEGMENTED BY hash(factory_sales_852.record_id) ALL NODES;

CREATE PROJECTION datamart.formulary_b0 /*+basename(formulary),createtype(L)*/ 
(
 formulary_date,
 health_plan_id,
 health_plan,
 provider_id,
 provider,
 parent_id,
 parent,
 national_lives_count,
 operating_state,
 state_lives_count,
 plan_type_name,
 preferred_brand_tier,
 drug_id,
 drug_class,
 drug,
 basket_id,
 basket_name,
 generic,
 manufacturer,
 tier_code,
 restrictions,
 reason_code,
 reason_code_description,
 file_id,
 record_id
)
AS
 SELECT formulary.formulary_date,
        formulary.health_plan_id,
        formulary.health_plan,
        formulary.provider_id,
        formulary.provider,
        formulary.parent_id,
        formulary.parent,
        formulary.national_lives_count,
        formulary.operating_state,
        formulary.state_lives_count,
        formulary.plan_type_name,
        formulary.preferred_brand_tier,
        formulary.drug_id,
        formulary.drug_class,
        formulary.drug,
        formulary.basket_id,
        formulary.basket_name,
        formulary.generic,
        formulary.manufacturer,
        formulary.tier_code,
        formulary.restrictions,
        formulary.reason_code,
        formulary.reason_code_description,
        formulary.file_id,
        formulary.record_id
 FROM datamart.formulary
 ORDER BY formulary.formulary_date,
          formulary.health_plan_id,
          formulary.health_plan,
          formulary.provider_id,
          formulary.provider,
          formulary.parent_id,
          formulary.parent,
          formulary.national_lives_count,
          formulary.operating_state,
          formulary.state_lives_count,
          formulary.plan_type_name,
          formulary.preferred_brand_tier,
          formulary.drug_id,
          formulary.drug_class,
          formulary.drug,
          formulary.basket_id,
          formulary.basket_name,
          formulary.generic,
          formulary.manufacturer,
          formulary.tier_code,
          formulary.restrictions,
          formulary.reason_code,
          formulary.reason_code_description,
          formulary.file_id,
          formulary.record_id
SEGMENTED BY hash(formulary.record_id) ALL NODES;

CREATE PROJECTION datamart.oncology_demographics_b0 /*+basename(oncology_demographics),createtype(L)*/ 
(
 account_demo_id,
 outlet_code,
 ims_facility_number,
 ims_prescriber_number,
 category_code,
 subcategory_code,
 alignment_zip,
 outlet_name,
 outlet_address,
 outlet_city,
 outlet_state,
 outlet_zip,
 facility_name,
 facility_address1,
 facility_address2,
 facility_address3,
 facility_address4,
 facility_city,
 facility_state,
 facility_zip,
 prescriber_name,
 prescriber_address1,
 prescriber_address2,
 prescriber_address3,
 prescriber_address4,
 prescriber_city,
 prescriber_state,
 prescriber_zip,
 account_status,
 tvcmid,
 sales_force_id,
 outlet_tvcmid,
 facility_tvcmid,
 prescriber_tvcmid,
 tvcmid_assignment_rule
)
AS
 SELECT dddmd_demographics.account_demo_id,
        dddmd_demographics.outlet_code,
        dddmd_demographics.ims_facility_number,
        dddmd_demographics.ims_prescriber_number,
        dddmd_demographics.category_code,
        dddmd_demographics.subcategory_code,
        dddmd_demographics.alignment_zip,
        dddmd_demographics.outlet_name,
        dddmd_demographics.outlet_address,
        dddmd_demographics.outlet_city,
        dddmd_demographics.outlet_state,
        dddmd_demographics.outlet_zip,
        dddmd_demographics.facility_name,
        dddmd_demographics.facility_address1,
        dddmd_demographics.facility_address2,
        dddmd_demographics.facility_address3,
        dddmd_demographics.facility_address4,
        dddmd_demographics.facility_city,
        dddmd_demographics.facility_state,
        dddmd_demographics.facility_zip,
        dddmd_demographics.prescriber_name,
        dddmd_demographics.prescriber_address1,
        dddmd_demographics.prescriber_address2,
        dddmd_demographics.prescriber_address3,
        dddmd_demographics.prescriber_address4,
        dddmd_demographics.prescriber_city,
        dddmd_demographics.prescriber_state,
        dddmd_demographics.prescriber_zip,
        dddmd_demographics.account_status,
        dddmd_demographics.tvcmid,
        dddmd_demographics.sales_force_id,
        dddmd_demographics.outlet_tvcmid,
        dddmd_demographics.facility_tvcmid,
        dddmd_demographics.prescriber_tvcmid,
        dddmd_demographics.tvcmid_assignment_rule
 FROM datamart.dddmd_demographics
 ORDER BY dddmd_demographics.account_demo_id
SEGMENTED BY hash(dddmd_demographics.account_demo_id) ALL NODES;

CREATE PROJECTION datamart.sfa_survey_b0 /*+basename(sfa_survey),createtype(L)*/ 
(
 sales_force_id,
 territory_number,
 region_num,
 area_num,
 veeva_survey_target_id,
 survey_name,
 veeva_account_id,
 survey_target_first_name,
 survey_target_last_name,
 status,
 rep_id,
 rep_first_name,
 rep_last_name,
 question_position,
 question,
 response,
 tvcmid,
 response_update_date,
 response_create_date
)
AS
 SELECT sfa_survey.sales_force_id,
        sfa_survey.territory_number,
        sfa_survey.region_num,
        sfa_survey.area_num,
        sfa_survey.veeva_survey_target_id,
        sfa_survey.survey_name,
        sfa_survey.veeva_account_id,
        sfa_survey.survey_target_first_name,
        sfa_survey.survey_target_last_name,
        sfa_survey.status,
        sfa_survey.rep_id,
        sfa_survey.rep_first_name,
        sfa_survey.rep_last_name,
        sfa_survey.question_position,
        sfa_survey.question,
        sfa_survey.response,
        sfa_survey.tvcmid,
        sfa_survey.response_update_date,
        sfa_survey.response_create_date
 FROM datamart.sfa_survey
 ORDER BY sfa_survey.sales_force_id,
          sfa_survey.territory_number,
          sfa_survey.region_num,
          sfa_survey.area_num,
          sfa_survey.veeva_survey_target_id,
          sfa_survey.survey_name,
          sfa_survey.veeva_account_id
SEGMENTED BY hash(sfa_survey.sales_force_id) ALL NODES;

CREATE PROJECTION datamart.ims_outlet_master_b0 /*+basename(ims_outlet_master),createtype(L)*/ 
(
 client_number,
 outlet_number,
 outlet_name,
 address,
 city,
 state,
 zip,
 report_type,
 status,
 subcategory_code,
 state_code,
 county_code,
 record_type,
 file_id,
 record_id,
 retail_flag,
 activity_date,
 dea_number
)
AS
 SELECT ims_outlet_master.client_number,
        ims_outlet_master.outlet_number,
        ims_outlet_master.outlet_name,
        ims_outlet_master.address,
        ims_outlet_master.city,
        ims_outlet_master.state,
        ims_outlet_master.zip,
        ims_outlet_master.report_type,
        ims_outlet_master.status,
        ims_outlet_master.subcategory_code,
        ims_outlet_master.state_code,
        ims_outlet_master.county_code,
        ims_outlet_master.record_type,
        ims_outlet_master.file_id,
        ims_outlet_master.record_id,
        ims_outlet_master.retail_flag,
        ims_outlet_master.activity_date,
        ims_outlet_master.dea_number
 FROM datamart.ims_outlet_master
 ORDER BY ims_outlet_master.client_number,
          ims_outlet_master.outlet_number,
          ims_outlet_master.outlet_name,
          ims_outlet_master.address,
          ims_outlet_master.city,
          ims_outlet_master.state,
          ims_outlet_master.zip,
          ims_outlet_master.report_type,
          ims_outlet_master.status,
          ims_outlet_master.subcategory_code,
          ims_outlet_master.state_code,
          ims_outlet_master.county_code,
          ims_outlet_master.record_type,
          ims_outlet_master.file_id,
          ims_outlet_master.record_id
SEGMENTED BY hash(ims_outlet_master.record_id) ALL NODES;

CREATE PROJECTION datamart.sfa_affiliations_b0 /*+basename(sfa_affiliations),createtype(L)*/ 
(
 affiliated_from_id,
 affiliated_from_account_type,
 affiliated_from_ims_id,
 affiliated_from_ims_outlet_cd,
 affiliated_from_acct_demo_id,
 affiliated_from_bp_code,
 affiliated_from_tvcmid,
 affiliated_to_id,
 affiliated_to_account_type,
 affiliated_to_ims_id,
 affiliated_to_ims_outlet_code,
 affiliated_to_acct_demo_id,
 affiliated_to_bp_code,
 affiliated_to_tvcmid,
 role,
 affiliated_last_modified_date,
 sales_force_id,
 territory_number,
 employee_full_name,
 employee_id
)
AS
 SELECT sfa_affiliations.affiliated_from_id,
        sfa_affiliations.affiliated_from_account_type,
        sfa_affiliations.affiliated_from_ims_id,
        sfa_affiliations.affiliated_from_ims_outlet_cd,
        sfa_affiliations.affiliated_from_acct_demo_id,
        sfa_affiliations.affiliated_from_bp_code,
        sfa_affiliations.affiliated_from_tvcmid,
        sfa_affiliations.affiliated_to_id,
        sfa_affiliations.affiliated_to_account_type,
        sfa_affiliations.affiliated_to_ims_id,
        sfa_affiliations.affiliated_to_ims_outlet_code,
        sfa_affiliations.affiliated_to_acct_demo_id,
        sfa_affiliations.affiliated_to_bp_code,
        sfa_affiliations.affiliated_to_tvcmid,
        sfa_affiliations.role,
        sfa_affiliations.affiliated_last_modified_date,
        sfa_affiliations.sales_force_id,
        sfa_affiliations.territory_number,
        sfa_affiliations.employee_full_name,
        sfa_affiliations.employee_id
 FROM datamart.sfa_affiliations
 ORDER BY sfa_affiliations.affiliated_to_id
SEGMENTED BY hash(sfa_affiliations.affiliated_from_id) ALL NODES;

CREATE PROJECTION datamart.ddd_b0 /*+basename(ddd),createtype(L)*/ 
(
 outlet_code,
 outlet_name,
 outlet_zip,
 ims_client_number,
 ims_report_number,
 report_frequency,
 ims_product_code,
 basket_id,
 basket_name,
 data_date,
 date,
 rollup_week,
 rollup_month,
 comp_month,
 quantity,
 file_id,
 record_id,
 market_name,
 outlet_tvcmid,
 sales_force_id,
 category_code,
 rollup_flag,
 basket_type,
 rollup_445_month,
 dollars,
 COUNT,
 subcategory_code
)
AS
 SELECT ddd.outlet_code,
        ddd.outlet_name,
        ddd.outlet_zip,
        ddd.ims_client_number,
        ddd.ims_report_number,
        ddd.report_frequency,
        ddd.ims_product_code,
        ddd.basket_id,
        ddd.basket_name,
        ddd.data_date,
        ddd.date,
        ddd.rollup_week,
        ddd.rollup_month,
        ddd.comp_month,
        ddd.quantity,
        ddd.file_id,
        ddd.record_id,
        ddd.market_name,
        ddd.outlet_tvcmid,
        ddd.sales_force_id,
        ddd.category_code,
        ddd.rollup_flag,
        ddd.basket_type,
        ddd.rollup_445_month,
        ddd.dollars,
        ddd.COUNT,
        ddd.subcategory_code
 FROM datamart.ddd
 ORDER BY ddd.outlet_code
SEGMENTED BY hash(ddd.record_id) ALL NODES;

CREATE PROJECTION datamart.ddd_md_b0 /*+basename(ddd_md),createtype(L)*/ 
(
 onc_account_demo_id,
 alt_seq_num,
 outlet_name,
 outlet_code,
 subcategory_code,
 outlet_zip,
 ims_client_num,
 ims_report_num,
 report_frequency,
 ims_product_code,
 basket_id,
 basket_name,
 data_date,
 date,
 rollup_week,
 rollup_month,
 comp_month,
 quantity,
 dollars,
 file_id,
 record_id,
 sales_force_id,
 rollup_445_month,
 tvcmid,
 ims_facility_number,
 ims_prescriber_number,
 facility_tvcmid,
 prescriber_tvcmid,
 outlet_tvcmid,
 normalized_quantity
)
AS
 SELECT ddd_md.onc_account_demo_id,
        ddd_md.alt_seq_num,
        ddd_md.outlet_name,
        ddd_md.outlet_code,
        ddd_md.subcategory_code,
        ddd_md.outlet_zip,
        ddd_md.ims_client_num,
        ddd_md.ims_report_num,
        ddd_md.report_frequency,
        ddd_md.ims_product_code,
        ddd_md.basket_id,
        ddd_md.basket_name,
        ddd_md.data_date,
        ddd_md.date,
        ddd_md.rollup_week,
        ddd_md.rollup_month,
        ddd_md.comp_month,
        ddd_md.quantity,
        ddd_md.dollars,
        ddd_md.file_id,
        ddd_md.record_id,
        ddd_md.sales_force_id,
        ddd_md.rollup_445_month,
        ddd_md.tvcmid,
        ddd_md.ims_facility_number,
        ddd_md.ims_prescriber_number,
        ddd_md.facility_tvcmid,
        ddd_md.prescriber_tvcmid,
        ddd_md.outlet_tvcmid,
        ddd_md.normalized_quantity
 FROM datamart.ddd_md
 ORDER BY ddd_md.onc_account_demo_id,
          ddd_md.alt_seq_num,
          ddd_md.outlet_name,
          ddd_md.outlet_code,
          ddd_md.subcategory_code,
          ddd_md.outlet_zip,
          ddd_md.ims_client_num,
          ddd_md.ims_report_num,
          ddd_md.report_frequency,
          ddd_md.ims_product_code,
          ddd_md.basket_id,
          ddd_md.basket_name,
          ddd_md.data_date,
          ddd_md.date,
          ddd_md.rollup_week,
          ddd_md.rollup_month,
          ddd_md.comp_month,
          ddd_md.quantity,
          ddd_md.dollars,
          ddd_md.file_id,
          ddd_md.record_id
SEGMENTED BY hash(ddd_md.record_id) ALL NODES;

CREATE PROJECTION datamart.event_attendee_b0 /*+basename(event_attendee),createtype(L)*/ 
(
 source_system_name,
 event_number,
 employee_id,
 attendee_id,
 attendee_first_name,
 attendee_middle_name,
 attendee_last_name,
 attendee_address,
 attendee_city,
 attendee_state,
 attendee_zip,
 attendee_phone,
 attendee_fax,
 attendee_email,
 dea_number,
 ims_number,
 me_number,
 npi_number,
 attendee_category_code,
 attended,
 meal,
 non_hcp_count,
 other_hcp_count,
 file_id,
 record_id,
 tvcmid,
 attendee_title,
 attendee_specialty,
 attendee_degree,
 attendee_address_line_2,
 attendee_address_line_3,
 attendee_address_line_4
)
AS
 SELECT event_attendee.source_system_name,
        event_attendee.event_number,
        event_attendee.employee_id,
        event_attendee.attendee_id,
        event_attendee.attendee_first_name,
        event_attendee.attendee_middle_name,
        event_attendee.attendee_last_name,
        event_attendee.attendee_address,
        event_attendee.attendee_city,
        event_attendee.attendee_state,
        event_attendee.attendee_zip,
        event_attendee.attendee_phone,
        event_attendee.attendee_fax,
        event_attendee.attendee_email,
        event_attendee.dea_number,
        event_attendee.ims_number,
        event_attendee.me_number,
        event_attendee.npi_number,
        event_attendee.attendee_category_code,
        event_attendee.attended,
        event_attendee.meal,
        event_attendee.non_hcp_count,
        event_attendee.other_hcp_count,
        event_attendee.file_id,
        event_attendee.record_id,
        event_attendee.tvcmid,
        event_attendee.attendee_title,
        event_attendee.attendee_specialty,
        event_attendee.attendee_degree,
        event_attendee.attendee_address_line_2,
        event_attendee.attendee_address_line_3,
        event_attendee.attendee_address_line_4
 FROM datamart.event_attendee
 ORDER BY event_attendee.source_system_name,
          event_attendee.event_number,
          event_attendee.employee_id
SEGMENTED BY hash(event_attendee.record_id) ALL NODES;

CREATE PROJECTION datamart.specialty_pharmacy_rx_v1_b0 /*+basename(specialty_pharmacy_rx_v1),createtype(A)*/ 
(
 specialty_pharmacy_name,
 sub_specialty_pharmacy_name,
 pharmacy_npi,
 ncpdp,
 pharmacy_store_number,
 pharmacy_address_1,
 pharmacy_address_2,
 pharmacy_city,
 pharmacy_state,
 pharmacy_zip,
 pharmacy_phone,
 pharmacy_fax,
 dsp_patient_id,
 gender,
 age,
 patient_state,
 primary_icd9,
 secondary_icd9,
 prescriber_npi,
 prescriber_name_first,
 prescriber_name_last,
 prescriber_address_1,
 prescriber_address_2,
 prescriber_city,
 prescriber_state,
 prescriber_zip,
 prescriber_phone,
 prescriber_fax,
 basket_id,
 basket_name,
 drug_name,
 drug_ndc_11,
 drug_strength,
 drug_form,
 package_size,
 dose_form,
 rx_number,
 refill_number,
 rx_refills_written,
 dispense_qty,
 days_supply,
 rx_written_date,
 rx_receipt_date,
 fill_date,
 rx_type,
 copay,
 primary_plan_name,
 primary_bin,
 primary_pcn,
 secondary_plan_name,
 secondary_bin,
 secondary_pcn,
 tertiary_plan_name,
 tertiary_bin,
 tertiary_pcn,
 ship_date,
 shipping_carrier,
 file_id,
 record_id,
 prescriber_tvcmid,
 pharmacy_tvcmid
)
AS
 SELECT specialty_pharmacy_rx.specialty_pharmacy_name,
        specialty_pharmacy_rx.sub_specialty_pharmacy_name,
        specialty_pharmacy_rx.pharmacy_npi,
        specialty_pharmacy_rx.ncpdp,
        specialty_pharmacy_rx.pharmacy_store_number,
        specialty_pharmacy_rx.pharmacy_address_1,
        specialty_pharmacy_rx.pharmacy_address_2,
        specialty_pharmacy_rx.pharmacy_city,
        specialty_pharmacy_rx.pharmacy_state,
        specialty_pharmacy_rx.pharmacy_zip,
        specialty_pharmacy_rx.pharmacy_phone,
        specialty_pharmacy_rx.pharmacy_fax,
        specialty_pharmacy_rx.dsp_patient_id,
        specialty_pharmacy_rx.gender,
        specialty_pharmacy_rx.age,
        specialty_pharmacy_rx.patient_state,
        specialty_pharmacy_rx.primary_icd9,
        specialty_pharmacy_rx.secondary_icd9,
        specialty_pharmacy_rx.prescriber_npi,
        specialty_pharmacy_rx.prescriber_name_first,
        specialty_pharmacy_rx.prescriber_name_last,
        specialty_pharmacy_rx.prescriber_address_1,
        specialty_pharmacy_rx.prescriber_address_2,
        specialty_pharmacy_rx.prescriber_city,
        specialty_pharmacy_rx.prescriber_state,
        specialty_pharmacy_rx.prescriber_zip,
        specialty_pharmacy_rx.prescriber_phone,
        specialty_pharmacy_rx.prescriber_fax,
        specialty_pharmacy_rx.basket_id,
        specialty_pharmacy_rx.basket_name,
        specialty_pharmacy_rx.drug_name,
        specialty_pharmacy_rx.drug_ndc_11,
        specialty_pharmacy_rx.drug_strength,
        specialty_pharmacy_rx.drug_form,
        specialty_pharmacy_rx.package_size,
        specialty_pharmacy_rx.dose_form,
        specialty_pharmacy_rx.rx_number,
        specialty_pharmacy_rx.refill_number,
        specialty_pharmacy_rx.rx_refills_written,
        specialty_pharmacy_rx.dispense_qty,
        specialty_pharmacy_rx.days_supply,
        specialty_pharmacy_rx.rx_written_date,
        specialty_pharmacy_rx.rx_receipt_date,
        specialty_pharmacy_rx.fill_date,
        specialty_pharmacy_rx.rx_type,
        specialty_pharmacy_rx.copay,
        specialty_pharmacy_rx.primary_plan_name,
        specialty_pharmacy_rx.primary_bin,
        specialty_pharmacy_rx.primary_pcn,
        specialty_pharmacy_rx.secondary_plan_name,
        specialty_pharmacy_rx.secondary_bin,
        specialty_pharmacy_rx.secondary_pcn,
        specialty_pharmacy_rx.tertiary_plan_name,
        specialty_pharmacy_rx.tertiary_bin,
        specialty_pharmacy_rx.tertiary_pcn,
        specialty_pharmacy_rx.ship_date,
        specialty_pharmacy_rx.shipping_carrier,
        specialty_pharmacy_rx.file_id,
        specialty_pharmacy_rx.record_id,
        specialty_pharmacy_rx.prescriber_tvcmid,
        specialty_pharmacy_rx.pharmacy_tvcmid
 FROM datamart.specialty_pharmacy_rx
 ORDER BY specialty_pharmacy_rx.specialty_pharmacy_name,
          specialty_pharmacy_rx.sub_specialty_pharmacy_name
SEGMENTED BY hash(specialty_pharmacy_rx.record_id) ALL NODES;

CREATE PROJECTION datamart.veeva_sync_b0 /*+basename(veeva_sync),createtype(L)*/ 
(
 employee_id,
 first_name,
 last_name,
 sync_date,
 sync_type,
 number_of_syncs
)
AS
 SELECT veeva_sync.employee_id,
        veeva_sync.first_name,
        veeva_sync.last_name,
        veeva_sync.sync_date,
        veeva_sync.sync_type,
        veeva_sync.number_of_syncs
 FROM datamart.veeva_sync
 ORDER BY veeva_sync.employee_id,
          veeva_sync.first_name,
          veeva_sync.last_name,
          veeva_sync.sync_date,
          veeva_sync.sync_type,
          veeva_sync.number_of_syncs
SEGMENTED BY hash(veeva_sync.sync_date) ALL NODES;

CREATE PROJECTION datamart.territory_history_b0 /*+basename(territory_history),createtype(L)*/ 
(
 territory_number,
 employee_id,
 start_date,
 end_date,
 first_name,
 last_name,
 rep_type,
 termination_date,
 hire_date,
 end_reason,
 original_hire_date,
 source_id
)
AS
 SELECT territory_history.territory_number,
        territory_history.employee_id,
        territory_history.start_date,
        territory_history.end_date,
        territory_history.first_name,
        territory_history.last_name,
        territory_history.rep_type,
        territory_history.termination_date,
        territory_history.hire_date,
        territory_history.end_reason,
        territory_history.original_hire_date,
        territory_history.source_id
 FROM datamart.territory_history
 ORDER BY territory_history.territory_number,
          territory_history.employee_id,
          territory_history.start_date,
          territory_history.end_date,
          territory_history.first_name,
          territory_history.last_name,
          territory_history.rep_type,
          territory_history.termination_date,
          territory_history.hire_date,
          territory_history.end_reason,
          territory_history.original_hire_date
SEGMENTED BY hash(territory_history.start_date, territory_history.end_date, territory_history.termination_date, territory_history.hire_date, territory_history.original_hire_date, territory_history.rep_type, territory_history.end_reason, territory_history.territory_number, territory_history.employee_id, territory_history.first_name, territory_history.last_name) ALL NODES;

CREATE PROJECTION datamart.sample_shipment_v2_b0 /*+basename(sample_shipment_v2),createtype(L)*/ 
(
 veeva_id,
 tvcmid,
 ims_id,
 first_name,
 middle_name,
 last_name,
 designation,
 state_license_number,
 address_line_1,
 address_line_2,
 address_line_3,
 city,
 state,
 zip,
 dea_license_number,
 order_id,
 ndc,
 basket_id,
 basket_name,
 order_job_code,
 order_job_description,
 ship_qty,
 ship_date,
 file_id,
 record_id,
 territory,
 repid,
 replastname,
 repmiddlename,
 repfirstname,
 signature_type,
 attendeename,
 literature_product_id,
 literature_product_name
)
AS
 SELECT sample_shipment.veeva_id,
        sample_shipment.tvcmid,
        sample_shipment.ims_id,
        sample_shipment.first_name,
        sample_shipment.middle_name,
        sample_shipment.last_name,
        sample_shipment.designation,
        sample_shipment.state_license_number,
        sample_shipment.address_line_1,
        sample_shipment.address_line_2,
        sample_shipment.address_line_3,
        sample_shipment.city,
        sample_shipment.state,
        sample_shipment.zip,
        sample_shipment.dea_license_number,
        sample_shipment.order_id,
        sample_shipment.ndc,
        sample_shipment.basket_id,
        sample_shipment.basket_name,
        sample_shipment.order_job_code,
        sample_shipment.order_job_description,
        sample_shipment.ship_qty,
        sample_shipment.ship_date,
        sample_shipment.file_id,
        sample_shipment.record_id,
        sample_shipment.territory,
        sample_shipment.repid,
        sample_shipment.replastname,
        sample_shipment.repmiddlename,
        sample_shipment.repfirstname,
        sample_shipment.signature_type,
        sample_shipment.attendeename,
        sample_shipment.literature_product_id,
        sample_shipment.literature_product_name
 FROM datamart.sample_shipment
 ORDER BY sample_shipment.tvcmid
SEGMENTED BY hash(sample_shipment.tvcmid, sample_shipment.state, sample_shipment.basket_id, sample_shipment.ship_qty, sample_shipment.ship_date, sample_shipment.file_id, sample_shipment.record_id, sample_shipment.zip, sample_shipment.order_job_code, sample_shipment.ndc, sample_shipment.ims_id, sample_shipment.state_license_number, sample_shipment.dea_license_number, sample_shipment.order_id, sample_shipment.veeva_id, sample_shipment.designation, sample_shipment.address_line_1, sample_shipment.address_line_2, sample_shipment.address_line_3, sample_shipment.first_name, sample_shipment.middle_name, sample_shipment.last_name, sample_shipment.city, sample_shipment.order_job_description, sample_shipment.basket_name) ALL NODES;

CREATE PROJECTION datamart.sfa_call_detail_b0 /*+basename(sfa_call_detail),createtype(L)*/ 
(
 sales_force_id,
 call_id,
 product,
 basket_id,
 basket_name,
 detail_position,
 indication
)
AS
 SELECT sfa_call_detail.sales_force_id,
        sfa_call_detail.call_id,
        sfa_call_detail.product,
        sfa_call_detail.basket_id,
        sfa_call_detail.basket_name,
        sfa_call_detail.detail_position,
        sfa_call_detail.indication
 FROM datamart.sfa_call_detail
 ORDER BY sfa_call_detail.sales_force_id,
          sfa_call_detail.call_id
SEGMENTED BY hash(sfa_call_detail.sales_force_id, sfa_call_detail.basket_id, sfa_call_detail.detail_position, sfa_call_detail.call_id, sfa_call_detail.product, sfa_call_detail.basket_name, sfa_call_detail.indication) ALL NODES;

CREATE PROJECTION datamart.enrollment_summary_b0 /*+basename(enrollment_summary),createtype(A)*/ 
(
 tvcmid,
 ims_id,
 npi,
 veeva_account_id,
 ndc,
 indication,
 week_ending,
 in_progress_count,
 completed_count,
 cancelled_count,
 prescriber_count
)
AS
 SELECT enrollment_summary.tvcmid,
        enrollment_summary.ims_id,
        enrollment_summary.npi,
        enrollment_summary.veeva_account_id,
        enrollment_summary.ndc,
        enrollment_summary.indication,
        enrollment_summary.week_ending,
        enrollment_summary.in_progress_count,
        enrollment_summary.completed_count,
        enrollment_summary.cancelled_count,
        enrollment_summary.prescriber_count
 FROM datamart.enrollment_summary
 ORDER BY enrollment_summary.tvcmid,
          enrollment_summary.ims_id,
          enrollment_summary.npi,
          enrollment_summary.veeva_account_id,
          enrollment_summary.ndc,
          enrollment_summary.indication,
          enrollment_summary.week_ending,
          enrollment_summary.in_progress_count,
          enrollment_summary.completed_count,
          enrollment_summary.cancelled_count,
          enrollment_summary.prescriber_count
SEGMENTED BY hash(enrollment_summary.tvcmid, enrollment_summary.indication, enrollment_summary.week_ending, enrollment_summary.in_progress_count, enrollment_summary.completed_count, enrollment_summary.cancelled_count, enrollment_summary.prescriber_count, enrollment_summary.ims_id, enrollment_summary.npi, enrollment_summary.ndc, enrollment_summary.veeva_account_id) ALL NODES;

CREATE PROJECTION datamart.specialty_pharmacy_patient_txn_b0 /*+basename(specialty_pharmacy_patient_txn),createtype(A)*/ 
(
 patient_yob,
 patient_gender,
 ims_surrogate_patient_id,
 product_ndc,
 product_name,
 product_strength,
 unit_of_measure,
 extended_wac_price,
 transaction_id,
 patient_status_date,
 patient_status_,
 patient_sub_status,
 specialty_pharmacy_patient_or_case_id,
 primary_icd_9,
 primary_icd_10,
 script_receipt_date,
 primary_appeal_status,
 primary_copay_type,
 primary_deductible,
 primary_pa_required,
 primary_copay_amount,
 primary_payer_name,
 primary_plan_name,
 primary_payer_type,
 primary_plan_type,
 primary_payer_reject_reason_code,
 primary_reimbursement_status,
 primary_reimbursement_status_date,
 primary_step_therapy_required,
 secondary_copay_type,
 secondary_deductible,
 secondary_pa_required,
 secondary_copay_amount,
 secondary_payer_name,
 secondary_plan_name,
 secondary_payer_type,
 secondary_plan_type,
 secondary_payer_reject_reason_code,
 secondary_step_therapy_required,
 ncpdp_number,
 pharmacy_name,
 pharmacy_zip,
 prescribing_physician_first_name,
 prescribing_physician_last_name,
 prescribing_physician_middle_initial,
 prescribing_physician_dea_number,
 prescribing_physician_me_number,
 prescribing_physician_npi_number,
 prescribing_physician_address_1,
 prescribing_physician_address_2,
 prescribing_physician_city,
 prescribing_physician_state,
 prescribing_physician_zip,
 number_of_fills_prescribed,
 number_of_refills_remaining,
 fill_type,
 rx_date,
 rx_number,
 carrier,
 date_of_drug_receipt,
 initial_ship_date,
 quantity_shipped,
 out_of_pocket_cost,
 shipment_date,
 product_lot_number,
 program_dispense_type,
 days_supply_dispensed,
 primary_payer_pa_outcome,
 secondary_payer_pa_outcome,
 rx_communication_method,
 tertiary_icd_10,
 ims_file_id,
 ims_transaction_id,
 ims_cycle_date,
 ims_supplier_id,
 ims_supplier_name,
 ims_transaction_type_code,
 ims_duplicate_transaction,
 ims_prescriber_id,
 ims_phys_first_name,
 ims_phys_last_name,
 ims_phys_address,
 ims_phys_city,
 ims_phys_state,
 ims_phys_zip,
 ims_phys_specialty,
 ims_product_id,
 ims_product_description,
 ims_outlet_id,
 ims_outlet_name,
 ims_outlet_address,
 ims_outlet_city,
 ims_outlet_state,
 ims_outlet_zip,
 ims_outlet_subcategory,
 ims_plan_id,
 ims_plan_name,
 ims_plan_model,
 primary_icd10_grouping,
 primary_icd10_grouping_reason_code,
 secondary_icd10_grouping,
 secondary_icd10_grouping_reason_code,
 ims_ndc_flag,
 ims_dispensed_date_flag,
 ims_dispensed_quantity_flag,
 ims_cost_flag,
 ims_overall_flag,
 patient_months,
 approved_indication,
 tvcmid,
 basket_id,
 file_id,
 record_id
)
AS
 SELECT specialty_pharmacy_patient_txn.patient_yob,
        specialty_pharmacy_patient_txn.patient_gender,
        specialty_pharmacy_patient_txn.ims_surrogate_patient_id,
        specialty_pharmacy_patient_txn.product_ndc,
        specialty_pharmacy_patient_txn.product_name,
        specialty_pharmacy_patient_txn.product_strength,
        specialty_pharmacy_patient_txn.unit_of_measure,
        specialty_pharmacy_patient_txn.extended_wac_price,
        specialty_pharmacy_patient_txn.transaction_id,
        specialty_pharmacy_patient_txn.patient_status_date,
        specialty_pharmacy_patient_txn.patient_status_,
        specialty_pharmacy_patient_txn.patient_sub_status,
        specialty_pharmacy_patient_txn.specialty_pharmacy_patient_or_case_id,
        specialty_pharmacy_patient_txn.primary_icd_9,
        specialty_pharmacy_patient_txn.primary_icd_10,
        specialty_pharmacy_patient_txn.script_receipt_date,
        specialty_pharmacy_patient_txn.primary_appeal_status,
        specialty_pharmacy_patient_txn.primary_copay_type,
        specialty_pharmacy_patient_txn.primary_deductible,
        specialty_pharmacy_patient_txn.primary_pa_required,
        specialty_pharmacy_patient_txn.primary_copay_amount,
        specialty_pharmacy_patient_txn.primary_payer_name,
        specialty_pharmacy_patient_txn.primary_plan_name,
        specialty_pharmacy_patient_txn.primary_payer_type,
        specialty_pharmacy_patient_txn.primary_plan_type,
        specialty_pharmacy_patient_txn.primary_payer_reject_reason_code,
        specialty_pharmacy_patient_txn.primary_reimbursement_status,
        specialty_pharmacy_patient_txn.primary_reimbursement_status_date,
        specialty_pharmacy_patient_txn.primary_step_therapy_required,
        specialty_pharmacy_patient_txn.secondary_copay_type,
        specialty_pharmacy_patient_txn.secondary_deductible,
        specialty_pharmacy_patient_txn.secondary_pa_required,
        specialty_pharmacy_patient_txn.secondary_copay_amount,
        specialty_pharmacy_patient_txn.secondary_payer_name,
        specialty_pharmacy_patient_txn.secondary_plan_name,
        specialty_pharmacy_patient_txn.secondary_payer_type,
        specialty_pharmacy_patient_txn.secondary_plan_type,
        specialty_pharmacy_patient_txn.secondary_payer_reject_reason_code,
        specialty_pharmacy_patient_txn.secondary_step_therapy_required,
        specialty_pharmacy_patient_txn.ncpdp_number,
        specialty_pharmacy_patient_txn.pharmacy_name,
        specialty_pharmacy_patient_txn.pharmacy_zip,
        specialty_pharmacy_patient_txn.prescribing_physician_first_name,
        specialty_pharmacy_patient_txn.prescribing_physician_last_name,
        specialty_pharmacy_patient_txn.prescribing_physician_middle_initial,
        specialty_pharmacy_patient_txn.prescribing_physician_dea_number,
        specialty_pharmacy_patient_txn.prescribing_physician_me_number,
        specialty_pharmacy_patient_txn.prescribing_physician_npi_number,
        specialty_pharmacy_patient_txn.prescribing_physician_address_1,
        specialty_pharmacy_patient_txn.prescribing_physician_address_2,
        specialty_pharmacy_patient_txn.prescribing_physician_city,
        specialty_pharmacy_patient_txn.prescribing_physician_state,
        specialty_pharmacy_patient_txn.prescribing_physician_zip,
        specialty_pharmacy_patient_txn.number_of_fills_prescribed,
        specialty_pharmacy_patient_txn.number_of_refills_remaining,
        specialty_pharmacy_patient_txn.fill_type,
        specialty_pharmacy_patient_txn.rx_date,
        specialty_pharmacy_patient_txn.rx_number,
        specialty_pharmacy_patient_txn.carrier,
        specialty_pharmacy_patient_txn.date_of_drug_receipt,
        specialty_pharmacy_patient_txn.initial_ship_date,
        specialty_pharmacy_patient_txn.quantity_shipped,
        specialty_pharmacy_patient_txn.out_of_pocket_cost,
        specialty_pharmacy_patient_txn.shipment_date,
        specialty_pharmacy_patient_txn.product_lot_number,
        specialty_pharmacy_patient_txn.program_dispense_type,
        specialty_pharmacy_patient_txn.days_supply_dispensed,
        specialty_pharmacy_patient_txn.primary_payer_pa_outcome,
        specialty_pharmacy_patient_txn.secondary_payer_pa_outcome,
        specialty_pharmacy_patient_txn.rx_communication_method,
        specialty_pharmacy_patient_txn.tertiary_icd_10,
        specialty_pharmacy_patient_txn.ims_file_id,
        specialty_pharmacy_patient_txn.ims_transaction_id,
        specialty_pharmacy_patient_txn.ims_cycle_date,
        specialty_pharmacy_patient_txn.ims_supplier_id,
        specialty_pharmacy_patient_txn.ims_supplier_name,
        specialty_pharmacy_patient_txn.ims_transaction_type_code,
        specialty_pharmacy_patient_txn.ims_duplicate_transaction,
        specialty_pharmacy_patient_txn.ims_prescriber_id,
        specialty_pharmacy_patient_txn.ims_phys_first_name,
        specialty_pharmacy_patient_txn.ims_phys_last_name,
        specialty_pharmacy_patient_txn.ims_phys_address,
        specialty_pharmacy_patient_txn.ims_phys_city,
        specialty_pharmacy_patient_txn.ims_phys_state,
        specialty_pharmacy_patient_txn.ims_phys_zip,
        specialty_pharmacy_patient_txn.ims_phys_specialty,
        specialty_pharmacy_patient_txn.ims_product_id,
        specialty_pharmacy_patient_txn.ims_product_description,
        specialty_pharmacy_patient_txn.ims_outlet_id,
        specialty_pharmacy_patient_txn.ims_outlet_name,
        specialty_pharmacy_patient_txn.ims_outlet_address,
        specialty_pharmacy_patient_txn.ims_outlet_city,
        specialty_pharmacy_patient_txn.ims_outlet_state,
        specialty_pharmacy_patient_txn.ims_outlet_zip,
        specialty_pharmacy_patient_txn.ims_outlet_subcategory,
        specialty_pharmacy_patient_txn.ims_plan_id,
        specialty_pharmacy_patient_txn.ims_plan_name,
        specialty_pharmacy_patient_txn.ims_plan_model,
        specialty_pharmacy_patient_txn.primary_icd10_grouping,
        specialty_pharmacy_patient_txn.primary_icd10_grouping_reason_code,
        specialty_pharmacy_patient_txn.secondary_icd10_grouping,
        specialty_pharmacy_patient_txn.secondary_icd10_grouping_reason_code,
        specialty_pharmacy_patient_txn.ims_ndc_flag,
        specialty_pharmacy_patient_txn.ims_dispensed_date_flag,
        specialty_pharmacy_patient_txn.ims_dispensed_quantity_flag,
        specialty_pharmacy_patient_txn.ims_cost_flag,
        specialty_pharmacy_patient_txn.ims_overall_flag,
        specialty_pharmacy_patient_txn.patient_months,
        specialty_pharmacy_patient_txn.approved_indication,
        specialty_pharmacy_patient_txn.tvcmid,
        specialty_pharmacy_patient_txn.basket_id,
        specialty_pharmacy_patient_txn.file_id,
        specialty_pharmacy_patient_txn.record_id
 FROM datamart.specialty_pharmacy_patient_txn
 ORDER BY specialty_pharmacy_patient_txn.patient_yob,
          specialty_pharmacy_patient_txn.patient_gender,
          specialty_pharmacy_patient_txn.ims_surrogate_patient_id,
          specialty_pharmacy_patient_txn.product_ndc,
          specialty_pharmacy_patient_txn.product_name,
          specialty_pharmacy_patient_txn.product_strength,
          specialty_pharmacy_patient_txn.unit_of_measure,
          specialty_pharmacy_patient_txn.extended_wac_price,
          specialty_pharmacy_patient_txn.transaction_id,
          specialty_pharmacy_patient_txn.patient_status_date,
          specialty_pharmacy_patient_txn.patient_status_,
          specialty_pharmacy_patient_txn.patient_sub_status,
          specialty_pharmacy_patient_txn.specialty_pharmacy_patient_or_case_id,
          specialty_pharmacy_patient_txn.primary_icd_9,
          specialty_pharmacy_patient_txn.primary_icd_10,
          specialty_pharmacy_patient_txn.script_receipt_date,
          specialty_pharmacy_patient_txn.primary_appeal_status,
          specialty_pharmacy_patient_txn.primary_copay_type,
          specialty_pharmacy_patient_txn.primary_deductible,
          specialty_pharmacy_patient_txn.primary_pa_required,
          specialty_pharmacy_patient_txn.primary_copay_amount,
          specialty_pharmacy_patient_txn.primary_payer_name,
          specialty_pharmacy_patient_txn.primary_plan_name,
          specialty_pharmacy_patient_txn.primary_payer_type,
          specialty_pharmacy_patient_txn.primary_plan_type,
          specialty_pharmacy_patient_txn.primary_payer_reject_reason_code,
          specialty_pharmacy_patient_txn.primary_reimbursement_status,
          specialty_pharmacy_patient_txn.primary_reimbursement_status_date,
          specialty_pharmacy_patient_txn.primary_step_therapy_required,
          specialty_pharmacy_patient_txn.secondary_copay_type,
          specialty_pharmacy_patient_txn.secondary_deductible,
          specialty_pharmacy_patient_txn.secondary_pa_required,
          specialty_pharmacy_patient_txn.secondary_copay_amount,
          specialty_pharmacy_patient_txn.secondary_payer_name,
          specialty_pharmacy_patient_txn.secondary_plan_name,
          specialty_pharmacy_patient_txn.secondary_payer_type,
          specialty_pharmacy_patient_txn.secondary_plan_type,
          specialty_pharmacy_patient_txn.secondary_payer_reject_reason_code,
          specialty_pharmacy_patient_txn.secondary_step_therapy_required,
          specialty_pharmacy_patient_txn.ncpdp_number,
          specialty_pharmacy_patient_txn.pharmacy_name,
          specialty_pharmacy_patient_txn.pharmacy_zip,
          specialty_pharmacy_patient_txn.prescribing_physician_first_name,
          specialty_pharmacy_patient_txn.prescribing_physician_last_name,
          specialty_pharmacy_patient_txn.prescribing_physician_middle_initial,
          specialty_pharmacy_patient_txn.prescribing_physician_dea_number,
          specialty_pharmacy_patient_txn.prescribing_physician_me_number,
          specialty_pharmacy_patient_txn.prescribing_physician_npi_number,
          specialty_pharmacy_patient_txn.prescribing_physician_address_1,
          specialty_pharmacy_patient_txn.prescribing_physician_address_2,
          specialty_pharmacy_patient_txn.prescribing_physician_city,
          specialty_pharmacy_patient_txn.prescribing_physician_state,
          specialty_pharmacy_patient_txn.prescribing_physician_zip,
          specialty_pharmacy_patient_txn.number_of_fills_prescribed,
          specialty_pharmacy_patient_txn.number_of_refills_remaining,
          specialty_pharmacy_patient_txn.fill_type,
          specialty_pharmacy_patient_txn.rx_date,
          specialty_pharmacy_patient_txn.rx_number,
          specialty_pharmacy_patient_txn.carrier,
          specialty_pharmacy_patient_txn.date_of_drug_receipt,
          specialty_pharmacy_patient_txn.initial_ship_date,
          specialty_pharmacy_patient_txn.quantity_shipped,
          specialty_pharmacy_patient_txn.out_of_pocket_cost,
          specialty_pharmacy_patient_txn.shipment_date,
          specialty_pharmacy_patient_txn.product_lot_number,
          specialty_pharmacy_patient_txn.program_dispense_type,
          specialty_pharmacy_patient_txn.days_supply_dispensed,
          specialty_pharmacy_patient_txn.primary_payer_pa_outcome,
          specialty_pharmacy_patient_txn.secondary_payer_pa_outcome,
          specialty_pharmacy_patient_txn.rx_communication_method,
          specialty_pharmacy_patient_txn.tertiary_icd_10,
          specialty_pharmacy_patient_txn.ims_file_id,
          specialty_pharmacy_patient_txn.ims_transaction_id,
          specialty_pharmacy_patient_txn.ims_cycle_date,
          specialty_pharmacy_patient_txn.ims_supplier_id,
          specialty_pharmacy_patient_txn.ims_supplier_name,
          specialty_pharmacy_patient_txn.ims_transaction_type_code,
          specialty_pharmacy_patient_txn.ims_duplicate_transaction,
          specialty_pharmacy_patient_txn.ims_prescriber_id,
          specialty_pharmacy_patient_txn.ims_phys_first_name,
          specialty_pharmacy_patient_txn.ims_phys_last_name,
          specialty_pharmacy_patient_txn.ims_phys_address,
          specialty_pharmacy_patient_txn.ims_phys_city,
          specialty_pharmacy_patient_txn.ims_phys_state,
          specialty_pharmacy_patient_txn.ims_phys_zip,
          specialty_pharmacy_patient_txn.ims_phys_specialty,
          specialty_pharmacy_patient_txn.ims_product_id,
          specialty_pharmacy_patient_txn.ims_product_description,
          specialty_pharmacy_patient_txn.ims_outlet_id,
          specialty_pharmacy_patient_txn.ims_outlet_name,
          specialty_pharmacy_patient_txn.ims_outlet_address,
          specialty_pharmacy_patient_txn.ims_outlet_city,
          specialty_pharmacy_patient_txn.ims_outlet_state,
          specialty_pharmacy_patient_txn.ims_outlet_zip,
          specialty_pharmacy_patient_txn.ims_outlet_subcategory,
          specialty_pharmacy_patient_txn.ims_plan_id,
          specialty_pharmacy_patient_txn.ims_plan_name,
          specialty_pharmacy_patient_txn.ims_plan_model,
          specialty_pharmacy_patient_txn.primary_icd10_grouping,
          specialty_pharmacy_patient_txn.primary_icd10_grouping_reason_code,
          specialty_pharmacy_patient_txn.secondary_icd10_grouping,
          specialty_pharmacy_patient_txn.secondary_icd10_grouping_reason_code,
          specialty_pharmacy_patient_txn.ims_ndc_flag,
          specialty_pharmacy_patient_txn.ims_dispensed_date_flag,
          specialty_pharmacy_patient_txn.ims_dispensed_quantity_flag,
          specialty_pharmacy_patient_txn.ims_cost_flag,
          specialty_pharmacy_patient_txn.ims_overall_flag,
          specialty_pharmacy_patient_txn.patient_months,
          specialty_pharmacy_patient_txn.approved_indication,
          specialty_pharmacy_patient_txn.tvcmid,
          specialty_pharmacy_patient_txn.basket_id,
          specialty_pharmacy_patient_txn.file_id,
          specialty_pharmacy_patient_txn.record_id
SEGMENTED BY hash(specialty_pharmacy_patient_txn.patient_yob, specialty_pharmacy_patient_txn.extended_wac_price, specialty_pharmacy_patient_txn.patient_status_date, specialty_pharmacy_patient_txn.script_receipt_date, specialty_pharmacy_patient_txn.primary_deductible, specialty_pharmacy_patient_txn.primary_copay_amount, specialty_pharmacy_patient_txn.primary_reimbursement_status_date, specialty_pharmacy_patient_txn.secondary_deductible, specialty_pharmacy_patient_txn.secondary_copay_amount, specialty_pharmacy_patient_txn.prescribing_physician_zip, specialty_pharmacy_patient_txn.number_of_fills_prescribed, specialty_pharmacy_patient_txn.number_of_refills_remaining, specialty_pharmacy_patient_txn.rx_date, specialty_pharmacy_patient_txn.date_of_drug_receipt, specialty_pharmacy_patient_txn.initial_ship_date, specialty_pharmacy_patient_txn.quantity_shipped, specialty_pharmacy_patient_txn.out_of_pocket_cost, specialty_pharmacy_patient_txn.shipment_date, specialty_pharmacy_patient_txn.ims_cycle_date, specialty_pharmacy_patient_txn.ims_supplier_id, specialty_pharmacy_patient_txn.ims_transaction_type_code, specialty_pharmacy_patient_txn.ims_duplicate_transaction, specialty_pharmacy_patient_txn.ims_prescriber_id, specialty_pharmacy_patient_txn.ims_phys_zip, specialty_pharmacy_patient_txn.ims_phys_specialty, specialty_pharmacy_patient_txn.ims_product_id, specialty_pharmacy_patient_txn.ims_outlet_zip, specialty_pharmacy_patient_txn.ims_outlet_subcategory, specialty_pharmacy_patient_txn.ims_plan_id, specialty_pharmacy_patient_txn.ims_ndc_flag, specialty_pharmacy_patient_txn.ims_dispensed_date_flag, specialty_pharmacy_patient_txn.ims_dispensed_quantity_flag) ALL NODES;

CREATE PROJECTION datamart.customer_address_b0 /*+basename(customer_address),createtype(L)*/ 
(
 tvcmid,
 address_id,
 address_type,
 address_type_name,
 address_line_1,
 address_line_2,
 county,
 city,
 state,
 state_name,
 country_code,
 country_name,
 zip5_postal_code,
 zip4_postal_extension_code,
 address_status,
 address_status_name,
 address_effective_date,
 msa_cbsa,
 fips_state_code,
 fips_state_description,
 fips_county_code,
 fips_county_description,
 deliverability_confidence,
 address_setting_type_code,
 address_setting_type_description,
 address_category_code,
 address_category_description,
 address_latitude,
 address_longitude,
 postal_barcode,
 single_address_indicator,
 practice_location_confidence_indicator,
 practice_location_rank,
 validation_message,
 created_by,
 created_date,
 updated_by,
 updated_date,
 file_id,
 record_id
)
AS
 SELECT customer_address.tvcmid,
        customer_address.address_id,
        customer_address.address_type,
        customer_address.address_type_name,
        customer_address.address_line_1,
        customer_address.address_line_2,
        customer_address.county,
        customer_address.city,
        customer_address.state,
        customer_address.state_name,
        customer_address.country_code,
        customer_address.country_name,
        customer_address.zip5_postal_code,
        customer_address.zip4_postal_extension_code,
        customer_address.address_status,
        customer_address.address_status_name,
        customer_address.address_effective_date,
        customer_address.msa_cbsa,
        customer_address.fips_state_code,
        customer_address.fips_state_description,
        customer_address.fips_county_code,
        customer_address.fips_county_description,
        customer_address.deliverability_confidence,
        customer_address.address_setting_type_code,
        customer_address.address_setting_type_description,
        customer_address.address_category_code,
        customer_address.address_category_description,
        customer_address.address_latitude,
        customer_address.address_longitude,
        customer_address.postal_barcode,
        customer_address.single_address_indicator,
        customer_address.practice_location_confidence_indicator,
        customer_address.practice_location_rank,
        customer_address.validation_message,
        customer_address.created_by,
        customer_address.created_date,
        customer_address.updated_by,
        customer_address.updated_date,
        customer_address.file_id,
        customer_address.record_id
 FROM datamart.customer_address
 ORDER BY customer_address.tvcmid,
          customer_address.address_id,
          customer_address.address_type,
          customer_address.address_type_name,
          customer_address.address_line_1,
          customer_address.address_line_2,
          customer_address.county,
          customer_address.city,
          customer_address.state,
          customer_address.state_name,
          customer_address.country_code,
          customer_address.country_name,
          customer_address.zip5_postal_code,
          customer_address.zip4_postal_extension_code,
          customer_address.address_status,
          customer_address.address_status_name,
          customer_address.address_effective_date,
          customer_address.msa_cbsa,
          customer_address.fips_state_code,
          customer_address.fips_state_description,
          customer_address.fips_county_code,
          customer_address.fips_county_description,
          customer_address.deliverability_confidence,
          customer_address.address_setting_type_code,
          customer_address.address_setting_type_description,
          customer_address.address_category_code,
          customer_address.address_category_description,
          customer_address.address_latitude,
          customer_address.address_longitude,
          customer_address.postal_barcode,
          customer_address.single_address_indicator,
          customer_address.practice_location_confidence_indicator,
          customer_address.practice_location_rank,
          customer_address.validation_message,
          customer_address.created_by,
          customer_address.created_date,
          customer_address.updated_by,
          customer_address.updated_date,
          customer_address.file_id,
          customer_address.record_id
SEGMENTED BY hash(customer_address.record_id) ALL NODES;

CREATE PROJECTION datamart.ahm_expense_super_b0 /*+basename(ahm_expense_super),createtype(L)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 spendid,
 clientspendid,
 spendamount,
 spendcurrency,
 spenddate,
 spendtype,
 spendpurpose,
 traveldestinationcity,
 traveldestinationstateprovince,
 traveldestinationcountry,
 spenddescription,
 taxincludedindicator,
 taxamount,
 taxrate,
 recipientid,
 clientrecipientid,
 participantid,
 recipientfirstname,
 recipientmiddlename,
 recipientlastname,
 recipientsuffix,
 recipientprofessionaldesignation,
 recipientprimaryspecialty,
 recipientorganizationname,
 recipientnpinumber,
 recipientaddressid,
 recipientclientaddressid,
 recipientaddressline1,
 recipientaddressline2,
 recipientaddressline3,
 recipientaddresscity,
 recipientaddressstateprovince,
 recipientaddresspostalcode,
 recipientaddresspostalcodeextension,
 recipientaddresscountry,
 recipientprimarystatelicensestate,
 recipientprimarystatelicensenumber,
 thirdpartyrecipientindicator,
 thirdpartyrecipientid,
 thirdpartyclientrecipientid,
 thirdpartyrecipientname,
 thirdpartycoveredrecipientindicator,
 paymentid,
 clientpaymentid,
 paymentdate,
 paymentmethod,
 paymentreferencenumber,
 paymentstatus,
 record_id,
 file_id
)
AS
 SELECT ahm_expense.sourcesystemid,
        ahm_expense.batchid,
        ahm_expense.batchdate,
        ahm_expense.transactionstatuscode,
        ahm_expense.interactionid,
        ahm_expense.interactioncode,
        ahm_expense.spendid,
        ahm_expense.clientspendid,
        ahm_expense.spendamount,
        ahm_expense.spendcurrency,
        ahm_expense.spenddate,
        ahm_expense.spendtype,
        ahm_expense.spendpurpose,
        ahm_expense.traveldestinationcity,
        ahm_expense.traveldestinationstateprovince,
        ahm_expense.traveldestinationcountry,
        ahm_expense.spenddescription,
        ahm_expense.taxincludedindicator,
        ahm_expense.taxamount,
        ahm_expense.taxrate,
        ahm_expense.recipientid,
        ahm_expense.clientrecipientid,
        ahm_expense.participantid,
        ahm_expense.recipientfirstname,
        ahm_expense.recipientmiddlename,
        ahm_expense.recipientlastname,
        ahm_expense.recipientsuffix,
        ahm_expense.recipientprofessionaldesignation,
        ahm_expense.recipientprimaryspecialty,
        ahm_expense.recipientorganizationname,
        ahm_expense.recipientnpinumber,
        ahm_expense.recipientaddressid,
        ahm_expense.recipientclientaddressid,
        ahm_expense.recipientaddressline1,
        ahm_expense.recipientaddressline2,
        ahm_expense.recipientaddressline3,
        ahm_expense.recipientaddresscity,
        ahm_expense.recipientaddressstateprovince,
        ahm_expense.recipientaddresspostalcode,
        ahm_expense.recipientaddresspostalcodeextension,
        ahm_expense.recipientaddresscountry,
        ahm_expense.recipientprimarystatelicensestate,
        ahm_expense.recipientprimarystatelicensenumber,
        ahm_expense.thirdpartyrecipientindicator,
        ahm_expense.thirdpartyrecipientid,
        ahm_expense.thirdpartyclientrecipientid,
        ahm_expense.thirdpartyrecipientname,
        ahm_expense.thirdpartycoveredrecipientindicator,
        ahm_expense.paymentid,
        ahm_expense.clientpaymentid,
        ahm_expense.paymentdate,
        ahm_expense.paymentmethod,
        ahm_expense.paymentreferencenumber,
        ahm_expense.paymentstatus,
        ahm_expense.record_id,
        ahm_expense.file_id
 FROM datamart.ahm_expense
 ORDER BY ahm_expense.spendid
SEGMENTED BY hash(ahm_expense.batchdate, ahm_expense.transactionstatuscode, ahm_expense.spendamount, ahm_expense.spendcurrency, ahm_expense.spenddate, ahm_expense.taxincludedindicator, ahm_expense.taxamount, ahm_expense.taxrate, ahm_expense.thirdpartyrecipientindicator, ahm_expense.thirdpartycoveredrecipientindicator, ahm_expense.paymentdate, ahm_expense.record_id, ahm_expense.file_id, ahm_expense.sourcesystemid, ahm_expense.recipientnpinumber, ahm_expense.recipientaddresspostalcodeextension, ahm_expense.batchid, ahm_expense.interactionid, ahm_expense.spendid, ahm_expense.recipientid, ahm_expense.participantid, ahm_expense.recipientaddressid) ALL NODES;

CREATE PROJECTION datamart.ahm_interactions_super_b0 /*+basename(ahm_interactions_super),createtype(L)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 interactionname,
 interactioncategory,
 interactiontype,
 locationtype,
 interactionstatus,
 interactionstartdate,
 interactionenddate,
 interactionstarttime,
 interactionendtime,
 interactiontimezone,
 interactionstartdatetime,
 interactionenddatetime,
 requestingregion,
 parentinteractionid,
 parentinteractioncode,
 employeeid,
 clientemployeeid,
 employeefirstname,
 employeelastname,
 employeeorganizationunitid,
 employeeorganizationunitcode,
 employeeorganizationunitname,
 venueid,
 clientvenueid,
 venuename,
 venueaddressline1,
 venueaddressline2,
 venueaddressline3,
 venuecity,
 venuestateprovince,
 venuepostalcode,
 venuecountry,
 venueregion,
 totalestimatedparticipantcount,
 financialcloseddate,
 product1name,
 product1id,
 product1clientid,
 topic1name,
 topic1id,
 topic1clientid,
 product2name,
 product2id,
 product2clientid,
 topic2name,
 topic2id,
 topic2clientid,
 product3name,
 product3id,
 product3clientid,
 topic3name,
 topic3id,
 topic3clientid,
 product4name,
 product4id,
 product4clientid,
 topic4name,
 topic4id,
 topic4clientid,
 product5name,
 product5id,
 product5clientid,
 topic5name,
 topic5id,
 topic5clientid,
 record_id,
 file_id
)
AS
 SELECT ahm_interactions.sourcesystemid,
        ahm_interactions.batchid,
        ahm_interactions.batchdate,
        ahm_interactions.transactionstatuscode,
        ahm_interactions.interactionid,
        ahm_interactions.interactioncode,
        ahm_interactions.interactionname,
        ahm_interactions.interactioncategory,
        ahm_interactions.interactiontype,
        ahm_interactions.locationtype,
        ahm_interactions.interactionstatus,
        ahm_interactions.interactionstartdate,
        ahm_interactions.interactionenddate,
        ahm_interactions.interactionstarttime,
        ahm_interactions.interactionendtime,
        ahm_interactions.interactiontimezone,
        ahm_interactions.interactionstartdatetime,
        ahm_interactions.interactionenddatetime,
        ahm_interactions.requestingregion,
        ahm_interactions.parentinteractionid,
        ahm_interactions.parentinteractioncode,
        ahm_interactions.employeeid,
        ahm_interactions.clientemployeeid,
        ahm_interactions.employeefirstname,
        ahm_interactions.employeelastname,
        ahm_interactions.employeeorganizationunitid,
        ahm_interactions.employeeorganizationunitcode,
        ahm_interactions.employeeorganizationunitname,
        ahm_interactions.venueid,
        ahm_interactions.clientvenueid,
        ahm_interactions.venuename,
        ahm_interactions.venueaddressline1,
        ahm_interactions.venueaddressline2,
        ahm_interactions.venueaddressline3,
        ahm_interactions.venuecity,
        ahm_interactions.venuestateprovince,
        ahm_interactions.venuepostalcode,
        ahm_interactions.venuecountry,
        ahm_interactions.venueregion,
        ahm_interactions.totalestimatedparticipantcount,
        ahm_interactions.financialcloseddate,
        ahm_interactions.product1name,
        ahm_interactions.product1id,
        ahm_interactions.product1clientid,
        ahm_interactions.topic1name,
        ahm_interactions.topic1id,
        ahm_interactions.topic1clientid,
        ahm_interactions.product2name,
        ahm_interactions.product2id,
        ahm_interactions.product2clientid,
        ahm_interactions.topic2name,
        ahm_interactions.topic2id,
        ahm_interactions.topic2clientid,
        ahm_interactions.product3name,
        ahm_interactions.product3id,
        ahm_interactions.product3clientid,
        ahm_interactions.topic3name,
        ahm_interactions.topic3id,
        ahm_interactions.topic3clientid,
        ahm_interactions.product4name,
        ahm_interactions.product4id,
        ahm_interactions.product4clientid,
        ahm_interactions.topic4name,
        ahm_interactions.topic4id,
        ahm_interactions.topic4clientid,
        ahm_interactions.product5name,
        ahm_interactions.product5id,
        ahm_interactions.product5clientid,
        ahm_interactions.topic5name,
        ahm_interactions.topic5id,
        ahm_interactions.topic5clientid,
        ahm_interactions.record_id,
        ahm_interactions.file_id
 FROM datamart.ahm_interactions
 ORDER BY ahm_interactions.interactionid
SEGMENTED BY hash(ahm_interactions.batchdate, ahm_interactions.transactionstatuscode, ahm_interactions.interactionstartdate, ahm_interactions.interactionenddate, ahm_interactions.totalestimatedparticipantcount, ahm_interactions.financialcloseddate, ahm_interactions.record_id, ahm_interactions.file_id, ahm_interactions.sourcesystemid, ahm_interactions.batchid, ahm_interactions.interactionid, ahm_interactions.parentinteractionid, ahm_interactions.employeeid, ahm_interactions.employeeorganizationunitid, ahm_interactions.venueid, ahm_interactions.clientvenueid, ahm_interactions.product1id, ahm_interactions.topic1id, ahm_interactions.product2id, ahm_interactions.topic2id, ahm_interactions.product3id, ahm_interactions.topic3id) ALL NODES;

CREATE PROJECTION datamart.ahm_participant_super_b0 /*+basename(ahm_participant_super),createtype(L)*/ 
(
 sourcesystemid,
 batchid,
 batchdate,
 transactionstatuscode,
 interactionid,
 interactioncode,
 participantid,
 clientcustomerid,
 participanttype,
 firstname,
 middlename,
 lastname,
 suffix,
 professionaldesignation,
 primaryspecialty,
 organizationname,
 npinumber,
 addressid,
 clientaddressid,
 addressline1,
 addressline2,
 addressline3,
 addresscity,
 addressstateprovince,
 addresspostalcode,
 addresspostalcodeextension,
 addresscountry,
 region,
 primarystatelicensestate,
 primarystatelicensenumber,
 attended,
 mealconsumed,
 contractid,
 clientcontractid,
 contractname,
 contractcategory,
 contractsubcategory,
 contractclassification,
 contracttier,
 contracteffectivedate,
 contractexpirationdate,
 contracttotalvalue,
 record_id,
 file_id
)
AS
 SELECT ahm_participant.sourcesystemid,
        ahm_participant.batchid,
        ahm_participant.batchdate,
        ahm_participant.transactionstatuscode,
        ahm_participant.interactionid,
        ahm_participant.interactioncode,
        ahm_participant.participantid,
        ahm_participant.clientcustomerid,
        ahm_participant.participanttype,
        ahm_participant.firstname,
        ahm_participant.middlename,
        ahm_participant.lastname,
        ahm_participant.suffix,
        ahm_participant.professionaldesignation,
        ahm_participant.primaryspecialty,
        ahm_participant.organizationname,
        ahm_participant.npinumber,
        ahm_participant.addressid,
        ahm_participant.clientaddressid,
        ahm_participant.addressline1,
        ahm_participant.addressline2,
        ahm_participant.addressline3,
        ahm_participant.addresscity,
        ahm_participant.addressstateprovince,
        ahm_participant.addresspostalcode,
        ahm_participant.addresspostalcodeextension,
        ahm_participant.addresscountry,
        ahm_participant.region,
        ahm_participant.primarystatelicensestate,
        ahm_participant.primarystatelicensenumber,
        ahm_participant.attended,
        ahm_participant.mealconsumed,
        ahm_participant.contractid,
        ahm_participant.clientcontractid,
        ahm_participant.contractname,
        ahm_participant.contractcategory,
        ahm_participant.contractsubcategory,
        ahm_participant.contractclassification,
        ahm_participant.contracttier,
        ahm_participant.contracteffectivedate,
        ahm_participant.contractexpirationdate,
        ahm_participant.contracttotalvalue,
        ahm_participant.record_id,
        ahm_participant.file_id
 FROM datamart.ahm_participant
 ORDER BY ahm_participant.participantid
SEGMENTED BY hash(ahm_participant.batchdate, ahm_participant.transactionstatuscode, ahm_participant.attended, ahm_participant.mealconsumed, ahm_participant.contracteffectivedate, ahm_participant.contractexpirationdate, ahm_participant.contracttotalvalue, ahm_participant.record_id, ahm_participant.file_id, ahm_participant.sourcesystemid, ahm_participant.npinumber, ahm_participant.addresspostalcodeextension, ahm_participant.batchid, ahm_participant.interactionid, ahm_participant.participantid, ahm_participant.addressid, ahm_participant.contractid, ahm_participant.addresspostalcode, ahm_participant.interactioncode, ahm_participant.addressstateprovince, ahm_participant.addresscountry, ahm_participant.region) ALL NODES;

CREATE PROJECTION datamart.tvcmid_xref__super__v1g17Q4_b0 /*+basename(tvcmid_xref__super__v1g17Q4),createtype(D)*/ 
(
 tvcmid,
 id_num,
 id_type ENCODING RLE,
 state,
 file_id ENCODING RLE,
 record_id
)
AS
 SELECT tvcmid_xref.tvcmid,
        tvcmid_xref.id_num,
        tvcmid_xref.id_type,
        tvcmid_xref.state,
        tvcmid_xref.file_id,
        tvcmid_xref.record_id
 FROM datamart.tvcmid_xref
 ORDER BY tvcmid_xref.id_type,
          tvcmid_xref.file_id,
          tvcmid_xref.id_num,
          tvcmid_xref.tvcmid,
          tvcmid_xref.record_id
SEGMENTED BY hash(tvcmid_xref.id_num) ALL NODES;

CREATE PROJECTION datamart.tvcmid_xref__tvcmid__v1g17Q4_b0 /*+basename(tvcmid_xref__tvcmid__v1g17Q4)*/ 
(
 tvcmid,
 id_num,
 id_type ENCODING RLE,
 state,
 file_id ENCODING RLE,
 record_id
)
AS
 SELECT tvcmid_xref.tvcmid,
        tvcmid_xref.id_num,
        tvcmid_xref.id_type,
        tvcmid_xref.state,
        tvcmid_xref.file_id,
        tvcmid_xref.record_id
 FROM datamart.tvcmid_xref
 ORDER BY tvcmid_xref.id_type,
          tvcmid_xref.file_id,
          tvcmid_xref.tvcmid,
          tvcmid_xref.id_num
SEGMENTED BY hash(tvcmid_xref.tvcmid) ALL NODES;

CREATE PROJECTION datamart.prescriber_rx_adhoc_b0 /*+basename(prescriber_rx_adhoc),createtype(L)*/ 
(
 ims_id,
 payer_plan_number,
 ims_client_number,
 report_frequency,
 ims_product_group,
 basket_id,
 data_date,
 date,
 sales_category,
 tvcmid,
 prescriber_first_name,
 prescriber_last_name,
 basket_name,
 basket_type,
 rollup_week,
 rollup_month,
 nrx_count,
 trx_count,
 nrx_quantity,
 trx_quantity,
 unnormalized_nrx_count,
 unnormalized_trx_count,
 market_name,
 payer_name,
 plan_name,
 pbm_name,
 model,
 payment_method,
 ims_specialty,
 ims_rx_type,
 ims_supplemental_data,
 ims_zip_other,
 ims_report_number_cnt,
 cnt_file_id,
 cnt_record_id,
 ims_report_number_qty,
 qty_file_id,
 qty_record_id,
 rollup_flag,
 indication
)
AS
 SELECT prescriber_rx_adhoc.ims_id,
        prescriber_rx_adhoc.payer_plan_number,
        prescriber_rx_adhoc.ims_client_number,
        prescriber_rx_adhoc.report_frequency,
        prescriber_rx_adhoc.ims_product_group,
        prescriber_rx_adhoc.basket_id,
        prescriber_rx_adhoc.data_date,
        prescriber_rx_adhoc.date,
        prescriber_rx_adhoc.sales_category,
        prescriber_rx_adhoc.tvcmid,
        prescriber_rx_adhoc.prescriber_first_name,
        prescriber_rx_adhoc.prescriber_last_name,
        prescriber_rx_adhoc.basket_name,
        prescriber_rx_adhoc.basket_type,
        prescriber_rx_adhoc.rollup_week,
        prescriber_rx_adhoc.rollup_month,
        prescriber_rx_adhoc.nrx_count,
        prescriber_rx_adhoc.trx_count,
        prescriber_rx_adhoc.nrx_quantity,
        prescriber_rx_adhoc.trx_quantity,
        prescriber_rx_adhoc.unnormalized_nrx_count,
        prescriber_rx_adhoc.unnormalized_trx_count,
        prescriber_rx_adhoc.market_name,
        prescriber_rx_adhoc.payer_name,
        prescriber_rx_adhoc.plan_name,
        prescriber_rx_adhoc.pbm_name,
        prescriber_rx_adhoc.model,
        prescriber_rx_adhoc.payment_method,
        prescriber_rx_adhoc.ims_specialty,
        prescriber_rx_adhoc.ims_rx_type,
        prescriber_rx_adhoc.ims_supplemental_data,
        prescriber_rx_adhoc.ims_zip_other,
        prescriber_rx_adhoc.ims_report_number_cnt,
        prescriber_rx_adhoc.cnt_file_id,
        prescriber_rx_adhoc.cnt_record_id,
        prescriber_rx_adhoc.ims_report_number_qty,
        prescriber_rx_adhoc.qty_file_id,
        prescriber_rx_adhoc.qty_record_id,
        prescriber_rx_adhoc.rollup_flag,
        prescriber_rx_adhoc.indication
 FROM datamart.prescriber_rx_adhoc
 ORDER BY prescriber_rx_adhoc.ims_id,
          prescriber_rx_adhoc.payer_plan_number,
          prescriber_rx_adhoc.ims_client_number,
          prescriber_rx_adhoc.report_frequency,
          prescriber_rx_adhoc.ims_product_group,
          prescriber_rx_adhoc.basket_id,
          prescriber_rx_adhoc.data_date,
          prescriber_rx_adhoc.date,
          prescriber_rx_adhoc.sales_category,
          prescriber_rx_adhoc.tvcmid,
          prescriber_rx_adhoc.prescriber_first_name,
          prescriber_rx_adhoc.prescriber_last_name,
          prescriber_rx_adhoc.basket_name,
          prescriber_rx_adhoc.basket_type,
          prescriber_rx_adhoc.rollup_week,
          prescriber_rx_adhoc.rollup_month,
          prescriber_rx_adhoc.nrx_count,
          prescriber_rx_adhoc.trx_count,
          prescriber_rx_adhoc.nrx_quantity,
          prescriber_rx_adhoc.trx_quantity,
          prescriber_rx_adhoc.unnormalized_nrx_count,
          prescriber_rx_adhoc.unnormalized_trx_count,
          prescriber_rx_adhoc.market_name,
          prescriber_rx_adhoc.payer_name,
          prescriber_rx_adhoc.plan_name,
          prescriber_rx_adhoc.pbm_name,
          prescriber_rx_adhoc.model,
          prescriber_rx_adhoc.payment_method,
          prescriber_rx_adhoc.ims_specialty,
          prescriber_rx_adhoc.ims_rx_type,
          prescriber_rx_adhoc.ims_supplemental_data,
          prescriber_rx_adhoc.ims_zip_other,
          prescriber_rx_adhoc.ims_report_number_cnt,
          prescriber_rx_adhoc.cnt_file_id,
          prescriber_rx_adhoc.cnt_record_id,
          prescriber_rx_adhoc.ims_report_number_qty,
          prescriber_rx_adhoc.qty_file_id,
          prescriber_rx_adhoc.qty_record_id,
          prescriber_rx_adhoc.rollup_flag,
          prescriber_rx_adhoc.indication
SEGMENTED BY hash(prescriber_rx_adhoc.ims_client_number, prescriber_rx_adhoc.basket_id, prescriber_rx_adhoc.data_date, prescriber_rx_adhoc.date, prescriber_rx_adhoc.sales_category, prescriber_rx_adhoc.tvcmid, prescriber_rx_adhoc.rollup_week, prescriber_rx_adhoc.rollup_month, prescriber_rx_adhoc.nrx_count, prescriber_rx_adhoc.trx_count, prescriber_rx_adhoc.nrx_quantity, prescriber_rx_adhoc.trx_quantity, prescriber_rx_adhoc.unnormalized_nrx_count, prescriber_rx_adhoc.unnormalized_trx_count, prescriber_rx_adhoc.ims_rx_type, prescriber_rx_adhoc.ims_report_number_cnt, prescriber_rx_adhoc.cnt_file_id, prescriber_rx_adhoc.cnt_record_id, prescriber_rx_adhoc.ims_report_number_qty, prescriber_rx_adhoc.qty_file_id, prescriber_rx_adhoc.qty_record_id, prescriber_rx_adhoc.rollup_flag, prescriber_rx_adhoc.ims_id, prescriber_rx_adhoc.payer_plan_number, prescriber_rx_adhoc.ims_product_group, prescriber_rx_adhoc.ims_specialty, prescriber_rx_adhoc.ims_zip_other, prescriber_rx_adhoc.report_frequency, prescriber_rx_adhoc.ims_supplemental_data, prescriber_rx_adhoc.indication, prescriber_rx_adhoc.prescriber_first_name, prescriber_rx_adhoc.prescriber_last_name) ALL NODES;

CREATE PROJECTION datamart.dx_code_b0 /*+basename(dx_code),createtype(L)*/ 
(
 dx_code,
 dx_description
)
AS
 SELECT dx_code.dx_code,
        dx_code.dx_description
 FROM datamart.dx_code
 ORDER BY dx_code.dx_code,
          dx_code.dx_description
SEGMENTED BY hash(dx_code.dx_code, dx_code.dx_description) ALL NODES;

CREATE PROJECTION datamart.dx_claims_b0 /*+basename(dx_claims),createtype(L)*/ 
(
 tvcmid,
 ims_id,
 npi,
 dx_code,
 month,
 claim_count,
 patient_count,
 file_id,
 record_id
)
AS
 SELECT dx_claims.tvcmid,
        dx_claims.ims_id,
        dx_claims.npi,
        dx_claims.dx_code,
        dx_claims.month,
        dx_claims.claim_count,
        dx_claims.patient_count,
        dx_claims.file_id,
        dx_claims.record_id
 FROM datamart.dx_claims
 ORDER BY dx_claims.tvcmid,
          dx_claims.ims_id,
          dx_claims.npi,
          dx_claims.dx_code,
          dx_claims.month,
          dx_claims.claim_count,
          dx_claims.patient_count,
          dx_claims.file_id,
          dx_claims.record_id
SEGMENTED BY hash(dx_claims.tvcmid, dx_claims.ims_id, dx_claims.month, dx_claims.claim_count, dx_claims.patient_count, dx_claims.file_id, dx_claims.record_id, dx_claims.npi, dx_claims.dx_code) ALL NODES;

CREATE PROJECTION datamart.prescriber_combined_demographics_frozen_b0 /*+basename(prescriber_combined_demographics_frozen),createtype(L)*/ 
(
 start_date,
 end_date,
 sales_force_id,
 ims_id,
 npi,
 tvcmid,
 veeva_account_id,
 specialty,
 first_name,
 middle_name,
 last_name,
 ptr_veeva_address_id,
 ptr_address_1,
 ptr_address_2,
 ptr_address_3,
 ptr_city,
 ptr_state,
 ptr_zip,
 ptr_phone,
 ptr_territory_num,
 ptr_territory_type,
 ptr_address_source,
 ptr_mailable,
 dea_num,
 pdrp_flag,
 pdrp_date,
 np_pa_flag,
 no_spend,
 ama_no_contact_flag,
 email,
 degree,
 address_id,
 address_latitude,
 address_longitude,
 row_source,
 freeze_reason,
 freeze_date,
 secondary_specialty
)
AS
 SELECT prescriber_combined_demo_frozen.start_date,
        prescriber_combined_demo_frozen.end_date,
        prescriber_combined_demo_frozen.sales_force_id,
        prescriber_combined_demo_frozen.ims_id,
        prescriber_combined_demo_frozen.npi,
        prescriber_combined_demo_frozen.tvcmid,
        prescriber_combined_demo_frozen.veeva_account_id,
        prescriber_combined_demo_frozen.specialty,
        prescriber_combined_demo_frozen.first_name,
        prescriber_combined_demo_frozen.middle_name,
        prescriber_combined_demo_frozen.last_name,
        prescriber_combined_demo_frozen.ptr_veeva_address_id,
        prescriber_combined_demo_frozen.ptr_address_1,
        prescriber_combined_demo_frozen.ptr_address_2,
        prescriber_combined_demo_frozen.ptr_address_3,
        prescriber_combined_demo_frozen.ptr_city,
        prescriber_combined_demo_frozen.ptr_state,
        prescriber_combined_demo_frozen.ptr_zip,
        prescriber_combined_demo_frozen.ptr_phone,
        prescriber_combined_demo_frozen.ptr_territory_num,
        prescriber_combined_demo_frozen.ptr_territory_type,
        prescriber_combined_demo_frozen.ptr_address_source,
        prescriber_combined_demo_frozen.ptr_mailable,
        prescriber_combined_demo_frozen.dea_num,
        prescriber_combined_demo_frozen.pdrp_flag,
        prescriber_combined_demo_frozen.pdrp_date,
        prescriber_combined_demo_frozen.np_pa_flag,
        prescriber_combined_demo_frozen.no_spend,
        prescriber_combined_demo_frozen.ama_no_contact_flag,
        prescriber_combined_demo_frozen.email,
        prescriber_combined_demo_frozen.degree,
        prescriber_combined_demo_frozen.address_id,
        prescriber_combined_demo_frozen.address_latitude,
        prescriber_combined_demo_frozen.address_longitude,
        prescriber_combined_demo_frozen.row_source,
        prescriber_combined_demo_frozen.freeze_reason,
        prescriber_combined_demo_frozen.freeze_date,
        prescriber_combined_demo_frozen.secondary_specialty
 FROM datamart.prescriber_combined_demo_frozen
 ORDER BY prescriber_combined_demo_frozen.sales_force_id,
          prescriber_combined_demo_frozen.ims_id,
          prescriber_combined_demo_frozen.npi,
          prescriber_combined_demo_frozen.tvcmid,
          prescriber_combined_demo_frozen.veeva_account_id,
          prescriber_combined_demo_frozen.specialty,
          prescriber_combined_demo_frozen.first_name,
          prescriber_combined_demo_frozen.middle_name,
          prescriber_combined_demo_frozen.last_name,
          prescriber_combined_demo_frozen.ptr_veeva_address_id,
          prescriber_combined_demo_frozen.ptr_address_1,
          prescriber_combined_demo_frozen.ptr_address_2,
          prescriber_combined_demo_frozen.ptr_address_3,
          prescriber_combined_demo_frozen.ptr_city,
          prescriber_combined_demo_frozen.ptr_state,
          prescriber_combined_demo_frozen.ptr_zip,
          prescriber_combined_demo_frozen.ptr_phone,
          prescriber_combined_demo_frozen.ptr_territory_num,
          prescriber_combined_demo_frozen.ptr_territory_type,
          prescriber_combined_demo_frozen.ptr_address_source,
          prescriber_combined_demo_frozen.ptr_mailable,
          prescriber_combined_demo_frozen.dea_num,
          prescriber_combined_demo_frozen.pdrp_flag,
          prescriber_combined_demo_frozen.pdrp_date,
          prescriber_combined_demo_frozen.np_pa_flag,
          prescriber_combined_demo_frozen.no_spend,
          prescriber_combined_demo_frozen.ama_no_contact_flag,
          prescriber_combined_demo_frozen.email,
          prescriber_combined_demo_frozen.degree,
          prescriber_combined_demo_frozen.address_id,
          prescriber_combined_demo_frozen.address_latitude,
          prescriber_combined_demo_frozen.address_longitude,
          prescriber_combined_demo_frozen.row_source
SEGMENTED BY hash(prescriber_combined_demo_frozen.tvcmid, prescriber_combined_demo_frozen.ptr_state, prescriber_combined_demo_frozen.ptr_zip, prescriber_combined_demo_frozen.ptr_mailable, prescriber_combined_demo_frozen.pdrp_flag, prescriber_combined_demo_frozen.pdrp_date, prescriber_combined_demo_frozen.np_pa_flag, prescriber_combined_demo_frozen.no_spend, prescriber_combined_demo_frozen.ama_no_contact_flag, prescriber_combined_demo_frozen.address_id, prescriber_combined_demo_frozen.ims_id, prescriber_combined_demo_frozen.npi, prescriber_combined_demo_frozen.dea_num, prescriber_combined_demo_frozen.ptr_territory_num, prescriber_combined_demo_frozen.sales_force_id, prescriber_combined_demo_frozen.veeva_account_id, prescriber_combined_demo_frozen.ptr_veeva_address_id, prescriber_combined_demo_frozen.address_latitude, prescriber_combined_demo_frozen.address_longitude, prescriber_combined_demo_frozen.ptr_territory_type, prescriber_combined_demo_frozen.ptr_phone, prescriber_combined_demo_frozen.first_name, prescriber_combined_demo_frozen.middle_name, prescriber_combined_demo_frozen.last_name, prescriber_combined_demo_frozen.ptr_city, prescriber_combined_demo_frozen.ptr_address_source, prescriber_combined_demo_frozen.ptr_address_1, prescriber_combined_demo_frozen.ptr_address_2, prescriber_combined_demo_frozen.ptr_address_3, prescriber_combined_demo_frozen.email, prescriber_combined_demo_frozen.degree, prescriber_combined_demo_frozen.row_source) ALL NODES;

CREATE PROJECTION datamart.wholesaler_sales_867_b0 /*+basename(wholesaler_sales_867),createtype(L)*/ 
(
 basket_id,
 basket_name,
 ndc,
 product_description,
 product_name,
 trading_partner_name,
 trading_partner_dea,
 trading_partner_hin,
 trading_partner_location_type,
 trading_partner_dc_dea,
 trading_partner_dc_hin,
 trading_partner_dc_name,
 trading_partner_dc_address,
 trading_partner_dc_address_2,
 trading_partner_dc_city,
 trading_partner_dc_state,
 trading_partner_dc_zip,
 class_of_trade,
 outlet_location_name,
 outlet_dea,
 outlet_hin,
 outlet_340b,
 outlet_ncpdp,
 outlet_npi,
 outlet_location_address,
 outlet_location_address_2,
 outlet_location_city,
 outlet_location_state,
 outlet_location_zip,
 reporting_date,
 rollup_reporting_month,
 rollup_reporting_quarter,
 contract_number,
 contract_description,
 invoice_number,
 invoice_date,
 invoice_line_id,
 quanitity_stock_sales_ss,
 ds_sales_ds,
 summary_sales_su,
 dock_to_dock_bq,
 interbranch_ib,
 return_to_useable_ru,
 return_to_vendor_rv,
 transfer_to_disposal_td,
 adjusted_price,
 gross_amount,
 record_id,
 file_id,
 trx_count_normalized
)
AS
 SELECT wholesaler_sales_867.basket_id,
        wholesaler_sales_867.basket_name,
        wholesaler_sales_867.ndc,
        wholesaler_sales_867.product_description,
        wholesaler_sales_867.product_name,
        wholesaler_sales_867.trading_partner_name,
        wholesaler_sales_867.trading_partner_dea,
        wholesaler_sales_867.trading_partner_hin,
        wholesaler_sales_867.trading_partner_location_type,
        wholesaler_sales_867.trading_partner_dc_dea,
        wholesaler_sales_867.trading_partner_dc_hin,
        wholesaler_sales_867.trading_partner_dc_name,
        wholesaler_sales_867.trading_partner_dc_address,
        wholesaler_sales_867.trading_partner_dc_address_2,
        wholesaler_sales_867.trading_partner_dc_city,
        wholesaler_sales_867.trading_partner_dc_state,
        wholesaler_sales_867.trading_partner_dc_zip,
        wholesaler_sales_867.class_of_trade,
        wholesaler_sales_867.outlet_location_name,
        wholesaler_sales_867.outlet_dea,
        wholesaler_sales_867.outlet_hin,
        wholesaler_sales_867.outlet_340b,
        wholesaler_sales_867.outlet_ncpdp,
        wholesaler_sales_867.outlet_npi,
        wholesaler_sales_867.outlet_location_address,
        wholesaler_sales_867.outlet_location_address_2,
        wholesaler_sales_867.outlet_location_city,
        wholesaler_sales_867.outlet_location_state,
        wholesaler_sales_867.outlet_location_zip,
        wholesaler_sales_867.reporting_date,
        wholesaler_sales_867.rollup_reporting_month,
        wholesaler_sales_867.rollup_reporting_quarter,
        wholesaler_sales_867.contract_number,
        wholesaler_sales_867.contract_description,
        wholesaler_sales_867.invoice_number,
        wholesaler_sales_867.invoice_date,
        wholesaler_sales_867.invoice_line_id,
        wholesaler_sales_867.quanitity_stock_sales_ss,
        wholesaler_sales_867.ds_sales_ds,
        wholesaler_sales_867.summary_sales_su,
        wholesaler_sales_867.dock_to_dock_bq,
        wholesaler_sales_867.interbranch_ib,
        wholesaler_sales_867.return_to_useable_ru,
        wholesaler_sales_867.return_to_vendor_rv,
        wholesaler_sales_867.transfer_to_disposal_td,
        wholesaler_sales_867.adjusted_price,
        wholesaler_sales_867.gross_amount,
        wholesaler_sales_867.record_id,
        wholesaler_sales_867.file_id,
        wholesaler_sales_867.trx_count_normalized
 FROM datamart.wholesaler_sales_867
 ORDER BY wholesaler_sales_867.ndc,
          wholesaler_sales_867.product_description,
          wholesaler_sales_867.product_name,
          wholesaler_sales_867.trading_partner_name,
          wholesaler_sales_867.trading_partner_dea,
          wholesaler_sales_867.trading_partner_hin,
          wholesaler_sales_867.trading_partner_location_type,
          wholesaler_sales_867.trading_partner_dc_dea,
          wholesaler_sales_867.trading_partner_dc_hin,
          wholesaler_sales_867.trading_partner_dc_name,
          wholesaler_sales_867.trading_partner_dc_address,
          wholesaler_sales_867.trading_partner_dc_address_2,
          wholesaler_sales_867.trading_partner_dc_city,
          wholesaler_sales_867.trading_partner_dc_state,
          wholesaler_sales_867.trading_partner_dc_zip,
          wholesaler_sales_867.class_of_trade,
          wholesaler_sales_867.outlet_location_name,
          wholesaler_sales_867.outlet_dea,
          wholesaler_sales_867.outlet_hin,
          wholesaler_sales_867.outlet_340b,
          wholesaler_sales_867.outlet_ncpdp,
          wholesaler_sales_867.outlet_npi,
          wholesaler_sales_867.outlet_location_address,
          wholesaler_sales_867.outlet_location_address_2,
          wholesaler_sales_867.outlet_location_city,
          wholesaler_sales_867.outlet_location_state,
          wholesaler_sales_867.outlet_location_zip,
          wholesaler_sales_867.reporting_date,
          wholesaler_sales_867.contract_number,
          wholesaler_sales_867.contract_description,
          wholesaler_sales_867.invoice_number,
          wholesaler_sales_867.invoice_date,
          wholesaler_sales_867.invoice_line_id,
          wholesaler_sales_867.quanitity_stock_sales_ss,
          wholesaler_sales_867.ds_sales_ds,
          wholesaler_sales_867.summary_sales_su,
          wholesaler_sales_867.dock_to_dock_bq,
          wholesaler_sales_867.interbranch_ib,
          wholesaler_sales_867.return_to_useable_ru,
          wholesaler_sales_867.return_to_vendor_rv,
          wholesaler_sales_867.transfer_to_disposal_td,
          wholesaler_sales_867.adjusted_price,
          wholesaler_sales_867.gross_amount,
          wholesaler_sales_867.record_id
SEGMENTED BY hash(wholesaler_sales_867.basket_id, wholesaler_sales_867.trading_partner_location_type, wholesaler_sales_867.trading_partner_dc_state, wholesaler_sales_867.outlet_location_state, wholesaler_sales_867.reporting_date, wholesaler_sales_867.rollup_reporting_month, wholesaler_sales_867.rollup_reporting_quarter, wholesaler_sales_867.invoice_date, wholesaler_sales_867.invoice_line_id, wholesaler_sales_867.quanitity_stock_sales_ss, wholesaler_sales_867.ds_sales_ds, wholesaler_sales_867.summary_sales_su, wholesaler_sales_867.dock_to_dock_bq, wholesaler_sales_867.interbranch_ib, wholesaler_sales_867.return_to_useable_ru, wholesaler_sales_867.return_to_vendor_rv, wholesaler_sales_867.transfer_to_disposal_td, wholesaler_sales_867.record_id, wholesaler_sales_867.file_id, wholesaler_sales_867.trading_partner_dc_zip, wholesaler_sales_867.outlet_location_zip, wholesaler_sales_867.trading_partner_dea, wholesaler_sales_867.trading_partner_hin, wholesaler_sales_867.trading_partner_dc_dea, wholesaler_sales_867.trading_partner_dc_hin, wholesaler_sales_867.outlet_dea, wholesaler_sales_867.outlet_hin, wholesaler_sales_867.outlet_340b, wholesaler_sales_867.outlet_ncpdp, wholesaler_sales_867.outlet_npi, wholesaler_sales_867.adjusted_price, wholesaler_sales_867.gross_amount) ALL NODES;

CREATE PROJECTION datamart.xpd_demographics_b0 /*+basename(xpd_demographics),createtype(L)*/ 
(
 ims_client_number,
 ims_report_number,
 ims_id,
 tvcmid,
 last_name,
 first_name,
 middle_name,
 address_1,
 address_2,
 city,
 state,
 zip,
 specialty,
 specialty_description,
 trx_decile_retail,
 nrx_decile_retail,
 nbrx_decile_retail,
 trx_decile_mail,
 nrx_decile_mail,
 nbrx_decile_mail,
 market_prescriber_reliability_retail,
 market_prescriber_reliability_mail,
 record_id,
 file_id,
 report_frequency
)
AS
 SELECT xpd_demographics_antimigraine.ims_client_number,
        xpd_demographics_antimigraine.ims_report_number,
        xpd_demographics_antimigraine.ims_id,
        xpd_demographics_antimigraine.tvcmid,
        xpd_demographics_antimigraine.last_name,
        xpd_demographics_antimigraine.first_name,
        xpd_demographics_antimigraine.middle_name,
        xpd_demographics_antimigraine.address_1,
        xpd_demographics_antimigraine.address_2,
        xpd_demographics_antimigraine.city,
        xpd_demographics_antimigraine.state,
        xpd_demographics_antimigraine.zip,
        xpd_demographics_antimigraine.specialty,
        xpd_demographics_antimigraine.specialty_description,
        xpd_demographics_antimigraine.trx_decile_retail,
        xpd_demographics_antimigraine.nrx_decile_retail,
        xpd_demographics_antimigraine.nbrx_decile_retail,
        xpd_demographics_antimigraine.trx_decile_mail,
        xpd_demographics_antimigraine.nrx_decile_mail,
        xpd_demographics_antimigraine.nbrx_decile_mail,
        xpd_demographics_antimigraine.market_prescriber_reliability_retail,
        xpd_demographics_antimigraine.market_prescriber_reliability_mail,
        xpd_demographics_antimigraine.record_id,
        xpd_demographics_antimigraine.file_id,
        xpd_demographics_antimigraine.report_frequency
 FROM datamart.xpd_demographics_antimigraine
 ORDER BY xpd_demographics_antimigraine.ims_client_number,
          xpd_demographics_antimigraine.ims_report_number,
          xpd_demographics_antimigraine.ims_id,
          xpd_demographics_antimigraine.tvcmid,
          xpd_demographics_antimigraine.last_name,
          xpd_demographics_antimigraine.first_name,
          xpd_demographics_antimigraine.middle_name,
          xpd_demographics_antimigraine.address_1,
          xpd_demographics_antimigraine.address_2,
          xpd_demographics_antimigraine.city,
          xpd_demographics_antimigraine.state,
          xpd_demographics_antimigraine.zip,
          xpd_demographics_antimigraine.specialty,
          xpd_demographics_antimigraine.specialty_description,
          xpd_demographics_antimigraine.trx_decile_retail,
          xpd_demographics_antimigraine.nrx_decile_retail,
          xpd_demographics_antimigraine.nbrx_decile_retail,
          xpd_demographics_antimigraine.trx_decile_mail,
          xpd_demographics_antimigraine.nrx_decile_mail,
          xpd_demographics_antimigraine.nbrx_decile_mail,
          xpd_demographics_antimigraine.market_prescriber_reliability_retail,
          xpd_demographics_antimigraine.market_prescriber_reliability_mail,
          xpd_demographics_antimigraine.record_id,
          xpd_demographics_antimigraine.file_id
SEGMENTED BY hash(xpd_demographics_antimigraine.ims_id) ALL NODES;

CREATE PROJECTION datamart.rx_deciles_b0 /*+basename(rx_deciles),createtype(L)*/ 
(
 ims_id,
 tvcmid,
 basket_id,
 basket_name,
 basket_type,
 report_frequency,
 decile_trx_count_6_mo,
 decile_trx_count_12_mo,
 trx_count_6_mo,
 trx_count_12_mo,
 trx_count_24_mo,
 decile_date,
 first_name,
 last_name,
 decile_name
)
AS
 SELECT rx_deciles.ims_id,
        rx_deciles.tvcmid,
        rx_deciles.basket_id,
        rx_deciles.basket_name,
        rx_deciles.basket_type,
        rx_deciles.report_frequency,
        rx_deciles.decile_trx_count_6_mo,
        rx_deciles.decile_trx_count_12_mo,
        rx_deciles.trx_count_6_mo,
        rx_deciles.trx_count_12_mo,
        rx_deciles.trx_count_24_mo,
        rx_deciles.decile_date,
        rx_deciles.first_name,
        rx_deciles.last_name,
        rx_deciles.decile_name
 FROM datamart.rx_deciles
 ORDER BY rx_deciles.ims_id,
          rx_deciles.tvcmid,
          rx_deciles.basket_id,
          rx_deciles.basket_name,
          rx_deciles.basket_type,
          rx_deciles.report_frequency,
          rx_deciles.decile_trx_count_6_mo,
          rx_deciles.decile_trx_count_12_mo,
          rx_deciles.trx_count_6_mo,
          rx_deciles.trx_count_12_mo,
          rx_deciles.trx_count_24_mo,
          rx_deciles.decile_date,
          rx_deciles.first_name,
          rx_deciles.last_name,
          rx_deciles.decile_name
SEGMENTED BY hash(rx_deciles.ims_id) ALL NODES;

CREATE PROJECTION datamart.xpd_core_metrics_respiratory_b0 /*+basename(xpd_core_metrics_respiratory),createtype(A)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 tvcmid,
 specialty,
 ims_product_group,
 basket_id,
 basket_name,
 rollup_period,
 xpo_nrx,
 xpo_trx,
 unknown_nrx,
 unknown_trx,
 new_therapy_starts,
 continued_new,
 switch_to,
 add_on,
 restart_same_new,
 restart_different,
 continued_refill,
 restart_same_refill,
 switch_from,
 restart_different_from,
 add_to,
 market_new_to_brand_rx,
 dynamic_capture_rx,
 record_id,
 file_id,
 report_frequency
)
AS
 SELECT xpd_core_metrics_respiratory.ims_client_number,
        xpd_core_metrics_respiratory.ims_report_number,
        xpd_core_metrics_respiratory.channel_indicator,
        xpd_core_metrics_respiratory.ims_id,
        xpd_core_metrics_respiratory.tvcmid,
        xpd_core_metrics_respiratory.specialty,
        xpd_core_metrics_respiratory.ims_product_group,
        xpd_core_metrics_respiratory.basket_id,
        xpd_core_metrics_respiratory.basket_name,
        xpd_core_metrics_respiratory.rollup_period,
        xpd_core_metrics_respiratory.xpo_nrx,
        xpd_core_metrics_respiratory.xpo_trx,
        xpd_core_metrics_respiratory.unknown_nrx,
        xpd_core_metrics_respiratory.unknown_trx,
        xpd_core_metrics_respiratory.new_therapy_starts,
        xpd_core_metrics_respiratory.continued_new,
        xpd_core_metrics_respiratory.switch_to,
        xpd_core_metrics_respiratory.add_on,
        xpd_core_metrics_respiratory.restart_same_new,
        xpd_core_metrics_respiratory.restart_different,
        xpd_core_metrics_respiratory.continued_refill,
        xpd_core_metrics_respiratory.restart_same_refill,
        xpd_core_metrics_respiratory.switch_from,
        xpd_core_metrics_respiratory.restart_different_from,
        xpd_core_metrics_respiratory.add_to,
        xpd_core_metrics_respiratory.market_new_to_brand_rx,
        xpd_core_metrics_respiratory.dynamic_capture_rx,
        xpd_core_metrics_respiratory.record_id,
        xpd_core_metrics_respiratory.file_id,
        xpd_core_metrics_respiratory.report_frequency
 FROM datamart.xpd_core_metrics_respiratory
 ORDER BY xpd_core_metrics_respiratory.ims_client_number,
          xpd_core_metrics_respiratory.ims_report_number,
          xpd_core_metrics_respiratory.channel_indicator,
          xpd_core_metrics_respiratory.ims_id,
          xpd_core_metrics_respiratory.tvcmid,
          xpd_core_metrics_respiratory.specialty,
          xpd_core_metrics_respiratory.ims_product_group,
          xpd_core_metrics_respiratory.basket_id
SEGMENTED BY hash(xpd_core_metrics_respiratory.ims_client_number, xpd_core_metrics_respiratory.ims_report_number, xpd_core_metrics_respiratory.channel_indicator, xpd_core_metrics_respiratory.tvcmid, xpd_core_metrics_respiratory.ims_product_group, xpd_core_metrics_respiratory.basket_id, xpd_core_metrics_respiratory.rollup_period, xpd_core_metrics_respiratory.record_id) ALL NODES;

CREATE PROJECTION datamart.xpd_demographics_respiratory_b0 /*+basename(xpd_demographics_respiratory),createtype(A)*/ 
(
 ims_client_number,
 ims_report_number,
 ims_id,
 tvcmid,
 last_name,
 first_name,
 middle_name,
 address_1,
 address_2,
 city,
 state,
 zip,
 specialty,
 specialty_description,
 trx_decile_retail,
 nrx_decile_retail,
 nbrx_decile_retail,
 trx_decile_mail,
 nrx_decile_mail,
 nbrx_decile_mail,
 market_prescriber_reliability_retail,
 market_prescriber_reliability_mail,
 record_id,
 file_id,
 report_frequency
)
AS
 SELECT xpd_demographics_respiratory.ims_client_number,
        xpd_demographics_respiratory.ims_report_number,
        xpd_demographics_respiratory.ims_id,
        xpd_demographics_respiratory.tvcmid,
        xpd_demographics_respiratory.last_name,
        xpd_demographics_respiratory.first_name,
        xpd_demographics_respiratory.middle_name,
        xpd_demographics_respiratory.address_1,
        xpd_demographics_respiratory.address_2,
        xpd_demographics_respiratory.city,
        xpd_demographics_respiratory.state,
        xpd_demographics_respiratory.zip,
        xpd_demographics_respiratory.specialty,
        xpd_demographics_respiratory.specialty_description,
        xpd_demographics_respiratory.trx_decile_retail,
        xpd_demographics_respiratory.nrx_decile_retail,
        xpd_demographics_respiratory.nbrx_decile_retail,
        xpd_demographics_respiratory.trx_decile_mail,
        xpd_demographics_respiratory.nrx_decile_mail,
        xpd_demographics_respiratory.nbrx_decile_mail,
        xpd_demographics_respiratory.market_prescriber_reliability_retail,
        xpd_demographics_respiratory.market_prescriber_reliability_mail,
        xpd_demographics_respiratory.record_id,
        xpd_demographics_respiratory.file_id,
        xpd_demographics_respiratory.report_frequency
 FROM datamart.xpd_demographics_respiratory
 ORDER BY xpd_demographics_respiratory.ims_client_number,
          xpd_demographics_respiratory.ims_report_number,
          xpd_demographics_respiratory.ims_id,
          xpd_demographics_respiratory.tvcmid,
          xpd_demographics_respiratory.last_name,
          xpd_demographics_respiratory.first_name,
          xpd_demographics_respiratory.middle_name,
          xpd_demographics_respiratory.address_1
SEGMENTED BY hash(xpd_demographics_respiratory.ims_client_number, xpd_demographics_respiratory.ims_report_number, xpd_demographics_respiratory.tvcmid, xpd_demographics_respiratory.state, xpd_demographics_respiratory.zip, xpd_demographics_respiratory.specialty, xpd_demographics_respiratory.trx_decile_retail, xpd_demographics_respiratory.nrx_decile_retail) ALL NODES;

CREATE PROJECTION datamart.xpd_switch_details_respiratory_b0 /*+basename(xpd_switch_details_respiratory),createtype(A)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 tvcmid,
 specialty,
 switch_from_product_group_num,
 switch_from_basket_id,
 switch_from_basket_name,
 switch_to_product_group_num,
 switch_to_basket_id,
 switch_to_basket_name,
 rollup_period,
 rx,
 record_id,
 file_id,
 report_frequency
)
AS
 SELECT xpd_switch_details_respiratory.ims_client_number,
        xpd_switch_details_respiratory.ims_report_number,
        xpd_switch_details_respiratory.channel_indicator,
        xpd_switch_details_respiratory.ims_id,
        xpd_switch_details_respiratory.tvcmid,
        xpd_switch_details_respiratory.specialty,
        xpd_switch_details_respiratory.switch_from_product_group_num,
        xpd_switch_details_respiratory.switch_from_basket_id,
        xpd_switch_details_respiratory.switch_from_basket_name,
        xpd_switch_details_respiratory.switch_to_product_group_num,
        xpd_switch_details_respiratory.switch_to_basket_id,
        xpd_switch_details_respiratory.switch_to_basket_name,
        xpd_switch_details_respiratory.rollup_period,
        xpd_switch_details_respiratory.rx,
        xpd_switch_details_respiratory.record_id,
        xpd_switch_details_respiratory.file_id,
        xpd_switch_details_respiratory.report_frequency
 FROM datamart.xpd_switch_details_respiratory
 ORDER BY xpd_switch_details_respiratory.ims_client_number,
          xpd_switch_details_respiratory.ims_report_number,
          xpd_switch_details_respiratory.channel_indicator,
          xpd_switch_details_respiratory.ims_id,
          xpd_switch_details_respiratory.tvcmid,
          xpd_switch_details_respiratory.specialty,
          xpd_switch_details_respiratory.switch_from_product_group_num,
          xpd_switch_details_respiratory.switch_from_basket_id
SEGMENTED BY hash(xpd_switch_details_respiratory.ims_client_number, xpd_switch_details_respiratory.ims_report_number, xpd_switch_details_respiratory.channel_indicator, xpd_switch_details_respiratory.tvcmid, xpd_switch_details_respiratory.switch_from_product_group_num, xpd_switch_details_respiratory.switch_from_basket_id, xpd_switch_details_respiratory.switch_to_product_group_num, xpd_switch_details_respiratory.switch_to_basket_id) ALL NODES;

CREATE PROJECTION datamart.xpd_add_on_details_b0 /*+basename(xpd_add_on_details),createtype(L)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 tvcmid,
 specialty,
 addon_from_product_group_num,
 addon_from_basket_id,
 addon_from_basket_name,
 addon_to_product_group_num,
 addon_to_basket_id,
 addon_to_basket_name,
 rollup_period,
 addon_rx,
 report_frequency,
 record_id,
 file_id
)
AS
 SELECT xpd_add_on_details.ims_client_number,
        xpd_add_on_details.ims_report_number,
        xpd_add_on_details.channel_indicator,
        xpd_add_on_details.ims_id,
        xpd_add_on_details.tvcmid,
        xpd_add_on_details.specialty,
        xpd_add_on_details.addon_from_product_group_num,
        xpd_add_on_details.addon_from_basket_id,
        xpd_add_on_details.addon_from_basket_name,
        xpd_add_on_details.addon_to_product_group_num,
        xpd_add_on_details.addon_to_basket_id,
        xpd_add_on_details.addon_to_basket_name,
        xpd_add_on_details.rollup_period,
        xpd_add_on_details.addon_rx,
        xpd_add_on_details.report_frequency,
        xpd_add_on_details.record_id,
        xpd_add_on_details.file_id
 FROM datamart.xpd_add_on_details
 ORDER BY xpd_add_on_details.ims_client_number,
          xpd_add_on_details.ims_report_number,
          xpd_add_on_details.channel_indicator,
          xpd_add_on_details.ims_id,
          xpd_add_on_details.tvcmid,
          xpd_add_on_details.specialty,
          xpd_add_on_details.addon_from_product_group_num,
          xpd_add_on_details.addon_from_basket_id
SEGMENTED BY hash(xpd_add_on_details.ims_id) ALL NODES;

CREATE PROJECTION datamart.xpd_restart_diff_details_b0 /*+basename(xpd_restart_diff_details),createtype(L)*/ 
(
 ims_client_number,
 ims_report_number,
 channel_indicator,
 ims_id,
 tvcmid,
 specialty,
 restart_from_product_group_num,
 restart_from_basket_id,
 restart_from_basket_name,
 restart_to_product_group_num,
 restart_to_basket_id,
 restart_to_basket_name,
 rollup_period,
 restart_diff_rx,
 report_frequency,
 record_id,
 file_id
)
AS
 SELECT xpd_restart_diff_details.ims_client_number,
        xpd_restart_diff_details.ims_report_number,
        xpd_restart_diff_details.channel_indicator,
        xpd_restart_diff_details.ims_id,
        xpd_restart_diff_details.tvcmid,
        xpd_restart_diff_details.specialty,
        xpd_restart_diff_details.restart_from_product_group_num,
        xpd_restart_diff_details.restart_from_basket_id,
        xpd_restart_diff_details.restart_from_basket_name,
        xpd_restart_diff_details.restart_to_product_group_num,
        xpd_restart_diff_details.restart_to_basket_id,
        xpd_restart_diff_details.restart_to_basket_name,
        xpd_restart_diff_details.rollup_period,
        xpd_restart_diff_details.restart_diff_rx,
        xpd_restart_diff_details.report_frequency,
        xpd_restart_diff_details.record_id,
        xpd_restart_diff_details.file_id
 FROM datamart.xpd_restart_diff_details
 ORDER BY xpd_restart_diff_details.ims_client_number,
          xpd_restart_diff_details.ims_report_number,
          xpd_restart_diff_details.channel_indicator,
          xpd_restart_diff_details.ims_id,
          xpd_restart_diff_details.tvcmid,
          xpd_restart_diff_details.specialty,
          xpd_restart_diff_details.restart_from_product_group_num,
          xpd_restart_diff_details.restart_from_basket_id
SEGMENTED BY hash(xpd_restart_diff_details.ims_id) ALL NODES;

CREATE PROJECTION datamart.ddd_adhoc_b0 /*+basename(ddd_adhoc),createtype(L)*/ 
(
 outlet_code,
 outlet_name,
 outlet_zip,
 ims_client_number,
 ims_report_number,
 report_frequency,
 ims_product_code,
 basket_id,
 basket_name,
 data_date,
 date,
 rollup_week,
 rollup_month,
 comp_month,
 quantity,
 file_id,
 record_id,
 market_name,
 outlet_tvcmid,
 sales_force_id,
 category_code,
 rollup_flag,
 basket_type,
 rollup_445_month,
 dollars,
 COUNT,
 subcategory_code
)
AS
 SELECT ddd_adhoc.outlet_code,
        ddd_adhoc.outlet_name,
        ddd_adhoc.outlet_zip,
        ddd_adhoc.ims_client_number,
        ddd_adhoc.ims_report_number,
        ddd_adhoc.report_frequency,
        ddd_adhoc.ims_product_code,
        ddd_adhoc.basket_id,
        ddd_adhoc.basket_name,
        ddd_adhoc.data_date,
        ddd_adhoc.date,
        ddd_adhoc.rollup_week,
        ddd_adhoc.rollup_month,
        ddd_adhoc.comp_month,
        ddd_adhoc.quantity,
        ddd_adhoc.file_id,
        ddd_adhoc.record_id,
        ddd_adhoc.market_name,
        ddd_adhoc.outlet_tvcmid,
        ddd_adhoc.sales_force_id,
        ddd_adhoc.category_code,
        ddd_adhoc.rollup_flag,
        ddd_adhoc.basket_type,
        ddd_adhoc.rollup_445_month,
        ddd_adhoc.dollars,
        ddd_adhoc.COUNT,
        ddd_adhoc.subcategory_code
 FROM datamart.ddd_adhoc
 ORDER BY ddd_adhoc.outlet_code,
          ddd_adhoc.outlet_name,
          ddd_adhoc.outlet_zip,
          ddd_adhoc.ims_client_number,
          ddd_adhoc.ims_report_number,
          ddd_adhoc.report_frequency,
          ddd_adhoc.ims_product_code,
          ddd_adhoc.basket_id
SEGMENTED BY hash(ddd_adhoc.ims_client_number, ddd_adhoc.ims_report_number, ddd_adhoc.basket_id, ddd_adhoc.data_date, ddd_adhoc.date, ddd_adhoc.rollup_week, ddd_adhoc.rollup_month, ddd_adhoc.comp_month) ALL NODES;

CREATE PROJECTION datamart.datamar_fia_adhoc_b0 /*+basename(datamar_fia_adhoc),createtype(A)*/ 
(
 basket_id,
 basket_name,
 claim_id,
 patient_id,
 sequence_number,
 product_id,
 fill_date,
 claim_type,
 reject_code,
 days_supply,
 quantity,
 refill_code,
 payer_plan_id,
 opc_ask,
 sec_payer_plan_id,
 buy_down,
 opc_paid,
 prescriber_id,
 sob,
 sub_product_id,
 sub_opc,
 initial_claim_id,
 prev_product_id,
 daw_code,
 wrt_date,
 claim_status,
 copay_card_flg,
 zip_code,
 ecoup_flag,
 ecoup_offset_amt,
 standard_copay,
 standard_copay_yn,
 market_id,
 flexible_fld_1_char,
 flexible_fld_2_char,
 flexible_fld_3_char,
 flexible_fld_4_char,
 file_id,
 record_id,
 cbsa_code,
 cbsa_description,
 state_code,
 payer_name,
 plan_name,
 pbm_name,
 pbm_id,
 method_of_payment,
 model_type,
 product_group,
 product_group_id,
 product_name,
 generic_name,
 brand_generic_flag,
 product_form,
 product_strength,
 package_size,
 manufacturer,
 cmf10,
 usc_code,
 fia_market_desc,
 reject_reason,
 reject_group,
 mpd_year,
 mpd_eligibility_class,
 deductible_start_date,
 copay_start_date,
 gap_start_date,
 catastrophic_start_date,
 mpd_panel_patient,
 PROVIDER_TYPE,
 IQVIA_RXER_ID,
 PRIMARY_SPECIALTY_CODE,
 PRIMARY_SPECIALTY_DESC,
 FIRST_NAME,
 LAST_NAME,
 ORG_NM,
 ADDRESS,
 CITY,
 PVR_ZIP_CODE,
 PVR_STATE_CODE,
 PHONE_NUMBER,
 DEA_NUMBER,
 ME_NUMBER,
 PVR_FLEXIBLE_FLD_1_CHAR,
 PVR_FLEXIBLE_FLD_2_CHAR
)
AS
 SELECT fia_adhoc.basket_id,
        fia_adhoc.basket_name,
        fia_adhoc.claim_id,
        fia_adhoc.patient_id,
        fia_adhoc.sequence_number,
        fia_adhoc.product_id,
        fia_adhoc.fill_date,
        fia_adhoc.claim_type,
        fia_adhoc.reject_code,
        fia_adhoc.days_supply,
        fia_adhoc.quantity,
        fia_adhoc.refill_code,
        fia_adhoc.payer_plan_id,
        fia_adhoc.opc_ask,
        fia_adhoc.sec_payer_plan_id,
        fia_adhoc.buy_down,
        fia_adhoc.opc_paid,
        fia_adhoc.prescriber_id,
        fia_adhoc.sob,
        fia_adhoc.sub_product_id,
        fia_adhoc.sub_opc,
        fia_adhoc.initial_claim_id,
        fia_adhoc.prev_product_id,
        fia_adhoc.daw_code,
        fia_adhoc.wrt_date,
        fia_adhoc.claim_status,
        fia_adhoc.copay_card_flg,
        fia_adhoc.zip_code,
        fia_adhoc.ecoup_flag,
        fia_adhoc.ecoup_offset_amt,
        fia_adhoc.standard_copay,
        fia_adhoc.standard_copay_yn,
        fia_adhoc.market_id,
        fia_adhoc.flexible_fld_1_char,
        fia_adhoc.flexible_fld_2_char,
        fia_adhoc.flexible_fld_3_char,
        fia_adhoc.flexible_fld_4_char,
        fia_adhoc.file_id,
        fia_adhoc.record_id,
        fia_adhoc.cbsa_code,
        fia_adhoc.cbsa_description,
        fia_adhoc.state_code,
        fia_adhoc.payer_name,
        fia_adhoc.plan_name,
        fia_adhoc.pbm_name,
        fia_adhoc.pbm_id,
        fia_adhoc.method_of_payment,
        fia_adhoc.model_type,
        fia_adhoc.product_group,
        fia_adhoc.product_group_id,
        fia_adhoc.product_name,
        fia_adhoc.generic_name,
        fia_adhoc.brand_generic_flag,
        fia_adhoc.product_form,
        fia_adhoc.product_strength,
        fia_adhoc.package_size,
        fia_adhoc.manufacturer,
        fia_adhoc.cmf10,
        fia_adhoc.usc_code,
        fia_adhoc.fia_market_desc,
        fia_adhoc.reject_reason,
        fia_adhoc.reject_group,
        fia_adhoc.mpd_year,
        fia_adhoc.mpd_eligibility_class,
        fia_adhoc.deductible_start_date,
        fia_adhoc.copay_start_date,
        fia_adhoc.gap_start_date,
        fia_adhoc.catastrophic_start_date,
        fia_adhoc.mpd_panel_patient,
        fia_adhoc.PROVIDER_TYPE,
        fia_adhoc.IQVIA_RXER_ID,
        fia_adhoc.PRIMARY_SPECIALTY_CODE,
        fia_adhoc.PRIMARY_SPECIALTY_DESC,
        fia_adhoc.FIRST_NAME,
        fia_adhoc.LAST_NAME,
        fia_adhoc.ORG_NM,
        fia_adhoc.ADDRESS,
        fia_adhoc.CITY,
        fia_adhoc.PVR_ZIP_CODE,
        fia_adhoc.PVR_STATE_CODE,
        fia_adhoc.PHONE_NUMBER,
        fia_adhoc.DEA_NUMBER,
        fia_adhoc.ME_NUMBER,
        fia_adhoc.PVR_FLEXIBLE_FLD_1_CHAR,
        fia_adhoc.PVR_FLEXIBLE_FLD_2_CHAR
 FROM datamart.fia_adhoc
 ORDER BY fia_adhoc.claim_id,
          fia_adhoc.patient_id,
          fia_adhoc.sequence_number,
          fia_adhoc.product_id,
          fia_adhoc.fill_date,
          fia_adhoc.claim_type,
          fia_adhoc.reject_code,
          fia_adhoc.days_supply
SEGMENTED BY hash(fia_adhoc.record_id) ALL NODES;

CREATE PROJECTION datamart.psrf_util_detailed_report_b0 /*+basename(psrf_util_detailed_report),createtype(L)*/ 
(
 DATA_Source,
 Patient_ID,
 HCP_NPI,
 tvcmid,
 Product,
 PSRF_Date,
 HCP_Signature_DATE,
 Patient_Authorization_Date,
 Script_triaged_to_Phmcy_Date,
 Ship_Date,
 Therapy_Start_Date,
 PAP,
 Prescriber_Name,
 PrescriberCity,
 PrescriberState,
 PrescriberZip,
 Field_1,
 Field_2,
 Field_3,
 Field_4,
 Field_5,
 record_id,
 file_id
)
AS
 SELECT psrf_util_detailed_report.DATA_Source,
        psrf_util_detailed_report.Patient_ID,
        psrf_util_detailed_report.HCP_NPI,
        psrf_util_detailed_report.tvcmid,
        psrf_util_detailed_report.Product,
        psrf_util_detailed_report.PSRF_Date,
        psrf_util_detailed_report.HCP_Signature_DATE,
        psrf_util_detailed_report.Patient_Authorization_Date,
        psrf_util_detailed_report.Script_triaged_to_Phmcy_Date,
        psrf_util_detailed_report.Ship_Date,
        psrf_util_detailed_report.Therapy_Start_Date,
        psrf_util_detailed_report.PAP,
        psrf_util_detailed_report.Prescriber_Name,
        psrf_util_detailed_report.PrescriberCity,
        psrf_util_detailed_report.PrescriberState,
        psrf_util_detailed_report.PrescriberZip,
        psrf_util_detailed_report.Field_1,
        psrf_util_detailed_report.Field_2,
        psrf_util_detailed_report.Field_3,
        psrf_util_detailed_report.Field_4,
        psrf_util_detailed_report.Field_5,
        psrf_util_detailed_report.record_id,
        psrf_util_detailed_report.file_id
 FROM datamart.psrf_util_detailed_report
 ORDER BY psrf_util_detailed_report.DATA_Source,
          psrf_util_detailed_report.Patient_ID,
          psrf_util_detailed_report.HCP_NPI,
          psrf_util_detailed_report.tvcmid,
          psrf_util_detailed_report.Product,
          psrf_util_detailed_report.PSRF_Date,
          psrf_util_detailed_report.HCP_Signature_DATE,
          psrf_util_detailed_report.Patient_Authorization_Date
SEGMENTED BY hash(psrf_util_detailed_report.HCP_NPI) ALL NODES;

CREATE PROJECTION datamart.tmp_region_area_c_b0 /*+basename(tmp_region_area_c),createtype(A)*/ 
(
 territory_number,
 area_number,
 region_number
)
AS
 SELECT tmp_region_area_c.territory_number,
        tmp_region_area_c.area_number,
        tmp_region_area_c.region_number
 FROM datamart.tmp_region_area_c
 ORDER BY tmp_region_area_c.territory_number,
          tmp_region_area_c.area_number,
          tmp_region_area_c.region_number
SEGMENTED BY hash(tmp_region_area_c.territory_number) ALL NODES;

CREATE PROJECTION datamart.tmp_call_hist_c_b0 /*+basename(tmp_call_hist_c),createtype(A)*/ 
(
 id,
 isdeleted,
 parentid,
 createdbyid,
 createddate,
 field,
 oldvalue,
 newvalue,
 file_id,
 record_id,
 row_num
)
AS
 SELECT tmp_call_hist_c.id,
        tmp_call_hist_c.isdeleted,
        tmp_call_hist_c.parentid,
        tmp_call_hist_c.createdbyid,
        tmp_call_hist_c.createddate,
        tmp_call_hist_c.field,
        tmp_call_hist_c.oldvalue,
        tmp_call_hist_c.newvalue,
        tmp_call_hist_c.file_id,
        tmp_call_hist_c.record_id,
        tmp_call_hist_c.row_num
 FROM datamart.tmp_call_hist_c
 ORDER BY tmp_call_hist_c.id
SEGMENTED BY hash(tmp_call_hist_c.id) ALL NODES;

CREATE PROJECTION datamart.titration_dosage_b0 /*+basename(titration_dosage),createtype(L)*/ 
(
 TVCM_ID,
 IMS_ID,
 product_id,
 PRODUCT_NAME,
 Data_Type,
 Avg_TD_Daily_Dose_New_Patient,
 Avg_TD_Daily_Dose_Cont_Patient,
 Data_Ending_Month,
 file_id
)
AS
 SELECT titration_dosage.TVCM_ID,
        titration_dosage.IMS_ID,
        titration_dosage.product_id,
        titration_dosage.PRODUCT_NAME,
        titration_dosage.Data_Type,
        titration_dosage.Avg_TD_Daily_Dose_New_Patient,
        titration_dosage.Avg_TD_Daily_Dose_Cont_Patient,
        titration_dosage.Data_Ending_Month,
        titration_dosage.file_id
 FROM datamart.titration_dosage
 ORDER BY titration_dosage.TVCM_ID,
          titration_dosage.IMS_ID,
          titration_dosage.product_id,
          titration_dosage.PRODUCT_NAME,
          titration_dosage.Data_Type,
          titration_dosage.Avg_TD_Daily_Dose_New_Patient,
          titration_dosage.Avg_TD_Daily_Dose_Cont_Patient,
          titration_dosage.Data_Ending_Month,
          titration_dosage.file_id
SEGMENTED BY hash(titration_dosage.TVCM_ID, titration_dosage.IMS_ID, titration_dosage.product_id, titration_dosage.PRODUCT_NAME, titration_dosage.Data_Type, titration_dosage.Avg_TD_Daily_Dose_New_Patient, titration_dosage.Avg_TD_Daily_Dose_Cont_Patient, titration_dosage.Data_Ending_Month, titration_dosage.file_id) ALL NODES;

CREATE PROJECTION datamart.psrf_aggregated_util_rpt_b0 /*+basename(psrf_aggregated_util_rpt),createtype(L)*/ 
(
 sales_force_id,
 area_number,
 region_number,
 territory_number,
 area_name,
 region_name,
 territory_name,
 PrescriberName,
 psrf_city,
 psrf_state,
 psrf_zip,
 psrf_npi,
 demo_first_name,
 demo_last_name,
 demo_city,
 demo_state,
 demo_zip,
 demo_npi,
 Current_Week_PSRFs,
 Current_Month_PSRFs,
 HCP_Signature_Yes,
 HCP_Signature_No,
 Patient_Auth_Yes,
 Patient_Auth_No,
 YTD_PSRFs,
 file_id,
 row_source
)
AS
 SELECT psrf_aggregated_util_rpt.sales_force_id,
        psrf_aggregated_util_rpt.area_number,
        psrf_aggregated_util_rpt.region_number,
        psrf_aggregated_util_rpt.territory_number,
        psrf_aggregated_util_rpt.area_name,
        psrf_aggregated_util_rpt.region_name,
        psrf_aggregated_util_rpt.territory_name,
        psrf_aggregated_util_rpt.PrescriberName,
        psrf_aggregated_util_rpt.psrf_city,
        psrf_aggregated_util_rpt.psrf_state,
        psrf_aggregated_util_rpt.psrf_zip,
        psrf_aggregated_util_rpt.psrf_npi,
        psrf_aggregated_util_rpt.demo_first_name,
        psrf_aggregated_util_rpt.demo_last_name,
        psrf_aggregated_util_rpt.demo_city,
        psrf_aggregated_util_rpt.demo_state,
        psrf_aggregated_util_rpt.demo_zip,
        psrf_aggregated_util_rpt.demo_npi,
        psrf_aggregated_util_rpt.Current_Week_PSRFs,
        psrf_aggregated_util_rpt.Current_Month_PSRFs,
        psrf_aggregated_util_rpt.HCP_Signature_Yes,
        psrf_aggregated_util_rpt.HCP_Signature_No,
        psrf_aggregated_util_rpt.Patient_Auth_Yes,
        psrf_aggregated_util_rpt.Patient_Auth_No,
        psrf_aggregated_util_rpt.YTD_PSRFs,
        psrf_aggregated_util_rpt.file_id,
        psrf_aggregated_util_rpt.row_source
 FROM datamart.psrf_aggregated_util_rpt
 ORDER BY psrf_aggregated_util_rpt.sales_force_id,
          psrf_aggregated_util_rpt.area_number,
          psrf_aggregated_util_rpt.region_number,
          psrf_aggregated_util_rpt.territory_number,
          psrf_aggregated_util_rpt.area_name,
          psrf_aggregated_util_rpt.region_name,
          psrf_aggregated_util_rpt.territory_name,
          psrf_aggregated_util_rpt.PrescriberName,
          psrf_aggregated_util_rpt.psrf_city,
          psrf_aggregated_util_rpt.psrf_state,
          psrf_aggregated_util_rpt.psrf_zip,
          psrf_aggregated_util_rpt.psrf_npi,
          psrf_aggregated_util_rpt.demo_first_name,
          psrf_aggregated_util_rpt.demo_last_name,
          psrf_aggregated_util_rpt.demo_city,
          psrf_aggregated_util_rpt.demo_state,
          psrf_aggregated_util_rpt.demo_zip,
          psrf_aggregated_util_rpt.demo_npi,
          psrf_aggregated_util_rpt.Current_Week_PSRFs,
          psrf_aggregated_util_rpt.Current_Month_PSRFs,
          psrf_aggregated_util_rpt.HCP_Signature_Yes,
          psrf_aggregated_util_rpt.HCP_Signature_No,
          psrf_aggregated_util_rpt.Patient_Auth_Yes,
          psrf_aggregated_util_rpt.Patient_Auth_No,
          psrf_aggregated_util_rpt.YTD_PSRFs,
          psrf_aggregated_util_rpt.file_id
SEGMENTED BY hash(psrf_aggregated_util_rpt.area_number, psrf_aggregated_util_rpt.region_number, psrf_aggregated_util_rpt.demo_state, psrf_aggregated_util_rpt.demo_zip, psrf_aggregated_util_rpt.file_id, psrf_aggregated_util_rpt.psrf_npi, psrf_aggregated_util_rpt.demo_npi, psrf_aggregated_util_rpt.psrf_zip) ALL NODES;


CREATE  VIEW datamart.territory_region_area_hierarchy AS
 SELECT a.geography_number AS territory_number,
        a.geography_name AS territory_name,
        b.geography_number AS region_number,
        b.geography_name AS region_name,
        c.geography_number AS area_number,
        c.geography_name AS area_name
 FROM ((datamart.sales_geography a LEFT  JOIN datamart.sales_geography b ON ((a.parent_geography_number = b.geography_number))) LEFT  JOIN datamart.sales_geography c ON ((b.parent_geography_number = c.geography_number)))
 ORDER BY a.geography_number;

SELECT MARK_DESIGN_KSAFE(1);

