


CREATE  VIEW WSMP_ADMIN_ORA.v_siebel_samples_prof AS
SELECT ap.ROW_ID AS sample_id, ea.ROW_ID AS call_id, c.ROW_ID AS siebel_contact_row_id, CASE WHEN (length(c.INTEGRATION_ID) = 18) THEN c.INTEGRATION_ID ELSE NULL END AS veeva_account_id, trunc(ea.APPT_START_DT, 'DD'::varchar(2)) AS call_date, rep_p.X_SALES_FORCE AS sales_force_id, rep_p.NAME AS territory_num, ea.SUBTYPE_CD AS subtype_cd, ea.TODO_CD AS todo_cd, CASE WHEN (ap.RELATION_TYPE_CD = 'Direct Send'::varchar(11)) THEN 'REQUEST'::varchar(7) WHEN (ap.RELATION_TYPE_CD = 'Sample'::varchar(6)) THEN 'DROP'::varchar(4) ELSE 'UNKNOWN'::varchar(7) END AS sample_type, CASE WHEN (p.DESC_TEXT ~~ 'Adipex%'::varchar(7)) THEN 'ADIPEX-P'::varchar(8) WHEN (p.DESC_TEXT ~~ 'Amrix%'::varchar(6)) THEN 'AMRIX'::varchar(5) WHEN (p.DESC_TEXT ~~ 'Azilect%'::varchar(8)) THEN 'AZILECT'::varchar(7) WHEN (p.DESC_TEXT ~~ 'Budesonide%'::varchar(11)) THEN 'BUDESONIDE'::varchar(10) WHEN (p.DESC_TEXT ~~ 'COPAXONE%'::varchar(9)) THEN 'COPAXONE'::varchar(8) WHEN (p.DESC_TEXT ~~ 'ENJUVIA%'::varchar(8)) THEN 'ENJUVIA'::varchar(7) WHEN (p.DESC_TEXT ~~ 'LoSeasonique%'::varchar(13)) THEN 'LOSEASONIQUE'::varchar(12) WHEN (p.DESC_TEXT ~~ 'NIASPAN%'::varchar(8)) THEN 'NIASPAN'::varchar(7) WHEN (p.DESC_TEXT ~~ 'Nuvigil%'::varchar(8)) THEN 'NUVIGIL'::varchar(7) WHEN (p.DESC_TEXT ~~ 'ProAir%'::varchar(7)) THEN 'PROAIR'::varchar(6) WHEN (p.DESC_TEXT ~~ 'Qnasl%'::varchar(6)) THEN 'QNASL'::varchar(5) WHEN (p.DESC_TEXT ~~ 'QVAR%'::varchar(5)) THEN 'QVAR'::varchar(4) WHEN (p.DESC_TEXT ~~ 'Seasonique%'::varchar(11)) THEN 'SEASONIQUE'::varchar(10) WHEN (p.DESC_TEXT ~~ 'Tev-Tropin%'::varchar(11)) THEN 'TEV-TROPIN'::varchar(10) ELSE 'UNKNOWN'::varchar(7) END AS product_name, p.DESC_TEXT AS sample_name, p.PART_NUM AS sample_ndc, ap.QTY AS qty, ea.NAME AS name_on_call, ea.COMMENTS AS address_line_on_call, ea.ZIPCODE AS zip_on_call, d.ims_id, eax.ATTRIB_03 AS dea_num, ea.OWNER_PER_ID AS ownerid, emp.CSN AS employeenumber, ea.CREATED_BY AS created_by, ea.CREATED AS created_date FROM (((((((WSMP_ADMIN.S_EVT_ACT ea JOIN WSMP_ADMIN.S_CONTACT c ON ((ea.TARGET_PER_ID = c.ROW_ID))) JOIN WSMP_ADMIN.S_POSTN rep_p ON ((ea.OWNER_POSTN_ID = rep_p.ROW_ID))) JOIN WSMP_ADMIN.S_ACT_PRDINT ap ON ((ea.ROW_ID = ap.ACTIVITY_ID))) JOIN WSMP_ADMIN.S_PROD_INT p ON ((ap.PRDINT_ID = p.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_EVT_ACT_X eax ON ((ea.ROW_ID = eax.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT emp ON ((emp.ROW_ID = ea.CREATED_BY))) LEFT JOIN (SELECT iq.ims_id, iq.cm_id, iq.me_num, iq.siebel_contact_row_id, iq.rnk FROM (SELECT dim_sfa_csf_demo.IMS_ID AS ims_id, dim_sfa_csf_demo.CM_ID AS cm_id, dim_sfa_csf_demo.ME_NUM AS me_num, dim_sfa_csf_demo.SIEBEL_CONTACT_ROW_ID AS siebel_contact_row_id, row_number() OVER (PARTITION BY dim_sfa_csf_demo.SIEBEL_CONTACT_ROW_ID ORDER BY dim_sfa_csf_demo.VEEVA_ACCOUNT_ID, dim_sfa_csf_demo.SALES_FORCE_ID) AS rnk FROM WSMP_ADMIN.DIM_SFA_CSF_DEMO) iq WHERE (iq.rnk = 1)) d ON ((c.ROW_ID = d.siebel_contact_row_id))) WHERE ((rep_p.POSTN_TYPE_CD = ANY (ARRAY['Sales Representative'::varchar(20), 'TSP Test Position'::varchar(17)])) AND (ap.RELATION_TYPE_CD = ANY (ARRAY['Direct Send'::varchar(11), 'Sample'::varchar(6)])) AND (ea.OWNER_POSTN_ID <> '0-5220'::varchar(6)) AND (ea.APPT_START_DT >= '2012-01-01 00:00:00'::timestamp(0)) AND (ea.APPT_START_DT < (statement_timestamp())::timestamp));

CREATE  VIEW WSMP_ADMIN_ORA.v_siebel_samples_account_calls AS
SELECT rep_p.X_SALES_FORCE AS sales_force_id, ea.PAR_EVT_ID AS par_evt_id, ea.ROW_ID AS csf_call_id, ea.TARGET_PER_ID AS csf_demo_id, 'ACCT'::varchar(4) AS call_type, ea.NAME AS name_on_call, ea.ZIPCODE AS zip_on_call, ea.SUBTYPE_CD AS subtype_cd, ea.TODO_CD AS todo_cd, ea.INTEGRATION_ID AS integration_id, ea.ROW_ID AS siebel_evt_act_row_id, ea.TARGET_PER_ID AS siebel_target_per_id, emp.CSN AS rep_id, rep_p.NAME AS territory_num, trunc(ea.APPT_START_DT, 'DD'::varchar(2)) AS call_date, details.product_name, details.lot_num, details.qty, details.relation_type_cd, o.OU_TYPE_CD AS ou_type_cd, CASE WHEN (length(emp.INTEGRATION_ID) = 18) THEN emp.INTEGRATION_ID ELSE NULL END AS veeva_account_id FROM ((((WSMP_ADMIN.S_EVT_ACT ea LEFT JOIN WSMP_ADMIN.S_POSTN rep_p ON ((rep_p.ROW_ID = ea.OWNER_POSTN_ID))) LEFT JOIN WSMP_ADMIN.S_ORG_EXT o ON ((o.ROW_ID = rep_p.BU_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT emp ON ((emp.ROW_ID = ea.TARGET_PER_ID))) JOIN (SELECT appl.ACTIVITY_ID AS activity_id, upper(spi.NAME) AS product_name, appl.LOT_NUM AS lot_num, appl.QTY AS qty, appl.RELATION_TYPE_CD AS relation_type_cd FROM (WSMP_ADMIN.S_ACT_PRDINT appl JOIN WSMP_ADMIN.S_PROD_INT spi ON ((appl.PRDINT_ID = spi.ROW_ID))) WHERE ((appl.CONFLICT_ID = '0'::varchar(1)) AND (appl.RELATION_TYPE_CD = ANY (ARRAY['DirectSend'::varchar(10), 'Sample'::varchar(6)])))) details ON ((details.activity_id = ea.ROW_ID))) WHERE ((rep_p.NAME <> ALL (ARRAY['Siebel Administrator'::varchar(20), 'TWH Siebel Administrator'::varchar(24)])) AND (o.NAME <> ALL (ARRAY['Siebel Administration'::varchar(21), 'ERM AnonUser'::varchar(12), 'Default Organization'::varchar(20)])) AND (coalesce(o.OU_TYPE_CD, 'XXX'::varchar(3)) <> 'Manufacturer'::varchar(12)));

CREATE  VIEW WSMP_ADMIN_ORA.v_siebel_account_calls AS
SELECT rep_p.X_SALES_FORCE AS sales_force_id, ea.PAR_EVT_ID AS par_evt_id, ea.ROW_ID AS csf_call_id, ea.TARGET_OU_ID AS csf_demo_id, 'ACCT'::varchar(4) AS call_type, o.OU_TYPE_CD AS ou_type_cd, ea.NAME AS name_on_call, ea.ZIPCODE AS zip_on_call, ea.SUBTYPE_CD AS subtype_cd, ea.TODO_CD AS todo_cd, ea.ROW_ID AS siebel_evt_act_row_id, ea.TARGET_OU_ID AS siebel_target_ou_id, emp.CSN AS rep_id, rep_p.NAME AS territory_num, trunc(ea.APPT_START_DT, 'DD'::varchar(2)) AS call_date, details.first_detailed_product, details.second_detailed_product, details.third_detailed_product, details.fourth_detailed_product, details.fifth_detailed_product, details.sixth_detailed_product, CASE WHEN (length(o.INTEGRATION_ID) = 18) THEN o.INTEGRATION_ID ELSE NULL END AS veeva_account_id, ea.INTEGRATION_ID AS integration_id FROM ((((WSMP_ADMIN.S_EVT_ACT ea LEFT JOIN WSMP_ADMIN.S_POSTN rep_p ON ((rep_p.ROW_ID = ea.OWNER_POSTN_ID))) LEFT JOIN WSMP_ADMIN.S_ORG_EXT o ON ((o.ROW_ID = ea.TARGET_OU_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT emp ON ((emp.ROW_ID = ea.CREATED_BY))) LEFT JOIN (SELECT iq.activity_id, max(CASE WHEN (iq.priority = 1) THEN iq.product_name ELSE NULL END) AS first_detailed_product, max(CASE WHEN (iq.priority = 2) THEN iq.product_name ELSE NULL END) AS second_detailed_product, max(CASE WHEN (iq.priority = 3) THEN iq.product_name ELSE NULL END) AS third_detailed_product, max(CASE WHEN (iq.priority = 4) THEN iq.product_name ELSE NULL END) AS fourth_detailed_product, max(CASE WHEN (iq.priority = 5) THEN iq.product_name ELSE NULL END) AS fifth_detailed_product, max(CASE WHEN (iq.priority = 6) THEN iq.product_name ELSE NULL END) AS sixth_detailed_product FROM (SELECT appl.ACTIVITY_ID AS activity_id, upper(spi.NAME) AS product_name, row_number() OVER (PARTITION BY appl.ACTIVITY_ID ORDER BY appl.PRIORITY_NUM, upper(spi.NAME)) AS priority FROM (WSMP_ADMIN.S_ACT_PROD_APPL appl LEFT JOIN WSMP_ADMIN.S_PROD_INT spi ON ((appl.PRDINT_ID = spi.ROW_ID))) WHERE (appl.CONFLICT_ID = '0'::varchar(1))) iq GROUP BY iq.activity_id) details ON ((details.activity_id = ea.PAR_EVT_ID))) WHERE ((ea.EVT_STAT_CD = 'Submitted'::varchar(9)) AND (rep_p.POSTN_TYPE_CD = ANY (ARRAY['Sales Representative'::varchar(20), 'TSP Test Position'::varchar(17)])) AND (ea.OWNER_POSTN_ID <> '0-5220'::varchar(6)) AND (ea.APPT_START_DT >= '2011-01-01 00:00:00'::timestamp(0)) AND (ea.APPT_START_DT < (statement_timestamp())::timestamp) AND (ea.SUBTYPE_CD = 'Account Call'::varchar(12)) AND (ea.TODO_CD = 'Account Call'::varchar(12)));

CREATE  VIEW WSMP_ADMIN_ORA.v_siebel_demo_accounts AS
SELECT oe.ROW_ID AS csf_demo_id, p.X_SALES_FORCE AS sales_force_id, 'ACCT'::varchar(4) AS demo_type, oe.OU_TYPE_CD AS account_type, 'N'::varchar(1) AS house_acct_flag, 'A'::varchar(1) AS src_verification_status, x.ATTRIB_07 AS hms_id, x.X_ATTRIB_109 AS bp_code, p.NAME AS territory_num, btrim(oe.NAME) AS org_name, substr(btrim(ap.ADDR), 1, 75) AS address1, substr(btrim(ap.ADDR_LINE_2), 1, 75) AS address2, substr(btrim(ap.ADDR_LINE_3), 1, 75) AS address3, ap.CITY AS city, ap.STATE AS state, ap.ZIPCODE AS zip, s_accnt_postn.LAST_CALL_DT AS last_call_date, ap.ROW_ID AS siebel_addr_per_row_id, 'Y'::varchar(1) AS ora_viewable_flag, oe.CREATED AS sfa_create_date, (statement_timestamp())::timestamp AS last_build_date, CASE WHEN (length(oe.INTEGRATION_ID) = 18) THEN oe.INTEGRATION_ID ELSE NULL END AS veeva_account_id FROM ((((WSMP_ADMIN.S_ORG_EXT oe LEFT JOIN WSMP_ADMIN.S_ORG_EXT_X x ON ((oe.ROW_ID = x.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_ADDR_PER ap ON ((oe.PR_ADDR_ID = ap.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_ACCNT_POSTN ON ((oe.ROW_ID = s_accnt_postn.OU_EXT_ID))) LEFT JOIN WSMP_ADMIN.S_POSTN p ON ((s_accnt_postn.POSITION_ID = p.ROW_ID))) WHERE ((oe.NAME <> ALL (ARRAY['Siebel Administration'::varchar(21), 'ERM AnonUser'::varchar(12), 'Default Organization'::varchar(20)])) AND (p.NAME <> ALL (ARRAY['Siebel Administrator'::varchar(20), 'TWH Siebel Administrator'::varchar(24)])) AND (oe.OU_TYPE_CD <> 'Manufacturer'::varchar(12)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_4th_sales_roster AS
SELECT fourth_sale_force_roster.EMPLOYEE_ID AS employee_id, fourth_sale_force_roster.USERNAME AS username, CASE fourth_sale_force_roster.LAST_NAME WHEN NULLSEQUAL 'Vacant'::varchar(6) THEN NULL ELSE fourth_sale_force_roster.LAST_NAME END AS last_name, CASE fourth_sale_force_roster.FIRST_NAME WHEN NULLSEQUAL 'Vacant'::varchar(6) THEN NULL ELSE fourth_sale_force_roster.FIRST_NAME END AS first_name, fourth_sale_force_roster.MIDDLE_NAME AS middle_name, fourth_sale_force_roster.SALUTATION AS salutation, fourth_sale_force_roster.SUFFIX AS suffix, fourth_sale_force_roster.TITLE AS title, fourth_sale_force_roster.TERRITORY AS territory, fourth_sale_force_roster.TERRITORY_NAME AS territory_name, CASE WHEN (substr(fourth_sale_force_roster.MANAGER_TERRITORY, 3, 4) = 'ZZZZ'::varchar(4)) THEN NULL WHEN (fourth_sale_force_roster.MANAGER_TERRITORY = 'TOFRMZ00'::varchar(8)) THEN NULL WHEN (fourth_sale_force_roster.MANAGER_TERRITORY = 'TOSCGZ00'::varchar(8)) THEN NULL ELSE fourth_sale_force_roster.MANAGER_TERRITORY END AS manager_territory, fourth_sale_force_roster.TEAM AS team, fourth_sale_force_roster.BUSINESS_LINE_1_ADDR AS business_line_1_addr, fourth_sale_force_roster.BUSINESS_LINE_2_ADDR AS business_line_2_addr, fourth_sale_force_roster.BUSINESS_LINE_3_ADDR AS business_line_3_addr, fourth_sale_force_roster.BUSINESS_CITY AS business_city, fourth_sale_force_roster.BUSINESS_STATE AS business_state, fourth_sale_force_roster.BUSINESS_POSTAL_CODE AS business_postal_code, fourth_sale_force_roster.BUSINESS_COUNTRY_CODE AS business_country_code, fourth_sale_force_roster.HOME_LINE_1_ADDR AS home_line_1_addr, fourth_sale_force_roster.HOME_LINE_2_ADDR AS home_line_2_addr, fourth_sale_force_roster.HOME_LINE_3_ADDR AS home_line_3_addr, fourth_sale_force_roster.HOME_CITY AS home_city, fourth_sale_force_roster.HOME_STATE AS home_state, fourth_sale_force_roster.HOME_POSTAL_CODE AS home_postal_code, fourth_sale_force_roster.HOME_COUNTRY_CODE AS home_country_code, fourth_sale_force_roster.CORRESPONDENCE_ADDRESS AS correspondence_address, fourth_sale_force_roster.BUSINESS_PHONE AS business_phone, fourth_sale_force_roster.BUSINESS_PHONE_EXTENSION AS business_phone_extension, fourth_sale_force_roster.BUSINESS_FAX AS business_fax, fourth_sale_force_roster.VOICE_MAIL AS voice_mail, fourth_sale_force_roster.MOBILE_PHONE AS mobile_phone, fourth_sale_force_roster.HOME_PHONE AS home_phone, fourth_sale_force_roster.HOME_FAX AS home_fax, fourth_sale_force_roster.CORRESPONDENCE_PHONE AS correspondence_phone, fourth_sale_force_roster.BUSINESS_EMAIL AS business_email, fourth_sale_force_roster.HOME_EMAIL AS home_email, fourth_sale_force_roster.CORRESPONDENCE_EMAIL AS correspondence_email, fourth_sale_force_roster.COST_CENTER AS cost_center FROM WSMP_ADMIN.FOURTH_SALE_FORCE_ROSTER WHERE ((fourth_sale_force_roster.TERRITORY !~~ '%ZZZZ%'::varchar(6)) AND ((trunc(fourth_sale_force_roster.HIRE_DT, 'DD'::varchar(2)) <= (statement_timestamp())::timestamp) OR (fourth_sale_force_roster.HIRE_DT IS NULL)) AND (fourth_sale_force_roster.TERRITORY <> '111111'::varchar(6)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_SP_Attendees AS
SELECT a.EVENT_NUMBER AS event_number, e.EVENT_NAME AS event_name, e.EVENT_START_DATE AS event_start_date, a.ME_NUMBER AS me_number, a.DEA_NUMBER AS dea_number, cm.CEPH_ID AS ceph_id, a.CUSTOMER_ID AS customer_id, (cm.CUSTOMER_MASTER_ID)::varchar AS cm_id, a.ATTENDEE_FIRST_NAME AS attendee_first_name, a.ATTENDEE_LAST_NAME AS attendee_last_name, a.ATTENDEE_ADDRESS_LINE_1 AS attendee_address_line_1, a.ATTENDEE_ADDRESS_LINE_2 AS attendee_address_line_2, a.ATTENDEE_ADDRESS_LINE_3 AS attendee_address_line_3, a.ATTENDEE_CITY AS attendee_city, a.ATTENDEE_STATE_PROVINCE AS attendee_state_province, a.ATTENDEE_POSTAL_CODE AS attendee_postal_code, a.ATTENDEE_SPECIALTY AS attendee_specialty, a.ATTENDEE_DEGREE AS attendee_degree FROM ((WSMP_ADMIN.STG_AHM_EVENT_ATTENDEE a JOIN WSMP_ADMIN.STG_AHM_EVENT e ON ((e.EVENT_NUMBER = a.EVENT_NUMBER))) LEFT JOIN WSMP_ADMIN.STG_CUSTOMER_MASTER cm ON ((cm.SOURCE_ID = a.IMS_NUMBER))) WHERE ((e.EVENT_START_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (e.EVENT_START_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1))))) GROUP BY a.EVENT_NUMBER, e.EVENT_NAME, e.EVENT_START_DATE, a.ME_NUMBER, a.DEA_NUMBER, cm.CEPH_ID, a.CUSTOMER_ID, (cm.CUSTOMER_MASTER_ID)::varchar, a.ATTENDEE_FIRST_NAME, a.ATTENDEE_LAST_NAME, a.ATTENDEE_ADDRESS_LINE_1, a.ATTENDEE_ADDRESS_LINE_2, a.ATTENDEE_ADDRESS_LINE_3, a.ATTENDEE_CITY, a.ATTENDEE_STATE_PROVINCE, a.ATTENDEE_POSTAL_CODE, a.ATTENDEE_SPECIALTY, a.ATTENDEE_DEGREE;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_AHM_PostalCodeTerritory AS
SELECT ahm_postal_code_territory_xref.COUNTRY_CODE, ahm_postal_code_territory_xref.POSTAL_CODE, ahm_postal_code_territory_xref.TERRITORY FROM WSMP_ADMIN.AHM_POSTAL_CODE_TERRITORY_XREF WHERE (ahm_postal_code_territory_xref.TERRITORY !~~ '%ZZZZ%'::varchar(6));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Amrix_Product_Totals AS
SELECT rx.PRODUCT_CODE AS product_code, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.DW_PRESC_PLAN_RX_M rx WHERE ((rx.PRODUCT_CODE = ANY (ARRAY['A00380'::varchar(6), 'A00100'::varchar(6), 'A00330'::varchar(6), 'A00210'::varchar(6), 'A00370'::varchar(6), 'A00220'::varchar(6), 'A00230'::varchar(6), 'A00350'::varchar(6), 'A00360'::varchar(6), 'A00240'::varchar(6), 'A00320'::varchar(6), 'A00250'::varchar(6), 'A00340'::varchar(6), 'A00260'::varchar(6), 'A00270'::varchar(6), 'A00280'::varchar(6), 'A00290'::varchar(6)])) AND (rx.MONTH_BUCKET >= 1::numeric(18,0)) AND (rx.MONTH_BUCKET <= 24::numeric(18,0))) GROUP BY rx.PRODUCT_CODE;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Azilect_Product_Totals AS
SELECT rx.PRODUCT_CODE AS product_code, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.DW_PRESC_PLAN_RX_M rx WHERE ((rx.PRODUCT_CODE = ANY (ARRAY['700105'::varchar(6), '700110'::varchar(6), '700210'::varchar(6), '700220'::varchar(6), '700310'::varchar(6), '700320'::varchar(6), '700410'::varchar(6), '700420'::varchar(6), '700510'::varchar(6), '700520'::varchar(6), '700530'::varchar(6), '700540'::varchar(6), '700550'::varchar(6), '700582'::varchar(6), '700584'::varchar(6), '700586'::varchar(6), '700588'::varchar(6), '700570'::varchar(6)])) AND (rx.MONTH_BUCKET >= 1::numeric(18,0)) AND (rx.MONTH_BUCKET <= 24::numeric(18,0))) GROUP BY rx.PRODUCT_CODE;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_cmop_rx_backup AS
SELECT rx.STATION_NUMBER, rx.VA_PRODUCT, 0 AS PRODUCT_ID, rx.PRODUCT_CODE, to_char(rx.MONTH, 'YYYY-MM-DD'::varchar(10)) AS MONTH, rx.TRX_CNT, rx.CMOP_CNT, rx.TRX_QTY, rx.CMOP_QTY, rx.CNT_30_DAY_RX, rx.ID FROM (WSMP_ADMIN.DW_CMOP_RX_TEVA rx JOIN CUSTOMER.DIM_VA_PRODUCT_XREF p ON ((rx.PRODUCT_CODE = p.WK_PROD_CODE)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_cmop_station AS
SELECT dim_va_station.VISN, dim_va_station.STATION_NUMBER, dim_va_station.STATION, dim_va_station.STATION_TYPE, dim_va_station.ADDRESS, dim_va_station.CITY, dim_va_station.STATE, dim_va_station.ZIP, dim_va_station.CMOP, dim_va_station.CMOP_DATE, to_char(dim_va_station.CREATE_DATE, 'YYYY-MM-DD'::varchar(10)) AS CREATE_DATE, to_char(dim_va_station.LAST_UPD_DATE, 'YYYY-MM-DD'::varchar(10)) AS LAST_UPD_DATE, dim_va_station.STANDARD_ZIP FROM WSMP_ADMIN.DIM_VA_STATION;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_anda_sales_backup AS
SELECT STG_ANDA_SALES.TRANSACTION_ID, to_char(STG_ANDA_SALES.INVOICE_DATE, 'YYYY-MM-DD'::varchar(10)) AS INVOICE_DATE, STG_ANDA_SALES.PRODUCT_BRAND, STG_ANDA_SALES.PRODUCT_NDC, STG_ANDA_SALES.PRODUCT_DESC, STG_ANDA_SALES.INVOICE_QTY, STG_ANDA_SALES.INVOICE_UNITS, STG_ANDA_SALES.INVOICE_COST, STG_ANDA_SALES.INVOICE_PACK_COST, STG_ANDA_SALES.INVOICE_UNIT_COST, STG_ANDA_SALES.CONTRACT_PACK_COST, STG_ANDA_SALES.CONTRACT_PURCHASES, STG_ANDA_SALES.CONTRACT_NUMBER, STG_ANDA_SALES.DISPENSING_LOCATION, STG_ANDA_SALES.DL_ADDRESS_1, STG_ANDA_SALES.DL_ADDRESS_2, STG_ANDA_SALES.DL_CITY, STG_ANDA_SALES.DL_STATE, STG_ANDA_SALES.DL_ZIP, STG_ANDA_SALES.DL_DEA_NUM, STG_ANDA_SALES.DEPOT_LOCATION, STG_ANDA_SALES.DEP_ADDRESS_1, STG_ANDA_SALES.DEP_ADDRESS_2, STG_ANDA_SALES.DEP_CITY, STG_ANDA_SALES.DEP_STATE, STG_ANDA_SALES.DEP_ZIP, STG_ANDA_SALES.DEP_DEA_NUM, STG_ANDA_SALES.UNIT_AP, STG_ANDA_SALES.AP FROM WSMP_ADMIN.STG_ANDA_SALES;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_cns_deciles AS
SELECT d.ims_id AS hcp_id, CASE d.decile_name WHEN NULLSEQUAL 'Modafinil'::varchar(9) THEN 'Wake'::varchar(4) ELSE d.decile_name END AS decile_name, d.trx_cnt_01_06 AS decile_value FROM WSMP_ADMIN.tfc_ims_decile d WHERE ((d.decile_name = ANY (ARRAY['Fentora'::varchar(7), 'Actiq'::varchar(5), 'Nuvigil'::varchar(7), 'Amrix'::varchar(5), 'Azilect'::varchar(7), 'Copaxone'::varchar(8)])) AND (NOT EXISTS (SELECT NULL FROM WSMP_ADMIN.tfc_ims_presc_demo_w pd WHERE ((pd.ims_id = d.ims_id) AND (pd.pdrp_flag = 'Y'::char(1)))))) UNION ALL SELECT d.ims_id AS hcp_id, CASE d.decile_name WHEN NULLSEQUAL 'Modafinil'::varchar(9) THEN 'Wake'::varchar(4) ELSE d.decile_name END AS decile_name, d.trx_cnt_01_06 AS decile_value FROM WSMP_ADMIN.tfc_ims_decile d WHERE (d.decile_name = ANY (ARRAY['TIRF Total'::varchar(10), 'Total Combo SAO'::varchar(15), 'Total Opioid Market'::varchar(19), 'Total LAO'::varchar(9), 'Total Pure SAO'::varchar(14), 'Branded Sleep / Sedative'::varchar(24), 'Modafinil'::varchar(9), 'Muscle Relaxant Market'::varchar(22)]));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_copay_voucher_program_backup AS
SELECT DIM_ASI_PROGRAM.REDEMPTION_TYPE, DIM_ASI_PROGRAM.ASI_PROGRAM_NUM, DIM_ASI_PROGRAM.PROGRAM_DESC, DIM_ASI_PROGRAM.SALES_FORCE_ID, DIM_ASI_PROGRAM.PROGRAM_TYPE, DIM_ASI_PROGRAM.PRODUCT_NAME, to_char(DIM_ASI_PROGRAM.PROGRAM_START_DATE, 'YYYY-MM-DD'::varchar(10)) AS PROGRAM_START_DATE, to_char(DIM_ASI_PROGRAM.PROGRAM_END_DATE, 'YYYY-MM-DD'::varchar(10)) AS PROGRAM_END_DATE, DIM_ASI_PROGRAM.NUMBER_OF_TABLETS FROM WSMP_ADMIN.DIM_ASI_PROGRAM;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_copay_voucher_redemption_backup AS
SELECT coalesce(tfc_asi_copay_detail_wkly.VEEVA_ACCOUNT_ID, tfc_asi_copay_detail_wkly.IMS_ID) AS veeva_account_id, tfc_asi_copay_detail_wkly.IMS_ID AS ims_id, tfc_asi_copay_detail_wkly.REDEMPTION_TYPE AS redemption_type, to_char(tfc_asi_copay_detail_wkly.FILL_DATE, 'YYYY-MM-DD'::varchar(10)) AS fill_date, to_char(tfc_asi_copay_detail_wkly.HCP_DATE_WRITTEN, 'YYYY-MM-DD'::varchar(10)) AS hcp_date_written, tfc_asi_copay_detail_wkly.DAYS_SUPPLY AS days_supply, tfc_asi_copay_detail_wkly.NDC_CODE AS ndc_code, tfc_asi_copay_detail_wkly.BRAND_NAME AS brand_name, tfc_asi_copay_detail_wkly.QTY AS qty, tfc_asi_copay_detail_wkly.REFILLS AS refills, tfc_asi_copay_detail_wkly.PROGRAM_NUM AS program_num, tfc_asi_copay_detail_wkly.COPAY_CARD_NUM AS copay_voucher_num, tfc_asi_copay_detail_wkly.PHARMACY_CHAIN_NUM AS pharmacy_chain_num, tfc_asi_copay_detail_wkly.PHARMACY_CHAIN AS pharmacy_chain, tfc_asi_copay_detail_wkly.PHARMACY_NAME AS pharmacy_name, tfc_asi_copay_detail_wkly.PHARMACY_ADDRESS AS pharmacy_address, tfc_asi_copay_detail_wkly.PHARMACY_ADDRESS2 AS pharmacy_address2, tfc_asi_copay_detail_wkly.PHARMACY_CITY AS pharmacy_city, tfc_asi_copay_detail_wkly.PHARMACY_STATE AS pharmacy_state, tfc_asi_copay_detail_wkly.PHARMACY_ZIP AS pharmacy_zip, tfc_asi_copay_detail_wkly.PHARMACY_NPI_NUM AS pharmacy_npi_num, NULL AS ceph_id, tfc_asi_copay_detail_wkly.ME_NUM AS me_num, tfc_asi_copay_detail_wkly.PRINCIPLE_PHYS_DEA_NUM AS principle_phys_dea_num, tfc_asi_copay_detail_wkly.PRINCIPLE_PHYS_NPI_NUM AS principle_phys_npi_num, tfc_asi_copay_detail_wkly.PHYSICIAN_NAME AS physician_name, tfc_asi_copay_detail_wkly.ASI_PHYS_ADDRESS1 AS physician_address1, tfc_asi_copay_detail_wkly.ASI_PHYS_ADDRESS2 AS physician_address2, tfc_asi_copay_detail_wkly.ASI_PHYS_CITY AS physician_city, tfc_asi_copay_detail_wkly.ASI_PHYS_STATE AS physician_state, tfc_asi_copay_detail_wkly.ASI_PHYS_ZIP AS physician_zip, tfc_asi_copay_detail_wkly.REBATE_AMOUNT AS rebate_amount, tfc_asi_copay_detail_wkly.MEMBER_CASH_EXPENSE AS member_cash_expense, tfc_asi_copay_detail_wkly.SUBMITTED_COST AS submitted_cost, tfc_asi_copay_detail_wkly.PHARMACY_FEE AS pharmacy_fee, tfc_asi_copay_detail_wkly.TOTAL_AMOUNT_DUE AS total_amount_due, tfc_asi_copay_detail_wkly.CALC_AWP AS calc_awp, tfc_asi_copay_detail_wkly.OCC_PAYMENT_TYPE AS occ_payment_type, tfc_asi_copay_detail_wkly.NEW_REFILL AS new_refill FROM WSMP_ADMIN.TFC_ASI_COPAY_DETAIL_WKLY WHERE ((tfc_asi_copay_detail_wkly.BRAND_NAME = ANY (ARRAY['NUVIGIL'::varchar(7), 'FENTORA'::varchar(7), 'AMRIX'::varchar(5), 'ADIPEX-P'::varchar(8), 'TEV-TROPIN'::varchar(10), 'AZILECT'::varchar(7), 'QUARTETTE'::varchar(9)])) AND (tfc_asi_copay_detail_wkly.FILL_DATE < (statement_timestamp())::timestamp) AND (tfc_asi_copay_detail_wkly.HCP_DATE_WRITTEN < (statement_timestamp())::timestamp) AND (months_between((statement_timestamp())::timestamp, tfc_asi_copay_detail_wkly.FILL_DATE) <= 25::float)) UNION ALL SELECT coalesce(tfc_asi_redemption_detail_wkly.VEEVA_ACCOUNT_ID, tfc_asi_redemption_detail_wkly.IMS_ID) AS veeva_account_id, tfc_asi_redemption_detail_wkly.IMS_ID AS ims_id, tfc_asi_redemption_detail_wkly.REDEMPTION_TYPE AS redemption_type, to_char(tfc_asi_redemption_detail_wkly.FILL_DATE, 'YYYY-MM-DD'::varchar(10)) AS fill_date, to_char(tfc_asi_redemption_detail_wkly.HCP_DATE_WRITTEN, 'YYYY-MM-DD'::varchar(10)) AS hcp_date_written, tfc_asi_redemption_detail_wkly.DAYS_SUPPLY AS days_supply, tfc_asi_redemption_detail_wkly.NDC_CODE AS ndc_code, tfc_asi_redemption_detail_wkly.PRODUCT_NAME AS brand_name, tfc_asi_redemption_detail_wkly.QTY AS qty, tfc_asi_redemption_detail_wkly.REFILLS AS refills, tfc_asi_redemption_detail_wkly.PROGRAM_NUM AS program_num, tfc_asi_redemption_detail_wkly.VOUCHER_NUM AS copay_voucher_num, tfc_asi_redemption_detail_wkly.PHARMACY_CHAIN_NUM AS pharmacy_chain_num, tfc_asi_redemption_detail_wkly.PHARMACY_CHAIN AS pharmacy_chain, tfc_asi_redemption_detail_wkly.PHARMACY_NAME AS pharmacy_name, tfc_asi_redemption_detail_wkly.PHARMACY_ADDRESS AS pharmacy_address, NULL AS pharmacy_address2, tfc_asi_redemption_detail_wkly.PHARMACY_CITY AS pharmacy_city, tfc_asi_redemption_detail_wkly.PHARMACY_STATE AS pharmacy_state, tfc_asi_redemption_detail_wkly.PHARMACY_ZIP AS pharmacy_zip, tfc_asi_redemption_detail_wkly.PHARMACY_NPI_NUM AS pharmacy_npi_num, NULL AS ceph_id, tfc_asi_redemption_detail_wkly.ME_NUM AS me_num, tfc_asi_redemption_detail_wkly.DEA_NUM AS dea_num, tfc_asi_redemption_detail_wkly.NPI AS npi, tfc_asi_redemption_detail_wkly.PROVIDER_NAME AS provider_name, tfc_asi_redemption_detail_wkly.PROVIDER_ADDRESS AS provider_address, NULL AS physician_address2, tfc_asi_redemption_detail_wkly.PROVIDER_CITY AS provider_city, tfc_asi_redemption_detail_wkly.PROVIDER_STATE AS provider_state, tfc_asi_redemption_detail_wkly.PROVIDER_ZIP AS provider_zip, tfc_asi_redemption_detail_wkly.REBATE_AMOUNT AS rebate_amount, tfc_asi_redemption_detail_wkly.MEMBER_CASH_EXPENSE AS member_cash_expense, tfc_asi_redemption_detail_wkly.SUBMITTED_COST AS submitted_cost, tfc_asi_redemption_detail_wkly.PHARMACY_FEE AS pharmacy_fee, tfc_asi_redemption_detail_wkly.TOTAL_AMOUNT_DUE AS total_amount_due, tfc_asi_redemption_detail_wkly.CALC_AWP AS calc_awp, NULL AS occ_payment_type, tfc_asi_redemption_detail_wkly.NEW_REFILL AS new_refill FROM WSMP_ADMIN.TFC_ASI_REDEMPTION_DETAIL_WKLY WHERE ((tfc_asi_redemption_detail_wkly.PRODUCT_NAME = ANY (ARRAY['NUVIGIL'::varchar(7), 'FENTORA'::varchar(7), 'AMRIX'::varchar(5), 'ADIPEX-P'::varchar(8), 'TEV-TROPIN'::varchar(10), 'AZILECT'::varchar(7), 'QUARTETTE'::varchar(9)])) AND (tfc_asi_redemption_detail_wkly.FILL_DATE < (statement_timestamp())::timestamp) AND (tfc_asi_redemption_detail_wkly.HCP_DATE_WRITTEN < (statement_timestamp())::timestamp) AND (months_between((statement_timestamp())::timestamp, tfc_asi_redemption_detail_wkly.FILL_DATE) <= 25::float));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_omnicare_sale_backup AS
SELECT STG_OMNICARE_SALES.TRANSACTION_ID, to_char(STG_OMNICARE_SALES.INVOICE_DATE, 'YYYY-MM-DD'::varchar(10)) AS INVOICE_DATE, STG_OMNICARE_SALES.PRODUCT_BRAND, STG_OMNICARE_SALES.PRODUCT_NDC, STG_OMNICARE_SALES.PRODUCT_DESC, STG_OMNICARE_SALES.INVOICE_QTY, STG_OMNICARE_SALES.INVOICE_UNITS, STG_OMNICARE_SALES.INVOICE_COST, STG_OMNICARE_SALES.INVOICE_PACK_COST, STG_OMNICARE_SALES.INVOICE_UNIT_COST, STG_OMNICARE_SALES.CONTRACT_PACK_COST, STG_OMNICARE_SALES.CONTRACT_PURCHASES, STG_OMNICARE_SALES.CONTRACT_NUMBER, STG_OMNICARE_SALES.DISPENSING_LOCATION, STG_OMNICARE_SALES.DL_ADDRESS_1, STG_OMNICARE_SALES.DL_ADDRESS_2, STG_OMNICARE_SALES.DL_CITY, STG_OMNICARE_SALES.DL_STATE, STG_OMNICARE_SALES.DL_ZIP, STG_OMNICARE_SALES.DL_DEA_NUM, STG_OMNICARE_SALES.DEPOT_LOCATION, STG_OMNICARE_SALES.DEP_ADDRESS_1, STG_OMNICARE_SALES.DEP_ADDRESS_2, STG_OMNICARE_SALES.DEP_CITY, STG_OMNICARE_SALES.DEP_STATE, STG_OMNICARE_SALES.DEP_ZIP, STG_OMNICARE_SALES.DEP_DEA_NUM, STG_OMNICARE_SALES.UNIT_AP, STG_OMNICARE_SALES.AP FROM WSMP_ADMIN.STG_OMNICARE_SALES;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_paragard_anda_sales_backup AS
SELECT ('A'::varchar(1) || lpad((STG_TW_ANDA_SALES.CUSTOMER_NO)::varchar, 9, '0'::varchar(1))) AS BP_CODE, NULL AS ORTHO_E, STG_TW_ANDA_SALES.CUSTOMER AS BP_NAME, coalesce(STG_TW_ANDA_SALES.CUSTOMER_ADDRESS_LINE2, STG_TW_ANDA_SALES.CUSTOMER_ADDRESS_LINE1) AS SHIP_TO_ADDRESS, STG_TW_ANDA_SALES.CITY AS SHIP_TO_CITY, STG_TW_ANDA_SALES.STATE AS SHIP_TO_STATE, STG_TW_ANDA_SALES.ZIP AS SHIP_TO_ZIP_CODE, NULL AS SHIP_TO_COUNTRY, NULL AS SHIP_TO_PHONE, NULL AS SHIP_TO_FAX, NULL AS SHIP_TO_EMAIL, coalesce(STG_TW_ANDA_SALES.BILL_ADDRESS_LINE2, STG_TW_ANDA_SALES.BILL_ADDRESS_LINE1) AS BILL_TO_ADDRESS, STG_TW_ANDA_SALES.BILL_CITY AS BILL_TO_CITY, STG_TW_ANDA_SALES.BILL_STATE AS BILL_TO_STATE, STG_TW_ANDA_SALES.BILL_ZIP AS BILL_TO_ZIP_CODE, NULL AS BILL_TO_COUNTRY, NULL AS BILL_TO_PHONE, NULL AS BILL_TO_FAX, NULL AS BILL_TO_EMAIL, STG_TW_ANDA_SALES.CUSTOMER_TYPE_CD AS CLASS_OF_TRADE, STG_TW_ANDA_SALES.ORDER_NO AS INVOICE_NUM, STG_TW_ANDA_SALES.NET_COST AS DEL_AMT, to_char(to_date(STG_TW_ANDA_SALES.SALES_DATE, 'MM/DD/YY'::varchar(8)), 'YYYY-MM-DD'::varchar(10)) AS INVOICE_DATE, STG_TW_ANDA_SALES.UNITS_NET AS "24237", NULL AS "24238", NULL AS "24800", NULL AS "33223", STG_TW_ANDA_SALES.PACKAGE_SIZE AS PACKS, NULL AS UNIT_PRICE, NULL AS TERRITORY, NULL AS ORDER_TYPE_CODE, NULL AS ORDER_TYPE_DESC, NULL AS LOB_CODE_DESC, NULL AS PRICE_MATRIX_DEF, ('A'::varchar(1) || lpad((STG_TW_ANDA_SALES.BILL_CUSTOMER_NO)::varchar, 9, '0'::varchar(1))) AS PARENT_BP_CODE, NULL AS PARENT_BP_DESC, NULL AS GRAND_PARENT_BP_DESC, NULL AS PO_NUMBER, NULL AS UPS_NUMBER, STG_TW_ANDA_SALES.ORDER_NO AS ORDER_NUMBER, NULL AS ORDER_LINE_NUMBER, NULL AS DISC_AMT, NULL AS WHSE_CD FROM WSMP_ADMIN.STG_TW_ANDA_SALES WHERE (STG_TW_ANDA_SALES.BRAND ~~ '%PARAGARD%'::varchar(10));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_tb_cb_accountsummary AS
SELECT STG_TB_CB_ACCOUNTS.ACCOUNT_ID, STG_TB_CB_ACCOUNTS.LOCATION_ID, STG_TB_CB_ACCOUNTS.DEA_NUMBER, STG_TB_CB_ACCOUNTS.END_CUSTOMER, STG_TB_CB_ACCOUNTS.ADDRESS_1, STG_TB_CB_ACCOUNTS.ADDRESS_2, STG_TB_CB_ACCOUNTS.CITY, STG_TB_CB_ACCOUNTS.STATE, STG_TB_CB_ACCOUNTS.ZIP, STG_TB_CB_ACCOUNTS.CONTRACT_TITLE, STG_TB_CB_ACCOUNTS.CONTRACT_ID, STG_TB_CB_ACCOUNTS.WHOLESALER_NAME, STG_TB_CB_ACCOUNTS.HIN, STG_TB_CB_ACCOUNTS.CONTRACT_ALIAS, STG_TB_CB_ACCOUNTS.WHOLESALER_DEA, STG_TB_CB_ACCOUNTS.COT_SOURCE, STG_TB_CB_ACCOUNTS.CLASS_OF_TRADE FROM WSMP_ADMIN.STG_TB_CB_ACCOUNTS;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_tb_cb_transactions_backup AS
SELECT STG_TB_CB_TRANSACTIONS.ACCOUNT_ID, STG_TB_CB_TRANSACTIONS.LOCATION_ID, to_char(STG_TB_CB_TRANSACTIONS.SHIPMENT_DATE, 'YYYY-MM-DD'::varchar(10)) AS SHIPMENT_DATE, STG_TB_CB_TRANSACTIONS.NDC_CODE, STG_TB_CB_TRANSACTIONS.PRODUCT_NAME, STG_TB_CB_TRANSACTIONS.CONTRACT_ID, STG_TB_CB_TRANSACTIONS.CHARGEBACK_UNITS, STG_TB_CB_TRANSACTIONS.CHARGEBACK_DOLLARS, to_char(STG_TB_CB_TRANSACTIONS.RECEIPT_DATE, 'YYYY-MM-DD'::varchar(10)) AS RECEIPT_DATE, STG_TB_CB_TRANSACTIONS.UNIT_AP, STG_TB_CB_TRANSACTIONS.AP, STG_TB_CB_TRANSACTIONS.DEBIT_MEMO_NUM, to_char(STG_TB_CB_TRANSACTIONS.CREDIT_MEMO_DATE, 'YYYY-MM-DD HH24:MI:SS'::varchar(21)) AS CREDIT_MEMO_DATE, STG_TB_CB_TRANSACTIONS.CREDIT_MEMO_NUM, to_char(STG_TB_CB_TRANSACTIONS.SETTLEMENT_DATE, 'YYYY-MM-DD HH24:MI:SS'::varchar(21)) AS SETTLEMENT_DATE, STG_TB_CB_TRANSACTIONS.CONTRACT_PRICE, STG_TB_CB_TRANSACTIONS.CONTRACT_ALIAS FROM WSMP_ADMIN.STG_TB_CB_TRANSACTIONS;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_tb_ds_transactions_backup AS
SELECT STG_TB_DS_TRANSACTIONS.ACCOUNT_ID, STG_TB_DS_TRANSACTIONS.LOCATION_ID, to_char(STG_TB_DS_TRANSACTIONS.SHIPMENT_DATE, 'YYYY-MM-DD'::varchar(10)) AS SHIPMENT_DATE, STG_TB_DS_TRANSACTIONS.NDC_CODE, STG_TB_DS_TRANSACTIONS.PRODUCT_NAME, STG_TB_DS_TRANSACTIONS.TRANSACTION_TYPE, STG_TB_DS_TRANSACTIONS.DIRECT_SALES_UNITS, STG_TB_DS_TRANSACTIONS.DIRECT_SALES_DOLLARS, STG_TB_DS_TRANSACTIONS.UNIT_AP, STG_TB_DS_TRANSACTIONS.AP FROM WSMP_ADMIN.STG_TB_DS_TRANSACTIONS;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_ddd_subcategory AS
SELECT DIM_DDD_SUBCATEGORY.SUBCATEGORY_CODE, DIM_DDD_SUBCATEGORY.CATEGORY_CODE, DIM_DDD_SUBCATEGORY.COT_CODE, DIM_DDD_SUBCATEGORY.MAILORDER_FLAG, DIM_DDD_SUBCATEGORY.NONRETAIL_FLAG, DIM_DDD_SUBCATEGORY.OUTLET_EXAMPLE, DIM_DDD_SUBCATEGORY.OUTLET_DESC, DIM_DDD_SUBCATEGORY.OUTLET_DEFN, DIM_DDD_SUBCATEGORY.MDM_FLAG, DIM_DDD_SUBCATEGORY.ADM_FLAG, DIM_DDD_SUBCATEGORY.ONC_SUBCAT_GROUP FROM WSMP_ADMIN.DIM_DDD_SUBCATEGORY;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_dnc AS
SELECT dnc.IMS_ID AS ims_id, dea.DEA_NUM AS dea_num, dnc.LAST_NAME AS last_name, dnc.FIRST_NAME AS first_name, dnc.MIDDLE_NAME AS mid_name, dnc.ADDRESS AS address, dnc.CITY AS city, dnc.STATE AS state, dnc.ZIP AS zip, npi.NPI AS npi FROM ((WSMP_ADMIN.DIM_DNC dnc LEFT JOIN WSMP_ADMIN.STG_IMS_DEA dea ON ((dnc.IMS_ID = dea.IMS_ID))) LEFT JOIN WSMP_ADMIN.STG_IMS_NPI npi ON ((dnc.IMS_ID = npi.IMS_ID))) WHERE ((dnc.PRODUCT_NAME = 'NUVIGIL'::varchar(7)) AND (dnc.SALES_FORCE_ID = 'TC'::varchar(2)) AND ((dea.DEA_NUM IS NULL) OR (regexp_replace(dea.DEA_NUM, '[0-9]'::varchar(5), ''::varchar, 1, 0, ''::varchar) IS NOT NULL)) AND ((dea.DEA_NUM IS NOT NULL) OR (npi.NPI IS NOT NULL)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_IMSZip_List AS
SELECT CASE WHEN (length(stg_ims_presc_demo_w.ims_id) = 8) THEN ('XX'::varchar(2) || substr(stg_ims_presc_demo_w.ims_id, 4)) ELSE stg_ims_presc_demo_w.ims_id END AS ims_id, stg_ims_presc_demo_w.ims_zip AS zip FROM WSMP_ADMIN.STG_IMS_PRESC_DEMO_W WHERE ((stg_ims_presc_demo_w.sales_force_id = 'TR'::varchar(2)) AND ((stg_ims_presc_demo_w.last_name <> 'l32123'::varchar(6)) OR (stg_ims_presc_demo_w.last_name IS NULL) OR (length(stg_ims_presc_demo_w.ims_id) = 8))) GROUP BY CASE WHEN (length(stg_ims_presc_demo_w.ims_id) = 8) THEN ('XX'::varchar(2) || substr(stg_ims_presc_demo_w.ims_id, 4)) ELSE stg_ims_presc_demo_w.ims_id END, stg_ims_presc_demo_w.ims_zip ORDER BY CASE WHEN (length(stg_ims_presc_demo_w.ims_id) = 8) THEN ('XX'::varchar(2) || substr(stg_ims_presc_demo_w.ims_id, 4)) ELSE stg_ims_presc_demo_w.ims_id END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Nuvigil_Product_Totals AS
SELECT rx.PRODUCT_CODE AS product_code, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.DW_PRESC_PLAN_RX_M rx WHERE ((rx.PRODUCT_CODE = ANY (ARRAY['100N00'::varchar(6), '100100'::varchar(6), '100120'::varchar(6)])) AND (rx.MONTH_BUCKET >= 1::numeric(18,0)) AND (rx.MONTH_BUCKET <= 24::numeric(18,0))) GROUP BY rx.PRODUCT_CODE;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_pcs_ddd_nonretail AS
SELECT TFC_PCS_DDD_NONRETAIL.TERRITORY_NUM, TFC_PCS_DDD_NONRETAIL.OUTLET_CODE, TFC_PCS_DDD_NONRETAIL.SUBCATEGORY_CODE, TFC_PCS_DDD_NONRETAIL.CATEGORY_CODE, TFC_PCS_DDD_NONRETAIL.IMS_PRODUCT_CODE, TFC_PCS_DDD_NONRETAIL.PRODUCT_CODE, TFC_PCS_DDD_NONRETAIL.MTH_YYYYMM, TFC_PCS_DDD_NONRETAIL.QTY_MTH01, TFC_PCS_DDD_NONRETAIL.QTY_MTH02, TFC_PCS_DDD_NONRETAIL.QTY_MTH03, TFC_PCS_DDD_NONRETAIL.QTY_MTH04, TFC_PCS_DDD_NONRETAIL.QTY_MTH05, TFC_PCS_DDD_NONRETAIL.QTY_MTH06, TFC_PCS_DDD_NONRETAIL.QTY_MTH07, TFC_PCS_DDD_NONRETAIL.QTY_MTH08, TFC_PCS_DDD_NONRETAIL.QTY_MTH09, TFC_PCS_DDD_NONRETAIL.QTY_MTH10, TFC_PCS_DDD_NONRETAIL.QTY_MTH11, TFC_PCS_DDD_NONRETAIL.QTY_MTH12, TFC_PCS_DDD_NONRETAIL.QTY_MTH13, TFC_PCS_DDD_NONRETAIL.QTY_MTH14, TFC_PCS_DDD_NONRETAIL.QTY_MTH15, TFC_PCS_DDD_NONRETAIL.QTY_MTH16, TFC_PCS_DDD_NONRETAIL.QTY_MTH17, TFC_PCS_DDD_NONRETAIL.QTY_MTH18, TFC_PCS_DDD_NONRETAIL.QTY_MTH19, TFC_PCS_DDD_NONRETAIL.QTY_MTH20, TFC_PCS_DDD_NONRETAIL.QTY_MTH21, TFC_PCS_DDD_NONRETAIL.QTY_MTH22, TFC_PCS_DDD_NONRETAIL.QTY_MTH23, TFC_PCS_DDD_NONRETAIL.QTY_MTH24, TFC_PCS_DDD_NONRETAIL.OUTLET_NAME, TFC_PCS_DDD_NONRETAIL.OUTLET_ADDRESS, TFC_PCS_DDD_NONRETAIL.OUTLET_CITY, TFC_PCS_DDD_NONRETAIL.OUTLET_STATE, TFC_PCS_DDD_NONRETAIL.OUTLET_ZIP FROM WSMP_ADMIN.TFC_PCS_DDD_NONRETAIL;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_pdrp AS
SELECT d.IMS_ID AS ims_id, d.DEA_NUM AS dea_num, d.LAST_NAME AS last_name, d.FIRST_NAME AS first_name, d.MID_NAME AS mid_name, upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_ADDRESS ELSE d.PTR_ADDRESS END) AS address, upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_CITY ELSE d.PTR_CITY END) AS city, upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_STATE ELSE d.PTR_STATE END) AS state, upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_ZIP ELSE d.PTR_ZIP END) AS zip, npi.NPI AS npi FROM (WSMP_ADMIN.TFC_IMS_PRESC_DEMO_M d LEFT JOIN WSMP_ADMIN.STG_IMS_NPI npi ON ((d.IMS_ID = npi.IMS_ID))) WHERE ((d.PDRP_FLAG = 'Y'::char(1)) AND ((d.DEA_NUM IS NULL) OR (regexp_replace(d.DEA_NUM, '[0-9]'::varchar(5), ''::varchar, 1, 0, ''::varchar) IS NOT NULL)) AND ((d.DEA_NUM IS NOT NULL) OR (npi.NPI IS NOT NULL))) GROUP BY d.IMS_ID, d.DEA_NUM, d.LAST_NAME, d.FIRST_NAME, d.MID_NAME, upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_ADDRESS ELSE d.PTR_ADDRESS END), upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_CITY ELSE d.PTR_CITY END), upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_STATE ELSE d.PTR_STATE END), upper(CASE WHEN (d.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)])) THEN d.COMP_ZIP ELSE d.PTR_ZIP END), npi.NPI;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_rems_extract_backup AS
SELECT coalesce(r.VEEVA_ACCOUNT_ID, r.IMS_ID) AS account_id, r.ENROLLMENT_ID AS enrollment_id, r.NPI AS npi, r.DEA_NUM AS dea_num, r.PROGRAM_ID AS program_id, substr(r.PROGRAM_NAME, 1, 4) AS REMS_PROGRAM, r.STATUS AS enrollment_status, r.IN_PROGRESS_STEP AS current_enrollment_step, to_char(r.EFFECTIVE_DATE, 'YYYY-MM-DD'::varchar(10)) AS effective_date, to_char(r.EXPIRATION_DATE, 'YYYY-MM-DD'::varchar(10)) AS expiration_date FROM WSMP_ADMIN.STG_REMS_PRESCRIBER r UNION SELECT coalesce(STG_REMS_FACILITY.VEEVA_ACCOUNT_ID, STG_REMS_FACILITY.ASI_ACCOUNT_ID) AS account_id, STG_REMS_FACILITY.ENROLLMENT_ID AS enrollment_id, STG_REMS_FACILITY.NPI AS npi, STG_REMS_FACILITY.DEA AS dea, STG_REMS_FACILITY.PROGRAM_ID AS program_id, STG_REMS_FACILITY.PROGRAM_NAME AS REMS_program, STG_REMS_FACILITY.STATUS_DESCRIPTION AS enrollment_status, STG_REMS_FACILITY.IN_PROGRESS_STEP AS current_enrollment_step, to_char(STG_REMS_FACILITY.EFFECTIVE_DATE, 'YYYY-MM-DD'::varchar(10)) AS effective_date, to_char(STG_REMS_FACILITY.EXPIRATION_DATE, 'YYYY-MM-DD'::varchar(10)) AS expiration_date FROM WSMP_ADMIN.STG_REMS_FACILITY;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_rems_program_lookup_backup AS
SELECT r.PROGRAM_ID AS program_id, r.PROGRAM_NAME AS program_name FROM WSMP_ADMIN.STG_REMS_PRESCRIBER r UNION SELECT stg_rems_facility.PROGRAM_ID AS program_id, stg_rems_facility.PROGRAM_NAME AS program_name FROM WSMP_ADMIN.STG_REMS_FACILITY;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_TC_Physician_Univ AS
SELECT npi.NPI AS npi, dc.dea_num, upper(dc.last_name) AS last_name, upper(dc.first_name) AS first_name, upper(dc.mid_name) AS middle_name, upper(dc.address) AS address, upper(dc.city) AS city, dc.state, dc.zip FROM WSMP_ADMIN.demo_combined dc, WSMP_ADMIN.STG_IMS_NPI npi WHERE (((dc.ims_id IS NOT NULL) OR (dc.dea_num IS NOT NULL)) AND (dc.ims_id = npi.IMS_ID) AND (dc.sales_force_id = 'TC'::varchar(2)) AND ((npi.NPI, dc.territory_num) IN (SELECT n.NPI AS npi, min(d.territory_num) AS min FROM WSMP_ADMIN.STG_IMS_NPI n, WSMP_ADMIN.demo_combined d WHERE ((d.sales_force_id = 'TC'::varchar(2)) AND (n.IMS_ID = d.ims_id)) GROUP BY n.NPI)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_TP_Physician_Univ AS
SELECT npi.NPI AS npi, dc.dea_num, upper(dc.last_name) AS last_name, upper(dc.first_name) AS first_name, upper(dc.mid_name) AS middle_name, upper(dc.address) AS address, upper(dc.city) AS city, dc.state, dc.zip FROM WSMP_ADMIN.demo_combined dc, WSMP_ADMIN.STG_IMS_NPI npi WHERE (((dc.ims_id IS NOT NULL) OR (dc.dea_num IS NOT NULL)) AND (dc.ims_id = npi.IMS_ID) AND (dc.sales_force_id = 'TP'::varchar(2)) AND ((npi.NPI, dc.territory_num) IN (SELECT n.NPI AS npi, min(d.territory_num) AS min FROM WSMP_ADMIN.STG_IMS_NPI n, WSMP_ADMIN.demo_combined d WHERE ((d.sales_force_id = 'TP'::varchar(2)) AND (n.IMS_ID = d.ims_id)) GROUP BY n.NPI)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_zs_tr_calls_obw AS
SELECT c.SALES_FORCE_ID AS sales_force_id, c.TERRITORY_NUM AS territory_num, c.VEEVA_ACCOUNT_ID AS veeva_account_id, c.IMS_ID AS ims_id, c.CALL_DATE AS call_date, cd1.PRODUCT AS first_product_detailed, cd2.PRODUCT AS second_product_detailed, cd3.PRODUCT AS third_product_detailed, cd4.PRODUCT AS fourth_product_detailed FROM ((((WSMP_ADMIN.DW_CALL c LEFT JOIN WSMP_ADMIN.DW_CALL_DETAIL cd1 ON (((c.DW_CALL_KEY = cd1.DW_CALL_KEY) AND (cd1.DETAIL_POSITION = 1::numeric(18,0))))) LEFT JOIN WSMP_ADMIN.DW_CALL_DETAIL cd2 ON (((c.DW_CALL_KEY = cd2.DW_CALL_KEY) AND (cd2.DETAIL_POSITION = 2::numeric(18,0))))) LEFT JOIN WSMP_ADMIN.DW_CALL_DETAIL cd3 ON (((c.DW_CALL_KEY = cd3.DW_CALL_KEY) AND (cd3.DETAIL_POSITION = 3::numeric(18,0))))) LEFT JOIN WSMP_ADMIN.DW_CALL_DETAIL cd4 ON (((c.DW_CALL_KEY = cd4.DW_CALL_KEY) AND (cd4.DETAIL_POSITION = 4::numeric(18,0))))) WHERE ((c.SALES_FORCE_ID = 'TR'::varchar(2)) AND (c.CALL_DATE > ((trunc(((statement_timestamp())::timestamp + 1::float), 'd'::varchar(1)) + (-2)::float) + (-42)::float)) AND (c.CALL_DATE <= (trunc(((statement_timestamp())::timestamp + 1::float), 'd'::varchar(1)) + (-2)::float)) AND (c.VEEVA_ACCOUNT_ID IN (SELECT vv_account.ID AS id FROM WSMP_ADMIN.VV_ACCOUNT WHERE (vv_account.ISPERSONACCOUNT = 'true'::varchar(4)))));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_debarred_with_veevaid AS
SELECT dnc.SALES_FORCE_ID AS sales_force_id, sln.veeva_id, sln.state_license_number, coalesce(dea.DEA_NUM, x.ID_NUM) AS dea_num FROM (((WSMP_ADMIN.DIM_DNC dnc LEFT JOIN (SELECT acc.ID AS veeva_id, acc.ID_VOD__C AS ims_id, addr.LICENSE_VOD__C AS state_license_number FROM (((((WSMP_ADMIN.VV_ACCOUNT acc JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((acc.RECORDTYPEID = rta.ID))) JOIN WSMP_ADMIN.VV_ACCOUNTSHARE acctshr ON (((acc.ID = acctshr.ACCOUNTID) AND (acctshr.ROWCAUSE = 'TerritoryManual'::varchar(15))))) JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) JOIN WSMP_ADMIN.VV_TSF_VOD__C tsf ON (((tsf.ACCOUNT_VOD__C = acc.ID) AND (tsf.TERRITORY_VOD__C = g.DEVELOPERNAME)))) JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON (((addr.ACCOUNT_VOD__C = acc.ID) AND (tsf.ADDRESS_VOD__C = addr.ID)))) WHERE ((g.DEVELOPERNAME ~~ 'TC%'::varchar(3)) AND (addr.LICENSE_VOD__C IS NOT NULL))) sln ON ((dnc.IMS_ID = sln.ims_id))) LEFT JOIN WSMP_ADMIN.STG_IMS_DEA dea ON ((dnc.IMS_ID = dea.IMS_ID))) LEFT JOIN WSMP_ADMIN.STG_CM_ID_XREF x ON (((dnc.CM_ID = x.CM_ID) AND (x.ID_TYPE = 'DEA_NUM'::varchar(7))))) WHERE ((dnc.DEBARRED = 'Y'::varchar(1)) AND (dnc.SALES_FORCE_ID = 'TC'::varchar(2)) AND ((dea.DEA_NUM IS NOT NULL) OR (sln.state_license_number IS NOT NULL))) GROUP BY dnc.SALES_FORCE_ID, sln.veeva_id, sln.state_license_number, coalesce(dea.DEA_NUM, x.ID_NUM);

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_do_not_promote_with_veevaid_backup AS
(SELECT d.SALES_FORCE_ID AS sales_force_id, acct.ID AS veeva_id, sln.state_license_number, dea.DEA_NUM AS dea_num, d.PRODUCT_NAME AS product_name, d.SPECIALTY_GROUP AS specialty_group, 'N'::varchar(1) AS app FROM (((WSMP_ADMIN.DIM_DNC d JOIN WSMP_ADMIN.STG_IMS_DEA dea ON ((d.IMS_ID = dea.IMS_ID))) LEFT JOIN (SELECT substr(g.DEVELOPERNAME, 1, 2) AS sales_force_id, acct.ID_VOD__C AS ims_id, addr.LICENSE_VOD__C AS state_license_number FROM ((((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((acct.RECORDTYPEID = rta.ID))) JOIN WSMP_ADMIN.VV_ACCOUNTSHARE acctshr ON (((acct.ID = acctshr.ACCOUNTID) AND (acctshr.ROWCAUSE = 'TerritoryManual'::varchar(15))))) JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON ((addr.ACCOUNT_VOD__C = acct.ID))) WHERE ((addr.LICENSE_VOD__C IS NOT NULL) AND (acct.ID_VOD__C IS NOT NULL)) GROUP BY substr(g.DEVELOPERNAME, 1, 2), acct.ID_VOD__C, addr.LICENSE_VOD__C) sln ON (((d.IMS_ID = sln.ims_id) AND (d.SALES_FORCE_ID = sln.sales_force_id)))) LEFT JOIN WSMP_ADMIN.VV_ACCOUNT acct ON ((d.IMS_ID = acct.ID_VOD__C))) UNION SELECT 'TC'::varchar(2) AS sales_force_id, acct.ID AS veeva_id, addr.LICENSE_VOD__C AS state_license_number, dea.DEA_NUM AS dea_num, 'NUVIGIL'::varchar(7) AS product_name, ssx.SPECIALTY_CODE AS specialty_code, 'Y'::varchar(1) AS app FROM (((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.STG_IMS_DEA dea ON ((acct.ID_VOD__C = dea.IMS_ID))) LEFT JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON (((addr.ACCOUNT_VOD__C = acct.ID) AND (addr.LICENSE_VOD__C IS NOT NULL)))) LEFT JOIN WSMP_ADMIN.SIEBEL_SPECIALTY_XREF ssx ON ((acct.SPECIALTY_1_VOD__C = ssx.SPECIALTY_DESCRIPTION))) WHERE (acct.NUVIGIL_APP_TVA__C = 'true'::varchar(4))) UNION SELECT 'TP'::varchar(2) AS sales_force_id, acct.ID AS veeva_id, addr.LICENSE_VOD__C AS state_license_number, dea.DEA_NUM AS dea_num, 'FENTORA'::varchar(7) AS product_name, ssx.SPECIALTY_CODE AS specialty_code, 'Y'::varchar(1) AS app FROM (((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.STG_IMS_DEA dea ON ((acct.ID_VOD__C = dea.IMS_ID))) LEFT JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON (((addr.ACCOUNT_VOD__C = acct.ID) AND (addr.LICENSE_VOD__C IS NOT NULL)))) LEFT JOIN WSMP_ADMIN.SIEBEL_SPECIALTY_XREF ssx ON ((acct.SPECIALTY_1_VOD__C = ssx.SPECIALTY_DESCRIPTION))) WHERE (acct.FENTORA_APP_TVA__C = 'true'::varchar(4));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_cmop_rx AS
SELECT rx.STATION_NUMBER, rx.VA_PRODUCT, 0 AS PRODUCT_ID, rx.PRODUCT_CODE, to_char(rx.MONTH, 'YYYY-MM-DD'::varchar(10)) AS MONTH, CASE mod(rx.TRX_CNT, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.TRX_CNT)::int)::varchar ELSE rtrim((rx.TRX_CNT)::varchar, '0'::varchar(1)) END AS TRX_CNT, CASE mod(rx.CMOP_CNT, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.CMOP_CNT)::int)::varchar ELSE rtrim((rx.CMOP_CNT)::varchar, '0'::varchar(1)) END AS CMOP_CNT, CASE mod(rx.TRX_QTY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.TRX_QTY)::int)::varchar ELSE rtrim((rx.TRX_QTY)::varchar, '0'::varchar(1)) END AS TRX_QTY, CASE mod(rx.CMOP_QTY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.CMOP_QTY)::int)::varchar ELSE rtrim((rx.CMOP_QTY)::varchar, '0'::varchar(1)) END AS CMOP_QTY, CASE mod(rx.CNT_30_DAY_RX, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.CNT_30_DAY_RX)::int)::varchar ELSE rtrim((rx.CNT_30_DAY_RX)::varchar, '0'::varchar(1)) END AS CNT_30_DAY_RX, rx.ID FROM (WSMP_ADMIN.DW_CMOP_RX_TEVA rx JOIN (SELECT dim_va_product_xref.WK_PROD_CODE AS wk_prod_code FROM CUSTOMER.DIM_VA_PRODUCT_XREF GROUP BY dim_va_product_xref.WK_PROD_CODE) p ON ((rx.PRODUCT_CODE = p.wk_prod_code)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_copay_voucher_program AS
SELECT DIM_ASI_PROGRAM.REDEMPTION_TYPE, DIM_ASI_PROGRAM.ASI_PROGRAM_NUM, DIM_ASI_PROGRAM.PROGRAM_DESC, DIM_ASI_PROGRAM.SALES_FORCE_ID, DIM_ASI_PROGRAM.PROGRAM_TYPE, DIM_ASI_PROGRAM.PRODUCT_NAME, to_char(DIM_ASI_PROGRAM.PROGRAM_START_DATE, 'YYYY-MM-DD'::varchar(10)) AS PROGRAM_START_DATE, to_char(DIM_ASI_PROGRAM.PROGRAM_END_DATE, 'YYYY-MM-DD'::varchar(10)) AS PROGRAM_END_DATE, (DIM_ASI_PROGRAM.NUMBER_OF_TABLETS)::int AS NUMBER_OF_TABLETS FROM WSMP_ADMIN.DIM_ASI_PROGRAM;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_copay_voucher_redemption AS
SELECT coalesce(TFC_ASI_COPAY_DETAIL_WKLY.VEEVA_ACCOUNT_ID, TFC_ASI_COPAY_DETAIL_WKLY.IMS_ID) AS veeva_account_id, TFC_ASI_COPAY_DETAIL_WKLY.IMS_ID AS ims_id, TFC_ASI_COPAY_DETAIL_WKLY.REDEMPTION_TYPE AS redemption_type, to_char(TFC_ASI_COPAY_DETAIL_WKLY.FILL_DATE, 'YYYY-MM-DD'::varchar(10)) AS fill_date, to_char(TFC_ASI_COPAY_DETAIL_WKLY.HCP_DATE_WRITTEN, 'YYYY-MM-DD'::varchar(10)) AS hcp_date_written, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.DAYS_SUPPLY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.DAYS_SUPPLY)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.DAYS_SUPPLY)::varchar, '0'::varchar(1)) END AS days_supply, TFC_ASI_COPAY_DETAIL_WKLY.NDC_CODE AS ndc_code, TFC_ASI_COPAY_DETAIL_WKLY.BRAND_NAME AS brand_name, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.QTY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.QTY)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.QTY)::varchar, '0'::varchar(1)) END AS qty, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.REFILLS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.REFILLS)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.REFILLS)::varchar, '0'::varchar(1)) END AS refills, TFC_ASI_COPAY_DETAIL_WKLY.PROGRAM_NUM AS program_num, TFC_ASI_COPAY_DETAIL_WKLY.COPAY_CARD_NUM AS copay_voucher_num, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_CHAIN_NUM AS pharmacy_chain_num, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_CHAIN AS pharmacy_chain, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_NAME AS pharmacy_name, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_ADDRESS AS pharmacy_address, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_ADDRESS2 AS pharmacy_address2, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_CITY AS pharmacy_city, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_STATE AS pharmacy_state, TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_ZIP AS pharmacy_zip, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_NPI_NUM, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_NPI_NUM)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_NPI_NUM)::varchar, '0'::varchar(1)) END AS pharmacy_npi_num, NULL AS ceph_id, TFC_ASI_COPAY_DETAIL_WKLY.ME_NUM AS me_num, TFC_ASI_COPAY_DETAIL_WKLY.PRINCIPLE_PHYS_DEA_NUM AS principle_phys_dea_num, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.PRINCIPLE_PHYS_NPI_NUM, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.PRINCIPLE_PHYS_NPI_NUM)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.PRINCIPLE_PHYS_NPI_NUM)::varchar, '0'::varchar(1)) END AS principle_phys_npi_num, TFC_ASI_COPAY_DETAIL_WKLY.PHYSICIAN_NAME AS physician_name, TFC_ASI_COPAY_DETAIL_WKLY.ASI_PHYS_ADDRESS1 AS physician_address1, TFC_ASI_COPAY_DETAIL_WKLY.ASI_PHYS_ADDRESS2 AS physician_address2, TFC_ASI_COPAY_DETAIL_WKLY.ASI_PHYS_CITY AS physician_city, TFC_ASI_COPAY_DETAIL_WKLY.ASI_PHYS_STATE AS physician_state, TFC_ASI_COPAY_DETAIL_WKLY.ASI_PHYS_ZIP AS physician_zip, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.REBATE_AMOUNT, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.REBATE_AMOUNT)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.REBATE_AMOUNT)::varchar, '0'::varchar(1)) END AS rebate_amount, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.MEMBER_CASH_EXPENSE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.MEMBER_CASH_EXPENSE)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.MEMBER_CASH_EXPENSE)::varchar, '0'::varchar(1)) END AS member_cash_expense, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.SUBMITTED_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.SUBMITTED_COST)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.SUBMITTED_COST)::varchar, '0'::varchar(1)) END AS submitted_cost, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_FEE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_FEE)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.PHARMACY_FEE)::varchar, '0'::varchar(1)) END AS pharmacy_fee, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.TOTAL_AMOUNT_DUE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.TOTAL_AMOUNT_DUE)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.TOTAL_AMOUNT_DUE)::varchar, '0'::varchar(1)) END AS total_amount_due, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.CALC_AWP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.CALC_AWP)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.CALC_AWP)::varchar, '0'::varchar(1)) END AS calc_awp, TFC_ASI_COPAY_DETAIL_WKLY.OCC_PAYMENT_TYPE AS occ_payment_type, CASE mod(TFC_ASI_COPAY_DETAIL_WKLY.NEW_REFILL, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_COPAY_DETAIL_WKLY.NEW_REFILL)::int)::varchar ELSE rtrim((TFC_ASI_COPAY_DETAIL_WKLY.NEW_REFILL)::varchar, '0'::varchar(1)) END AS new_refill FROM WSMP_ADMIN.TFC_ASI_COPAY_DETAIL_WKLY WHERE ((TFC_ASI_COPAY_DETAIL_WKLY.BRAND_NAME = ANY (ARRAY['NUVIGIL'::varchar(7), 'FENTORA'::varchar(7), 'AMRIX'::varchar(5), 'ADIPEX-P'::varchar(8), 'TEV-TROPIN'::varchar(10), 'AZILECT'::varchar(7), 'QUARTETTE'::varchar(9)])) AND (TFC_ASI_COPAY_DETAIL_WKLY.FILL_DATE < (statement_timestamp())::timestamp) AND (TFC_ASI_COPAY_DETAIL_WKLY.HCP_DATE_WRITTEN < (statement_timestamp())::timestamp) AND (months_between((statement_timestamp())::timestamp, TFC_ASI_COPAY_DETAIL_WKLY.FILL_DATE) <= 25::float)) UNION ALL SELECT coalesce(TFC_ASI_REDEMPTION_DETAIL_WKLY.VEEVA_ACCOUNT_ID, TFC_ASI_REDEMPTION_DETAIL_WKLY.IMS_ID) AS veeva_account_id, TFC_ASI_REDEMPTION_DETAIL_WKLY.IMS_ID AS ims_id, TFC_ASI_REDEMPTION_DETAIL_WKLY.REDEMPTION_TYPE AS redemption_type, to_char(TFC_ASI_REDEMPTION_DETAIL_WKLY.FILL_DATE, 'YYYY-MM-DD'::varchar(10)) AS fill_date, to_char(TFC_ASI_REDEMPTION_DETAIL_WKLY.HCP_DATE_WRITTEN, 'YYYY-MM-DD'::varchar(10)) AS hcp_date_written, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.DAYS_SUPPLY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.DAYS_SUPPLY)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.DAYS_SUPPLY)::varchar, '0'::varchar(1)) END AS days_supply, TFC_ASI_REDEMPTION_DETAIL_WKLY.NDC_CODE AS ndc_code, TFC_ASI_REDEMPTION_DETAIL_WKLY.PRODUCT_NAME AS brand_name, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.QTY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.QTY)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.QTY)::varchar, '0'::varchar(1)) END AS qty, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.REFILLS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.REFILLS)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.REFILLS)::varchar, '0'::varchar(1)) END AS refills, TFC_ASI_REDEMPTION_DETAIL_WKLY.PROGRAM_NUM AS program_num, TFC_ASI_REDEMPTION_DETAIL_WKLY.VOUCHER_NUM AS copay_voucher_num, TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_CHAIN_NUM AS pharmacy_chain_num, TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_CHAIN AS pharmacy_chain, TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_NAME AS pharmacy_name, TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_ADDRESS AS pharmacy_address, NULL AS pharmacy_address2, TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_CITY AS pharmacy_city, TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_STATE AS pharmacy_state, TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_ZIP AS pharmacy_zip, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_NPI_NUM, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_NPI_NUM)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_NPI_NUM)::varchar, '0'::varchar(1)) END AS pharmacy_npi_num, NULL AS ceph_id, TFC_ASI_REDEMPTION_DETAIL_WKLY.ME_NUM AS me_num, TFC_ASI_REDEMPTION_DETAIL_WKLY.DEA_NUM AS dea_num, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.NPI, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.NPI)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.NPI)::varchar, '0'::varchar(1)) END AS npi, TFC_ASI_REDEMPTION_DETAIL_WKLY.PROVIDER_NAME AS provider_name, TFC_ASI_REDEMPTION_DETAIL_WKLY.PROVIDER_ADDRESS AS provider_address, NULL AS physician_address2, TFC_ASI_REDEMPTION_DETAIL_WKLY.PROVIDER_CITY AS provider_city, TFC_ASI_REDEMPTION_DETAIL_WKLY.PROVIDER_STATE AS provider_state, TFC_ASI_REDEMPTION_DETAIL_WKLY.PROVIDER_ZIP AS provider_zip, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.REBATE_AMOUNT, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.REBATE_AMOUNT)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.REBATE_AMOUNT)::varchar, '0'::varchar(1)) END AS rebate_amount, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.MEMBER_CASH_EXPENSE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.MEMBER_CASH_EXPENSE)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.MEMBER_CASH_EXPENSE)::varchar, '0'::varchar(1)) END AS member_cash_expense, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.SUBMITTED_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.SUBMITTED_COST)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.SUBMITTED_COST)::varchar, '0'::varchar(1)) END AS submitted_cost, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_FEE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_FEE)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.PHARMACY_FEE)::varchar, '0'::varchar(1)) END AS pharmacy_fee, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.TOTAL_AMOUNT_DUE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.TOTAL_AMOUNT_DUE)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.TOTAL_AMOUNT_DUE)::varchar, '0'::varchar(1)) END AS total_amount_due, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.CALC_AWP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.CALC_AWP)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.CALC_AWP)::varchar, '0'::varchar(1)) END AS calc_awp, NULL AS occ_payment_type, CASE mod(TFC_ASI_REDEMPTION_DETAIL_WKLY.NEW_REFILL, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((TFC_ASI_REDEMPTION_DETAIL_WKLY.NEW_REFILL)::int)::varchar ELSE rtrim((TFC_ASI_REDEMPTION_DETAIL_WKLY.NEW_REFILL)::varchar, '0'::varchar(1)) END AS new_refill FROM WSMP_ADMIN.TFC_ASI_REDEMPTION_DETAIL_WKLY WHERE ((TFC_ASI_REDEMPTION_DETAIL_WKLY.PRODUCT_NAME = ANY (ARRAY['NUVIGIL'::varchar(7), 'FENTORA'::varchar(7), 'AMRIX'::varchar(5), 'ADIPEX-P'::varchar(8), 'TEV-TROPIN'::varchar(10), 'AZILECT'::varchar(7), 'QUARTETTE'::varchar(9)])) AND (TFC_ASI_REDEMPTION_DETAIL_WKLY.FILL_DATE < (statement_timestamp())::timestamp) AND (TFC_ASI_REDEMPTION_DETAIL_WKLY.HCP_DATE_WRITTEN < (statement_timestamp())::timestamp) AND (months_between((statement_timestamp())::timestamp, TFC_ASI_REDEMPTION_DETAIL_WKLY.FILL_DATE) <= 25::float));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_rxnormalizationControl2014 AS
SELECT p.IMS_CLIENT_NUM_W AS ClientNo, p.IMS_REPORT_NUM_W_CNT AS RxReportNo, lpad(p.IMS_PRODUCT_GROUP_NUM, 9, '0'::varchar(1)) AS ProductGroupNo, p.IMS_REPORT_NUM_W_QTY AS CorrespondingUnitsReportNo, p.PRODUCT_NAME AS ProductGroupName, CASE mod(nf.DIVISOR, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((nf.DIVISOR)::int)::varchar ELSE rtrim((nf.DIVISOR)::varchar, '0'::varchar(1)) END AS Divisor, CASE mod(nf.MULTIPLIER, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((nf.MULTIPLIER)::int)::varchar ELSE rtrim((nf.MULTIPLIER)::varchar, '0'::varchar(1)) END AS Multiplier FROM (WSMP_ADMIN.DRM45_PRODUCT_2014 p JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_SP_Programs AS
SELECT p.EVENT_NUMBER, p.PARENT_EVENT_NUMBER, p.EVENT_NAME, p.EVENT_STATUS_CODE, p.EVENT_STATUS_DESCRIPTION, to_char(p.EVENT_STATUS_CHANGE_DATE, 'YYYY-MM-DD'::varchar(10)) AS EVENT_STATUS_CHANGE_DATE, to_char(p.EVENT_START_DATE, 'YYYY-MM-DD'::varchar(10)) AS EVENT_START_DATE, to_char(p.EVENT_END_DATE, 'YYYY-MM-DD'::varchar(10)) AS EVENT_END_DATE, p.EVENT_TIME_ZONE, p.FUNDING_SOURCE, p.EVENT_TYPE, p.EVENT_TYPE_DESCRIPTION, p.EVENT_FORMAT, p.EVENT_LOCATION, to_char(p.PENDING_MGMNT_APPROVAL_DATE, 'YYYY-MM-DD'::varchar(10)) AS PENDING_MGMNT_APPROVAL_DATE, to_char(p.EVENT_APPROVAL_DATE, 'YYYY-MM-DD'::varchar(10)) AS EVENT_APPROVAL_DATE, p.EVENT_APPROVER_ID, to_char(p.EVENT_SCHEDULE_DATE, 'YYYY-MM-DD'::varchar(10)) AS EVENT_SCHEDULE_DATE, to_char(p.ATTENDEE_CLOSEOUT_DATE, 'YYYY-MM-DD'::varchar(10)) AS ATTENDEE_CLOSEOUT_DATE, to_char(p.FINANCIAL_CLOSEOUT_DATE, 'YYYY-MM-DD'::varchar(10)) AS FINANCIAL_CLOSEOUT_DATE, to_char(p.CANCELLATION_DATE, 'YYYY-MM-DD'::varchar(10)) AS CANCELLATION_DATE, p.CANCELLATION_REASON, p.CANCELLATION_SOURCE, p.EVENT_VENUE_MIN_CNT_REQ_IND, p.EVENT_VENUE_MIN_COUNT, p.ESTIMATED_ATTENDANCE, p.VENUE_ID, p.VENUE_FULL_NAME, p.VENUE_ADDRESS_LINE_1, p.VENUE_ADDRESS_LINE_2, p.VENUE_ADDRESS_LINE_3, p.VENUE_ADDRESS_LINE_4, p.VENUE_CITY, p.VENUE_STATE_PROVINCE, p.VENUE_POSTAL_CODE, p.VENUE_POSTAL_EXTENDED_CODE, p.VENUE_COUNTRY_CODE, p.VENUE_CONTACT, p.VENUE_PHONE, p.VENUE_FAX, p.VENUE_EMAIL, p.TRADE_SECRET_INDICATOR, p.TRADE_SECRET_REASON, p.CUSTOM_FIELD_1, p.CUSTOM_FIELD_2, p.CUSTOM_FIELD_3, p.CUSTOM_FIELD_4, p.CUSTOM_FIELD_5, p.REC_STAT_CD, e.PAYMENT_ID AS payment_id, e.EXPENSE_CATEGORY AS expense_category, CASE mod(e.AMOUNT, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((e.AMOUNT)::int)::varchar ELSE rtrim((e.AMOUNT)::varchar, '0'::varchar(1)) END AS amount FROM (WSMP_ADMIN.STG_AHM_EVENT p LEFT JOIN WSMP_ADMIN.STG_AHM_EVENT_EXPENSE e ON ((e.EVENT_NUMBER = p.EVENT_NUMBER)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_caremark_external_match AS
SELECT foo2.caremark_md_id AS source_key, 'CAREMARK'::varchar(8) AS source_name, 'CAREMARK'::varchar(8) AS file_name, btrim(((foo2.first_name || ' '::varchar(1)) || foo2.last_name)) AS person_name, NULL AS organization_name, 99 AS ex_sub_type, 1 AS ex_hce_type, NULL AS ex_communication_type, NULL AS ex_alt_id_value, NULL AS ex_alt_id, NULL AS ex_communication_value, foo2.state AS ex_state, foo2.zip AS ex_zip, NULL AS ex_alt_id_state, foo2.city AS ex_city, NULL AS ex_suffix, btrim(((coalesce(foo2.first_name, ''::varchar) || ' '::varchar(1)) || coalesce(foo2.last_name, ''::varchar))) AS ex_person_name, NULL AS ex_organization_name, foo2.address1 AS address_part1, foo2.address1 AS ex_address_line1, foo2.address2 AS ex_address_line2, btrim(((coalesce(foo2.address1, ''::varchar) || ' '::varchar(1)) || coalesce(foo2.address2, ''::varchar))) AS ex_address FROM (SELECT foo1.CAREMARK_MD_ID AS caremark_md_id, foo1.LAST_NAME AS last_name, foo1.FIRST_NAME AS first_name, foo1.NPI AS npi, CASE WHEN ((foo1.ADDRESS1 IS NULL) AND (foo1.ADDRESS2 IS NOT NULL)) THEN foo1.ADDRESS2 WHEN ((foo1.ADDRESS1 ~~ 'STE %'::varchar(5)) AND (foo1.ADDRESS2 IS NOT NULL)) THEN foo1.ADDRESS2 ELSE foo1.ADDRESS1 END AS address1, CASE WHEN ((foo1.ADDRESS1 IS NULL) AND (foo1.ADDRESS2 IS NOT NULL)) THEN NULL WHEN ((foo1.ADDRESS1 ~~ 'STE %'::varchar(5)) AND (foo1.ADDRESS2 IS NOT NULL)) THEN foo1.ADDRESS1 ELSE foo1.ADDRESS2 END AS address2, foo1.CITY AS city, foo1.STATE AS state, foo1.ZIP AS zip, foo1.oldest_ship_date, foo1.SHIP_DATE AS current_ship_date, foo1.how_many_rows FROM (SELECT c.CAREMARK_MD_ID, c.LAST_NAME, c.FIRST_NAME, c.NPI, c.ADDRESS1, c.ADDRESS2, c.CITY, c.STATE, c.ZIP, c.PRODUCT_NDC, c.SHIP_DATE, c.QTY, c.IMS_ID, c.IMS_ID_VIA, c.LAST_BUILD_DATE, c.PRODUCT_CODE, c.TRX_CNT, c.IMS_PRODUCT_GROUP_NUM, row_number() OVER (PARTITION BY c.CAREMARK_MD_ID ORDER BY c.SHIP_DATE DESC) AS rnk, count(1) OVER (PARTITION BY c.CAREMARK_MD_ID) AS how_many_rows, min(c.SHIP_DATE) OVER (PARTITION BY c.CAREMARK_MD_ID) AS oldest_ship_date FROM WSMP_ADMIN.STG_CAREMARK_RX c WHERE ((c.IMS_ID IS NULL) AND (c.LAST_NAME <> 'UNAVAILABLE'::varchar(11)) AND ((c.ADDRESS1 IS NOT NULL) OR (c.ADDRESS2 IS NOT NULL)))) foo1 WHERE (foo1.rnk = 1)) foo2 ORDER BY foo2.caremark_md_id;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_ftf_ims_monthly_market_obm AS
SELECT substr(rx.payer_plan_num, 1, 6) AS "PLAN ID", rx.plan_name AS "PLAN NAME", substr(rx.payer_plan_num, ((length(rx.payer_plan_num) - 4) + 1), 4) AS "PAYER ID", rx.payer_name AS "PAYER NAME", rx.market_name AS "MARKET NAME", rx.product_name AS "PRODUCT NAME", rx.zip AS ZIP, to_char(rx.month_ending, 'YYYY-MM-DD'::varchar(10)) AS DATE, sum(rx.trx_cnt) AS TRx, sum(rx.nrx_cnt) AS NRx FROM WSMP_ADMIN.dw_zip_plan_rx_ims rx WHERE (rx.market_name = ANY (ARRAY['ANTI-PARKINSON'::varchar(14), 'BDP NASAL'::varchar(9), 'ICS'::varchar(3), 'MULTIPLE SCLEROSIS'::varchar(18), 'SABA'::varchar(4), 'WAKE'::varchar(4)])) GROUP BY rx.payer_plan_num, rx.plan_name, rx.payer_name, rx.market_name, rx.product_name, rx.zip, rx.month_ending;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_anda_sales AS
SELECT clozapine_sales.transaction_id AS TRANSACTION_ID, to_char(clozapine_sales.invoice_date, 'YYYY-MM-DD'::varchar(10)) AS INVOICE_DATE, clozapine_sales.product_brand AS PRODUCT_BRAND, clozapine_sales.product_ndc AS PRODUCT_NDC, clozapine_sales.product_desc AS PRODUCT_DESC, clozapine_sales.invoice_qty AS INVOICE_QTY, clozapine_sales.invoice_units AS INVOICE_UNITS, clozapine_sales.invoice_cost AS INVOICE_COST, clozapine_sales.invoice_pack_cost AS INVOICE_PACK_COST, clozapine_sales.invoice_unit_cost AS INVOICE_UNIT_COST, clozapine_sales.contract_pack_cost AS CONTRACT_PACK_COST, clozapine_sales.contract_purchases AS CONTRACT_PURCHASES, clozapine_sales.contract_number AS CONTRACT_NUMBER, clozapine_sales.dispensing_location AS DISPENSING_LOCATION, clozapine_sales.dl_address_1 AS DL_ADDRESS_1, clozapine_sales.dl_address_2 AS DL_ADDRESS_2, clozapine_sales.dl_city AS DL_CITY, clozapine_sales.dl_state AS DL_STATE, clozapine_sales.dl_zip AS DL_ZIP, clozapine_sales.dl_dea_number AS DL_DEA_NUMBER, clozapine_sales.depot_location AS DEPOT_LOCATION, clozapine_sales.dep_address_1 AS DEP_ADDRESS_1, clozapine_sales.dep_address_2 AS DEP_ADDRESS_2, clozapine_sales.dep_city AS DEP_CITY, clozapine_sales.dep_state AS DEP_STATE, clozapine_sales.dep_zip AS DEP_ZIP, clozapine_sales.dep_dea_number AS DEP_DEA_NUMBER, clozapine_sales.unit_ap AS UNIT_AP, clozapine_sales.ap AS AP FROM datamart.clozapine_sales WHERE (clozapine_sales.data_source = 'Anda'::varchar(4));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_AHM_Sales_Roster AS
SELECT AHM_SALE_FORCE_ROSTER.EMPLOYEE_ID AS employee_id, AHM_SALE_FORCE_ROSTER.USERNAME AS username, CASE AHM_SALE_FORCE_ROSTER.LAST_NAME WHEN NULLSEQUAL 'Vacant'::varchar(6) THEN NULL ELSE AHM_SALE_FORCE_ROSTER.LAST_NAME END AS last_name, CASE AHM_SALE_FORCE_ROSTER.FIRST_NAME WHEN NULLSEQUAL 'Vacant'::varchar(6) THEN NULL ELSE AHM_SALE_FORCE_ROSTER.FIRST_NAME END AS first_name, AHM_SALE_FORCE_ROSTER.MIDDLE_NAME AS middle_name, AHM_SALE_FORCE_ROSTER.SALUTATION AS salutation, AHM_SALE_FORCE_ROSTER.SUFFIX AS suffix, AHM_SALE_FORCE_ROSTER.TITLE AS title, AHM_SALE_FORCE_ROSTER.TERRITORY AS territory, AHM_SALE_FORCE_ROSTER.TERRITORY_NAME AS territory_name, CASE WHEN (substr(AHM_SALE_FORCE_ROSTER.MANAGER_TERRITORY, 3, 4) = 'ZZZZ'::varchar(4)) THEN NULL WHEN (AHM_SALE_FORCE_ROSTER.MANAGER_TERRITORY = 'TOFRMZ00'::varchar(8)) THEN NULL WHEN (AHM_SALE_FORCE_ROSTER.MANAGER_TERRITORY = 'TOSCGZ00'::varchar(8)) THEN NULL ELSE AHM_SALE_FORCE_ROSTER.MANAGER_TERRITORY END AS manager_territory, AHM_SALE_FORCE_ROSTER.TEAM AS team, AHM_SALE_FORCE_ROSTER.BUSINESS_LINE_1_ADDR AS business_line_1_addr, AHM_SALE_FORCE_ROSTER.BUSINESS_LINE_2_ADDR AS business_line_2_addr, AHM_SALE_FORCE_ROSTER.BUSINESS_LINE_3_ADDR AS business_line_3_addr, AHM_SALE_FORCE_ROSTER.BUSINESS_CITY AS business_city, AHM_SALE_FORCE_ROSTER.BUSINESS_STATE AS business_state, AHM_SALE_FORCE_ROSTER.BUSINESS_POSTAL_CODE AS business_postal_code, AHM_SALE_FORCE_ROSTER.BUSINESS_COUNTRY_CODE AS business_country_code, AHM_SALE_FORCE_ROSTER.HOME_LINE_1_ADDR AS home_line_1_addr, AHM_SALE_FORCE_ROSTER.HOME_LINE_2_ADDR AS home_line_2_addr, AHM_SALE_FORCE_ROSTER.HOME_LINE_3_ADDR AS home_line_3_addr, AHM_SALE_FORCE_ROSTER.HOME_CITY AS home_city, AHM_SALE_FORCE_ROSTER.HOME_STATE AS home_state, AHM_SALE_FORCE_ROSTER.HOME_POSTAL_CODE AS home_postal_code, AHM_SALE_FORCE_ROSTER.HOME_COUNTRY_CODE AS home_country_code, AHM_SALE_FORCE_ROSTER.CORRESPONDENCE_ADDRESS AS correspondence_address, AHM_SALE_FORCE_ROSTER.BUSINESS_PHONE AS business_phone, AHM_SALE_FORCE_ROSTER.BUSINESS_PHONE_EXTENSION AS business_phone_extension, AHM_SALE_FORCE_ROSTER.BUSINESS_FAX AS business_fax, AHM_SALE_FORCE_ROSTER.VOICE_MAIL AS voice_mail, AHM_SALE_FORCE_ROSTER.MOBILE_PHONE AS mobile_phone, AHM_SALE_FORCE_ROSTER.HOME_PHONE AS home_phone, AHM_SALE_FORCE_ROSTER.HOME_FAX AS home_fax, AHM_SALE_FORCE_ROSTER.CORRESPONDENCE_PHONE AS correspondence_phone, AHM_SALE_FORCE_ROSTER.BUSINESS_EMAIL AS business_email, AHM_SALE_FORCE_ROSTER.HOME_EMAIL AS home_email, AHM_SALE_FORCE_ROSTER.CORRESPONDENCE_EMAIL AS correspondence_email, AHM_SALE_FORCE_ROSTER.COST_CENTER AS cost_center FROM WSMP_ADMIN.AHM_SALE_FORCE_ROSTER WHERE ((AHM_SALE_FORCE_ROSTER.TERRITORY !~~ '%ZZZZ%'::varchar(6)) AND (AHM_SALE_FORCE_ROSTER.TEAM <> ALL (ARRAY['Teva Clin Nurse Educ'::varchar(20), 'Field Medical Affairs'::varchar(21), 'Clinical Nurse Educator'::varchar(23)])));

CREATE  VIEW WSMP_ADMIN_ORA.v_do_not_promote AS
SELECT iq2.ims_id, iq2.last_name, iq2.first_name, iq2.mid_name, iq2.suffix FROM (SELECT iq1.ims_id, iq1.last_name, iq1.first_name, iq1.mid_name, iq1.suffix, row_number() OVER (PARTITION BY iq1.ims_id ORDER BY iq1.u_rnk) AS rnk FROM (SELECT dim_debarred.IMS_ID AS ims_id, dim_debarred.LAST_NAME AS last_name, dim_debarred.FIRST_NAME AS first_name, dim_debarred.MID_NAME AS mid_name, dim_debarred.SUFFIX AS suffix, 2 AS u_rnk FROM teva_archive.DIM_DEBARRED WHERE (dim_debarred.IMS_ID IS NOT NULL) UNION SELECT debarred.IMS_ID AS ims_id, debarred.LAST_NAME AS last_name, debarred.FIRST_NAME AS first_name, debarred.MIDDLE_NAME AS middle_name, debarred.SUFFIX AS suffix, 1 AS u_rnk FROM WSMP_ADMIN.DEBARRED WHERE ((debarred.IMS_ID IS NOT NULL) AND (debarred.CURRENT_IND = 'Y'::varchar(1)))) iq1) iq2 WHERE (iq2.rnk = 1);

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_zs_tr_demo_obw AS
SELECT acct.ID AS veeva_account_id, acct.ID_VOD__C AS ims_id, g.DEVELOPERNAME AS territory_num, acct.FIRSTNAME AS first_name, acct.LASTNAME AS last_name, addr.NAME AS address1, addr.ADDRESS_LINE_2_VOD__C AS address2, addr.CITY_VOD__C AS city, addr.STATE_VOD__C AS state, addr.ZIP_VOD__C AS zip, cg.call_goal, cg.committed_p1, cg.committed_p2, cg.committed_p3 FROM ((((((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((acct.RECORDTYPEID = rta.ID))) JOIN WSMP_ADMIN.VV_ACCOUNTSHARE acctshr ON (((acct.ID = acctshr.ACCOUNTID) AND (acctshr.ROWCAUSE = 'TerritoryManual'::varchar(15))))) JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) JOIN WSMP_ADMIN.VV_TSF_VOD__C tsf ON (((tsf.ACCOUNT_VOD__C = acct.ID) AND (tsf.TERRITORY_VOD__C = g.DEVELOPERNAME)))) JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON (((addr.ACCOUNT_VOD__C = acct.ID) AND (tsf.ADDRESS_VOD__C = addr.ID)))) LEFT JOIN (SELECT cg.ACCOUNT_TVA__C AS account_tva__c, cg.TERRITORY_TVA__C AS territory_tva__c, sum(CASE WHEN (cg.PRIORITY_TVA__C = 1::numeric(18,0)) THEN cg.GOAL_TVA__C ELSE 0::numeric(18,0) END) AS call_goal, min(CASE WHEN (cg.PRIORITY_TVA__C = 1::numeric(18,0)) THEN p.NAME ELSE NULL END) AS committed_p1, min(CASE WHEN (cg.PRIORITY_TVA__C = 2::numeric(18,0)) THEN p.NAME ELSE NULL END) AS committed_p2, min(CASE WHEN (cg.PRIORITY_TVA__C = 3::numeric(18,0)) THEN p.NAME ELSE NULL END) AS committed_p3 FROM (WSMP_ADMIN.VV_CALL_GOAL_TVA__C cg JOIN WSMP_ADMIN.VV_PRODUCT_VOD__C p ON ((cg.PRODUCT_CATALOG_TVA__C = p.ID))) WHERE (cg.TERRITORY_TVA__C ~~ 'TR%'::varchar(3)) GROUP BY cg.ACCOUNT_TVA__C, cg.TERRITORY_TVA__C) cg ON (((cg.account_tva__c = acct.ID) AND (cg.territory_tva__c = g.DEVELOPERNAME)))) WHERE ((g.DEVELOPERNAME ~~ 'TR%'::varchar(3)) AND (acct.ISPERSONACCOUNT = 'true'::varchar(4)) AND (acct.ID IN (SELECT dw_call.VEEVA_ACCOUNT_ID AS veeva_account_id FROM WSMP_ADMIN.DW_CALL WHERE (dw_call.CALL_DATE > ((trunc(((statement_timestamp())::timestamp + 1::float), 'd'::varchar(1)) + (-2)::float) + (-42)::float)))));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_survey_backup AS
((SELECT a.account_id, a.bu, a.survey_update_date, a.survey, a.question, a.answer, a.response_update_date, a.response_create_date FROM (SELECT yr.account_id, yr.bu, yr.survey_update_date, yr.survey, '*Future Scheduled Adasuve Formulary Review Date'::varchar(47) AS question, ((((coalesce(yr.answer, '    '::varchar(4)) || '-'::varchar(1)) || CASE substr(mth.answer, 1, 3) WHEN NULLSEQUAL 'Jan'::varchar(3) THEN '01'::varchar(2) WHEN NULLSEQUAL 'Feb'::varchar(3) THEN '02'::varchar(2) WHEN NULLSEQUAL 'Mar'::varchar(3) THEN '03'::varchar(2) WHEN NULLSEQUAL 'Apr'::varchar(3) THEN '04'::varchar(2) WHEN NULLSEQUAL 'May'::varchar(3) THEN '05'::varchar(2) WHEN NULLSEQUAL 'Jun'::varchar(3) THEN '06'::varchar(2) WHEN NULLSEQUAL 'Jul'::varchar(3) THEN '07'::varchar(2) WHEN NULLSEQUAL 'Aug'::varchar(3) THEN '08'::varchar(2) WHEN NULLSEQUAL 'Sep'::varchar(3) THEN '09'::varchar(2) WHEN NULLSEQUAL 'Oct'::varchar(3) THEN '10'::varchar(2) WHEN NULLSEQUAL 'Nov'::varchar(3) THEN '11'::varchar(2) WHEN NULLSEQUAL 'Dec'::varchar(3) THEN '12'::varchar(2) ELSE '  '::varchar(2) END) || '-'::varchar(1)) || coalesce(lpad(dy.answer, 2, '0'::varchar(1)), '  '::varchar(2))) AS answer, yr.response_update_date, yr.response_create_date FROM (((SELECT x.account_id, x.bu, x.survey, x.question, x.answer, x.response_create_date, x.response_update_date, x.answer_type, x.survey_target_vod__c, x.rnk, x.nm, x.survey_update_date FROM (SELECT w.account_id, w.bu, w.survey, w.question, w.answer, w.response_create_date, w.response_update_date, w.answer_type, w.survey_target_vod__c, w.rnk, w.nm, max(w.response_update_date) OVER (PARTITION BY w.account_id) AS survey_update_date FROM (SELECT st.ACCOUNT_VOD__C AS account_id, substr(s.TERRITORY_VOD__C, 1, 2) AS bu, coalesce(b.SURVEY_NAME, s.NAME) AS survey, coalesce(a.QUESTION_TEXT_VOD__C, sq.TEXT_VOD__C) AS question, CASE ty.NAME WHEN NULLSEQUAL 'Date_vod'::varchar(8) THEN to_char(qr.DATE_VOD__C, 'YYYY-MM-DD'::varchar(10)) WHEN NULLSEQUAL 'Text_vod'::varchar(8) THEN qr.TEXT_VOD__C ELSE qr.RESPONSE_VOD__C END AS answer, to_char(qr.CREATEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_create_date, to_char(qr.LASTMODIFIEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_update_date, ty.NAME AS answer_type, st.ID AS survey_target_vod__c, row_number() OVER (PARTITION BY st.ACCOUNT_VOD__C, sq.ID ORDER BY qr.LASTMODIFIEDDATE DESC) AS rnk, s.NAME AS nm FROM ((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_QUESTION_VOD__C sq ON ((s.ID = sq.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C st ON ((s.ID = st.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C qr ON (((st.ID = qr.SURVEY_TARGET_VOD__C) AND (sq.ID = qr.SURVEY_QUESTION_VOD__C)))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((qr.TYPE_VOD__C = ty.ID))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_QUESTION_ABBR a ON ((sq.ID = a.SURVEY_QUESTION_VOD__C))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_NAME_ABBR b ON ((s.ID = b.SURVEY_VOD__C)))) w WHERE ((w.rnk = 1) AND (w.nm = ANY (ARRAY['Profiling and Developing Product Champions'::varchar(42), 'REMS Enrollment and Formulary'::varchar(29)])))) x WHERE (x.question = '*Future Scheduled Adasuve Formulary Review Year'::varchar(47))) yr JOIN (SELECT x.account_id, x.bu, x.survey, x.question, x.answer, x.response_create_date, x.response_update_date, x.answer_type, x.survey_target_vod__c, x.rnk, x.nm, x.survey_update_date FROM (SELECT w.account_id, w.bu, w.survey, w.question, w.answer, w.response_create_date, w.response_update_date, w.answer_type, w.survey_target_vod__c, w.rnk, w.nm, max(w.response_update_date) OVER (PARTITION BY w.account_id) AS survey_update_date FROM (SELECT st.ACCOUNT_VOD__C AS account_id, substr(s.TERRITORY_VOD__C, 1, 2) AS bu, coalesce(b.SURVEY_NAME, s.NAME) AS survey, coalesce(a.QUESTION_TEXT_VOD__C, sq.TEXT_VOD__C) AS question, CASE ty.NAME WHEN NULLSEQUAL 'Date_vod'::varchar(8) THEN to_char(qr.DATE_VOD__C, 'YYYY-MM-DD'::varchar(10)) WHEN NULLSEQUAL 'Text_vod'::varchar(8) THEN qr.TEXT_VOD__C ELSE qr.RESPONSE_VOD__C END AS answer, to_char(qr.CREATEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_create_date, to_char(qr.LASTMODIFIEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_update_date, ty.NAME AS answer_type, st.ID AS survey_target_vod__c, row_number() OVER (PARTITION BY st.ACCOUNT_VOD__C, sq.ID ORDER BY qr.LASTMODIFIEDDATE DESC) AS rnk, s.NAME AS nm FROM ((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_QUESTION_VOD__C sq ON ((s.ID = sq.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C st ON ((s.ID = st.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C qr ON (((st.ID = qr.SURVEY_TARGET_VOD__C) AND (sq.ID = qr.SURVEY_QUESTION_VOD__C)))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((qr.TYPE_VOD__C = ty.ID))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_QUESTION_ABBR a ON ((sq.ID = a.SURVEY_QUESTION_VOD__C))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_NAME_ABBR b ON ((s.ID = b.SURVEY_VOD__C)))) w WHERE ((w.rnk = 1) AND (w.nm = ANY (ARRAY['Profiling and Developing Product Champions'::varchar(42), 'REMS Enrollment and Formulary'::varchar(29)])))) x WHERE (x.question ~~ '*Future Scheduled Adasuve % Review Month'::varchar(40))) mth ON ((yr.survey_target_vod__c = mth.survey_target_vod__c))) JOIN (SELECT x.account_id, x.bu, x.survey, x.question, x.answer, x.response_create_date, x.response_update_date, x.answer_type, x.survey_target_vod__c, x.rnk, x.nm, x.survey_update_date FROM (SELECT w.account_id, w.bu, w.survey, w.question, w.answer, w.response_create_date, w.response_update_date, w.answer_type, w.survey_target_vod__c, w.rnk, w.nm, max(w.response_update_date) OVER (PARTITION BY w.account_id) AS survey_update_date FROM (SELECT st.ACCOUNT_VOD__C AS account_id, substr(s.TERRITORY_VOD__C, 1, 2) AS bu, coalesce(b.SURVEY_NAME, s.NAME) AS survey, coalesce(a.QUESTION_TEXT_VOD__C, sq.TEXT_VOD__C) AS question, CASE ty.NAME WHEN NULLSEQUAL 'Date_vod'::varchar(8) THEN to_char(qr.DATE_VOD__C, 'YYYY-MM-DD'::varchar(10)) WHEN NULLSEQUAL 'Text_vod'::varchar(8) THEN qr.TEXT_VOD__C ELSE qr.RESPONSE_VOD__C END AS answer, to_char(qr.CREATEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_create_date, to_char(qr.LASTMODIFIEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_update_date, ty.NAME AS answer_type, st.ID AS survey_target_vod__c, row_number() OVER (PARTITION BY st.ACCOUNT_VOD__C, sq.ID ORDER BY qr.LASTMODIFIEDDATE DESC) AS rnk, s.NAME AS nm FROM ((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_QUESTION_VOD__C sq ON ((s.ID = sq.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C st ON ((s.ID = st.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C qr ON (((st.ID = qr.SURVEY_TARGET_VOD__C) AND (sq.ID = qr.SURVEY_QUESTION_VOD__C)))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((qr.TYPE_VOD__C = ty.ID))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_QUESTION_ABBR a ON ((sq.ID = a.SURVEY_QUESTION_VOD__C))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_NAME_ABBR b ON ((s.ID = b.SURVEY_VOD__C)))) w WHERE ((w.rnk = 1) AND (w.nm = ANY (ARRAY['Profiling and Developing Product Champions'::varchar(42), 'REMS Enrollment and Formulary'::varchar(29)])))) x WHERE (x.question = '*Future Scheduled Adasuve Formulary Review Date'::varchar(47))) dy ON ((yr.survey_target_vod__c = dy.survey_target_vod__c)))) a UNION ALL SELECT b.account_id, b.bu, b.survey_update_date, b.survey, b.question, b.answer, b.response_update_date, b.response_create_date FROM (SELECT yr.account_id, yr.bu, yr.survey_update_date, yr.survey, '*Prior Adasuve Formulary Review Date'::varchar(36) AS question, ((coalesce(yr.answer, '    '::varchar(4)) || '-'::varchar(1)) || CASE substr(mth.answer, 1, 3) WHEN NULLSEQUAL 'Jan'::varchar(3) THEN '01'::varchar(2) WHEN NULLSEQUAL 'Feb'::varchar(3) THEN '02'::varchar(2) WHEN NULLSEQUAL 'Mar'::varchar(3) THEN '03'::varchar(2) WHEN NULLSEQUAL 'Apr'::varchar(3) THEN '04'::varchar(2) WHEN NULLSEQUAL 'May'::varchar(3) THEN '05'::varchar(2) WHEN NULLSEQUAL 'Jun'::varchar(3) THEN '06'::varchar(2) WHEN NULLSEQUAL 'Jul'::varchar(3) THEN '07'::varchar(2) WHEN NULLSEQUAL 'Aug'::varchar(3) THEN '08'::varchar(2) WHEN NULLSEQUAL 'Sep'::varchar(3) THEN '09'::varchar(2) WHEN NULLSEQUAL 'Oct'::varchar(3) THEN '10'::varchar(2) WHEN NULLSEQUAL 'Nov'::varchar(3) THEN '11'::varchar(2) WHEN NULLSEQUAL 'Dec'::varchar(3) THEN '12'::varchar(2) ELSE '  '::varchar(2) END) AS answer, yr.response_update_date, yr.response_create_date FROM ((SELECT x.account_id, x.bu, x.survey, x.question, x.answer, x.response_create_date, x.response_update_date, x.answer_type, x.survey_target_vod__c, x.rnk, x.nm, x.survey_update_date FROM (SELECT w.account_id, w.bu, w.survey, w.question, w.answer, w.response_create_date, w.response_update_date, w.answer_type, w.survey_target_vod__c, w.rnk, w.nm, max(w.response_update_date) OVER (PARTITION BY w.account_id) AS survey_update_date FROM (SELECT st.ACCOUNT_VOD__C AS account_id, substr(s.TERRITORY_VOD__C, 1, 2) AS bu, coalesce(b.SURVEY_NAME, s.NAME) AS survey, coalesce(a.QUESTION_TEXT_VOD__C, sq.TEXT_VOD__C) AS question, CASE ty.NAME WHEN NULLSEQUAL 'Date_vod'::varchar(8) THEN to_char(qr.DATE_VOD__C, 'YYYY-MM-DD'::varchar(10)) WHEN NULLSEQUAL 'Text_vod'::varchar(8) THEN qr.TEXT_VOD__C ELSE qr.RESPONSE_VOD__C END AS answer, to_char(qr.CREATEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_create_date, to_char(qr.LASTMODIFIEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_update_date, ty.NAME AS answer_type, st.ID AS survey_target_vod__c, row_number() OVER (PARTITION BY st.ACCOUNT_VOD__C, sq.ID ORDER BY qr.LASTMODIFIEDDATE DESC) AS rnk, s.NAME AS nm FROM ((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_QUESTION_VOD__C sq ON ((s.ID = sq.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C st ON ((s.ID = st.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C qr ON (((st.ID = qr.SURVEY_TARGET_VOD__C) AND (sq.ID = qr.SURVEY_QUESTION_VOD__C)))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((qr.TYPE_VOD__C = ty.ID))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_QUESTION_ABBR a ON ((sq.ID = a.SURVEY_QUESTION_VOD__C))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_NAME_ABBR b ON ((s.ID = b.SURVEY_VOD__C)))) w WHERE ((w.rnk = 1) AND (w.nm = ANY (ARRAY['Profiling and Developing Product Champions'::varchar(42), 'REMS Enrollment and Formulary'::varchar(29)])))) x WHERE (x.question = '*Prior Adasuve Formulary Review Year'::varchar(36))) yr JOIN (SELECT x.account_id, x.bu, x.survey, x.question, x.answer, x.response_create_date, x.response_update_date, x.answer_type, x.survey_target_vod__c, x.rnk, x.nm, x.survey_update_date FROM (SELECT w.account_id, w.bu, w.survey, w.question, w.answer, w.response_create_date, w.response_update_date, w.answer_type, w.survey_target_vod__c, w.rnk, w.nm, max(w.response_update_date) OVER (PARTITION BY w.account_id) AS survey_update_date FROM (SELECT st.ACCOUNT_VOD__C AS account_id, substr(s.TERRITORY_VOD__C, 1, 2) AS bu, coalesce(b.SURVEY_NAME, s.NAME) AS survey, coalesce(a.QUESTION_TEXT_VOD__C, sq.TEXT_VOD__C) AS question, CASE ty.NAME WHEN NULLSEQUAL 'Date_vod'::varchar(8) THEN to_char(qr.DATE_VOD__C, 'YYYY-MM-DD'::varchar(10)) WHEN NULLSEQUAL 'Text_vod'::varchar(8) THEN qr.TEXT_VOD__C ELSE qr.RESPONSE_VOD__C END AS answer, to_char(qr.CREATEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_create_date, to_char(qr.LASTMODIFIEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_update_date, ty.NAME AS answer_type, st.ID AS survey_target_vod__c, row_number() OVER (PARTITION BY st.ACCOUNT_VOD__C, sq.ID ORDER BY qr.LASTMODIFIEDDATE DESC) AS rnk, s.NAME AS nm FROM ((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_QUESTION_VOD__C sq ON ((s.ID = sq.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C st ON ((s.ID = st.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C qr ON (((st.ID = qr.SURVEY_TARGET_VOD__C) AND (sq.ID = qr.SURVEY_QUESTION_VOD__C)))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((qr.TYPE_VOD__C = ty.ID))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_QUESTION_ABBR a ON ((sq.ID = a.SURVEY_QUESTION_VOD__C))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_NAME_ABBR b ON ((s.ID = b.SURVEY_VOD__C)))) w WHERE ((w.rnk = 1) AND (w.nm = ANY (ARRAY['Profiling and Developing Product Champions'::varchar(42), 'REMS Enrollment and Formulary'::varchar(29)])))) x WHERE (x.question ~~ '*Prior Adasuve % Review Month'::varchar(29))) mth ON ((yr.survey_target_vod__c = mth.survey_target_vod__c)))) b) UNION ALL SELECT c.account_id, c.bu, c.survey_update_date, c.survey, c.question, c.answer, c.response_update_date, c.response_create_date FROM (SELECT x.account_id, x.bu, x.survey_update_date, x.survey, x.question, x.answer, x.response_update_date, x.response_create_date FROM (SELECT w.account_id, w.bu, w.survey, w.question, w.answer, w.response_create_date, w.response_update_date, w.answer_type, w.survey_target_vod__c, w.rnk, w.nm, max(w.response_update_date) OVER (PARTITION BY w.account_id) AS survey_update_date FROM (SELECT st.ACCOUNT_VOD__C AS account_id, substr(s.TERRITORY_VOD__C, 1, 2) AS bu, coalesce(b.SURVEY_NAME, s.NAME) AS survey, coalesce(a.QUESTION_TEXT_VOD__C, sq.TEXT_VOD__C) AS question, CASE ty.NAME WHEN NULLSEQUAL 'Date_vod'::varchar(8) THEN to_char(qr.DATE_VOD__C, 'YYYY-MM-DD'::varchar(10)) WHEN NULLSEQUAL 'Text_vod'::varchar(8) THEN qr.TEXT_VOD__C ELSE qr.RESPONSE_VOD__C END AS answer, to_char(qr.CREATEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_create_date, to_char(qr.LASTMODIFIEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_update_date, ty.NAME AS answer_type, st.ID AS survey_target_vod__c, row_number() OVER (PARTITION BY st.ACCOUNT_VOD__C, sq.ID ORDER BY qr.LASTMODIFIEDDATE DESC) AS rnk, s.NAME AS nm FROM ((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_QUESTION_VOD__C sq ON ((s.ID = sq.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C st ON ((s.ID = st.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C qr ON (((st.ID = qr.SURVEY_TARGET_VOD__C) AND (sq.ID = qr.SURVEY_QUESTION_VOD__C)))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((qr.TYPE_VOD__C = ty.ID))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_QUESTION_ABBR a ON ((sq.ID = a.SURVEY_QUESTION_VOD__C))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_NAME_ABBR b ON ((s.ID = b.SURVEY_VOD__C)))) w WHERE ((w.rnk = 1) AND (w.nm = ANY (ARRAY['Profiling and Developing Product Champions'::varchar(42), 'REMS Enrollment and Formulary'::varchar(29)])))) x WHERE (x.question !~~ '%Adasuve%Review%'::varchar(16))) c) UNION ALL SELECT y.account_id, y.bu, y.survey_update_date, y.survey, y.question, y.answer, y.response_update_date, y.response_create_date FROM (SELECT w.account_id, w.bu, max(w.response_update_date) OVER (PARTITION BY w.account_id) AS survey_update_date, w.survey, w.question, w.answer, w.response_update_date, w.response_create_date FROM (SELECT st.ACCOUNT_VOD__C AS account_id, substr(s.TERRITORY_VOD__C, 1, 2) AS bu, coalesce(b.SURVEY_NAME, s.NAME) AS survey, coalesce(a.QUESTION_TEXT_VOD__C, sq.TEXT_VOD__C) AS question, CASE ty.NAME WHEN NULLSEQUAL 'Date_vod'::varchar(8) THEN to_char(qr.DATE_VOD__C, 'YYYY-MM-DD'::varchar(10)) WHEN NULLSEQUAL 'Text_vod'::varchar(8) THEN qr.TEXT_VOD__C ELSE qr.RESPONSE_VOD__C END AS answer, to_char(qr.CREATEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_create_date, to_char(qr.LASTMODIFIEDDATE, 'YYYY-MM-DD'::varchar(10)) AS response_update_date, ty.NAME AS answer_type, st.ID AS survey_target_vod__c, row_number() OVER (PARTITION BY st.ACCOUNT_VOD__C, sq.ID ORDER BY qr.LASTMODIFIEDDATE DESC) AS rnk, s.NAME AS nm FROM ((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_QUESTION_VOD__C sq ON ((s.ID = sq.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C st ON ((s.ID = st.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C qr ON (((st.ID = qr.SURVEY_TARGET_VOD__C) AND (sq.ID = qr.SURVEY_QUESTION_VOD__C)))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((qr.TYPE_VOD__C = ty.ID))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_QUESTION_ABBR a ON ((sq.ID = a.SURVEY_QUESTION_VOD__C))) LEFT JOIN WSMP_ADMIN.STG_VV_SURVEY_NAME_ABBR b ON ((s.ID = b.SURVEY_VOD__C)))) w WHERE ((w.rnk = 1) AND (w.nm = 'e-Rx Survey'::varchar(11)))) y;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Amrix_Market AS
SELECT rx.payer_plan_num AS plan_num, rx.product_code, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.dw_presc_plan_rx_m rx WHERE ((rx.product_code = ANY (ARRAY['A00380'::varchar(6), 'A00100'::varchar(6), 'A00330'::varchar(6), 'A00210'::varchar(6), 'A00370'::varchar(6), 'A00220'::varchar(6), 'A00230'::varchar(6), 'A00350'::varchar(6), 'A00360'::varchar(6), 'A00240'::varchar(6), 'A00320'::varchar(6), 'A00250'::varchar(6), 'A00340'::varchar(6), 'A00260'::varchar(6), 'A00270'::varchar(6), 'A00280'::varchar(6), 'A00290'::varchar(6)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0))) GROUP BY rx.payer_plan_num, rx.product_code;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Azilect_Market AS
SELECT rx.payer_plan_num AS plan_num, rx.product_code, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.dw_presc_plan_rx_m rx WHERE ((rx.product_code = ANY (ARRAY['700105'::varchar(6), '700110'::varchar(6), '700210'::varchar(6), '700220'::varchar(6), '700310'::varchar(6), '700320'::varchar(6), '700410'::varchar(6), '700420'::varchar(6), '700510'::varchar(6), '700520'::varchar(6), '700530'::varchar(6), '700540'::varchar(6), '700550'::varchar(6), '700582'::varchar(6), '700584'::varchar(6), '700586'::varchar(6), '700588'::varchar(6), '700570'::varchar(6)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0))) GROUP BY rx.payer_plan_num, rx.product_code;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Nuvigil_Market AS
SELECT rx.payer_plan_num AS plan_num, rx.product_code, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.dw_presc_plan_rx_m rx WHERE ((rx.product_code = ANY (ARRAY['100N00'::varchar(6), '100100'::varchar(6), '100120'::varchar(6)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0))) GROUP BY rx.payer_plan_num, rx.product_code;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_rxnormalizationControl2014_backup AS
SELECT p.IMS_CLIENT_NUM_W AS ClientNo, p.IMS_REPORT_NUM_W_CNT AS RxReportNo, lpad(p.IMS_PRODUCT_GROUP_NUM, 9, '0'::varchar(1)) AS ProductGroupNo, p.IMS_REPORT_NUM_W_QTY AS CorrespondingUnitsReportNo, p.PRODUCT_NAME AS ProductGroupName, nf.DIVISOR AS Divisor, nf.MULTIPLIER AS Multiplier FROM (WSMP_ADMIN.DRM45_PRODUCT_2014 p JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_sharepoint_onc AS
SELECT lower(dim_csf_sales_roster_teva.USERNAME) AS title, dim_csf_sales_roster_teva.TERRITORY_NUM AS territory FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((dim_csf_sales_roster_teva.USERNAME IS NOT NULL) AND (dim_csf_sales_roster_teva.SALES_FORCE_ID = ANY (ARRAY['ONC'::varchar(3), 'TO'::varchar(2)])));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_ceph_sales_roster AS
SELECT DIM_CSF_SALES_ROSTER_TEVA.EMAIL AS email, DIM_CSF_SALES_ROSTER_TEVA.FIRST_NAME AS first_name, DIM_CSF_SALES_ROSTER_TEVA.LAST_NAME AS last_name, NULL AS PASSWORD, CASE WHEN (DIM_CSF_SALES_ROSTER_TEVA.REP_TYPE = 'REP'::varchar(3)) THEN 'Sales Representative'::varchar(20) WHEN (DIM_CSF_SALES_ROSTER_TEVA.REP_TYPE = 'AD'::varchar(2)) THEN 'Regional Sales Manager'::varchar(22) WHEN (DIM_CSF_SALES_ROSTER_TEVA.REP_TYPE = 'RM'::varchar(2)) THEN 'Regional Sales Manager'::varchar(22) ELSE NULL END AS rep_desc, DIM_CSF_SALES_ROSTER_TEVA.REP_TYPE AS rep_type FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((DIM_CSF_SALES_ROSTER_TEVA.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TR'::varchar(2), 'TN'::varchar(2)])) AND (DIM_CSF_SALES_ROSTER_TEVA.LAST_NAME <> 'Vacant'::varchar(6)) AND (DIM_CSF_SALES_ROSTER_TEVA.REP_TYPE IS NOT NULL));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_tb_ds_accountsummary AS
SELECT STG_TB_DS_ACCOUNTS.ACCOUNT_ID, STG_TB_DS_ACCOUNTS.LOCATION_ID, STG_TB_DS_ACCOUNTS.ACCOUNT_NAME, STG_TB_DS_ACCOUNTS.ACCOUNT_CLASS, STG_TB_DS_ACCOUNTS.ADDRESS_1, STG_TB_DS_ACCOUNTS.ADDRESS_2, STG_TB_DS_ACCOUNTS.CITY, STG_TB_DS_ACCOUNTS.STATE, STG_TB_DS_ACCOUNTS.ZIP FROM WSMP_ADMIN.STG_TB_DS_ACCOUNTS;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Touchpoint_Presentation AS
SELECT STG_TOUCHPOINT_PRESENTATION.CALL_ID, STG_TOUCHPOINT_PRESENTATION.CALL_ATTEMPT_ID, STG_TOUCHPOINT_PRESENTATION.PRESENTATION_ID, STG_TOUCHPOINT_PRESENTATION.PRODUCT, STG_TOUCHPOINT_PRESENTATION."POSITION", STG_TOUCHPOINT_PRESENTATION.ITEM_TYPE, STG_TOUCHPOINT_PRESENTATION.ITEM_DESCRIPTION, STG_TOUCHPOINT_PRESENTATION.QUANTITY FROM WSMP_ADMIN.STG_TOUCHPOINT_PRESENTATION;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Touchpoint_Call AS
SELECT STG_TOUCHPOINT_CALL.CALL_ID, STG_TOUCHPOINT_CALL.CALL_ATTEMPT_ID, STG_TOUCHPOINT_CALL.TOUCHPOINT_ID, STG_TOUCHPOINT_CALL.CLIENT_ID, STG_TOUCHPOINT_CALL.IMS_ID, STG_TOUCHPOINT_CALL.FIRST_NAME, STG_TOUCHPOINT_CALL.LAST_NAME, STG_TOUCHPOINT_CALL.CALL_TYPE, STG_TOUCHPOINT_CALL.CALL_DATE, STG_TOUCHPOINT_CALL.STATUS_CODE, STG_TOUCHPOINT_CALL.STATUS_DESCRIPTION, STG_TOUCHPOINT_CALL.REP_ID, STG_TOUCHPOINT_CALL.REP_FIRST_NAME, STG_TOUCHPOINT_CALL.REP_LAST_NAME FROM WSMP_ADMIN.STG_TOUCHPOINT_CALL;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_anda_sales_backup_2 AS
SELECT STG_ANDA_SALES.TRANSACTION_ID, to_char(STG_ANDA_SALES.INVOICE_DATE, 'YYYY-MM-DD'::varchar(10)) AS INVOICE_DATE, STG_ANDA_SALES.PRODUCT_BRAND, STG_ANDA_SALES.PRODUCT_NDC, STG_ANDA_SALES.PRODUCT_DESC, CASE mod(STG_ANDA_SALES.INVOICE_QTY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.INVOICE_QTY)::int)::varchar ELSE rtrim((STG_ANDA_SALES.INVOICE_QTY)::varchar, '0'::varchar(1)) END AS INVOICE_QTY, CASE mod(STG_ANDA_SALES.INVOICE_UNITS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.INVOICE_UNITS)::int)::varchar ELSE rtrim((STG_ANDA_SALES.INVOICE_UNITS)::varchar, '0'::varchar(1)) END AS INVOICE_UNITS, CASE mod(STG_ANDA_SALES.INVOICE_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.INVOICE_COST)::int)::varchar ELSE rtrim((STG_ANDA_SALES.INVOICE_COST)::varchar, '0'::varchar(1)) END AS INVOICE_COST, CASE mod(STG_ANDA_SALES.INVOICE_PACK_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.INVOICE_PACK_COST)::int)::varchar ELSE rtrim((STG_ANDA_SALES.INVOICE_PACK_COST)::varchar, '0'::varchar(1)) END AS INVOICE_PACK_COST, CASE mod(STG_ANDA_SALES.INVOICE_UNIT_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.INVOICE_UNIT_COST)::int)::varchar ELSE rtrim((STG_ANDA_SALES.INVOICE_UNIT_COST)::varchar, '0'::varchar(1)) END AS INVOICE_UNIT_COST, CASE mod(STG_ANDA_SALES.CONTRACT_PACK_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.CONTRACT_PACK_COST)::int)::varchar ELSE rtrim((STG_ANDA_SALES.CONTRACT_PACK_COST)::varchar, '0'::varchar(1)) END AS CONTRACT_PACK_COST, CASE mod(STG_ANDA_SALES.CONTRACT_PURCHASES, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.CONTRACT_PURCHASES)::int)::varchar ELSE rtrim((STG_ANDA_SALES.CONTRACT_PURCHASES)::varchar, '0'::varchar(1)) END AS CONTRACT_PURCHASES, STG_ANDA_SALES.CONTRACT_NUMBER, STG_ANDA_SALES.DISPENSING_LOCATION, STG_ANDA_SALES.DL_ADDRESS_1, STG_ANDA_SALES.DL_ADDRESS_2, STG_ANDA_SALES.DL_CITY, STG_ANDA_SALES.DL_STATE, STG_ANDA_SALES.DL_ZIP, STG_ANDA_SALES.DL_DEA_NUM, STG_ANDA_SALES.DEPOT_LOCATION, STG_ANDA_SALES.DEP_ADDRESS_1, STG_ANDA_SALES.DEP_ADDRESS_2, STG_ANDA_SALES.DEP_CITY, STG_ANDA_SALES.DEP_STATE, STG_ANDA_SALES.DEP_ZIP, STG_ANDA_SALES.DEP_DEA_NUM, CASE mod(STG_ANDA_SALES.UNIT_AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.UNIT_AP)::int)::varchar ELSE rtrim((STG_ANDA_SALES.UNIT_AP)::varchar, '0'::varchar(1)) END AS UNIT_AP, CASE mod(STG_ANDA_SALES.AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_ANDA_SALES.AP)::int)::varchar ELSE rtrim((STG_ANDA_SALES.AP)::varchar, '0'::varchar(1)) END AS AP FROM WSMP_ADMIN.STG_ANDA_SALES;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_omnicare_sale AS
SELECT STG_OMNICARE_SALES.TRANSACTION_ID, to_char(STG_OMNICARE_SALES.INVOICE_DATE, 'YYYY-MM-DD'::varchar(10)) AS INVOICE_DATE, STG_OMNICARE_SALES.PRODUCT_BRAND, STG_OMNICARE_SALES.PRODUCT_NDC, STG_OMNICARE_SALES.PRODUCT_DESC, CASE mod(STG_OMNICARE_SALES.INVOICE_QTY, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.INVOICE_QTY)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.INVOICE_QTY)::varchar, '0'::varchar(1)) END AS INVOICE_QTY, CASE mod(STG_OMNICARE_SALES.INVOICE_UNITS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.INVOICE_UNITS)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.INVOICE_UNITS)::varchar, '0'::varchar(1)) END AS INVOICE_UNITS, CASE mod(STG_OMNICARE_SALES.INVOICE_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.INVOICE_COST)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.INVOICE_COST)::varchar, '0'::varchar(1)) END AS INVOICE_COST, CASE mod(STG_OMNICARE_SALES.INVOICE_PACK_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.INVOICE_PACK_COST)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.INVOICE_PACK_COST)::varchar, '0'::varchar(1)) END AS INVOICE_PACK_COST, CASE mod(STG_OMNICARE_SALES.INVOICE_UNIT_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.INVOICE_UNIT_COST)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.INVOICE_UNIT_COST)::varchar, '0'::varchar(1)) END AS INVOICE_UNIT_COST, CASE mod(STG_OMNICARE_SALES.CONTRACT_PACK_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.CONTRACT_PACK_COST)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.CONTRACT_PACK_COST)::varchar, '0'::varchar(1)) END AS CONTRACT_PACK_COST, CASE mod(STG_OMNICARE_SALES.CONTRACT_PURCHASES, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.CONTRACT_PURCHASES)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.CONTRACT_PURCHASES)::varchar, '0'::varchar(1)) END AS CONTRACT_PURCHASES, STG_OMNICARE_SALES.CONTRACT_NUMBER, STG_OMNICARE_SALES.DISPENSING_LOCATION, STG_OMNICARE_SALES.DL_ADDRESS_1, STG_OMNICARE_SALES.DL_ADDRESS_2, STG_OMNICARE_SALES.DL_CITY, STG_OMNICARE_SALES.DL_STATE, STG_OMNICARE_SALES.DL_ZIP, STG_OMNICARE_SALES.DL_DEA_NUM, STG_OMNICARE_SALES.DEPOT_LOCATION, STG_OMNICARE_SALES.DEP_ADDRESS_1, STG_OMNICARE_SALES.DEP_ADDRESS_2, STG_OMNICARE_SALES.DEP_CITY, STG_OMNICARE_SALES.DEP_STATE, STG_OMNICARE_SALES.DEP_ZIP, STG_OMNICARE_SALES.DEP_DEA_NUM, CASE mod(STG_OMNICARE_SALES.UNIT_AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.UNIT_AP)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.UNIT_AP)::varchar, '0'::varchar(1)) END AS UNIT_AP, CASE mod(STG_OMNICARE_SALES.AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_OMNICARE_SALES.AP)::int)::varchar ELSE rtrim((STG_OMNICARE_SALES.AP)::varchar, '0'::varchar(1)) END AS AP FROM WSMP_ADMIN.STG_OMNICARE_SALES;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_tb_cb_transactions AS
SELECT STG_TB_CB_TRANSACTIONS.ACCOUNT_ID, STG_TB_CB_TRANSACTIONS.LOCATION_ID, to_char(STG_TB_CB_TRANSACTIONS.SHIPMENT_DATE, 'YYYY-MM-DD'::varchar(10)) AS SHIPMENT_DATE, STG_TB_CB_TRANSACTIONS.NDC_CODE, STG_TB_CB_TRANSACTIONS.PRODUCT_NAME, STG_TB_CB_TRANSACTIONS.CONTRACT_ID, CASE mod(STG_TB_CB_TRANSACTIONS.CHARGEBACK_UNITS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_CB_TRANSACTIONS.CHARGEBACK_UNITS)::int)::varchar ELSE rtrim((STG_TB_CB_TRANSACTIONS.CHARGEBACK_UNITS)::varchar, '0'::varchar(1)) END AS CHARGEBACK_UNITS, CASE mod(STG_TB_CB_TRANSACTIONS.CHARGEBACK_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_CB_TRANSACTIONS.CHARGEBACK_DOLLARS)::int)::varchar ELSE rtrim((STG_TB_CB_TRANSACTIONS.CHARGEBACK_DOLLARS)::varchar, '0'::varchar(1)) END AS CHARGEBACK_DOLLARS, to_char(STG_TB_CB_TRANSACTIONS.RECEIPT_DATE, 'YYYY-MM-DD'::varchar(10)) AS RECEIPT_DATE, CASE mod(STG_TB_CB_TRANSACTIONS.UNIT_AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_CB_TRANSACTIONS.UNIT_AP)::int)::varchar ELSE rtrim((STG_TB_CB_TRANSACTIONS.UNIT_AP)::varchar, '0'::varchar(1)) END AS UNIT_AP, CASE mod(STG_TB_CB_TRANSACTIONS.AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_CB_TRANSACTIONS.AP)::int)::varchar ELSE rtrim((STG_TB_CB_TRANSACTIONS.AP)::varchar, '0'::varchar(1)) END AS AP, STG_TB_CB_TRANSACTIONS.DEBIT_MEMO_NUM, to_char(STG_TB_CB_TRANSACTIONS.CREDIT_MEMO_DATE, 'YYYY-MM-DD HH24:MI:SS'::varchar(21)) AS CREDIT_MEMO_DATE, STG_TB_CB_TRANSACTIONS.CREDIT_MEMO_NUM, to_char(STG_TB_CB_TRANSACTIONS.SETTLEMENT_DATE, 'YYYY-MM-DD HH24:MI:SS'::varchar(21)) AS SETTLEMENT_DATE, CASE mod(STG_TB_CB_TRANSACTIONS.CONTRACT_PRICE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_CB_TRANSACTIONS.CONTRACT_PRICE)::int)::varchar ELSE rtrim((STG_TB_CB_TRANSACTIONS.CONTRACT_PRICE)::varchar, '0'::varchar(1)) END AS CONTRACT_PRICE, STG_TB_CB_TRANSACTIONS.CONTRACT_ALIAS FROM WSMP_ADMIN.STG_TB_CB_TRANSACTIONS;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_tb_ds_transactions AS
SELECT STG_TB_DS_TRANSACTIONS.ACCOUNT_ID, STG_TB_DS_TRANSACTIONS.LOCATION_ID, to_char(STG_TB_DS_TRANSACTIONS.SHIPMENT_DATE, 'YYYY-MM-DD'::varchar(10)) AS SHIPMENT_DATE, STG_TB_DS_TRANSACTIONS.NDC_CODE, STG_TB_DS_TRANSACTIONS.PRODUCT_NAME, STG_TB_DS_TRANSACTIONS.TRANSACTION_TYPE, CASE mod(STG_TB_DS_TRANSACTIONS.DIRECT_SALES_UNITS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_DS_TRANSACTIONS.DIRECT_SALES_UNITS)::int)::varchar ELSE rtrim((STG_TB_DS_TRANSACTIONS.DIRECT_SALES_UNITS)::varchar, '0'::varchar(1)) END AS DIRECT_SALES_UNITS, CASE mod(STG_TB_DS_TRANSACTIONS.DIRECT_SALES_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_DS_TRANSACTIONS.DIRECT_SALES_DOLLARS)::int)::varchar ELSE rtrim((STG_TB_DS_TRANSACTIONS.DIRECT_SALES_DOLLARS)::varchar, '0'::varchar(1)) END AS DIRECT_SALES_DOLLARS, CASE mod(STG_TB_DS_TRANSACTIONS.UNIT_AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_DS_TRANSACTIONS.UNIT_AP)::int)::varchar ELSE rtrim((STG_TB_DS_TRANSACTIONS.UNIT_AP)::varchar, '0'::varchar(1)) END AS UNIT_AP, CASE mod(STG_TB_DS_TRANSACTIONS.AP, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TB_DS_TRANSACTIONS.AP)::int)::varchar ELSE rtrim((STG_TB_DS_TRANSACTIONS.AP)::varchar, '0'::varchar(1)) END AS AP FROM WSMP_ADMIN.STG_TB_DS_TRANSACTIONS;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_rems_account AS
SELECT stg.ASI_ACCOUNT_ID AS HCP_ID, align.TERRITORY_NUM AS territory_num, stg.SITE_NAME AS ACCOUNT_NAME, stg.ADDRESS_1 AS ADDRESS1, stg.ADDRESS_2 AS ADDRESS2, NULL AS ADDRESS3, stg.CITY, stg.STATE, stg.ZIP_CODE AS ZIP, 'Y'::varchar(1) AS PRIMARY_ADDRESS, stg.PHONE_NUMBER, fact.IMS_ORG_ID AS EXTERNAL_ID, 'HOSPITAL'::varchar(8) AS CUSTOMER_TYPE, NULL AS BPNUMBER, NULL AS SUBTYPE, NULL AS CM_ID FROM ((WSMP_ADMIN.STG_REMS_FACILITY stg LEFT JOIN (SELECT kc_zip_to_territory.ZIP, kc_zip_to_territory.CITY, kc_zip_to_territory.STATE, kc_zip_to_territory.TERRITORY_NUM, kc_zip_to_territory.IS_A_MIRROR, kc_zip_to_territory.MIRROR_TERRITORY_NUM, kc_zip_to_territory.TERRITORY_NAME, kc_zip_to_territory.AREA_NAME, kc_zip_to_territory.REGION_NAME, kc_zip_to_territory.SALES_FORCE_ID, kc_zip_to_territory.ORGANIZATION_CODE, kc_zip_to_territory.COMMENTS FROM WSMP_ADMIN.KC_ZIP_TO_TERRITORY WHERE (kc_zip_to_territory.SALES_FORCE_ID = 'TB'::varchar(2))) align ON ((substr(stg.ZIP_CODE, 1, 5) = align.ZIP))) LEFT JOIN WSMP_ADMIN.HCOS_IDENTIFIER_FACT fact ON (((fact.IDENTIFIER_ID = 15::numeric(18,0)) AND (fact.IDENTIFIER = stg.NPI)))) WHERE (stg.VEEVA_ACCOUNT_ID IS NULL);

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_paragard_anda_sales AS
SELECT ('A'::varchar(1) || btrim(to_char(STG_TW_ANDA_SALES.CUSTOMER_NO, '000000000'::varchar(9)))) AS BP_CODE, NULL AS ORTHO_E, STG_TW_ANDA_SALES.CUSTOMER AS BP_NAME, coalesce(STG_TW_ANDA_SALES.CUSTOMER_ADDRESS_LINE2, STG_TW_ANDA_SALES.CUSTOMER_ADDRESS_LINE1) AS SHIP_TO_ADDRESS, STG_TW_ANDA_SALES.CITY AS SHIP_TO_CITY, STG_TW_ANDA_SALES.STATE AS SHIP_TO_STATE, STG_TW_ANDA_SALES.ZIP AS SHIP_TO_ZIP_CODE, NULL AS SHIP_TO_COUNTRY, NULL AS SHIP_TO_PHONE, NULL AS SHIP_TO_FAX, NULL AS SHIP_TO_EMAIL, coalesce(STG_TW_ANDA_SALES.BILL_ADDRESS_LINE2, STG_TW_ANDA_SALES.BILL_ADDRESS_LINE1) AS BILL_TO_ADDRESS, STG_TW_ANDA_SALES.BILL_CITY AS BILL_TO_CITY, STG_TW_ANDA_SALES.BILL_STATE AS BILL_TO_STATE, STG_TW_ANDA_SALES.BILL_ZIP AS BILL_TO_ZIP_CODE, NULL AS BILL_TO_COUNTRY, NULL AS BILL_TO_PHONE, NULL AS BILL_TO_FAX, NULL AS BILL_TO_EMAIL, CASE mod(STG_TW_ANDA_SALES.CUSTOMER_TYPE_CD, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TW_ANDA_SALES.CUSTOMER_TYPE_CD)::int)::varchar ELSE rtrim((STG_TW_ANDA_SALES.CUSTOMER_TYPE_CD)::varchar, '0'::varchar(1)) END AS CLASS_OF_TRADE, CASE mod(STG_TW_ANDA_SALES.ORDER_NO, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TW_ANDA_SALES.ORDER_NO)::int)::varchar ELSE rtrim((STG_TW_ANDA_SALES.ORDER_NO)::varchar, '0'::varchar(1)) END AS INVOICE_NUM, CASE mod(STG_TW_ANDA_SALES.NET_COST, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TW_ANDA_SALES.NET_COST)::int)::varchar ELSE rtrim((STG_TW_ANDA_SALES.NET_COST)::varchar, '0'::varchar(1)) END AS DEL_AMT, to_char(to_date(STG_TW_ANDA_SALES.SALES_DATE, 'MM/DD/YY'::varchar(8)), 'YYYY-MM-DD'::varchar(10)) AS INVOICE_DATE, CASE mod(STG_TW_ANDA_SALES.UNITS_NET, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TW_ANDA_SALES.UNITS_NET)::int)::varchar ELSE rtrim((STG_TW_ANDA_SALES.UNITS_NET)::varchar, '0'::varchar(1)) END AS "24237", NULL AS "24238", NULL AS "24800", NULL AS "33223", CASE mod(STG_TW_ANDA_SALES.PACKAGE_SIZE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TW_ANDA_SALES.PACKAGE_SIZE)::int)::varchar ELSE rtrim((STG_TW_ANDA_SALES.PACKAGE_SIZE)::varchar, '0'::varchar(1)) END AS PACKS, NULL AS UNIT_PRICE, NULL AS TERRITORY, NULL AS ORDER_TYPE_CODE, NULL AS ORDER_TYPE_DESC, NULL AS LOB_CODE_DESC, NULL AS PRICE_MATRIX_DEF, ('A'::varchar(1) || btrim(to_char(STG_TW_ANDA_SALES.BILL_CUSTOMER_NO, '000000000'::varchar(9)))) AS PARENT_BP_CODE, NULL AS PARENT_BP_DESC, NULL AS GRAND_PARENT_BP_DESC, NULL AS PO_NUMBER, NULL AS UPS_NUMBER, CASE mod(STG_TW_ANDA_SALES.ORDER_NO, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_TW_ANDA_SALES.ORDER_NO)::int)::varchar ELSE rtrim((STG_TW_ANDA_SALES.ORDER_NO)::varchar, '0'::varchar(1)) END AS ORDER_NUMBER, NULL AS ORDER_LINE_NUMBER, NULL AS DISC_AMT, NULL AS WHSE_CD FROM WSMP_ADMIN.STG_TW_ANDA_SALES WHERE (STG_TW_ANDA_SALES.BRAND ~~ '%PARAGARD%'::varchar(10));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_rems_extract AS
SELECT coalesce(r.VEEVA_ACCOUNT_ID, r.IMS_ID) AS account_id, r.ENROLLMENT_ID AS enrollment_id, r.NPI AS npi, r.DEA_NUM AS dea_num, (r.PROGRAM_ID)::int AS program_id, substr(r.PROGRAM_NAME, 1, 4) AS REMS_PROGRAM, r.STATUS AS enrollment_status, r.IN_PROGRESS_STEP AS current_enrollment_step, to_char(r.EFFECTIVE_DATE, 'YYYY-MM-DD'::varchar(10)) AS effective_date, to_char(r.EXPIRATION_DATE, 'YYYY-MM-DD'::varchar(10)) AS expiration_date FROM WSMP_ADMIN.STG_REMS_PRESCRIBER r UNION SELECT coalesce(STG_REMS_FACILITY.VEEVA_ACCOUNT_ID, STG_REMS_FACILITY.ASI_ACCOUNT_ID) AS account_id, STG_REMS_FACILITY.ENROLLMENT_ID AS enrollment_id, STG_REMS_FACILITY.NPI AS npi, STG_REMS_FACILITY.DEA AS dea, (STG_REMS_FACILITY.PROGRAM_ID)::int AS program_id, STG_REMS_FACILITY.PROGRAM_NAME AS REMS_program, STG_REMS_FACILITY.STATUS_DESCRIPTION AS enrollment_status, STG_REMS_FACILITY.IN_PROGRESS_STEP AS current_enrollment_step, to_char(STG_REMS_FACILITY.EFFECTIVE_DATE, 'YYYY-MM-DD'::varchar(10)) AS effective_date, to_char(STG_REMS_FACILITY.EXPIRATION_DATE, 'YYYY-MM-DD'::varchar(10)) AS expiration_date FROM WSMP_ADMIN.STG_REMS_FACILITY;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_rems_program_lookup AS
SELECT (r.PROGRAM_ID)::int AS program_id, r.PROGRAM_NAME AS program_name FROM WSMP_ADMIN.STG_REMS_PRESCRIBER r UNION SELECT (STG_REMS_FACILITY.PROGRAM_ID)::int AS program_id, STG_REMS_FACILITY.PROGRAM_NAME AS program_name FROM WSMP_ADMIN.STG_REMS_FACILITY;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_ddd_category AS
SELECT DIM_DDD_CATEGORY.CATEGORY_CODE, DIM_DDD_CATEGORY.CATEGORY_DESC, DIM_DDD_CATEGORY.CATEGORY_DEFN FROM WSMP_ADMIN.DIM_DDD_CATEGORY ORDER BY DIM_DDD_CATEGORY.CATEGORY_CODE LIMIT 100;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_BrandedIMS_MedicaidPlanGroups AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, coalesce(demo.veeva_account_id, rx.ims_id) AS hcp_id, rx.payer_plan_num AS plan_code, rx.plan_name, rx.model, rx.payer_name AS plan_group, CASE WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-12-003'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-001'::varchar(10)) THEN 'QNASL 80'::varchar(8) WHEN (rx.product_code = '330-15-002'::varchar(10)) THEN 'QNASL 40'::varchar(8) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-040'::varchar(10)) THEN 'ZETONNA'::varchar(7) ELSE 'UNKNOWN'::varchar(7) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1.000) THEN rx.trx_cnt ELSE 0.000 END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-15-019'::varchar(10), '330-12-003'::varchar(10), '330-15-025'::varchar(10), '330-15-001'::varchar(10), '330-15-002'::varchar(10), '330-15-030'::varchar(10), '330-15-047'::varchar(10), '330-15-040'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND ((rx.payment_method ~~ '%MEDICAID%'::varchar(10)) OR (rx.payer_plan_num = ANY (ARRAY['7001720001'::varchar(10), '0013670087'::varchar(10)])))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, coalesce(demo.veeva_account_id, rx.ims_id), rx.payer_plan_num, rx.plan_name, rx.model, rx.payer_name, CASE WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-12-003'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-001'::varchar(10)) THEN 'QNASL 80'::varchar(8) WHEN (rx.product_code = '330-15-002'::varchar(10)) THEN 'QNASL 40'::varchar(8) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-040'::varchar(10)) THEN 'ZETONNA'::varchar(7) ELSE 'UNKNOWN'::varchar(7) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_BrandedIMS_MoP AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END AS hcp_id, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)) AS payment_method, CASE WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-12-003'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-001'::varchar(10)) THEN 'QNASL 80'::varchar(8) WHEN (rx.product_code = '330-15-002'::varchar(10)) THEN 'QNASL 40'::varchar(8) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-040'::varchar(10)) THEN 'ZETONNA'::varchar(7) ELSE 'UNKNOWN'::varchar(7) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-15-019'::varchar(10), '330-12-003'::varchar(10), '330-15-025'::varchar(10), '330-15-001'::varchar(10), '330-15-002'::varchar(10), '330-15-030'::varchar(10), '330-15-047'::varchar(10), '330-15-040'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)), CASE WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-12-003'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-001'::varchar(10)) THEN 'QNASL 80'::varchar(8) WHEN (rx.product_code = '330-15-002'::varchar(10)) THEN 'QNASL 40'::varchar(8) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-040'::varchar(10)) THEN 'ZETONNA'::varchar(7) ELSE 'UNKNOWN'::varchar(7) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_ICS_MedicaidPlanGroups AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END AS hcp_id, rx.payer_plan_num AS plan_code, rx.plan_name, rx.model, rx.payer_name AS plan_group, CASE WHEN (rx.product_code = '330-16-020'::varchar(10)) THEN 'AEROSPAN'::varchar(8) WHEN (rx.product_code = '330-13-010'::varchar(10)) THEN 'AEROBID'::varchar(7) WHEN (rx.product_code = '330-13-021'::varchar(10)) THEN 'ALVESCO'::varchar(7) WHEN (rx.product_code = '330-13-016'::varchar(10)) THEN 'ASMANEX'::varchar(7) WHEN (rx.product_code = '330-13-008'::varchar(10)) THEN 'AZMACORT'::varchar(8) WHEN (rx.product_code = '330-13-011'::varchar(10)) THEN 'ARNUITY ELLIPTA'::varchar(15) WHEN (rx.product_code = '330-13-017'::varchar(10)) THEN 'ASMANEX HFA MDI'::varchar(15) WHEN (rx.product_code = ANY (ARRAY['330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10)])) THEN 'FLOVENT'::varchar(7) WHEN (rx.product_code = '330-13-009'::varchar(10)) THEN 'PULMICORT'::varchar(9) WHEN (rx.product_code = ANY (ARRAY['330-13-005'::varchar(10), '330-13-006'::varchar(10)])) THEN 'QVAR'::varchar(4) ELSE 'UNKNOWN'::varchar(7) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-13-010'::varchar(10), '330-16-020'::varchar(10), '330-13-021'::varchar(10), '330-13-016'::varchar(10), '330-13-008'::varchar(10), '330-13-011'::varchar(10), '330-13-017'::varchar(10), '330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10), '330-13-009'::varchar(10), '330-13-005'::varchar(10), '330-13-006'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (rx.payment_method ~~ '%MEDICAID%'::varchar(10))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END, rx.payer_plan_num, rx.plan_name, rx.model, rx.payer_name, CASE WHEN (rx.product_code = '330-16-020'::varchar(10)) THEN 'AEROSPAN'::varchar(8) WHEN (rx.product_code = '330-13-010'::varchar(10)) THEN 'AEROBID'::varchar(7) WHEN (rx.product_code = '330-13-021'::varchar(10)) THEN 'ALVESCO'::varchar(7) WHEN (rx.product_code = '330-13-016'::varchar(10)) THEN 'ASMANEX'::varchar(7) WHEN (rx.product_code = '330-13-008'::varchar(10)) THEN 'AZMACORT'::varchar(8) WHEN (rx.product_code = '330-13-011'::varchar(10)) THEN 'ARNUITY ELLIPTA'::varchar(15) WHEN (rx.product_code = '330-13-017'::varchar(10)) THEN 'ASMANEX HFA MDI'::varchar(15) WHEN (rx.product_code = ANY (ARRAY['330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10)])) THEN 'FLOVENT'::varchar(7) WHEN (rx.product_code = '330-13-009'::varchar(10)) THEN 'PULMICORT'::varchar(9) WHEN (rx.product_code = ANY (ARRAY['330-13-005'::varchar(10), '330-13-006'::varchar(10)])) THEN 'QVAR'::varchar(4) ELSE 'UNKNOWN'::varchar(7) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_ics_mop AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END AS hcp_id, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)) AS payment_method, CASE WHEN (rx.product_code = '330-16-020'::varchar(10)) THEN 'AEROSPAN'::varchar(8) WHEN (rx.product_code = '330-13-010'::varchar(10)) THEN 'AEROBID'::varchar(7) WHEN (rx.product_code = '330-13-021'::varchar(10)) THEN 'ALVESCO'::varchar(7) WHEN (rx.product_code = '330-13-016'::varchar(10)) THEN 'ASMANEX'::varchar(7) WHEN (rx.product_code = '330-13-008'::varchar(10)) THEN 'AZMACORT'::varchar(8) WHEN (rx.product_code = ANY (ARRAY['330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10)])) THEN 'FLOVENT'::varchar(7) WHEN (rx.product_code = '330-13-009'::varchar(10)) THEN 'PULMICORT'::varchar(9) WHEN (rx.product_code = ANY (ARRAY['330-13-005'::varchar(10), '330-13-006'::varchar(10)])) THEN 'QVAR'::varchar(4) WHEN (rx.product_code = '330-13-011'::varchar(10)) THEN 'ARNUITY ELLIPTA'::varchar(15) WHEN (rx.product_code = '330-13-017'::varchar(10)) THEN 'ASMANEX HFA MDI'::varchar(15) ELSE 'UNKOWN'::varchar(6) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-13-010'::varchar(10), '330-16-020'::varchar(10), '330-13-021'::varchar(10), '330-13-016'::varchar(10), '330-13-008'::varchar(10), '330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10), '330-13-009'::varchar(10), '330-13-005'::varchar(10), '330-13-006'::varchar(10), '330-13-011'::varchar(10), '330-13-017'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)), CASE WHEN (rx.product_code = '330-16-020'::varchar(10)) THEN 'AEROSPAN'::varchar(8) WHEN (rx.product_code = '330-13-010'::varchar(10)) THEN 'AEROBID'::varchar(7) WHEN (rx.product_code = '330-13-021'::varchar(10)) THEN 'ALVESCO'::varchar(7) WHEN (rx.product_code = '330-13-016'::varchar(10)) THEN 'ASMANEX'::varchar(7) WHEN (rx.product_code = '330-13-008'::varchar(10)) THEN 'AZMACORT'::varchar(8) WHEN (rx.product_code = ANY (ARRAY['330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10)])) THEN 'FLOVENT'::varchar(7) WHEN (rx.product_code = '330-13-009'::varchar(10)) THEN 'PULMICORT'::varchar(9) WHEN (rx.product_code = ANY (ARRAY['330-13-005'::varchar(10), '330-13-006'::varchar(10)])) THEN 'QVAR'::varchar(4) WHEN (rx.product_code = '330-13-011'::varchar(10)) THEN 'ARNUITY ELLIPTA'::varchar(15) WHEN (rx.product_code = '330-13-017'::varchar(10)) THEN 'ASMANEX HFA MDI'::varchar(15) ELSE 'UNKOWN'::varchar(6) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_NASAL_MedicaidPlanGroups AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END AS hcp_id, rx.payer_plan_num AS plan_code, rx.plan_name, rx.model, rx.payer_name AS plan_group, CASE WHEN (rx.product_code = '330-15-005'::varchar(10)) THEN 'FLONASE'::varchar(7) WHEN (rx.product_code = '330-15-010'::varchar(10)) THEN 'FLUTICASONE'::varchar(11) WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-15-015'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-050'::varchar(10)) THEN 'OTHER (NASAL)'::varchar(13) ELSE 'UNKNOWN'::varchar(7) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-15-005'::varchar(10), '330-15-010'::varchar(10), '330-15-019'::varchar(10), '330-15-015'::varchar(10), '330-15-025'::varchar(10), '330-15-030'::varchar(10), '330-15-047'::varchar(10), '330-15-050'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (rx.payment_method ~~ '%MEDICAID%'::varchar(10))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END, rx.payer_plan_num, rx.plan_name, rx.model, rx.payer_name, CASE WHEN (rx.product_code = '330-15-005'::varchar(10)) THEN 'FLONASE'::varchar(7) WHEN (rx.product_code = '330-15-010'::varchar(10)) THEN 'FLUTICASONE'::varchar(11) WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-15-015'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-050'::varchar(10)) THEN 'OTHER (NASAL)'::varchar(13) ELSE 'UNKNOWN'::varchar(7) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_nasal_mop AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END AS hcp_id, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)) AS payment_method, CASE WHEN (rx.product_code = '330-15-005'::varchar(10)) THEN 'FLONASE'::varchar(7) WHEN (rx.product_code = '330-15-010'::varchar(10)) THEN 'FLUTICASONE'::varchar(11) WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-15-015'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-050'::varchar(10)) THEN 'OTHER (NASAL)'::varchar(13) ELSE 'UNKNOWN'::varchar(7) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-15-005'::varchar(10), '330-15-010'::varchar(10), '330-15-019'::varchar(10), '330-15-015'::varchar(10), '330-15-025'::varchar(10), '330-15-030'::varchar(10), '330-15-047'::varchar(10), '330-15-050'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)), CASE WHEN (rx.product_code = '330-15-005'::varchar(10)) THEN 'FLONASE'::varchar(7) WHEN (rx.product_code = '330-15-010'::varchar(10)) THEN 'FLUTICASONE'::varchar(11) WHEN (rx.product_code = '330-15-019'::varchar(10)) THEN 'NASACORT'::varchar(8) WHEN (rx.product_code = '330-15-015'::varchar(10)) THEN 'NASONEX'::varchar(7) WHEN (rx.product_code = '330-15-025'::varchar(10)) THEN 'OMNARIS'::varchar(7) WHEN (rx.product_code = '330-15-030'::varchar(10)) THEN 'RHINOCORT'::varchar(9) WHEN (rx.product_code = '330-15-047'::varchar(10)) THEN 'VERAMYST'::varchar(8) WHEN (rx.product_code = '330-15-050'::varchar(10)) THEN 'OTHER (NASAL)'::varchar(13) ELSE 'UNKNOWN'::varchar(7) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_SABA_MedicaidPlanGroups AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END AS hcp_id, rx.payer_plan_num AS plan_code, rx.plan_name, rx.model, rx.payer_name AS plan_group, CASE WHEN (rx.product_code = '330-14-001'::varchar(10)) THEN 'ALBUTEROL CFC'::varchar(13) WHEN (rx.product_code = '330-14-007'::varchar(10)) THEN 'MAXAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-14-009'::varchar(10), '330-14-002'::varchar(10)])) THEN 'PROAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-050'::varchar(10), '330-14-003'::varchar(10)])) THEN 'PROVENTIL'::varchar(9) WHEN (rx.product_code = '330-14-008'::varchar(10)) THEN 'RELION'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-055'::varchar(10), '330-14-004'::varchar(10)])) THEN 'VENTOLIN'::varchar(8) WHEN (rx.product_code = ANY (ARRAY['330-16-056'::varchar(10), '330-14-006'::varchar(10)])) THEN 'XOPENEX'::varchar(7) WHEN (rx.product_code = '330-14-005'::varchar(10)) THEN 'OTHER (SABA)'::varchar(12) ELSE 'UNKNOWN'::varchar(7) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-14-001'::varchar(10), '330-14-007'::varchar(10), '330-14-009'::varchar(10), '330-14-002'::varchar(10), '330-14-003'::varchar(10), '330-14-008'::varchar(10), '330-14-004'::varchar(10), '330-14-006'::varchar(10), '330-14-005'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (rx.payment_method ~~ '%MEDICAID%'::varchar(10))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END, rx.payer_plan_num, rx.plan_name, rx.model, rx.payer_name, CASE WHEN (rx.product_code = '330-14-001'::varchar(10)) THEN 'ALBUTEROL CFC'::varchar(13) WHEN (rx.product_code = '330-14-007'::varchar(10)) THEN 'MAXAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-14-009'::varchar(10), '330-14-002'::varchar(10)])) THEN 'PROAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-050'::varchar(10), '330-14-003'::varchar(10)])) THEN 'PROVENTIL'::varchar(9) WHEN (rx.product_code = '330-14-008'::varchar(10)) THEN 'RELION'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-055'::varchar(10), '330-14-004'::varchar(10)])) THEN 'VENTOLIN'::varchar(8) WHEN (rx.product_code = ANY (ARRAY['330-16-056'::varchar(10), '330-14-006'::varchar(10)])) THEN 'XOPENEX'::varchar(7) WHEN (rx.product_code = '330-14-005'::varchar(10)) THEN 'OTHER (SABA)'::varchar(12) ELSE 'UNKNOWN'::varchar(7) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_saba_mop AS
SELECT CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END AS ims_id, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END AS hcp_id, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)) AS payment_method, CASE WHEN (rx.product_code = '330-14-001'::varchar(10)) THEN 'ALBUTEROL CFC'::varchar(13) WHEN (rx.product_code = '330-14-007'::varchar(10)) THEN 'MAXAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-14-009'::varchar(10), '330-14-002'::varchar(10)])) THEN 'PROAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-050'::varchar(10), '330-14-003'::varchar(10)])) THEN 'PROVENTIL'::varchar(9) WHEN (rx.product_code = '330-14-008'::varchar(10)) THEN 'RELION'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-055'::varchar(10), '330-14-004'::varchar(10)])) THEN 'VENTOLIN'::varchar(8) WHEN (rx.product_code = '330-14-006'::varchar(10)) THEN 'XOPENEX'::varchar(7) WHEN (rx.product_code = '330-14-005'::varchar(10)) THEN 'OTHER (SABA)'::varchar(12) ELSE 'UNKNOWN'::varchar(7) END AS product, (sum(CASE WHEN (rx.month_bucket = 24::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth24, (sum(CASE WHEN (rx.month_bucket = 23::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth23, (sum(CASE WHEN (rx.month_bucket = 22::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth22, (sum(CASE WHEN (rx.month_bucket = 21::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth21, (sum(CASE WHEN (rx.month_bucket = 20::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth20, (sum(CASE WHEN (rx.month_bucket = 19::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth19, (sum(CASE WHEN (rx.month_bucket = 18::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth18, (sum(CASE WHEN (rx.month_bucket = 17::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth17, (sum(CASE WHEN (rx.month_bucket = 16::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth16, (sum(CASE WHEN (rx.month_bucket = 15::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth15, (sum(CASE WHEN (rx.month_bucket = 14::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth14, (sum(CASE WHEN (rx.month_bucket = 13::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth13, (sum(CASE WHEN (rx.month_bucket = 12::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth12, (sum(CASE WHEN (rx.month_bucket = 11::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth11, (sum(CASE WHEN (rx.month_bucket = 10::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth10, (sum(CASE WHEN (rx.month_bucket = 9::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth9, (sum(CASE WHEN (rx.month_bucket = 8::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth8, (sum(CASE WHEN (rx.month_bucket = 7::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth7, (sum(CASE WHEN (rx.month_bucket = 6::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth6, (sum(CASE WHEN (rx.month_bucket = 5::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth5, (sum(CASE WHEN (rx.month_bucket = 4::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth4, (sum(CASE WHEN (rx.month_bucket = 3::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth3, (sum(CASE WHEN (rx.month_bucket = 2::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth2, (sum(CASE WHEN (rx.month_bucket = 1::numeric(18,0)) THEN rx.trx_cnt ELSE 0::numeric(18,0) END))::numeric(18,3) AS trx_mth1 FROM (WSMP_ADMIN.dw_presc_plan_rx_w rx LEFT JOIN (SELECT iq1.ims_id, iq1.veeva_account_id FROM (SELECT VV_ACCOUNT.ID_VOD__C AS ims_id, VV_ACCOUNT.ID AS veeva_account_id, row_number() OVER (PARTITION BY VV_ACCOUNT.ID_VOD__C ORDER BY VV_ACCOUNT.ID) AS rnk FROM WSMP_ADMIN.VV_ACCOUNT WHERE (VV_ACCOUNT.ID_VOD__C IS NOT NULL)) iq1 WHERE (iq1.rnk = 1)) demo ON ((demo.ims_id = rx.ims_id))) WHERE ((rx.product_code = ANY (ARRAY['330-14-001'::varchar(10), '330-14-007'::varchar(10), '330-14-009'::varchar(10), '330-14-002'::varchar(10), '330-14-003'::varchar(10), '330-14-008'::varchar(10), '330-14-004'::varchar(10), '330-14-006'::varchar(10), '330-14-005'::varchar(10)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0))) GROUP BY CASE WHEN (length(rx.ims_id) = 8) THEN ('XX'::varchar(2) || substr(rx.ims_id, 4)) ELSE rx.ims_id END, CASE WHEN (length(rx.ims_id) = 8) THEN NULL ELSE coalesce(demo.veeva_account_id, rx.ims_id) END, coalesce(rx.payment_method, 'COMMERCIAL 3RD PTY'::varchar(18)), CASE WHEN (rx.product_code = '330-14-001'::varchar(10)) THEN 'ALBUTEROL CFC'::varchar(13) WHEN (rx.product_code = '330-14-007'::varchar(10)) THEN 'MAXAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-14-009'::varchar(10), '330-14-002'::varchar(10)])) THEN 'PROAIR'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-050'::varchar(10), '330-14-003'::varchar(10)])) THEN 'PROVENTIL'::varchar(9) WHEN (rx.product_code = '330-14-008'::varchar(10)) THEN 'RELION'::varchar(6) WHEN (rx.product_code = ANY (ARRAY['330-16-055'::varchar(10), '330-14-004'::varchar(10)])) THEN 'VENTOLIN'::varchar(8) WHEN (rx.product_code = '330-14-006'::varchar(10)) THEN 'XOPENEX'::varchar(7) WHEN (rx.product_code = '330-14-005'::varchar(10)) THEN 'OTHER (SABA)'::varchar(12) ELSE 'UNKNOWN'::varchar(7) END;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_nuvigil_demo AS
SELECT CASE mod(dem.tvcmid, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((dem.tvcmid)::int)::varchar ELSE rtrim((dem.tvcmid)::varchar, '0'::varchar(1)) END AS tvcmid, dem.ims_id, dem.veeva_account_id, initcap(dem.first_name) AS first_name, initcap(dem.middle_name) AS middle_name, initcap(dem.last_name) AS last_name, dem.DEGREE, initcap(dem.address1) AS address1, initcap(dem.address2) AS address2, initcap(dem.address3) AS address3, initcap(dem.city) AS city, dem.state, dem.zip, dem.prim_specialty, dem.nuvigil_report_group, dec1.trx_cnt_01_06 AS nuvigil_decile, dec2.trx_cnt_01_06 AS wake_decile FROM (((SELECT demo.tvcmid, demo.ims_id, demo.veeva_account_id, demo.first_name, demo.middle_name, demo.last_name, demo.DEGREE, demo.address1, demo.address2, demo.address3, demo.city, demo.state, demo.zip, demo.prim_specialty, demo.nuvigil_report_group, demo.source_rank, rank() OVER (PARTITION BY demo.tvcmid, demo.ims_id ORDER BY demo.source_rank) AS demo_rank FROM (SELECT d.TVCMID AS tvcmid, d.IMS_ID AS ims_id, d.VEEVA_ACCOUNT_ID AS veeva_account_id, d.FIRST_NAME AS first_name, d.MIDDLE_NAME AS middle_name, d.LAST_NAME AS last_name, d.CREDENTIALS AS DEGREE, d.ADDRESS1 AS address1, d.ADDRESS2 AS address2, d.ADDRESS3 AS address3, d.CITY AS city, d.STATE AS state, d.ZIP AS zip, coalesce(d2.specialty, coalesce(s1.SPECIALTY_CODE, coalesce(s2.specialty_code, d.PRIM_SPECIALTY))) AS prim_specialty, coalesce(s1.NUVIGIL_REPORT_GROUP, s2.nuvigil_report_group) AS nuvigil_report_group, 1 AS source_rank FROM (((WSMP_ADMIN.DIM_SFA_CSF_DEMO d LEFT JOIN WSMP_ADMIN.TFC_IMS_PRESC_DEMO_M d2 ON (((d2.ims_id = d.IMS_ID) AND (d2.sales_force_id = 'TC'::varchar(2))))) LEFT JOIN WSMP_ADMIN.TFC_SPECIALTY_XREF s1 ON ((s1.SPECIALTY_CODE = d.PRIM_SPECIALTY))) LEFT JOIN (SELECT TFC_SPECIALTY_XREF.SPECIALTY_CODE AS specialty_code, TFC_SPECIALTY_XREF.SPECIALTY_DESC AS specialty_desc, TFC_SPECIALTY_XREF.NUVIGIL_REPORT_GROUP AS nuvigil_report_group FROM WSMP_ADMIN.TFC_SPECIALTY_XREF WHERE (TFC_SPECIALTY_XREF.SPECIALTY_CODE IN (SELECT iq1.specialty_code FROM (SELECT TFC_SPECIALTY_XREF.SPECIALTY_DESC AS specialty_desc, min(TFC_SPECIALTY_XREF.SPECIALTY_CODE) AS specialty_code FROM WSMP_ADMIN.TFC_SPECIALTY_XREF GROUP BY TFC_SPECIALTY_XREF.SPECIALTY_DESC) iq1))) s2 ON ((upper(CASE d.PRIM_SPECIALTY WHEN NULLSEQUAL 'Other'::varchar(5) THEN 'OTHER SPECIALTY'::varchar(15) ELSE d.PRIM_SPECIALTY END) = s2.specialty_desc))) WHERE ((d.SALES_FORCE_ID = 'TC'::varchar(2)) AND (d.DEMO_TYPE = 'PROF'::varchar(4)) AND (d.DEMO_RANK = 1::numeric(18,0))) UNION ALL SELECT s1.tvcmid, s1.ims_id, NULL AS siebel_id, s1.first_name, s1.mid_name, s1.last_name, s1.DEGREE AS degree, s1.address1, s1.address2, s1.address3, s1.city, s1.state, s1.zip, s1.prim_specialty, s1.nuvigil_report_group, s1.source_rank FROM (SELECT cm1.TVCMID AS tvcmid, d.ims_id, cm1.ID_NUM AS siebel_id, d.first_name, d.mid_name, d.last_name, NULL AS DEGREE, d.ptr_address AS address1, NULL AS address2, NULL AS address3, d.ptr_city AS city, d.ptr_state AS state, d.ptr_zip AS zip, d.specialty AS prim_specialty, s1.NUVIGIL_REPORT_GROUP AS nuvigil_report_group, 2 AS source_rank FROM ((WSMP_ADMIN.TFC_IMS_PRESC_DEMO_M d LEFT JOIN WSMP_ADMIN.TFC_SPECIALTY_XREF s1 ON ((s1.SPECIALTY_CODE = d.specialty))) LEFT JOIN WSMP_ADMIN.tvcmid_xref cm1 ON (((cm1.ID_NUM = d.ims_id) AND (cm1.ID_TYPE = 'IMS_ID'::varchar(6))))) WHERE (d.sales_force_id = 'TC'::varchar(2))) s1) demo) dem LEFT JOIN WSMP_ADMIN.TFC_IMS_DECILE dec1 ON (((dec1.ims_id = dem.ims_id) AND (dec1.category = 'Provigil'::varchar(8)) AND (dec1.decile_name = 'Nuvigil'::varchar(7))))) LEFT JOIN WSMP_ADMIN.TFC_IMS_DECILE dec2 ON (((dec2.ims_id = dem.ims_id) AND (dec2.category = 'Provigil'::varchar(8)) AND (dec2.decile_name = 'Modafinil'::varchar(9))))) WHERE (dem.demo_rank = 1);

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_pvs_for_data_stewards AS
SELECT sp_pharm_address_lookups.SOURCE_ID AS source_id, sp_pharm_address_lookups.TEVA_LAST_NAME AS last_name, sp_pharm_address_lookups.TEVA_FIRST_NAME AS first_name, sp_pharm_address_lookups.TEVA_PROFESSIONAL_ID AS npi, sp_pharm_address_lookups.TEVA_ADDRESS1 AS address1, sp_pharm_address_lookups.TEVA_ADDRESS2 AS address2, sp_pharm_address_lookups.TEVA_CITY AS city, sp_pharm_address_lookups.TEVA_STATE AS state, sp_pharm_address_lookups.TEVA_ZIP AS zip, NULL AS IMS_ID, NULL AS HCE_ID FROM WSMP_ADMIN.sp_pharm_address_lookups WHERE (trunc(sp_pharm_address_lookups.CREATE_DATE, 'DD'::varchar(2)) = trunc((statement_timestamp())::timestamp, 'DD'::varchar(2))) ORDER BY sp_pharm_address_lookups.TEVA_LAST_NAME, sp_pharm_address_lookups.TEVA_FIRST_NAME, sp_pharm_address_lookups.TEVA_ZIP;

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_tb_affiliations AS
SELECT affl.FROM_ACCOUNT_VOD__C AS affiliated_from_id, replace(rt1.NAME, '_vod'::varchar(4), ''::varchar) AS affiliated_from_account_type, acct1.OUTLET_ID_TVA__C AS ims_outlet_code, acct1.ACCOUNT_DEMO_ID_TVA__C AS acct_demo_id, affl.TO_ACCOUNT_VOD__C AS affiliated_to_id, replace(rt2.NAME, '_vod'::varchar(4), ''::varchar) AS affiliated_to_account_type, acct2.ID_VOD__C AS ims_id FROM (((((WSMP_ADMIN.VV_ACCOUNT acct1 JOIN WSMP_ADMIN.VV_AFFILIATION_VOD__C affl ON ((acct1.ID = affl.FROM_ACCOUNT_VOD__C))) JOIN WSMP_ADMIN.VV_ACCOUNT acct2 ON ((affl.TO_ACCOUNT_VOD__C = acct2.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rt1 ON ((acct1.RECORDTYPEID = rt1.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rt2 ON ((acct2.RECORDTYPEID = rt2.ID))) JOIN (SELECT acctshr.ACCOUNTID AS accountid FROM (WSMP_ADMIN.VV_ACCOUNTSHARE acctshr JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) WHERE (g.DEVELOPERNAME ~~ 'TB%'::varchar(3)) GROUP BY acctshr.ACCOUNTID) x ON ((acct1.ID = x.accountid))) WHERE (rt1.NAME <> ALL (ARRAY['Professional_vod'::varchar(16), 'Staff'::varchar(5)]));

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_segment AS
SELECT iq.veeva_account_id, iq.product_name, iq.segment FROM (SELECT pm.ACCOUNT_VOD__C AS veeva_account_id, p.NAME AS product_name, coalesce(pm.SEGMENT__C, pm.BUSINESS_SEGMENT_TVA__C) AS segment, row_number() OVER (PARTITION BY pm.ACCOUNT_VOD__C, p.NAME ORDER BY pm.LASTMODIFIEDDATE) AS rnk FROM (WSMP_ADMIN.VV_PRODUCT_METRICS_VOD__C pm JOIN WSMP_ADMIN.VV_PRODUCT_VOD__C p ON ((pm.PRODUCTS_VOD__C = p.ID))) WHERE ((pm.SEGMENT__C IS NOT NULL) OR (pm.BUSINESS_SEGMENT_TVA__C IS NOT NULL))) iq WHERE (iq.rnk = 1);

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_samples AS
SELECT s.ID AS sample_id, c.ID AS call_id, a.ID AS veeva_account_id, trunc(c.LOCAL_CALL_DATETIME_VOD__C, 'DD'::varchar(2)) AS call_date, substr(c.TERRITORY_VOD__C, 1, 2) AS sales_force_id, c.TERRITORY_VOD__C AS territory_num, c.CALL_TYPE_VOD__C AS call_type, c.ATTENDEE_TYPE_VOD__C AS attendee_type, CASE WHEN (rta.NAME = ANY (ARRAY['Hospital_vod'::varchar(12), 'Pharmacy_vod'::varchar(12), 'Practice_vod'::varchar(12)])) THEN 'ACCT'::varchar(4) WHEN ((rta.NAME = 'Professional_vod'::varchar(16)) AND (a.ID_VOD__C IS NULL) AND (a.CREDENTIALS_VOD__C = ANY (ARRAY['Nurse'::varchar(5), 'Billing Staff'::varchar(13), 'Office Staff'::varchar(12), 'Other Contact'::varchar(13), 'Pharmacist/Pharm D'::varchar(18), 'Practice Manager'::varchar(16), 'Refill Coordinator'::varchar(18), 'Reimbursement Specialist'::varchar(24)]))) THEN 'CONT'::varchar(4) WHEN (rta.NAME = 'Staff'::varchar(5)) THEN 'CONT'::varchar(4) WHEN (rta.NAME = 'Professional_vod'::varchar(16)) THEN 'PROF'::varchar(4) ELSE 'UNK'::varchar(3) END AS demo_type, CASE WHEN (p.PRODUCT_TYPE_VOD__C = 'BRC'::varchar(3)) THEN 'REQUEST'::varchar(7) ELSE 'DROP'::varchar(4) END AS sample_type, upper(pp.NAME) AS product_name, upper(p.NAME) AS sample_name, p.PRODUCT_ID_TEVA__C AS sample_ndc, s.QUANTITY_VOD__C AS qty, c.ENTITY_DISPLAY_NAME_VOD__C AS name_on_call, c.ADDRESS_LINE_1_VOD__C AS address1_on_call, c.ADDRESS_LINE_2_VOD__C AS address2_on_call, c.CITY_VOD__C AS city_on_call, c.STATE_VOD__C AS state_on_call, c.ZIP_VOD__C AS zip_on_call, a.ID_VOD__C AS ims_id, c.DEA_VOD__C AS dea_num, c.OWNERID AS ownerid, u.EMPLOYEENUMBER AS employeenumber, c.PARENT_CALL_VOD__C AS parent_call_id, c.CREATEDBYID AS created_by, c.CREATEDDATE AS created_date FROM (((((((WSMP_ADMIN.VV_CALL2_VOD__C c JOIN WSMP_ADMIN.VV_CALL2_SAMPLE_VOD__C s ON ((c.ID = s.CALL2_VOD__C))) JOIN WSMP_ADMIN.VV_PRODUCT_VOD__C p ON ((s.PRODUCT_VOD__C = p.ID))) LEFT JOIN WSMP_ADMIN.VV_PRODUCT_VOD__C pp ON ((p.PARENT_PRODUCT_VOD__C = pp.ID))) JOIN WSMP_ADMIN.VV_ACCOUNT a ON ((c.ACCOUNT_VOD__C = a.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rtc ON ((c.RECORDTYPEID = rtc.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((a.RECORDTYPEID = rta.ID))) LEFT JOIN WSMP_ADMIN.VV_USER u ON ((c.OWNERID = u.ID))) WHERE ((c.LOCAL_CALL_DATETIME_VOD__C >= '2012-01-01 00:00:00'::timestamp(0)) AND (c.STATUS_VOD__C = 'Submitted_vod'::varchar(13)) AND (p.PRODUCT_TYPE_VOD__C = ANY (ARRAY['BRC'::varchar(3), 'Sample'::varchar(6)])));

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_rtm AS
SELECT substr(c.TERRITORY_VOD__C, 1, 2) AS sales_force_id, c.TERRITORY_VOD__C AS territory_num, c.ID AS call_id, c.ACCOUNT_VOD__C AS veeva_account_id, a.ID_VOD__C AS ims_id, a.EXTERNAL_ID_VOD__C AS siebel_id, trunc(c.CALL_DATETIME_VOD__C, 'DD'::varchar(2)) AS rtm_letter_date, CASE WHEN (p.PRODUCT_ID_TEVA__C ~~ 'AMR%'::varchar(4)) THEN 'AMRIX'::varchar(5) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'FEN%'::varchar(4)) THEN 'FENTORA'::varchar(7) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'NUV%'::varchar(4)) THEN 'NUVIGIL'::varchar(7) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'TIRF%'::varchar(5)) THEN 'FENTORA'::varchar(7) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'TRE%'::varchar(4)) THEN 'TREANDA'::varchar(7) ELSE 'error'::varchar(5) END AS product_name, CASE WHEN (p.PRODUCT_ID_TEVA__C ~~ 'AMR%'::varchar(4)) THEN 'A00100'::varchar(6) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'FEN%'::varchar(4)) THEN '300500'::varchar(6) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'NUV%'::varchar(4)) THEN '100N00'::varchar(6) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'TIRF%'::varchar(5)) THEN '300500'::varchar(6) WHEN (p.PRODUCT_ID_TEVA__C ~~ 'TRE%'::varchar(4)) THEN 'ONC590'::varchar(6) ELSE 'error'::varchar(5) END AS product_code, p.PRODUCT_ID_TEVA__C AS rtm_letter_code, p.DESCRIPTION_VOD__C AS description, c.ENTITY_DISPLAY_NAME_VOD__C AS prof_full_name, u.EMPLOYEENUMBER AS emp_id, u.NAME AS emp_full_name, c.CREATEDBYID AS created_by, c.CREATEDDATE AS created_date FROM ((((WSMP_ADMIN.VV_CALL2_VOD__C c JOIN WSMP_ADMIN.VV_CALL2_SAMPLE_VOD__C s ON ((c.ID = s.CALL2_VOD__C))) JOIN WSMP_ADMIN.VV_PRODUCT_VOD__C p ON ((s.PRODUCT_VOD__C = p.ID))) JOIN WSMP_ADMIN.VV_ACCOUNT a ON ((c.ACCOUNT_VOD__C = a.ID))) LEFT JOIN WSMP_ADMIN.VV_USER u ON ((c.OWNERID = u.ID))) WHERE ((p.PRODUCT_TYPE_VOD__C = 'Educational'::varchar(11)) AND (p.SUB_TYPE__C = 'Letters'::varchar(7)) AND (c.STATUS_VOD__C = 'Submitted_vod'::varchar(13)));

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_merge_history AS
SELECT vv_acct_merge_history_vod__c.NAME AS old_veeva_account_id, vv_acct_merge_history_vod__c.ACCOUNT_VOD__C AS new_veeva_account_id, vv_acct_merge_history_vod__c.CREATEDDATE AS merge_date FROM WSMP_ADMIN.VV_ACCT_MERGE_HISTORY_VOD__C;

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_call_plan AS
SELECT iq.account_tva__c AS veeva_account_id, iq.id_vod__c AS ims_id, substr(iq.territory_tva__c, 1, 2) AS sales_force_id, iq.territory_tva__c AS territory_num, initcap(iq.name) AS prod, sum(CASE WHEN (iq.priority_tva__c = 1::numeric(18,0)) THEN iq.goal_tva__c ELSE 0::numeric(18,0) END) AS committed_p1, sum(CASE WHEN (iq.priority_tva__c = 2::numeric(18,0)) THEN iq.goal_tva__c ELSE 0::numeric(18,0) END) AS committed_p2, sum(CASE WHEN (iq.priority_tva__c = 3::numeric(18,0)) THEN iq.goal_tva__c ELSE 0::numeric(18,0) END) AS committed_p3, iq.lastname AS last_name, iq.firstname AS first_name, iq.start_date_tva__c AS start_date, iq.end_date_tva__c AS end_date FROM (SELECT cg.ACCOUNT_TVA__C AS account_tva__c, a.ID_VOD__C AS id_vod__c, cg.TERRITORY_TVA__C AS territory_tva__c, p.NAME AS name, cg.PRIORITY_TVA__C AS priority_tva__c, cg.GOAL_TVA__C AS goal_tva__c, a.LASTNAME AS lastname, a.FIRSTNAME AS firstname, cg.START_DATE_TVA__C AS start_date_tva__c, cg.END_DATE_TVA__C AS end_date_tva__c FROM ((WSMP_ADMIN.VV_CALL_GOAL_TVA__C cg JOIN WSMP_ADMIN.VV_PRODUCT_VOD__C p ON ((cg.PRODUCT_CATALOG_TVA__C = p.ID))) JOIN WSMP_ADMIN.VV_ACCOUNT a ON ((cg.ACCOUNT_TVA__C = a.ID)))) iq GROUP BY iq.account_tva__c, iq.id_vod__c, iq.territory_tva__c, iq.name, iq.lastname, iq.firstname, iq.start_date_tva__c, iq.end_date_tva__c;

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_bp_affiliations AS
SELECT affl.FROM_ACCOUNT_VOD__C AS affiliated_from_id, acct1.EXTERNAL_ID_VOD__C AS bp_code, affl.TO_ACCOUNT_VOD__C AS affiliated_to_id, acct2.ID_VOD__C AS ims_id FROM (((WSMP_ADMIN.VV_ACCOUNT acct1 JOIN WSMP_ADMIN.VV_AFFILIATION_VOD__C affl ON ((acct1.ID = affl.FROM_ACCOUNT_VOD__C))) JOIN WSMP_ADMIN.VV_RECORDTYPE rt ON ((acct1.RECORDTYPEID = rt.ID))) JOIN WSMP_ADMIN.VV_ACCOUNT acct2 ON ((affl.TO_ACCOUNT_VOD__C = acct2.ID))) WHERE (rt.NAME = 'ParaGard_TVA'::varchar(12));

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_affiliations AS
SELECT affl.FROM_ACCOUNT_VOD__C AS affiliated_from_id, replace(rt1.NAME, '_vod'::varchar(4), ''::varchar) AS affiliated_from_account_type, acct1.OUTLET_ID_TVA__C AS ims_outlet_code, acct1.ACCOUNT_DEMO_ID_TVA__C AS acct_demo_id, affl.TO_ACCOUNT_VOD__C AS affiliated_to_id, replace(rt2.NAME, '_vod'::varchar(4), ''::varchar) AS affiliated_to_account_type, acct2.ID_VOD__C AS ims_id FROM (((((WSMP_ADMIN.VV_ACCOUNT acct1 JOIN WSMP_ADMIN.VV_AFFILIATION_VOD__C affl ON ((acct1.ID = affl.FROM_ACCOUNT_VOD__C))) JOIN WSMP_ADMIN.VV_ACCOUNT acct2 ON ((affl.TO_ACCOUNT_VOD__C = acct2.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rt1 ON ((acct1.RECORDTYPEID = rt1.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rt2 ON ((acct2.RECORDTYPEID = rt2.ID))) JOIN (SELECT acctshr.ACCOUNTID AS accountid FROM (WSMP_ADMIN.VV_ACCOUNTSHARE acctshr JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) GROUP BY acctshr.ACCOUNTID) x ON ((acct1.ID = x.accountid))) WHERE (rt1.NAME <> ALL (ARRAY['Professional_vod'::varchar(16), 'Staff'::varchar(5)]));

CREATE  VIEW WSMP_ADMIN_ORA.v_territory_rep_mgr_dir AS
SELECT rep.SALES_FORCE_ID AS sales_force_id, rep.TERRITORY_NUM AS rep_territory_num, rep.TERRITORY_NAME AS rep_territory_name, m.TERRITORY_NUM AS m_territory_num, m.TERRITORY_NAME AS m_territory_name, d.TERRITORY_NUM AS d_territory_num, d.TERRITORY_NAME AS d_territory_name, h.TERRITORY_NUM AS h_territory_num, h.TERRITORY_NAME AS h_territory_name FROM (((WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA rep LEFT JOIN WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA m ON ((rep.PARENT_TERRITORY_NUM = m.TERRITORY_NUM))) LEFT JOIN WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA d ON (((m.PARENT_TERRITORY_NUM = d.TERRITORY_NUM) AND (d.REP_TYPE IS NOT NULL)))) LEFT JOIN WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA h ON ((d.PARENT_TERRITORY_NUM = h.TERRITORY_NUM))) WHERE (rep.REP_TYPE = 'REP'::varchar(3));

CREATE  VIEW WSMP_ADMIN_ORA.v_roster_teva_rep_mgr_dir AS
SELECT rep.SALES_FORCE_ID AS sales_force_id, rep.EMPLOYEE_ID AS rep_emp_id, rep.TERRITORY_NUM AS rep_territory_num, rep.FIRST_NAME AS rep_first_name, rep.LAST_NAME AS rep_last_name, rep.FULL_NAME AS rep_full_name, rep.EMAIL AS rep_email, rep.USERNAME AS rep_username, rep.HIRE_DATE AS rep_hire_date, m.EMPLOYEE_ID AS m_emp_id, m.TERRITORY_NUM AS m_territory_num, m.FIRST_NAME AS m_first_name, m.LAST_NAME AS m_last_name, m.FULL_NAME AS m_full_name, m.EMAIL AS m_email, m.USERNAME AS m_username, d.EMPLOYEE_ID AS d_emp_id, d.TERRITORY_NUM AS d_territory_num, d.FIRST_NAME AS d_first_name, d.LAST_NAME AS d_last_name, d.FULL_NAME AS d_full_name, d.EMAIL AS d_email, d.USERNAME AS d_username, h.EMPLOYEE_ID AS h_emp_id, h.TERRITORY_NUM AS h_territory_num, h.FIRST_NAME AS h_first_name, h.LAST_NAME AS h_last_name, h.FULL_NAME AS h_full_name, h.EMAIL AS h_email, h.USERNAME AS h_username FROM (((WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA rep LEFT JOIN WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA m ON ((rep.PARENT_TERRITORY_NUM = m.TERRITORY_NUM))) LEFT JOIN WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA d ON (((m.PARENT_TERRITORY_NUM = d.TERRITORY_NUM) AND (d.REP_TYPE IS NOT NULL)))) LEFT JOIN WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA h ON ((d.PARENT_TERRITORY_NUM = h.TERRITORY_NUM))) WHERE (rep.REP_TYPE = 'REP'::varchar(3)) ORDER BY rep.TERRITORY_NUM;

CREATE  VIEW WSMP_ADMIN_ORA.v_onc_related_accounts AS
SELECT ra.ACCT_DEMO_ID AS acct_demo_id, coalesce(ad.OUTLET_NAME, ad.FACILITY_NAME, ad.PRESCRIBER_NAME) AS acct_name, ra.REL_TYPE AS rel_type, ra.REL_ACCT_DEMO_ID AS rel_acct_demo_id, coalesce(rd.OUTLET_NAME, rd.FACILITY_NAME, rd.PRESCRIBER_NAME) AS rel_acct_name FROM ((WSMP_ADMIN.DIM_ONC_RELATED_ACCOUNTS ra JOIN WSMP_ADMIN.DIM_ONC_ACCOUNT_DEMO ad ON ((ad.ACCT_DEMO_ID = ra.ACCT_DEMO_ID))) JOIN WSMP_ADMIN.DIM_ONC_ACCOUNT_DEMO rd ON ((rd.ACCT_DEMO_ID = ra.REL_ACCT_DEMO_ID)));

CREATE  VIEW WSMP_ADMIN_ORA.v_hcos_kaiser_prof_affil AS
SELECT p.IMS_ID AS ims_id, p.NPI AS npi, p.ALL_DEA AS all_dea, p.LAST_NAME AS last_name, p.FIRST_NAME AS first_name, p.MIDDLE_NAME AS middle_name, at.AFFIL_TYPE_DESC AS affil_type_desc, b.IMS_ORG_ID AS ims_facility_number, b.COT_FACILITY_TYPE AS cot_facility_type, b.BUSINESS_NAME AS business_name, b.PHYSICAL_ADDR_1 AS physical_addr_1, b.PHYSICAL_ADDR_2 AS physical_addr_2, b.PHYSICAL_CITY AS physical_city, b.PHYSICAL_STATE AS physical_state, b.PHYSICAL_ZIP AS physical_zip FROM ((((WSMP_ADMIN.HCOS_BUSINESS b JOIN WSMP_ADMIN.HCOS_PROVIDER_AFFILIATION_FACT paf ON ((b.IMS_ORG_ID = paf.IMS_ORG_ID))) JOIN WSMP_ADMIN.HCOS_PROFESSIONAL p ON ((paf.HCE_ID_PRFSNL = p.HCE_ID_PRFSNL))) LEFT JOIN WSMP_ADMIN.HCOS_AFFILIATION_TYPE at ON ((paf.AFFIL_TYPE_ID = at.AFFIL_TYPE_ID))) JOIN WSMP_ADMIN.HCOS_RELATIONSHIP_FACT rf ON ((b.IMS_ORG_ID = rf.IMS_ORG_ID_CHILD))) WHERE ((rf.IMS_ORG_ID_PARENT = 'INS00000226'::varchar(11)) AND (b.PHYSICAL_STATE = 'CA'::varchar(2)));

CREATE  VIEW WSMP_ADMIN_ORA.v_hcos_kaiser_contact_affil AS
SELECT p.IMS_ID AS ims_id, p.NPI AS npi, p.ALL_DEA AS all_dea, p.LAST_NAME AS last_name, p.FIRST_NAME AS first_name, p.MIDDLE_NAME AS middle_name, pt.TITLE_GROUP_DESC AS title_group_desc, b.IMS_ORG_ID AS ims_facility_number, b.BUSINESS_NAME AS business_name, b.PHYSICAL_ADDR_1 AS physical_addr_1, b.PHYSICAL_ADDR_2 AS physical_addr_2, b.PHYSICAL_CITY AS physical_city, b.PHYSICAL_STATE AS physical_state, b.PHYSICAL_ZIP AS physical_zip FROM ((((WSMP_ADMIN.HCOS_BUSINESS b JOIN WSMP_ADMIN.HCOS_CONTACT_AFFILTN_FACT caf ON ((b.IMS_ORG_ID = caf.IMS_ORG_ID))) JOIN WSMP_ADMIN.HCOS_PROFESSIONAL p ON ((caf.HCE_ID_PRFSNL = p.HCE_ID_PRFSNL))) LEFT JOIN WSMP_ADMIN.HCOS_PROFESSIONAL_TITLE pt ON ((caf.TITLE_GROUP_CODE = pt.TITLE_GROUP_CODE))) JOIN WSMP_ADMIN.HCOS_RELATIONSHIP_FACT rf ON ((b.IMS_ORG_ID = rf.IMS_ORG_ID_CHILD))) WHERE ((rf.IMS_ORG_ID_PARENT = 'INS00000226'::varchar(11)) AND (b.PHYSICAL_STATE = 'CA'::varchar(2)));

CREATE  VIEW WSMP_ADMIN_ORA.v_asi_voucher_redemption AS
SELECT 'asi'::varchar(3) AS provider, ar.RD_KEY AS rd_key, ar.PROGRAM_NUM AS program_num, ar.VOUCHER_NUM AS voucher_num, ar.CEPH_ID AS ceph_id, ar.NDC_CODE AS ndc_code, ar.PRODUCT_NAME AS product_name, ar.FILL_DATE AS fill_date, ar.QTY AS qty, ap.PROGRAM_DESC AS program_desc, ap.SALES_FORCE_ID AS sales_force_id, ap.PROGRAM_TYPE AS program_type, ar.COMP_INCLUDE AS comp_include FROM (WSMP_ADMIN.TFC_ASI_REDEMPTION_DETAIL ar LEFT JOIN WSMP_ADMIN.DIM_ASI_PROGRAM ap ON ((ap.ASI_PROGRAM_NUM = ar.PROGRAM_NUM))) WHERE (ar.REDEMPTION_TYPE = 'VOUCHER'::varchar(7)) ORDER BY ar.CEPH_ID, ar.FILL_DATE, ar.NDC_CODE;

CREATE  VIEW WSMP_ADMIN_ORA.v_asi_plan_name AS
SELECT tfc_ims_plan_xref.PAYER_PLAN_NUM AS payer_plan_num, tfc_ims_plan_xref.PLAN_NAME AS plan_name, CASE tfc_ims_plan_xref.PAYER_NUM WHEN NULLSEQUAL '000002'::varchar(6) THEN tfc_ims_plan_xref.PLAN_NAME ELSE tfc_ims_plan_xref.PAYER_NAME END AS payer_name, tfc_ims_plan_xref.MODEL AS model FROM WSMP_ADMIN.TFC_IMS_PLAN_XREF ORDER BY tfc_ims_plan_xref.PAYER_PLAN_NUM;

CREATE  VIEW WSMP_ADMIN_ORA.v_adasuve_sampling AS
SELECT stg_rems_facility.ENROLLMENT_ID AS enrollment_id, stg_rems_facility.SITE_NAME AS site_name, stg_rems_facility.ADDRESS_1 AS address_1, stg_rems_facility.ADDRESS_2 AS address_2, stg_rems_facility.CITY AS city, stg_rems_facility.STATE AS state, stg_rems_facility.ZIP_CODE AS zip_code FROM WSMP_ADMIN.STG_REMS_FACILITY WHERE ((stg_rems_facility.STATUS_DESCRIPTION = 'Enrolled'::varchar(8)) AND (stg_rems_facility.EXPIRATION_DATE > (statement_timestamp())::timestamp));

CREATE  VIEW WSMP_ADMIN_ORA.i_adasuve_rems_facility AS
SELECT stg_rems_facility.VEEVA_ACCOUNT_ID AS veeva_account_id, stg_rems_facility.NPI AS npi, stg_rems_facility.DEA AS dea, stg_rems_facility.ENROLLMENT_ID AS enrollment_id, stg_rems_facility.PROGRAM_NAME AS program_name, stg_rems_facility.HEALTHCARE_FACILITY_TYPE AS healthcare_facility_type, stg_rems_facility.SITE_NAME AS site_name, stg_rems_facility.ADDRESS_1 AS address_1, stg_rems_facility.ADDRESS_2 AS address_2, stg_rems_facility.CITY AS city, stg_rems_facility.STATE AS state, stg_rems_facility.ZIP_CODE AS zip_code, stg_rems_facility.FIRST_NAME AS first_name, stg_rems_facility.MIDDLE_NAME AS middle_name, stg_rems_facility.LAST_NAME AS last_name, stg_rems_facility.STATUS_DESCRIPTION AS status_description, stg_rems_facility.IN_PROGRESS_STEP AS in_progress_step, stg_rems_facility.PHONE_NUMBER AS phone_number, stg_rems_facility.EFFECTIVE_DATE AS effective_date, stg_rems_facility.EXPIRATION_DATE AS expiration_date, stg_rems_facility.LAST_BUILD_DATE AS last_build_date FROM WSMP_ADMIN.STG_REMS_FACILITY;

CREATE  VIEW WSMP_ADMIN_ORA.i_contact_data AS
SELECT d.ims_id, d.veeva_account_id, CASE WHEN (dncn.PRODUCT_NAME = 'NUVIGIL'::varchar(7)) THEN 'Y'::varchar(1) ELSE NULL END AS nuvigil_dnc_flag, CASE WHEN (dncf.PRODUCT_NAME = 'FENTORA'::varchar(7)) THEN 'Y'::varchar(1) ELSE NULL END AS fentora_dnc_flag, CASE WHEN (s.IMS_ID IS NOT NULL) THEN 'Y'::varchar(1) ELSE NULL END AS dnp_flag, r.status AS tirf_rems_flag, r.effective_date AS tirf_rems_effective_date, r.expiration_date AS tirf_rems_expiration_date, seg.PARAGARD_SEGMENT AS paragard_segment FROM ((((((SELECT ims_ids.ims_id, a.ID AS veeva_account_id FROM ((((SELECT tfc_ims_presc_demo_w.ims_id FROM WSMP_ADMIN.tfc_ims_presc_demo_w UNION SELECT dim_dnc.IMS_ID AS ims_id FROM WSMP_ADMIN.DIM_DNC) UNION SELECT debarred.IMS_ID AS ims_id FROM WSMP_ADMIN.DEBARRED WHERE (debarred.CURRENT_IND = 'Y'::varchar(1))) UNION SELECT vv_account.ID_VOD__C AS ims_id FROM WSMP_ADMIN.VV_ACCOUNT WHERE (vv_account.ID_VOD__C IS NOT NULL)) ims_ids LEFT JOIN WSMP_ADMIN.VV_ACCOUNT a ON ((ims_ids.ims_id = a.ID_VOD__C)))) d LEFT JOIN WSMP_ADMIN.DIM_DNC dncn ON (((d.ims_id = dncn.IMS_ID) AND (dncn.PRODUCT_NAME = 'NUVIGIL'::varchar(7))))) LEFT JOIN WSMP_ADMIN.DIM_DNC dncf ON (((d.ims_id = dncf.IMS_ID) AND (dncf.PRODUCT_NAME = 'FENTORA'::varchar(7))))) LEFT JOIN WSMP_ADMIN.DEBARRED s ON (((d.ims_id = s.IMS_ID) AND (s.CURRENT_IND = 'Y'::varchar(1))))) LEFT JOIN (SELECT r.IMS_ID AS ims_id, CASE WHEN ((r.STATUS = 'Enrolled'::varchar(8)) AND (r.PPAF_COUNT IS NOT NULL)) THEN concat('Enrolled-'::varchar(9), (r.PPAF_COUNT)::varchar) ELSE r.STATUS END AS status, r.EFFECTIVE_DATE AS effective_date, r.EXPIRATION_DATE AS expiration_date FROM WSMP_ADMIN.STG_REMS_PRESCRIBER r GROUP BY r.IMS_ID, CASE WHEN ((r.STATUS = 'Enrolled'::varchar(8)) AND (r.PPAF_COUNT IS NOT NULL)) THEN concat('Enrolled-'::varchar(9), (r.PPAF_COUNT)::varchar) ELSE r.STATUS END, r.EFFECTIVE_DATE, r.EXPIRATION_DATE) r ON ((d.ims_id = r.ims_id))) LEFT JOIN WSMP_ADMIN.STG_TW_PARAGARD_SEGMENT seg ON ((d.ims_id = seg.IMS_ID))) GROUP BY d.ims_id, d.veeva_account_id, CASE WHEN (dncn.PRODUCT_NAME = 'NUVIGIL'::varchar(7)) THEN 'Y'::varchar(1) ELSE NULL END, CASE WHEN (dncf.PRODUCT_NAME = 'FENTORA'::varchar(7)) THEN 'Y'::varchar(1) ELSE NULL END, CASE WHEN (s.IMS_ID IS NOT NULL) THEN 'Y'::varchar(1) ELSE NULL END, r.status, r.effective_date, r.expiration_date, seg.PARAGARD_SEGMENT;

CREATE  VIEW WSMP_ADMIN_ORA.roster_office_toolkit AS
(((((((((((SELECT lower(dim_csf_sales_roster_teva.USERNAME) AS username, dim_csf_sales_roster_teva.SALES_FORCE_ID AS sales_force_id FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((dim_csf_sales_roster_teva.USERNAME IS NOT NULL) AND (length(dim_csf_sales_roster_teva.TERRITORY_NUM) = 8)) UNION SELECT 'afoote'::varchar(6), 'TN'::varchar(2) FROM v_catalog.dual) UNION SELECT 'sbischof'::varchar(8), 'TN'::varchar(2) FROM v_catalog.dual) UNION SELECT 'phazel'::varchar(6), 'TN'::varchar(2) FROM v_catalog.dual) UNION SELECT 'gfowler'::varchar(7), 'TN'::varchar(2) FROM v_catalog.dual) UNION SELECT 'mtarrant'::varchar(8), 'TN'::varchar(2) FROM v_catalog.dual) UNION SELECT 'jpage'::varchar(5), 'TC'::varchar(2) FROM v_catalog.dual) UNION SELECT 'mday'::varchar(4), 'TC'::varchar(2) FROM v_catalog.dual) UNION SELECT 'kreedy'::varchar(6), 'TC'::varchar(2) FROM v_catalog.dual) UNION SELECT 'trainey'::varchar(7), 'TO'::varchar(2) FROM v_catalog.dual) UNION SELECT 'mkartman'::varchar(8), 'TO'::varchar(2) FROM v_catalog.dual) UNION SELECT 'dmack01'::varchar(7), 'TN'::varchar(2) FROM v_catalog.dual) UNION SELECT 'rkim'::varchar(4), 'TN'::varchar(2) FROM v_catalog.dual;

CREATE  VIEW WSMP_ADMIN_ORA.v_siebel_demo AS
SELECT c.ROW_ID AS csf_demo_id, p.X_SALES_FORCE AS sales_force_id, 'PROF'::varchar(4) AS demo_type, x.ATTRIB_03 AS ims_id, x.X_ATTRIB_50 AS hms_id, substr(btrim(x.ATTRIB_36), 1, 10) AS me_num, ca.DEA_NUM AS dea_num, ca.DEA_EXPR_DT AS dea_expir_date, substr(ca.X_ATTRIB_03, 1, 12) AS dea_drug_schedule, p.NAME AS territory_num, 'N'::varchar(1) AS house_acct_flag, 'A'::varchar(1) AS src_verification_status, c.LAST_NAME AS last_name, c.FST_NAME AS first_name, c.MID_NAME AS middle_name, c.PER_TITLE_SUFFIX AS suffix_name, fnx.CRRPT_FMT_CD AS degree, substr(btrim(ap.ADDR), 1, 75) AS address1, substr(btrim(ap.ADDR_LINE_2), 1, 75) AS address2, substr(btrim(ap.ADDR_LINE_3), 1, 75) AS address3, ap.CITY AS city, ap.STATE AS state, ap.ZIPCODE AS zip, c.WORK_PH_NUM AS phone, c.FAX_PH_NUM AS fax, c.CELL_PH_NUM AS mobile, c.EMAIL_ADDR AS email, ms.NAME AS prim_specialty, substr(btrim(l.LICENSE_NUM), 1, 20) AS state_license_number, l.STATE_CD AS state_license_state, CASE WHEN (l.X_OK_TO_SAMPLE_FLG = 'Y'::char(1)) THEN 'E'::varchar(1) ELSE 'I'::varchar(1) END AS state_license_elig_code, l.LICENSE_EXP_DT AS state_license_expir_date, substr(btrim(CASE WHEN ((btrim(fnx.CRRPT_FMT_CD) IS NOT NULL) AND (btrim(l.STATE_CD) IS NOT NULL) AND (btrim(l.LICENSE_NUM) IS NOT NULL)) THEN ((((btrim(fnx.CRRPT_FMT_CD) || '-'::varchar(1)) || btrim(l.STATE_CD)) || '-'::varchar(1)) || btrim(l.LICENSE_NUM)) ELSE NULL END), 1, 30) AS state_num, l.X_VALIDATION_DT AS sln_validation_date, CASE WHEN ((l.X_VALIDATION_DT IS NOT NULL) AND (l.X_OK_TO_SAMPLE_FLG = 'Y'::char(1))) THEN 'MedPro'::varchar(6) ELSE NULL END AS sln_validation_source, x.ATTRIB_09 AS no_spend, pc.X_ATTRIB_11 AS treats_es, CASE WHEN (p.X_SALES_FORCE = 'TC'::varchar(2)) THEN x.X_ATTRIB_58 ELSE NULL END AS nuvigil_dnc, CASE WHEN (p.X_SALES_FORCE = 'TC'::varchar(2)) THEN x.X_ATTRIB_83 ELSE NULL::"char" END AS nuvigil_rems_pb, CASE WHEN (p.X_SALES_FORCE = 'TC'::varchar(2)) THEN substr(x.X_ATTRIB_73, 1, 1) ELSE NULL END AS nuvigil_app, CASE WHEN (p.X_SALES_FORCE = 'TP'::varchar(2)) THEN x.X_ATTRIB_72 ELSE NULL END AS fentora_dnc, CASE WHEN (p.X_SALES_FORCE = 'TP'::varchar(2)) THEN x.X_ATTRIB_71 ELSE NULL::"char" END AS fentora_app, CASE WHEN (p.X_SALES_FORCE = 'TP'::varchar(2)) THEN x.ATTRIB_42 ELSE NULL END AS fentora_rems_status, pc.LAST_CALL_DT AS sfa_last_call_date, coalesce(cm2.CM_ID, cm1.CM_ID) AS cm_id, c.ROW_ID AS siebel_contact_row_id, ap.ROW_ID AS siebel_addr_per_row_id, 'Y'::varchar(1) AS ora_viewable_flag, c.CREATED AS sfa_create_date, (statement_timestamp())::timestamp AS last_build_date, NULL AS ceph_id, CASE WHEN (length(c.INTEGRATION_ID) = 18) THEN c.INTEGRATION_ID ELSE NULL END AS veeva_account_id, pc.STATUS AS territory_status FROM (((((((((((WSMP_ADMIN.S_CONTACT c JOIN WSMP_ADMIN.S_POSTN_CON pc ON ((pc.CON_ID = c.ROW_ID))) JOIN WSMP_ADMIN.S_POSTN p ON ((pc.POSTN_ID = p.ROW_ID))) JOIN WSMP_ADMIN.S_ORG_EXT o ON ((p.BU_ID = o.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT_X x ON ((x.ROW_ID = c.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT_FNX fnx ON ((fnx.ROW_ID = c.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_ADDR_PER ap ON ((ap.ROW_ID = pc.PR_ADDR_ID))) LEFT JOIN WSMP_ADMIN.S_MED_SPEC ms ON ((ms.ROW_ID = c.MED_SPEC_ID))) LEFT JOIN (SELECT iq.ROW_ID, iq.CREATED, iq.CREATED_BY, iq.LAST_UPD, iq.LAST_UPD_BY, iq.MODIFICATION_NUM, iq.CONFLICT_ID, iq.ACTIVE_FLG, iq.ADDR_PER_ID, iq.BL_ADDR_FLG, iq.FRAUD_FLG, iq.MAIN_ADDR_FLG, iq.RELATION_TYPE_CD, iq.SHIP_ADDR_FLG, iq.DEA_EXPR_DT, iq.END_DT, iq.FRI_1ST_CLOSE_TM, iq.FRI_1ST_OPEN_TM, iq.FRI_2ND_CLOSE_TM, iq.FRI_2ND_OPEN_TM, iq.MON_1ST_CLOSE_TM, iq.MON_1ST_OPEN_TM, iq.MON_2ND_CLOSE_TM, iq.MON_2ND_OPEN_TM, iq.NUM_MONTHS_AT_ADDR, iq.SAT_1ST_CLOSE_TM, iq.SAT_1ST_OPEN_TM, iq.SAT_2ND_CLOSE_TM, iq.SAT_2ND_OPEN_TM, iq.START_DT, iq.SUN_1ST_CLOSE_TM, iq.SUN_1ST_OPEN_TM, iq.SUN_2ND_CLOSE_TM, iq.SUN_2ND_OPEN_TM, iq.THU_1ST_CLOSE_TM, iq.THU_1ST_OPEN_TM, iq.THU_2ND_CLOSE_TM, iq.THU_2ND_OPEN_TM, iq.TUE_1ST_CLOSE_TM, iq.TUE_1ST_OPEN_TM, iq.TUE_2ND_CLOSE_TM, iq.TUE_2ND_OPEN_TM, iq.WED_1ST_CLOSE_TM, iq.WED_1ST_OPEN_TM, iq.WED_2ND_CLOSE_TM, iq.WED_2ND_OPEN_TM, iq.ACCNT_ID, iq.ADDR_MAIL_CD, iq.ADDR_TYPE_CD, iq.BRICK_ID, iq.BU_ID, iq.CONTACT_ID, iq.DEA_NUM, iq.DFLT_SHIP_PRIO_CD, iq.EMAIL_ADDR, iq.FAX_PH_NUM, iq.MAIL_TYPE_CD, iq.OCCUPANCY_CD, iq.ORG_GROUP_ID, iq.PH_NUM, iq.TRNSPRT_ZONE_CD, iq.X_ATTRIB_01, iq.X_ATTRIB_02, iq.X_ATTRIB_03, iq.X_ATTRIB_04, iq.X_ATTRIB_05, iq.X_ATTRIB_06, iq.X_ATTRIB_07, iq.X_OK_TO_SAMPLE, iq.ADDRESSEE, iq.ALIGNMENT_FLG, iq.DB_LAST_UPD, iq.DB_LAST_UPD_SRC, iq.YEARLY_END_DT, iq.YEARLY_START_DT, iq.X_SRC_LAST_UPD, iq.rnk FROM (SELECT sca.ROW_ID, sca.CREATED, sca.CREATED_BY, sca.LAST_UPD, sca.LAST_UPD_BY, sca.MODIFICATION_NUM, sca.CONFLICT_ID, sca.ACTIVE_FLG, sca.ADDR_PER_ID, sca.BL_ADDR_FLG, sca.FRAUD_FLG, sca.MAIN_ADDR_FLG, sca.RELATION_TYPE_CD, sca.SHIP_ADDR_FLG, sca.DEA_EXPR_DT, sca.END_DT, sca.FRI_1ST_CLOSE_TM, sca.FRI_1ST_OPEN_TM, sca.FRI_2ND_CLOSE_TM, sca.FRI_2ND_OPEN_TM, sca.MON_1ST_CLOSE_TM, sca.MON_1ST_OPEN_TM, sca.MON_2ND_CLOSE_TM, sca.MON_2ND_OPEN_TM, sca.NUM_MONTHS_AT_ADDR, sca.SAT_1ST_CLOSE_TM, sca.SAT_1ST_OPEN_TM, sca.SAT_2ND_CLOSE_TM, sca.SAT_2ND_OPEN_TM, sca.START_DT, sca.SUN_1ST_CLOSE_TM, sca.SUN_1ST_OPEN_TM, sca.SUN_2ND_CLOSE_TM, sca.SUN_2ND_OPEN_TM, sca.THU_1ST_CLOSE_TM, sca.THU_1ST_OPEN_TM, sca.THU_2ND_CLOSE_TM, sca.THU_2ND_OPEN_TM, sca.TUE_1ST_CLOSE_TM, sca.TUE_1ST_OPEN_TM, sca.TUE_2ND_CLOSE_TM, sca.TUE_2ND_OPEN_TM, sca.WED_1ST_CLOSE_TM, sca.WED_1ST_OPEN_TM, sca.WED_2ND_CLOSE_TM, sca.WED_2ND_OPEN_TM, sca.ACCNT_ID, sca.ADDR_MAIL_CD, sca.ADDR_TYPE_CD, sca.BRICK_ID, sca.BU_ID, sca.CONTACT_ID, sca.DEA_NUM, sca.DFLT_SHIP_PRIO_CD, sca.EMAIL_ADDR, sca.FAX_PH_NUM, sca.MAIL_TYPE_CD, sca.OCCUPANCY_CD, sca.ORG_GROUP_ID, sca.PH_NUM, sca.TRNSPRT_ZONE_CD, sca.X_ATTRIB_01, sca.X_ATTRIB_02, sca.X_ATTRIB_03, sca.X_ATTRIB_04, sca.X_ATTRIB_05, sca.X_ATTRIB_06, sca.X_ATTRIB_07, sca.X_OK_TO_SAMPLE, sca.ADDRESSEE, sca.ALIGNMENT_FLG, sca.DB_LAST_UPD, sca.DB_LAST_UPD_SRC, sca.YEARLY_END_DT, sca.YEARLY_START_DT, sca.X_SRC_LAST_UPD, row_number() OVER (PARTITION BY sca.CONTACT_ID, sca.ADDR_PER_ID ORDER BY sca.LAST_UPD DESC, sca.CREATED DESC) AS rnk FROM WSMP_ADMIN.S_CON_ADDR sca) iq WHERE (iq.rnk = 1)) ca ON (((ca.ADDR_PER_ID = pc.PR_ADDR_ID) AND (ca.CONTACT_ID = pc.CON_ID)))) LEFT JOIN WSMP_ADMIN.S_STATE_LIC_LS l ON (((l.ROW_ID = ca.X_ATTRIB_02) AND (l.CONTACT_ID = ca.CONTACT_ID) AND (l.STATUS_CD <> 'Invalid'::varchar(7))))) LEFT JOIN WSMP_ADMIN.STG_CM_ID_XREF cm1 ON (((c.ROW_ID = cm1.ID_NUM) AND (cm1.ID_TYPE = 'SIEBEL_ID'::varchar(9))))) LEFT JOIN WSMP_ADMIN.STG_CM_ID_XREF cm2 ON (((x.ATTRIB_03 = cm2.ID_NUM) AND (cm2.ID_TYPE = 'IMS_ID'::varchar(6))))) WHERE ((p.X_SALES_FORCE = ANY (ARRAY['TB'::varchar(2), 'TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2), 'TR'::varchar(2), 'TW'::varchar(2)])) AND (p.NAME !~~ '%SiebelAdministrator%'::varchar(21)) AND (p.NAME <> 'Align_2007'::varchar(10)) AND (NOT ((x.ATTRIB_03 IS NULL) AND (c.DEGREE = ANY (ARRAY['Billing Staff'::varchar(13), 'Office Staff'::varchar(12), 'Other Contact'::varchar(13), 'Pharmacist/Pharm D'::varchar(18), 'Practice Manager'::varchar(16), 'Refill Coordinator'::varchar(18), 'Reimbursement Specialist'::varchar(24)])))));

CREATE  VIEW WSMP_ADMIN_ORA.v_siebel_calls AS
SELECT rep_p.X_SALES_FORCE AS sales_force_id, ea.PAR_EVT_ID AS par_evt_id, ea.ROW_ID AS csf_call_id, ea.TARGET_PER_ID AS csf_demo_id, 'PROF'::varchar(4) AS legacy_call_type, ea.NAME AS name_on_call, ea.ZIPCODE AS zip_on_call, ea.SUBTYPE_CD AS subtype_cd, ea.TODO_CD AS todo_cd, ea.INTEGRATION_ID AS integration_id, ea.ROW_ID AS siebel_evt_act_row_id, ea.TARGET_PER_ID AS siebel_target_per_id, d.ims_id, d.cm_id, d.me_num, ca.DEA_NUM AS dea_num, emp.CSN AS rep_id, rep_p.NAME AS territory_num, trunc(ea.APPT_START_DT, 'DD'::varchar(2)) AS call_date, details.first_detailed_product, details.second_detailed_product, details.third_detailed_product, details.fourth_detailed_product, details.fifth_detailed_product, details.sixth_detailed_product, CASE WHEN (length(c.INTEGRATION_ID) = 18) THEN c.INTEGRATION_ID ELSE NULL END AS veeva_account_id FROM (((((((WSMP_ADMIN.S_EVT_ACT ea JOIN WSMP_ADMIN.S_CONTACT c ON ((c.ROW_ID = ea.TARGET_PER_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT_X x ON ((x.ROW_ID = c.ROW_ID))) JOIN WSMP_ADMIN.S_POSTN rep_p ON ((rep_p.ROW_ID = ea.OWNER_POSTN_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT emp ON ((emp.ROW_ID = ea.CREATED_BY))) LEFT JOIN (SELECT iq.ims_id, iq.cm_id, iq.me_num, iq.siebel_contact_row_id, iq.rnk FROM (SELECT v_siebel_demo.ims_id, v_siebel_demo.cm_id, v_siebel_demo.me_num, v_siebel_demo.siebel_contact_row_id, row_number() OVER (PARTITION BY v_siebel_demo.siebel_contact_row_id ORDER BY v_siebel_demo.veeva_account_id, v_siebel_demo.sales_force_id) AS rnk FROM WSMP_ADMIN.v_siebel_demo) iq WHERE (iq.rnk = 1)) d ON ((c.ROW_ID = d.siebel_contact_row_id))) LEFT JOIN (SELECT iq2.ROW_ID, iq2.CREATED, iq2.CREATED_BY, iq2.LAST_UPD, iq2.LAST_UPD_BY, iq2.MODIFICATION_NUM, iq2.CONFLICT_ID, iq2.ACTIVE_FLG, iq2.ADDR_PER_ID, iq2.BL_ADDR_FLG, iq2.FRAUD_FLG, iq2.MAIN_ADDR_FLG, iq2.RELATION_TYPE_CD, iq2.SHIP_ADDR_FLG, iq2.DEA_EXPR_DT, iq2.END_DT, iq2.FRI_1ST_CLOSE_TM, iq2.FRI_1ST_OPEN_TM, iq2.FRI_2ND_CLOSE_TM, iq2.FRI_2ND_OPEN_TM, iq2.MON_1ST_CLOSE_TM, iq2.MON_1ST_OPEN_TM, iq2.MON_2ND_CLOSE_TM, iq2.MON_2ND_OPEN_TM, iq2.NUM_MONTHS_AT_ADDR, iq2.SAT_1ST_CLOSE_TM, iq2.SAT_1ST_OPEN_TM, iq2.SAT_2ND_CLOSE_TM, iq2.SAT_2ND_OPEN_TM, iq2.START_DT, iq2.SUN_1ST_CLOSE_TM, iq2.SUN_1ST_OPEN_TM, iq2.SUN_2ND_CLOSE_TM, iq2.SUN_2ND_OPEN_TM, iq2.THU_1ST_CLOSE_TM, iq2.THU_1ST_OPEN_TM, iq2.THU_2ND_CLOSE_TM, iq2.THU_2ND_OPEN_TM, iq2.TUE_1ST_CLOSE_TM, iq2.TUE_1ST_OPEN_TM, iq2.TUE_2ND_CLOSE_TM, iq2.TUE_2ND_OPEN_TM, iq2.WED_1ST_CLOSE_TM, iq2.WED_1ST_OPEN_TM, iq2.WED_2ND_CLOSE_TM, iq2.WED_2ND_OPEN_TM, iq2.ACCNT_ID, iq2.ADDR_MAIL_CD, iq2.ADDR_TYPE_CD, iq2.BRICK_ID, iq2.BU_ID, iq2.CONTACT_ID, iq2.DEA_NUM, iq2.DFLT_SHIP_PRIO_CD, iq2.EMAIL_ADDR, iq2.FAX_PH_NUM, iq2.MAIL_TYPE_CD, iq2.OCCUPANCY_CD, iq2.ORG_GROUP_ID, iq2.PH_NUM, iq2.TRNSPRT_ZONE_CD, iq2.X_ATTRIB_01, iq2.X_ATTRIB_02, iq2.X_ATTRIB_03, iq2.X_ATTRIB_04, iq2.X_ATTRIB_05, iq2.X_ATTRIB_06, iq2.X_ATTRIB_07, iq2.X_OK_TO_SAMPLE, iq2.ADDRESSEE, iq2.ALIGNMENT_FLG, iq2.DB_LAST_UPD, iq2.DB_LAST_UPD_SRC, iq2.YEARLY_END_DT, iq2.YEARLY_START_DT, iq2.X_SRC_LAST_UPD, iq2.rnk FROM (SELECT ca.ROW_ID, ca.CREATED, ca.CREATED_BY, ca.LAST_UPD, ca.LAST_UPD_BY, ca.MODIFICATION_NUM, ca.CONFLICT_ID, ca.ACTIVE_FLG, ca.ADDR_PER_ID, ca.BL_ADDR_FLG, ca.FRAUD_FLG, ca.MAIN_ADDR_FLG, ca.RELATION_TYPE_CD, ca.SHIP_ADDR_FLG, ca.DEA_EXPR_DT, ca.END_DT, ca.FRI_1ST_CLOSE_TM, ca.FRI_1ST_OPEN_TM, ca.FRI_2ND_CLOSE_TM, ca.FRI_2ND_OPEN_TM, ca.MON_1ST_CLOSE_TM, ca.MON_1ST_OPEN_TM, ca.MON_2ND_CLOSE_TM, ca.MON_2ND_OPEN_TM, ca.NUM_MONTHS_AT_ADDR, ca.SAT_1ST_CLOSE_TM, ca.SAT_1ST_OPEN_TM, ca.SAT_2ND_CLOSE_TM, ca.SAT_2ND_OPEN_TM, ca.START_DT, ca.SUN_1ST_CLOSE_TM, ca.SUN_1ST_OPEN_TM, ca.SUN_2ND_CLOSE_TM, ca.SUN_2ND_OPEN_TM, ca.THU_1ST_CLOSE_TM, ca.THU_1ST_OPEN_TM, ca.THU_2ND_CLOSE_TM, ca.THU_2ND_OPEN_TM, ca.TUE_1ST_CLOSE_TM, ca.TUE_1ST_OPEN_TM, ca.TUE_2ND_CLOSE_TM, ca.TUE_2ND_OPEN_TM, ca.WED_1ST_CLOSE_TM, ca.WED_1ST_OPEN_TM, ca.WED_2ND_CLOSE_TM, ca.WED_2ND_OPEN_TM, ca.ACCNT_ID, ca.ADDR_MAIL_CD, ca.ADDR_TYPE_CD, ca.BRICK_ID, ca.BU_ID, ca.CONTACT_ID, ca.DEA_NUM, ca.DFLT_SHIP_PRIO_CD, ca.EMAIL_ADDR, ca.FAX_PH_NUM, ca.MAIL_TYPE_CD, ca.OCCUPANCY_CD, ca.ORG_GROUP_ID, ca.PH_NUM, ca.TRNSPRT_ZONE_CD, ca.X_ATTRIB_01, ca.X_ATTRIB_02, ca.X_ATTRIB_03, ca.X_ATTRIB_04, ca.X_ATTRIB_05, ca.X_ATTRIB_06, ca.X_ATTRIB_07, ca.X_OK_TO_SAMPLE, ca.ADDRESSEE, ca.ALIGNMENT_FLG, ca.DB_LAST_UPD, ca.DB_LAST_UPD_SRC, ca.YEARLY_END_DT, ca.YEARLY_START_DT, ca.X_SRC_LAST_UPD, row_number() OVER (PARTITION BY ca.CONTACT_ID, ca.ADDR_PER_ID ORDER BY ca.LAST_UPD DESC, ca.CREATED DESC) AS rnk FROM WSMP_ADMIN.S_CON_ADDR ca) iq2 WHERE (iq2.rnk = 1)) ca ON (((ca.ADDR_PER_ID = ea.TARGET_PER_ADDR_ID) AND (ca.CONTACT_ID = ea.TARGET_PER_ID)))) LEFT JOIN (SELECT d.activity_id, max(CASE WHEN (d.priority = 1) THEN d.product_name ELSE NULL END) AS first_detailed_product, max(CASE WHEN (d.priority = 2) THEN d.product_name ELSE NULL END) AS second_detailed_product, max(CASE WHEN (d.priority = 3) THEN d.product_name ELSE NULL END) AS third_detailed_product, max(CASE WHEN (d.priority = 4) THEN d.product_name ELSE NULL END) AS fourth_detailed_product, max(CASE WHEN (d.priority = 5) THEN d.product_name ELSE NULL END) AS fifth_detailed_product, max(CASE WHEN (d.priority = 6) THEN d.product_name ELSE NULL END) AS sixth_detailed_product FROM (SELECT appl.ACTIVITY_ID AS activity_id, upper(spi.NAME) AS product_name, row_number() OVER (PARTITION BY appl.ACTIVITY_ID ORDER BY appl.PRIORITY_NUM, upper(spi.NAME)) AS priority FROM (WSMP_ADMIN.S_ACT_PROD_APPL appl LEFT JOIN WSMP_ADMIN.S_PROD_INT spi ON ((appl.PRDINT_ID = spi.ROW_ID))) WHERE (appl.CONFLICT_ID = '0'::varchar(1))) d GROUP BY d.activity_id) details ON ((details.activity_id = ea.PAR_EVT_ID))) WHERE ((ea.EVT_STAT_CD = 'Submitted'::varchar(9)) AND (rep_p.POSTN_TYPE_CD = ANY (ARRAY['Sales Representative'::varchar(20), 'TSP Test Position'::varchar(17)])) AND (ea.OWNER_POSTN_ID <> '0-5220'::varchar(6)) AND (((ea.APPT_START_DT >= '2012-01-01 00:00:00'::timestamp) AND (rep_p.X_SALES_FORCE = ANY (ARRAY['TB'::varchar(2), 'TN'::varchar(2), 'TR'::varchar(2), 'TW'::varchar(2)]))) OR ((ea.APPT_START_DT >= '2012-03-01 00:00:00'::timestamp) AND (rep_p.X_SALES_FORCE = ANY (ARRAY['TC'::varchar(2), 'TP'::varchar(2)])))) AND (ea.APPT_START_DT < (statement_timestamp())::timestamp) AND (ea.SUBTYPE_CD = ANY (ARRAY['Contact Call'::varchar(12), 'Attendee Call'::varchar(13)])) AND ((ea.TODO_CD ~~ '%Detail%'::varchar(8)) OR (ea.TODO_CD ~~ '%Call%'::varchar(6))));

CREATE  VIEW WSMP_ADMIN_ORA.v_siebel_bp_affiliations AS
SELECT oex.ROW_ID AS siebel_account_row_id, oex.X_ATTRIB_109 AS bp_code, c.ROW_ID AS siebel_contact_row_id, cx.ATTRIB_03 AS ims_id FROM (((WSMP_ADMIN.S_ORG_EXT_X oex JOIN WSMP_ADMIN.S_PARTY_PER pp ON ((oex.ROW_ID = pp.PARTY_ID))) JOIN WSMP_ADMIN.S_CONTACT c ON ((pp.PERSON_ID = c.ROW_ID))) LEFT JOIN WSMP_ADMIN.S_CONTACT_X cx ON ((cx.ROW_ID = c.ROW_ID))) WHERE (oex.X_ATTRIB_109 IS NOT NULL);

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_calls AS
SELECT c.ID AS call_id, trunc((c.LOCAL_CALL_DATETIME_VOD__C)::timestamp, 'DD'::varchar(2)) AS call_date, h.submit_date, c.LOCAL_CALL_DATETIME_VOD__C AS call_datetime, a.ID AS csf_demo_id, substr(c.TERRITORY_VOD__C, 1, 2) AS sales_force_id, c.TERRITORY_VOD__C AS territory_num, c.CALL_TYPE_VOD__C AS call_type_vod__c, c.ACCOUNT_VOD__C AS demo_id, CASE WHEN (rta.NAME = ANY (ARRAY['Hospital_vod'::varchar(12), 'Pharmacy_vod'::varchar(12), 'Practice_vod'::varchar(12), 'ParaGard_TVA'::varchar(12)])) THEN 'ACCT'::varchar(4) WHEN ((rta.NAME = 'Professional_vod'::varchar(16)) AND (a.ID_VOD__C IS NULL) AND (a.CREDENTIALS_VOD__C = ANY (ARRAY['Nurse'::varchar(5), 'Billing Staff'::varchar(13), 'Office Staff'::varchar(12), 'Other Contact'::varchar(13), 'Pharmacist/Pharm D'::varchar(18), 'Practice Manager'::varchar(16), 'Refill Coordinator'::varchar(18), 'Reimbursement Specialist'::varchar(24)]))) THEN 'CONT'::varchar(4) WHEN (rta.NAME = 'Staff'::varchar(5)) THEN 'CONT'::varchar(4) WHEN (rta.NAME = 'Professional_vod'::varchar(16)) THEN 'PROF'::varchar(4) ELSE 'UNK'::varchar(3) END AS legacy_call_type, substr(c.ENTITY_DISPLAY_NAME_VOD__C, 1, 150) AS name_on_call, c.ZIP_VOD__C AS zip_on_call, a.ID_VOD__C AS ims_id, a.ACCOUNT_MASTER_ID_TVA__C AS hms_id, a.NPI_VOD__C AS npi, a.CREDENTIALS_VOD__C AS degree, a.ID AS veeva_account_id, substr(btrim(a.ME__C), 1, 10) AS me_num, c.DEA_VOD__C AS dea_num, CASE WHEN (NOT regexp_like(a.EXTERNAL_ID_VOD__C, '[[:digit:]]{9}'::varchar(14), ''::varchar)) THEN a.EXTERNAL_ID_VOD__C ELSE NULL END AS siebel_target_per_id, CASE WHEN regexp_like(a.EXTERNAL_ID_VOD__C, '[[:digit:]]{9}'::varchar(14), ''::varchar) THEN a.EXTERNAL_ID_VOD__C ELSE NULL END AS bp_code, c.OWNERID AS ownerid, u.EMPLOYEENUMBER AS employeenumber, c.PARENT_CALL_VOD__C AS parent_call_vod__c, CASE WHEN (rtc.NAME = 'Account Management'::varchar(18)) THEN upper(rtc.NAME) ELSE d.first_detailed_product END AS first_detailed_product, d.second_detailed_product, d.third_detailed_product, d.fourth_detailed_product, d.fifth_detailed_product, d.sixth_detailed_product, c.CREATEDBYID AS created_by, c.CREATEDDATE AS created_date, coalesce(c.ATTENDEES_VOD__C, 0::numeric(18,0)) AS attendees, CASE WHEN (c.ATTENDEE_TYPE_VOD__C = 'Group_Account_vod'::varchar(17)) THEN 'Group'::varchar(5) WHEN (c.ATTENDEE_TYPE_VOD__C = 'Person_Account_vod'::varchar(18)) THEN 'Person'::varchar(6) ELSE c.ATTENDEE_TYPE_VOD__C END AS attendee_type FROM ((((((WSMP_ADMIN.VV_CALL2_VOD__C c JOIN WSMP_ADMIN.VV_ACCOUNT a ON ((c.ACCOUNT_VOD__C = a.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rtc ON ((c.RECORDTYPEID = rtc.ID))) JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((a.RECORDTYPEID = rta.ID))) LEFT JOIN (SELECT VV_CALL2_VOD__HISTORY.PARENTID AS parentid, trunc(max(VV_CALL2_VOD__HISTORY.CREATEDDATE), 'DD'::varchar(2)) AS submit_date FROM WSMP_ADMIN.VV_CALL2_VOD__HISTORY WHERE (VV_CALL2_VOD__HISTORY.NEWVALUE = 'Submitted_vod'::varchar(13)) GROUP BY VV_CALL2_VOD__HISTORY.PARENTID) h ON ((c.ID = h.parentid))) LEFT JOIN WSMP_ADMIN.VV_USER u ON ((c.OWNERID = u.ID))) LEFT JOIN (SELECT d.call2_vod__c, max(CASE WHEN (d.priority = 1) THEN d.product_name ELSE NULL END) AS first_detailed_product, max(CASE WHEN (d.priority = 2) THEN d.product_name ELSE NULL END) AS second_detailed_product, max(CASE WHEN (d.priority = 3) THEN d.product_name ELSE NULL END) AS third_detailed_product, max(CASE WHEN (d.priority = 4) THEN d.product_name ELSE NULL END) AS fourth_detailed_product, max(CASE WHEN (d.priority = 5) THEN d.product_name ELSE NULL END) AS fifth_detailed_product, max(CASE WHEN (d.priority = 6) THEN d.product_name ELSE NULL END) AS sixth_detailed_product FROM (SELECT d.CALL2_VOD__C AS call2_vod__c, row_number() OVER (PARTITION BY d.CALL2_VOD__C ORDER BY d.DETAIL_PRIORITY_VOD__C, p.NAME) AS priority, upper(p.NAME) AS product_name FROM (WSMP_ADMIN.VV_CALL2_DETAIL_VOD__C d JOIN WSMP_ADMIN.VV_PRODUCT_VOD__C p ON ((d.PRODUCT_VOD__C = p.ID)))) d GROUP BY d.call2_vod__c) d ON ((d.call2_vod__c = c.ID))) WHERE ((c.STATUS_VOD__C = 'Submitted_vod'::varchar(13)) AND (c.CALL_DATE_VOD__C < trunc((statement_timestamp())::timestamp, 'DD'::varchar(2))) AND (c.CALL_TYPE_VOD__C <> 'Sample Only'::varchar(11)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_asi_mkt_access_obw_wake AS
SELECT mpzd.ZIP AS zip, mpzd.STATE AS state, rx.plan_id AS payer_plan_num, to_char(rx.ims_report_num, '00'::varchar(2)) AS report_num, to_char(rx.ims_product_group_num, '000000000'::varchar(9)) AS ims_product_group_num, ((substr(rx.data_date, 1, 2) || '/20'::varchar(3)) || substr(rx.data_date, 5, 2)) AS data_month, sum((((rx.nrx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_001, sum((((rx.nrx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_002, sum((((rx.nrx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_003, sum((((rx.nrx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_004, sum((((rx.nrx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_005, sum((((rx.nrx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_006, sum((((rx.nrx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_007, sum((((rx.nrx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_008, sum((((rx.nrx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_009, sum((((rx.nrx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_010, sum((((rx.nrx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_011, sum((((rx.nrx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_012, sum((((rx.nrx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_013, sum((((rx.nrx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_014, sum((((rx.nrx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_015, sum((((rx.nrx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_016, sum((((rx.nrx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_017, sum((((rx.nrx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_018, sum((((rx.nrx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_019, sum((((rx.nrx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_020, sum((((rx.nrx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_021, sum((((rx.nrx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_022, sum((((rx.nrx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_023, sum((((rx.nrx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS nrx_024, sum((((rx.trx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_001, sum((((rx.trx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_002, sum((((rx.trx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_003, sum((((rx.trx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_004, sum((((rx.trx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_005, sum((((rx.trx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_006, sum((((rx.trx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_007, sum((((rx.trx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_008, sum((((rx.trx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_009, sum((((rx.trx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_010, sum((((rx.trx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_011, sum((((rx.trx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_012, sum((((rx.trx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_013, sum((((rx.trx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_014, sum((((rx.trx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_015, sum((((rx.trx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_016, sum((((rx.trx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_017, sum((((rx.trx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_018, sum((((rx.trx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_019, sum((((rx.trx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_020, sum((((rx.trx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_021, sum((((rx.trx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_022, sum((((rx.trx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_023, sum((((rx.trx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3)) AS trx_024 FROM (((ims.stg_ims_mhj_qty_m rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_QTY) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) JOIN WSMP_ADMIN.MARKET_PRESC_ZIP_DIVISOR mpzd ON (((p.MARKET_NAME = mpzd.MARKET_NAME) AND (rx.ims_id = mpzd.IMS_ID)))) WHERE (p.MARKET_NAME = 'WAKE'::varchar(4)) GROUP BY mpzd.ZIP, mpzd.STATE, rx.plan_id, to_char(rx.ims_report_num, '00'::varchar(2)), to_char(rx.ims_product_group_num, '000000000'::varchar(9)), ((substr(rx.data_date, 1, 2) || '/20'::varchar(3)) || substr(rx.data_date, 5, 2)) UNION ALL SELECT mpzd.ZIP AS zip, mpzd.STATE AS state, rx.plan_id AS payer_plan_num, to_char(rx.ims_report_num, '00'::varchar(2)) AS report_num, to_char(rx.ims_product_group_num, '000000000'::varchar(9)) AS ims_product_group_num, ((substr(rx.data_date, 1, 2) || '/20'::varchar(3)) || substr(rx.data_date, 5, 2)) AS data_month, sum(rx.nrx_001) AS nrx_001, sum(rx.nrx_002) AS nrx_002, sum(rx.nrx_003) AS nrx_003, sum(rx.nrx_004) AS nrx_004, sum(rx.nrx_005) AS nrx_005, sum(rx.nrx_006) AS nrx_006, sum(rx.nrx_007) AS nrx_007, sum(rx.nrx_008) AS nrx_008, sum(rx.nrx_009) AS nrx_009, sum(rx.nrx_010) AS nrx_010, sum(rx.nrx_011) AS nrx_011, sum(rx.nrx_012) AS nrx_012, sum(rx.nrx_013) AS nrx_013, sum(rx.nrx_014) AS nrx_014, sum(rx.nrx_015) AS nrx_015, sum(rx.nrx_016) AS nrx_016, sum(rx.nrx_017) AS nrx_017, sum(rx.nrx_018) AS nrx_018, sum(rx.nrx_019) AS nrx_019, sum(rx.nrx_020) AS nrx_020, sum(rx.nrx_021) AS nrx_021, sum(rx.nrx_022) AS nrx_022, sum(rx.nrx_023) AS nrx_023, sum(rx.nrx_024) AS nrx_024, sum(rx.trx_001) AS trx_001, sum(rx.trx_002) AS trx_002, sum(rx.trx_003) AS trx_003, sum(rx.trx_004) AS trx_004, sum(rx.trx_005) AS trx_005, sum(rx.trx_006) AS trx_006, sum(rx.trx_007) AS trx_007, sum(rx.trx_008) AS trx_008, sum(rx.trx_009) AS trx_009, sum(rx.trx_010) AS trx_010, sum(rx.trx_011) AS trx_011, sum(rx.trx_012) AS trx_012, sum(rx.trx_013) AS trx_013, sum(rx.trx_014) AS trx_014, sum(rx.trx_015) AS trx_015, sum(rx.trx_016) AS trx_016, sum(rx.trx_017) AS trx_017, sum(rx.trx_018) AS trx_018, sum(rx.trx_019) AS trx_019, sum(rx.trx_020) AS trx_020, sum(rx.trx_021) AS trx_021, sum(rx.trx_022) AS trx_022, sum(rx.trx_023) AS trx_023, sum(rx.trx_024) AS trx_024 FROM (((ims.stg_ims_mhj_cnt_m rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_CNT) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) LEFT JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) JOIN WSMP_ADMIN.MARKET_PRESC_ZIP_DIVISOR mpzd ON (((p.MARKET_NAME = mpzd.MARKET_NAME) AND (rx.ims_id = mpzd.IMS_ID)))) WHERE ((p.MARKET_NAME = 'WAKE'::varchar(4)) AND (nf.PRODUCT_CODE IS NULL)) GROUP BY mpzd.ZIP, mpzd.STATE, rx.plan_id, to_char(rx.ims_report_num, '00'::varchar(2)), to_char(rx.ims_product_group_num, '000000000'::varchar(9)), ((substr(rx.data_date, 1, 2) || '/20'::varchar(3)) || substr(rx.data_date, 5, 2));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Paytype AS
SELECT rx.model, rx.payment_method FROM WSMP_ADMIN.dw_presc_plan_rx_w rx WHERE ((rx.product_code = ANY (ARRAY['330-14-001'::varchar(10), '330-14-007'::varchar(10), '330-14-009'::varchar(10), '330-14-0025'::varchar(11), '330-16-050'::varchar(10), '330-14-003'::varchar(10), '330-14-008'::varchar(10), '330-16-055'::varchar(10), '330-14-004'::varchar(10), '330-16-056'::varchar(10), '330-14-006'::varchar(10), '330-15-050'::varchar(10), '330-14-005'::varchar(10), '330-15-005'::varchar(10), '330-12-002'::varchar(10), '330-15-010'::varchar(10), '330-15-019'::varchar(10), '330-12-015'::varchar(10), '330-15-015'::varchar(10), '330-12-003'::varchar(10), '330-15-025'::varchar(10), '330-12-023'::varchar(10), '330-15-030'::varchar(10), '330-12-019'::varchar(10), '330-15-047'::varchar(10), '330-15-050'::varchar(10), '330-13-020'::varchar(10), '330-16-020'::varchar(10), '330-13-021'::varchar(10), '330-13-016'::varchar(10), '330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10), '330-16-027'::varchar(10), '330-16-028'::varchar(10), '330-16-029'::varchar(10), '330-13-009'::varchar(10), '330-13-005'::varchar(10), '330-13-006'::varchar(10), '330-13-011'::varchar(10), '330-15-019'::varchar(10), '330-12-015'::varchar(10), '330-15-015'::varchar(10), '330-12-003'::varchar(10), '330-15-025'::varchar(10), '330-12-023'::varchar(10), '330-15-001'::varchar(10), '330-15-030'::varchar(10), '330-12-019'::varchar(10), '330-15-047'::varchar(10), '330-15-040'::varchar(10)])) AND (length(rx.ims_id) = 7)) GROUP BY rx.model, rx.payment_method;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_planname AS
SELECT rx.payer_plan_num, rx.plan_name, rx.model, rx.payer_name FROM WSMP_ADMIN.dw_presc_plan_rx_w rx WHERE ((rx.product_code = ANY (ARRAY['330-14-001'::varchar(10), '330-14-007'::varchar(10), '330-14-009'::varchar(10), '330-14-0025'::varchar(11), '330-16-050'::varchar(10), '330-14-003'::varchar(10), '330-14-008'::varchar(10), '330-16-055'::varchar(10), '330-14-004'::varchar(10), '330-16-056'::varchar(10), '330-14-006'::varchar(10), '330-15-050'::varchar(10), '330-14-005'::varchar(10), '330-15-005'::varchar(10), '330-12-002'::varchar(10), '330-15-010'::varchar(10), '330-15-019'::varchar(10), '330-12-015'::varchar(10), '330-15-015'::varchar(10), '330-12-003'::varchar(10), '330-15-025'::varchar(10), '330-12-023'::varchar(10), '330-15-030'::varchar(10), '330-12-019'::varchar(10), '330-15-047'::varchar(10), '330-15-050'::varchar(10), '330-13-020'::varchar(10), '330-16-020'::varchar(10), '330-13-021'::varchar(10), '330-13-016'::varchar(10), '330-13-022'::varchar(10), '330-13-023'::varchar(10), '330-13-024'::varchar(10), '330-13-025'::varchar(10), '330-13-026'::varchar(10), '330-13-027'::varchar(10), '330-13-028'::varchar(10), '330-13-029'::varchar(10), '330-13-030'::varchar(10), '330-16-027'::varchar(10), '330-16-028'::varchar(10), '330-16-029'::varchar(10), '330-13-009'::varchar(10), '330-13-005'::varchar(10), '330-13-006'::varchar(10), '330-13-011'::varchar(10), '330-15-019'::varchar(10), '330-12-015'::varchar(10), '330-15-015'::varchar(10), '330-12-003'::varchar(10), '330-15-025'::varchar(10), '330-12-023'::varchar(10), '330-15-001'::varchar(10), '330-15-030'::varchar(10), '330-12-019'::varchar(10), '330-15-047'::varchar(10), '330-15-040'::varchar(10)])) AND (length(rx.ims_id) = 7)) GROUP BY rx.payer_plan_num, rx.plan_name, rx.model, rx.payer_name;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_factory_sales_852 AS
SELECT STG_FACTORY_SALES_852.TRADING_PARTNER, STG_FACTORY_SALES_852.DISTRIB_CENTER, STG_FACTORY_SALES_852.DISTRIB_CENTER_DEA_NUM, to_char(STG_FACTORY_SALES_852.REPORTING_DATE, 'DD-MON-YY'::varchar(9)) AS REPORTING_DATE, STG_FACTORY_SALES_852.NDC, STG_FACTORY_SALES_852.PRODUCT_CODE, STG_FACTORY_SALES_852.PRODUCT_NAME, STG_FACTORY_SALES_852.DESCRIPTION, CASE mod(STG_FACTORY_SALES_852.QTY_RECEIVED, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_RECEIVED)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_RECEIVED)::varchar, '0'::varchar(1)) END AS QTY_RECEIVED, CASE mod(STG_FACTORY_SALES_852.QTY_RECEIVED_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_RECEIVED_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_RECEIVED_DOLLARS)::varchar, '0'::varchar(1)) END AS QTY_RECEIVED_DOLLARS, CASE mod(STG_FACTORY_SALES_852.QTY_SOLD, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_SOLD)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_SOLD)::varchar, '0'::varchar(1)) END AS QTY_SOLD, CASE mod(STG_FACTORY_SALES_852.QTY_SOLD_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_SOLD_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_SOLD_DOLLARS)::varchar, '0'::varchar(1)) END AS QTY_SOLD_DOLLARS, CASE mod(STG_FACTORY_SALES_852.QTY_OMIT, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_OMIT)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_OMIT)::varchar, '0'::varchar(1)) END AS QTY_OMIT, CASE mod(STG_FACTORY_SALES_852.QTY_OMIT_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_OMIT_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_OMIT_DOLLARS)::varchar, '0'::varchar(1)) END AS QTY_OMIT_DOLLARS, CASE mod(STG_FACTORY_SALES_852.MTH_END_QTY_ON_HAND, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.MTH_END_QTY_ON_HAND)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.MTH_END_QTY_ON_HAND)::varchar, '0'::varchar(1)) END AS MTH_END_QTY_ON_HAND, CASE mod(STG_FACTORY_SALES_852.MTH_END_QTY_ON_HAND_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.MTH_END_QTY_ON_HAND_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.MTH_END_QTY_ON_HAND_DOLLARS)::varchar, '0'::varchar(1)) END AS MTH_END_QTY_ON_HAND_DOLLARS, CASE mod(STG_FACTORY_SALES_852.MTH_END_COMMITTED, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.MTH_END_COMMITTED)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.MTH_END_COMMITTED)::varchar, '0'::varchar(1)) END AS MTH_END_COMMITTED, CASE mod(STG_FACTORY_SALES_852.MTH_END_COMMITTED_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.MTH_END_COMMITTED_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.MTH_END_COMMITTED_DOLLARS)::varchar, '0'::varchar(1)) END AS MTH_END_COMMITTED_DOLLARS, CASE mod(STG_FACTORY_SALES_852.MTH_END_RESERVED, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.MTH_END_RESERVED)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.MTH_END_RESERVED)::varchar, '0'::varchar(1)) END AS MTH_END_RESERVED, CASE mod(STG_FACTORY_SALES_852.MTH_END_RESERVED_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.MTH_END_RESERVED_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.MTH_END_RESERVED_DOLLARS)::varchar, '0'::varchar(1)) END AS MTH_END_RESERVED_DOLLARS, CASE mod(STG_FACTORY_SALES_852.QTY_RETURN, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_RETURN)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_RETURN)::varchar, '0'::varchar(1)) END AS QTY_RETURN, CASE mod(STG_FACTORY_SALES_852.QTY_RETURN_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_RETURN_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_RETURN_DOLLARS)::varchar, '0'::varchar(1)) END AS QTY_RETURN_DOLLARS, CASE mod(STG_FACTORY_SALES_852.QTY_CUSTOMER_RETURN, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_CUSTOMER_RETURN)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_CUSTOMER_RETURN)::varchar, '0'::varchar(1)) END AS QTY_CUSTOMER_RETURN, CASE mod(STG_FACTORY_SALES_852.QTY_CUSTOMER_RETURN_DOLLARS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_FACTORY_SALES_852.QTY_CUSTOMER_RETURN_DOLLARS)::int)::varchar ELSE rtrim((STG_FACTORY_SALES_852.QTY_CUSTOMER_RETURN_DOLLARS)::varchar, '0'::varchar(1)) END AS QTY_CUSTOMER_RETURN_DOLLARS, to_char(STG_FACTORY_SALES_852.LAST_BUILD_DATE, 'DD-MON-YY'::varchar(9)) AS LAST_BUILD_DATE FROM WSMP_ADMIN.STG_FACTORY_SALES_852;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_CSP_Attendees AS
SELECT (a.COGENIX_PROGRAM_ID)::int AS cogenix_program_id, a.PROGRAM_NAME, a.PROGRAM_DATE, a.SFA_PROF_ID, a.ME_NUM, a.DEA_NUM, (a.COGENIX_ID)::int AS cogenix_id, coalesce(a.CM_ID, (cm.CUSTOMER_MASTER_ID)::varchar) AS cm_id, a.STATE_LICENSE_STATE, a.STATE_LICENSE_NUMBER, a.FIRST_NAME, a.LAST_NAME, a.ADDRESS1, a.ADDRESS2, a.ADDRESS3, a.CITY, a.STATE, a.ZIP, a.PRIMARY_SPECIALTY, a.HCP_TYPE AS hcp_type, a.PRESCRIBER_FLAG FROM ((WSMP_ADMIN.STG_COGENIX_CSP_ATTENDEE a JOIN WSMP_ADMIN.STG_COGENIX_CSP_PROGRAM p ON ((p.COGENIX_PROGRAM_ID = a.COGENIX_PROGRAM_ID))) LEFT JOIN WSMP_ADMIN.STG_CUSTOMER_MASTER cm ON (((cm.SOURCE_ID = CASE WHEN (a.PRESCRIBER_FLAG = 'N'::varchar(1)) THEN ('NONHCP_'::varchar(7) || (a.COGENIX_ID)::varchar) ELSE (a.COGENIX_ID)::varchar END) AND (cm.RECORD_SOURCE_SYSTEM = 'CGX'::varchar(3))))) WHERE ((p.PROGRAM_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (p.PROGRAM_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1)))) AND (p.PRODUCT = 'Nuvigil'::varchar(7)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_CSP_Programs AS
SELECT CASE mod(STG_COGENIX_CSP_PROGRAM.COGENIX_PROGRAM_ID, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.COGENIX_PROGRAM_ID)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.COGENIX_PROGRAM_ID)::varchar, '0'::varchar(1)) END AS COGENIX_PROGRAM_ID, STG_COGENIX_CSP_PROGRAM.PROGRAM_NAME, to_char(STG_COGENIX_CSP_PROGRAM.PROGRAM_REQUEST_DATE, 'YYYY-MM-DD'::varchar(10)) AS PROGRAM_REQUEST_DATE, to_char(STG_COGENIX_CSP_PROGRAM.PROGRAM_DATE, 'YYYY-MM-DD'::varchar(10)) AS PROGRAM_DATE, STG_COGENIX_CSP_PROGRAM.PRODUCT, STG_COGENIX_CSP_PROGRAM.TOPIC, STG_COGENIX_CSP_PROGRAM.PROGRAM_TYPE, STG_COGENIX_CSP_PROGRAM.PROGRAM_STATUS, STG_COGENIX_CSP_PROGRAM.VENUE_NAME, STG_COGENIX_CSP_PROGRAM.VENUE_CITY, STG_COGENIX_CSP_PROGRAM.VENUE_STATE, CASE mod(STG_COGENIX_CSP_PROGRAM.ESTIMATED_ATTENDANCE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.ESTIMATED_ATTENDANCE)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.ESTIMATED_ATTENDANCE)::varchar, '0'::varchar(1)) END AS ESTIMATED_ATTENDANCE, CASE mod(STG_COGENIX_CSP_PROGRAM.NONPRESCRIBER_CEPHALON_COUNTS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.NONPRESCRIBER_CEPHALON_COUNTS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.NONPRESCRIBER_CEPHALON_COUNTS)::varchar, '0'::varchar(1)) END AS NONPRESCRIBER_CEPHALON_COUNTS, CASE mod(STG_COGENIX_CSP_PROGRAM.PRESCRIBERS_W_O_DEA, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.PRESCRIBERS_W_O_DEA)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.PRESCRIBERS_W_O_DEA)::varchar, '0'::varchar(1)) END AS PRESCRIBERS_W_O_DEA, CASE mod(STG_COGENIX_CSP_PROGRAM.NONHCP_OFFICE_STAFF_COUNTS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.NONHCP_OFFICE_STAFF_COUNTS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.NONHCP_OFFICE_STAFF_COUNTS)::varchar, '0'::varchar(1)) END AS NONHCP_OFFICE_STAFF_COUNTS, CASE mod(STG_COGENIX_CSP_PROGRAM.PRESCRIBERS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.PRESCRIBERS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.PRESCRIBERS)::varchar, '0'::varchar(1)) END AS PRESCRIBERS, CASE mod(STG_COGENIX_CSP_PROGRAM.HCPS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.HCPS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.HCPS)::varchar, '0'::varchar(1)) END AS HCPS, CASE mod(STG_COGENIX_CSP_PROGRAM.TOTAL_PRESCRIBERS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.TOTAL_PRESCRIBERS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.TOTAL_PRESCRIBERS)::varchar, '0'::varchar(1)) END AS TOTAL_PRESCRIBERS, CASE mod(STG_COGENIX_CSP_PROGRAM.PRESCRIBERS_ACCEPTED_NO_SHOW, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.PRESCRIBERS_ACCEPTED_NO_SHOW)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.PRESCRIBERS_ACCEPTED_NO_SHOW)::varchar, '0'::varchar(1)) END AS PRESCRIBERS_ACCEPTED_NO_SHOW, STG_COGENIX_CSP_PROGRAM.ATTENDEE_FORM_RECEIVED, STG_COGENIX_CSP_PROGRAM.ATTENDEE_SIGN_IN_SHEET_RECVD, CASE mod(STG_COGENIX_CSP_PROGRAM.ACTUAL_ATTENDANCE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.ACTUAL_ATTENDANCE)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.ACTUAL_ATTENDANCE)::varchar, '0'::varchar(1)) END AS ACTUAL_ATTENDANCE, CASE mod(STG_COGENIX_CSP_PROGRAM.ESTIMATED_COSTS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.ESTIMATED_COSTS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.ESTIMATED_COSTS)::varchar, '0'::varchar(1)) END AS ESTIMATED_COSTS, STG_COGENIX_CSP_PROGRAM.OFFICES_REPRESENTED, CASE mod(STG_COGENIX_CSP_PROGRAM.AV_EXPENSES, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.AV_EXPENSES)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.AV_EXPENSES)::varchar, '0'::varchar(1)) END AS AV_EXPENSES, CASE mod(STG_COGENIX_CSP_PROGRAM.FOOD_AND_BEVERAGE, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.FOOD_AND_BEVERAGE)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.FOOD_AND_BEVERAGE)::varchar, '0'::varchar(1)) END AS FOOD_AND_BEVERAGE, CASE mod(STG_COGENIX_CSP_PROGRAM.MEETING_EXPENSES, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.MEETING_EXPENSES)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.MEETING_EXPENSES)::varchar, '0'::varchar(1)) END AS MEETING_EXPENSES, CASE mod(STG_COGENIX_CSP_PROGRAM.MISCELLANEOUS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.MISCELLANEOUS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.MISCELLANEOUS)::varchar, '0'::varchar(1)) END AS MISCELLANEOUS, CASE mod(STG_COGENIX_CSP_PROGRAM.SPEAKER_EXPENSES, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.SPEAKER_EXPENSES)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.SPEAKER_EXPENSES)::varchar, '0'::varchar(1)) END AS SPEAKER_EXPENSES, CASE mod(STG_COGENIX_CSP_PROGRAM.SPEAKER_HONORARIA, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.SPEAKER_HONORARIA)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.SPEAKER_HONORARIA)::varchar, '0'::varchar(1)) END AS SPEAKER_HONORARIA, CASE mod(STG_COGENIX_CSP_PROGRAM.SPEAKER_TRAVEL, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.SPEAKER_TRAVEL)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.SPEAKER_TRAVEL)::varchar, '0'::varchar(1)) END AS SPEAKER_TRAVEL, CASE mod(STG_COGENIX_CSP_PROGRAM.VENUE_ROOM_RENTAL, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.VENUE_ROOM_RENTAL)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.VENUE_ROOM_RENTAL)::varchar, '0'::varchar(1)) END AS VENUE_ROOM_RENTAL, CASE mod(STG_COGENIX_CSP_PROGRAM.ACTUAL_COSTS, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.ACTUAL_COSTS)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.ACTUAL_COSTS)::varchar, '0'::varchar(1)) END AS ACTUAL_COSTS, CASE mod(STG_COGENIX_CSP_PROGRAM.UNMET_MINIMUM, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.UNMET_MINIMUM)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.UNMET_MINIMUM)::varchar, '0'::varchar(1)) END AS UNMET_MINIMUM, to_char(STG_COGENIX_CSP_PROGRAM.CREATE_DATE, 'YYYY-MM-DD'::varchar(10)) AS CREATE_DATE, CASE mod(STG_COGENIX_CSP_PROGRAM.TAKEDA_ATTENDEES, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((STG_COGENIX_CSP_PROGRAM.TAKEDA_ATTENDEES)::int)::varchar ELSE rtrim((STG_COGENIX_CSP_PROGRAM.TAKEDA_ATTENDEES)::varchar, '0'::varchar(1)) END AS TAKEDA_ATTENDEES FROM WSMP_ADMIN.STG_COGENIX_CSP_PROGRAM WHERE ((STG_COGENIX_CSP_PROGRAM.PROGRAM_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (STG_COGENIX_CSP_PROGRAM.PROGRAM_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1)))) AND (STG_COGENIX_CSP_PROGRAM.PRODUCT = 'Nuvigil'::varchar(7)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_Copay_Voucher_Drops AS
SELECT CASE mod(x.tvcmid, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((x.tvcmid)::int)::varchar ELSE rtrim((x.tvcmid)::varchar, '0'::varchar(1)) END AS tvcmid, x.ims_id, x.veeva_account_id, d.RESOURCE_TYPE AS Resource_type, d.TERRITORY_NUM AS Territory_num, d.DISTRIBUTION_DATE AS distribution_date, (d.QTY)::int AS qty FROM WSMP_ADMIN.TFC_SFA_RESOURCE_DIST_DETAIL d, (SELECT demo_combined.ims_id, demo_combined.tvcmid, demo_combined.veeva_account_id FROM WSMP_ADMIN.demo_combined WHERE ((demo_combined.sales_force_id = 'TC'::varchar(2)) AND (demo_combined.veeva_account_id IS NOT NULL)) GROUP BY demo_combined.ims_id, demo_combined.tvcmid, demo_combined.veeva_account_id) x WHERE ((d.PRODUCT_NAME = 'NUVIGIL'::varchar(7)) AND (d.DISTRIBUTION_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (d.DISTRIBUTION_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1)))) AND (d.IMS_ID = x.ims_id));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_Demo AS
SELECT CASE mod(d.tvcmid, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((d.tvcmid)::int)::varchar ELSE rtrim((d.tvcmid)::varchar, '0'::varchar(1)) END AS tvcmid, d.ims_id, d.veeva_account_id, d.first_name, d.mid_name, d.last_name, d.degree AS DEGREE, d.address, d.city, d.state, d.zip, d.specialty AS prim_specialty, s1.NUVIGIL_REPORT_GROUP AS nuvigil_report_group, dec1.trx_cnt_01_06 AS nuvigil_decile, dec2.trx_cnt_01_06 AS wake_decile, cp.TARGET_VALUE AS target_flag FROM (((((WSMP_ADMIN.demo_combined d LEFT JOIN WSMP_ADMIN.TFC_SPECIALTY_XREF s1 ON ((s1.SPECIALTY_CODE = d.specialty))) LEFT JOIN WSMP_ADMIN.TFC_IMS_DECILE dec1 ON (((dec1.ims_id = d.ims_id) AND (dec1.category = 'Provigil'::varchar(8)) AND (dec1.decile_name = 'Nuvigil'::varchar(7))))) LEFT JOIN WSMP_ADMIN.TFC_IMS_DECILE dec2 ON (((dec2.ims_id = d.ims_id) AND (dec2.category = 'Provigil'::varchar(8)) AND (dec2.decile_name = 'Modafinil'::varchar(9))))) JOIN (SELECT prodx.ims_id FROM (SELECT dw_presc_plan_rx_m.ims_id FROM WSMP_ADMIN.dw_presc_plan_rx_m WHERE ((dw_presc_plan_rx_m.product_code = '100N00'::varchar(6)) AND (dw_presc_plan_rx_m.month_bucket >= 1::numeric(18,0)) AND (dw_presc_plan_rx_m.month_bucket <= 24::numeric(18,0))) UNION ALL SELECT DIM_SFA_CSF_DEMO.IMS_ID AS ims_id FROM WSMP_ADMIN.DIM_SFA_CSF_DEMO WHERE (DIM_SFA_CSF_DEMO.SALES_FORCE_ID = 'TC'::varchar(2))) prodx GROUP BY prodx.ims_id) r ON ((d.ims_id = r.ims_id))) LEFT JOIN WSMP_ADMIN.DIM_SFA_TARGETS cp ON (((d.ims_id = cp.IMS_ID) AND (cp.NAME = 'Nuvigil'::varchar(7)) AND (cp.PERIOD ~~ '2015%'::varchar(5))))) WHERE ((d.sales_force_id = 'TC'::varchar(2)) AND (d.last_name <> 'NATIONAL ASSIGNMENT'::varchar(19)) AND (d.first_name IS NOT NULL));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_agile_mktg_mix_rx AS
SELECT rx.ims_id AS IMS_ID, rx.product_code, p.NAME AS product_name, rx.month_ending AS MONTH_ENDING, sum(CASE mod(rx.nrx_qty, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.nrx_qty)::int)::varchar ELSE rtrim((rx.nrx_qty)::varchar, '0'::varchar(1)) END) AS nrx_qty, sum(CASE mod(rx.trx_qty, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.trx_qty)::int)::varchar ELSE rtrim((rx.trx_qty)::varchar, '0'::varchar(1)) END) AS trx_qty, sum(CASE mod(rx.nrx_cnt, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.nrx_cnt)::int)::varchar ELSE rtrim((rx.nrx_cnt)::varchar, '0'::varchar(1)) END) AS nrx_cnt, sum(CASE mod(rx.trx_cnt, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((rx.trx_cnt)::int)::varchar ELSE rtrim((rx.trx_cnt)::varchar, '0'::varchar(1)) END) AS trx_cnt FROM WSMP_ADMIN.dw_presc_plan_rx_m rx, CUSTOMER.PRODUCT p WHERE ((rx.product_code = p.PRODUCT_CODE) AND (rx.month_ending >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (rx.month_ending <= last_day(add_months((statement_timestamp())::timestamp, (-1)))) AND (rx.product_code = ANY (ARRAY['100100'::varchar(6), '100101'::varchar(6), '100102'::varchar(6), '100N00'::varchar(6), '100N05'::varchar(6), '100N15'::varchar(6), '100N20'::varchar(6), '100N25'::varchar(6), '100700'::varchar(6)])) AND (length(rx.ims_id) = 7)) GROUP BY rx.ims_id, rx.product_code, p.NAME, rx.month_ending;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_Samples AS
SELECT S.sales_force_id, S.territory_num, CASE mod(IX.tvcmid, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((IX.tvcmid)::int)::varchar ELSE rtrim((IX.tvcmid)::varchar, '0'::varchar(1)) END AS tvcmid, IX.ims_id, IX.veeva_account_id, to_char(S.ship_date, 'YYYY-MM-DD'::varchar(10)) AS ship_date, S.product_code, S.product, CASE mod(S.ship_qty, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((S.ship_qty)::int)::varchar ELSE rtrim((S.ship_qty)::varchar, '0'::varchar(1)) END AS ship_qty FROM ((SELECT ss.SALES_FORCE_ID AS sales_force_id, ss.TERRITORY_NUM AS territory_num, NULL AS tvcmid, ss.IMS_ID AS ims_id, ss.DEMO_ID AS demo_id, ss.SHIP_DATE AS ship_date, ss.PRODUCT_CODE AS product_code, ss.PRODUCT AS product, ss.SHIP_QTY AS ship_qty FROM WSMP_ADMIN.STG_KNIPPER_SAMPLES_SHIPPED ss WHERE ((ss.SALES_FORCE_ID = 'TC'::varchar(2)) AND (ss.SHIP_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (ss.SHIP_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1)))) AND (ss.PRODUCT_CODE ~~ '100N%'::varchar(5)))) S LEFT JOIN (SELECT demo_combined.tvcmid, demo_combined.ims_id, demo_combined.veeva_account_id FROM WSMP_ADMIN.demo_combined WHERE ((demo_combined.sales_force_id = 'TC'::varchar(2)) AND (demo_combined.veeva_account_id IS NOT NULL)) GROUP BY demo_combined.tvcmid, demo_combined.ims_id, demo_combined.veeva_account_id) IX ON ((S.demo_id = IX.veeva_account_id)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_Details AS
SELECT CASE mod(d.TVCMID, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((d.TVCMID)::int)::varchar ELSE rtrim((d.TVCMID)::varchar, '0'::varchar(1)) END AS tvcmid, cd.IMS_ID AS ims_id, cd.VEEVA_ACCOUNT_ID AS veeva_account_id, initcap(d.LAST_NAME) AS last_name, initcap(d.FIRST_NAME) AS first_name, initcap(d.MIDDLE_NAME) AS middle_name, d.CREDENTIALS AS DEGREE, d.ZIP AS zip, cd.REP_ID AS rep_id, cd.TERRITORY_NUM AS territory_num, to_char(cd.CALL_DATE, 'YYYY-MM-DD'::varchar(10)) AS call_date, 'NUVIGIL'::varchar(7) AS product, CASE WHEN (cd.FIRST_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7)) THEN 1 WHEN (cd.SECOND_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7)) THEN 2 ELSE NULL::int END AS detail_position FROM WSMP_ADMIN.TFC_SFA_CSF_CALL_DETAIL cd, WSMP_ADMIN.DIM_SFA_CSF_DEMO d, WSMP_ADMIN.TFC_CURRENT_ZIP_ALIGNMENT z WHERE ((cd.SALES_FORCE_ID = 'TC'::varchar(2)) AND (cd.SALES_FORCE_ID = d.SALES_FORCE_ID) AND (cd.TERRITORY_NUM = d.TERRITORY_NUM) AND (cd.CALL_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (cd.CALL_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1)))) AND (cd.VEEVA_ACCOUNT_ID = d.VEEVA_ACCOUNT_ID) AND (d.ZIP = z.ZIP) AND ((cd.FIRST_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7)) OR (cd.SECOND_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7))) AND (cd.LEGACY_CALL_TYPE = 'PROF'::varchar(4)) AND ((cd.FIRST_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7)) OR (cd.SECOND_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7))) AND (cd.LEGACY_CALL_TYPE = 'PROF'::varchar(4))) GROUP BY d.TVCMID, cd.IMS_ID, cd.VEEVA_ACCOUNT_ID, initcap(d.LAST_NAME), initcap(d.FIRST_NAME), initcap(d.MIDDLE_NAME), d.CREDENTIALS, d.ZIP, cd.REP_ID, cd.TERRITORY_NUM, cd.CALL_DATE, 'NUVIGIL'::varchar(7), CASE WHEN (cd.FIRST_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7)) THEN 1 WHEN (cd.SECOND_DETAILED_PRODUCT = 'NUVIGIL'::varchar(7)) THEN 2 ELSE NULL::int END;

CREATE  VIEW WSMP_ADMIN_ORA.dim_ims_month_buckets AS
SELECT dw_presc_rx_m.month_bucket, dw_presc_rx_m.month_ending FROM WSMP_ADMIN.dw_presc_rx_m GROUP BY dw_presc_rx_m.month_bucket, dw_presc_rx_m.month_ending;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_ValueCentricRxDataExtract AS
((SELECT '4416451422'::varchar(10) AS customerid, CASE WHEN (x.product_code = '100N05'::varchar(6)) THEN 'Nuvigil 50mg'::varchar(12) WHEN (x.product_code = '100N15'::varchar(6)) THEN 'Nuvigil 150mg'::varchar(13) WHEN (x.product_code = '100N25'::varchar(6)) THEN 'Nuvigil 250mg'::varchar(13) WHEN (x.product_code = '100N20'::varchar(6)) THEN 'Nuvigil 200mg'::varchar(13) ELSE NULL END AS brand_name, CASE WHEN (x.product_code = '100N05'::varchar(6)) THEN '63459020530'::varchar(11) WHEN (x.product_code = '100N15'::varchar(6)) THEN '63459021530'::varchar(11) WHEN (x.product_code = '100N25'::varchar(6)) THEN '63459022530'::varchar(11) WHEN (x.product_code = '100N20'::varchar(6)) THEN '63459022030'::varchar(11) ELSE NULL END AS ndcupc, d.zip, x.month_ending AS period_end_date, sum(x.trx_cnt) AS trx_cnt, sum(x.trx_qty) AS trx_qty FROM WSMP_ADMIN.dw_presc_plan_rx_m x, (SELECT DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id, min(DEMO_COMBINED.zip) AS zip FROM WSMP_ADMIN.DEMO_COMBINED WHERE (DEMO_COMBINED.sales_force_id = 'TC'::varchar(2)) GROUP BY DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id) d WHERE ((d.ims_id = x.ims_id) AND (x.product_code = ANY (ARRAY['100N05'::varchar(6), '100N15'::varchar(6), '100N25'::varchar(6), '100N20'::varchar(6)])) AND (x.sales_category = '1'::varchar(2)) AND (x.month_bucket >= 1::numeric(18,0)) AND (x.month_bucket <= 12::numeric(18,0))) GROUP BY '4416451422'::varchar(10), CASE WHEN (x.product_code = '100N05'::varchar(6)) THEN 'Nuvigil 50mg'::varchar(12) WHEN (x.product_code = '100N15'::varchar(6)) THEN 'Nuvigil 150mg'::varchar(13) WHEN (x.product_code = '100N25'::varchar(6)) THEN 'Nuvigil 250mg'::varchar(13) WHEN (x.product_code = '100N20'::varchar(6)) THEN 'Nuvigil 200mg'::varchar(13) ELSE NULL END, CASE WHEN (x.product_code = '100N05'::varchar(6)) THEN '63459020530'::varchar(11) WHEN (x.product_code = '100N15'::varchar(6)) THEN '63459021530'::varchar(11) WHEN (x.product_code = '100N25'::varchar(6)) THEN '63459022530'::varchar(11) WHEN (x.product_code = '100N20'::varchar(6)) THEN '63459022030'::varchar(11) ELSE NULL END, d.zip, x.month_ending UNION SELECT '4416451422'::varchar(10) AS customerid, CASE WHEN (x.product_code = '330-14-002'::varchar(10)) THEN 'PROAIR HFA'::varchar(10) WHEN (x.product_code = '330-14-009'::varchar(10)) THEN 'PROAIR HFA COUNTER'::varchar(18) WHEN (x.product_code = '330-15-001'::varchar(10)) THEN 'QNASL'::varchar(5) WHEN (x.product_code = '330-13-005'::varchar(10)) THEN 'QVAR 40MCG'::varchar(10) WHEN (x.product_code = '330-13-006'::varchar(10)) THEN 'QVAR 80MCG'::varchar(10) ELSE NULL END AS brand_name, CASE WHEN (x.product_code = '330-14-002'::varchar(10)) THEN '59310057920'::varchar(11) WHEN (x.product_code = '330-14-009'::varchar(10)) THEN '59310057922'::varchar(11) WHEN (x.product_code = '330-15-001'::varchar(10)) THEN '59310021012'::varchar(11) WHEN (x.product_code = '330-13-005'::varchar(10)) THEN '59310020240'::varchar(11) WHEN (x.product_code = '330-13-006'::varchar(10)) THEN '59310020480'::varchar(11) ELSE NULL END AS ndcupc, d.zip, x.month_ending AS period_end_date, sum(x.trx_cnt) AS trx_cnt, sum(0) AS trx_qty FROM WSMP_ADMIN.dw_presc_plan_rx_w x, (SELECT DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id, min(DEMO_COMBINED.zip) AS zip FROM WSMP_ADMIN.DEMO_COMBINED WHERE (DEMO_COMBINED.sales_force_id = 'TR'::varchar(2)) GROUP BY DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id) d WHERE ((d.ims_id = x.ims_id) AND (x.product_code = ANY (ARRAY['330-14-002'::varchar(10), '330-14-009'::varchar(10), '330-15-001'::varchar(10), '330-13-005'::varchar(10), '330-13-006'::varchar(10)])) AND (x.sales_category = '1'::varchar(2)) AND (x.month_bucket >= 1::numeric(18,0)) AND (x.month_bucket <= 12::numeric(18,0))) GROUP BY '4416451422'::varchar(10), CASE WHEN (x.product_code = '330-14-002'::varchar(10)) THEN 'PROAIR HFA'::varchar(10) WHEN (x.product_code = '330-14-009'::varchar(10)) THEN 'PROAIR HFA COUNTER'::varchar(18) WHEN (x.product_code = '330-15-001'::varchar(10)) THEN 'QNASL'::varchar(5) WHEN (x.product_code = '330-13-005'::varchar(10)) THEN 'QVAR 40MCG'::varchar(10) WHEN (x.product_code = '330-13-006'::varchar(10)) THEN 'QVAR 80MCG'::varchar(10) ELSE NULL END, CASE WHEN (x.product_code = '330-14-002'::varchar(10)) THEN '59310057920'::varchar(11) WHEN (x.product_code = '330-14-009'::varchar(10)) THEN '59310057922'::varchar(11) WHEN (x.product_code = '330-15-001'::varchar(10)) THEN '59310021012'::varchar(11) WHEN (x.product_code = '330-13-005'::varchar(10)) THEN '59310020240'::varchar(11) WHEN (x.product_code = '330-13-006'::varchar(10)) THEN '59310020480'::varchar(11) ELSE NULL END, d.zip, x.month_ending) UNION SELECT '4416451422'::varchar(10) AS customerid, CASE WHEN (x.product_code = '982-23-204'::varchar(10)) THEN 'QUARTETTE'::varchar(9) ELSE NULL END AS brand_name, CASE WHEN (x.product_code = '982-23-204'::varchar(10)) THEN '51285043165'::varchar(11) ELSE NULL END AS ndcupc, d.zip, x.month_ending AS period_end_date, sum(x.trx_cnt) AS trx_cnt, sum(0) AS trx_qty FROM WSMP_ADMIN.dw_presc_plan_rx_m x, (SELECT DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id, min(DEMO_COMBINED.zip) AS zip FROM WSMP_ADMIN.DEMO_COMBINED WHERE (DEMO_COMBINED.sales_force_id = 'TW'::varchar(2)) GROUP BY DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id) d WHERE ((d.ims_id = x.ims_id) AND (x.product_code = '982-23-204'::varchar(10)) AND (x.sales_category = '1'::varchar(2)) AND (x.month_bucket >= 1::numeric(18,0)) AND (x.month_bucket <= 12::numeric(18,0))) GROUP BY '4416451422'::varchar(10), CASE WHEN (x.product_code = '982-23-204'::varchar(10)) THEN 'QUARTETTE'::varchar(9) ELSE NULL END, CASE WHEN (x.product_code = '982-23-204'::varchar(10)) THEN '51285043165'::varchar(11) ELSE NULL END, d.zip, x.month_ending) UNION SELECT '4416451422'::varchar(10) AS customerid, CASE WHEN (x.product_code = '600120'::varchar(6)) THEN 'COPAXONE 20mg'::varchar(13) WHEN (x.product_code = '600140'::varchar(6)) THEN 'COPAXONE 40mg'::varchar(13) ELSE NULL END AS brand_name, CASE WHEN (x.product_code = '600120'::varchar(6)) THEN '68546031730'::varchar(11) WHEN (x.product_code = '600140'::varchar(6)) THEN '68546032512'::varchar(11) ELSE NULL END AS ndcupc, d.zip, x.month_ending AS period_end_date, sum(x.trx_cnt) AS trx_cnt, sum(0) AS trx_qty FROM WSMP_ADMIN.dw_presc_plan_rx_m x, (SELECT DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id, min(DEMO_COMBINED.zip) AS zip FROM WSMP_ADMIN.DEMO_COMBINED WHERE (DEMO_COMBINED.sales_force_id = 'TN'::varchar(2)) GROUP BY DEMO_COMBINED.sales_force_id, DEMO_COMBINED.ims_id) d WHERE ((d.ims_id = x.ims_id) AND (x.product_code = ANY (ARRAY['600120'::varchar(6), '600140'::varchar(6)])) AND (x.sales_category = '1'::varchar(2)) AND (x.month_bucket >= 1::numeric(18,0)) AND (x.month_bucket <= 12::numeric(18,0))) GROUP BY '4416451422'::varchar(10), CASE WHEN (x.product_code = '600120'::varchar(6)) THEN 'COPAXONE 20mg'::varchar(13) WHEN (x.product_code = '600140'::varchar(6)) THEN 'COPAXONE 40mg'::varchar(13) ELSE NULL END, CASE WHEN (x.product_code = '600120'::varchar(6)) THEN '68546031730'::varchar(11) WHEN (x.product_code = '600140'::varchar(6)) THEN '68546032512'::varchar(11) ELSE NULL END, d.zip, x.month_ending;

CREATE  VIEW WSMP_ADMIN_ORA.v_veeva_demo AS
SELECT substr(tsf.territory_vod__c, 1, 2) AS sales_force_id, CASE WHEN (rta.NAME = ANY (ARRAY['Hospital_vod'::varchar(12), 'Pharmacy_vod'::varchar(12), 'Practice_vod'::varchar(12), 'ParaGard_TVA'::varchar(12)])) THEN 'ACCT'::varchar(4) WHEN ((rta.NAME = 'Professional_vod'::varchar(16)) AND (acc.ID_VOD__C IS NULL) AND (acc.DESIGNATION_TVA__C = ANY (ARRAY['Nurse'::varchar(5), 'Billing Staff'::varchar(13), 'Office Staff'::varchar(12), 'Other Contact'::varchar(13), 'Pharmacist/Pharm D'::varchar(18), 'Practice Manager'::varchar(16), 'Refill Coordinator'::varchar(18), 'Reimbursement Specialist'::varchar(24)]))) THEN 'CONT'::varchar(4) WHEN (rta.NAME = 'Staff'::varchar(5)) THEN 'CONT'::varchar(4) WHEN (rta.NAME = 'Professional_vod'::varchar(16)) THEN 'PROF'::varchar(4) ELSE 'UNK'::varchar(3) END AS legacy_demo_type, replace(rta.NAME, '_vod'::varchar(4), ''::varchar) AS veeva_account_type, acc.TYPE AS veeva_business_type, acc.ID AS csf_demo_id, acc.CM_ID_TVA__C AS tvcmid, acc.ID_VOD__C AS ims_id, acc.ACCOUNT_MASTER_ID_TVA__C AS hms_id, substr(btrim(acc.ME__C), 1, 10) AS me_num, acc.NPI_VOD__C AS npi, addr.DEA_VOD__C AS dea_num, addr.DEA_EXPIRATION_DATE_VOD__C AS dea_expir_date, addr.DEA_SCHEDULE_VOD__C AS dea_drug_schedule, tsf.territory_vod__c AS territory_num, tsf.territory_status_tva__c AS territory_status, 'N'::varchar(1) AS house_acct_flag, 'A'::varchar(1) AS src_verification_status, CASE WHEN (rta.NAME = ANY (ARRAY['Hospital_vod'::varchar(12), 'Pharmacy_vod'::varchar(12), 'Practice_vod'::varchar(12), 'ParaGard_TVA'::varchar(12)])) THEN substr(acc.NAME, 1, 60) ELSE acc.LASTNAME END AS last_name, acc.FIRSTNAME AS first_name, acc.MIDDLE_VOD__C AS middle_name, acc.SUFFIX_TVA__C AS suffix_name, acc.CREDENTIALS_VOD__C AS credentials, acc.DESIGNATION_TVA__C AS designation, addr.NAME AS address1, addr.ADDRESS_LINE_2_VOD__C AS address2, addr.ADDRESS_LINE_3_TVA__C AS address3, addr.CITY_VOD__C AS city, addr.STATE_VOD__C AS state, addr.ZIP_VOD__C AS zip, acc.PHONE AS phone, CASE WHEN (addr.INACTIVE_VOD__C = 'false'::varchar(5)) THEN 'Active'::varchar(6) ELSE 'Inactive'::varchar(8) END AS address_status, acc.FAX AS fax, acc.CELL_PHONE_TVA__C AS cell_phone, acc.PERSONEMAIL AS email, CASE WHEN (acc.CML_PROFILED_TVA__C = 'false'::varchar(5)) THEN 'N'::varchar(1) WHEN (acc.CML_PROFILED_TVA__C = 'true'::varchar(4)) THEN 'Y'::varchar(1) ELSE 'N'::varchar(1) END AS cml_profiled, acc.SPECIALTY_1_VOD__C AS prim_specialty, CASE WHEN (acc.NO_CONTACT_TVA__C = 'false'::varchar(5)) THEN 'N'::varchar(1) WHEN (acc.NO_CONTACT_TVA__C = 'true'::varchar(4)) THEN 'Y'::varchar(1) ELSE 'N'::varchar(1) END AS no_contact, addr.LICENSE_VOD__C AS state_license_number, addr.STATE_VOD__C AS state_license_state, CASE WHEN (addr.LICENSE_VALID_TO_SAMPLE_VOD__C = 'Valid'::varchar(5)) THEN 'E'::varchar(1) ELSE 'I'::varchar(1) END AS state_license_elig_code, addr.LICENSE_EXPIRATION_DATE_VOD__C AS state_license_expir_date, substr(btrim(CASE WHEN ((btrim(acc.CREDENTIALS_VOD__C) IS NOT NULL) AND (btrim(addr.STATE_VOD__C) IS NOT NULL) AND (btrim(addr.LICENSE_VOD__C) IS NOT NULL)) THEN ((((btrim(acc.CREDENTIALS_VOD__C) || '-'::varchar(1)) || btrim(addr.STATE_VOD__C)) || '-'::varchar(1)) || btrim(addr.LICENSE_VOD__C)) ELSE NULL END), 1, 30) AS state_num, CASE WHEN (acc.NO_SPEND_TVA__C = 'false'::varchar(5)) THEN 'N'::varchar(1) ELSE 'Y'::varchar(1) END AS no_spend, acc.DNC_CNS_TVA__C AS nuvigil_dnc, CASE WHEN (acc.NUVIGIL_APP_TVA__C = 'false'::varchar(5)) THEN 'N'::varchar(1) ELSE 'Y'::varchar(1) END AS nuvigil_app, acc.DNC_PCS_TVA__C AS fentora_dnc, CASE WHEN (acc.FENTORA_APP_TVA__C = 'false'::varchar(5)) THEN 'N'::varchar(1) ELSE 'Y'::varchar(1) END AS fentora_app, acc.TIRF_REMS_TVA__C AS fentora_rems_status, tsf.last_activity_date_vod__c AS sfa_last_call_date, acc.ID AS veeva_account_id, addr.ID AS veeva_address_id, 'Y'::varchar(1) AS ora_viewable_flag, acc.CREATEDDATE AS sfa_create_date, trunc(tsf.createddate, 'DD'::varchar(2)) AS sfa_align_date, (statement_timestamp())::timestamp AS last_build_date, CASE WHEN (NOT regexp_like(acc.EXTERNAL_ID_VOD__C, '[[:digit:]]{9}'::varchar(14), ''::varchar)) THEN acc.EXTERNAL_ID_VOD__C ELSE NULL END AS siebel_contact_row_id, CASE WHEN regexp_like(acc.EXTERNAL_ID_VOD__C, '[[:digit:]]{9}'::varchar(14), ''::varchar) THEN acc.EXTERNAL_ID_VOD__C ELSE NULL END AS bp_code, acc.OUTLET_ID_TVA__C AS ims_outlet_code, acc.PMO_GPO_ACCOUNT_AFFILIATIONS AS pmo_gpo_account_affiliations, tsf.synribo_target_tva__c AS onc_synribo_target, tsf.treanda_sbo_tva__c AS onc_treanda_sbo, tsf.trisenox_sbo_tva__c AS onc_trisenox_sbo, CASE WHEN (tsf.territory_vod__c ~~ 'TO%'::varchar(3)) THEN acc.TREANDA_LQ_TGT_TVA__C ELSE NULL END AS onc_treanda_target, acc.BUSINESS_ASSOCIATE_AGREEMENT AS business_associate_agreement, CASE WHEN (tsf.territory_vod__c ~~ 'TO%'::varchar(3)) THEN acc.TBO_FILGRASTIM_TARGET_TVA__C ELSE NULL END AS granix_indicator, acc.ACCOUNT_DEMO_ID_TVA__C AS acct_demo_id FROM (((((WSMP_ADMIN.VV_ACCOUNT acc JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((acc.RECORDTYPEID = rta.ID))) JOIN WSMP_ADMIN.VV_ACCOUNTSHARE acctshr ON (((acc.ID = acctshr.ACCOUNTID) AND (acctshr.ROWCAUSE = 'TerritoryManual'::varchar(15))))) JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) JOIN (SELECT x.id, x.isdeleted, x.name, x.recordtypeid, x.createddate, x.createdbyid, x.lastmodifieddate, x.lastmodifiedbyid, x.systemmodstamp, x.mayedit, x.islocked, x.account_vod__c, x.address_vod__c, x.last_activity_date_vod__c, x.my_target_vod__c, x.route_vod__c, x.mobile_id_vod__c, x.external_id_vod__c, x.territory_vod__c, x.ytd_activity_vod__c, x.preferred_account_vod__c, x.allowed_products_vod__c, x.territory_status_tva__c, x.territory_specialty_tva__c, x.treats_es_osa_tva__c, x.osa_patients_tva__c, x.account_status_tva__c, x.dea_number_tva__c, x.synribo_target_tva__c, x.treanda_sbo_tva__c, x.trisenox_sbo_tva__c, x.appt_index_tva__c, x.merged_mvn__c, x.call_plan_designation_tva__c, x.campaign_tva__c, x.rnk FROM (SELECT x.id, x.isdeleted, x.name, x.recordtypeid, x.createddate, x.createdbyid, x.lastmodifieddate, x.lastmodifiedbyid, x.systemmodstamp, x.mayedit, x.islocked, x.account_vod__c, x.address_vod__c, x.last_activity_date_vod__c, x.my_target_vod__c, x.route_vod__c, x.mobile_id_vod__c, x.external_id_vod__c, x.territory_vod__c, x.ytd_activity_vod__c, x.preferred_account_vod__c, x.allowed_products_vod__c, x.territory_status_tva__c, x.territory_specialty_tva__c, x.treats_es_osa_tva__c, x.osa_patients_tva__c, x.account_status_tva__c, x.dea_number_tva__c, x.synribo_target_tva__c, x.treanda_sbo_tva__c, x.trisenox_sbo_tva__c, x.appt_index_tva__c, x.merged_mvn__c, x.call_plan_designation_tva__c, x.campaign_tva__c, row_number() OVER (PARTITION BY x.account_vod__c, x.territory_vod__c ORDER BY x.createddate, x.lastmodifieddate, x.systemmodstamp, x.address_vod__c) AS rnk FROM WSMP_ADMIN.vv_tsf_vod__c x) x WHERE (x.rnk = 1)) tsf ON (((tsf.account_vod__c = acc.ID) AND (tsf.territory_vod__c = g.DEVELOPERNAME)))) JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON (((addr.ACCOUNT_VOD__C = acc.ID) AND (tsf.address_vod__c = addr.ID))));

CREATE  VIEW WSMP_ADMIN_ORA.i_bag_territory_product_terr AS
SELECT bt.TERRITORY_NUM AS territory_num, b.BAG_NAME AS bag_name, bp."POSITION" AS "position", bp.PRODUCT_NAME AS product_name FROM ((WSMP_ADMIN.BAG b JOIN WSMP_ADMIN.BAG_TERRITORY bt ON ((b.BAG_ID = bt.BAG_ID))) JOIN WSMP_ADMIN.BAG_PRODUCT bp ON ((b.BAG_ID = bp.BAG_ID))) WHERE ((b.VALID_FOR_TODAY = 'Y'::varchar(1)) AND (bt.VALID_FOR_TODAY = 'Y'::varchar(1)));

CREATE  VIEW WSMP_ADMIN_ORA.i_bag_territory_product_mgr AS
SELECT m.territory_num, (m.sales_force_id || 'MGR'::varchar(3)) AS bag_name, row_number() OVER (PARTITION BY m.territory_num ORDER BY p.product_name) AS "position", p.product_name FROM ((SELECT substr(i_bag_territory_product_terr.territory_num, 1, 2) AS sales_force_id, i_bag_territory_product_terr.product_name FROM WSMP_ADMIN.i_bag_territory_product_terr GROUP BY substr(i_bag_territory_product_terr.territory_num, 1, 2), i_bag_territory_product_terr.product_name) p JOIN (SELECT substr(i_bag_territory_product_terr.territory_num, 1, 2) AS sales_force_id, (substr(i_bag_territory_product_terr.territory_num, 1, 6) || '00'::varchar(2)) AS territory_num FROM WSMP_ADMIN.i_bag_territory_product_terr GROUP BY substr(i_bag_territory_product_terr.territory_num, 1, 2), (substr(i_bag_territory_product_terr.territory_num, 1, 6) || '00'::varchar(2))) m ON ((p.sales_force_id = m.sales_force_id)));

CREATE  VIEW WSMP_ADMIN_ORA.i_bag_territory_product AS
SELECT i_bag_territory_product_terr.territory_num, i_bag_territory_product_terr.bag_name, i_bag_territory_product_terr."position", i_bag_territory_product_terr.product_name FROM WSMP_ADMIN.i_bag_territory_product_terr UNION SELECT i_bag_territory_product_mgr.territory_num, i_bag_territory_product_mgr.bag_name, i_bag_territory_product_mgr."position", i_bag_territory_product_mgr.product_name FROM WSMP_ADMIN.i_bag_territory_product_mgr;

CREATE  VIEW WSMP_ADMIN_ORA.Syneos_Cinqair_dddmd AS
 SELECT ca.sales_force_id,
        ca.territory_number,
        dddmd.onc_account_demo_id,
        dddmd.outlet_name,
        demo.outlet_address,
        demo.outlet_city,
        demo.outlet_state,
        demo.outlet_zip,
        dddmd.outlet_code,
        dddmd.tvcmid,
        dddmd.subcategory_code,
        dddmd.basket_name,
        dddmd.data_date,
        dddmd.date,
        dddmd.rollup_month,
        dddmd.quantity,
        dddmd.dollars,
        dddmd.rollup_week
 FROM datamart.ddd_md dddmd, datamart.dddmd_demographics demo, datamart.current_alignment ca
 WHERE ((demo.outlet_zip = ca.zip_code) AND (dddmd.outlet_code = demo.outlet_code) AND (ca.territory_number = ANY (ARRAY['TSATCZ48'::varchar(8), 'TSATNZ43'::varchar(8), 'TSATGZ45'::varchar(8), 'TSATGZ47'::varchar(8), 'TSATGZ50'::varchar(8), 'TSATNZ44'::varchar(8), 'TSATNZ49'::varchar(8), 'TSATCZ43'::varchar(8), 'TSATWZ49'::varchar(8), 'TSATNZ41'::varchar(8), 'TSATSZ42'::varchar(8), 'TSATSZ48'::varchar(8)])) AND (dddmd.basket_name ~~* '%CINQ%'::varchar(6)) AND (dddmd.rollup_month > '2019-12-31'::date))
 GROUP BY ca.sales_force_id,
          ca.territory_number,
          dddmd.onc_account_demo_id,
          dddmd.outlet_name,
          demo.outlet_address,
          demo.outlet_city,
          demo.outlet_state,
          demo.outlet_zip,
          dddmd.outlet_code,
          dddmd.tvcmid,
          dddmd.subcategory_code,
          dddmd.basket_name,
          dddmd.data_date,
          dddmd.date,
          dddmd.rollup_month,
          dddmd.quantity,
          dddmd.dollars,
          dddmd.rollup_week;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_roster AS
SELECT r.TERRITORY_NUM AS territory_num, r.LAST_NAME AS last_name, r.FIRST_NAME AS first_name, r.SHIP_ADDRESS_LINE1 AS ship_address_line1, r.SHIP_ADDRESS_LINE2 AS ship_address_line2, r.SHIP_CITY AS ship_city, r.SHIP_STATE AS ship_state, r.SHIP_ZIP AS ship_zip, coalesce(r.BUSINESS_PHONE, r.CELL_PHONE, r.HOME_PHONE) AS phone, r.EMAIL AS email, CASE WHEN (r.REP_TYPE = 'REP'::varchar(3)) THEN p.m_territory_num WHEN (r.REP_TYPE = 'RM'::varchar(2)) THEN r.TERRITORY_NUM ELSE NULL END AS district, CASE WHEN (r.REP_TYPE = 'REP'::varchar(3)) THEN p.d_territory_num WHEN (r.REP_TYPE = 'RM'::varchar(2)) THEN r.PARENT_TERRITORY_NUM WHEN (r.REP_TYPE = 'AD'::varchar(2)) THEN r.TERRITORY_NUM ELSE NULL END AS region FROM (WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA r LEFT JOIN WSMP_ADMIN.v_roster_teva_rep_mgr_dir p ON (((r.TERRITORY_NUM = p.rep_territory_num) AND (r.EMPLOYEE_ID = p.rep_emp_id)))) WHERE ((r.SALES_FORCE_ID = ANY (ARRAY['TO'::varchar(2), 'TN'::varchar(2)])) AND (r.LAST_NAME <> 'Vacant'::varchar(6)) AND (r.REP_TYPE = ANY (ARRAY['REP'::varchar(3), 'RM'::varchar(2), 'AD'::varchar(2)])));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_sharepoint_tw AS
((SELECT lower(dim_csf_sales_roster_teva.USERNAME) AS title, dim_csf_sales_roster_teva.TERRITORY_NUM AS territory FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((dim_csf_sales_roster_teva.USERNAME IS NOT NULL) AND (dim_csf_sales_roster_teva.SALES_FORCE_ID = 'TW'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.d_username) AS title, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) AS territory FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TW'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.d_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TW'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TW'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_sharepoint_tr AS
((SELECT lower(dim_csf_sales_roster_teva.USERNAME) AS title, dim_csf_sales_roster_teva.TERRITORY_NUM AS territory FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((dim_csf_sales_roster_teva.USERNAME IS NOT NULL) AND (dim_csf_sales_roster_teva.SALES_FORCE_ID = 'TR'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.d_username) AS title, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) AS territory FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TR'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.d_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TR'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TR'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_sharepoint_tc_tn_tp AS
((SELECT lower(dim_csf_sales_roster_teva.USERNAME) AS title, dim_csf_sales_roster_teva.TERRITORY_NUM AS territory FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((dim_csf_sales_roster_teva.USERNAME IS NOT NULL) AND (dim_csf_sales_roster_teva.SALES_FORCE_ID = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)]))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.d_username) AS title, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) AS territory FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)]))) GROUP BY lower(v_roster_teva_rep_mgr_dir.d_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)]))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = ANY (ARRAY['TC'::varchar(2), 'TN'::varchar(2), 'TP'::varchar(2)]))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_sharepoint_tb AS
((SELECT lower(dim_csf_sales_roster_teva.USERNAME) AS title, dim_csf_sales_roster_teva.TERRITORY_NUM AS territory FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((dim_csf_sales_roster_teva.USERNAME IS NOT NULL) AND (dim_csf_sales_roster_teva.SALES_FORCE_ID = 'TB'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.d_username) AS title, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) AS territory FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TB'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.d_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TB'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.m_territory_num, 1, 6) || '_I'::varchar(2))) UNION SELECT lower(v_roster_teva_rep_mgr_dir.h_username) AS lower, (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2)) FROM WSMP_ADMIN.v_roster_teva_rep_mgr_dir WHERE ((v_roster_teva_rep_mgr_dir.rep_username IS NOT NULL) AND (v_roster_teva_rep_mgr_dir.sales_force_id = 'TB'::varchar(2))) GROUP BY lower(v_roster_teva_rep_mgr_dir.h_username), (substr(v_roster_teva_rep_mgr_dir.d_territory_num, 1, 6) || '_I'::varchar(2));

CREATE  VIEW WSMP_ADMIN_ORA.v_adasuve_survey AS
SELECT t.ACCOUNT_VOD__C AS veeva_account_id, demo.last_name AS account_name, demo.npi, acc.ACCOUNT_DEA_TVA__C AS dea, acc.IMS_ORG_ID_TVA__C AS ims_org_id, acc.ADASUVE_ACCOUNT_INDICATOR AS adasuve_account_indicator, demo.address1, demo.address2, demo.address3, demo.city, demo.state, demo.zip, q.LASTMODIFIEDDATE AS updated_date, s.NAME AS survey, q.ORDER_VOD__C AS question_order, q.QUESTION_TEXT_VOD__C AS question, CASE ty.NAME WHEN NULLSEQUAL 'date_vod'::varchar(8) THEN to_char(q.DATE_VOD__C, 'yyyy-mm-dd'::varchar(10)) WHEN NULLSEQUAL 'text_vod'::varchar(8) THEN q.TEXT_VOD__C ELSE q.RESPONSE_VOD__C END AS answer, rep.LAST_NAME AS rep_last_name, rep.FIRST_NAME AS rep_first_name, hier.rep_territory_name, hier.m_territory_num AS region_territory_num, hier.m_territory_name AS region_territory_name, hier.d_territory_num AS area_territory_num, hier.d_territory_name AS area_territory_name FROM (((((((WSMP_ADMIN.VV_SURVEY_VOD__C s JOIN WSMP_ADMIN.VV_SURVEY_TARGET_VOD__C t ON ((s.ID = t.SURVEY_VOD__C))) JOIN WSMP_ADMIN.VV_QUESTION_RESPONSE_VOD__C q ON ((t.ID = q.SURVEY_TARGET_VOD__C))) JOIN WSMP_ADMIN.VV_RECORDTYPE ty ON ((q.TYPE_VOD__C = ty.ID))) JOIN WSMP_ADMIN.VV_ACCOUNT acc ON ((t.ACCOUNT_VOD__C = acc.ID))) JOIN WSMP_ADMIN.v_veeva_demo demo ON ((t.ACCOUNT_VOD__C = demo.veeva_account_id))) LEFT JOIN (SELECT dim_csf_sales_roster_teva.EMPLOYEE_ID, dim_csf_sales_roster_teva.TERRITORY_NUM, dim_csf_sales_roster_teva.TERRITORY_NAME, dim_csf_sales_roster_teva.SALES_FORCE_ID, dim_csf_sales_roster_teva.FULL_NAME, dim_csf_sales_roster_teva.LAST_NAME, dim_csf_sales_roster_teva.FIRST_NAME, dim_csf_sales_roster_teva.MIDDLE_NAME, dim_csf_sales_roster_teva.ADDRESS_LINE1, dim_csf_sales_roster_teva.ADDRESS_LINE2, dim_csf_sales_roster_teva.CITY, dim_csf_sales_roster_teva.STATE, dim_csf_sales_roster_teva.ZIP, dim_csf_sales_roster_teva.BUS_ADDRESS_LINE1, dim_csf_sales_roster_teva.BUS_ADDRESS_LINE2, dim_csf_sales_roster_teva.BUS_CITY, dim_csf_sales_roster_teva.BUS_STATE, dim_csf_sales_roster_teva.BUS_ZIP, dim_csf_sales_roster_teva.SHIP_ADDRESS_LINE1, dim_csf_sales_roster_teva.SHIP_ADDRESS_LINE2, dim_csf_sales_roster_teva.SHIP_CITY, dim_csf_sales_roster_teva.SHIP_STATE, dim_csf_sales_roster_teva.SHIP_ZIP, dim_csf_sales_roster_teva.BUSINESS_PHONE, dim_csf_sales_roster_teva.HOME_PHONE, dim_csf_sales_roster_teva.CELL_PHONE, dim_csf_sales_roster_teva.FAX, dim_csf_sales_roster_teva.VOICE_MAIL_EXT, dim_csf_sales_roster_teva.EMAIL, dim_csf_sales_roster_teva.HIRE_DATE, dim_csf_sales_roster_teva.BIRTHDAY, dim_csf_sales_roster_teva.TITLE, dim_csf_sales_roster_teva.REP_TYPE, dim_csf_sales_roster_teva.AREA_TRAINER, dim_csf_sales_roster_teva.USERNAME, dim_csf_sales_roster_teva.OUT_OF_TERRITORY, dim_csf_sales_roster_teva.PARENT_TERRITORY_NUM, dim_csf_sales_roster_teva.LAST_BUILD_DATE, dim_csf_sales_roster_teva.COMPANY_CD, dim_csf_sales_roster_teva.ORIG_HIRE_DATE FROM WSMP_ADMIN.DIM_CSF_SALES_ROSTER_TEVA WHERE ((dim_csf_sales_roster_teva.SALES_FORCE_ID = 'TB'::varchar(2)) AND (dim_csf_sales_roster_teva.REP_TYPE = 'REP'::varchar(3)))) rep ON ((demo.territory_num = rep.TERRITORY_NUM))) LEFT JOIN (SELECT v_territory_rep_mgr_dir.sales_force_id, v_territory_rep_mgr_dir.rep_territory_num, v_territory_rep_mgr_dir.rep_territory_name, v_territory_rep_mgr_dir.m_territory_num, v_territory_rep_mgr_dir.m_territory_name, v_territory_rep_mgr_dir.d_territory_num, v_territory_rep_mgr_dir.d_territory_name, v_territory_rep_mgr_dir.h_territory_num, v_territory_rep_mgr_dir.h_territory_name FROM WSMP_ADMIN.v_territory_rep_mgr_dir WHERE (v_territory_rep_mgr_dir.sales_force_id = 'TB'::varchar(2))) hier ON ((demo.territory_num = hier.rep_territory_num))) WHERE ((s.NAME = ANY (ARRAY['Profiling and Developing Product Champions'::varchar(42), 'REMS Enrollment and Formulary'::varchar(29)])) AND (demo.sales_force_id = 'TB'::varchar(2))) ORDER BY t.ACCOUNT_VOD__C, s.NAME, q.QUESTION_TEXT_VOD__C;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_cmop_product AS
SELECT v.VA_PRODUCT AS va_product, v.WK_PROD_CODE AS prod_code, upper(v.CEPH_PROD_DESC) AS prod_name, coalesce(p.brand_code, v.WK_PROD_CODE) AS brand_code, coalesce(p.brand_name, upper(v.CEPH_PROD_DESC)) AS brand_name, coalesce(p.market_code, v.WK_PROD_CODE) AS market_code, CASE WHEN (v.WK_PROD_CODE = 'TR0900'::varchar(6)) THEN 'RESPIRATORY'::varchar(11) ELSE CASE WHEN (v.WK_PROD_CODE = 'TW0900'::varchar(6)) THEN 'WOMENS HEALTH'::varchar(13) ELSE p.market_name END END AS market_name FROM (CUSTOMER.DIM_VA_PRODUCT_XREF v LEFT JOIN CUSTOMER.dim_product p ON ((v.WK_PROD_CODE = p.product_code))) WHERE (v.WK_PROD_CODE <> ALL (ARRAY['200102'::varchar(6), '200104'::varchar(6), '200112'::varchar(6), '200116'::varchar(6), 'V00100'::varchar(6)]));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_mm_ram_to_rsm AS
SELECT x.MM_RAM, x.RSM FROM (SELECT a.MM_RAM, (substr(b.TERRITORY_NUM, 1, 6) || '00'::varchar(2)) AS RSM FROM (teva_ingestion.EXT_MM_RAM_TO_STATE a JOIN WSMP_ADMIN.KC_ZIP_TO_TERRITORY b ON ((a.STATE = b.STATE))) WHERE ((substr(b.TERRITORY_NUM, 5, 2) <> 'ZZ'::varchar(2)) AND (b.TERRITORY_NAME IS NOT NULL)) GROUP BY a.MM_RAM, (substr(b.TERRITORY_NUM, 1, 6) || '00'::varchar(2))) x;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_rems_account_backup AS
SELECT stg.ASI_ACCOUNT_ID AS HCP_ID, align.TERRITORY_NUM AS territory_num, stg.SITE_NAME AS ACCOUNT_NAME, stg.ADDRESS_1 AS ADDRESS1, stg.ADDRESS_2 AS ADDRESS2, NULL AS ADDRESS3, stg.CITY, stg.STATE, stg.ZIP_CODE AS ZIP, 'Y'::varchar(1) AS PRIMARY_ADDRESS, stg.PHONE_NUMBER, fact.IMS_ORG_ID AS EXTERNAL_ID, 'HOSPITAL'::varchar(8) AS CUSTOMER_TYPE, NULL AS BPNUMBER, NULL AS SUBTYPE FROM ((WSMP_ADMIN.STG_REMS_FACILITY stg LEFT JOIN (SELECT ext_kc_zip_to_territory.ZIP, ext_kc_zip_to_territory.CITY, ext_kc_zip_to_territory.STATE, ext_kc_zip_to_territory.TERRITORY_NUM, ext_kc_zip_to_territory.TERRITORY_NAME, ext_kc_zip_to_territory.AREA_NAME, ext_kc_zip_to_territory.REGION_NAME, ext_kc_zip_to_territory.SALES_FORCE_ID, ext_kc_zip_to_territory.ORGANIZATION_CODE, ext_kc_zip_to_territory.INACTIVE_FLAG, ext_kc_zip_to_territory.COMMENTS, ext_kc_zip_to_territory.MIRROR_FLAG, ext_kc_zip_to_territory.MIRROR_TERRITORY_NUM, ext_kc_zip_to_territory.batch_id, ext_kc_zip_to_territory.row_id, ext_kc_zip_to_territory.update_ts FROM teva_ingestion.ext_kc_zip_to_territory WHERE (ext_kc_zip_to_territory.SALES_FORCE_ID = 'TB'::varchar(2))) align ON ((substr(stg.ZIP_CODE, 1, 5) = align.ZIP))) LEFT JOIN WSMP_ADMIN.HCOS_IDENTIFIER_FACT fact ON (((fact.IDENTIFIER_ID = 15::numeric(18,0)) AND (fact.IDENTIFIER = stg.NPI)))) WHERE (stg.VEEVA_ACCOUNT_ID IS NULL);

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Fentora_Market AS
SELECT rx.payer_plan_num AS plan_num, rx.product_code, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.month_bucket WHEN 24::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.month_bucket WHEN 23::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.month_bucket WHEN 22::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.month_bucket WHEN 21::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.month_bucket WHEN 20::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.month_bucket WHEN 19::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.month_bucket WHEN 18::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.month_bucket WHEN 17::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.month_bucket WHEN 16::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.month_bucket WHEN 15::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.month_bucket WHEN 14::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.month_bucket WHEN 13::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.month_bucket WHEN 12::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.month_bucket WHEN 11::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.month_bucket WHEN 10::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.month_bucket WHEN 9::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.month_bucket WHEN 8::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.month_bucket WHEN 7::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.month_bucket WHEN 6::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.month_bucket WHEN 5::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.month_bucket WHEN 4::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.month_bucket WHEN 3::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.month_bucket WHEN 2::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.trx_cnt ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.month_bucket WHEN 1::numeric(18,0) THEN rx.nrx_cnt ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.dw_presc_plan_rx_m rx, CUSTOMER.dim_product p WHERE ((rx.product_code = ANY (ARRAY['300500'::varchar(6), '300100'::varchar(6), '300180'::varchar(6), '300170'::varchar(6), '300130'::varchar(6), '300140'::varchar(6), '300110'::varchar(6)])) AND (rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (rx.product_code = p.product_code)) GROUP BY rx.payer_plan_num, rx.product_code;

CREATE  VIEW WSMP_ADMIN_ORA.stg_ims_npi AS
SELECT y.ims_id, y.npi FROM (SELECT x.ims_id, x.npi, row_number() OVER (PARTITION BY x.ims_id ORDER BY x.rnk, x.npi) AS rnk FROM (SELECT x1.ID_NUM AS ims_id, x2.ID_NUM AS npi, 1 AS rnk FROM (teva_ingestion.tvcmid_xref x1 JOIN teva_ingestion.tvcmid_xref x2 ON ((x1.TVCMID = x2.TVCMID))) WHERE ((x1.ID_TYPE = 'IMS_ID'::varchar(6)) AND (x2.ID_TYPE = 'NPI'::varchar(3))) UNION SELECT hcos_professional.IMS_ID AS ims_id, hcos_professional.NPI AS npi, 2 AS rnk FROM WSMP_ADMIN.HCOS_PROFESSIONAL WHERE ((hcos_professional.IMS_ID IS NOT NULL) AND (hcos_professional.NPI IS NOT NULL))) x) y WHERE (y.rnk = 1);

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_do_not_promote_with_veevaid AS
(((SELECT d.SALES_FORCE_ID AS sales_force_id, acct.ID AS veeva_id, sln.state_license_number, dea.dea_num, d.PRODUCT_NAME AS product_name, d.SPECIALTY_GROUP AS specialty_group, 'N'::varchar(1) AS app, CASE WHEN (d.DEBARRED = 'Y'::varchar(1)) THEN 'Y'::varchar(1) ELSE 'N'::varchar(1) END AS DNP FROM (((WSMP_ADMIN.DIM_DNC d JOIN WSMP_ADMIN.stg_ims_dea dea ON ((d.IMS_ID = dea.ims_id))) LEFT JOIN (SELECT substr(g.DEVELOPERNAME, 1, 2) AS sales_force_id, acct.ID_VOD__C AS ims_id, addr.LICENSE_VOD__C AS state_license_number FROM ((((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((acct.RECORDTYPEID = rta.ID))) JOIN WSMP_ADMIN.VV_ACCOUNTSHARE acctshr ON (((acct.ID = acctshr.ACCOUNTID) AND (acctshr.ROWCAUSE = 'TerritoryManual'::varchar(15))))) JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON ((addr.ACCOUNT_VOD__C = acct.ID))) WHERE ((addr.LICENSE_VOD__C IS NOT NULL) AND (acct.ID_VOD__C IS NOT NULL)) GROUP BY substr(g.DEVELOPERNAME, 1, 2), acct.ID_VOD__C, addr.LICENSE_VOD__C) sln ON (((d.IMS_ID = sln.ims_id) AND (d.SALES_FORCE_ID = sln.sales_force_id)))) LEFT JOIN WSMP_ADMIN.VV_ACCOUNT acct ON ((d.IMS_ID = acct.ID_VOD__C))) UNION SELECT 'TC'::varchar(2), acct.ID AS veeva_id, sln.state_license_number, dea.dea_num, 'NUVIGIL'::varchar(7), d.SPECIALTY_PRIMARY_CODE AS specialty_primary_code, 'N'::varchar(1) AS APP, 'Y'::varchar(1) AS DNP FROM (((WSMP_ADMIN.DEBARRED d JOIN WSMP_ADMIN.stg_ims_dea dea ON ((d.IMS_ID = dea.ims_id))) LEFT JOIN (SELECT substr(g.DEVELOPERNAME, 1, 2) AS sales_force_id, acct.ID_VOD__C AS ims_id, addr.LICENSE_VOD__C AS state_license_number FROM ((((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((acct.RECORDTYPEID = rta.ID))) JOIN WSMP_ADMIN.VV_ACCOUNTSHARE acctshr ON (((acct.ID = acctshr.ACCOUNTID) AND (acctshr.ROWCAUSE = 'TerritoryManual'::varchar(15))))) JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON ((addr.ACCOUNT_VOD__C = acct.ID))) WHERE ((addr.LICENSE_VOD__C IS NOT NULL) AND (acct.ID_VOD__C IS NOT NULL)) GROUP BY substr(g.DEVELOPERNAME, 1, 2), acct.ID_VOD__C, addr.LICENSE_VOD__C) sln ON (((d.IMS_ID = sln.ims_id) AND (sln.sales_force_id = 'TC'::varchar(2))))) LEFT JOIN WSMP_ADMIN.VV_ACCOUNT acct ON ((d.IMS_ID = acct.ID_VOD__C))) WHERE (d.CURRENT_IND = 'Y'::varchar(1)) GROUP BY 'TC'::varchar(2), acct.ID, sln.state_license_number, dea.dea_num, 'NUVIGIL'::varchar(7), d.SPECIALTY_PRIMARY_CODE, 'N'::varchar(1), 'Y'::varchar(1)) UNION SELECT 'TP'::varchar(2), acct.ID AS veeva_id, sln.state_license_number, dea.dea_num, 'FENTORA'::varchar(7), d.SPECIALTY_PRIMARY_CODE AS specialty_primary_code, 'N'::varchar(1) AS APP, 'Y'::varchar(1) AS DNP FROM (((WSMP_ADMIN.DEBARRED d JOIN WSMP_ADMIN.stg_ims_dea dea ON ((d.IMS_ID = dea.ims_id))) LEFT JOIN (SELECT substr(g.DEVELOPERNAME, 1, 2) AS sales_force_id, acct.ID_VOD__C AS ims_id, addr.LICENSE_VOD__C AS state_license_number FROM ((((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.VV_RECORDTYPE rta ON ((acct.RECORDTYPEID = rta.ID))) JOIN WSMP_ADMIN.VV_ACCOUNTSHARE acctshr ON (((acct.ID = acctshr.ACCOUNTID) AND (acctshr.ROWCAUSE = 'TerritoryManual'::varchar(15))))) JOIN WSMP_ADMIN.VV_GROUP g ON ((acctshr.USERORGROUPID = g.ID))) JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON ((addr.ACCOUNT_VOD__C = acct.ID))) WHERE ((addr.LICENSE_VOD__C IS NOT NULL) AND (acct.ID_VOD__C IS NOT NULL)) GROUP BY substr(g.DEVELOPERNAME, 1, 2), acct.ID_VOD__C, addr.LICENSE_VOD__C) sln ON (((d.IMS_ID = sln.ims_id) AND (sln.sales_force_id = 'TP'::varchar(2))))) LEFT JOIN WSMP_ADMIN.VV_ACCOUNT acct ON ((d.IMS_ID = acct.ID_VOD__C))) WHERE (d.CURRENT_IND = 'Y'::varchar(1)) GROUP BY 'TP'::varchar(2), acct.ID, sln.state_license_number, dea.dea_num, 'FENTORA'::varchar(7), d.SPECIALTY_PRIMARY_CODE, 'N'::varchar(1), 'Y'::varchar(1)) UNION SELECT 'TC'::varchar(2) AS sales_force_id, acct.ID AS veeva_id, addr.LICENSE_VOD__C AS state_license_number, dea.dea_num, 'NUVIGIL'::varchar(7) AS product_name, ssx.SPECIALTY_CODE AS specialty_code, 'Y'::varchar(1) AS app, 'N'::varchar(1) AS DNP FROM (((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.stg_ims_dea dea ON ((acct.ID_VOD__C = dea.ims_id))) LEFT JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON (((addr.ACCOUNT_VOD__C = acct.ID) AND (addr.LICENSE_VOD__C IS NOT NULL)))) LEFT JOIN WSMP_ADMIN.SIEBEL_SPECIALTY_XREF ssx ON ((acct.SPECIALTY_1_VOD__C = ssx.SPECIALTY_DESCRIPTION))) WHERE (acct.NUVIGIL_APP_TVA__C = 'true'::varchar(4))) UNION SELECT 'TP'::varchar(2) AS sales_force_id, acct.ID AS veeva_id, addr.LICENSE_VOD__C AS state_license_number, dea.dea_num, 'FENTORA'::varchar(7) AS product_name, SSX.SPECIALTY_CODE AS specialty_code, 'Y'::varchar(1) AS app, 'N'::varchar(1) AS DNP FROM (((WSMP_ADMIN.VV_ACCOUNT acct JOIN WSMP_ADMIN.stg_ims_dea dea ON ((acct.ID_VOD__C = dea.ims_id))) LEFT JOIN WSMP_ADMIN.VV_ADDRESS_VOD__C addr ON (((addr.ACCOUNT_VOD__C = acct.ID) AND (addr.LICENSE_VOD__C IS NOT NULL)))) LEFT JOIN WSMP_ADMIN.SIEBEL_SPECIALTY_XREF SSX ON ((acct.SPECIALTY_1_VOD__C = SSX.SPECIALTY_DESCRIPTION))) WHERE (acct.FENTORA_APP_TVA__C = 'true'::varchar(4));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_dmd_product AS
SELECT lpad(dim_product_ims_ddd.ims_product_code, 8, '0'::varchar(1)) AS ims_product_code, 'GCSF'::varchar(4) AS market_name, dim_product_ims_ddd.brand_name, dim_product_ims_ddd.ims_product_name AS product_name FROM CUSTOMER.dim_product_ims_ddd WHERE ((dim_product_ims_ddd.brand_name = ANY (ARRAY['NEUPOGEN'::varchar(8), 'GRANIX'::varchar(6), 'LEUKINE'::varchar(7)])) AND (dim_product_ims_ddd.market_name = 'ONCOLOGY'::varchar(8)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Fentora_Product_Totals AS
SELECT rx.PRODUCT_CODE AS product_code, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 24::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt24, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 23::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt23, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 22::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt22, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 21::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt21, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 20::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt20, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 19::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt19, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 18::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt18, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 17::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt17, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 16::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt16, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 15::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt15, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 14::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt14, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 13::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt13, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 12::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt12, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 11::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt11, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 10::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt10, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 9::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt9, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 8::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt8, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 7::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt7, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 6::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt6, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 5::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt5, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 4::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt4, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 3::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt3, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 2::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt2, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.TRX_CNT ELSE 0::numeric(18,0) END) AS trx_cnt1, sum(CASE rx.MONTH_BUCKET WHEN 1::numeric(18,0) THEN rx.NRX_CNT ELSE 0::numeric(18,0) END) AS nrx_cnt1 FROM WSMP_ADMIN.DW_PRESC_PLAN_RX_M rx, CUSTOMER.dim_product p WHERE ((rx.PRODUCT_CODE = ANY (ARRAY['300500'::varchar(6), '300100'::varchar(6), '300180'::varchar(6), '300170'::varchar(6), '300130'::varchar(6), '300140'::varchar(6), '300110'::varchar(6)])) AND (rx.MONTH_BUCKET >= 1::numeric(18,0)) AND (rx.MONTH_BUCKET <= 24::numeric(18,0)) AND (rx.PRODUCT_CODE = p.product_code)) GROUP BY rx.PRODUCT_CODE;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_tr_launch_analytics_rx AS
SELECT rx.ims_id, px.MODEL AS model, mpm.PAYMENT_METHOD AS method_of_payment, rx.payer_plan_num, p.product_name, rx.product_code, to_char(rx.month_ending, ' YYYY-MM-DD'::varchar(11)) AS month_ending, rx.month_bucket, to_char(rx.week_ending, ' YYYY-MM-DD'::varchar(11)) AS week_ending, rx.week_bucket, rx.nrx_cnt, rx.trx_cnt, rx.sales_category FROM (((WSMP_ADMIN.dw_presc_plan_rx_w rx JOIN CUSTOMER.dim_product p ON ((rx.product_code = p.product_code))) LEFT JOIN WSMP_ADMIN.TFC_IMS_PLAN_XREF px ON ((rx.payer_plan_num = px.PAYER_PLAN_NUM))) LEFT JOIN WSMP_ADMIN.DIM_IMS_MODEL_PAYMENT_METHOD mpm ON ((px.MODEL = mpm.MODEL))) WHERE ((rx.product_code ~~ '330-14%'::varchar(7)) AND (rx.product_code NOT IN (SELECT drm45_rollup.ROLLUP_WK_PRODUCT_CODE AS rollup_wk_product_code FROM WSMP_ADMIN.DRM45_ROLLUP GROUP BY drm45_rollup.ROLLUP_WK_PRODUCT_CODE)) AND (rx.week_bucket >= 1::numeric(18,0)) AND (rx.week_bucket <= 52::numeric(18,0)));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Nuvigil_Monthly_Rx AS
SELECT x.IMS_ID AS ims_id, x.PRODUCT_CODE AS product_code, p.product_name, x.MONTH_ENDING AS month_ending, sum(x.NRX_QTY) AS nrx_qty, sum(x.TRX_QTY) AS trx_qty, sum(x.UNNORMALIZED_NRX_CNT) AS nrx_cnt, sum(x.UNNORMALIZED_TRX_CNT) AS trx_cnt FROM WSMP_ADMIN.DW_PRESC_RX_M x, CUSTOMER.dim_product p WHERE ((x.MONTH_BUCKET >= 1::numeric(18,0)) AND (x.MONTH_BUCKET <= 24::numeric(18,0)) AND (x.PRODUCT_CODE = ANY (ARRAY['100N05'::varchar(6), '100N15'::varchar(6), '100N25'::varchar(6), '100101'::varchar(6), '100102'::varchar(6), '100120'::varchar(6)])) AND (x.PRODUCT_CODE = p.product_code)) GROUP BY x.IMS_ID, x.PRODUCT_CODE, p.product_name, x.MONTH_ENDING ORDER BY x.IMS_ID, x.PRODUCT_CODE, p.product_name, x.MONTH_ENDING;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_gcsf_dmd AS
SELECT coalesce(z.TO_TERRITORY_NUM_1, 'TOHZHZ99'::varchar(8)) AS TERRITORY_NUM, s.IMS_OUTLET_CODE, s.SUBCATEGORY_CODE, s.CATEGORY_CODE, s.IMS_PRODUCT_CODE, p.product_code AS PRODUCT_CODE, to_char(s.DATA_DATE, 'YYYYMM'::varchar(6)) AS MTH_YYYYMM, s.DOL_MTH01, s.DOL_MTH02, s.DOL_MTH03, s.DOL_MTH04, s.DOL_MTH05, s.DOL_MTH06, s.DOL_MTH07, s.DOL_MTH08, s.DOL_MTH09, s.DOL_MTH10, s.DOL_MTH11, s.DOL_MTH12, s.DOL_MTH13, s.DOL_MTH14, s.DOL_MTH15, s.DOL_MTH16, s.DOL_MTH17, s.DOL_MTH18, s.DOL_MTH19, s.DOL_MTH20, s.DOL_MTH21, s.DOL_MTH22, s.DOL_MTH23, s.DOL_MTH24, s.OUTLET_NAME, s.OUTLET_ADDRESS, s.OUTLET_CITY, s.OUTLET_STATE, s.OUTLET_ZIP FROM ((WSMP_ADMIN.STG_ONC_DMD_MONTHLY_DOLLARS s JOIN CUSTOMER.dim_product_ims_ddd p ON ((s.IMS_PRODUCT_CODE = p.ims_product_code))) LEFT JOIN WSMP_ADMIN.TFC_CURRENT_ZIP_ALIGNMENT z ON ((s.OUTLET_ZIP = z.ZIP))) WHERE (p.brand_name = ANY (ARRAY['NEUPOGEN'::varchar(8), 'GRANIX'::varchar(6), 'LEUKINE'::varchar(7)]));

CREATE  VIEW WSMP_ADMIN_ORA.v_ims_npi AS
SELECT x1.ID_NUM AS ims_id, x2.ID_NUM AS npi FROM (teva_ingestion.tvcmid_xref x1 JOIN teva_ingestion.tvcmid_xref x2 ON ((x1.TVCMID = x2.TVCMID))) WHERE ((x1.ID_TYPE = 'IMS_ID'::varchar(6)) AND (x2.ID_TYPE = 'NPI'::varchar(3))) UNION SELECT hcos_professional.IMS_ID AS ims_id, hcos_professional.NPI AS npi FROM WSMP_ADMIN.HCOS_PROFESSIONAL;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_create_mm_ram_to_rsm_test AS
SELECT x.MM_RAM, x.RSM FROM (SELECT a.MM_RAM, (substr(b.TERRITORY_NUM, 1, 6) || '00'::varchar(2)) AS RSM FROM (teva_ingestion.EXT_MM_RAM_TO_STATE a JOIN WSMP_ADMIN.KC_ZIP_TO_TERRITORY b ON ((a.STATE = b.STATE))) WHERE ((substr(b.TERRITORY_NUM, 5, 2) <> 'ZZ'::varchar(2)) AND (b.TERRITORY_NAME IS NOT NULL)) GROUP BY a.MM_RAM, (substr(b.TERRITORY_NUM, 1, 6) || '00'::varchar(2))) x ORDER BY x.MM_RAM, x.RSM LIMIT 1000000;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_agile_mktg_copay_redemptions AS
SELECT CASE mod(npi.tvcmid, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((npi.tvcmid)::int)::varchar ELSE rtrim((npi.tvcmid)::varchar, '0'::varchar(1)) END AS tvcmid, npi.ims_id, cd.VEEVA_ACCOUNT_ID AS veeva_account_id, p.ASI_PROGRAM_NUM AS asi_program_num, p.PROGRAM_DESC AS program_desc, cd.COPAY_CARD_NUM AS copay_card_num, coalesce(cd.ASI_PHYS_ZIP, cd.PHARMACY_ZIP) AS zip_code, to_char(cd.FILL_DATE, 'YYYY-MM-DD'::varchar(10)) AS fill_date, cd.BRAND_NAME AS brand_name, cd.DRUG_DESC AS drug_desc, (cd.QTY)::int AS qty FROM WSMP_ADMIN.TFC_ASI_COPAY_DETAIL_WKLY cd, WSMP_ADMIN.DIM_ASI_PROGRAM p, (SELECT tvcmid_hcp_demo.TVCMID AS tvcmid, tvcmid_hcp_demo.NPI AS npi, tvcmid_hcp_demo.IMS_ID AS ims_id FROM teva_ingestion.tvcmid_hcp_demo WHERE (tvcmid_hcp_demo.NPI IS NOT NULL) GROUP BY tvcmid_hcp_demo.TVCMID, tvcmid_hcp_demo.NPI, tvcmid_hcp_demo.IMS_ID) npi WHERE ((cd.IMS_ID = npi.ims_id) AND (cd.BRAND_NAME = 'NUVIGIL'::varchar(7)) AND (cd.PROGRAM_NUM = p.ASI_PROGRAM_NUM) AND (cd.FILL_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (cd.FILL_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1)))) AND (cd.REDEMPTION_TYPE = p.REDEMPTION_TYPE));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_Agile_Mktg_Mix_Voucher_Redemptions AS
SELECT CASE mod(v.tvcmid, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((v.tvcmid)::int)::varchar ELSE rtrim((v.tvcmid)::varchar, '0'::varchar(1)) END AS tvcmid, x.ims_id, x.veeva_account_id, v.asi_program_num, v.program_desc, v.voucher_num, v.zip_code, to_char(v.fill_date, 'YYYY-MM-DD'::varchar(10)) AS fill_date, v.product_name, v.drug_desc, CASE mod(v.qty, 1::numeric(18,0)) WHEN NULLSEQUAL 0::numeric(18,0) THEN ((v.qty)::int)::varchar ELSE rtrim((v.qty)::varchar, '0'::varchar(1)) END AS qty FROM ((SELECT v.tvcmid, v.ims_id, v.asi_program_num, v.program_desc, v.voucher_num, v.zip_code, v.fill_date, v.product_name, v.drug_desc, v.qty FROM (SELECT npi.tvcmid, npi.ims_id, p.ASI_PROGRAM_NUM AS asi_program_num, p.PROGRAM_DESC AS program_desc, vd.VOUCHER_NUM AS voucher_num, coalesce(vd.PROVIDER_ZIP, vd.PHARMACY_ZIP) AS zip_code, vd.FILL_DATE AS fill_date, vd.PRODUCT_NAME AS product_name, vd.DRUG_DESC AS drug_desc, vd.QTY AS qty FROM ((WSMP_ADMIN.TFC_ASI_REDEMPTION_DETAIL_WKLY vd JOIN WSMP_ADMIN.DIM_ASI_PROGRAM p ON (((vd.PROGRAM_NUM = p.ASI_PROGRAM_NUM) AND (vd.REDEMPTION_TYPE = p.REDEMPTION_TYPE)))) LEFT JOIN (SELECT tvcmid_hcp_demo.TVCMID AS tvcmid, tvcmid_hcp_demo.NPI AS npi, tvcmid_hcp_demo.IMS_ID AS ims_id FROM teva_ingestion.tvcmid_hcp_demo WHERE (tvcmid_hcp_demo.NPI IS NOT NULL) GROUP BY tvcmid_hcp_demo.TVCMID, tvcmid_hcp_demo.NPI, tvcmid_hcp_demo.IMS_ID) npi ON ((vd.NPI = npi.npi))) WHERE ((vd.PRODUCT_NAME = 'NUVIGIL'::varchar(7)) AND (vd.FILL_DATE >= (last_day(add_months((statement_timestamp())::timestamp, (-25))) + 1)) AND (vd.FILL_DATE <= last_day(add_months((statement_timestamp())::timestamp, (-1)))))) v) v LEFT JOIN (SELECT demo_combined.ims_id, demo_combined.veeva_account_id FROM WSMP_ADMIN.demo_combined WHERE ((demo_combined.sales_force_id = 'TC'::varchar(2)) AND (demo_combined.veeva_account_id IS NOT NULL)) GROUP BY demo_combined.ims_id, demo_combined.veeva_account_id) x ON ((v.ims_id = x.ims_id)));

CREATE  VIEW WSMP_ADMIN_ORA.v_tmp_ms AS
SELECT rx.ims_client_num, 2 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, rx.sales_category, rx.rx_type, rx.ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, (((rx.nrx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_001, (((rx.nrx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_002, (((rx.nrx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_003, (((rx.nrx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_004, (((rx.nrx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_005, (((rx.nrx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_006, (((rx.nrx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_007, (((rx.nrx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_008, (((rx.nrx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_009, (((rx.nrx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_010, (((rx.nrx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_011, (((rx.nrx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_012, (((rx.nrx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_013, (((rx.nrx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_014, (((rx.nrx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_015, (((rx.nrx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_016, (((rx.nrx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_017, (((rx.nrx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_018, (((rx.nrx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_019, (((rx.nrx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_020, (((rx.nrx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_021, (((rx.nrx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_022, (((rx.nrx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_023, (((rx.nrx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_024, (((rx.trx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_001, (((rx.trx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_002, (((rx.trx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_003, (((rx.trx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_004, (((rx.trx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_005, (((rx.trx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_006, (((rx.trx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_007, (((rx.trx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_008, (((rx.trx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_009, (((rx.trx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_010, (((rx.trx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_011, (((rx.trx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_012, (((rx.trx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_013, (((rx.trx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_014, (((rx.trx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_015, (((rx.trx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_016, (((rx.trx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_017, (((rx.trx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_018, (((rx.trx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_019, (((rx.trx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_020, (((rx.trx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_021, (((rx.trx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_022, (((rx.trx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_023, (((rx.trx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_024, 'stg_ims_mhj_qty_m'::varchar(17) AS row_source FROM ((teva_ingestion.EXT_IMS_MHJ_QTY_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_QTY) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE (p.MARKET_NAME = 'MULTIPLE SCLEROSIS'::varchar(18)) UNION ALL SELECT rx.ims_client_num, rx.ims_report_num, rx.sra_1, rx.sra_2, rx.sra_3, rx.sra_4, rx.sales_category, rx.rx_type, rx.ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.mid_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.filler_02, CASE WHEN (rx.payer_plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.payer_plan_name) || '"'::varchar(1)) ELSE rx.payer_plan_name END AS plan_name, rx.data_month, 48 AS bucket_count, rx.nrx_01, rx.nrx_02, rx.nrx_03, rx.nrx_04, rx.nrx_05, rx.nrx_06, rx.nrx_07, rx.nrx_08, rx.nrx_09, rx.nrx_10, rx.nrx_11, rx.nrx_12, rx.nrx_13, rx.nrx_14, rx.nrx_15, rx.nrx_16, rx.nrx_17, rx.nrx_18, rx.nrx_19, rx.nrx_20, rx.nrx_21, rx.nrx_22, rx.nrx_23, rx.nrx_24, rx.trx_01, rx.trx_02, rx.trx_03, rx.trx_04, rx.trx_05, rx.trx_06, rx.trx_07, rx.trx_08, rx.trx_09, rx.trx_10, rx.trx_11, rx.trx_12, rx.trx_13, rx.trx_14, rx.trx_15, rx.trx_16, rx.trx_17, rx.trx_18, rx.trx_19, rx.trx_20, rx.trx_21, rx.trx_22, rx.trx_23, rx.trx_24, 'stg_asi_ms_rx_cnt'::varchar(17) AS row_source FROM WSMP_ADMIN.stg_asi_ms_rx_cnt rx;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_asi_ims_obm_wake AS
SELECT rx.ims_client_num, 71 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, (((rx.nrx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_001, (((rx.nrx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_002, (((rx.nrx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_003, (((rx.nrx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_004, (((rx.nrx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_005, (((rx.nrx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_006, (((rx.nrx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_007, (((rx.nrx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_008, (((rx.nrx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_009, (((rx.nrx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_010, (((rx.nrx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_011, (((rx.nrx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_012, (((rx.nrx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_013, (((rx.nrx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_014, (((rx.nrx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_015, (((rx.nrx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_016, (((rx.nrx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_017, (((rx.nrx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_018, (((rx.nrx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_019, (((rx.nrx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_020, (((rx.nrx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_021, (((rx.nrx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_022, (((rx.nrx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_023, (((rx.nrx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_024, (((rx.trx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_001, (((rx.trx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_002, (((rx.trx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_003, (((rx.trx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_004, (((rx.trx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_005, (((rx.trx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_006, (((rx.trx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_007, (((rx.trx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_008, (((rx.trx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_009, (((rx.trx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_010, (((rx.trx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_011, (((rx.trx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_012, (((rx.trx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_013, (((rx.trx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_014, (((rx.trx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_015, (((rx.trx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_016, (((rx.trx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_017, (((rx.trx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_018, (((rx.trx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_019, (((rx.trx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_020, (((rx.trx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_021, (((rx.trx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_022, (((rx.trx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_023, (((rx.trx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_QTY_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_QTY) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE (p.MARKET_NAME = 'WAKE'::varchar(4)) UNION ALL SELECT rx.ims_client_num, 71 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, rx.nrx_001, rx.nrx_002, rx.nrx_003, rx.nrx_004, rx.nrx_005, rx.nrx_006, rx.nrx_007, rx.nrx_008, rx.nrx_009, rx.nrx_010, rx.nrx_011, rx.nrx_012, rx.nrx_013, rx.nrx_014, rx.nrx_015, rx.nrx_016, rx.nrx_017, rx.nrx_018, rx.nrx_019, rx.nrx_020, rx.nrx_021, rx.nrx_022, rx.nrx_023, rx.nrx_024, rx.trx_001, rx.trx_002, rx.trx_003, rx.trx_004, rx.trx_005, rx.trx_006, rx.trx_007, rx.trx_008, rx.trx_009, rx.trx_010, rx.trx_011, rx.trx_012, rx.trx_013, rx.trx_014, rx.trx_015, rx.trx_016, rx.trx_017, rx.trx_018, rx.trx_019, rx.trx_020, rx.trx_021, rx.trx_022, rx.trx_023, rx.trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_CNT_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_CNT) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) LEFT JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE ((p.MARKET_NAME = 'WAKE'::varchar(4)) AND (nf.PRODUCT_CODE IS NULL));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_asi_ims_obm_smr AS
SELECT rx.ims_client_num, 81 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, (((rx.nrx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_001, (((rx.nrx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_002, (((rx.nrx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_003, (((rx.nrx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_004, (((rx.nrx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_005, (((rx.nrx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_006, (((rx.nrx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_007, (((rx.nrx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_008, (((rx.nrx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_009, (((rx.nrx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_010, (((rx.nrx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_011, (((rx.nrx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_012, (((rx.nrx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_013, (((rx.nrx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_014, (((rx.nrx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_015, (((rx.nrx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_016, (((rx.nrx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_017, (((rx.nrx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_018, (((rx.nrx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_019, (((rx.nrx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_020, (((rx.nrx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_021, (((rx.nrx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_022, (((rx.nrx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_023, (((rx.nrx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_024, (((rx.trx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_001, (((rx.trx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_002, (((rx.trx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_003, (((rx.trx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_004, (((rx.trx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_005, (((rx.trx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_006, (((rx.trx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_007, (((rx.trx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_008, (((rx.trx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_009, (((rx.trx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_010, (((rx.trx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_011, (((rx.trx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_012, (((rx.trx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_013, (((rx.trx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_014, (((rx.trx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_015, (((rx.trx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_016, (((rx.trx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_017, (((rx.trx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_018, (((rx.trx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_019, (((rx.trx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_020, (((rx.trx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_021, (((rx.trx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_022, (((rx.trx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_023, (((rx.trx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_QTY_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_QTY) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE (p.MARKET_NAME = 'SMR'::varchar(3)) UNION ALL SELECT rx.ims_client_num, 81 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, rx.nrx_001, rx.nrx_002, rx.nrx_003, rx.nrx_004, rx.nrx_005, rx.nrx_006, rx.nrx_007, rx.nrx_008, rx.nrx_009, rx.nrx_010, rx.nrx_011, rx.nrx_012, rx.nrx_013, rx.nrx_014, rx.nrx_015, rx.nrx_016, rx.nrx_017, rx.nrx_018, rx.nrx_019, rx.nrx_020, rx.nrx_021, rx.nrx_022, rx.nrx_023, rx.nrx_024, rx.trx_001, rx.trx_002, rx.trx_003, rx.trx_004, rx.trx_005, rx.trx_006, rx.trx_007, rx.trx_008, rx.trx_009, rx.trx_010, rx.trx_011, rx.trx_012, rx.trx_013, rx.trx_014, rx.trx_015, rx.trx_016, rx.trx_017, rx.trx_018, rx.trx_019, rx.trx_020, rx.trx_021, rx.trx_022, rx.trx_023, rx.trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_CNT_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_CNT) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) LEFT JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE ((p.MARKET_NAME = 'SMR'::varchar(3)) AND (nf.PRODUCT_CODE IS NULL));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_asi_ims_obm_pd AS
(SELECT rx.ims_client_num, 6 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, (((rx.nrx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_001, (((rx.nrx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_002, (((rx.nrx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_003, (((rx.nrx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_004, (((rx.nrx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_005, (((rx.nrx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_006, (((rx.nrx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_007, (((rx.nrx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_008, (((rx.nrx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_009, (((rx.nrx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_010, (((rx.nrx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_011, (((rx.nrx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_012, (((rx.nrx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_013, (((rx.nrx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_014, (((rx.nrx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_015, (((rx.nrx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_016, (((rx.nrx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_017, (((rx.nrx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_018, (((rx.nrx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_019, (((rx.nrx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_020, (((rx.nrx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_021, (((rx.nrx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_022, (((rx.nrx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_023, (((rx.nrx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_024, (((rx.trx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_001, (((rx.trx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_002, (((rx.trx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_003, (((rx.trx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_004, (((rx.trx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_005, (((rx.trx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_006, (((rx.trx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_007, (((rx.trx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_008, (((rx.trx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_009, (((rx.trx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_010, (((rx.trx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_011, (((rx.trx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_012, (((rx.trx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_013, (((rx.trx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_014, (((rx.trx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_015, (((rx.trx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_016, (((rx.trx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_017, (((rx.trx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_018, (((rx.trx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_019, (((rx.trx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_020, (((rx.trx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_021, (((rx.trx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_022, (((rx.trx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_023, (((rx.trx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_QTY_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_QTY) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE (p.MARKET_NAME = 'ANTI-PARKINSON'::varchar(14)) UNION ALL SELECT rx.ims_client_num, 6 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, rx.nrx_001, rx.nrx_002, rx.nrx_003, rx.nrx_004, rx.nrx_005, rx.nrx_006, rx.nrx_007, rx.nrx_008, rx.nrx_009, rx.nrx_010, rx.nrx_011, rx.nrx_012, rx.nrx_013, rx.nrx_014, rx.nrx_015, rx.nrx_016, rx.nrx_017, rx.nrx_018, rx.nrx_019, rx.nrx_020, rx.nrx_021, rx.nrx_022, rx.nrx_023, rx.nrx_024, rx.trx_001, rx.trx_002, rx.trx_003, rx.trx_004, rx.trx_005, rx.trx_006, rx.trx_007, rx.trx_008, rx.trx_009, rx.trx_010, rx.trx_011, rx.trx_012, rx.trx_013, rx.trx_014, rx.trx_015, rx.trx_016, rx.trx_017, rx.trx_018, rx.trx_019, rx.trx_020, rx.trx_021, rx.trx_022, rx.trx_023, rx.trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_CNT_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_CNT) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) LEFT JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE ((p.MARKET_NAME = 'ANTI-PARKINSON'::varchar(14)) AND (nf.PRODUCT_CODE IS NULL))) UNION ALL SELECT rx.ims_client_num, 6 AS ims_report_num, rx.sra_1, rx.sra_2, rx.sra_3, rx.sra_4, to_char(rx.sales_category, '00'::varchar(2)) AS sales_category, rx.rx_type, to_char(rx.ims_product_group_num, '000000000'::varchar(9)) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.mid_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.filler_02, CASE WHEN (rx.payer_plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.payer_plan_name) || '"'::varchar(1)) ELSE rx.payer_plan_name END AS plan_name, rx.data_month, 48 AS bucket_count, rx.nrx_01, rx.nrx_02, rx.nrx_03, rx.nrx_04, rx.nrx_05, rx.nrx_06, rx.nrx_07, rx.nrx_08, rx.nrx_09, rx.nrx_10, rx.nrx_11, rx.nrx_12, rx.nrx_13, rx.nrx_14, rx.nrx_15, rx.nrx_16, rx.nrx_17, rx.nrx_18, rx.nrx_19, rx.nrx_20, rx.nrx_21, rx.nrx_22, rx.nrx_23, rx.nrx_24, rx.trx_01, rx.trx_02, rx.trx_03, rx.trx_04, rx.trx_05, rx.trx_06, rx.trx_07, rx.trx_08, rx.trx_09, rx.trx_10, rx.trx_11, rx.trx_12, rx.trx_13, rx.trx_14, rx.trx_15, rx.trx_16, rx.trx_17, rx.trx_18, rx.trx_19, rx.trx_20, rx.trx_21, rx.trx_22, rx.trx_23, rx.trx_24 FROM WSMP_ADMIN.stg_asi_pd_rx_cnt rx;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_asi_ims_obm_ms AS
(SELECT rx.ims_client_num, 2 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, (((rx.nrx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_001, (((rx.nrx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_002, (((rx.nrx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_003, (((rx.nrx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_004, (((rx.nrx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_005, (((rx.nrx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_006, (((rx.nrx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_007, (((rx.nrx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_008, (((rx.nrx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_009, (((rx.nrx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_010, (((rx.nrx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_011, (((rx.nrx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_012, (((rx.nrx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_013, (((rx.nrx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_014, (((rx.nrx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_015, (((rx.nrx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_016, (((rx.nrx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_017, (((rx.nrx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_018, (((rx.nrx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_019, (((rx.nrx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_020, (((rx.nrx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_021, (((rx.nrx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_022, (((rx.nrx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_023, (((rx.nrx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_024, (((rx.trx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_001, (((rx.trx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_002, (((rx.trx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_003, (((rx.trx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_004, (((rx.trx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_005, (((rx.trx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_006, (((rx.trx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_007, (((rx.trx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_008, (((rx.trx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_009, (((rx.trx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_010, (((rx.trx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_011, (((rx.trx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_012, (((rx.trx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_013, (((rx.trx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_014, (((rx.trx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_015, (((rx.trx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_016, (((rx.trx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_017, (((rx.trx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_018, (((rx.trx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_019, (((rx.trx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_020, (((rx.trx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_021, (((rx.trx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_022, (((rx.trx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_023, (((rx.trx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_QTY_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_QTY) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE (p.MARKET_NAME = 'MULTIPLE SCLEROSIS'::varchar(18)) UNION ALL SELECT rx.ims_client_num, 2 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, rx.nrx_001, rx.nrx_002, rx.nrx_003, rx.nrx_004, rx.nrx_005, rx.nrx_006, rx.nrx_007, rx.nrx_008, rx.nrx_009, rx.nrx_010, rx.nrx_011, rx.nrx_012, rx.nrx_013, rx.nrx_014, rx.nrx_015, rx.nrx_016, rx.nrx_017, rx.nrx_018, rx.nrx_019, rx.nrx_020, rx.nrx_021, rx.nrx_022, rx.nrx_023, rx.nrx_024, rx.trx_001, rx.trx_002, rx.trx_003, rx.trx_004, rx.trx_005, rx.trx_006, rx.trx_007, rx.trx_008, rx.trx_009, rx.trx_010, rx.trx_011, rx.trx_012, rx.trx_013, rx.trx_014, rx.trx_015, rx.trx_016, rx.trx_017, rx.trx_018, rx.trx_019, rx.trx_020, rx.trx_021, rx.trx_022, rx.trx_023, rx.trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_CNT_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_CNT) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) LEFT JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE ((p.MARKET_NAME = 'MULTIPLE SCLEROSIS'::varchar(18)) AND (nf.PRODUCT_CODE IS NULL))) UNION ALL SELECT rx.ims_client_num, 2 AS ims_report_num, rx.sra_1, rx.sra_2, rx.sra_3, rx.sra_4, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.mid_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.filler_02, CASE WHEN (rx.payer_plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.payer_plan_name) || '"'::varchar(1)) ELSE rx.payer_plan_name END AS plan_name, rx.data_month, 48 AS bucket_count, rx.nrx_01, rx.nrx_02, rx.nrx_03, rx.nrx_04, rx.nrx_05, rx.nrx_06, rx.nrx_07, rx.nrx_08, rx.nrx_09, rx.nrx_10, rx.nrx_11, rx.nrx_12, rx.nrx_13, rx.nrx_14, rx.nrx_15, rx.nrx_16, rx.nrx_17, rx.nrx_18, rx.nrx_19, rx.nrx_20, rx.nrx_21, rx.nrx_22, rx.nrx_23, rx.nrx_24, rx.trx_01, rx.trx_02, rx.trx_03, rx.trx_04, rx.trx_05, rx.trx_06, rx.trx_07, rx.trx_08, rx.trx_09, rx.trx_10, rx.trx_11, rx.trx_12, rx.trx_13, rx.trx_14, rx.trx_15, rx.trx_16, rx.trx_17, rx.trx_18, rx.trx_19, rx.trx_20, rx.trx_21, rx.trx_22, rx.trx_23, rx.trx_24 FROM WSMP_ADMIN.stg_asi_ms_rx_cnt rx;

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_asi_ims_obm_pain AS
SELECT rx.ims_client_num, 74 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, (((rx.nrx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_001, (((rx.nrx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_002, (((rx.nrx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_003, (((rx.nrx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_004, (((rx.nrx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_005, (((rx.nrx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_006, (((rx.nrx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_007, (((rx.nrx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_008, (((rx.nrx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_009, (((rx.nrx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_010, (((rx.nrx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_011, (((rx.nrx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_012, (((rx.nrx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_013, (((rx.nrx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_014, (((rx.nrx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_015, (((rx.nrx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_016, (((rx.nrx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_017, (((rx.nrx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_018, (((rx.nrx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_019, (((rx.nrx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_020, (((rx.nrx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_021, (((rx.nrx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_022, (((rx.nrx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_023, (((rx.nrx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS nrx_024, (((rx.trx_001 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_001, (((rx.trx_002 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_002, (((rx.trx_003 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_003, (((rx.trx_004 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_004, (((rx.trx_005 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_005, (((rx.trx_006 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_006, (((rx.trx_007 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_007, (((rx.trx_008 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_008, (((rx.trx_009 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_009, (((rx.trx_010 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_010, (((rx.trx_011 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_011, (((rx.trx_012 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_012, (((rx.trx_013 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_013, (((rx.trx_014 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_014, (((rx.trx_015 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_015, (((rx.trx_016 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_016, (((rx.trx_017 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_017, (((rx.trx_018 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_018, (((rx.trx_019 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_019, (((rx.trx_020 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_020, (((rx.trx_021 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_021, (((rx.trx_022 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_022, (((rx.trx_023 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_023, (((rx.trx_024 / nf.DIVISOR) * nf.MULTIPLIER))::numeric(9,3) AS trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_QTY_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_QTY) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE (p.MARKET_NAME = 'PAIN'::varchar(4)) UNION ALL SELECT rx.ims_client_num, 74 AS ims_report_num, rx.zip_other, rx.ims_id, rx.specialty, rx.plan_id, btrim(to_char(rx.sales_category, '00'::varchar(2))) AS sales_category, rx.rx_type, btrim(to_char(rx.ims_product_group_num, '000000000'::varchar(9))) AS ims_product_group_num, rx.filler_01, rx.me_num, rx.last_name, rx.first_name, rx.middle_name, CASE WHEN (rx.address ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.address) || '"'::varchar(1)) ELSE rx.address END AS address, rx.city, rx.state, rx.zip, rx.supplemental_data, CASE WHEN (rx.plan_name ~~ '%,%'::varchar(3)) THEN (('"'::varchar(1) || rx.plan_name) || '"'::varchar(1)) ELSE rx.plan_name END AS plan_name, rx.data_date, rx.bucket_count, rx.nrx_001, rx.nrx_002, rx.nrx_003, rx.nrx_004, rx.nrx_005, rx.nrx_006, rx.nrx_007, rx.nrx_008, rx.nrx_009, rx.nrx_010, rx.nrx_011, rx.nrx_012, rx.nrx_013, rx.nrx_014, rx.nrx_015, rx.nrx_016, rx.nrx_017, rx.nrx_018, rx.nrx_019, rx.nrx_020, rx.nrx_021, rx.nrx_022, rx.nrx_023, rx.nrx_024, rx.trx_001, rx.trx_002, rx.trx_003, rx.trx_004, rx.trx_005, rx.trx_006, rx.trx_007, rx.trx_008, rx.trx_009, rx.trx_010, rx.trx_011, rx.trx_012, rx.trx_013, rx.trx_014, rx.trx_015, rx.trx_016, rx.trx_017, rx.trx_018, rx.trx_019, rx.trx_020, rx.trx_021, rx.trx_022, rx.trx_023, rx.trx_024 FROM ((teva_ingestion.EXT_IMS_MHJ_CNT_M rx JOIN WSMP_ADMIN.DRM45_PRODUCT_2014 p ON (((rx.ims_client_num = p.IMS_CLIENT_NUM_M) AND (rx.ims_report_num = p.IMS_REPORT_NUM_M_CNT) AND (rx.ims_product_group_num = p.IMS_PRODUCT_GROUP_NUM)))) LEFT JOIN WSMP_ADMIN.DIM_IMS_NORMALIZATION_FACTOR nf ON ((p.PRODUCT_CODE = nf.PRODUCT_CODE))) WHERE ((p.MARKET_NAME = 'PAIN'::varchar(4)) AND (nf.PRODUCT_CODE IS NULL));

CREATE  VIEW WSMP_ADMIN_ORA.v_ob_FTF_IMS_Monthly_Market_OBM_slow AS
((((SELECT xref.PLAN_NUM AS "PLAN ID", xref.PLAN_NAME AS "PLAN NAME", xref.PAYER_NUM AS "PAYER ID", xref.PAYER_NAME AS "PAYER NAME", drm.market_name AS "MARKET NAME", drm.product_name AS "PRODUCT NAME", rx.zip AS ZIP, to_char(rx.month_ending, 'YYYY-MM-DD'::varchar(10)) AS DATE, sum(rx.trx_cnt) AS TRx, sum(rx.nrx_cnt) AS NRx FROM WSMP_ADMIN.dw_zip_plan_rx_ims rx, WSMP_ADMIN.TFC_IMS_PLAN_XREF xref, CUSTOMER.dim_product drm WHERE ((rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (xref.PAYER_PLAN_NUM = rx.payer_plan_num) AND (rx.market_name = 'WAKE'::varchar(4)) AND (drm.product_code = rx.product_code) AND (drm.market_name = rx.market_name)) GROUP BY xref.PLAN_NUM, xref.PLAN_NAME, xref.PAYER_NUM, xref.PAYER_NAME, drm.market_name, drm.product_name, rx.zip, rx.month_ending UNION SELECT xref.PLAN_NUM AS "PLAN ID", xref.PLAN_NAME AS "PLAN NAME", xref.PAYER_NUM AS "PAYER ID", xref.PAYER_NAME AS "PAYER NAME", drm.market_name AS "MARKET NAME", drm.product_name AS "PRODUCT NAME", rx.zip AS ZIP, to_char(rx.month_ending, 'YYYY-MM-DD'::varchar(10)) AS DATE, sum(rx.trx_cnt) AS TRx, sum(rx.nrx_cnt) AS NRx FROM WSMP_ADMIN.dw_zip_plan_rx_ims rx, WSMP_ADMIN.TFC_IMS_PLAN_XREF xref, CUSTOMER.dim_product drm WHERE ((rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (xref.PAYER_PLAN_NUM = rx.payer_plan_num) AND (rx.market_name = 'ICS'::varchar(3)) AND (drm.product_code = rx.product_code) AND (drm.market_name = rx.market_name)) GROUP BY xref.PLAN_NUM, xref.PLAN_NAME, xref.PAYER_NUM, xref.PAYER_NAME, drm.market_name, drm.product_name, rx.zip, rx.month_ending) UNION SELECT xref.PLAN_NUM AS "PLAN ID", xref.PLAN_NAME AS "PLAN NAME", xref.PAYER_NUM AS "PAYER ID", xref.PAYER_NAME AS "PAYER NAME", drm.market_name AS "MARKET NAME", drm.product_name AS "PRODUCT NAME", rx.zip AS ZIP, to_char(rx.month_ending, 'YYYY-MM-DD'::varchar(10)) AS DATE, sum(rx.trx_cnt) AS TRx, sum(rx.nrx_cnt) AS NRx FROM WSMP_ADMIN.dw_zip_plan_rx_ims rx, WSMP_ADMIN.TFC_IMS_PLAN_XREF xref, CUSTOMER.dim_product drm WHERE ((rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (xref.PAYER_PLAN_NUM = rx.payer_plan_num) AND (rx.market_name = 'SABA'::varchar(4)) AND (drm.product_code = rx.product_code) AND (drm.market_name = rx.market_name)) GROUP BY xref.PLAN_NUM, xref.PLAN_NAME, xref.PAYER_NUM, xref.PAYER_NAME, drm.market_name, drm.product_name, rx.zip, rx.month_ending) UNION SELECT xref.PLAN_NUM AS "PLAN ID", xref.PLAN_NAME AS "PLAN NAME", xref.PAYER_NUM AS "PAYER ID", xref.PAYER_NAME AS "PAYER NAME", drm.market_name AS "MARKET NAME", drm.product_name AS "PRODUCT NAME", rx.zip AS ZIP, to_char(rx.month_ending, 'YYYY-MM-DD'::varchar(10)) AS DATE, sum(rx.trx_cnt) AS TRx, sum(rx.nrx_cnt) AS NRx FROM WSMP_ADMIN.dw_zip_plan_rx_ims rx, WSMP_ADMIN.TFC_IMS_PLAN_XREF xref, CUSTOMER.dim_product drm WHERE ((rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (xref.PAYER_PLAN_NUM = rx.payer_plan_num) AND (rx.market_name = 'BDP NASAL'::varchar(9)) AND (drm.product_code = rx.product_code) AND (drm.market_name = rx.market_name)) GROUP BY xref.PLAN_NUM, xref.PLAN_NAME, xref.PAYER_NUM, xref.PAYER_NAME, drm.market_name, drm.product_name, rx.zip, rx.month_ending) UNION SELECT xref.PLAN_NUM AS "PLAN ID", xref.PLAN_NAME AS "PLAN NAME", xref.PAYER_NUM AS "PAYER ID", xref.PAYER_NAME AS "PAYER NAME", drm.market_name AS "MARKET NAME", drm.product_name AS "PRODUCT NAME", rx.zip AS ZIP, to_char(rx.month_ending, 'YYYY-MM-DD'::varchar(10)) AS DATE, sum(rx.trx_cnt) AS TRx, sum(rx.nrx_cnt) AS NRx FROM WSMP_ADMIN.dw_zip_plan_rx_ims rx, WSMP_ADMIN.TFC_IMS_PLAN_XREF xref, CUSTOMER.dim_product drm WHERE ((rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (xref.PAYER_PLAN_NUM = rx.payer_plan_num) AND (rx.market_name = 'ANTI-PARKINSON'::varchar(14)) AND (drm.product_code = rx.product_code) AND (drm.market_name = rx.market_name)) GROUP BY xref.PLAN_NUM, xref.PLAN_NAME, xref.PAYER_NUM, xref.PAYER_NAME, drm.market_name, drm.product_name, rx.zip, rx.month_ending) UNION SELECT xref.PLAN_NUM AS "PLAN ID", xref.PLAN_NAME AS "PLAN NAME", xref.PAYER_NUM AS "PAYER ID", xref.PAYER_NAME AS "PAYER NAME", drm.market_name AS "MARKET NAME", drm.product_name AS "PRODUCT NAME", rx.zip AS ZIP, to_char(rx.month_ending, 'YYYY-MM-DD'::varchar(10)) AS DATE, sum(rx.trx_cnt) AS TRx, sum(rx.nrx_cnt) AS NRx FROM WSMP_ADMIN.dw_zip_plan_rx_ims rx, WSMP_ADMIN.TFC_IMS_PLAN_XREF xref, CUSTOMER.dim_product drm WHERE ((rx.month_bucket >= 1::numeric(18,0)) AND (rx.month_bucket <= 24::numeric(18,0)) AND (xref.PAYER_PLAN_NUM = rx.payer_plan_num) AND (rx.market_name = 'MULTIPLE SCLEROSIS'::varchar(18)) AND (drm.product_code = rx.product_code) AND (drm.market_name = rx.market_name)) GROUP BY xref.PLAN_NUM, xref.PLAN_NAME, xref.PAYER_NUM, xref.PAYER_NAME, drm.market_name, drm.product_name, rx.zip, rx.month_ending;