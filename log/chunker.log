2021-12-16 12:00:09,901 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:00:09,901 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:00:09,901 chunk: 2 line: 0 select count(*) from ehr.encounte_src;
2021-12-16 12:00:09,901 chunk: 3 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:00:09,901 chunk: 4 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:00:09,901 chunk: 5 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:00:09,901 chunk: 6 line: 0 select
2021-12-16 12:00:09,902 chunk: 6 line: 1 table_schema,
2021-12-16 12:00:09,902 chunk: 6 line: 2 table_name,
2021-12-16 12:00:09,902 chunk: 6 line: 3 row_count
2021-12-16 12:00:09,902 chunk: 6 line: 4 from
2021-12-16 12:00:09,902 chunk: 6 line: 5 migration.source_schemas
2021-12-16 12:00:09,902 chunk: 6 line: 6 where is_partitioned is false
2021-12-16 12:00:09,902 chunk: 6 line: 7 order by 1,3;
2021-12-16 12:00:09,902 chunk: 7 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:00:09,902 chunk: 8 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:00:09,902 chunk: 9 line: 0 
2021-12-16 12:00:09,902 chunk: 9 line: 1 copy migration.target_grants_src from local
2021-12-16 12:00:09,902 chunk: 9 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:00:09,902 chunk: 9 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:00:09,902 chunk: 9 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:01:37,461 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:01:37,461 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:01:37,461 chunk: 2 line: 0 
2021-12-16 12:01:37,462 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:01:37,462 chunk: 3 line: 0 
2021-12-16 12:01:37,462 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:01:37,462 chunk: 3 line: 2 id    integer,
2021-12-16 12:01:37,462 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:01:37,462 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:01:37,462 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:01:37,462 chunk: 3 line: 6 );
2021-12-16 12:01:37,462 chunk: 4 line: 0 
2021-12-16 12:01:37,462 chunk: 4 line: 1 
2021-12-16 12:01:37,462 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:01:37,462 chunk: 4 line: 3 id    integer,
2021-12-16 12:01:37,462 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:01:37,462 chunk: 4 line: 5 );
2021-12-16 12:01:37,462 chunk: 5 line: 0 
2021-12-16 12:01:37,462 chunk: 5 line: 1 
2021-12-16 12:01:37,462 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:01:37,462 chunk: 5 line: 3 (select
2021-12-16 12:01:37,462 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:01:37,462 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:01:37,462 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:01:37,462 chunk: 5 line: 7 row_count,
2021-12-16 12:01:37,462 chunk: 5 line: 8 partition_expression
2021-12-16 12:01:37,463 chunk: 5 line: 9 from
2021-12-16 12:01:37,463 chunk: 5 line: 10 (
2021-12-16 12:01:37,463 chunk: 5 line: 11 select
2021-12-16 12:01:37,463 chunk: 5 line: 12 table_schema,
2021-12-16 12:01:37,463 chunk: 5 line: 13 table_name,
2021-12-16 12:01:37,463 chunk: 5 line: 14 partition_expression,
2021-12-16 12:01:37,463 chunk: 5 line: 15 table_definition,
2021-12-16 12:01:37,463 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:01:37,463 chunk: 5 line: 17 
2021-12-16 12:01:37,463 chunk: 5 line: 18 from
2021-12-16 12:01:37,463 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:01:37,463 chunk: 5 line: 20 where
2021-12-16 12:01:37,463 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:01:37,463 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:01:37,463 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:01:37,463 chunk: 5 line: 24 ) tables
2021-12-16 12:01:37,463 chunk: 5 line: 25 natural join
2021-12-16 12:01:37,463 chunk: 5 line: 26 (
2021-12-16 12:01:37,463 chunk: 5 line: 27 select
2021-12-16 12:01:37,463 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:01:37,463 chunk: 5 line: 29 from
2021-12-16 12:01:37,463 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:01:37,463 chunk: 5 line: 31 group by
2021-12-16 12:01:37,463 chunk: 5 line: 32 table_schema,
2021-12-16 12:01:37,463 chunk: 5 line: 33 table_name
2021-12-16 12:01:37,464 chunk: 5 line: 34 
2021-12-16 12:01:37,464 chunk: 5 line: 35 minus
2021-12-16 12:01:37,464 chunk: 5 line: 36 
2021-12-16 12:01:37,464 chunk: 5 line: 37 select
2021-12-16 12:01:37,464 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:01:37,464 chunk: 5 line: 39 from
2021-12-16 12:01:37,464 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:01:37,464 chunk: 5 line: 41 where
2021-12-16 12:01:37,464 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:01:37,464 chunk: 5 line: 43 OR
2021-12-16 12:01:37,464 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:01:37,464 chunk: 5 line: 45 group by
2021-12-16 12:01:37,464 chunk: 5 line: 46 table_schema,
2021-12-16 12:01:37,464 chunk: 5 line: 47 table_name
2021-12-16 12:01:37,464 chunk: 5 line: 48 
2021-12-16 12:01:37,464 chunk: 5 line: 49 
2021-12-16 12:01:37,464 chunk: 5 line: 50 ) col_types
2021-12-16 12:01:37,464 chunk: 5 line: 51 natural join
2021-12-16 12:01:37,464 chunk: 5 line: 52 (
2021-12-16 12:01:37,464 chunk: 5 line: 53 SELECT
2021-12-16 12:01:37,464 chunk: 5 line: 54 table_schema,
2021-12-16 12:01:37,464 chunk: 5 line: 55 table_name,
2021-12-16 12:01:37,464 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:01:37,464 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:01:37,464 chunk: 5 line: 58 t.table_name,
2021-12-16 12:01:37,464 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:01:37,464 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:01:37,465 chunk: 5 line: 61 FROM projections p
2021-12-16 12:01:37,465 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:01:37,465 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:01:37,465 chunk: 5 line: 64 node_cnt,
2021-12-16 12:01:37,465 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:01:37,465 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:01:37,465 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:01:37,465 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:01:37,465 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:01:37,465 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:01:37,465 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:01:37,465 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:01:37,465 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:01:37,465 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:01:37,465 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:01:37,465 chunk: 5 line: 76 ) row_count
2021-12-16 12:01:37,465 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:01:37,465 chunk: 5 line: 78 
2021-12-16 12:01:37,465 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:01:37,465 chunk: 5 line: 80 );
2021-12-16 12:01:37,465 chunk: 6 line: 0 
2021-12-16 12:01:37,465 chunk: 6 line: 1 
2021-12-16 12:01:37,465 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:01:37,465 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:01:37,465 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:01:37,465 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:01:37,465 chunk: 10 line: 0 select
2021-12-16 12:01:37,466 chunk: 10 line: 1 table_schema,
2021-12-16 12:01:37,466 chunk: 10 line: 2 table_name,
2021-12-16 12:01:37,466 chunk: 10 line: 3 row_count
2021-12-16 12:01:37,466 chunk: 10 line: 4 from
2021-12-16 12:01:37,466 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:01:37,466 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:01:37,466 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:01:37,466 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:01:37,466 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:01:37,466 chunk: 13 line: 0 
2021-12-16 12:01:37,466 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:01:37,466 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:01:37,466 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:01:37,466 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:05:57,823 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:05:57,823 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:05:57,823 chunk: 2 line: 0 
2021-12-16 12:05:57,823 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:05:57,823 chunk: 3 line: 0 
2021-12-16 12:05:57,823 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:05:57,823 chunk: 3 line: 2 id    integer,
2021-12-16 12:05:57,823 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:05:57,824 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:05:57,824 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:05:57,824 chunk: 3 line: 6 );
2021-12-16 12:05:57,824 chunk: 4 line: 0 
2021-12-16 12:05:57,824 chunk: 4 line: 1 
2021-12-16 12:05:57,824 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:05:57,824 chunk: 4 line: 3 id    integer,
2021-12-16 12:05:57,824 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:05:57,824 chunk: 4 line: 5 );
2021-12-16 12:05:57,824 chunk: 5 line: 0 
2021-12-16 12:05:57,824 chunk: 5 line: 1 
2021-12-16 12:05:57,824 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:05:57,824 chunk: 5 line: 3 (select
2021-12-16 12:05:57,824 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:05:57,824 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:05:57,824 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:05:57,824 chunk: 5 line: 7 row_count,
2021-12-16 12:05:57,824 chunk: 5 line: 8 partition_expression
2021-12-16 12:05:57,824 chunk: 5 line: 9 from
2021-12-16 12:05:57,824 chunk: 5 line: 10 (
2021-12-16 12:05:57,824 chunk: 5 line: 11 select
2021-12-16 12:05:57,824 chunk: 5 line: 12 table_schema,
2021-12-16 12:05:57,824 chunk: 5 line: 13 table_name,
2021-12-16 12:05:57,825 chunk: 5 line: 14 partition_expression,
2021-12-16 12:05:57,825 chunk: 5 line: 15 table_definition,
2021-12-16 12:05:57,825 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:05:57,825 chunk: 5 line: 17 
2021-12-16 12:05:57,825 chunk: 5 line: 18 from
2021-12-16 12:05:57,825 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:05:57,825 chunk: 5 line: 20 where
2021-12-16 12:05:57,825 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:05:57,825 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:05:57,825 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:05:57,825 chunk: 5 line: 24 ) tables
2021-12-16 12:05:57,825 chunk: 5 line: 25 natural join
2021-12-16 12:05:57,825 chunk: 5 line: 26 (
2021-12-16 12:05:57,825 chunk: 5 line: 27 select
2021-12-16 12:05:57,825 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:05:57,825 chunk: 5 line: 29 from
2021-12-16 12:05:57,825 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:05:57,825 chunk: 5 line: 31 group by
2021-12-16 12:05:57,825 chunk: 5 line: 32 table_schema,
2021-12-16 12:05:57,825 chunk: 5 line: 33 table_name
2021-12-16 12:05:57,825 chunk: 5 line: 34 
2021-12-16 12:05:57,825 chunk: 5 line: 35 minus
2021-12-16 12:05:57,825 chunk: 5 line: 36 
2021-12-16 12:05:57,826 chunk: 5 line: 37 select
2021-12-16 12:05:57,826 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:05:57,826 chunk: 5 line: 39 from
2021-12-16 12:05:57,826 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:05:57,826 chunk: 5 line: 41 where
2021-12-16 12:05:57,826 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:05:57,826 chunk: 5 line: 43 OR
2021-12-16 12:05:57,826 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:05:57,826 chunk: 5 line: 45 group by
2021-12-16 12:05:57,826 chunk: 5 line: 46 table_schema,
2021-12-16 12:05:57,826 chunk: 5 line: 47 table_name
2021-12-16 12:05:57,826 chunk: 5 line: 48 
2021-12-16 12:05:57,826 chunk: 5 line: 49 
2021-12-16 12:05:57,826 chunk: 5 line: 50 ) col_types
2021-12-16 12:05:57,826 chunk: 5 line: 51 natural join
2021-12-16 12:05:57,826 chunk: 5 line: 52 (
2021-12-16 12:05:57,826 chunk: 5 line: 53 SELECT
2021-12-16 12:05:57,826 chunk: 5 line: 54 table_schema,
2021-12-16 12:05:57,826 chunk: 5 line: 55 table_name,
2021-12-16 12:05:57,826 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:05:57,826 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:05:57,826 chunk: 5 line: 58 t.table_name,
2021-12-16 12:05:57,826 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:05:57,826 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:05:57,826 chunk: 5 line: 61 FROM projections p
2021-12-16 12:05:57,826 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:05:57,826 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:05:57,826 chunk: 5 line: 64 node_cnt,
2021-12-16 12:05:57,827 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:05:57,827 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:05:57,827 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:05:57,827 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:05:57,827 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:05:57,827 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:05:57,827 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:05:57,827 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:05:57,827 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:05:57,827 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:05:57,827 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:05:57,827 chunk: 5 line: 76 ) row_count
2021-12-16 12:05:57,827 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:05:57,827 chunk: 5 line: 78 
2021-12-16 12:05:57,827 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:05:57,827 chunk: 5 line: 80 );
2021-12-16 12:05:57,827 chunk: 6 line: 0 
2021-12-16 12:05:57,827 chunk: 6 line: 1 
2021-12-16 12:05:57,827 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:05:57,827 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:05:57,827 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:05:57,827 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:05:57,827 chunk: 10 line: 0 select
2021-12-16 12:05:57,827 chunk: 10 line: 1 table_schema,
2021-12-16 12:05:57,827 chunk: 10 line: 2 table_name,
2021-12-16 12:05:57,827 chunk: 10 line: 3 row_count
2021-12-16 12:05:57,827 chunk: 10 line: 4 from
2021-12-16 12:05:57,827 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:05:57,827 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:05:57,828 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:05:57,828 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:05:57,828 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:05:57,828 chunk: 13 line: 0 
2021-12-16 12:05:57,828 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:05:57,828 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:05:57,828 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:05:57,828 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:13:29,456 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:13:29,457 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:13:29,457 chunk: 2 line: 0 
2021-12-16 12:13:29,457 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:13:29,457 chunk: 3 line: 0 
2021-12-16 12:13:29,457 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:13:29,457 chunk: 3 line: 2 id    integer,
2021-12-16 12:13:29,457 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:13:29,457 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:13:29,457 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:13:29,457 chunk: 3 line: 6 );
2021-12-16 12:13:29,457 chunk: 4 line: 0 
2021-12-16 12:13:29,457 chunk: 4 line: 1 
2021-12-16 12:13:29,457 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:13:29,457 chunk: 4 line: 3 id    integer,
2021-12-16 12:13:29,457 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:13:29,457 chunk: 4 line: 5 );
2021-12-16 12:13:29,457 chunk: 5 line: 0 
2021-12-16 12:13:29,457 chunk: 5 line: 1 
2021-12-16 12:13:29,457 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:13:29,457 chunk: 5 line: 3 (select
2021-12-16 12:13:29,458 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:13:29,458 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:13:29,458 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:13:29,458 chunk: 5 line: 7 row_count,
2021-12-16 12:13:29,458 chunk: 5 line: 8 partition_expression
2021-12-16 12:13:29,458 chunk: 5 line: 9 from
2021-12-16 12:13:29,458 chunk: 5 line: 10 (
2021-12-16 12:13:29,458 chunk: 5 line: 11 select
2021-12-16 12:13:29,458 chunk: 5 line: 12 table_schema,
2021-12-16 12:13:29,458 chunk: 5 line: 13 table_name,
2021-12-16 12:13:29,458 chunk: 5 line: 14 partition_expression,
2021-12-16 12:13:29,458 chunk: 5 line: 15 table_definition,
2021-12-16 12:13:29,458 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:13:29,458 chunk: 5 line: 17 
2021-12-16 12:13:29,458 chunk: 5 line: 18 from
2021-12-16 12:13:29,458 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:13:29,458 chunk: 5 line: 20 where
2021-12-16 12:13:29,458 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:13:29,458 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:13:29,458 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:13:29,458 chunk: 5 line: 24 ) tables
2021-12-16 12:13:29,459 chunk: 5 line: 25 natural join
2021-12-16 12:13:29,459 chunk: 5 line: 26 (
2021-12-16 12:13:29,459 chunk: 5 line: 27 select
2021-12-16 12:13:29,459 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:13:29,459 chunk: 5 line: 29 from
2021-12-16 12:13:29,459 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:13:29,459 chunk: 5 line: 31 group by
2021-12-16 12:13:29,459 chunk: 5 line: 32 table_schema,
2021-12-16 12:13:29,459 chunk: 5 line: 33 table_name
2021-12-16 12:13:29,459 chunk: 5 line: 34 
2021-12-16 12:13:29,459 chunk: 5 line: 35 minus
2021-12-16 12:13:29,459 chunk: 5 line: 36 
2021-12-16 12:13:29,459 chunk: 5 line: 37 select
2021-12-16 12:13:29,459 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:13:29,459 chunk: 5 line: 39 from
2021-12-16 12:13:29,459 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:13:29,459 chunk: 5 line: 41 where
2021-12-16 12:13:29,459 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:13:29,459 chunk: 5 line: 43 OR
2021-12-16 12:13:29,459 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:13:29,459 chunk: 5 line: 45 group by
2021-12-16 12:13:29,459 chunk: 5 line: 46 table_schema,
2021-12-16 12:13:29,459 chunk: 5 line: 47 table_name
2021-12-16 12:13:29,459 chunk: 5 line: 48 
2021-12-16 12:13:29,459 chunk: 5 line: 49 
2021-12-16 12:13:29,460 chunk: 5 line: 50 ) col_types
2021-12-16 12:13:29,460 chunk: 5 line: 51 natural join
2021-12-16 12:13:29,460 chunk: 5 line: 52 (
2021-12-16 12:13:29,460 chunk: 5 line: 53 SELECT
2021-12-16 12:13:29,460 chunk: 5 line: 54 table_schema,
2021-12-16 12:13:29,460 chunk: 5 line: 55 table_name,
2021-12-16 12:13:29,460 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:13:29,460 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:13:29,460 chunk: 5 line: 58 t.table_name,
2021-12-16 12:13:29,460 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:13:29,460 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:13:29,460 chunk: 5 line: 61 FROM projections p
2021-12-16 12:13:29,460 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:13:29,460 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:13:29,460 chunk: 5 line: 64 node_cnt,
2021-12-16 12:13:29,460 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:13:29,460 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:13:29,460 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:13:29,460 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:13:29,460 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:13:29,460 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:13:29,460 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:13:29,460 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:13:29,460 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:13:29,460 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:13:29,460 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:13:29,460 chunk: 5 line: 76 ) row_count
2021-12-16 12:13:29,460 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:13:29,461 chunk: 5 line: 78 
2021-12-16 12:13:29,461 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:13:29,461 chunk: 5 line: 80 );
2021-12-16 12:13:29,461 chunk: 6 line: 0 
2021-12-16 12:13:29,461 chunk: 6 line: 1 
2021-12-16 12:13:29,461 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:13:29,461 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:13:29,461 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:13:29,461 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:13:29,461 chunk: 10 line: 0 select
2021-12-16 12:13:29,461 chunk: 10 line: 1 table_schema,
2021-12-16 12:13:29,461 chunk: 10 line: 2 table_name,
2021-12-16 12:13:29,461 chunk: 10 line: 3 row_count
2021-12-16 12:13:29,461 chunk: 10 line: 4 from
2021-12-16 12:13:29,461 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:13:29,461 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:13:29,461 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:13:29,461 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:13:29,461 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:13:29,461 chunk: 13 line: 0 
2021-12-16 12:13:29,461 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:13:29,461 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:13:29,461 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:13:29,461 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:14:23,726 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:14:23,727 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:14:23,727 chunk: 2 line: 0 
2021-12-16 12:14:23,727 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:14:23,727 chunk: 3 line: 0 
2021-12-16 12:14:23,727 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:14:23,727 chunk: 3 line: 2 id    integer,
2021-12-16 12:14:23,727 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:14:23,727 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:14:23,727 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:14:23,727 chunk: 3 line: 6 );
2021-12-16 12:14:23,727 chunk: 4 line: 0 
2021-12-16 12:14:23,727 chunk: 4 line: 1 
2021-12-16 12:14:23,727 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:14:23,727 chunk: 4 line: 3 id    integer,
2021-12-16 12:14:23,727 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:14:23,727 chunk: 4 line: 5 );
2021-12-16 12:14:23,727 chunk: 5 line: 0 
2021-12-16 12:14:23,727 chunk: 5 line: 1 
2021-12-16 12:14:23,727 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:14:23,727 chunk: 5 line: 3 (select
2021-12-16 12:14:23,727 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:14:23,728 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:14:23,728 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:14:23,728 chunk: 5 line: 7 row_count,
2021-12-16 12:14:23,728 chunk: 5 line: 8 partition_expression
2021-12-16 12:14:23,728 chunk: 5 line: 9 from
2021-12-16 12:14:23,728 chunk: 5 line: 10 (
2021-12-16 12:14:23,728 chunk: 5 line: 11 select
2021-12-16 12:14:23,728 chunk: 5 line: 12 table_schema,
2021-12-16 12:14:23,728 chunk: 5 line: 13 table_name,
2021-12-16 12:14:23,728 chunk: 5 line: 14 partition_expression,
2021-12-16 12:14:23,728 chunk: 5 line: 15 table_definition,
2021-12-16 12:14:23,728 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:14:23,728 chunk: 5 line: 17 
2021-12-16 12:14:23,728 chunk: 5 line: 18 from
2021-12-16 12:14:23,728 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:14:23,728 chunk: 5 line: 20 where
2021-12-16 12:14:23,728 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:14:23,728 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:14:23,728 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:14:23,728 chunk: 5 line: 24 ) tables
2021-12-16 12:14:23,728 chunk: 5 line: 25 natural join
2021-12-16 12:14:23,728 chunk: 5 line: 26 (
2021-12-16 12:14:23,729 chunk: 5 line: 27 select
2021-12-16 12:14:23,729 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:14:23,729 chunk: 5 line: 29 from
2021-12-16 12:14:23,729 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:14:23,729 chunk: 5 line: 31 group by
2021-12-16 12:14:23,729 chunk: 5 line: 32 table_schema,
2021-12-16 12:14:23,729 chunk: 5 line: 33 table_name
2021-12-16 12:14:23,729 chunk: 5 line: 34 
2021-12-16 12:14:23,729 chunk: 5 line: 35 minus
2021-12-16 12:14:23,729 chunk: 5 line: 36 
2021-12-16 12:14:23,729 chunk: 5 line: 37 select
2021-12-16 12:14:23,729 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:14:23,729 chunk: 5 line: 39 from
2021-12-16 12:14:23,729 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:14:23,729 chunk: 5 line: 41 where
2021-12-16 12:14:23,729 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:14:23,729 chunk: 5 line: 43 OR
2021-12-16 12:14:23,729 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:14:23,729 chunk: 5 line: 45 group by
2021-12-16 12:14:23,729 chunk: 5 line: 46 table_schema,
2021-12-16 12:14:23,729 chunk: 5 line: 47 table_name
2021-12-16 12:14:23,729 chunk: 5 line: 48 
2021-12-16 12:14:23,729 chunk: 5 line: 49 
2021-12-16 12:14:23,729 chunk: 5 line: 50 ) col_types
2021-12-16 12:14:23,730 chunk: 5 line: 51 natural join
2021-12-16 12:14:23,730 chunk: 5 line: 52 (
2021-12-16 12:14:23,730 chunk: 5 line: 53 SELECT
2021-12-16 12:14:23,730 chunk: 5 line: 54 table_schema,
2021-12-16 12:14:23,730 chunk: 5 line: 55 table_name,
2021-12-16 12:14:23,730 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:14:23,730 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:14:23,730 chunk: 5 line: 58 t.table_name,
2021-12-16 12:14:23,730 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:14:23,730 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:14:23,730 chunk: 5 line: 61 FROM projections p
2021-12-16 12:14:23,730 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:14:23,730 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:14:23,730 chunk: 5 line: 64 node_cnt,
2021-12-16 12:14:23,730 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:14:23,730 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:14:23,730 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:14:23,730 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:14:23,730 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:14:23,730 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:14:23,730 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:14:23,730 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:14:23,730 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:14:23,730 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:14:23,731 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:14:23,731 chunk: 5 line: 76 ) row_count
2021-12-16 12:14:23,731 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:14:23,731 chunk: 5 line: 78 
2021-12-16 12:14:23,731 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:14:23,731 chunk: 5 line: 80 );
2021-12-16 12:14:23,731 chunk: 6 line: 0 
2021-12-16 12:14:23,731 chunk: 6 line: 1 
2021-12-16 12:14:23,731 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:14:23,731 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:14:23,731 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:14:23,731 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:14:23,731 chunk: 10 line: 0 select
2021-12-16 12:14:23,731 chunk: 10 line: 1 table_schema,
2021-12-16 12:14:23,731 chunk: 10 line: 2 table_name,
2021-12-16 12:14:23,731 chunk: 10 line: 3 row_count
2021-12-16 12:14:23,731 chunk: 10 line: 4 from
2021-12-16 12:14:23,731 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:14:23,731 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:14:23,731 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:14:23,731 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:14:23,731 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:14:23,731 chunk: 13 line: 0 
2021-12-16 12:14:23,731 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:14:23,731 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:14:23,731 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:14:23,731 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:15:01,716 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:15:01,716 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:15:01,717 chunk: 2 line: 0 
2021-12-16 12:15:01,717 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:15:01,717 chunk: 3 line: 0 
2021-12-16 12:15:01,717 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:15:01,717 chunk: 3 line: 2 id    integer,
2021-12-16 12:15:01,717 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:15:01,717 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:15:01,717 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:15:01,717 chunk: 3 line: 6 );
2021-12-16 12:15:01,717 chunk: 4 line: 0 
2021-12-16 12:15:01,717 chunk: 4 line: 1 
2021-12-16 12:15:01,717 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:15:01,717 chunk: 4 line: 3 id    integer,
2021-12-16 12:15:01,717 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:15:01,717 chunk: 4 line: 5 );
2021-12-16 12:15:01,717 chunk: 5 line: 0 
2021-12-16 12:15:01,717 chunk: 5 line: 1 
2021-12-16 12:15:01,717 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:15:01,717 chunk: 5 line: 3 (select
2021-12-16 12:15:01,717 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:15:01,717 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:15:01,717 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:15:01,717 chunk: 5 line: 7 row_count,
2021-12-16 12:15:01,717 chunk: 5 line: 8 partition_expression
2021-12-16 12:15:01,717 chunk: 5 line: 9 from
2021-12-16 12:15:01,718 chunk: 5 line: 10 (
2021-12-16 12:15:01,718 chunk: 5 line: 11 select
2021-12-16 12:15:01,718 chunk: 5 line: 12 table_schema,
2021-12-16 12:15:01,718 chunk: 5 line: 13 table_name,
2021-12-16 12:15:01,718 chunk: 5 line: 14 partition_expression,
2021-12-16 12:15:01,718 chunk: 5 line: 15 table_definition,
2021-12-16 12:15:01,718 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:15:01,718 chunk: 5 line: 17 
2021-12-16 12:15:01,718 chunk: 5 line: 18 from
2021-12-16 12:15:01,718 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:15:01,718 chunk: 5 line: 20 where
2021-12-16 12:15:01,718 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:15:01,718 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:15:01,718 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:15:01,718 chunk: 5 line: 24 ) tables
2021-12-16 12:15:01,718 chunk: 5 line: 25 natural join
2021-12-16 12:15:01,718 chunk: 5 line: 26 (
2021-12-16 12:15:01,718 chunk: 5 line: 27 select
2021-12-16 12:15:01,718 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:15:01,718 chunk: 5 line: 29 from
2021-12-16 12:15:01,718 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:15:01,718 chunk: 5 line: 31 group by
2021-12-16 12:15:01,718 chunk: 5 line: 32 table_schema,
2021-12-16 12:15:01,718 chunk: 5 line: 33 table_name
2021-12-16 12:15:01,718 chunk: 5 line: 34 
2021-12-16 12:15:01,718 chunk: 5 line: 35 minus
2021-12-16 12:15:01,718 chunk: 5 line: 36 
2021-12-16 12:15:01,718 chunk: 5 line: 37 select
2021-12-16 12:15:01,718 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:15:01,718 chunk: 5 line: 39 from
2021-12-16 12:15:01,718 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:15:01,719 chunk: 5 line: 41 where
2021-12-16 12:15:01,719 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:15:01,719 chunk: 5 line: 43 OR
2021-12-16 12:15:01,719 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:15:01,719 chunk: 5 line: 45 group by
2021-12-16 12:15:01,719 chunk: 5 line: 46 table_schema,
2021-12-16 12:15:01,719 chunk: 5 line: 47 table_name
2021-12-16 12:15:01,719 chunk: 5 line: 48 
2021-12-16 12:15:01,719 chunk: 5 line: 49 
2021-12-16 12:15:01,719 chunk: 5 line: 50 ) col_types
2021-12-16 12:15:01,719 chunk: 5 line: 51 natural join
2021-12-16 12:15:01,719 chunk: 5 line: 52 (
2021-12-16 12:15:01,719 chunk: 5 line: 53 SELECT
2021-12-16 12:15:01,719 chunk: 5 line: 54 table_schema,
2021-12-16 12:15:01,719 chunk: 5 line: 55 table_name,
2021-12-16 12:15:01,719 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:15:01,719 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:15:01,719 chunk: 5 line: 58 t.table_name,
2021-12-16 12:15:01,719 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:15:01,719 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:15:01,719 chunk: 5 line: 61 FROM projections p
2021-12-16 12:15:01,719 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:15:01,719 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:15:01,719 chunk: 5 line: 64 node_cnt,
2021-12-16 12:15:01,719 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:15:01,719 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:15:01,719 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:15:01,719 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:15:01,719 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:15:01,719 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:15:01,720 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:15:01,720 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:15:01,720 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:15:01,720 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:15:01,720 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:15:01,720 chunk: 5 line: 76 ) row_count
2021-12-16 12:15:01,720 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:15:01,720 chunk: 5 line: 78 
2021-12-16 12:15:01,720 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:15:01,720 chunk: 5 line: 80 );
2021-12-16 12:15:01,720 chunk: 6 line: 0 
2021-12-16 12:15:01,720 chunk: 6 line: 1 
2021-12-16 12:15:01,720 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:15:01,720 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:15:01,720 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:15:01,720 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:15:01,720 chunk: 10 line: 0 select
2021-12-16 12:15:01,720 chunk: 10 line: 1 table_schema,
2021-12-16 12:15:01,720 chunk: 10 line: 2 table_name,
2021-12-16 12:15:01,720 chunk: 10 line: 3 row_count
2021-12-16 12:15:01,720 chunk: 10 line: 4 from
2021-12-16 12:15:01,720 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:15:01,720 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:15:01,720 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:15:01,720 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:15:01,720 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:15:01,720 chunk: 13 line: 0 
2021-12-16 12:15:01,720 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:15:01,720 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:15:01,721 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:15:01,721 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:16:03,883 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:03,884 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:03,884 chunk: 2 line: 0 
2021-12-16 12:16:03,884 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:16:03,884 chunk: 3 line: 0 
2021-12-16 12:16:03,884 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:16:03,884 chunk: 3 line: 2 id    integer,
2021-12-16 12:16:03,884 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:16:03,884 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:16:03,884 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:16:03,884 chunk: 3 line: 6 );
2021-12-16 12:16:03,884 chunk: 4 line: 0 
2021-12-16 12:16:03,884 chunk: 4 line: 1 
2021-12-16 12:16:03,884 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:16:03,884 chunk: 4 line: 3 id    integer,
2021-12-16 12:16:03,884 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:16:03,884 chunk: 4 line: 5 );
2021-12-16 12:16:03,884 chunk: 5 line: 0 
2021-12-16 12:16:03,884 chunk: 5 line: 1 
2021-12-16 12:16:03,884 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:16:03,884 chunk: 5 line: 3 (select
2021-12-16 12:16:03,884 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:16:03,884 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:16:03,884 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:16:03,884 chunk: 5 line: 7 row_count,
2021-12-16 12:16:03,884 chunk: 5 line: 8 partition_expression
2021-12-16 12:16:03,885 chunk: 5 line: 9 from
2021-12-16 12:16:03,885 chunk: 5 line: 10 (
2021-12-16 12:16:03,885 chunk: 5 line: 11 select
2021-12-16 12:16:03,885 chunk: 5 line: 12 table_schema,
2021-12-16 12:16:03,885 chunk: 5 line: 13 table_name,
2021-12-16 12:16:03,885 chunk: 5 line: 14 partition_expression,
2021-12-16 12:16:03,885 chunk: 5 line: 15 table_definition,
2021-12-16 12:16:03,885 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:16:03,885 chunk: 5 line: 17 
2021-12-16 12:16:03,885 chunk: 5 line: 18 from
2021-12-16 12:16:03,885 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:16:03,885 chunk: 5 line: 20 where
2021-12-16 12:16:03,885 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:16:03,885 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:16:03,885 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:16:03,885 chunk: 5 line: 24 ) tables
2021-12-16 12:16:03,885 chunk: 5 line: 25 natural join
2021-12-16 12:16:03,885 chunk: 5 line: 26 (
2021-12-16 12:16:03,885 chunk: 5 line: 27 select
2021-12-16 12:16:03,885 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:16:03,885 chunk: 5 line: 29 from
2021-12-16 12:16:03,886 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:16:03,886 chunk: 5 line: 31 group by
2021-12-16 12:16:03,886 chunk: 5 line: 32 table_schema,
2021-12-16 12:16:03,886 chunk: 5 line: 33 table_name
2021-12-16 12:16:03,886 chunk: 5 line: 34 
2021-12-16 12:16:03,886 chunk: 5 line: 35 minus
2021-12-16 12:16:03,886 chunk: 5 line: 36 
2021-12-16 12:16:03,886 chunk: 5 line: 37 select
2021-12-16 12:16:03,886 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:16:03,886 chunk: 5 line: 39 from
2021-12-16 12:16:03,886 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:16:03,886 chunk: 5 line: 41 where
2021-12-16 12:16:03,886 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:16:03,886 chunk: 5 line: 43 OR
2021-12-16 12:16:03,886 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:16:03,886 chunk: 5 line: 45 group by
2021-12-16 12:16:03,886 chunk: 5 line: 46 table_schema,
2021-12-16 12:16:03,886 chunk: 5 line: 47 table_name
2021-12-16 12:16:03,886 chunk: 5 line: 48 
2021-12-16 12:16:03,886 chunk: 5 line: 49 
2021-12-16 12:16:03,886 chunk: 5 line: 50 ) col_types
2021-12-16 12:16:03,886 chunk: 5 line: 51 natural join
2021-12-16 12:16:03,886 chunk: 5 line: 52 (
2021-12-16 12:16:03,886 chunk: 5 line: 53 SELECT
2021-12-16 12:16:03,886 chunk: 5 line: 54 table_schema,
2021-12-16 12:16:03,886 chunk: 5 line: 55 table_name,
2021-12-16 12:16:03,886 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:16:03,886 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:16:03,887 chunk: 5 line: 58 t.table_name,
2021-12-16 12:16:03,887 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:16:03,887 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:16:03,887 chunk: 5 line: 61 FROM projections p
2021-12-16 12:16:03,887 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:16:03,887 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:16:03,887 chunk: 5 line: 64 node_cnt,
2021-12-16 12:16:03,887 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:16:03,887 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:16:03,887 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:16:03,887 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:16:03,887 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:16:03,887 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:16:03,887 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:16:03,887 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:16:03,887 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:16:03,887 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:16:03,887 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:16:03,887 chunk: 5 line: 76 ) row_count
2021-12-16 12:16:03,887 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:16:03,887 chunk: 5 line: 78 
2021-12-16 12:16:03,887 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:16:03,887 chunk: 5 line: 80 );
2021-12-16 12:16:03,887 chunk: 6 line: 0 
2021-12-16 12:16:03,887 chunk: 6 line: 1 
2021-12-16 12:16:03,887 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:16:03,887 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:03,887 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:03,888 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:03,888 chunk: 10 line: 0 select
2021-12-16 12:16:03,888 chunk: 10 line: 1 table_schema,
2021-12-16 12:16:03,888 chunk: 10 line: 2 table_name,
2021-12-16 12:16:03,888 chunk: 10 line: 3 row_count
2021-12-16 12:16:03,888 chunk: 10 line: 4 from
2021-12-16 12:16:03,888 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:16:03,888 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:16:03,888 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:16:03,888 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:16:03,888 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:16:03,888 chunk: 13 line: 0 
2021-12-16 12:16:03,888 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:16:03,888 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:16:03,888 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:16:03,888 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:16:20,955 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:20,955 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:20,955 chunk: 2 line: 0 
2021-12-16 12:16:20,955 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:16:20,955 chunk: 3 line: 0 
2021-12-16 12:16:20,955 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:16:20,955 chunk: 3 line: 2 id    integer,
2021-12-16 12:16:20,955 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:16:20,955 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:16:20,955 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:16:20,955 chunk: 3 line: 6 );
2021-12-16 12:16:20,955 chunk: 4 line: 0 
2021-12-16 12:16:20,955 chunk: 4 line: 1 
2021-12-16 12:16:20,955 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:16:20,955 chunk: 4 line: 3 id    integer,
2021-12-16 12:16:20,955 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:16:20,956 chunk: 4 line: 5 );
2021-12-16 12:16:20,956 chunk: 5 line: 0 
2021-12-16 12:16:20,956 chunk: 5 line: 1 
2021-12-16 12:16:20,956 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:16:20,956 chunk: 5 line: 3 (select
2021-12-16 12:16:20,956 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:16:20,956 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:16:20,956 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:16:20,956 chunk: 5 line: 7 row_count,
2021-12-16 12:16:20,956 chunk: 5 line: 8 partition_expression
2021-12-16 12:16:20,956 chunk: 5 line: 9 from
2021-12-16 12:16:20,956 chunk: 5 line: 10 (
2021-12-16 12:16:20,956 chunk: 5 line: 11 select
2021-12-16 12:16:20,956 chunk: 5 line: 12 table_schema,
2021-12-16 12:16:20,956 chunk: 5 line: 13 table_name,
2021-12-16 12:16:20,956 chunk: 5 line: 14 partition_expression,
2021-12-16 12:16:20,956 chunk: 5 line: 15 table_definition,
2021-12-16 12:16:20,956 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:16:20,956 chunk: 5 line: 17 
2021-12-16 12:16:20,956 chunk: 5 line: 18 from
2021-12-16 12:16:20,956 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:16:20,956 chunk: 5 line: 20 where
2021-12-16 12:16:20,956 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:16:20,956 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:16:20,956 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:16:20,956 chunk: 5 line: 24 ) tables
2021-12-16 12:16:20,956 chunk: 5 line: 25 natural join
2021-12-16 12:16:20,957 chunk: 5 line: 26 (
2021-12-16 12:16:20,957 chunk: 5 line: 27 select
2021-12-16 12:16:20,957 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:16:20,957 chunk: 5 line: 29 from
2021-12-16 12:16:20,957 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:16:20,957 chunk: 5 line: 31 group by
2021-12-16 12:16:20,957 chunk: 5 line: 32 table_schema,
2021-12-16 12:16:20,957 chunk: 5 line: 33 table_name
2021-12-16 12:16:20,957 chunk: 5 line: 34 
2021-12-16 12:16:20,957 chunk: 5 line: 35 minus
2021-12-16 12:16:20,957 chunk: 5 line: 36 
2021-12-16 12:16:20,957 chunk: 5 line: 37 select
2021-12-16 12:16:20,957 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:16:20,957 chunk: 5 line: 39 from
2021-12-16 12:16:20,957 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:16:20,957 chunk: 5 line: 41 where
2021-12-16 12:16:20,957 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:16:20,957 chunk: 5 line: 43 OR
2021-12-16 12:16:20,957 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:16:20,957 chunk: 5 line: 45 group by
2021-12-16 12:16:20,957 chunk: 5 line: 46 table_schema,
2021-12-16 12:16:20,957 chunk: 5 line: 47 table_name
2021-12-16 12:16:20,957 chunk: 5 line: 48 
2021-12-16 12:16:20,957 chunk: 5 line: 49 
2021-12-16 12:16:20,958 chunk: 5 line: 50 ) col_types
2021-12-16 12:16:20,958 chunk: 5 line: 51 natural join
2021-12-16 12:16:20,958 chunk: 5 line: 52 (
2021-12-16 12:16:20,958 chunk: 5 line: 53 SELECT
2021-12-16 12:16:20,958 chunk: 5 line: 54 table_schema,
2021-12-16 12:16:20,958 chunk: 5 line: 55 table_name,
2021-12-16 12:16:20,958 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:16:20,958 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:16:20,958 chunk: 5 line: 58 t.table_name,
2021-12-16 12:16:20,958 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:16:20,958 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:16:20,958 chunk: 5 line: 61 FROM projections p
2021-12-16 12:16:20,958 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:16:20,958 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:16:20,958 chunk: 5 line: 64 node_cnt,
2021-12-16 12:16:20,958 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:16:20,958 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:16:20,958 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:16:20,958 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:16:20,958 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:16:20,958 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:16:20,958 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:16:20,958 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:16:20,958 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:16:20,958 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:16:20,958 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:16:20,958 chunk: 5 line: 76 ) row_count
2021-12-16 12:16:20,959 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:16:20,959 chunk: 5 line: 78 
2021-12-16 12:16:20,959 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:16:20,959 chunk: 5 line: 80 );
2021-12-16 12:16:20,959 chunk: 6 line: 0 
2021-12-16 12:16:20,959 chunk: 6 line: 1 
2021-12-16 12:16:20,959 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:16:20,959 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:20,959 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:20,959 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:16:20,959 chunk: 10 line: 0 select
2021-12-16 12:16:20,959 chunk: 10 line: 1 table_schema,
2021-12-16 12:16:20,959 chunk: 10 line: 2 table_name,
2021-12-16 12:16:20,959 chunk: 10 line: 3 row_count
2021-12-16 12:16:20,959 chunk: 10 line: 4 from
2021-12-16 12:16:20,959 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:16:20,959 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:16:20,959 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:16:20,959 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:16:20,959 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:16:20,959 chunk: 13 line: 0 
2021-12-16 12:16:20,960 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:16:20,960 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:16:20,960 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:16:20,960 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:28:30,880 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:28:30,881 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:28:30,881 chunk: 2 line: 0 
2021-12-16 12:28:30,881 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:28:30,881 chunk: 3 line: 0 
2021-12-16 12:28:30,881 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:28:30,881 chunk: 3 line: 2 id    integer,
2021-12-16 12:28:30,881 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:28:30,881 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:28:30,881 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:28:30,881 chunk: 3 line: 6 );
2021-12-16 12:28:30,881 chunk: 4 line: 0 
2021-12-16 12:28:30,881 chunk: 4 line: 1 
2021-12-16 12:28:30,881 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:28:30,881 chunk: 4 line: 3 id    integer,
2021-12-16 12:28:30,881 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:28:30,881 chunk: 4 line: 5 );
2021-12-16 12:28:30,881 chunk: 5 line: 0 
2021-12-16 12:28:30,881 chunk: 5 line: 1 
2021-12-16 12:28:30,881 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:28:30,881 chunk: 5 line: 3 (select
2021-12-16 12:28:30,881 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:28:30,881 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:28:30,881 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:28:30,881 chunk: 5 line: 7 row_count,
2021-12-16 12:28:30,881 chunk: 5 line: 8 partition_expression
2021-12-16 12:28:30,882 chunk: 5 line: 9 from
2021-12-16 12:28:30,882 chunk: 5 line: 10 (
2021-12-16 12:28:30,882 chunk: 5 line: 11 select
2021-12-16 12:28:30,882 chunk: 5 line: 12 table_schema,
2021-12-16 12:28:30,882 chunk: 5 line: 13 table_name,
2021-12-16 12:28:30,882 chunk: 5 line: 14 partition_expression,
2021-12-16 12:28:30,882 chunk: 5 line: 15 table_definition,
2021-12-16 12:28:30,882 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:28:30,882 chunk: 5 line: 17 
2021-12-16 12:28:30,882 chunk: 5 line: 18 from
2021-12-16 12:28:30,882 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:28:30,882 chunk: 5 line: 20 where
2021-12-16 12:28:30,882 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:28:30,882 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:28:30,882 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:28:30,882 chunk: 5 line: 24 ) tables
2021-12-16 12:28:30,883 chunk: 5 line: 25 natural join
2021-12-16 12:28:30,883 chunk: 5 line: 26 (
2021-12-16 12:28:30,883 chunk: 5 line: 27 select
2021-12-16 12:28:30,883 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:28:30,883 chunk: 5 line: 29 from
2021-12-16 12:28:30,883 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:28:30,883 chunk: 5 line: 31 group by
2021-12-16 12:28:30,883 chunk: 5 line: 32 table_schema,
2021-12-16 12:28:30,883 chunk: 5 line: 33 table_name
2021-12-16 12:28:30,883 chunk: 5 line: 34 
2021-12-16 12:28:30,883 chunk: 5 line: 35 minus
2021-12-16 12:28:30,883 chunk: 5 line: 36 
2021-12-16 12:28:30,883 chunk: 5 line: 37 select
2021-12-16 12:28:30,883 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:28:30,883 chunk: 5 line: 39 from
2021-12-16 12:28:30,883 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:28:30,883 chunk: 5 line: 41 where
2021-12-16 12:28:30,884 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:28:30,884 chunk: 5 line: 43 OR
2021-12-16 12:28:30,884 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:28:30,884 chunk: 5 line: 45 group by
2021-12-16 12:28:30,884 chunk: 5 line: 46 table_schema,
2021-12-16 12:28:30,884 chunk: 5 line: 47 table_name
2021-12-16 12:28:30,884 chunk: 5 line: 48 
2021-12-16 12:28:30,884 chunk: 5 line: 49 
2021-12-16 12:28:30,884 chunk: 5 line: 50 ) col_types
2021-12-16 12:28:30,884 chunk: 5 line: 51 natural join
2021-12-16 12:28:30,884 chunk: 5 line: 52 (
2021-12-16 12:28:30,884 chunk: 5 line: 53 SELECT
2021-12-16 12:28:30,884 chunk: 5 line: 54 table_schema,
2021-12-16 12:28:30,884 chunk: 5 line: 55 table_name,
2021-12-16 12:28:30,884 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:28:30,884 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:28:30,884 chunk: 5 line: 58 t.table_name,
2021-12-16 12:28:30,884 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:28:30,884 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:28:30,884 chunk: 5 line: 61 FROM projections p
2021-12-16 12:28:30,884 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:28:30,884 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:28:30,884 chunk: 5 line: 64 node_cnt,
2021-12-16 12:28:30,884 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:28:30,884 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:28:30,884 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:28:30,884 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:28:30,885 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:28:30,885 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:28:30,885 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:28:30,885 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:28:30,885 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:28:30,885 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:28:30,885 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:28:30,885 chunk: 5 line: 76 ) row_count
2021-12-16 12:28:30,885 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:28:30,885 chunk: 5 line: 78 
2021-12-16 12:28:30,885 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:28:30,885 chunk: 5 line: 80 );
2021-12-16 12:28:30,885 chunk: 6 line: 0 
2021-12-16 12:28:30,885 chunk: 6 line: 1 
2021-12-16 12:28:30,885 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:28:30,885 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:28:30,885 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:28:30,885 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:28:30,885 chunk: 10 line: 0 select
2021-12-16 12:28:30,885 chunk: 10 line: 1 table_schema,
2021-12-16 12:28:30,885 chunk: 10 line: 2 table_name,
2021-12-16 12:28:30,885 chunk: 10 line: 3 row_count
2021-12-16 12:28:30,885 chunk: 10 line: 4 from
2021-12-16 12:28:30,885 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:28:30,885 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:28:30,885 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:28:30,886 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:28:30,886 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:28:30,886 chunk: 13 line: 0 
2021-12-16 12:28:30,886 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:28:30,886 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:28:30,886 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:28:30,886 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:32:02,274 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:32:02,274 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:32:02,274 chunk: 2 line: 0 
2021-12-16 12:32:02,275 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:32:02,275 chunk: 3 line: 0 
2021-12-16 12:32:02,275 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:32:02,275 chunk: 3 line: 2 id    integer,
2021-12-16 12:32:02,275 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:32:02,275 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:32:02,275 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:32:02,275 chunk: 3 line: 6 );
2021-12-16 12:32:02,275 chunk: 4 line: 0 
2021-12-16 12:32:02,275 chunk: 4 line: 1 
2021-12-16 12:32:02,275 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:32:02,275 chunk: 4 line: 3 id    integer,
2021-12-16 12:32:02,275 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:32:02,275 chunk: 4 line: 5 );
2021-12-16 12:32:02,275 chunk: 5 line: 0 
2021-12-16 12:32:02,275 chunk: 5 line: 1 
2021-12-16 12:32:02,275 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:32:02,275 chunk: 5 line: 3 (select
2021-12-16 12:32:02,275 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:32:02,275 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:32:02,275 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:32:02,275 chunk: 5 line: 7 row_count,
2021-12-16 12:32:02,275 chunk: 5 line: 8 partition_expression
2021-12-16 12:32:02,275 chunk: 5 line: 9 from
2021-12-16 12:32:02,275 chunk: 5 line: 10 (
2021-12-16 12:32:02,275 chunk: 5 line: 11 select
2021-12-16 12:32:02,276 chunk: 5 line: 12 table_schema,
2021-12-16 12:32:02,276 chunk: 5 line: 13 table_name,
2021-12-16 12:32:02,276 chunk: 5 line: 14 partition_expression,
2021-12-16 12:32:02,276 chunk: 5 line: 15 table_definition,
2021-12-16 12:32:02,276 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:32:02,276 chunk: 5 line: 17 
2021-12-16 12:32:02,276 chunk: 5 line: 18 from
2021-12-16 12:32:02,276 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:32:02,276 chunk: 5 line: 20 where
2021-12-16 12:32:02,276 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:32:02,276 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:32:02,276 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:32:02,276 chunk: 5 line: 24 ) tables
2021-12-16 12:32:02,276 chunk: 5 line: 25 natural join
2021-12-16 12:32:02,276 chunk: 5 line: 26 (
2021-12-16 12:32:02,276 chunk: 5 line: 27 select
2021-12-16 12:32:02,276 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:32:02,276 chunk: 5 line: 29 from
2021-12-16 12:32:02,276 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:32:02,276 chunk: 5 line: 31 group by
2021-12-16 12:32:02,276 chunk: 5 line: 32 table_schema,
2021-12-16 12:32:02,276 chunk: 5 line: 33 table_name
2021-12-16 12:32:02,276 chunk: 5 line: 34 
2021-12-16 12:32:02,276 chunk: 5 line: 35 minus
2021-12-16 12:32:02,276 chunk: 5 line: 36 
2021-12-16 12:32:02,276 chunk: 5 line: 37 select
2021-12-16 12:32:02,276 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:32:02,276 chunk: 5 line: 39 from
2021-12-16 12:32:02,277 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:32:02,277 chunk: 5 line: 41 where
2021-12-16 12:32:02,277 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:32:02,277 chunk: 5 line: 43 OR
2021-12-16 12:32:02,277 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:32:02,277 chunk: 5 line: 45 group by
2021-12-16 12:32:02,277 chunk: 5 line: 46 table_schema,
2021-12-16 12:32:02,277 chunk: 5 line: 47 table_name
2021-12-16 12:32:02,277 chunk: 5 line: 48 
2021-12-16 12:32:02,277 chunk: 5 line: 49 
2021-12-16 12:32:02,277 chunk: 5 line: 50 ) col_types
2021-12-16 12:32:02,277 chunk: 5 line: 51 natural join
2021-12-16 12:32:02,277 chunk: 5 line: 52 (
2021-12-16 12:32:02,277 chunk: 5 line: 53 SELECT
2021-12-16 12:32:02,277 chunk: 5 line: 54 table_schema,
2021-12-16 12:32:02,277 chunk: 5 line: 55 table_name,
2021-12-16 12:32:02,277 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:32:02,277 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:32:02,277 chunk: 5 line: 58 t.table_name,
2021-12-16 12:32:02,277 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:32:02,277 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:32:02,277 chunk: 5 line: 61 FROM projections p
2021-12-16 12:32:02,277 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:32:02,277 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:32:02,277 chunk: 5 line: 64 node_cnt,
2021-12-16 12:32:02,277 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:32:02,277 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:32:02,278 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:32:02,278 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:32:02,278 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:32:02,278 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:32:02,278 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:32:02,278 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:32:02,278 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:32:02,278 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:32:02,278 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:32:02,278 chunk: 5 line: 76 ) row_count
2021-12-16 12:32:02,278 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:32:02,278 chunk: 5 line: 78 
2021-12-16 12:32:02,278 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:32:02,278 chunk: 5 line: 80 );
2021-12-16 12:32:02,278 chunk: 6 line: 0 
2021-12-16 12:32:02,278 chunk: 6 line: 1 
2021-12-16 12:32:02,278 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:32:02,278 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:32:02,278 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:32:02,278 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:32:02,278 chunk: 10 line: 0 select
2021-12-16 12:32:02,278 chunk: 10 line: 1 table_schema,
2021-12-16 12:32:02,278 chunk: 10 line: 2 table_name,
2021-12-16 12:32:02,279 chunk: 10 line: 3 row_count
2021-12-16 12:32:02,279 chunk: 10 line: 4 from
2021-12-16 12:32:02,279 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:32:02,279 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:32:02,279 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:32:02,279 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:32:02,279 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:32:02,279 chunk: 13 line: 0 
2021-12-16 12:32:02,279 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:32:02,279 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:32:02,279 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:32:02,279 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:39:01,318 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:01,319 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:01,319 chunk: 2 line: 0 
2021-12-16 12:39:01,319 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:39:01,319 chunk: 3 line: 0 
2021-12-16 12:39:01,319 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:39:01,319 chunk: 3 line: 2 id    integer,
2021-12-16 12:39:01,319 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:39:01,319 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:39:01,319 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:39:01,319 chunk: 3 line: 6 );
2021-12-16 12:39:01,319 chunk: 4 line: 0 
2021-12-16 12:39:01,319 chunk: 4 line: 1 
2021-12-16 12:39:01,320 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:39:01,320 chunk: 4 line: 3 id    integer,
2021-12-16 12:39:01,320 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:39:01,320 chunk: 4 line: 5 );
2021-12-16 12:39:01,320 chunk: 5 line: 0 
2021-12-16 12:39:01,320 chunk: 5 line: 1 
2021-12-16 12:39:01,320 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:39:01,320 chunk: 5 line: 3 (select
2021-12-16 12:39:01,320 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:39:01,320 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:39:01,320 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:39:01,320 chunk: 5 line: 7 row_count,
2021-12-16 12:39:01,320 chunk: 5 line: 8 partition_expression
2021-12-16 12:39:01,320 chunk: 5 line: 9 from
2021-12-16 12:39:01,320 chunk: 5 line: 10 (
2021-12-16 12:39:01,320 chunk: 5 line: 11 select
2021-12-16 12:39:01,320 chunk: 5 line: 12 table_schema,
2021-12-16 12:39:01,320 chunk: 5 line: 13 table_name,
2021-12-16 12:39:01,320 chunk: 5 line: 14 partition_expression,
2021-12-16 12:39:01,320 chunk: 5 line: 15 table_definition,
2021-12-16 12:39:01,320 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:39:01,320 chunk: 5 line: 17 
2021-12-16 12:39:01,320 chunk: 5 line: 18 from
2021-12-16 12:39:01,320 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:39:01,320 chunk: 5 line: 20 where
2021-12-16 12:39:01,320 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:39:01,321 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:39:01,321 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:39:01,321 chunk: 5 line: 24 ) tables
2021-12-16 12:39:01,321 chunk: 5 line: 25 natural join
2021-12-16 12:39:01,321 chunk: 5 line: 26 (
2021-12-16 12:39:01,321 chunk: 5 line: 27 select
2021-12-16 12:39:01,321 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:39:01,321 chunk: 5 line: 29 from
2021-12-16 12:39:01,321 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:39:01,321 chunk: 5 line: 31 group by
2021-12-16 12:39:01,321 chunk: 5 line: 32 table_schema,
2021-12-16 12:39:01,321 chunk: 5 line: 33 table_name
2021-12-16 12:39:01,321 chunk: 5 line: 34 
2021-12-16 12:39:01,321 chunk: 5 line: 35 minus
2021-12-16 12:39:01,321 chunk: 5 line: 36 
2021-12-16 12:39:01,321 chunk: 5 line: 37 select
2021-12-16 12:39:01,321 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:39:01,321 chunk: 5 line: 39 from
2021-12-16 12:39:01,321 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:39:01,321 chunk: 5 line: 41 where
2021-12-16 12:39:01,321 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:39:01,321 chunk: 5 line: 43 OR
2021-12-16 12:39:01,321 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:39:01,321 chunk: 5 line: 45 group by
2021-12-16 12:39:01,321 chunk: 5 line: 46 table_schema,
2021-12-16 12:39:01,321 chunk: 5 line: 47 table_name
2021-12-16 12:39:01,322 chunk: 5 line: 48 
2021-12-16 12:39:01,322 chunk: 5 line: 49 
2021-12-16 12:39:01,322 chunk: 5 line: 50 ) col_types
2021-12-16 12:39:01,322 chunk: 5 line: 51 natural join
2021-12-16 12:39:01,322 chunk: 5 line: 52 (
2021-12-16 12:39:01,322 chunk: 5 line: 53 SELECT
2021-12-16 12:39:01,322 chunk: 5 line: 54 table_schema,
2021-12-16 12:39:01,322 chunk: 5 line: 55 table_name,
2021-12-16 12:39:01,322 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:39:01,322 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:39:01,322 chunk: 5 line: 58 t.table_name,
2021-12-16 12:39:01,322 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:39:01,322 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:39:01,322 chunk: 5 line: 61 FROM projections p
2021-12-16 12:39:01,322 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:39:01,322 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:39:01,322 chunk: 5 line: 64 node_cnt,
2021-12-16 12:39:01,322 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:39:01,322 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:39:01,322 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:39:01,322 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:39:01,322 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:39:01,322 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:39:01,322 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:39:01,322 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:39:01,322 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:39:01,322 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:39:01,323 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:39:01,323 chunk: 5 line: 76 ) row_count
2021-12-16 12:39:01,323 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:39:01,323 chunk: 5 line: 78 
2021-12-16 12:39:01,323 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:39:01,323 chunk: 5 line: 80 );
2021-12-16 12:39:01,323 chunk: 6 line: 0 
2021-12-16 12:39:01,323 chunk: 6 line: 1 
2021-12-16 12:39:01,323 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:39:01,323 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:01,323 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:01,323 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:01,323 chunk: 10 line: 0 select
2021-12-16 12:39:01,323 chunk: 10 line: 1 table_schema,
2021-12-16 12:39:01,323 chunk: 10 line: 2 table_name,
2021-12-16 12:39:01,323 chunk: 10 line: 3 row_count
2021-12-16 12:39:01,323 chunk: 10 line: 4 from
2021-12-16 12:39:01,323 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:39:01,323 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:39:01,323 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:39:01,323 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:39:01,324 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:39:01,324 chunk: 13 line: 0 
2021-12-16 12:39:01,324 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:39:01,324 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:39:01,324 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:39:01,324 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:39:43,888 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:43,888 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:43,888 chunk: 2 line: 0 
2021-12-16 12:39:43,888 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:39:43,888 chunk: 3 line: 0 
2021-12-16 12:39:43,888 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:39:43,888 chunk: 3 line: 2 id    integer,
2021-12-16 12:39:43,888 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:39:43,888 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:39:43,888 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:39:43,888 chunk: 3 line: 6 );
2021-12-16 12:39:43,888 chunk: 4 line: 0 
2021-12-16 12:39:43,889 chunk: 4 line: 1 
2021-12-16 12:39:43,889 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:39:43,889 chunk: 4 line: 3 id    integer,
2021-12-16 12:39:43,889 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:39:43,889 chunk: 4 line: 5 );
2021-12-16 12:39:43,889 chunk: 5 line: 0 
2021-12-16 12:39:43,889 chunk: 5 line: 1 
2021-12-16 12:39:43,889 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:39:43,889 chunk: 5 line: 3 (select
2021-12-16 12:39:43,889 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:39:43,889 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:39:43,889 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:39:43,889 chunk: 5 line: 7 row_count,
2021-12-16 12:39:43,889 chunk: 5 line: 8 partition_expression
2021-12-16 12:39:43,889 chunk: 5 line: 9 from
2021-12-16 12:39:43,889 chunk: 5 line: 10 (
2021-12-16 12:39:43,889 chunk: 5 line: 11 select
2021-12-16 12:39:43,889 chunk: 5 line: 12 table_schema,
2021-12-16 12:39:43,889 chunk: 5 line: 13 table_name,
2021-12-16 12:39:43,890 chunk: 5 line: 14 partition_expression,
2021-12-16 12:39:43,890 chunk: 5 line: 15 table_definition,
2021-12-16 12:39:43,890 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:39:43,890 chunk: 5 line: 17 
2021-12-16 12:39:43,890 chunk: 5 line: 18 from
2021-12-16 12:39:43,890 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:39:43,890 chunk: 5 line: 20 where
2021-12-16 12:39:43,890 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:39:43,890 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:39:43,890 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:39:43,890 chunk: 5 line: 24 ) tables
2021-12-16 12:39:43,890 chunk: 5 line: 25 natural join
2021-12-16 12:39:43,890 chunk: 5 line: 26 (
2021-12-16 12:39:43,890 chunk: 5 line: 27 select
2021-12-16 12:39:43,890 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:39:43,890 chunk: 5 line: 29 from
2021-12-16 12:39:43,890 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:39:43,890 chunk: 5 line: 31 group by
2021-12-16 12:39:43,890 chunk: 5 line: 32 table_schema,
2021-12-16 12:39:43,890 chunk: 5 line: 33 table_name
2021-12-16 12:39:43,890 chunk: 5 line: 34 
2021-12-16 12:39:43,890 chunk: 5 line: 35 minus
2021-12-16 12:39:43,890 chunk: 5 line: 36 
2021-12-16 12:39:43,890 chunk: 5 line: 37 select
2021-12-16 12:39:43,890 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:39:43,890 chunk: 5 line: 39 from
2021-12-16 12:39:43,890 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:39:43,891 chunk: 5 line: 41 where
2021-12-16 12:39:43,891 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:39:43,891 chunk: 5 line: 43 OR
2021-12-16 12:39:43,891 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:39:43,891 chunk: 5 line: 45 group by
2021-12-16 12:39:43,891 chunk: 5 line: 46 table_schema,
2021-12-16 12:39:43,891 chunk: 5 line: 47 table_name
2021-12-16 12:39:43,891 chunk: 5 line: 48 
2021-12-16 12:39:43,891 chunk: 5 line: 49 
2021-12-16 12:39:43,891 chunk: 5 line: 50 ) col_types
2021-12-16 12:39:43,891 chunk: 5 line: 51 natural join
2021-12-16 12:39:43,891 chunk: 5 line: 52 (
2021-12-16 12:39:43,891 chunk: 5 line: 53 SELECT
2021-12-16 12:39:43,891 chunk: 5 line: 54 table_schema,
2021-12-16 12:39:43,891 chunk: 5 line: 55 table_name,
2021-12-16 12:39:43,891 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:39:43,891 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:39:43,891 chunk: 5 line: 58 t.table_name,
2021-12-16 12:39:43,891 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:39:43,891 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:39:43,891 chunk: 5 line: 61 FROM projections p
2021-12-16 12:39:43,891 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:39:43,891 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:39:43,891 chunk: 5 line: 64 node_cnt,
2021-12-16 12:39:43,891 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:39:43,892 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:39:43,892 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:39:43,892 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:39:43,892 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:39:43,892 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:39:43,892 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:39:43,892 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:39:43,892 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:39:43,892 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:39:43,892 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:39:43,892 chunk: 5 line: 76 ) row_count
2021-12-16 12:39:43,892 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:39:43,892 chunk: 5 line: 78 
2021-12-16 12:39:43,892 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:39:43,892 chunk: 5 line: 80 );
2021-12-16 12:39:43,892 chunk: 6 line: 0 
2021-12-16 12:39:43,892 chunk: 6 line: 1 
2021-12-16 12:39:43,892 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:39:43,892 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:43,892 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:43,892 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:39:43,892 chunk: 10 line: 0 select
2021-12-16 12:39:43,892 chunk: 10 line: 1 table_schema,
2021-12-16 12:39:43,892 chunk: 10 line: 2 table_name,
2021-12-16 12:39:43,892 chunk: 10 line: 3 row_count
2021-12-16 12:39:43,892 chunk: 10 line: 4 from
2021-12-16 12:39:43,893 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:39:43,893 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:39:43,893 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:39:43,893 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:39:43,893 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:39:43,893 chunk: 13 line: 0 
2021-12-16 12:39:43,893 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:39:43,893 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:39:43,893 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:39:43,893 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:40:12,797 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:40:12,798 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:40:12,798 chunk: 2 line: 0 
2021-12-16 12:40:12,798 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:40:12,798 chunk: 3 line: 0 
2021-12-16 12:40:12,798 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:40:12,798 chunk: 3 line: 2 id    integer,
2021-12-16 12:40:12,798 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:40:12,798 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:40:12,798 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:40:12,798 chunk: 3 line: 6 );
2021-12-16 12:40:12,798 chunk: 4 line: 0 
2021-12-16 12:40:12,798 chunk: 4 line: 1 
2021-12-16 12:40:12,798 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:40:12,798 chunk: 4 line: 3 id    integer,
2021-12-16 12:40:12,798 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:40:12,798 chunk: 4 line: 5 );
2021-12-16 12:40:12,798 chunk: 5 line: 0 
2021-12-16 12:40:12,798 chunk: 5 line: 1 
2021-12-16 12:40:12,798 chunk: 5 line: 2 create table if not exists migration.source_schemas as
2021-12-16 12:40:12,798 chunk: 5 line: 3 (select
2021-12-16 12:40:12,799 chunk: 5 line: 4 tables.table_schema,
2021-12-16 12:40:12,799 chunk: 5 line: 5 tables.table_name,
2021-12-16 12:40:12,799 chunk: 5 line: 6 is_partitioned,
2021-12-16 12:40:12,799 chunk: 5 line: 7 row_count,
2021-12-16 12:40:12,799 chunk: 5 line: 8 partition_expression
2021-12-16 12:40:12,799 chunk: 5 line: 9 from
2021-12-16 12:40:12,799 chunk: 5 line: 10 (
2021-12-16 12:40:12,799 chunk: 5 line: 11 select
2021-12-16 12:40:12,799 chunk: 5 line: 12 table_schema,
2021-12-16 12:40:12,799 chunk: 5 line: 13 table_name,
2021-12-16 12:40:12,799 chunk: 5 line: 14 partition_expression,
2021-12-16 12:40:12,799 chunk: 5 line: 15 table_definition,
2021-12-16 12:40:12,799 chunk: 5 line: 16 length(partition_expression)>0 is_partitioned
2021-12-16 12:40:12,799 chunk: 5 line: 17 
2021-12-16 12:40:12,799 chunk: 5 line: 18 from
2021-12-16 12:40:12,799 chunk: 5 line: 19 v_catalog.tables
2021-12-16 12:40:12,799 chunk: 5 line: 20 where
2021-12-16 12:40:12,800 chunk: 5 line: 21 length(table_definition) = 0 -- skip external tables
2021-12-16 12:40:12,800 chunk: 5 line: 22 and not is_system_table      -- not system table
2021-12-16 12:40:12,800 chunk: 5 line: 23 and not is_temp_table        -- not temp table
2021-12-16 12:40:12,800 chunk: 5 line: 24 ) tables
2021-12-16 12:40:12,800 chunk: 5 line: 25 natural join
2021-12-16 12:40:12,800 chunk: 5 line: 26 (
2021-12-16 12:40:12,800 chunk: 5 line: 27 select
2021-12-16 12:40:12,800 chunk: 5 line: 28 distinct table_schema, table_name
2021-12-16 12:40:12,800 chunk: 5 line: 29 from
2021-12-16 12:40:12,800 chunk: 5 line: 30 v_catalog.columns
2021-12-16 12:40:12,800 chunk: 5 line: 31 group by
2021-12-16 12:40:12,800 chunk: 5 line: 32 table_schema,
2021-12-16 12:40:12,800 chunk: 5 line: 33 table_name
2021-12-16 12:40:12,800 chunk: 5 line: 34 
2021-12-16 12:40:12,800 chunk: 5 line: 35 minus
2021-12-16 12:40:12,800 chunk: 5 line: 36 
2021-12-16 12:40:12,800 chunk: 5 line: 37 select
2021-12-16 12:40:12,800 chunk: 5 line: 38 distinct table_schema, table_name
2021-12-16 12:40:12,800 chunk: 5 line: 39 from
2021-12-16 12:40:12,800 chunk: 5 line: 40 v_catalog.columns
2021-12-16 12:40:12,800 chunk: 5 line: 41 where
2021-12-16 12:40:12,800 chunk: 5 line: 42 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:40:12,800 chunk: 5 line: 43 OR
2021-12-16 12:40:12,800 chunk: 5 line: 44 numeric_precision > 38
2021-12-16 12:40:12,800 chunk: 5 line: 45 group by
2021-12-16 12:40:12,800 chunk: 5 line: 46 table_schema,
2021-12-16 12:40:12,800 chunk: 5 line: 47 table_name
2021-12-16 12:40:12,801 chunk: 5 line: 48 
2021-12-16 12:40:12,801 chunk: 5 line: 49 
2021-12-16 12:40:12,801 chunk: 5 line: 50 ) col_types
2021-12-16 12:40:12,801 chunk: 5 line: 51 natural join
2021-12-16 12:40:12,801 chunk: 5 line: 52 (
2021-12-16 12:40:12,801 chunk: 5 line: 53 SELECT
2021-12-16 12:40:12,801 chunk: 5 line: 54 table_schema,
2021-12-16 12:40:12,801 chunk: 5 line: 55 table_name,
2021-12-16 12:40:12,801 chunk: 5 line: 56 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:40:12,801 chunk: 5 line: 57 FROM (SELECT t.table_schema,
2021-12-16 12:40:12,801 chunk: 5 line: 58 t.table_name,
2021-12-16 12:40:12,801 chunk: 5 line: 59 ps.projection_name,
2021-12-16 12:40:12,801 chunk: 5 line: 60 (SELECT MIN(is_segmented)
2021-12-16 12:40:12,801 chunk: 5 line: 61 FROM projections p
2021-12-16 12:40:12,801 chunk: 5 line: 62 WHERE p.projection_name = ps.projection_name
2021-12-16 12:40:12,801 chunk: 5 line: 63 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:40:12,801 chunk: 5 line: 64 node_cnt,
2021-12-16 12:40:12,801 chunk: 5 line: 65 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:40:12,801 chunk: 5 line: 66 FROM v_catalog.tables t
2021-12-16 12:40:12,801 chunk: 5 line: 67 LEFT JOIN projection_storage ps
2021-12-16 12:40:12,801 chunk: 5 line: 68 ON t.table_id = ps.anchor_table_id
2021-12-16 12:40:12,801 chunk: 5 line: 69 LEFT JOIN delete_vectors dv
2021-12-16 12:40:12,801 chunk: 5 line: 70 ON dv.node_name = ps.node_name
2021-12-16 12:40:12,801 chunk: 5 line: 71 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:40:12,801 chunk: 5 line: 72 AND dv.projection_name = ps.projection_name
2021-12-16 12:40:12,801 chunk: 5 line: 73 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:40:12,801 chunk: 5 line: 74 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:40:12,802 chunk: 5 line: 75 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:40:12,802 chunk: 5 line: 76 ) row_count
2021-12-16 12:40:12,802 chunk: 5 line: 77 WHERE row_count > 0
2021-12-16 12:40:12,802 chunk: 5 line: 78 
2021-12-16 12:40:12,802 chunk: 5 line: 79 order by 1,4,3
2021-12-16 12:40:12,802 chunk: 5 line: 80 );
2021-12-16 12:40:12,802 chunk: 6 line: 0 
2021-12-16 12:40:12,802 chunk: 6 line: 1 
2021-12-16 12:40:12,802 chunk: 6 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:40:12,802 chunk: 7 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:40:12,802 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:40:12,802 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:40:12,802 chunk: 10 line: 0 select
2021-12-16 12:40:12,802 chunk: 10 line: 1 table_schema,
2021-12-16 12:40:12,802 chunk: 10 line: 2 table_name,
2021-12-16 12:40:12,802 chunk: 10 line: 3 row_count
2021-12-16 12:40:12,802 chunk: 10 line: 4 from
2021-12-16 12:40:12,802 chunk: 10 line: 5 migration.source_schemas
2021-12-16 12:40:12,802 chunk: 10 line: 6 where is_partitioned is false
2021-12-16 12:40:12,802 chunk: 10 line: 7 order by 1,3;
2021-12-16 12:40:12,802 chunk: 11 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:40:12,803 chunk: 12 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:40:12,803 chunk: 13 line: 0 
2021-12-16 12:40:12,803 chunk: 13 line: 1 copy migration.target_grants_src from local
2021-12-16 12:40:12,803 chunk: 13 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:40:12,803 chunk: 13 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:40:12,803 chunk: 13 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
2021-12-16 12:47:38,885 chunk: 0 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:47:38,886 chunk: 1 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:47:38,886 chunk: 2 line: 0 
2021-12-16 12:47:38,886 chunk: 2 line: 1 create schema if not exists migration;
2021-12-16 12:47:38,886 chunk: 3 line: 0 
2021-12-16 12:47:38,886 chunk: 3 line: 1 create table if not exists migration.target_grants (
2021-12-16 12:47:38,886 chunk: 3 line: 2 id    integer,
2021-12-16 12:47:38,886 chunk: 3 line: 3 script varchar(500),
2021-12-16 12:47:38,886 chunk: 3 line: 4 processed  boolean,
2021-12-16 12:47:38,886 chunk: 3 line: 5 ts_run_date timestamp
2021-12-16 12:47:38,886 chunk: 3 line: 6 );
2021-12-16 12:47:38,886 chunk: 4 line: 0 
2021-12-16 12:47:38,886 chunk: 4 line: 1 
2021-12-16 12:47:38,886 chunk: 4 line: 2 create table if not exists migration.target_grants_src (
2021-12-16 12:47:38,886 chunk: 4 line: 3 id    integer,
2021-12-16 12:47:38,886 chunk: 4 line: 4 script varchar(500)
2021-12-16 12:47:38,887 chunk: 4 line: 5 );
2021-12-16 12:47:38,887 chunk: 5 line: 0 
2021-12-16 12:47:38,887 chunk: 5 line: 1 select
2021-12-16 12:47:38,887 chunk: 5 line: 2 tables.table_schema,
2021-12-16 12:47:38,887 chunk: 5 line: 3 tables.table_name,
2021-12-16 12:47:38,887 chunk: 5 line: 4 is_partitioned,
2021-12-16 12:47:38,887 chunk: 5 line: 5 row_count,
2021-12-16 12:47:38,887 chunk: 5 line: 6 partition_expression
2021-12-16 12:47:38,887 chunk: 5 line: 7 from
2021-12-16 12:47:38,887 chunk: 5 line: 8 (
2021-12-16 12:47:38,887 chunk: 5 line: 9 select
2021-12-16 12:47:38,887 chunk: 5 line: 10 table_schema,
2021-12-16 12:47:38,887 chunk: 5 line: 11 table_name,
2021-12-16 12:47:38,887 chunk: 5 line: 12 partition_expression,
2021-12-16 12:47:38,887 chunk: 5 line: 13 table_definition,
2021-12-16 12:47:38,887 chunk: 5 line: 14 length(partition_expression)>0 is_partitioned
2021-12-16 12:47:38,887 chunk: 5 line: 15 
2021-12-16 12:47:38,887 chunk: 5 line: 16 from
2021-12-16 12:47:38,887 chunk: 5 line: 17 v_catalog.tables
2021-12-16 12:47:38,887 chunk: 5 line: 18 where
2021-12-16 12:47:38,888 chunk: 5 line: 19 length(table_definition) = 0 -- skip external tables
2021-12-16 12:47:38,888 chunk: 5 line: 20 and not is_system_table      -- not system table
2021-12-16 12:47:38,888 chunk: 5 line: 21 and not is_temp_table        -- not temp table
2021-12-16 12:47:38,888 chunk: 5 line: 22 ) tables
2021-12-16 12:47:38,888 chunk: 5 line: 23 natural join
2021-12-16 12:47:38,888 chunk: 5 line: 24 (
2021-12-16 12:47:38,888 chunk: 5 line: 25 select
2021-12-16 12:47:38,888 chunk: 5 line: 26 distinct table_schema, table_name
2021-12-16 12:47:38,888 chunk: 5 line: 27 from
2021-12-16 12:47:38,888 chunk: 5 line: 28 v_catalog.columns
2021-12-16 12:47:38,888 chunk: 5 line: 29 group by
2021-12-16 12:47:38,888 chunk: 5 line: 30 table_schema,
2021-12-16 12:47:38,888 chunk: 5 line: 31 table_name
2021-12-16 12:47:38,888 chunk: 5 line: 32 
2021-12-16 12:47:38,888 chunk: 5 line: 33 minus
2021-12-16 12:47:38,888 chunk: 5 line: 34 
2021-12-16 12:47:38,888 chunk: 5 line: 35 select
2021-12-16 12:47:38,888 chunk: 5 line: 36 distinct table_schema, table_name
2021-12-16 12:47:38,888 chunk: 5 line: 37 from
2021-12-16 12:47:38,888 chunk: 5 line: 38 v_catalog.columns
2021-12-16 12:47:38,889 chunk: 5 line: 39 where
2021-12-16 12:47:38,889 chunk: 5 line: 40 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:47:38,889 chunk: 5 line: 41 OR
2021-12-16 12:47:38,889 chunk: 5 line: 42 numeric_precision > 38
2021-12-16 12:47:38,889 chunk: 5 line: 43 group by
2021-12-16 12:47:38,889 chunk: 5 line: 44 table_schema,
2021-12-16 12:47:38,889 chunk: 5 line: 45 table_name
2021-12-16 12:47:38,889 chunk: 5 line: 46 
2021-12-16 12:47:38,889 chunk: 5 line: 47 
2021-12-16 12:47:38,889 chunk: 5 line: 48 ) col_types
2021-12-16 12:47:38,889 chunk: 5 line: 49 natural join
2021-12-16 12:47:38,889 chunk: 5 line: 50 (
2021-12-16 12:47:38,889 chunk: 5 line: 51 SELECT
2021-12-16 12:47:38,889 chunk: 5 line: 52 table_schema,
2021-12-16 12:47:38,889 chunk: 5 line: 53 table_name,
2021-12-16 12:47:38,889 chunk: 5 line: 54 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:47:38,889 chunk: 5 line: 55 FROM (SELECT t.table_schema,
2021-12-16 12:47:38,889 chunk: 5 line: 56 t.table_name,
2021-12-16 12:47:38,889 chunk: 5 line: 57 ps.projection_name,
2021-12-16 12:47:38,889 chunk: 5 line: 58 (SELECT MIN(is_segmented)
2021-12-16 12:47:38,889 chunk: 5 line: 59 FROM projections p
2021-12-16 12:47:38,889 chunk: 5 line: 60 WHERE p.projection_name = ps.projection_name
2021-12-16 12:47:38,889 chunk: 5 line: 61 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:47:38,889 chunk: 5 line: 62 node_cnt,
2021-12-16 12:47:38,890 chunk: 5 line: 63 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:47:38,890 chunk: 5 line: 64 FROM v_catalog.tables t
2021-12-16 12:47:38,890 chunk: 5 line: 65 LEFT JOIN projection_storage ps
2021-12-16 12:47:38,890 chunk: 5 line: 66 ON t.table_id = ps.anchor_table_id
2021-12-16 12:47:38,890 chunk: 5 line: 67 LEFT JOIN delete_vectors dv
2021-12-16 12:47:38,890 chunk: 5 line: 68 ON dv.node_name = ps.node_name
2021-12-16 12:47:38,890 chunk: 5 line: 69 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:47:38,890 chunk: 5 line: 70 AND dv.projection_name = ps.projection_name
2021-12-16 12:47:38,890 chunk: 5 line: 71 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:47:38,890 chunk: 5 line: 72 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:47:38,890 chunk: 5 line: 73 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:47:38,890 chunk: 5 line: 74 ) row_count
2021-12-16 12:47:38,890 chunk: 5 line: 75 WHERE row_count > 0
2021-12-16 12:47:38,890 chunk: 5 line: 76 
2021-12-16 12:47:38,891 chunk: 5 line: 77 order by 4,1,2,3;
2021-12-16 12:47:38,891 chunk: 6 line: 0 
2021-12-16 12:47:38,891 chunk: 6 line: 1 create table if not exists migration.source_schemas as
2021-12-16 12:47:38,891 chunk: 6 line: 2 (select
2021-12-16 12:47:38,891 chunk: 6 line: 3 tables.table_schema,
2021-12-16 12:47:38,891 chunk: 6 line: 4 tables.table_name,
2021-12-16 12:47:38,891 chunk: 6 line: 5 is_partitioned,
2021-12-16 12:47:38,891 chunk: 6 line: 6 row_count,
2021-12-16 12:47:38,891 chunk: 6 line: 7 partition_expression
2021-12-16 12:47:38,891 chunk: 6 line: 8 from
2021-12-16 12:47:38,891 chunk: 6 line: 9 (
2021-12-16 12:47:38,891 chunk: 6 line: 10 select
2021-12-16 12:47:38,891 chunk: 6 line: 11 table_schema,
2021-12-16 12:47:38,891 chunk: 6 line: 12 table_name,
2021-12-16 12:47:38,892 chunk: 6 line: 13 partition_expression,
2021-12-16 12:47:38,892 chunk: 6 line: 14 table_definition,
2021-12-16 12:47:38,892 chunk: 6 line: 15 length(partition_expression)>0 is_partitioned
2021-12-16 12:47:38,892 chunk: 6 line: 16 
2021-12-16 12:47:38,892 chunk: 6 line: 17 from
2021-12-16 12:47:38,892 chunk: 6 line: 18 v_catalog.tables
2021-12-16 12:47:38,892 chunk: 6 line: 19 where
2021-12-16 12:47:38,892 chunk: 6 line: 20 length(table_definition) = 0 -- skip external tables
2021-12-16 12:47:38,892 chunk: 6 line: 21 and not is_system_table      -- not system table
2021-12-16 12:47:38,892 chunk: 6 line: 22 and not is_temp_table        -- not temp table
2021-12-16 12:47:38,892 chunk: 6 line: 23 ) tables
2021-12-16 12:47:38,892 chunk: 6 line: 24 natural join
2021-12-16 12:47:38,892 chunk: 6 line: 25 (
2021-12-16 12:47:38,892 chunk: 6 line: 26 select
2021-12-16 12:47:38,893 chunk: 6 line: 27 distinct table_schema, table_name
2021-12-16 12:47:38,893 chunk: 6 line: 28 from
2021-12-16 12:47:38,893 chunk: 6 line: 29 v_catalog.columns
2021-12-16 12:47:38,893 chunk: 6 line: 30 group by
2021-12-16 12:47:38,893 chunk: 6 line: 31 table_schema,
2021-12-16 12:47:38,893 chunk: 6 line: 32 table_name
2021-12-16 12:47:38,893 chunk: 6 line: 33 
2021-12-16 12:47:38,893 chunk: 6 line: 34 minus
2021-12-16 12:47:38,893 chunk: 6 line: 35 
2021-12-16 12:47:38,893 chunk: 6 line: 36 select
2021-12-16 12:47:38,893 chunk: 6 line: 37 distinct table_schema, table_name
2021-12-16 12:47:38,893 chunk: 6 line: 38 from
2021-12-16 12:47:38,893 chunk: 6 line: 39 v_catalog.columns
2021-12-16 12:47:38,893 chunk: 6 line: 40 where
2021-12-16 12:47:38,893 chunk: 6 line: 41 data_type in ('time', 'timetz', 'interval')
2021-12-16 12:47:38,893 chunk: 6 line: 42 OR
2021-12-16 12:47:38,893 chunk: 6 line: 43 numeric_precision > 38
2021-12-16 12:47:38,893 chunk: 6 line: 44 group by
2021-12-16 12:47:38,893 chunk: 6 line: 45 table_schema,
2021-12-16 12:47:38,893 chunk: 6 line: 46 table_name
2021-12-16 12:47:38,893 chunk: 6 line: 47 
2021-12-16 12:47:38,894 chunk: 6 line: 48 
2021-12-16 12:47:38,894 chunk: 6 line: 49 ) col_types
2021-12-16 12:47:38,894 chunk: 6 line: 50 natural join
2021-12-16 12:47:38,894 chunk: 6 line: 51 (
2021-12-16 12:47:38,894 chunk: 6 line: 52 SELECT
2021-12-16 12:47:38,894 chunk: 6 line: 53 table_schema,
2021-12-16 12:47:38,894 chunk: 6 line: 54 table_name,
2021-12-16 12:47:38,894 chunk: 6 line: 55 NVL(CASE WHEN NOT is_segmented THEN (row_count / node_cnt)::INT ELSE row_count END, 0) row_count
2021-12-16 12:47:38,894 chunk: 6 line: 56 FROM (SELECT t.table_schema,
2021-12-16 12:47:38,894 chunk: 6 line: 57 t.table_name,
2021-12-16 12:47:38,894 chunk: 6 line: 58 ps.projection_name,
2021-12-16 12:47:38,894 chunk: 6 line: 59 (SELECT MIN(is_segmented)
2021-12-16 12:47:38,894 chunk: 6 line: 60 FROM projections p
2021-12-16 12:47:38,894 chunk: 6 line: 61 WHERE p.projection_name = ps.projection_name
2021-12-16 12:47:38,894 chunk: 6 line: 62 AND p.projection_schema = ps.anchor_table_schema) is_segmented,
2021-12-16 12:47:38,894 chunk: 6 line: 63 node_cnt,
2021-12-16 12:47:38,894 chunk: 6 line: 64 SUM(ps.row_count - NVL(dv.deleted_row_count, 0)) row_count
2021-12-16 12:47:38,894 chunk: 6 line: 65 FROM v_catalog.tables t
2021-12-16 12:47:38,895 chunk: 6 line: 66 LEFT JOIN projection_storage ps
2021-12-16 12:47:38,895 chunk: 6 line: 67 ON t.table_id = ps.anchor_table_id
2021-12-16 12:47:38,895 chunk: 6 line: 68 LEFT JOIN delete_vectors dv
2021-12-16 12:47:38,895 chunk: 6 line: 69 ON dv.node_name = ps.node_name
2021-12-16 12:47:38,895 chunk: 6 line: 70 AND dv.schema_name = ps.anchor_table_schema
2021-12-16 12:47:38,895 chunk: 6 line: 71 AND dv.projection_name = ps.projection_name
2021-12-16 12:47:38,895 chunk: 6 line: 72 CROSS JOIN (SELECT COUNT(1) node_cnt FROM nodes WHERE node_type = 'PERMANENT') n
2021-12-16 12:47:38,895 chunk: 6 line: 73 GROUP BY 1, 2, 3, 4, 5
2021-12-16 12:47:38,895 chunk: 6 line: 74 LIMIT 1 OVER(PARTITION BY t.table_schema, t.table_name ORDER BY 1)) foo
2021-12-16 12:47:38,896 chunk: 6 line: 75 ) row_count
2021-12-16 12:47:38,896 chunk: 6 line: 76 WHERE row_count > 0
2021-12-16 12:47:38,896 chunk: 6 line: 77 
2021-12-16 12:47:38,896 chunk: 6 line: 78 order by 1,4,3
2021-12-16 12:47:38,896 chunk: 6 line: 79 );
2021-12-16 12:47:38,896 chunk: 7 line: 0 
2021-12-16 12:47:38,896 chunk: 7 line: 1 
2021-12-16 12:47:38,896 chunk: 7 line: 2 select count(*) from ehr.encounte_src;
2021-12-16 12:47:38,896 chunk: 8 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:47:38,896 chunk: 9 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:47:38,896 chunk: 10 line: 0 select count(*) from ehr.encounters_src;
2021-12-16 12:47:38,896 chunk: 11 line: 0 select
2021-12-16 12:47:38,896 chunk: 11 line: 1 table_schema,
2021-12-16 12:47:38,896 chunk: 11 line: 2 table_name,
2021-12-16 12:47:38,896 chunk: 11 line: 3 row_count
2021-12-16 12:47:38,897 chunk: 11 line: 4 from
2021-12-16 12:47:38,897 chunk: 11 line: 5 migration.source_schemas
2021-12-16 12:47:38,897 chunk: 11 line: 6 where is_partitioned is false
2021-12-16 12:47:38,897 chunk: 11 line: 7 order by 1,3;
2021-12-16 12:47:38,897 chunk: 12 line: 0 truncate table migration.target_grants_src;
2021-12-16 12:47:38,897 chunk: 13 line: 0 -- truncate table migration.grants_rejects;
2021-12-16 12:47:38,897 chunk: 14 line: 0 
2021-12-16 12:47:38,897 chunk: 14 line: 1 copy migration.target_grants_src from local
2021-12-16 12:47:38,897 chunk: 14 line: 2 '/Users/mbowen/devcode/PYDEV/ripper/out.csv'
2021-12-16 12:47:38,897 chunk: 14 line: 3 WITH DELIMITER ',' ENCLOSED BY '"' rejectmax 0
2021-12-16 12:47:38,897 chunk: 14 line: 4 REJECTED DATA AS TABLE migration.grants_rejects;
